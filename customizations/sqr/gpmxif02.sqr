!***********************************************************************
!  GPMXIF02:  Subsidy Factor Report                                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:50:37                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#define c1 1
#define c1a 5
#define c1b 14
#define c2 25
#define c3 36
#define c4 47
#define c5 58
#define c6 69
#define c7 80
#define c8 91
#define c9 104
#define c10 113
#define c11 124
#define c12 135
#define c13 146
#define c14 157
#define c15a 157
#define c15b 165

#include 'setenv.sqc'   !Set environment
#Include 'setup31.sqc'  !printer and page-size initialization

begin-report
!    do Declare-Printer
    do Init-DateTime
    do Init-Number
    do Stdapi-Init
    do Get-Current-DateTime
    do Report-Translation
    do Select-Parameters
    do Init-Report
    do Process-Main
    do Stdapi-Term
    do Reset
end-report


begin-procedure Init-Report
    move 'GPMXIF02' to $ReportID
    move $TTitle1 to $ReportTitle
    display $ReportID
    display $ReportTitle
    date-time () hh:mi:ss &timeBegan
    display 'Report Began: ' noline
    display &timeBegan
end-procedure


begin-heading 8
    uppercase $TTitle1
    print 'PeopleSoft'     (1,) center
    print $TTitle01        (+1,40)
    print $TReport         (3,1)
    print $ReportID        (0,{c1b})
    print $TCompany        (4,1)
    print $Company         (0,{c1b})
    print '    '           ()
    print $CompanyName     ()
    print $TYear           (5,1)
    print $Year            (0,{c1b})

    print $TPage           (3,{c9})
    page-number            (0,{c10})
    print $THour           (4,{c9})
    print $ReportTime      (0,{c10})
    print $TDate           (5,{c9})
    print $ReportDate      (0,{c10})
    print '='              (+1,1,122)fill
    print  $TConcept       (+1,05)
    print  $TPin_Name      ( 0,35)
    print  $TTitle02       ( 0,70)
    print  $TTitle04       ( 0,100)
    print '='              (+1,1,122)fill
end-heading 8

!**************************************
begin-procedure Select-Parameters
!**************************************
begin-select
RC.COMPANY
RC.GPMX_BALANCE_YEAR

   let $Company    = rtrim(&RC.COMPANY, ' ')
   let #Year       = &RC.GPMX_BALANCE_YEAR
   let $Year       = to_char(&RC.GPMX_BALANCE_YEAR)


   let $AcmFrmDt   =  $Year  || '-' || '01-01'
   do convert-from-dtu-date($AcmFrmDt,$AcmFrmDt)
   let $AcmThrDt   =  $Year  || '-' || '12-31'
   do convert-from-dtu-date($AcmThrDt,$AcmThrDt)

FROM  PS_GPMX_RC_SUB_FCT RC
WHERE RC.OPRID = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
  do Get-Company-Data-Mex
end-procedure Select-Parameters

!**************************************
begin-procedure Process-Main
!show '** Process-Main **'
!**************************************
  do Process-Both
  do Process-Tax
  do Process-Earn
  do Print-Company-Total
end-procedure Process-Main

!**************************************
begin-procedure Process-Earn
!show '** Process-Earn **'
!**************************************
!Let #TotalEar = 0
!Let #TotalTax= 0
Let $PinName = ''

begin-select
B.PIN_NUM
B.PIN_NM
SUM(A.CALC_RSLT_VAL + A.CALC_ADJ_VAL)         &A.CALC_RSLT

  Let #PinNumber =  &B.PIN_NUM
  do  Get-Pin-Descr
  do  FILL_LEADING
  
  print $pin_nm           (+1, 05)
  print $pin_descr        ( 0, 35)
  print &A.CALC_RSLT      ( 0, 100) edit b999,999,999.99

  Let #TotalEar = #TotalEar +  &A.CALC_RSLT
  

FROM PS_GP_RSLT_ED_VW   A
    ,PS_GP_PIN          B
    ,PS_JOB             J
    ,PS_GP_CAL_RUN      C 
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S

WHERE J.COMPANY         = $Company
AND   J.GP_PAYGROUP     = A.GP_PAYGROUP
AND   J.GP_PAYGROUP     = P.GP_PAYGROUP
AND   J.GP_PAYGROUP     = S.GP_PAYGROUP
AND   J.EMPLID          = A.EMPLID
AND   J.EMPLID          = P.EMPLID
AND   J.EMPLID          = S.EMPLID 
AND   J.EMPL_RCD        = A.EMPL_RCD
AND   J.EMPL_RCD        = P.EMPL_RCD
AND   J.EMPL_RCD        = S.EMPL_RCD
AND   J.EFFDT           = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $AcmThrDt )
AND   J.EFFSEQ            = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
AND   A.CAL_RUN_ID        = C.CAL_RUN_ID
AND   A.CAL_RUN_ID        = P.CAL_RUN_ID 
AND   P.CAL_RUN_ID    = S.CAL_RUN_ID 
AND   A.CAL_ID            = P.CAL_ID
AND   P.CAL_ID        = S.CAL_ID     
AND   A.ORIG_CAL_RUN_ID   = P.ORIG_CAL_RUN_ID      
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID 
AND   P.CALC_TYPE     = 'P'
AND   C.RUN_FINALIZED_IND  = 'Y'
AND   A.SLICE_END_DT     <= $AcmThrDt
AND   A.SLICE_BGN_DT     >= $AcmFrmDt  
AND   P.RSLT_VER_NUM = (SELECT MAX(PS.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PS
                           WHERE PS.EMPLID    = P.EMPLID
                           AND PS.CAL_RUN_ID  = P.CAL_RUN_ID
                           AND PS.EMPL_RCD    = P.EMPL_RCD
                           AND PS.GP_PAYGROUP = P.GP_PAYGROUP
                           AND PS.CAL_ID      = P.CAL_ID)                 
AND   S.RSLT_SEG_NUM = (SELECT MAX(ST.RSLT_SEG_NUM) 
                           FROM PS_GP_PYE_SEG_STAT ST
                           WHERE ST.EMPLID      = S.EMPLID
                           AND   ST.CAL_RUN_ID  = S.CAL_RUN_ID
                           AND   ST.EMPL_RCD    = S.EMPL_RCD
                           AND   ST.GP_PAYGROUP = S.GP_PAYGROUP
                           AND   ST.CAL_ID      = S.CAL_ID
                           AND   ST.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID)
AND   P.RSLT_REV_NUM = 1
AND   P.PYE_PRC_IND  = 'N'
AND   P.SEL_STAT     = 'A'
AND   P.SEL_ACTION   = 'C'
AND   S.CALC_ACTION       = 'C'
AND   A.PIN_NUM           = B.PIN_NUM
AND EXISTS ( SELECT 'X'
                   FROM PS_GPMX_SUB_FACEAR D
                   WHERE D.COMPANY = $Company
                   AND   D.GPMX_BALANCE_YEAR = #Year
                   AND A.PIN_NUM = D.GPMX_PIN_ERN_NUM)
AND NOT EXISTS (SELECT 'X'
                   FROM PS_GPMX_SUB_FACTAX DD
                   WHERE DD.COMPANY = $Company
                   AND   DD.GPMX_BALANCE_YEAR = #Year
                   AND   DD.GPMX_PIN_TAX_NUM= A.PIN_NUM)   
AND A.PIN_TYPE = 'ER'
GROUP BY B.PIN_NUM, B.PIN_NM
ORDER BY B.PIN_NM
end-select
end-procedure Process-Earn

!**************************************
begin-procedure Process-Tax
!show '*** Process-Tax ***'
!**************************************
Let #RslExent = 0


begin-select
E.PIN_NUM
E.PIN_NM
SUM(FF.CALC_RSLT_VAL + FF.CALC_ADJ_VAL)         &FF.CALC_RSLT
       
    Let #PinNumber =  &E.PIN_NUM
    do  Get-Pin-Descr
    do  FILL_LEADING
  
    print $pin_nm             (+1,05)
    print $pin_descr          ( 0,35)
    print &FF.CALC_RSLT       ( 0,70) edit b999,999,999.99

    Let #TotalTax = #TotalTax +  &FF.CALC_RSLT

FROM PS_GP_RSLT_ED_VW   FF
    ,PS_GP_PIN          E 
    ,PS_JOB             J
    ,PS_GP_CAL_RUN      C 
    ,PS_GP_PYE_PRC_STAT PS1
    ,PS_GP_PYE_SEG_STAT ST1
WHERE J.COMPANY         = $Company
AND   J.GP_PAYGROUP     = FF.GP_PAYGROUP
AND   J.GP_PAYGROUP     = PS1.GP_PAYGROUP
AND   J.GP_PAYGROUP     = ST1.GP_PAYGROUP
AND   J.EMPLID          = FF.EMPLID
AND   J.EMPLID          = PS1.EMPLID
AND   J.EMPLID          = ST1.EMPLID 
AND   J.EMPL_RCD        = FF.EMPL_RCD
AND   J.EMPL_RCD        = PS1.EMPL_RCD
AND   J.EMPL_RCD        = ST1.EMPL_RCD
AND   J.EFFDT           = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $AcmThrDt )
AND   J.EFFSEQ            = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
AND   FF.CAL_RUN_ID        = C.CAL_RUN_ID
AND   FF.CAL_RUN_ID        = PS1.CAL_RUN_ID 
AND   PS1.CAL_RUN_ID    = ST1.CAL_RUN_ID 
AND   FF.CAL_ID            = PS1.CAL_ID
AND   PS1.CAL_ID        = ST1.CAL_ID     
AND   FF.ORIG_CAL_RUN_ID   = PS1.ORIG_CAL_RUN_ID      
AND   PS1.ORIG_CAL_RUN_ID = ST1.ORIG_CAL_RUN_ID 
AND   PS1.CALC_TYPE     = 'P'
AND   C.RUN_FINALIZED_IND  = 'Y'
AND   FF.SLICE_END_DT     <= $AcmThrDt
AND   FF.SLICE_BGN_DT     >= $AcmFrmDt  
AND   PS1.RSLT_VER_NUM = (SELECT MAX(PST1.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PST1
                           WHERE PST1.EMPLID    = PS1.EMPLID
                           AND PST1.CAL_RUN_ID  = PS1.CAL_RUN_ID
                           AND PST1.EMPL_RCD    = PS1.EMPL_RCD
                           AND PST1.GP_PAYGROUP = PS1.GP_PAYGROUP
                           AND PST1.CAL_ID      = PS1.CAL_ID)                 
AND   ST1.RSLT_SEG_NUM = (SELECT MAX(ST.RSLT_SEG_NUM) 
                           FROM PS_GP_PYE_SEG_STAT ST
                           WHERE ST.EMPLID      = ST1.EMPLID
                           AND   ST.CAL_RUN_ID  = ST1.CAL_RUN_ID
                           AND   ST.EMPL_RCD    = ST1.EMPL_RCD
                           AND   ST.GP_PAYGROUP = ST1.GP_PAYGROUP
                           AND   ST.CAL_ID      = ST1.CAL_ID
                           AND   ST.ORIG_CAL_RUN_ID = ST1.ORIG_CAL_RUN_ID)
AND   PS1.RSLT_REV_NUM = 1
AND   PS1.PYE_PRC_IND  = 'N'
AND   PS1.SEL_STAT     = 'A'
AND   PS1.SEL_ACTION   = 'C'
AND   ST1.CALC_ACTION       = 'C'
AND   FF.PIN_NUM           = E.PIN_NUM
AND   FF.SLICE_BGN_DT     >= $AcmFrmDt
AND NOT EXISTS (SELECT 'X'
                   FROM PS_GPMX_SUB_FACEAR DD
                   WHERE DD.COMPANY = $Company
                   AND   DD.GPMX_BALANCE_YEAR = #Year
                AND DD.GPMX_PIN_ERN_NUM = E.PIN_NUM)
                !HIRE
AND EXISTS (SELECT 'X'
                   FROM PS_GPMX_SUB_FACTAX DD
                   WHERE DD.COMPANY = $Company
                   AND   DD.GPMX_BALANCE_YEAR = #Year
                   AND   DD.GPMX_PIN_TAX_NUM= E.PIN_NUM)                
AND   FF.PIN_TYPE  = 'ER'
GROUP BY E.PIN_NUM, E.PIN_NM
ORDER BY E.PIN_NM
end-select
end-procedure Process-Tax

!**************************************
begin-procedure Process-Both
!show '** Process-Both **'
!**************************************
Let #RslExent = 0
Let #TotalEar = 0

begin-select
EE.PIN_CODE                   &EE.PIN_CODE
EE.PIN_NUM
EE.PIN_NM
SUM(FFF.CALC_RSLT_VAL + FFF.CALC_ADJ_VAL)         &FFF.CALC_RSLT


  Let #PinNumber =  &EE.PIN_NUM
  do  Get-Pin-Descr
  do  FILL_LEADING  

  print $pin_nm              (+1,05)
  print $pin_descr           ( 0,35)
  If rtrim(&EE.PIN_CODE, ' ') = 'SUELDO MEX'
   do Process-Ausent
   Let #Tot = &FFF.CALC_RSLT - #TotalAusent
  Else
   Let #Tot = &FFF.CALC_RSLT
  End-if
  print #Tot  ( 0, 70) edit b999,999,999.99
  print #Tot  ( 0, 100) edit b999,999,999.99
  
  Let #TotalTax = #TotalTax +  #Tot
  Let #TotalEar = #TotalEar +  #Tot

FROM PS_GP_RSLT_ED_VW   FFF
    ,PS_GP_PIN          EE 
    ,PS_JOB             J
    ,PS_GP_CAL_RUN      C 
    ,PS_GP_PYE_PRC_STAT PS1
    ,PS_GP_PYE_SEG_STAT ST1
WHERE J.COMPANY         = $Company
AND   J.GP_PAYGROUP     = FFF.GP_PAYGROUP
AND   J.GP_PAYGROUP     = PS1.GP_PAYGROUP
AND   J.GP_PAYGROUP     = ST1.GP_PAYGROUP
AND   J.EMPLID          = FFF.EMPLID
AND   J.EMPLID          = PS1.EMPLID
AND   J.EMPLID          = ST1.EMPLID 
AND   J.EMPL_RCD        = FFF.EMPL_RCD
AND   J.EMPL_RCD        = PS1.EMPL_RCD
AND   J.EMPL_RCD        = ST1.EMPL_RCD
AND   J.EFFDT           = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $AcmThrDt )
AND   J.EFFSEQ            = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
AND   FFF.CAL_RUN_ID        = C.CAL_RUN_ID
AND   FFF.CAL_RUN_ID        = PS1.CAL_RUN_ID 
AND   PS1.CAL_RUN_ID    = ST1.CAL_RUN_ID 
AND   FFF.CAL_ID            = PS1.CAL_ID
AND   PS1.CAL_ID        = ST1.CAL_ID     
AND   FFF.ORIG_CAL_RUN_ID   = PS1.ORIG_CAL_RUN_ID      
AND   PS1.ORIG_CAL_RUN_ID = ST1.ORIG_CAL_RUN_ID 
AND   PS1.CALC_TYPE     = 'P'
AND   C.RUN_FINALIZED_IND  = 'Y'
AND   FFF.SLICE_END_DT     <= $AcmThrDt
AND   FFF.SLICE_BGN_DT     >= $AcmFrmDt  
AND   PS1.RSLT_VER_NUM = (SELECT MAX(PST1.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PST1
                           WHERE PST1.EMPLID    = PS1.EMPLID
                           AND PST1.CAL_RUN_ID  = PS1.CAL_RUN_ID
                           AND PST1.EMPL_RCD    = PS1.EMPL_RCD
                           AND PST1.GP_PAYGROUP = PS1.GP_PAYGROUP
                           AND PST1.CAL_ID      = PS1.CAL_ID)                 
AND   ST1.RSLT_SEG_NUM = (SELECT MAX(ST.RSLT_SEG_NUM) 
                           FROM PS_GP_PYE_SEG_STAT ST
                           WHERE ST.EMPLID      = ST1.EMPLID
                           AND   ST.CAL_RUN_ID  = ST1.CAL_RUN_ID
                           AND   ST.EMPL_RCD    = ST1.EMPL_RCD
                           AND   ST.GP_PAYGROUP = ST1.GP_PAYGROUP
                           AND   ST.CAL_ID      = ST1.CAL_ID
                           AND   ST.ORIG_CAL_RUN_ID = ST1.ORIG_CAL_RUN_ID)
AND   PS1.RSLT_REV_NUM = 1
AND   PS1.PYE_PRC_IND  = 'N'
AND   PS1.SEL_STAT     = 'A'
AND   PS1.SEL_ACTION   = 'C'
AND   ST1.CALC_ACTION       = 'C'
AND   FFF.PIN_NUM           = EE.PIN_NUM
AND   FFF.SLICE_BGN_DT     >= $AcmFrmDt
AND EXISTS (SELECT 'X'
                   FROM PS_GPMX_SUB_FACEAR DTAX
                   WHERE DTAX.COMPANY = $Company
                   AND   DTAX.GPMX_BALANCE_YEAR = #Year
                   AND FFF.PIN_NUM= DTAX.GPMX_PIN_ERN_NUM)
AND EXISTS (SELECT 'X'
                   FROM PS_GPMX_SUB_FACTAX DD
                   WHERE DD.COMPANY = $Company
                   AND   DD.GPMX_BALANCE_YEAR = #Year
                   AND   DD.GPMX_PIN_TAX_NUM= FFF.PIN_NUM)    
AND FFF.PIN_TYPE = 'ER'                   
GROUP BY EE.PIN_CODE, EE.PIN_NUM, EE.PIN_NM
ORDER BY EE.PIN_NM
end-select
end-procedure Process-Both

!**************************************
begin-procedure Process-Ausent
!show '** Process-Ausent **'
!**************************************
Let $PinName = ''
begin-select
BB.PIN_NUM                &BB.PIN_NUM
BB.PIN_NM
SUM(AA.CALC_RSLT_VAL + AA.USER_ADJ_VAL)     &AA.CALC_RSLT
 Let #TotalAusent = #TotalAusent +  &AA.CALC_RSLT
FROM PS_GP_RSLT_ACUM_VW   AA
    ,PS_GP_PIN            BB
    ,PS_JOB               JJ
    ,PS_GP_CAL_RUN        CC 
WHERE JJ.COMPANY           = $Company
AND   JJ.GP_PAYGROUP       = AA.GP_PAYGROUP
AND   JJ.EMPLID            = AA.EMPLID
AND   JJ.EMPL_RCD          = AA.EMPL_RCD
AND   JJ.EFFDT             = (SELECT MAX(J1.EFFDT) 
             FROM PS_JOB J1
             WHERE J1.EMPLID   = JJ.EMPLID
             AND   J1.EMPL_RCD = JJ.EMPL_RCD
             AND   J1.EFFDT   <= $AcmThrDt)
AND   JJ.EFFSEQ            = (SELECT MAX(J2.EFFSEQ) 
             FROM PS_JOB J2
             WHERE J2.EMPLID = JJ.EMPLID
             AND   J2.EMPL_RCD = JJ.EMPL_RCD
             AND   J2.EFFDT = JJ.EFFDT)
AND   AA.CAL_RUN_ID        = CC.CAL_RUN_ID
AND   CC.RUN_FINALIZED_IND = 'Y'
AND   AA.PIN_NUM           = BB.PIN_NUM
AND   BB.PIN_CODE          = 'IMPORT AUSENT ANUA MEX'
AND   AA.SLICE_END_DT     <= $AcmThrDt
AND   AA.SLICE_BGN_DT     = (SELECT MAX(SLICE_BGN_DT) FROM PS_GP_RSLT_ACUM_VW AAB
WHERE AA.PIN_NUM = AAB.PIN_NUM
AND AA.GP_PAYGROUP = AAB.GP_PAYGROUP
AND AA.EMPLID = AAB.EMPLID
AND AA.EMPL_RCD = AAB.EMPL_RCD)
AND   AA.SEQ_NUM8 = (SELECT MAX(SEQ_NUM8) FROM PS_GP_RSLT_ACUM_VW AAA
WHERE 
AA.EMPLID = AAA.EMPLID AND 
AA.PIN_NUM = AAA.PIN_NUM
AND AA.SLICE_BGN_DT = AAA.SLICE_BGN_DT
)
GROUP BY BB.PIN_NUM, BB.PIN_NM
ORDER BY BB.PIN_NM
end-select
end-procedure Process-Ausent

begin-procedure Print-Company-Total
   print $TTotal           (+3,{c1a}) Bold
   print #TotalTax         (0,70)   edit b999,999,999.99 Bold
   print #TotalEar         (0,100)  edit b999,999,999.99 Bold
end-procedure Print-Company-Total

begin-procedure Report-Translation
 do Init_Report_Translation ('GPMXIF02', $prcs_language_cd)
 do Append_Report_Translation ('GPMXIF02')
 do Get_Field_Information ('GPMXIF02', 'COMPANY',           $TCompany,           #DW)
 do Get_Field_Information ('GPMXIF02', 'DATE',              $TDate,              #DW)
 do Get_Field_Information ('GPMXIF02', 'HOUR',              $THour,              #DW)
 do Get_Field_Information ('GPMXIF02', 'PAGE',              $TPage,              #DW)
 do Get_Field_Information ('GPMXIF02', 'PIN_NAME',          $TPin_Name,          #DW)
 do Get_Field_Information ('GPMXIF02', 'CONCEPT',           $TConcept,           #DW)
 do Get_Field_Information ('GPMXIF02', 'REPORT',            $TReport,            #DW)
 do Get_Field_Information ('GPMXIF02', 'TITLE1',            $TTitle01,           #DW)
 do Get_Field_Information ('GPMXIF02', 'TITLE2',            $TTitle02,           #DW)
 do Get_Field_Information ('GPMXIF02', 'TITLE3',            $TTitle03,           #DW)
 do Get_Field_Information ('GPMXIF02', 'TITLE4',            $TTitle04,           #DW)
 do Get_Field_Information ('GPMXIF02', 'YEAR',              $TYear,              #DW)
 do Get_Field_Information ('GPMXIF02', 'TOTAL',             $TTotal,             #DW)
end-procedure Report-Translation

BEGIN-PROCEDURE FILL_LEADING
  let $NameOut = ''
  let #Len = Length($PinName)
  let #I  = 1

  while #I <= #Len
    let $Test_Char = Substr($PinName, #I, 1)
    if $Test_Char <> '_'
       let $NameOut = $NameOut || $Test_Char
    else
       let #I = #Len
    end-if
    add 1 to #I
  end-while
  let $PinName = $NameOut
END-PROCEDURE FILL_LEADING

begin-procedure  Get-Pin-Descr
let $pin_descr = ''
let $pin_nm = ''
begin-select
PD.DESCR
PD.PIN_NM
PD.PIN_CODE

  MOVE &PD.PIN_NM TO $pin_nm
  MOVE &PD.DESCR  TO $pin_descr
  MOVE &PD.PIN_CODE TO $pin_code

FROM PS_GP_PIN PD
WHERE PD.PIN_NUM = #PinNumber
end-select
begin-select
PDL.DESCR

  MOVE &PDL.DESCR TO $pin_descr

FROM PS_GP_PIN_LANG PDL
WHERE PDL.PIN_NUM = #PinNumber
and   PDL.LANGUAGE_CD = $curr_language_cd
end-select
end-procedure   Get-Pin-Descr

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields
