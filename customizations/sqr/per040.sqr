!***********************************************************************
! PER040:  IPEDS-S Report -- Federally specified format                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:13:55:29                                 !
!       $Release:  HR92                                                !
!      $Revision:  107                                                 !
!                                                                      *
!  $Last Modified: July 13 2000 - Temp Alien to be designated as       *
!         Citizenship code 4 again.                                    *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************


#include 'setenv.sqc'           !Set environment
#Include 'setup32.sqc'          !printer and page-size initialization Landscape


!***********************************************************************
! Begin Report
!***********************************************************************
begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


!***********************************************************************
! Heading
!***********************************************************************
begin-heading 14

  #include 'stdhdg01.sqc'                   ! for standard heading
  print &E.Descr                                 (+2,1)
  print $Address1                                (+1,1)
  print $City                                    (+1,1)

 if $G ='x'
  print '9-Month'              (+4,26,10)    
  print '|'                    (,+1,1) 
  print '10-Month'             (,39,10)   
  print '|'                    (,+1,1)
  print '11-Month'             (,52,10)
  print '|'                    (,+1,1)  
  print '12-Month'             (,65 ,10)
  print '|'                    (,+1,1)
  print 'Total Emp.'           (,78,12)  
  print '|'                    (,+1,1)
  print 'Total No.'           (,94,12)
  print '|'                    (,+1,1)
  print 'Total Instr'          (,109,12)
  print '|'                    (,+1,1)
  print 'Balance'              (,126,)
  print '|'                    (,+2,1)
  print 'Salary Outlays'       (,140,21) 
  print '|'                    (,159,1)
  print 'Weighted Average'         (,165)
  
  print 'Job'                                   (+1,1,4) BOLD
  print 'Categories'                            (, 5,12) BOLD
  print 'Contract'            (,26,10)
  print '|'                   (,+1,1)
  print 'Contract'               (,39,10)
  print '|'                    (,+1,1)
  print 'Contract'             (,52,10)
  print '|'                     (,+1,1)  
  print 'Contract'          (,65 ,10)
  print '|'                    (,+1,1)
  print 'For Salary'            (,78,12)
  print '|'                     (,+1,1)
  print 'Of Months'          (,94,12)
  print '|'                    (,+1,1)
  print 'Staff From'          (,109,12)
  print '|'(,+1,1)
  print '|'        (,135,1)
  print '|'   (,159,1) 
  print 'Salary Per Month'      (,165)
  
  print '|'                   (+1,37,1)
  print '|'                   (,50,1)
  print '|'                     (,63,1)  
  print '|'                    (,76,1)
  print 'Reporting'            (,78,12)
  print '|'                     (,+1,1)
  print '|'    (,107,1)
  print 'Part-A'          (,109,12)
  Print '|' (,+1)
  print '|'        (,135,1)
  print '|'   (,159,1) 
  
  else
  
  if $G1 = 'x'
  
  print 'Job'                                   (+4,51,4)  BOLD
  print 'Categories'                            (, 56,12) BOLD 
  print 'Number of Staff'    (,94,15)
  print '|'  (,+1,1)
  print 'Total Salary Outlays' (,112,21)
  print '|' (,+1,1)
  
  else
  
  print ' Non-Res.'                              (+4,47,9)
  print '|'                                      (,+1,1)
  print 'Hispanic'                               (, 60,9)    
  print '|'                                      (,+1,1)
  print 'Amer-Ind'                               (, 73,9)
  print '|'                                      (,+1,1)
  print ' Asian  '                               (, 86,9)
  print '|'                                      (,+1,1)
  print 'Black or'                               (, 99,9)
  print '|'                                      (,+1,1)
  print 'Hawaiian'                               (, 112,9)
  print '|'                                      (,+1,1)
  print ' White  '                               (, 125,9)
  print '|'                                      (,+1,1)
  print 'Two or  '                               (, 138,9)
  print '|'                                      (,+1,1)
  print 'Race/Eth'                               (, 151,9)
  print '|'                                      (,+1,1)
  print 'Grand Total'                            (, 164)

  print 'Job'                                   (+1,1,4)  BOLD
  print 'Categories'                            (, 5,12)  BOLD
  print '  Alien '                               (, 47,9)
  print '|'                                      (,+1,1)
  print 'or Latino'                              (, 60,9)
  print '|'                                      (,+1,1)
  print 'or Alaskan'                             (, 72,10)
  print '|'                                      (,+1,1)
  print '        '                               (, 86,9)
  print '|'                                      (,+1,1)
  print 'Afri-Amer'                              (, 99,10)
  print '|'                                      (,+0,1)
  print 'or Pac Isl'                             (, 111,10)
  print '|'                                      (,+1,1)
  print '        '                               (, 125,9)
  print '|'                                      (,+1,1)
  print 'More Races'                             (, 137,10)
  print '|'                                      (,+1,1)
  print 'Unknown '                               (, 151,9)
  print '|'                                      (,+1,1)
  print ' All Emps'                              (,164)

  print 'Men'                                    (+1,47,3)
  print 'Women'                                  (,51,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,60,3)
  print 'Women'                                  (,64,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,73,3)
  print 'Women'                                  (,77,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,86,3)
  print 'Women'                                  (,90,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,99,3)
  print 'Women'                                  (,103,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,112,3)
  print 'Women'                                  (,116,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,125,3)
  print 'Women'                                  (,129,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,138,3)
  print 'Women'                                  (,142,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,151,3)
  print 'Women'                                  (,155,5)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,164,3)
  print 'Women'                                  (,170,5)
  print 'M+W'                                    (,177)
                 
 end-if
 end-if  
 

end-heading


!***********************************************************************
! Init Report
!***********************************************************************
begin-procedure Init-Report

  move 'PER040.SQR' to $ReportID
  move 'IPEDS-S Integrated PostSecondary Education Data System' to $ReportTitle

  do Init-Array
  do Stdapi-Init

  if $prcs_process_instance = ''
    input $Establishment 'Please Enter A Valid Establshment ID' maxlen=5 type=char
    do Ask-Calendar-Year
  else
    do Select-Parameters
  end-if

  let $ReportTitle = $Calendar_Year || ' ' || $ReportTitle

  move 0 to #part_l
  move 0 to #part_g
  move 0 to #part_g1
  move 0 to #no_new_hires

end-procedure


begin-procedure Get-Values

  do Get-Calendar-Year
  let $Establishment  = RTRIM(&RUN_CNTL_HR.ESTABID, ' ')

end-procedure

!***********************************************************************
! Array to hold the Report Detail lines
! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
! Report-Detail(#) EEOCOL(#) stores the number of employees as
!   classified by Ethnic Group
! Report-Detail(#) StartCol(#) stores the physical column number
!   for printing
!***********************************************************************

begin-procedure Init-Array

  create-array name=Report-Detail size=153
              field=EEOCOL:number:19
              field=StartCol:number:19
  put 6 45 51 58 64 71 77 84 90 97 103 110 116 123 129 136 142 149 155 into Report-Detail(0) -
  StartCol(0) StartCol(1) StartCol(2) StartCol(3) StartCol(4) StartCol(5) -
  StartCol(6) StartCol(7) StartCol(8) StartCol(9) StartCol(10) StartCol(11) -
  StartCol(12) StartCol(13) StartCol(14) StartCol(15) StartCol(16) StartCol(17) -
  StartCol(18) 
  
  !***********************************************************************
  ! Array to hold the Report Detail lines for Part G
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  ! Report-Detail(#) RANKCOL(#) stores the number of employees as
  !   classified by Ethnic Group
  ! Report-Detail(#) StartCol(#) stores the physical column number
  !   for printing
  !***********************************************************************
   
   create-array name=Report-Detail-G size=115
                field=RANKCOL:number:5
                field=StCol:number:5
   put 6 26 39 52 65   into Report-Detail-G(0) -
   StCol(0) StCol(1) StCol(2) StCol(3) StCol(4)    
  
  !***********************************************************************
  ! Array to hold the Salary lines for Part G
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !*********************************************************************** 
  
   create-array name=Report-Detail-sal size=115
                   field=salary:number:15
                   
  !***********************************************************************
  ! Array to hold the Total lines for Part G
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !***********************************************************************                   

    create-array name=Report-Detail-Total size=115
                   field=Total:number:10  
                   
  !***********************************************************************
  ! Array to hold the Weighted Avg Salary lines for Part G
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !***********************************************************************                   

    create-array name=Weight-sal size=115
                   field=Weight-sal:number:15 

  !***********************************************************************
  ! Array to hold the Total No. of Months lines for Part G
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !***********************************************************************                    
                   
    create-array name=Total-Month size=115
                   field=Total-Month:number:15 
                   
  !***********************************************************************
  ! Array to hold the Part A count for Part G
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !***********************************************************************                    
                   
     create-array name=Part-A-count size=115
                   field=Part-A-count:number:15
                   
  !***********************************************************************
  ! Array to hold the Balance for Part G
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !***********************************************************************                    

     create-array name=Balance size=115
                   field=Balance:number:10  

  !***********************************************************************
  ! Array to hold the Salary for Part G1
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !***********************************************************************                    
                   
    create-array name=Report-Detail-sal1 size=130
                   field=salary:number:19

  !***********************************************************************
  ! Array to hold the Staff for Part G1
  ! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
  !***********************************************************************                    
                   
    create-array name=Report-Detail-G1 size=130
                   field=Staff:number:15                   


!***********************************************************************
! Line Descriptions
! Create Array to hold line Descriptions
!***********************************************************************
  create-array name=LineDescription size=153
              field=Description:char


 PUT 'Faculty With Tenure:'                          INTO LineDescription(1) Description
 PUT 'Professors'                                    INTO LineDescription(2) Description
 PUT 'Associate Professors'                          INTO LineDescription(3) Description
 PUT 'Assistant Professors'                          INTO LineDescription(4) Description
 PUT 'Instructors'                                   INTO LineDescription(5) Description
 PUT 'Lecturers'                                     INTO LineDescription(6) Description
 PUT 'No Academic Rank'                              INTO LineDescription(7) Description
 PUT 'Total Faculty With Tenure'                     INTO LineDescription(8) Description
 PUT 'Faculty:On Tenure Track:'                      INTO LineDescription(9) Description
 PUT 'Professors'                                    INTO LineDescription(10) Description
 PUT 'Associate Professors'                          INTO LineDescription(11) Description
 PUT 'Assistant Professors'                          INTO LineDescription(12) Description
 PUT 'Instructors'                                   INTO LineDescription(13) Description
 PUT 'Lecturers'                                     INTO LineDescription(14) Description
 PUT 'No Academic Rank'                              INTO LineDescription(15) Description
 PUT 'Total Faculty On Tenure Track'                 INTO LineDescription(16) Description
 PUT 'Faculty:Not On Tenure Track:'                  INTO LineDescription(17) Description 
 PUT 'With Multi-year Contract'                      INTO LineDescription(18) Description
 PUT 'Professors'                                    INTO LineDescription(19) Description
 PUT 'Associate Professors'                          INTO LineDescription(20) Description
 PUT 'Assistant Professors'                          INTO LineDescription(21) Description
 PUT 'Instructors'                                   INTO LineDescription(22) Description
 PUT 'Lecturers'                                     INTO LineDescription(23) Description
 PUT 'No Academic Rank'                              INTO LineDescription(24) Description
 PUT 'Total Faculty Not On Tenure Track'             INTO LineDescription(25) Description
 PUT 'With Annual Contract'                          INTO LineDescription(26) Description
 PUT 'Professors'                                    INTO LineDescription(27) Description
 PUT 'Associate Professors'                          INTO LineDescription(28) Description
 PUT 'Assistant Professors'                          INTO LineDescription(29) Description
 PUT 'Instructors'                                   INTO LineDescription(30) Description
 PUT 'Lecturers'                                     INTO LineDescription(31) Description
 PUT 'No Academic Rank'                              INTO LineDescription(32) Description
 PUT 'Total Faculty Not On Tenure Track'             INTO LineDescription(33) Description
 !PUT 'Faculty:Not On Tenure Track:'                 INTO LineDescription(34) Description 
 PUT 'With Less Than Annual Contract'                INTO LineDescription(35) Description
 PUT 'Professors'                                    INTO LineDescription(36) Description
 PUT 'Associate Professors'                          INTO LineDescription(37) Description
 PUT 'Assistant Professors'                          INTO LineDescription(38) Description
 PUT 'Instructors'                                   INTO LineDescription(39) Description
 PUT 'Lecturers'                                     INTO LineDescription(40) Description
 PUT 'No Academic Rank'                              INTO LineDescription(41) Description
 PUT 'Total Faculty Not On Tenure Track'             INTO LineDescription(42) Description
 PUT 'Total Faculty Without Faculty Status'          INTO LineDescription(43) Description
 PUT 'Total by Race/Ethnicity'                       INTO LineDescription(44) Description
 PUT 'Postsecondary Teachers:'                       INTO LineDescription(45) Description 
 PUT 'Instructional Staff'                           INTO LineDescription(46) Description
 PUT 'Research'                                      INTO LineDescription(47) Description
 PUT 'Public Service'                                INTO LineDescription(48) Description
 PUT 'Archivists,Curators & Museum Techs.'           INTO LineDescription(49) Description
 PUT 'Librarians'                                    INTO LineDescription(50) Description
 PUT 'Library Technicians'                           INTO LineDescription(51) Description
 PUT 'Non-postsecondary Teachers'                    INTO LineDescription(52) Description
 PUT 'Management Occupations'                        INTO LineDescription(53) Description
 PUT 'Business & Financial Operations Occ.'          INTO LineDescription(54) Description
 PUT 'Computer,Engineering & Science Occ.'           INTO LineDescription(55) Description
 PUT 'Comm. Service,Legal,Arts & Media Occ.'         INTO LineDescription(56) Description
 PUT 'Healthcare Practitioners & Tech. Occ.'         INTO LineDescription(57) Description
 PUT 'Service Occupations'                           INTO LineDescription(58) Description
 PUT 'Sales and Related Occupations'                 INTO LineDescription(59) Description
 PUT 'Office & Administrative Support Occ.'          INTO LineDescription(60) Description
 PUT 'Natural Resources,Constr. & Maint. Occ.'       INTO LineDescription(61) Description
 PUT 'Prod.,Transport.& Material Moving Occ.'        INTO LineDescription(62) Description
 PUT 'Total by Race/ethnicity'                       INTO LineDescription(63) Description
 PUT 'Postsecondary Teachers:'                       INTO LineDescription(64) Description 
 PUT 'Instructional Staff'                           INTO LineDescription(65) Description
 PUT 'Research'                                      INTO LineDescription(66) Description
 PUT 'Public Service'                                INTO LineDescription(67) Description
 PUT 'Archivists,Curators & Museum Techs.'           INTO LineDescription(68) Description
 PUT 'Librarians'                                    INTO LineDescription(69) Description
 PUT 'Library Technicians'                           INTO LineDescription(70) Description
 PUT 'Non-postsecondary Teachers'                    INTO LineDescription(71) Description
 PUT 'Management Occupations'                        INTO LineDescription(72) Description
 PUT 'Business & Financial Operations Occ.'          INTO LineDescription(73) Description
 PUT 'Computer,Engineering & Science Occ.'           INTO LineDescription(74) Description
 PUT 'Comm. Service,Legal,Arts & Media Occ.'         INTO LineDescription(75) Description
 PUT 'Healthcare Practitioners & Tech. Occ.'         INTO LineDescription(76) Description
 PUT 'Service Occupations'                           INTO LineDescription(77) Description
 PUT 'Sales and Related Occupations'                 INTO LineDescription(78) Description
 PUT 'Office & Administrative Support Occ.'          INTO LineDescription(79) Description
 PUT 'Natural Resources,Constr. & Maint. Occ.'       INTO LineDescription(80) Description
 PUT 'Prod.,Transport.& Material Moving Occ.'        INTO LineDescription(81) Description
 PUT 'Total by Race/Ethnicity'                       INTO LineDescription(82) Description
 PUT 'Teaching'                                      INTO LineDescription(83) Description
 PUT 'Research'                                      INTO LineDescription(84) Description
 PUT 'Management'                                    INTO LineDescription(85) Description
 PUT 'Business & Financial Operations Occ.'          INTO LineDescription(86) Description
 PUT 'Computer,Engineering & Science Occ.'           INTO LineDescription(87) Description
 PUT 'Comm. Service,Legal,Arts & Media Occ.'         INTO LineDescription(88) Description
 PUT 'Library & Non-postsecondary Teaching'          INTO LineDescription(89) Description
 PUT 'Healthcare Practitioners & Tech. Occ.'         INTO LineDescription(90) Description
 PUT 'Total by Race/Ethnicity'                       INTO LineDescription(91) Description
 PUT 'Professor'                                     INTO LineDescription(92) Description
 PUT '  -Men'                                        INTO LineDescription(93) Description
 PUT '  -Women'                                      INTO LineDescription(94) Description
 PUT 'Asscoiate Professors'                          INTO LineDescription(95) Description
 PUT '  -Men'                                        INTO LineDescription(96) Description
 PUT '  -Women'                                      INTO LineDescription(97) Description
 PUT 'Assistant Professors'                          INTO LineDescription(98) Description
 PUT '  -Men'                                        INTO LineDescription(99) Description
 PUT '  -Women'                                      INTO LineDescription(100) Description
 PUT 'Instructors'                                   INTO LineDescription(101) Description
 PUT '  -Men'                                        INTO LineDescription(102) Description
 PUT '  -Women'                                      INTO LineDescription(103) Description
 PUT 'Lecturers'                                     INTO LineDescription(104) Description
 PUT '  -Men'                                        INTO LineDescription(105) Description
 PUT '  -Women'                                      INTO LineDescription(106) Description
 PUT 'No Academic Rank'                              INTO LineDescription(107) Description
 PUT '  -Men'                                        INTO LineDescription(108) Description
 PUT '  -Women'                                      INTO LineDescription(109) Description
 PUT 'Grand Total'                                   INTO LineDescription(110) Description
 PUT '  -Men'                                        INTO LineDescription(111) Description
 PUT '  -Women'                                      INTO LineDescription(112) Description
 PUT '  -M+W'                                        INTO LineDescription(113) Description
 PUT 'Postsecondary Teachers:'                       INTO LineDescription(114) Description 
 PUT 'Research'                                      INTO LineDescription(115) Description
 PUT 'Public Service'                                INTO LineDescription(116) Description
 PUT 'Library & Other Teaching Occupations'          INTO LineDescription(117) Description
 PUT 'Management Occupations'                        INTO LineDescription(118) Description
 PUT 'Business & Financial Operations Occ.'          INTO LineDescription(119) Description
 PUT 'Computer,Engineering & Science Occ.'           INTO LineDescription(120) Description
 PUT 'Comm. Service,Legal,Arts & Media Occ.'         INTO LineDescription(121) Description
 PUT 'Healthcare Practitioners & Tech. Occ.'         INTO LineDescription(122) Description
 PUT 'Service Occupations'                           INTO LineDescription(123) Description
 PUT 'Sales and Related Occupations'                 INTO LineDescription(124) Description
 PUT 'Office & Administrative Support Occ.'          INTO LineDescription(125) Description
 PUT 'Natural Resources,Constr. & Maint. Occ.'       INTO LineDescription(126) Description
 PUT 'Prod.,Transport.& Material Moving Occ.'        INTO LineDescription(127) Description
 PUT 'Total'                                         INTO LineDescription(128) Description
 PUT 'Tenured'                                       INTO LineDescription(129) Description
 PUT 'On Tenure Track'                               INTO LineDescription(130) Description
 PUT 'Not On Tenure Track'                           INTO LineDescription(131) Description
 PUT 'Multi-year Contract'                           INTO LineDescription(132) Description 
 PUT 'Annual Contract'                               INTO LineDescription(133) Description
 PUT 'Less than Annual Contract'                     INTO LineDescription(134) Description 
 PUT 'Without Faculty Status'                        INTO LineDescription(135) Description
 PUT 'Total by Race/Ethnicity'                       INTO LineDescription(136) Description  
 PUT 'Postsecondary Teachers:'                       INTO LineDescription(137) Description 
 PUT 'Instructional Staff'                           INTO LineDescription(138) Description
 PUT 'Research'                                      INTO LineDescription(139) Description
 PUT 'Public Service'                                INTO LineDescription(140) Description
 PUT 'Library & Other Teaching Occupations'          INTO LineDescription(141) Description
 PUT 'Management Occupations'                        INTO LineDescription(142) Description
 PUT 'Business & Financial Operations Occ.'          INTO LineDescription(143) Description
 PUT 'Computer,Engineering & Science Occ.'           INTO LineDescription(144) Description
 PUT 'Comm. Service,Legal,Arts & Media Occ.'         INTO LineDescription(145) Description
 PUT 'Healthcare Practitioners & Tech. Occ.'         INTO LineDescription(146) Description
 PUT 'Service Occupations'                           INTO LineDescription(147) Description
 PUT 'Sales and Related Occupations'                 INTO LineDescription(148) Description
 PUT 'Office & Administrative Support Occ.'          INTO LineDescription(149) Description
 PUT 'Natural Resources,Constr. & Maint. Occ.'       INTO LineDescription(150) Description
 PUT 'Prod.,Transport.& Material Moving Occ.'        INTO LineDescription(151) Description
 PUT 'Total New Hires'                               INTO LineDescription(152) Description 


end-procedure


!***********************************************************************
! Process Main
! The following parts match the IPEDS-S Form (2012-2013)
! Part A - Full-time instructional staff and Full-time instructional staff totals
! Part B - Full-time non-instructional staff
! Part D - Part-time staff,Graduate Assistants
! Part G - Salary outlays for full-time instructional staff and  non-instructional staff  
! Part H - All Full Time New Hires between July 1 and October 31
!***********************************************************************
begin-procedure Process-Main

  do Build-Time-Period
  do Get-Establishment
     let $Date_Clause = ' <= '||''''||$End_Date||''''
     move 1  to #startline
     move 91 to #endline
  do Build-IPEDS-S-Data
  do Print-Report-Detail
  do Report-Part-G
  do Report-Part-G1
  do Report-Part-H
  

end-procedure


!***********************************************************************
! Report Part H
!***********************************************************************
begin-procedure Report-Part-H
   let $Date_Clause = ' BETWEEN '||''''||$F_Begin_Dt||''''||' AND '||''''||$F_End_Dt||''''
   move 1 to #part_l
   move 129 to #startline
   move 152 to #endline
   do Build-IPEDS-S-Data
   do Print-Report-Detail
end-procedure

!***********************************************************************
! Report Part G
!***********************************************************************
begin-procedure Report-Part-G
   let $Date_Clause = ' <= '||''''||$End_Date||''''
   move 1 to #part_g
   move 92 to #startline
   move 113 to #endline
   do Build-IPEDS-S-Data
   do Print-Report-Detail1
end-procedure

!***********************************************************************
! Report Part G1
!***********************************************************************
begin-procedure Report-Part-G1
   let $Date_Clause = ' <= '||''''||$End_Date||''''
   move 1 to #part_g1
   move 114 to #startline
   move 128 to #endline
   do Build-IPEDS-S-Data
   do Print-Report-Detail2
end-procedure


!***********************************************************************
! Build Time Period
!***********************************************************************
begin-procedure Build-Time-Period
  let $Date = '11/01/' || $Calendar_Year                        !Date for reports
  do Format-DateTime($Date, $End_Date, {DEFDATE}, '', 'NATIVE') !Parts A,B,D,F
  let $F_Begin_Dt = '07/01/' || $Calendar_Year                  !Date for report
  let $F_End_Dt   = '10/31/' || $Calendar_Year                  !Part G
  do Format-DateTime($F_Begin_Dt, $F_Begin_Dt, {DEFDATE}, '', 'NATIVE')
  do Format-DateTime($F_End_Dt, $F_End_Dt, {DEFDATE}, '', 'NATIVE')

end-procedure


!***********************************************************************
! Get Establishment
! Retrieve Organization's descriptive data
!***********************************************************************
begin-procedure Get-Establishment
  move 0 to #valid_estabid
begin-SELECT
E.ESTABID
E.DESCR
E.ADDRESS1
E.CITY
E.STATE
E.POSTAL

  move 1 to #valid_estabid

  let $Address1      = RTRIM(&E.ADDRESS1,' ')
  let $City          = RTRIM(&E.CITY,' ')
  concat &E.STATE with $City ,bxxbb
  move &E.POSTAL    to $Postal
  concat $Postal  with $City


FROM  PS_ESTAB_TBL E
WHERE E.HQUNIT = 'Y'
  AND E.ESTABID  = $Establishment
  AND E.EFF_STATUS = 'A'
  AND E.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_ESTAB_TBL
       WHERE  ESTABID = E.ESTABID
         AND  EFFDT  <= $End_Date)
end-SELECT
end-procedure


!***********************************************************************
! Build IPEDS-S Data
! Select Employee data and populate Report-Detail array
! Only retrieve the lowest employee record number with the highest
! effective sequence
!***********************************************************************
begin-procedure Build-IPEDS-S-Data

begin-SELECT on-error=SQL-Error
B.EMPLID
B.EMPL_RCD
B.EFFDT
B.BUSINESS_UNIT
B.JOBCODE
B.ANNUAL_RT
B.FULL_PART_TIME
B.COMP_FREQUENCY
F.FREQUENCY_TYPE
B.POSITION_NBR
B.ACTION
B.OFFICER_CD
A.SEX
C.IPEDSSCODE
C.EG_ACADEMIC_RANK
!G.ETHNIC_GROUP
!E.CONTRACT_LENGTH

  let $Emplid               = RTRIM(&B.EMPLID, ' ')
  let $Effdt                = RTRIM(&B.EFFDT, ' ')
  let $Jobcode              = RTRIM(&B.JOBCODE, ' ')
  move &B.ANNUAL_RT        to #Annual_Rt
  let $Full_Part            = RTRIM(&B.FULL_PART_TIME, ' ')
  let $Comp_Type            = RTRIM(&F.FREQUENCY_TYPE, ' ')
  let $Position             = RTRIM(&B.POSITION_NBR, ' ')
  let $Action               = RTRIM(&B.ACTION, ' ')
  let $Officer_Cd           = RTRIM(&B.OFFICER_CD, ' ')
  let $Gender               = RTRIM(&A.SEX, ' ')
  let $Ipedsscode           = RTRIM(&C.IPEDSSCODE, ' ')
  let $Academic_Rank        = RTRIM(&C.EG_ACADEMIC_RANK, ' ')
  !let $EthnicGroup          = RTRIM(&G.ETHNIC_GROUP, ' ')
  !let $Contract_Length      = RTRIM(&E.CONTRACT_LENGTH, ' ')

  If $Officer_Cd <> 'N'
     let $Ipedsscode = '1'
  End-if

  do Get-Tenure-Rank                        !Returns Tenure and Rank data

  do Get-Fed-Tax-Data

  !****  Get Citizenship from Citizenship Table *****
  do Get_Citizenship_Status

  If $Citizenship_Status = '4' or $Res_Status = 'A'               ! Alien Temporary
     let $Res_Status = 'A'
  Else
     let $Res_Status = ' '
  End-if

  do Analyze-Sex-EthnicGroup                !Returns column #(1-19) in #eeocol

  if #part_l
       do Part-H
       do Part-H1
       move 1 to #no_new_hires
    else
       if $Full_Part = 'F'
          evaluate $Ipedsscode
             when = '2'  !Faculty (Instruction/Research/Public Service)
             when = 'I'  !Primarily Instruction
                if #part_g 
                 do PART-G
                else
                do Part-A
                do Part-B
                end-if 
                break
     when = 'P'  !Primarily Public Service
             when = 'R'  !Primarily Research
             when = 'H'  !Archivists/Curators/Museum Tec
             when = 'J'  !Librarians
             when = 'K'  !Library Technicians
             when = 'L'  !Non-postsecondary Teaching
             when = 'A'  !Management
             when = 'B'  !Business/Financial Operations 
             when = 'C'  !Computer/Engineering/Science
             when = 'D'  !Comm Service/Legal/Arts/Media
             when = 'M'  !Healthcare Practitioners & Tec
             when = 'O'  !Service
             when = 'Q'  !Sales and Related
             when = 'S'  !Office/Administrative Support
             when = 'T'  !Natural Resource/Construct/Mnt
             when = 'U'  !Production/Transport/Material
             if #part_g1
              do Part-G1
             else 
              do Part-B
             end-if 
             break
             when-other
                break
          end-evaluate
       else
           do PART-D
         do PART-D-Grad
     end-if
  end-if

FROM  PS_PERSONAL_DT_FST  A,
      PS_JOB            B,
      PS_JOBCODE_TBL    C,
      !PS_DIVERS_ETHNIC      D,
      !PS_PER_ORG_ASG_HP     E,
      PS_FREQUENCY_TBL  F
      !PS_ETHNIC_GRP_TBL G

WHERE A.EMPLID = B.EMPLID
!Begin Incident 1449810004
  AND B.ESTABID=$Establishment
!End Incident 1449810004
  !AND A.EMPLID = D.EMPLID
  !AND D.PRIMARY_INDICATOR = 'Y' 
  !AND D.SETID = G.SETID 
  !AND D.ETHNIC_GRP_CD = G.ETHNIC_GRP_CD 
  !AND G.EFFDT = (SELECT MAX(G2.EFFDT) FROM PS_ETHNIC_GRP_TBL G2 
                  !WHERE G2.SETID = G.SETID 
                  !AND G2.ETHNIC_GRP_CD = G.ETHNIC_GRP_CD 
                  !AND G2.EFFDT [$Date_Clause])
  AND B.PER_ORG = 'EMP'
  AND B.JOB_INDICATOR = 'P'
  AND B.EFFDT =
      (SELECT MAX(B1.EFFDT)
       FROM PS_JOB B1
       WHERE B1.EMPLID    = B.EMPLID
         AND B1.EMPL_RCD  = B.EMPL_RCD
         AND B1.EFFDT    [$Date_Clause])
  AND B.EFFSEQ =
      (SELECT MAX(B2.EFFSEQ)
       FROM PS_JOB B2
       WHERE B2.EMPLID    = B.EMPLID
         AND B2.EMPL_RCD  = B.EMPL_RCD
         AND B2.EFFDT     = B.EFFDT)
  !AND B.EMPL_RCD  =
  !    (SELECT MIN(B3.EMPL_RCD)
  !     FROM PS_JOB B3
  !     WHERE B3.EMPLID    = B.EMPLID
  !       AND B3.EFFDT = (SELECT MAX(B4.EFFDT)
  !                         FROM PS_JOB B4
  !                         WHERE B4.EMPLID    = B3.EMPLID
  !                           AND B4.EMPL_RCD  = B3.EMPL_RCD
  !                           AND B4.EFFDT [$Date_Clause])
  !       AND B3.EFFSEQ = (SELECT MAX(B5.EFFSEQ)
  !                          FROM PS_JOB B5
  !                          WHERE B5.EMPLID    = B3.EMPLID
  !                            AND B5.EMPL_RCD  = B3.EMPL_RCD
  !                            AND B5.EFFDT     = B3.EFFDT)
         And B.EMPL_STATUS IN ('A', 'P', 'S', 'W') ! Active, Leave w/pay, Suspended, Work Break 
         AND B.EEO_CLASS     <> 'E'               !Excluded from counts
         AND B.REG_TEMP       = 'R'               !Regular
  AND C.JOBCODE = B.JOBCODE
  AND C.SETID = (SELECT C1.SETID
                   FROM PS_SET_CNTRL_REC C1
                   WHERE C1.RECNAME      = 'JOBCODE_TBL'
                    AND C1.SETCNTRLVALUE = B.BUSINESS_UNIT)
  AND C.EFFDT =
      (SELECT MAX(C2.EFFDT)
       FROM PS_JOBCODE_TBL C2
       WHERE C2.JOBCODE   = C.JOBCODE
         AND C2.SETID     = C.SETID
         AND C2.EFFDT    <= B.EFFDT)
  AND C.IPEDSSCODE    <> 'N'               !Not Reported for IPEDS-S Purposes
  !AND E.EMPLID = B.EMPLID
  !AND E.EMPL_RCD  = B.EMPL_RCD
  AND B.COMP_FREQUENCY    = F.FREQUENCY_ID
  AND F.EFF_STATUS       = 'A'
  AND F.EFFDT            =
    (SELECT MAX(F1.EFFDT)
       FROM PS_FREQUENCY_TBL F1
      WHERE F1.FREQUENCY_ID   = F.FREQUENCY_ID
        AND F1.EFF_STATUS     = F.EFF_STATUS
        AND F1.EFFDT         <= B.EFFDT)  


end-SELECT
end-procedure


!***********************************************************************
! Get Tenure and Rank Data
!***********************************************************************
begin-procedure Get-Tenure-Rank

move ''    to $Tenure_Status
move ''    to $Tenure_Record
begin-SELECT
E.TENURE_STATUS
E.EG_ACADEMIC_RANK

  move 'Exists'              to $Tenure_Record
  move &E.TENURE_STATUS      to $Tenure_Status
  move &E.EG_ACADEMIC_RANK   to $Academic_Rank

FROM PS_EG_TENURE_DATA E
WHERE E.EMPLID = $Emplid
end-SELECT

if $Tenure_Record = ''                     !No tenure record
  !move 'NOT' to $Tenure_Status            !DO NOT Assume these are Non-Tenured, Not On Track
  do Use-Rank-From-Jobcode-Table
end-if

do Get-Rank-Ipeds

end-procedure


!***********************************************************************
! Assume Tenure and Rank from Jobcode Table Entries
!***********************************************************************
begin-procedure Use-Rank-From-Jobcode-Table

if $Position <> ''                         !Employee is in a position
  do Get-Rank-From-Position
end-if

if $Academic_Rank = ''
   move '000' to $Academic_Rank            !No Academic Rank
end-if

end-procedure


!***********************************************************************
! Get Rank from Position data record
!***********************************************************************
begin-procedure Get-Rank-From-Position
begin-SELECT
P.EG_ACADEMIC_RANK

  let $Academic_Rank = RTRIM(&P.EG_ACADEMIC_RANK, ' ')

FROM PS_POSITION_DATA P
WHERE P.POSITION_NBR = $Position
  AND P.EFFDT = (SELECT MAX(P1.EFFDT)
                  FROM   PS_POSITION_DATA P1
                  WHERE  P1.POSITION_NBR = P.POSITION_NBR
                    AND  P1.EFFDT <= $End_Date)
end-SELECT
end-procedure


!***********************************************************************
! Get Rank Ipeds
!***********************************************************************
begin-procedure Get-Rank-Ipeds
move '' to $Rank_Ipeds
begin-SELECT
R.EG_RANK_IPEDS

  let $Rank_Ipeds = RTRIM(&R.EG_RANK_IPEDS, ' ')

FROM  PS_EG_RANK_TBL R
WHERE R.EG_ACADEMIC_RANK = $Academic_Rank
  AND R.EFFDT = (SELECT MAX(R1.EFFDT)
               FROM PS_EG_RANK_TBL R1
               WHERE R1.EG_ACADEMIC_RANK = R.EG_ACADEMIC_RANK
                 AND R1.EFFDT <= $End_Date)
end-SELECT
if $Rank_Ipeds = ''
   move '6' to $Rank_Ipeds
end-if
end-procedure

!***********************************************************************
! Get Federal Tax Data
!***********************************************************************
begin-procedure Get-Fed-Tax-Data
move '' to $Res_Status
begin-SELECT
T.SPECIAL_FWT_STATUS

  let $Res_Status     = RTRIM(&T.SPECIAL_FWT_STATUS, ' ')

FROM PS_FED_TAX_DATA T
WHERE T.EMPLID = $Emplid
  AND T.SPECIAL_FWT_STATUS = 'A'           !Non-Resident Alien
end-SELECT
end-procedure


!***********************************************************************
! GET_CITIZENSHIP_STATUS   This procedure retrieves the citizenship
! status from the citizenship record for the given employee.  This is
! a required separate select because citizenship is not mandatory.
! called fron Build_Ipeds_s_data
!***********************************************************************
begin-procedure Get_Citizenship_Status

move '' to $Citizenship_Status
begin-SELECT
G.CITIZENSHIP_STATUS

  let $Citizenship_Status   = RTRIM(&G.CITIZENSHIP_STATUS, ' ')

FROM PS_CITIZENSHIP G
WHERE G.EMPLID = $Emplid
!Begin Incident 1449810004
  AND G.COUNTRY='USA'
!End Incident 1449810004

end-SELECT
end-procedure

!**********************************************************
! Determine if hired since July 1
!**********************************************************
begin-procedure Check-New-Hire-History
begin-SELECT

'X'

  move 1 to #New_Hire

FROM PS_JOB JOBHIST
WHERE JOBHIST.EMPLID = &B.EMPLID
     AND JOBHIST.EMPL_RCD  = &B.EMPL_RCD
     AND JOBHIST.EFFDT [$Date_Clause]
     AND JOBHIST.ACTION IN ('HIR','REH')
     AND JOBHIST.FULL_PART_TIME = 'F'
end-SELECT
end-procedure

!***********************************************************************
! Analyze Sex & Ethnic Group
! Assigns the report column based on sex & ethnic group (1-14)
!***********************************************************************
begin-procedure Analyze-Sex-EthnicGroup

  move 1 to #eeocol

  if $Gender = 'F'                       !Default to Male if unknown
      move 1 to #gender
  else
      move 0 to #gender
  end-if

  DO Process-Ethnic-Groups

  if $Res_Status = 'A'                   !Non-Resident Alien
     add #gender to #eeocol
  else
    evaluate $EthnicGroup
      when = '1'  !White
        let #eeocol = 13 + #gender
        break
      when = '2'  !Black or African American
        let #eeocol = 9 + #gender
        break
      when = '3'  !Hispanic/Latino
        let #eeocol = 3 + #gender
        break
      when = '4'  !Asian
        let #eeocol = 7 + #gender
        break
      when = '5'  !American Indian or Alaska Native
        let #eeocol = 5 + #gender
        break
      when = '6'  !Not Specified
        let #eeocol = 17 + #gender
        break         
      when = '7'  !Native Hawaiian or Other Pacific Islander
        let #eeocol = 11 + #gender
        break    
      when = '8'  !Two or More Races
        let #eeocol = 15 + #gender
        break        
      when-other  !Race/Ethnicity Unknown
        let #eeocol = 17 + #gender
        break
    end-evaluate
  end-if
end-procedure


!**********************************************************************
! Process-Ethnic-Groups
! Check to see what Ethnic Groups are indicated
!**********************************************************************
Begin-Procedure Process-Ethnic-Groups

LET #Hispanic = 0
LET #RaceCount = 0
LET $EthnicGroup = ' '
 
! Check to see if the employee has Hispanic indicated
BEGIN-SELECT
COUNT(ETH1.ETHNIC_GROUP) &Hispanic

   LET #Hispanic = &Hispanic

FROM  PS_PERS_DATA_MAX P1,
      PS_DIVERS_ETHNIC  DVR1,
      PS_ETHNIC_GRP_TBL ETH1

WHERE P1.EMPLID          = &B.EMPLID
  AND P1.EMPLID          = DVR1.EMPLID
  AND DVR1.SETID         = ETH1.SETID
  AND DVR1.ETHNIC_GRP_CD = ETH1.ETHNIC_GRP_CD
  AND ETH1.EFFDT         = (SELECT MAX(ETH2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH2
                            WHERE ETH2.SETID = ETH1.SETID
                            AND ETH2.ETHNIC_GRP_CD = ETH1.ETHNIC_GRP_CD
                            AND ETH2.EFFDT <= $End_Date)
  AND ETH1.ETHNIC_GROUP  = '3'    !Hispanic

END-SELECT

IF #Hispanic > 0
   LET $EthnicGroup = '3'
ELSE
   DO Check-For-Two-Ethnic-Groups ! Check to see if the employee has two or more non-Hispanic races
   IF #RaceCount >= 2
      LET $EthnicGroup = '8'
   ELSE
      IF #RaceCount = 1
         DO Find-Single-Ethnic-Group ! Check to see what single-race category has been indicated
      END-IF
   END-IF
END-IF

End-Procedure Process-Ethnic-Groups


!**********************************************************************
! Check-For-Two-Ethnic-Groups
! Check to see if the employee has two or more non-Hispanic races
!**********************************************************************
Begin-Procedure Check-For-Two-Ethnic-Groups

BEGIN-SELECT
COUNT(ETH11.ETHNIC_GROUP) &RaceCount

   LET #RaceCount = &RaceCount

FROM  PS_PERS_DATA_MAX P11,
      PS_DIVERS_ETHNIC  DVR11,
      PS_ETHNIC_GRP_TBL ETH11

WHERE P11.EMPLID          = &B.EMPLID
  AND P11.EMPLID          = DVR11.EMPLID
  AND DVR11.SETID         = ETH11.SETID
  AND DVR11.ETHNIC_GRP_CD = ETH11.ETHNIC_GRP_CD
  AND ETH11.EFFDT         = (SELECT MAX(ETH22.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH22
                            WHERE ETH22.SETID = ETH11.SETID
                            AND ETH22.ETHNIC_GRP_CD = ETH11.ETHNIC_GRP_CD
                            AND ETH22.EFFDT <= $End_Date)
END-SELECT

End-Procedure Check-For-Two-Ethnic-Groups


!**********************************************************************
! Find-Single-Ethnic-Group
! Check to see what single-race category has been indicated
!**********************************************************************
Begin-Procedure Find-Single-Ethnic-Group

BEGIN-SELECT
ETH111.ETHNIC_GROUP

   MOVE &ETH111.Ethnic_Group TO $EthnicGroup

FROM  PS_ETHNIC_GRP_TBL ETH111,
      PS_PERS_DATA_MAX P111,
      PS_DIVERS_ETHNIC  DVR111

WHERE P111.EMPLID          = &B.EMPLID
  AND P111.EMPLID          = DVR111.EMPLID
  AND DVR111.SETID         = ETH111.SETID
  AND DVR111.ETHNIC_GRP_CD = ETH111.ETHNIC_GRP_CD
  AND ETH111.EFFDT         = (SELECT MAX(ETH222.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH222
                            WHERE ETH222.SETID = ETH111.SETID
                            AND ETH222.ETHNIC_GRP_CD = ETH111.ETHNIC_GRP_CD
                            AND ETH222.EFFDT <= $End_Date)
END-SELECT

End-Procedure Find-Single-Ethnic-Group


!***********************************************************************
! Analyze Contract Data
! Determine Contract length
!***********************************************************************
begin-procedure Analyze-Contract-Data
  move 0 to #contract_length
  move '' to $Contract_Record
  move '' to $Contract_Length

Begin-SELECT
CL.CONTRACT_LENGTH

  let $Contract_Length = RTRIM(&CL.CONTRACT_LENGTH, ' ')

FROM  PS_PER_ORG_ASG_HP CL
WHERE CL.EMPLID    = $Emplid
  AND CL.EMPL_RCD  = &B.EMPL_RCD

end-SELECT

Begin-SELECT
CP.CONTRACT_BEGIN_DT
CP.CONTRACT_END_DT

  let $Contract_Record = 'Yes'
  do Convert-To-DTU-Date(&CP.CONTRACT_BEGIN_DT, $C_Begin_Dt)
  do Convert-To-DTU-Date(&CP.CONTRACT_END_DT,   $C_End_Dt)
  let #dtu_da1 = to_number(substr($C_Begin_Dt, 9, 2))
  let #dtu_da2 = to_number(substr($C_End_Dt, 9, 2))

  do dtu-diff-months($C_Begin_Dt, $C_End_Dt, #dtu_months)

  if #dtu_da1 <> #dtu_da2
     add .5 to #dtu_months
  end-if

FROM PS_CONTRACT CP
WHERE CP.EMPLID = $Emplid
  AND CP.EMPL_RCD  = &B.EMPL_RCD
  AND CP.EFFDT = (SELECT MAX(CP1.EFFDT)
                  FROM PS_CONTRACT CP1
                  WHERE CP1.EMPLID = CP.EMPLID
                    AND CP1.EMPL_RCD  = CP.EMPL_RCD
                    AND CP1.EFFDT <= $End_Date)
end-SELECT

  if $Contract_Record = 'Yes'
    if #dtu_months < 9 
      move 1 to #contract_length             !Less than 9 month contract
    else 
      if #dtu_months  = 9
      move 4 to #contract_length             ! 9 month contract
      else
       if #dtu_months  = 10
    move 5 to #contract_length             ! 10 month contract
   else
     if #dtu_months  = 11
      move 6 to #contract_length             ! 11 month contract
     else
      if #dtu_months  = 12
      move 7 to #contract_length             ! 12 month contract
      else
       if #dtu_months >12 
    move 8 to #contract_length             ! >12 month contract
    end-if
    end-if
    end-if
    end-if
    end-if
    end-if
     else
    Evaluate $Contract_Length
      when = '1'                                   !Less than 9 month contract
        move 1 to #contract_length
        break
      when = '4'                                   !9 month contract
        move 4 to #contract_length
        break
      when = '5'                                   !10 month contract
        move 5 to #contract_length
        break  
      when = '6'                                   !11 month contract
        move 6 to #contract_length
        break
      when = '7'                                   !12 month contract
        move 7 to #contract_length
        break
      when = '8'                                   !>12 month contract
        move 8 to #contract_length
        break 
      when = '0'                                   !NA
        move 1 to #contract_length
        break    
      when-other                                   
        move 0 to #contract_length
        break
     End-Evaluate
  end-if
end-procedure

!***********************************************************************
! PART A
!***********************************************************************
begin-procedure PART-A

 move 0 to #line
  
  Evaluate $Tenure_Status
     When = 'DEF'                    !Tenured by De Facto
     When = 'TEN'                    !Tenured
        move 1 to #line
        move 8 to #sumline
        break
     When = 'NTK'                    !Non Tenured, On Track
        move 9 to #line
        move 16 to #sumline
        break
     When = 'NOT'                    !Non Tenured, Not On Track
     do Analyze-Contract-Data
     if #contract_length = 8 
        move 18 to #line
        move 25 to #sumline
        else
        if #contract_length = 7
        move 26 to #line
        move 33 to #sumline
        else
        if #contract_length =1 or  #contract_length =4 or  #contract_length =5 or #contract_length =6
        move 35 to #line
        move 42 to #sumline
        end-if
      end-if 
      end-if  
        break
     When = 'DEN'                    !Tenure Denied
     When = 'NA'                     !Not Applicable
     When = 'OTH'                    !Other
        move 43 to #line
        break
     When-Other
        move 43 to #line
        break
  End-Evaluate

  if #line <> 43
     Evaluate $Rank_Ipeds
       When = '1'
           add 1 to #line
           break
       When = '2'
           add 2 to #line
           break
       When = '3'
           add 3 to #line
           break
       When = '4'
           add 4 to #line
           break
       When = '5'
           add 5 to #line
           break
       When = '6'
           add 6 to #line
           break
     End-Evaluate
  end-if
   
      if #line <> 43
       array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
       array-add 1 to Report-Detail(#sumline) EEOCOL(#eeocol)
       array-add 1 to Report-Detail(44) EEOCOL(#eeocol)
      else
       array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
       array-add 1 to Report-Detail(44) EEOCOL(#eeocol)
      end-if     
end-procedure


!***********************************************************************
! PART B
!***********************************************************************

begin-procedure PART-B
move 0 to #line
 if RTRIM($Ipedsscode, ' ') <> ''
     Evaluate $Ipedsscode
        when = '2'                                         !Instruction (Rsrch/PubSrvc)
        when = 'I'                                         !Instruction
           move 46 to #line
            break   
        when = 'P'     !Public Service
            move 47 to #line
            break
        when = 'R'                                  !Research
            move 48 to #line
            break   
        when = 'H'                               !Archivists/Curators/Museum Tec
            move 49 to #line
            break
        when = 'J'                     !Librarians
            move 50 to #line
            break
        when = 'K'                                         !Library Technicians
            move 51 to #line 
            break
        when = 'L'                                         !Non-postsecondary Teaching
            move 52 to #line
            break
        when = 'A'                                         !Management
            move 53 to #line
            break
        when = 'B'                                         !Business/Financial Operations    
            move 54 to #line
            break
        when = 'C'                                         !Computer/Engineering/Science
            move 55 to #line
            break
        when = 'D'                                         !Comm Service/Legal/Arts/Media
            move 56 to #line
            break
        when = 'M'                                         !Healthcare Practitioners & Tec
            move 57 to #line
            break
        when = 'O'                                         !Service
            move 58 to #line
            break
        when = 'Q'                                         !Sales and Related
            move 59 to #line
            break
        when = 'S'                                         !Office/Administrative Support
            move 60 to #line
            break
        when = 'T'                                         !Natural Resource/Construct/Mnt   
            move 61 to #line
            break
        when = 'U'                                         !Production/Transport/Material   
            move 62 to #line
            break
        when-other
            break
     End-Evaluate

     if #line > 0
        array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
        array-add 1 to Report-Detail(63) EEOCOL(#eeocol)
     end-if

  end-if

end-procedure

!***********************************************************************
! PART D
!***********************************************************************

begin-procedure PART-D
move 0 to #line
 if RTRIM($Ipedsscode, ' ') <> ''
     Evaluate $Ipedsscode
        when = '2'    !Instruction (Rsrch/PubSrvc)
        when = 'I'  !Instruction
            move 65 to #line
            break
        when = 'P'    !Public Service
            move 66 to #line
            break
        when = 'R'    !Research
            move 67 to #line
            break
        when = 'H'    !Archivists/Curators/Museum Tec
            move 68 to #line
            break
        when = 'J'    !Librarians
            move 69 to #line
            break
        when = 'K'   !Library Technicians
            move 70 to #line 
            break
        when = 'L'    !Non-postsecondary Teaching
            move 71 to #line
            break
        when = 'A'    !Management
            move 72 to #line
            break
        when = 'B'    !Business/Financial Operations  
            move 73 to #line
            break
        when = 'C'    !Computer/Engineering/Science
            move 74 to #line
            break
        when = 'D'    !Comm Service/Legal/Arts/Media
            move 75 to #line 
            break
        when = 'M'    !Healthcare Practitioners & Tec
            move 76 to #line
            break
        when = 'O'    !Service
            move 77 to #line
            break
        when = 'Q'    !Sales and Related
            move 78 to #line
            break
        when = 'S'    !Office/Administrative Support
            move 79 to #line
            break
        when = 'T'    !Natural Resource/Construct/Mnt 
            move 80 to #line
            break
        when = 'U'    !Production/Transport/Material  
            move 81 to #line
            break
        when-other
            break
     End-Evaluate

     if #line > 0
        array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
        array-add 1 to Report-Detail(82) EEOCOL(#eeocol)
     end-if

  end-if

end-procedure

!***********************************************************************
! PART D - Graduate Assistants
!***********************************************************************

Begin-Procedure PART-D-Grad
move 0 to #line

if RTRIM($Ipedsscode, ' ') <> ''
     Evaluate $Ipedsscode
        when = 'E'              !Graduate Assistants - Teaching
            move 83 to #line
            break
        when = 'F'      !Graduate Assistants - Research
            move 84 to #line
            break
        when = 'G'      !Graduate Assistants - Mgmt
            move 85 to #line
            break
        when = 'V'      !Graduate Assistants - Business 
            move 86 to #line
            break
        when = 'W'      !Graduate Assistants - Computer
            move 87 to #line
            break
        when = 'X'      !Graduate Assistants - Com Srvc
            move 88 to #line
            break
        when = 'Y'      !Graduate Assistants - Library
            move 89 to #line
            break
        when = 'Z'      !Graduate Assistants - Health
            move 90 to #line
            break
        when-other
              break
     End-Evaluate

     if #line > 0
        array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
        array-add 1 to Report-Detail(91) EEOCOL(#eeocol)

     end-if

  end-if  

end-procedure

!***********************************************************************
! PART G
!***********************************************************************

begin-procedure PART-G

  move 0 to #rankcol
  move 0 to #line
  move 0 to #rank
  if $Gender = 'F'                       !Default to Male if unknown
      move 1 to #gender
  else
      move 0 to #gender
  end-if
  Evaluate  $Rank_Ipeds
        When = '1'
            let #rank = 93 + #gender
            move #rank to #line
            break
        When = '2'
            let #rank = 96 + #gender
            move #rank to #line
            break
        When = '3'
            let #rank = 99+#gender
            move #rank to #line
            break
        When = '4'
            let #rank = 102+#gender
            move #rank to #line
            break
        When = '5'
            let #rank = 105+#gender
            move #rank to #line
            break
        When = '6'
            let #rank = 108+#gender
            move #rank to #line
            break
        When-other
         break
   End-Evaluate

   Do Analyze-Contract-Data
 
  Evaluate #Contract_Length
         when = 4
          move 1 to #rankcol
          break
         when = 5
          move 2 to #rankcol
          break
         when = 6
          move 3 to #rankcol
          break
         when = 7
          move 4 to #rankcol
          break
         when-other
         break
  End-Evaluate
  
       if #line > 0 and #rankcol > 0
          array-add 1 to Report-Detail-G(#line) RANKCOL(#rankcol)
          array-add 1 to Report-Detail-Total (#line)
          array-add #Annual_Rt to Report-Detail-sal (#line)
       end-if 
end-procedure

!***********************************************************************
! PART G1- Non instructional staff
!***********************************************************************

begin-procedure PART-G1
 move 0 to #line
 if RTRIM($Ipedsscode, ' ') <> ''
     Evaluate $Ipedsscode
        when = 'P'                  !public service
            move 115 to #line
            break
        when = 'R'                  !Research
            move 116 to #line
            break
        when = 'H'                   !Archivists/Curators/Museum Tec
        When = 'J'                   !Librarians
        when = 'K'                   !Library Tech
        when = 'L'                   !Non-postsecondary Teaching
            move 117 to #line
            break
        when = 'A'                   !mgmt occ
            move 118 to #line
            break
        when = 'B'                  !Business/Fin opr
            move 119 to #line
            break
        when = 'C'                  !comp Engg serv
            move 120 to #line
            break
        when = 'D'                  !Comm Service/Legal/Arts/Media
            move 121 to #line   
            break
        when = 'M'                  !Healthcare Practitioners & Tec
            move 122 to #line 
            break
        when = 'O'                   !Service  
            move 123 to #line
            break
        when = 'Q'                  !Sales & related
            move 124 to #line
            break
        when = 'S'                  !Office/Administrative Support
            move 125 to #line
            break
        when = 'T'                  !Natural Resource/Construct/Mnt
            move 126 to #line
            break
        when = 'U'                  !Production/Transport/Material
            move 127 to #line
        when-other
            break
     End-Evaluate

     if #line > 0
        array-add 1 to Report-Detail-G1(#line) 
        array-add 1 to Report-Detail-G1(128) 
        array-add #Annual_Rt to Report-Detail-sal1(#line)
        array-add #Annual_Rt to Report-Detail-sal1(128)

     end-if

  end-if

end-procedure

!***********************************************************************
! Part H
!***********************************************************************
begin-procedure Part-H

  move 0 to #line
  move 0 to #New_Hire

!**********************************************************
! If current row is not a hire/rehire action then check history rows
!**********************************************************
if $Action <> 'HIR' and $Action <> 'REH' and $Full_Part = 'F'
     do Check-New-Hire-History
End-if


 if ($Action = 'HIR' or $Action = 'REH' or #New_Hire) and $Full_Part = 'F'
    do Get-Tenure-Rank

      if RTRIM($Ipedsscode, ' ') <> ''
         Evaluate $Ipedsscode
            when = '2'  !Faculty (Instruction/Research/Public Service)
            when = 'I'  ! Instruction
            when = 'P'  ! Public Service
            when = 'R'  ! Research
                Evaluate $Tenure_Status 
                   when = 'DEF'      !Tenured by De Facto
                   when = 'TEN'      !Tenured
                      move 129 to #line
                   when = 'NTK'      !Non Tenured, On Track
                      move 130 to #line
                   when = 'NOT'      !Non Tenured, Not On Track
                   do Analyze-Contract-Data
                          if #contract_length = 8 
                          move 132 to #line
                          else
                          if #contract_length = 7
                          move 133 to #line
                          else
                          if #contract_length =1 or  #contract_length =4 or  #contract_length =5 or #contract_length =6
                           move 134 to #line
                         end-if
                          end-if 
                         end-if  
                    break              
                   when = 'DEN'      !Tenure Denied
                   when = 'NA'       !Not Applicable
                   when = 'OTH'      !Other
                      move 135 to #line 
                      break
                   when-other
                      move 135 to #line 
                      break
               End-Evaluate 
            end-evaluate   
               
         if #line > 0
            array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
            array-add 1 to Report-Detail(136) EEOCOL(#eeocol)
         end-if
         end-if
         end-if
end-procedure

!***********************************************************************
! PART H1
!***********************************************************************

begin-procedure Part-H1

   move 0 to #line
   move 0 to #New_Hire
 
 !**********************************************************
 ! If current row is not a hire/rehire action then check history rows
 !**********************************************************
 if $Action <> 'HIR' and $Action <> 'REH' and $Full_Part = 'F'
      do Check-New-Hire-History
 End-if
  if ($Action = 'HIR' or $Action = 'REH' or #New_Hire) and $Full_Part = 'F'
    do Get-Tenure-Rank
 
  if RTRIM($Ipedsscode, ' ') <> ''
      Evaluate $Ipedsscode
       when = '2'
       when = 'I'
        move 138  to #line
         when = 'P'                  !public service
             move 139 to #line
             break
         when = 'R'                  !Research
             move 140 to #line
             break
         when = 'H'                   !Archivists/Curators/Museum Tec
         When = 'J'                   !Librarians
         when = 'K'                   !Library Tech
         when = 'L'                   !Non-postsecondary Teaching
             move 141 to #line
             break
         when = 'A'                   !mgmt occ
             move 142 to #line
             break
         when = 'B'                  !Business/Fin opr
             move 143 to #line
             break
         when = 'C'                  !comp Engg serv
             move 144 to #line
             break
         when = 'D'                  !Comm Service/Legal/Arts/Media
             move 145 to #line   
             break
         when = 'M'                  !Healthcare Practitioners & Tec
             move 146 to #line 
             break
         when = 'O'                   !Service  
             move 147 to #line
             break
         when = 'Q'                  !Sales & related
             move 148 to #line
             break
         when = 'S'                  !Office/Administrative Support
             move 149 to #line
             break
         when = 'T'                  !Natural Resource/Construct/Mnt
             move 150 to #line
             break
         when = 'U'                  !Production/Transport/Material
             move 151 to #line
         when-other
             break
      End-Evaluate
 
      if #line > 0
        array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
        array-add 1 to Report-Detail(152) EEOCOL(#eeocol)
      end-if
 end-if
   end-if
 
 end-procedure

!***********************************************************************
! Print Report Detail
! Get values from array and print
!***********************************************************************
Begin-Procedure Print-Report-Detail


  move #startline to #line

  while #line <= #endline

     GET $LineDescr FROM LineDescription(#line) Description

     Evaluate #line
        When = 1
            print 'Part-A Full-Time Instructional Staff with Faculty Status by Academic rank, Gender and Race/Ethnicity'  (-5) BOLD Center
            position              (+4)
            break
        When = 17
             new-page
            print 'Part-A Full-Time Instructional Staff with Faculty Status by Academic rank, Gender and Race/Ethnicity'  (-5) BOLD Center
            position              (+4)
            break
        when = 45
             new-page
             print 'Part - B  Full-Time Non-Instructional Staff by Occupational Category, Gender and Race/Ethnicity' (-5) BOLD Center
             position            (+4)
             break
         when = 64
             new-page
             print 'Part - D  Part-Time Staff by Occupational Category, Gender and Race/Ethnicity' (-5) BOLD Center
             position            (+4)
             break
         when = 83
             new-page
             print 'Part - D  Graduate Assistants by Occupational Category, Gender and Race/Ethnicity' (-5) BOLD Center
             position            (+4)
             break         
         When = 129
           new-page
           let $G1 = 'y'
            print 'Part-H New Hires Full Time Instructional Staff'                   (-5) BOLD Center
            position              (+4)
            if #no_new_hires = 0
               print 'No New Hires between 1 July and 31 Oct' (+1, 6)
               print '-' (+1,1,180) fill
            end-if
            break
         When = 137
           new-page
            print 'Part-H New Hires Full Time Non-Instructional Staff'                   (-5) BOLD Center
            position              (+4)
            if #no_new_hires = 0
               print 'No New Hires between 1 July and 31 Oct' (+1, 6)
               print '-' (+1,1,180) fill
            end-if
            break            
      End-Evaluate

     position (+1)
     do Format-Number(#line, $Line, '999')
     
     if #line = 1 or  #line = 9 or  #line = 17 or #line = 34 or #line = 45 or #line = 64 or #line = 137 or #line  = 131
      print $LineDescr (,1,40) BOLD
     else
       if #line = 18 or #line = 26 or #line = 35 
       print $LineDescr (,1,40) UNDERLINE
       else
        print $LineDescr (,1,40) 
     end-if
     end-if
     
     if #line <> 1 and #line <>9 and #line <> 17 and #line <> 18 and #line <>26 and #line <>34 and #line<>35 and #line <>45 and #line<>64 and #line <> 131 and #line <> 137

     move 1 to #eeocol
     while #eeocol <= 18
          
        GET #detail-eeo  FROM Report-Detail(#line) EEOCOL(#eeocol)
        GET #col         FROM Report-Detail(0)     StartCol(#eeocol)

        do Format-Number(#detail-eeo, $Detail-Eeo, '99,999')
        print $Detail-Eeo (,#col)

          let #x = mod(#eeocol, 2)          !<0=odd-male, 0=even-female
              if #x
                 add #detail-eeo to #total-male
              else
                 add #detail-eeo to #total-female
                 print '|' (,,1)     

              end-if
        add 1 to #eeocol

     end-while
     do Format-Number(#total-male, $Total-Male, '99,999')
     do Format-Number(#total-female, $Total-Female, '99,999')

     print $Total-Male     (, 162)
     print $Total-Female   (, 168)

     let #total = #total-male + #total-female

     do Format-Number(#total, $total, '99,999')
     print $total (,174,6)
     move 0 to #total-male
     move 0 to #total-female
     move 0 to #total
     end-if

     do Line-Breaks
     add 1 to #line
     add 1 to #level
  end-while

end-procedure

!***********************************************************************
! Print report detail- Part G
!***********************************************************************

begin-procedure Print-Report-Detail1
  move #startline to #line
  
  move 2 to #line1
  move 10 to #line2
  move 19 to #line3
  move 27 to #line4
  move 36 to  #line5

  while #line <= #endline

     GET $LineDescr FROM LineDescription(#line) Description

         if #line = 92
             new-page
             let $G = 'x'
             print 'Part-G Full Time Instructional Staff for Salary calculation'     (-5) BOLD Center
           position              (+4)
           move 0 to #level
         end-if
         position (+1) 
         if #line  = 92 or #line  = 95 or  #line  = 98  or #line  = 101 or #line  = 104 or #line  = 107 or #line  = 110
         print $LineDescr (,1,40) BOLD
         else
         print $LineDescr (,1,40)  
    
         end-if
    if #line <> 92 and #line <> 95 and #line <> 98 and #line <> 101 and #line <> 104 and #line <> 107 and #line <> 110
    
    

  move 1 to #rankcol
  
   ! 9 , 10, 11, 12 month contract
   
  While #rankcol <= 4
  
   Get #count from Report-Detail-G(#line) RANKCOL(#rankcol)
   Get #col from Report-Detail-G(0) StCol(#rankcol)
   do Format-Number (#count,$count,'99,999,999')
    print  $count   (, #col,10)
    print '|' (,+1)
    
    add 1 to #rankcol
  end-while 
  
  
    !Total Employees 
    get #Tot_Emp from Report-Detail-Total (#line)
    do Format-Number (#Tot_Emp,$Tot_Emp,'99,999,999')
    print $Tot_Emp  (,78,12)
    print '|' (,+1)
  
    !Total No.Of months
     get #9_mth from Report-Detail-G(#line) RANKCOL(1)
     get #10_mth from Report-Detail-G(#line) RANKCOL(2)
     get #11_mth from Report-Detail-G(#line) RANKCOL(3)
     get #12_mth from Report-Detail-G(#line) RANKCOL(4)
     
     Let #Tot_Mth = #9_mth*9 + #10_mth*10 + #11_mth*11 + #12_mth*12
     do Format-Number (#Tot_Mth,$Tot_Mth,'99,999,999')
     print $Tot_Mth  (,94,12)
     print '|' (,+1)
     put #Tot_Mth into Total-Month (#line)
     
     
     !Salary Outlays
     Get #salary from Report-Detail-sal(#line)
     do Format-Number (#salary,$salary,'999,999,999,999,999')
     Print $salary (,137,21)
     print '|' (,+1)
     
     !Weighted Avg Salary
     
     if  #Tot_Mth <> 0
     let #Avg_mth = #Tot_Mth / #Tot_Emp
     Let  #Weight_sal =  #salary / #Avg_mth
     end-if
     do Format-Number (#Weight_sal,$Weight_sal,'999,999,999,999,999')
     print $Weight_sal  (,162)
     put #Weight_sal into Weight-sal(#line)
    
     
     !Get Part - A Count
     
     let #y = mod(#line,3)    !0= male ,<0 = female
     
     
     if #y   
           move 2 to #partACol        
            while #partACol <= 18   
            
            Get #A1 FROM Report-Detail(#line1) EEOCOL(#partAcol) 
            Get #A2 FROM Report-Detail(#line2) EEOCOL(#partAcol)                    
            Get #A3 FROM Report-Detail(#line3) EEOCOL(#partAcol)
            Get #A4 FROM Report-Detail(#line4) EEOCOL(#partAcol) 
            Get #A5 FROM Report-Detail(#line5) EEOCOL(#partAcol)
            
            
            add #A1 to #Var1
            add #A2 to #Var2
            add #A3 to #Var3
            add #A4 to #Var4
            add #A5 to #Var5
            
            add 2 to #partACol
            
            end-while
            
           Let #PartA_tot = #Var1 + #Var2 + #Var3+ #Var4 + #Var5
           
           do Format-Number (#PartA_tot,$PartA_tot,'99,999,999')
           
            print $PartA_tot   (,109, 12)
            print '|' (,+1) 
            
      Put #PartA_tot into Part-A-count(#line)   


      else
           move 1 to #partACol        
            while #partACol <= 18   
            
            Get #A1 FROM Report-Detail(#line1) EEOCOL(#partAcol) 
            Get #A2 FROM Report-Detail(#line2) EEOCOL(#partAcol)                  
            Get #A3 FROM Report-Detail(#line3) EEOCOL(#partAcol)
            Get #A4 FROM Report-Detail(#line4) EEOCOL(#partAcol) 
            Get #A5 FROM Report-Detail(#line5) EEOCOL(#partAcol)
            
            
            add #A1 to #Var1
            add #A2 to #Var2
            add #A3 to #Var3
            add #A4 to #Var4
            add #A5 to #Var5
            
            add 2 to #partACol
            
            end-while
            
           Let #PartA_tot = #Var1 + #Var2 + #Var3+ #Var4 + #Var5
           
           do Format-Number (#PartA_tot,$PartA_tot,'99,999,999')
           
            print $PartA_tot   (,109, 12)
            print '|' (,+1) 
            
      Put #PartA_tot into Part-A-count(#line)
      
      end-if
      
      
       !Print Balance
       Let #Balance = #PartA_tot - #Tot_Emp
       do Format-Number (#Balance,$Balance,'999,999')
       
       Print $Balance (,124,10)
       Print '|' (,+1)
       Put #Balance into Balance(#line)
               
       end-if
      move 0 to #Tot_Emp
      move 0 to #Tot_Mth
      move 0 to #Agv_Mth
      move 0 to #salary
      move 0 to #Weight_sal
      move 0 to #PartA_tot
      move 0 to #PartA_tot
      move 0 to #Var1
      move 0 to #Var2
      move 0 to #Var3
      move 0 to #Var4
      move 0 to #Var5
      move 0 to #A1
      move 0 to #A2
      move 0 to #A3
      move 0 to #A4
      move 0 to #A5 
      
      if #line = 110
       DO Line-111
      end-if
      
      if #line = 111
       Do Line-112
      end-if
      
      if #line = 112
       Do Line-113
      end-if 
     
     Do Line-Breaks
     add 1 to #line 
       if #line <> 93
         let #z = mod(#line ,3)
     if #z = 0
     add 1 to #line1
     add 1 to #line2
     add 1 to #line3
     add 1 to #line4
     add 1 to #line5
    end-if
    end-if     
     end-while
      
    
end-procedure

!***********************************************************************
! Print Report Detail - Part G - Non isntructional staff
!***********************************************************************

begin-procedure Print-Report-Detail2
 
 move #startline to #line
 while #line <= #endline
 
      GET $LineDescr FROM LineDescription(#line) Description
 
          if #line = 114
              new-page
              let $G = 'y' 
              let $G1 = 'x'
              print 'Part-G Salary-Outlays for Full-Time Non-Instructional Staff by Occupational Category '     (-5) BOLD Center
            position              (+3)
            move 0 to #level 
          end-if
         position (+1)
         
         if #line = 114
         
         print $LineDescr (,51,40) Bold
         
         else
         
         print $LineDescr (,51,40) 
         
         end-if
         
         if #line <> 114
         
         Get #Staff from Report-Detail-G1(#line)
         Get #Staff_Sal from Report-Detail-sal1(#line)
         do Format-Number (#Staff,$Staff,'99,999,999')
         do Format-Number (#Staff_Sal,$Staff_Sal,'999,999,999,999,999')
         print $Staff (, 94,15)
         print '|'(,+1,1)
         print $Staff_Sal (, 112,21)
         print '|' (,+1,1)
         end-if
         
         move 0 to #Staff
         move 0 to #Staff_Sal
         
         Do Line-Breaks
         add 1 to #line
      
      end-while

end-procedure

!***********************************************************************
! Line -111 -Men total part G
!***********************************************************************


Begin-Procedure Line-111

   move 111 to #line
   GET $LineDescr FROM LineDescription(#line) Description   
   position (+1)
   print $LineDescr   (, 1, 40)
       move 93 to #line
  
  While #line <=108

       Get #tot_9 from Report-Detail-G(#line)  RANKCOL(1)
       Get #tot_10 from Report-Detail-G(#line) RANKCOL(2)
       Get #tot_11 from Report-Detail-G(#line) RANKCOL(3)
       Get #tot_12 from Report-Detail-G(#line) RANKCOL(4)
       
      add  #tot_9 to #tot9_m
      add  #tot_10 to #tot10_m
      add  #tot_11 to #tot11_m
      add  #tot_12 to #tot12_m
      
      Get #Emp_Tot from Report-Detail-Total (#line)
      
      add #Emp_Tot to #Emp_Total
      
      Get #Mth_Tot from Total-Month(#line)
      
      add #Mth_Tot to #Mth_Total
      
      Get #PartA from  Part-A-count(#line)
      add #PartA to #PartA_Total
      
      Get #Bal from Balance(#line)
      add #Bal to #Bal_Total
      
      Get #Emp_Sal from Report-Detail-sal(#line)
      add #Emp_sal to #Sal_Total
      
      Get #Avg_Sal from Weight-sal(#line)
      add #Avg_Sal to #Avg_Sal_Total
      
   add 3 to #line
   
   end-while
   
   move 111 to #line
   
    do Format-Number (#tot9_m,$tot9_m,'99,999,999')
    do Format-Number (#tot10_m,$tot10_m,'99,999,999')
    do Format-Number (#tot11_m,$tot11_m,'99,999,999')
    do Format-Number (#tot12_m,$tot12_m,'99,999,999')
    do Format-Number (#Emp_Total,$Emp_Total,'99,999,999')
    do Format-Number (#Mth_Total,$Mth_Total,'99,999,999')
    do Format-Number (#PartA_Total,$PartA_Total,'99,999,999')
    do Format-Number (#Bal_Total,$Bal_Total,'999,999')
    do Format-Number (#Sal_Total,$Sal_Total,'999,999,999,999,999')
    do Format-Number (#Avg_Sal_Total,$Avg_Sal_Total,'999,999,999,999,999')
    
    print $tot9_m (,26,10)
    print '|' (,+1)
    print $tot10_m (,39,10)
    print '|' (,+1)
    print $tot11_m (,52,10)
    print '|' (,+1)
    print $tot12_m (,65,10)
    print '|' (,+1)
    print $Emp_Total (,78,12)
    print '|' (,+1,1)
    print $Mth_Total (,94,12)
    print '|' (,+1,1)
    print $PartA_Total (,109,12)
    
    print '|' (,+1,1)
    print $Bal_Total  (,124,10)
    print '|' (,+1,1)
    print $Sal_Total (,137,21)
    print '|' (,+1)
    print $Avg_Sal_Total (,162)
   
   
   move 0 to #tot9_m
   move 0 to #tot10_m
   move 0 to #tot11_m
   move 0 to #tot12_m
   move 0 to #Emp_Total
   move 0 to #Mth_Total
   move 0 to #PartA_Total
   move 0 to #Bal_Total
   move 0 to #Sal_Total
   move 0 to #Avg_Sal_Total
   
end-procedure

!***********************************************************************
! Line -112 -Women total part G
!***********************************************************************

Begin-procedure Line-112
 
   move 112 to #line
    GET $LineDescr FROM LineDescription(#line) Description   
    position (+1)
   print $LineDescr   (, 1, 40)

       move 94 to #line
  
  While #line <=109

       Get #tot_9 from Report-Detail-G(#line)  RANKCOL(1)
       Get #tot_10 from Report-Detail-G(#line) RANKCOL(2)
       Get #tot_11 from Report-Detail-G(#line) RANKCOL(3)
       Get #tot_12 from Report-Detail-G(#line) RANKCOL(4)
       
      add  #tot_9 to #tot9_m
      add  #tot_10 to #tot10_m
      add  #tot_11 to #tot11_m
      add  #tot_12 to #tot12_m
      
      Get #Emp_Tot from Report-Detail-Total (#line)
      
      add #Emp_Tot to #Emp_Total
      
      Get #Mth_Tot from Total-Month(#line)
      
      add #Mth_Tot to #Mth_Total
      
      Get #PartA from  Part-A-count(#line)
      add #PartA to #PartA_Total
      
      Get #Bal from Balance(#line)
      add #Bal to #Bal_Total
      
      Get #Emp_Sal from Report-Detail-sal(#line)
      add #Emp_sal to #Sal_Total
      
      Get #Avg_Sal from Weight-sal(#line)
      add #Avg_Sal to #Avg_Sal_Total
      
   add 3 to #line
   
   end-while
   
   move 112 to #line
   
    do Format-Number (#tot9_m,$tot9_m,'99,999,999')
    do Format-Number (#tot10_m,$tot10_m,'99,999,999')
    do Format-Number (#tot11_m,$tot11_m,'99,999,999')
    do Format-Number (#tot12_m,$tot12_m,'99,999,999')
    do Format-Number (#Emp_Total,$Emp_Total,'99,999,999')
    do Format-Number (#Mth_Total,$Mth_Total,'99,999,999')
    do Format-Number (#PartA_Total,$PartA_Total,'99,999,999')
    do Format-Number (#Bal_Total,$Bal_Total,'999,999')
    do Format-Number (#Sal_Total,$Sal_Total,'999,999,999,999,999')
    do Format-Number (#Avg_Sal_Total,$Avg_Sal_Total,'999,999,999,999,999')
    
    print $tot9_m (,26,10)
    print '|' (,+1)
    print $tot10_m (,39,10)
    print '|' (,+1)
    print $tot11_m (,52,10)
    print '|' (,+1)
    print $tot12_m (,65,10)
    print '|' (,+1)
    print $Emp_Total (,78,12)
    print '|' (,+1,1)
    print $Mth_Total (,94,12)
    print '|' (,+1,1)
    print $PartA_Total (,109,12)
    
    print '|' (,+1,1)
    print $Bal_Total  (,124,10)
    print '|' (,+1,1)
    print $Sal_Total (,137,21)
    print '|' (,+1)
    print $Avg_Sal_Total (,162)
   
   
   move 0 to #tot9_m
   move 0 to #tot10_m
   move 0 to #tot11_m
   move 0 to #tot12_m
   move 0 to #Emp_Total
   move 0 to #Mth_Total
   move 0 to #PartA_Total
   move 0 to #Bal_Total
   move 0 to #Sal_Total
   move 0 to #Avg_Sal_Total

end-procedure

!***********************************************************************
! Line -113 -Men+Women total part G
!***********************************************************************

Begin-procedure Line-113

   move 113 to #line
    GET $LineDescr FROM LineDescription(#line) Description   
    position (+1)
   print $LineDescr   (, 1, 40)
     
    move 93 to #line
 
  While #line <=109
  
   if #line <> 95 and #line <>98 and #line <> 101 and #line <>104 and #line <> 107 

       Get #tot_9 from Report-Detail-G(#line)  RANKCOL(1)
       Get #tot_10 from Report-Detail-G(#line) RANKCOL(2)
       Get #tot_11 from Report-Detail-G(#line) RANKCOL(3)
       Get #tot_12 from Report-Detail-G(#line) RANKCOL(4)
       
      add  #tot_9 to #tot9_m
      add  #tot_10 to #tot10_m
      add  #tot_11 to #tot11_m
      add  #tot_12 to #tot12_m
      
      Get #Emp_Tot from Report-Detail-Total (#line)
      
      add #Emp_Tot to #Emp_Total
      
      Get #Mth_Tot from Total-Month(#line)
      
      add #Mth_Tot to #Mth_Total
      
      Get #PartA from  Part-A-count(#line)
      add #PartA to #PartA_Total
      
      Get #Bal from Balance(#line)
      add #Bal to #Bal_Total
      
      Get #Emp_Sal from Report-Detail-sal(#line)
      add #Emp_sal to #Sal_Total
      
      Get #Avg_Sal from Weight-sal(#line)
      add #Avg_Sal to #Avg_Sal_Total
   end-if   
      
   add 1 to #line
   
   end-while
   
   move 113 to #line
   
    do Format-Number (#tot9_m,$tot9_m,'99,999,999')
    do Format-Number (#tot10_m,$tot10_m,'99,999,999')
    do Format-Number (#tot11_m,$tot11_m,'99,999,999')
    do Format-Number (#tot12_m,$tot12_m,'99,999,999')
    do Format-Number (#Emp_Total,$Emp_Total,'99,999,999')
    do Format-Number (#Mth_Total,$Mth_Total,'99,999,999')
    do Format-Number (#PartA_Total,$PartA_Total,'99,999,999')
    do Format-Number (#Bal_Total,$Bal_Total,'999,999')
    do Format-Number (#Sal_Total,$Sal_Total,'999,999,999,999,999')
    do Format-Number (#Avg_Sal_Total,$Avg_Sal_Total,'999,999,999,999,999')
    
    print $tot9_m (,26,10)
    print '|' (,+1)
    print $tot10_m (,39,10)
    print '|' (,+1)
    print $tot11_m (,52,10)
    print '|' (,+1)
    print $tot12_m (,65,10)
    print '|' (,+1)
    print $Emp_Total (,78,12)
    print '|' (,+1,1)
    print $Mth_Total (,94,12)
    print '|' (,+1,1)
    print $PartA_Total (,109,12)
    
    print '|' (,+1,1)
    print $Bal_Total  (,124,10)
    print '|' (,+1,1)
    print $Sal_Total (,137,21)
    print '|' (,+1)
    print $Avg_Sal_Total (,162)
   
   
   move 0 to #tot9_m
   move 0 to #tot10_m
   move 0 to #tot11_m
   move 0 to #tot12_m
   move 0 to #Emp_Total
   move 0 to #Mth_Total
   move 0 to #PartA_Total
   move 0 to #Bal_Total
   move 0 to #Sal_Total
   move 0 to #Avg_Sal_Total

end-procedure


!***********************************************************************
! Line Breaks
! Fromat Line Breaks
!***********************************************************************
begin-procedure Line-Breaks
Evaluate #line
   When = 8
   When = 16
   When = 42
   When = 43
   When = 44
   When = 48
   When = 62
   When = 63
   When = 67
   when = 81
   When = 82
   When = 90
   When = 91
   When = 109
   When = 113
   when = 134
   when = 135
   when = 136
   when = 140
   when = 151
   when = 152
     print '-' (+1,1,180) fill
   break
   when = 25
    print ' ' (+1,1,180) fill
    break
   when = 116
   when = 127
   when = 128
    print '-' (+1,51,84) fill  
End-Evaluate
end-procedure

!***********************************************************************
#include 'stdapi.sqc'    !Routine to Update Run status
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askcalyr.sqc'  !Ask Calendar Year input
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for dtu formatting
#Include 'number.sqc'    !Routines to format numbers
!***********************************************************************