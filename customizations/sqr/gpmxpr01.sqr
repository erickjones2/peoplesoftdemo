!***********************************************************************
!GPMXPR01. Loans by Calendar                                           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  31241710                                            *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup02.sqc'  !Printer and page-size initialization

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Report-Translation
  do Init-Report
  do Select-Parameters
  if $Finalized_Cal = 'Y'
    do Delete-Temp-Tables
    if $All_values = 'N'
      let #ePinNum = #rc_pin_num
      do Select-Run
    else
       do Select-Elements
    end-if
    do Get-Print-Data
  else
   Let $error = 'The payroll calculation status must be finalized - Please, finalize the calendar ' || $Cal_run_id
   display $Error
  end-if
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
  do Reset
end-report

begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'GPMXPR01' to $ReportID
  let $ReportTitle = $Rep_Title
  display $ReportTitle
  move 'Ver. PUM-35.01'  to $ReportVersion 
  display $ReportVersion 
end-procedure Init-Report


begin-heading 08
  print 'PeopleSoft'           (1,1) center
  uppercase $ReportTitle
  print $ReportTitle           (+1,1) center 
  print $Page                  (3,159)
  page-number                  ( ,168)
  print $Date                  (4,159)
  print $ReportDate            (,168)
  print $Time                  (5,159)
  print $ReportTime            (,168) 
  
  print $Report                (3,1)
  print $ReportID              (,20)
  Print $Calendar_Run          (4,1)
  Print $Cal_run_id            (,20)
  print $From                  (5,1)
  do Format-DateTime($Prd_Begin, $Out,{DEFDATE}, '','')
  print $out                   (,20)
  print $To                    (,+1)
  do Format-DateTime($Prd_End, $out, {DEFDATE}, '', '')
  print $out                   ( ,+1)
  
  print '='                    (6,1,177) fill
  print $H_Emplid              (7,1)
  print $H_Name                ( ,13)
  let $H_Deduction = $H_Deduction || ', ' || $H_Descr
  print $H_Deduction           ( ,54)
  print $H_Loan_Num            ( ,93)
  print $H_Loan_Date           ( ,113)
  print $H_Total_Amt           ( ,134)
  print $H_Pay_Amt             ( ,148)
  print $H_Balance             ( ,163)
  Print '='                    (8,1,177) fill
end-heading

!**********************************
begin-procedure Select-Parameters
!**********************************
begin-SELECT
CAL.CAL_RUN_ID
CAL.ALL_VALUES
CAL.PIN_NUM

    let $Cal_run_id   = &CAL.CAL_RUN_ID
    let $All_values   = &CAL.ALL_VALUES
    let #rc_pin_num   = &CAL.PIN_NUM
    let $Cal_run_id   = rtrim($Cal_run_id,' ')
    
    if $All_values = 'N'
       move #rc_pin_num to $rc_pin_num 9999999
    end-if

    Do Date-End

FROM PS_GPMX_RC_LNCAL CAL
WHERE CAL.OPRID       = $Prcs_OprID
AND   CAL.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters

!**********************************
begin-procedure Date-End
!**********************************
let $Finalized_Cal = 'N'
begin-select
FBB.CAL_RUN_ID
FBB.CAL_ID
FBB.GP_PAYGROUP
FBB.PAY_ENTITY
FBB.PRD_BGN_DT
FBB.PRD_END_DT
FAA.RUN_FINALIZED_TS

  let $Finalized_TS    = &FAA.RUN_FINALIZED_TS
  let $Cal_GP_Paygroup = &FBB.GP_PAYGROUP
  let $Cal_Pay_Entity  = &FBB.PAY_ENTITY
  let $Prd_Begin       = &FBB.PRD_BGN_DT
  let $Prd_End         = &FBB.PRD_END_DT
  Do convert-to-dtu-date(&FBB.PRD_END_DT, $End_dt)
  Do convert-from-dtu-date($End_dt, $End_dt)
  let $Finalized_Cal = 'Y'

FROM PS_GP_CAL_RUN FAA, 
PS_GP_CAL_RUN_DTL FBB
WHERE FAA.CAL_RUN_ID = FBB.CAL_RUN_ID
AND FAA.RUN_FINALIZED_IND = 'Y'
AND FBB.CALC_TYPE = 'P'
AND FBB.CAL_RUN_ID = $Cal_run_id
end-select
end-procedure Date-End

!**********************************
begin-procedure Select-Elements
!**********************************
begin-select
EE.PIN_NUM

   Let #ePinNum = &EE.PIN_NUM
   do Select-Run
   
FROM PS_GP_PIN EE 
WHERE EE.PIN_CATEGORY = 'PR' 
AND EE.PIN_TYPE = 'DD'
end-select
end-procedure Select-Elements

!**********************************
begin-procedure Select-Run
!**********************************
let #Payment_Val = 0
let #Arrear_Val = 0
begin-select
DED.EMPLID
DED.EMPL_RCD
DED.CAL_RUN_ID
DED.GP_PAYGROUP
DED.CAL_ID
DED.RSLT_SEG_NUM
DED.CALC_RSLT_VAL
DED.CALC_ADJ_VAL
DED.PIN_NUM
DED.SLICE_BGN_DT
DED.SLICE_END_DT
DED.USER_FLD1 

  let $Emplid       = &DED.EMPLID
  let #EmplRcd      = &DED.EMPL_RCD
  let $Paygroup     = &DED.GP_PAYGROUP
  let $Cal_ID       = &DED.CAL_ID
  let $Cal_run_id   = &DED.CAL_RUN_ID
  let #Rslt_Seg_Num = &DED.RSLT_SEG_NUM
  let #Payment_Val  = &DED.CALC_RSLT_VAL + &DED.CALC_ADJ_VAL
  let #Payment_Val  = round(#Payment_Val,2)
  let $Prd_Beg_Dt   = &DED.SLICE_BGN_DT
  let $Prd_End_Dt   = &DED.SLICE_END_DT
  LET $USER_FLD1    = &DED.USER_FLD1 
    
  do Get-Acm-Mbr
  do Select-Descr
  do Get-Empl-Name
  do Get-Accum-Data
  do Get-Loan-Total
   
  Let #Balance_Amt = round(#Loan_Tot_Amt - #Payment_Val, 2)
    
  if $Found_Loan_Ac = 'Y'
      do Insert-Loan-Data
  end-if
 
FROM PS_GP_RSLT_ERN_DED DED
WHERE DED.CAL_RUN_ID = $Cal_run_id
AND DED.CAL_RUN_ID   = DED.ORIG_CAL_RUN_ID
AND DED.PIN_NUM      = #ePinNum
ORDER BY DED.EMPLID
end-select
end-procedure Select-Run

!**********************************
begin-procedure Get-Acm-Mbr
!**********************************
BEGIN-SELECT 
MBR.PIN_NUM
   
   Let #Acum_Num = &MBR.PIN_NUM
   
FROM PS_GP_ACM_MBR MBR,
PS_GP_PIN PINM
WHERE MBR.PIN_MBR_NUM   = #ePinNum
AND MBR.PIN_NUM         = PINM.PIN_NUM
AND PINM.PIN_CATEGORY   = 'PR'
AND PINM.PIN_PARENT_NUM = 0
END-SELECT
end-procedure Get-Acm-Mbr

!**********************************
begin-procedure Select-Descr
!**********************************
begin-select
PDD.DESCR
PDD.PIN_NM

  Let $Pin_Descr = rtrim(&PDD.DESCR, ' ')
  Let $Pin_Name = rtrim(&PDD.PIN_NM, ' ')

FROM PS_GP_PIN PDD
WHERE PDD.PIN_NUM= #ePinNum
end-select
begin-select
PDL.DESCR

  Let $Pin_Descr = rtrim(&PDL.DESCR, ' ')

FROM PS_GP_PIN_LANG PDL
WHERE PDL.PIN_NUM = #ePinNum
AND   PDL.LANGUAGE_CD = $curr_language_cd
end-select
Let $Description  = substr(($Pin_Name || ', ' || $Pin_Descr), 1,40)
end-procedure Select-Descr

!**********************************
begin-procedure Get-Empl-Name
!**********************************
begin-select
EN.NAME_PSFORMAT
  let $Empl_Name = rtrim(&EN.NAME_PSFORMAT,' ')

FROM PS_PERSON_NAME EN
WHERE EN.EMPLID = $Emplid
AND EN.NAME_TYPE = 'PRI'
end-select
end-procedure Get-Empl-Name

!**********************************
begin-procedure Get-Accum-Data
!**********************************
let #Accum_Value = 0
let $Loan_Num = ''
let $Found_Loan_Ac = 'N'
BEGIN-SELECT
D.CALC_RSLT_VAL
D.USER_KEY1
D.SLICE_END_DT

  let #Accum_Value = &D.CALC_RSLT_VAL
  let $Loan_Num = rtrim(&D.USER_KEY1, ' ')
  let $Found_Loan_Ac = 'Y'
  let $Loan_Date    = &D.SLICE_END_DT

FROM PS_GP_RSLT_ACUM D
,PS_GP_CAL_RUN_DTL C
WHERE D.EMPLID        = $Emplid
AND   D.GP_PAYGROUP   = $Paygroup
AND   D.CAL_RUN_ID    = $Cal_run_id
AND   D.CAL_RUN_ID    = D.ORIG_CAL_RUN_ID
AND   D.CAL_RUN_ID    = C.CAL_RUN_ID
AND   D.CAL_ID        = C.CAL_ID
AND   C.CALC_TYPE     = 'P'
AND   D.RSLT_SEG_NUM  = #Rslt_Seg_num
AND   D.PIN_NUM       = #Acum_Num
AND   D.SLICE_BGN_DT >= $Prd_Beg_Dt
AND   D.SLICE_END_DT <= $Prd_End_Dt
AND   D.CALC_RSLT_VAL <> 0
AND   C.CAL_SEQ_NUM   = (SELECT MAX(CAL_SEQ_NUM) FROM PS_GP_CAL_RUN_DTL
                         WHERE CAL_RUN_ID = C.CAL_RUN_ID)
AND   D.USER_KEY1 = $USER_FLD1 
                         
END-SELECT
end-procedure Get-Accum-Data

!**********************************
begin-procedure Get-Loan-Total
!**********************************
Let #Loan_Total = 0
Let #Loan_Tot_Amt = 0

begin-select
GL.GPMX_TOT_AMT

  Let #Loan_Total = &GL.GPMX_TOT_AMT
  Let #Loan_Tot_Amt =  #Loan_Total - #Accum_Value + #Payment_Val

FROM PS_GPMX_LOAN GL
WHERE GL.EMPLID = $Emplid
AND GL.EMPL_RCD = #EmplRcd
AND GL.PIN_NUM  = #ePinNum
AND UPPER(GL.GPMX_LOAN_NUM) = UPPER($Loan_Num)
end-select
end-procedure Get-Loan-Total

!**********************************
begin-procedure Insert-Loan-Data
!**********************************
begin-sql
INSERT INTO PS_GPMX_R_LOANS
(EMPLID
,NAME
,DESCR40
,GPMX_LOAN_NUM
,GPMX_DATE
,GPMX_TOT_AMT
,PAYMENT_AMOUNT
,BAL_ADJ
,RSLT_ADD_ARR)
values($Emplid
,$Empl_Name
,$Description
,$Loan_Num 
,$Loan_Date
,#Loan_Tot_Amt
,#Payment_Val
,#Balance_Amt
,#Arrear_Val)
end-sql
end-procedure Insert-Loan-Data

!**********************************
begin-procedure Get-Print-Data
!**********************************
let #Total_Amount = 0
let #Total_Payment = 0
let #Total_Balance = 0
begin-select
R.EMPLID
R.NAME
R.DESCR40
R.GPMX_LOAN_NUM
R.GPMX_DATE
R.GPMX_TOT_AMT
R.PAYMENT_AMOUNT
R.BAL_ADJ

  let $Emplid       = &R.EMPLID
  let $Empl_Name    = substr(&R.NAME,1,40)
  let $Pin_Name     = &R.DESCR40
  let $Loan_Num     = &R.GPMX_LOAN_NUM
  let $Loan_Date    = &R.GPMX_DATE
  let #Loan_Tot_Amt = &R.GPMX_TOT_AMT  
  let #Payment      = &R.PAYMENT_AMOUNT
  let #Balance_Amt  = &R.BAL_ADJ
  
  let #Total_Amount  = #Total_Amount  + #Loan_Tot_Amt
  let #Total_Payment = #Total_Payment + #Payment
  let #Total_Balance = #Total_Balance + #Balance_Amt
  
  do Print-Data
  
FROM PS_GPMX_R_LOANS R
ORDER BY R.EMPLID, R.GPMX_LOAN_NUM DESC
end-select
Do Print-Totals
end-procedure Get-Print-Data

!**********************************
begin-procedure Print-Data
!**********************************
  print ''                      (+1,1)   
  print $Emplid                 (  ,1)  ON-BREAK
  print $Empl_Name              ( ,13)  ON-BREAK
  print $Pin_Name               ( ,54,38)
  print $Loan_Num               ( ,93)
  Do Format-DateTime($Loan_Date, $Loan_DateOut,{DEFDATE}, '','')
  print $Loan_DateOut           ( ,113)
  print #Loan_Tot_Amt           ( ,131) edit 999,999,999.99
  print #Payment                ( ,146) edit 999,999,999.99
  print #Balance_Amt            ( ,161) edit 999,999,999.99
  
  move 0 to #Loan_Tot_Amt
  move 0 to #Payment_Val
  move 0 to #Balance_Amt
end-procedure Print-Data

!**********************************
begin-procedure Print-Totals
!**********************************
graphic (+1,131,14) horz-line 10
graphic (,146,14) horz-line 10
graphic (,161,14) horz-line 10
uppercase $H_Calend_Tot
print  $H_Calend_Tot        (+2,93)
print  #Total_Amount        ( ,131) edit 999,999,999.99
print  #Total_Payment       ( ,146) edit 999,999,999.99
print  #Total_Balance       ( ,161) edit 999,999,999.99
end-procedure Print-Totals

!**********************************
begin-procedure Delete-Temp-Tables
!**********************************
begin-sql
  DELETE FROM PS_GPMX_R_LOANS
end-sql
end-procedure Delete-Temp-Tables

!**********************************
!Procedure Report-Translation
!**********************************
begin-Procedure Report-Translation
 Let $language_cd = $prcs_language_cd
 do Init_Report_Translation ('GPMXPR01', $language_cd)
 do Append_Report_Translation ('GPMXPR01')
 do Get_Field_Information ('GPMXPR01', 'HEAD1',  $Date,         #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD2',  $Page,         #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD3',  $Report,       #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD4',  $Time,         #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD5',  $Calendar_Run, #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD6',  $From,         #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD7',  $To,           #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD8',  $Rep_Title,    #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD9',  $H_Emplid,     #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD10', $H_Name,       #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD11', $H_Deduction,  #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD12', $H_Loan_Num,   #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD13', $H_Loan_Date,  #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD14', $H_Total_Amt,  #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD15', $H_Pay_Amt,    #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD16', $H_Balance,    #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD17', $H_Descr,      #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD18', $H_Calend_Tot, #DW)
 do Get_Field_Information ('GPMXPR01', 'HEAD19', $HArrearAmt,   #DW)
End-Procedure Report-Translation


#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
#include 'getpgdta.sqc'  !Get-Paygroup-Data
#include 'getcodta.sqc'  !Get-Company-Data
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
