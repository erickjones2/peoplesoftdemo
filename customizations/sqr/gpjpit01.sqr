!***********************************************************************
!   GPJPIT01:  Withholding Tax Register                                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  32211376                                            !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !Printer and page-size initialization, SETUP31 and
                        !  SETUP32 SQCs to support HTML, HP PCL, PostScript,
                        !  PDF and Window in addition to Line Printer as
                        !  the output type.


!***********************************************************************
! begin-report                                                         *                                                          *
!                                                                      *
! Called By: N/A                                                       *
! Calls:     Init-Processing                                           *
!            Get-Values                                                *
!            Process-Main                                              *
!            Reset                                                     *
!            Delete-From-AE-Tables                                     *
!            End-Report                                                *
!***********************************************************************

begin-report

  do Init-Processing

  do Get-Values

  do Get-Header

  do Process-Main

  do Reset                        ! called from reset.sqc

  do Delete-From-AE-Tables

  do Update-Prcs-Run-Status       ! called from prcsapi.sqc to update
                                  ! the Process Monitor to Success
end-report

!***********************************************************************
! Select-Parameters                                                    *                                                          *
!                                                                      *
! Called By: Get-Values                                                *
!***********************************************************************

begin-procedure Select-Parameters

let $Quote = ''''

begin-SELECT

#ifdef debugy
    show 'BEGINNING RUNCONTROL SELECT'
#end-if

A.GPJP_TAX_ESTAB
A.YEAR_CODE

FROM PS_GPJP_RC_IT_WHRG A
WHERE A.OPRID       = $PRCS_OPRID
AND A.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
end-SELECT

Let #Year_Num = to_number(&A.YEAR_CODE)

do dtu-format-date(#Year_Num,1,1,$First_Day_Of_Year_DTU)
do Convert-From-DTU-Date($First_Day_Of_Year_DTU,$First_Day_Of_Year)

do dtu-format-date(#Year_Num,12,31,$Last_Day_Of_Year_DTU)
do Convert-From-DTU-Date($Last_Day_Of_Year_DTU,$Last_Day_Of_Year)


end-procedure !Select-Parameters

!***********************************************************************
! Init-Processing                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Define-Prcs-Vars        - prcsapi.sqc (prcsdef.sqc)    *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Init-Report                                            *
!               Init-Number             - number.sqc                   *
!               Get-Language-Codes      - prcslng.sqc                  *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!***********************************************************************

begin-procedure Init-Processing

  do Init-Datetime                ! called from datetime.sqc

  do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)

  do Define-Prcs-Vars             ! called from prcsapi.sqc (prcsdef.sqc)

  do Get-Run-Control-Parms        ! In prcsapi.sqc

  do Init-Report

  do Init-Number                  ! called from number.sqc

  do Get-Language-Codes           ! called from prcslng.sqc

  let $Report_Language       = $curr_language_cd   ! curr_language_cd resolved in prcslng.sqc

  Let #FileCount = 1

  do Get-Pin-Code

end-procedure !Init-Processing

!***********************************************************************
! Init-Report                                                          *
!                                                                      *
! Called By: Init-Processing                                           *
! Calls:     Init_Report_Translation    -   sqrtrans.sqc               *
!            Append_Report_Translation  -   sqrtrans.sqc               *
!            Get_Field_Information                                     *
!            Format-DateTime                                           *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header, date formatting, time           *
!               formatting, translations & strings tables retrievals.  *
!***********************************************************************

begin-procedure Init-Report

! Column definitons

!Transaction Columns
  #define Col_1         1
  #define Col_2         13
  #define Col_3         17
  #define Col_4         29
  #define Col_5         43
  #define Col_6         57
  #define Col_7         71
  #define Col_7c        73
  #define Col_7a        85
  #define Col_7b        99
  #define Col_8         111
  #define Col_9         118
  #define Col_10        125
  #define Col_11        134
  #define Col_12        143
  #define Col_13        150
  #define Col_14        161
  #define Col_15        168
  #define Col_16        175
  #define Col_17        182
  #define col_17a       184


! Header Columns
  #define Col_2h        9
  #define Col_2h_1      15
  #define Col_2h_2      20
  #define Col_3h        22
  #define Col_4h        64
  #define Col_5h        76
  #define Col_6h        88
  #define Col_7h        98

! Translations procedures & Strings Table retrievals.

  do Init_Report_Translation ($ReportID,$curr_Language_Cd)
  do Append_Report_Translation ('GPJPIT01')

  do Get_Field_Information ('GPJPIT01','RPT_TITLE',          $RPT_TITLE_lbl,          #DW)
  do Get_Field_Information ('GPJPIT01','YEAR',               $YEAR_lbl,               #DW)
  do Get_Field_Information ('GPJPIT01','COMPANY_ID',         $COMPANY_ID_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','GENDER_ID',          $GENDER_ID_lbl,          #DW)
  do Get_Field_Information ('GPJPIT01','DEPTID',             $DEPTID_lbl,             #DW)
  do Get_Field_Information ('GPJPIT01','BIRTH_DT',           $BIRTH_DT_lbl,           #DW)
  do Get_Field_Information ('GPJPIT01','EMPLID',             $EMPLID_lbl,             #DW)
  do Get_Field_Information ('GPJPIT01','EMPL_RCD',           $EMPL_RCD_lbl,           #DW)
  do Get_Field_Information ('GPJPIT01','HIRE_DT',            $HIRE_DT_lbl,            #DW)
  do Get_Field_Information ('GPJPIT01','ADDRESS',            $ADDRESS_lbl,            #DW)
  do Get_Field_Information ('GPJPIT01','TERM_DT',            $TERM_DT_lbl,            #DW)
  do Get_Field_Information ('GPJPIT01','PAY_DATE',           $PAY_DATE_lbl,           #DW)
  do Get_Field_Information ('GPJPIT01','AMT_OF_EARN',        $AMT_OF_EARN_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','TAXABLE',            $TAXABLE_lbl,            #DW)
  do Get_Field_Information ('GPJPIT01','AMT_OF_SOC_INS_PRE', $AMT_OF_SOC_INS_PRE_lbl, #DW)
  do Get_Field_Information ('GPJPIT01','INCOME_TAX',         $INCOME_TAX_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','IT_TOTAL',           $IT_TOTAL_lbl,           #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_IT_TAXDIFF',    $IT_TAXDIFF_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','FIXED_WORK_DAYS',    $FIXED_WORK_DAYS_lbl,    #DW)
  do Get_Field_Information ('GPJPIT01','HOLIDAY_NUM',        $HOLIDAY_NUM_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','FIXED_WORK_HOURS',   $FIXED_WORK_HOURS_lbl,   #DW)
  do Get_Field_Information ('GPJPIT01','OT_WORK_HOURS',      $OT_WORK_HOURS_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','LATE_OT_HOURS',      $LATE_OT_HOURS_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','HOL_WRK_HOURS',      $HOL_WRK_HOURS_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','PTO',                $PTO_lbl,                #DW)
  do Get_Field_Information ('GPJPIT01','SPEC_LEAVE',         $SPEC_LEAVE_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','ABS_DAYS',           $ABS_DAYS_lbl,           #DW)
  do Get_Field_Information ('GPJPIT01','SALARY',             $SALARY_lbl,             #DW)
  do Get_Field_Information ('GPJPIT01','BONUS',              $BONUS_lbl,              #DW)
  do Get_Field_Information ('GPJPIT01','SAL_N_BONUS',        $SAL_N_BONUS_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','FORMER_EMPLOYER',    $FORMER_EMPLOYER_lbl,    #DW)
  do Get_Field_Information ('GPJPIT01','SAL_BON_EMPL',       $SAL_BON_EMPL_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','PTO_TITLE',          $PTO_TITLE_lbl,          #DW)
  do Get_Field_Information ('GPJPIT01','ENTITLE',            $ENTITLE_lbl,            #DW)
  do Get_Field_Information ('GPJPIT01','TAKE',               $TAKE_lbl,               #DW)
  do Get_Field_Information ('GPJPIT01','INCOME_TAX_ALL',     $INCOME_TAX_ALL_lbl,     #DW)
  do Get_Field_Information ('GPJPIT01','WORK_DAYS',          $WORK_DAYS_lbl,          #DW)
  do Get_Field_Information ('GPJPIT01','WORK_HOURS',         $WORK_HOURS_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','LEAVE_ABSENCE',      $LEAVE_ABSENCE_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','YEAR_END_ADJ',       $YEAR_END_ADJ_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','TOTAL',              $TOTAL_lbl,              #DW)
  do Get_Field_Information ('GPJPIT01','CARRIED_PTO',        $CARRIED_PTO_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','PTO_ENTITLE',        $PTO_ENTITLE_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','TOTAL_DAY',          $TOTAL_DAY_lbl,          #DW)
  do Get_Field_Information ('GPJPIT01','PREV_YR_DAY',        $PREV_YR_DAY_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','CUR_YR_DAY',         $CUR_YR_DAY_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','BALANCE',            $BALANCE_lbl,            #DW)

  do Get_Field_Information ('GPJPIT01','TAXATION_TOTAL',     $TAXATION_TOTAL_lbl,     #DW)
  do Get_Field_Information ('GPJPIT01','ANNUAL_INC_TAX',     $ANNUAL_INC_TAX_lbl,     #DW)
  do Get_Field_Information ('GPJPIT01','INC_TAX_TYPE',       $INC_TAX_TYPE_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','EMPL_TYPE',          $EMPL_TYPE_lbl,          #DW)
  do Get_Field_Information ('GPJPIT01','NET_SALARY',         $NET_SALARY_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','AMT_OF_HOUSING',     $AMT_OF_HOUSING_lbl,     #DW)
  do Get_Field_Information ('GPJPIT01','PERS_INS_PREM',      $PERS_INS_PREM_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','EMPL_DIS_TYPE',      $EMPL_DIS_TYPE_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','TOTAL_SOC_INS_PREM', $TOTAL_SOC_INS_PREM_lbl, #DW)
  do Get_Field_Information ('GPJPIT01','INC_TAX_AFTER_DED',  $INC_TAX_AFTER_DED_lbl,  #DW)
  do Get_Field_Information ('GPJPIT01','NON_LIFE_DED',       $NON_LIFE_DED_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','EARTH_QUAKE_INS',    $Earth_Quake_Ins_lbl,    #DW)
  do Get_Field_Information ('GPJPIT01','SPOUSE_TYPE',        $SPOUSE_TYPE_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','SOC_INS_PREM_RPT',   $SOC_INS_PREM_RPT_lbl,   #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_YEA_CARRYOVER', $GPJP_YEA_CARRYOVER_lbl, #DW)
  do Get_Field_Information ('GPJPIT01','DED_CUR_REFUND',     $GPJP_YEA_DED_REF_lbl,   #DW)
  do Get_Field_Information ('GPJPIT01','SPC_TAX_YEA',        $SPC_TAX_YEA_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','SPOUSE_INCOME',      $SPOUSE_INCOME_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','SPOUSE_DIS_TYPE',    $SPOUSE_DIS_TYPE_lbl,    #DW)
  do Get_Field_Information ('GPJPIT01','SCMAFI_DED',         $SCMAFI_DED_lbl,         #DW)
  do Get_Field_Information ('GPJPIT01','INC_TAX_SPC',        $INC_TAX_SPC_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','DEP_MINUS_SPOUSE',   $DEP_MINUS_SPOUSE_lbl,   #DW)
  do Get_Field_Information ('GPJPIT01','LIFE_DED',           $LIFE_DED_lbl,           #DW)
  do Get_Field_Information ('GPJPIT01','COLLECTED_TAX',      $COLLECTED_TAX_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','SPEC_DEPENDENT',     $SPEC_DEPENDENT_lbl,     #DW)
  do Get_Field_Information ('GPJPIT01','NON_LIFE_DED',       $NON_LIFE_DED_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','LT_NON_LIFE_DED',    $LTNON_LIFE_DED_lbl,     #DW)
  do Get_Field_Information ('GPJPIT01','TAX_DIFF',           $TAX_DIFF_lbl,           #DW)
  do Get_Field_Information ('GPJPIT01','ELDERLY_DEP',        $ELDERLY_DEP_lbl,        #DW)
  do Get_Field_Information ('GPJPIT01','SPOUSE_SPEC_DED',    $SPOUSE_SPEC_DED_lbl,    #DW)
  do Get_Field_Information ('GPJPIT01','ELDERLY_LIVE',       $ELDERLY_LIVE_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','DEPENDENT_DED',      $DEPENDENT_DED_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','DISABLED_NUM',       $DISABLED_NUM_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','TOTAL_INC_DED',      $TOTAL_INC_DED_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','SPEC_DIS_NUM',       $SPEC_DIS_NUM_lbl,       #DW)
  do Get_Field_Information ('GPJPIT01','ANNUAL_NET_INC',     $ANNUAL_NET_INC_lbl,     #DW)
  do Get_Field_Information ('GPJPIT01','SPEC_DIS_LIVE',      $SPEC_DIS_LIVE_lbl,      #DW)
  do Get_Field_Information ('GPJPIT01','NA',                 $NA,                     #DW)
  do Get_Field_Information ('GPJPIT01','ORDINARY_SP',        $ORDINARY,               #DW)
  do Get_Field_Information ('GPJPIT01','ELDERLY',            $ELDERLY,                #DW)
  do Get_Field_Information ('GPJPIT01','INC_TAX_RECON_TAX',  $INC_TAX_RECON_TAX,      #DW)

  do Get_Field_Information ('GPJPIT01','PYMT_DT',            $GPJP_IT01_Pymt_date,           #DW)
  do Get_Field_Information ('GPJPIT01','PRD_BGN_DT',         $GPJP_IT01_Prd_bgn_dt,          #DW)
  do Get_Field_Information ('GPJPIT01','PRD_END_DT',         $GPJP_IT01_Prd_end_dt,          #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_YRS_SERV',   $GPJP_IT01_Gpjp_ra_yrs_serv,    #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_BY_DISABLE', $GPJP_IT01_Gpjp_ra_by_disable,  #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_INC_RPT',    $GPJP_IT01_Gpjp_ra_inc_rpt,     #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_EARNINGS',   $GPJP_IT01_Gpjp_ra_earnings,    #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_PRV_PMT_SYR',   $GPJP_IT01_Gpjp_prv_pmt_syr,    #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_DELTA',      $GPJP_IT01_Gpjp_ra_delta,       #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_DEDUCTION',  $GPJP_IT01_Gpjp_ra_deduction,   #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_TAXABLE',    $GPJP_IT01_Gpjp_ra_taxable,     #DW)
  do Get_Field_Information ('GPJPIT01','GPJP_RA_WH_TAX',     $GPJP_IT01_Gpjp_ra_wh_tax,      #DW)
  do Get_Field_Information ('GPJPIT01','ORDINARY',           $GPJP_IT01_Ordinary,            #DW)
  do Get_Field_Information ('GPJPIT01','DISABLED',           $GPJP_IT01_Disabled,            #DW)
  do Get_Field_Information ('GPJPIT01','YES',                $GPJP_IT01_Yes,                 #DW)
  do Get_Field_Information ('GPJPIT01','NO',                 $GPJP_IT01_No,                  #DW)
  do Get_Field_Information ('GPJPIT01','RET_ALW',            $GPJP_IT01_Ret_Alw_lbl,         #DW)
  
  do Get_Field_Information ('GPJPIT01','INC_ADJ',            $INC_ADJ,         #DW)
  do Get_Field_Information ('GPJPIT01','NET_SAL_AFT_DED',    $NET_SAL_AFT_DED, #DW)
  do Get_Field_Information ('GPJPIT01','BAS_DED',            $BAS_DED,         #DW)
  



! Report variables.
  let $ReportID       = 'GPJPIT01'
  let $ReportTitle    = $RPT_TITLE_lbl
  let $ReportDate     = $AsOfToday
  let $ReportTime     = $AsOfNow



! Initialize date formatting.                                          *

    let $Date_Init = '1900-01-01 00:00:00.000'

    #ifdef ORACLE
           let $Date_Init = '01-NOV-1999'
    #end-if

    do Format-DateTime($Date_Init, $out999, {DEFDATE}, '', '')
    let $_TableAlias = 'B'
    do Security-Param

end-procedure !Init-Report

!***********************************************************************
! Get-Values                                                           *
!                                                                      *
! Called By: begin-report                                              *
! Calls:     Ask-Values         -   this program                       *
!            Select-Parameters  -   tlrnctl1.sqc                       *
!                                                                      *
! Description:  If process instance blank, prompt user for input       *
!               If populated, get values from run control              *
!               Format dates to print in header                        *
!***********************************************************************

begin-procedure Get-Values

    if $prcs_process_instance = ''
        do Ask-Values
    else
        do Select-Parameters
    end-if

    do Format-DateTime($FromDate,$HdgFromDt,{DEFDATE}, '', '')
    do Format-DateTime($ThruDate,$HdgThruDt,{DEFDATE}, '', '')

end-procedure !Get-Values

!***********************************************************************
! Ask-Values                                                           *
!                                                                      *
! Called By: Get-Values                                                *
! Calls:     none                                                      *
!                                                                      *
! Description: Prompt user to input values                             *
!***********************************************************************

begin-procedure Ask-Values

  input $IncludeDetail 'Include Detail?  Y/N' TYPE=char maxlen=1

end-procedure !Ask-Values

begin-procedure Get-Pin-Code

begin-select
PIN_NUM &IN_TAX_SAL
From PS_GP_PIN
Where PIN_NM = 'IN TAX SAL'
end-select

begin-select
PIN_NUM &IN_TAX_BON
From PS_GP_PIN
Where PIN_NM = 'IN TAX BON'
end-select

end-procedure !Get-Pin-Code

!***************************
begin-heading 11
!***************************

#include 'stdhdg01.sqc'

!***********************************************************************
! Print column definitions.  Some fields are lined up vertically with  *
!   other fields on the report.  The first occurence of a column       *
!   location is defined.  After that, fields that occur in the same    *
!   column use the first field's column definition.  Field labels end  *
!   in _lbl.  Other column definitions are for the field values.       *
!***********************************************************************

!Line 1
print $YEAR_lbl (,{Col_1})
print ':' (,)
print &A.YEAR_CODE (,{Col_2h})

!Line 2
print $COMPANY_ID_lbl (+1,{Col_1})
print ':' (,)
print &H.COMPANY (,{Col_2h})
print $CompanyName (,{Col_3h})
print $GENDER_ID_lbl (,{Col_4h})
print ':' (,)
print $Gender_desc (,{Col_5h})
print $ADDRESS_lbl (,{Col_6h})
print ':' (,)
print &H5.POSTAL (,{Col_7h})
Print $state_desc (,{col_11})
Print &H5.CITY (,{col_13})


!Line 3
print $DEPTID_lbl (+1,{Col_1})
print ':' (,)
print &H.DEPTID (,{Col_2h})
print $DeptName (,{Col_3h})
print $BIRTH_DT_lbl (,{Col_4h})
print ':' (,)
print $BIRTHDATE (,{Col_5h}) edit 'YYYY/MM/DD'
print &H5.ADDRESS1 (,{Col_7h})

!Line 4
print $EMPLID_lbl (+1,{Col_1})
print ':' (,)
print &B.EMPLID (,{Col_2h})
print &H6.NAME (,{Col_3h})
print $HIRE_DT_lbl (,{Col_4h})
print ':' (,)
print $HIRE_DT (,{Col_5h}) edit 'YYYY/MM/DD'

print &H5.ADDRESS2 (,{Col_7h})

!Line 5
print $EMPL_RCD_lbl (+1,{Col_1})
print ':' (,)
print &B.EMPL_RCD (,{Col_2h})
print $TERM_DT_lbl (,{Col_4h})
print ':' (,)
print $TERMINATION_DT (,{Col_5h}) edit 'YYYY/MM/DD'
print &H5.ADDRESS3 (,{Col_7h})

!Line 6

!Line 7
print $INCOME_TAX_ALL_lbl (+1,{Col_7})
print $WORK_DAYS_lbl (,{Col_8})
print $WORK_HOURS_lbl (,{Col_10})
print $LEAVE_ABSENCE_lbl (,{Col_14})

!Transaction Header Line
print $PAY_DATE_lbl (+2,{Col_3})
print $AMT_OF_EARN_lbl (,{Col_4})
print $TAXABLE_lbl (,{Col_5})
print $AMT_OF_SOC_INS_PRE_lbl (,{Col_6})
print $INCOME_TAX_lbl (,{Col_7})
print $IT_TAXDIFF_lbl (,{Col_7a})
print $IT_TOTAL_lbl (,{Col_7b})
print $FIXED_WORK_DAYS_lbl (,{Col_8})
print $HOLIDAY_NUM_lbl (,{Col_9})
print $FIXED_WORK_HOURS_lbl (,{Col_10})
print $OT_WORK_HOURS_lbl (,{Col_11})
print $LATE_OT_HOURS_lbl (,{Col_12})
print $HOL_WRK_HOURS_lbl (,{Col_13})
print $PTO_lbl (,{Col_14})
print $SPEC_LEAVE_lbl (,{Col_15})
print $ABS_DAYS_lbl (,{Col_16})

print '-' (+1,1,180) fill

end-heading

!***********************************************************************
! Process-Main                                                         *
!                                                                      *
! Called By: begin-report                                              *
! Calls:     Get-Header                                                *
!            Get-REG2                                                  *
!            Get-Former-Employer                                       *
!            Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Process-Main

begin-select
B.EMPLID
B.EMPL_RCD
B.CAL_RUN_ID
B.GPJP_IT_PTOPRV
B.GPJP_IT_PTOCUR
B.GPJP_IT_PTOTTL
B.GPJP_IT_PTOTKNP
B.GPJP_IT_PTOTKNC
B.GPJP_IT_PTOBAL

 let $Gpjp_it_ptobal         = &B.GPJP_IT_PTOTTL - (&B.GPJP_IT_PTOTKNP + &B.GPJP_IT_PTOTKNC)

  Do Get-Header
  Do Get-REG2
  Do Get-Former-Employer
  Do Get-Year-End-Adj
  Do Get-Ret-Alw_Dtl
  new-page

From PS_GPJP_IT_WH_REG B
Where B.JOBINSTANCE = #prcs_job_instance
[$SecurityClausewithERN]
Order By B.EMPLID
end-select

end-procedure !Process-Main

!***********************************************************************
! Get-Header                                                           *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-Header

!Select Job Information
begin-select
H.COMPANY
H.DEPTID
H.BUSINESS_UNIT
  Let $DeptID = &H.DEPTID
  Let $BU = &H.BUSINESS_UNIT
  Let $Company = &H.Company

  Do Get-Department-Name
  !Values returned: $DeptName, $DeptNameAbbrv, $DeptMgrID, $DeptLocation

  Do Get-Company-Data
  !Values returned: $CompanyName, $CompanyNameAbbrv, $Compnyadd1, $Compnyadd2, $Compnycity

From PS_JOB H
Where H.EMPLID = &B.EMPLID
and H.EMPL_RCD = &B.EMPL_RCD
and H.EFFDT = (Select max(EFFDT)
               From PS_JOB
               Where EMPLID = H.EMPLID
               and EMPL_RCD = H.EMPL_RCD)
and H.EFFSEQ = (Select max(EFFSEQ)
               From PS_JOB
               Where EMPLID = H.EMPLID
               and EMPL_RCD = H.EMPL_RCD
               and EFFDT = H.EFFDT)
end-select

!Select Personal Information
begin-select
H3.SEX
H2.BIRTHDATE
H4.HIRE_DT
H4.TERMINATION_DT

       do Get-gender-descr

       let $BirthDate = datetostr(&H2.BIRTHDATE,'YYYYMMDD')
       let $Hire_Dt = datetostr(&H4.HIRE_DT,'YYYYMMDD')
       let $Termination_Dt = datetostr(&H4.TERMINATION_DT,'YYYYMMDD')

From PS_PERSON H2, PS_PERS_DATA_EFFDT H3, PS_EMPLOYMENT H4
Where H2.EMPLID = &B.EMPLID
and H2.EMPLID = H3.EMPLID
and H2.EMPLID = H4.EMPLID
and H4.EMPL_RCD = &B.EMPL_RCD
and H3.EFFDT = (Select max(EFFDT)
                From PS_PERS_DATA_EFFDT
                Where EMPLID = H3.EMPLID)
end-select

!Select Addresses
begin-select
H5.POSTAL
H5.STATE
H5.CITY
H5.ADDRESS1
H5.ADDRESS2
H5.ADDRESS3
H5.COUNTRY

  do Get-state-descr

From PS_ADDRESSES H5
Where H5.EMPLID = &B.EMPLID
and H5.ADDRESS_TYPE='HOME'
and H5.EFFDT = (Select max(EFFDT)
                From PS_ADDRESSES
                Where EMPLID = H5.EMPLID
                and ADDRESS_TYPE = H5.ADDRESS_TYPE)
end-select

!Select Name
begin-select
H6.NAME

From PS_PERSON_NAME H6
Where H6.EMPLID = &B.EMPLID
end-select

end-procedure !Get-Header


!***********************************************************************
! Get-gender-descr                                                     *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-gender-descr

 let $FieldName = 'SEX'
 let $FieldValue = &H3.SEX
 do Read-Translate-Table
 let $Gender_desc = $XlatLongName

end-procedure !Get-gender-descr


!***********************************************************************
! Get-state-descr                                                     *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-state-descr

begin-select
STATE.DESCR

  let $state_desc = &STATE.DESCR

FROM PS_STATE_TBL STATE
WHERE STATE.STATE = &H5.STATE
AND STATE.COUNTRY = &H5.COUNTRY
end-select

  do Get-St-Nm-Lang

end-procedure !Get-state-descr


!***************************************
begin-procedure Get-St-Nm-Lang
!***************************************

  if $Curr_Language_Cd = $PSOptions_Language_Cd
    goto GetStLngExit
  end-if

  if Rtrim(&H5.STATE,' ') = ''
    goto GetStLngExit
  end-if

begin-SELECT
STNL.DESCR

  if Rtrim(&STNL.DESCR,' ') <> ''
    let $state_desc = Rtrim(&STNL.DESCR,' ')
  end-if

FROM  PS_STATE_TBL_LANG STNL
WHERE STNL.COUNTRY      = &H5.COUNTRY
  AND STNL.STATE        = &H5.STATE
  AND STNL.LANGUAGE_CD  = $Curr_Language_Cd
end-SELECT

GetStLngExit:

end-procedure


!***********************************************************************
! Get-REG2                                                             *
!                                                                      *
! Called By: Process-Main                                              *
! Calls    : Initialize-Totals                                         *
!            Print-Reg2                                                *
!            Print-Reg2-Sal                                            *
!            Print-Sal-Totals                                          *
!            Print-Bon-Totals                                          *
!            Print-Sal-Bon-Totals                                      *
!            Print-Reg1-Head1                                          *
!            Print-Reg1-Head2                                          *
!            Print-Reg1-Detail                                         *
!            Update-Totals                                             *
!***********************************************************************

begin-procedure Get-REG2

Let #Counter = 0
Let $Counter = ' '
Let $GPJP_IT_WH_TYPE_OLD = '10'
Let #Bns_Cntr = 0
do Initialize-Totals

begin-select
C.GPJP_IT_WH_TYPE
C.GPJP_TAX_ESTAB
C.PYMT_DT

       let $Pymt_Dt = datetostr(&C.PYMT_DT,'YYYYMMDD')
C.GPJP_IT_EARNS
C.GPJP_IT_TXBLE
C.GPJP_SC_PREM
C.GPJP_IT_INCTAX
C.GPJP_IT_TAXDIFF
C.GPJP_IT_WRKDAYS
C.GPJP_IT_HOLHRS
C.GPJP_IT_HRSERN
C.OT_HRS
C.GPJP_IT_LTOTHRS
C.GPJP_IT_HOLWRK
C.GPJP_IT_PTODAYS
C.GPJP_IT_SPCDAYS
C.GPJP_IT_ABSDAYS


  Let $Sal_zero = 'N'
  Let $Bns_zero = 'N'

  If &C.GPJP_IT_EARNS = 0
        AND &C.GPJP_IT_TXBLE=0
        AND &C.GPJP_SC_PREM = 0
        AND &C.GPJP_IT_INCTAX=0
        AND &C.GPJP_IT_TAXDIFF=0
        AND &C.GPJP_IT_WRKDAYS=0
        AND &C.GPJP_IT_HOLHRS=0
        AND &C.GPJP_IT_HRSERN=0
        AND &C.OT_HRS=0
        AND &C.GPJP_IT_LTOTHRS=0
        AND &C.GPJP_IT_HOLWRK=0
        AND &C.GPJP_IT_PTODAYS=0
        AND &C.GPJP_IT_SPCDAYS=0
        AND &C.GPJP_IT_ABSDAYS=0
        AND &C.GPJP_IT_WH_TYPE = '10'

      Let $Sal_zero = 'Y'
  end-if

  If &C.GPJP_IT_EARNS = 0
        AND &C.GPJP_IT_TXBLE=0
        AND &C.GPJP_SC_PREM = 0
        AND &C.GPJP_IT_INCTAX=0
        AND &C.GPJP_IT_TAXDIFF=0
        AND &C.GPJP_IT_WH_TYPE <> '10'

      Let $Bns_zero = 'Y'
  end-if

  Let $get-reg2-cont = 'N'

  If ($Sal_zero = 'N' and &C.GPJP_IT_WH_TYPE = '10')
       Let $get-reg2-cont = 'Y'
  end-if

  If ($Bns_zero = 'N' and &C.GPJP_IT_WH_TYPE <> '10')
       Let $get-reg2-cont = 'Y'
  end-if



  If $get-reg2-cont = 'Y'
    Let #Counter = #Counter + 1
    Let $Counter = edit(#Counter,'99')
    If &C.GPJP_IT_WH_TYPE = '10'
      Do Print-Reg2
      Do Print-Reg2-Sal
      If #Counter = 1
        print $SALARY_LBL (,{Col_1})
      end-if
      print $Counter (,{Col_2})
    Else
      If $GPJP_IT_WH_TYPE_OLD <> &C.GPJP_IT_WH_TYPE
        Do Print-Sal-Totals
        Do Print-Reg2
        Let #Bns_Cntr = #Bns_Cntr + 1
        Let #Counter = 1
        Let $Counter = edit(#Counter,'99')
        print $BONUS_lbl (,{Col_1})

        Do Print-Reg1-Head1

      else
        Do Print-Reg2
      end-if


      If #Counter = 2
        Do Print-Reg1-Head2
      end-if
      If #Counter = 3
        Do Print-Reg1-Detail
      end-if
      print $Counter (,{Col_2})

    end-if

    Let $GPJP_IT_WH_TYPE_OLD = &C.GPJP_IT_WH_TYPE
    Do Update-Totals
  end-if


From PS_GPJP_IT_WH_REG2 C
Where C.EMPLID = &B.EMPLID
and C.EMPL_RCD = &B.EMPL_RCD
and C.JOBINSTANCE = #prcs_job_instance
Order By C.GPJP_IT_WH_TYPE, C.PYMT_DT
end-select

        If #Bns_Cntr = 0
           Do Print-Sal-Totals
           print ' ' (+2,{Col_1})
           print $PTO_TITLE_lbl (,{Col_9})
           print $ENTITLE_lbl (,{Col_11})
           print $TAKE_lbl (,{Col_14})

           print $CARRIED_PTO_lbl (+1,{Col_11})
           print $PTO_ENTITLE_lbl (,{Col_12})
           print $TOTAL_DAY_lbl (,{Col_13})
           print $PREV_YR_DAY_lbl (,{Col_14})
           print $CUR_YR_DAY_lbl (,{Col_15})
          print $BALANCE_lbl (,{Col_16})

           print &B.GPJP_IT_PTOPRV (+1,{Col_11}) edit 99.9
           print &B.GPJP_IT_PTOCUR (,{Col_12}) edit 99.9
           print &B.GPJP_IT_PTOTTL  (,{Col_13}) edit 99.9
           print &B.GPJP_IT_PTOTKNP  (,{Col_14}) edit 99.9
           print &B.GPJP_IT_PTOTKNC  (,{Col_15}) edit 99.9
           print $Gpjp_it_ptobal (,{Col_16}) edit 99.9

      end-if
!code commented

If #Bns_Cntr = 1 and #Counter <=1
print ' ' (+1,5)

Do Print-Reg1-Head2
print ' ' (+1,1)
Do Print-Reg1-Detail
end-if
!code commented
If #Bns_Cntr = 1 and #Counter = 2
print ' ' (+1,1)

Do Print-Reg1-Detail
end-if

Do Print-Bon-Totals
Do Print-Sal-Bon-Totals

end-procedure !Get-REG2

!***********************************************************************
! Get-Former-Employer                                                  *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-Former-Employer

Let $RowSelected = 'N'


begin-select
D.GPJP_YEA_PRIGRS
D.GPJP_YEA_PRITAX
D.GPJP_YEA_PRISI
  Let $RowSelected = 'Y'

From PS_GPJP_YEA_PYEADJ D
Where D.EMPLID = &B.EMPLID
and D.EMPL_RCD = &B.EMPL_RCD
and D.DATE_YEAR_VAL = #Year_Num
and D.EFFDT = (Select max(EFFDT)
               From PS_GPJP_YEA_PYEADJ
               Where EMPLID = D.EMPLID
               and EMPL_RCD = D.EMPL_RCD
               and DATE_YEAR_VAL = D.DATE_YEAR_VAL)
end-select

If $RowSelected = 'Y'
  print $FORMER_EMPLOYER_lbl (+2,{Col_1})
  print &D.GPJP_YEA_PRIGRS (,{Col_4}) edit 999,999,999
  print &D.GPJP_YEA_PRIGRS (,{Col_5}) edit 999,999,999
  print &D.GPJP_YEA_PRISI (,{Col_6}) edit 999,999,999
  print &D.GPJP_YEA_PRITAX (,{Col_7}) edit 999,999,999

  Let #GPJP_IT_EARNS_total = #GPJP_IT_EARNS_total + &D.GPJP_YEA_PRIGRS
  Let #GPJP_IT_TXBLE_total = #GPJP_IT_TXBLE_total + &D.GPJP_YEA_PRIGRS
  Let #GPJP_IT_INCTAX_total = #GPJP_IT_INCTAX_total + &D.GPJP_YEA_PRITAX
  Let #GPJP_SC_PREM_total = #GPJP_SC_PREM_total + &D.GPJP_YEA_PRISI

  print $SAL_BON_EMPL_lbl (+1,{Col_3})
  print #GPJP_IT_EARNS_total (,{Col_4}) edit 999,999,999
  print #GPJP_IT_TXBLE_total (,{Col_5}) edit 999,999,999
  print #GPJP_SC_PREM_total (,{Col_6}) edit 999,999,999
  print #GPJP_IT_INCTAX_total (,{Col_7}) edit 999,999,999
end-if

end-procedure !Get-Former-Employer

!***********************************************************************
! Delete-From-AE-Tables                                                *
!                                                                      *
! Called By: begin-report                                              *
!***********************************************************************

begin-procedure Delete-From-AE-Tables

begin-sql
Delete from PS_GPJP_IT_WH_REG
Where JOBINSTANCE = #prcs_job_instance;

Delete from PS_GPJP_IT_WH_REG2
Where JOBINSTANCE = #prcs_job_instance;

Delete from PS_GPJP_ITW2_TAO
Where JOBINSTANCE = #prcs_job_instance;

Delete from PS_GPJP_ITWH_TAO
Where JOBINSTANCE = #prcs_job_instance
end-sql

end-procedure !Delete-From-AE-Tables

!***********************************************************************
! Get-Year-End-Adj                                                     *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-Year-End-Adj

begin-select
E.GPJP_IT_EARNS
E.GPJP_IT_INCTAX
E.GPJP_YEA_YEATAX
E.GPJP_YEA_TYPE
E.GPJP_YEA_NET
E.GPJP_YEA_HOUSE
E.GPJP_YEA_LIFPRE
E.GPJP_YEA_NONLIF
E.GPJP_SC_PREM
E.GPJP_YEA_YEATX2
E.GPJP_YEA_LTNONL
E.GPJP_YEA_YEASC
E.GPJP_YEA_SPCTAX
E.GPJP_YEA_SPSINC
E.GPJP_YEA_MUTAID
E.GPJP_YEA_SPCTX2
E.GPJP_YEA_DEPSPC
E.GPJP_YEA_TXDIFF
E.GPJP_YEA_CARRYOVER
E.GPJP_YEA_DEPELD
E.GPJP_YEA_SPSDED
E.GPJP_YEA_LIVELD
E.GPJP_YEA_DISOTH
E.GPJP_YEA_YEADED
E.GPJP_YEA_DISSPC
E.GPJP_YEA_DISLIV
E.GPJP_YEA_PERSINS
E.GPJP_YEA_AMTDED
E.GPJP_YEA_PENPRE
E.GPJP_YEA_DEPOTH
E.GPJP_YEA_ELDPRT
E.GPJP_YEA_INCAFT
E.GPJP_YEA_DISABL
E.GPJP_YEA_DEDSPO
E.GPJP_YEA_DEDELS
E.GPJP_YEA_SDED


  Do Get_PYE_TAX

  Do Get_DEP_TAX

  Do Get-YEA-XLAT

  Do Get-YEA-COLL-TAX

  Do Get_INC_ADJ
  
  Do Get_BAS_DED

  Let #TAX_DIFF = &E.GPJP_YEA_SPCTX2 - #COLL_TAX

  Let #DED_REF = #TAX_DIFF - &E.GPJP_YEA_CARRYOVER

  Do Print-YEA

from PS_GPJP_YEA_TABLE E
Where E.EMPLID = &B.EMPLID
and E.EMPL_RCD = &B.EMPL_RCD
and E.DATE_YEAR_VAL = #Year_Num
end-select

end-procedure !Get-Year-End-Adj


!***********************************************************************
! Get-Ret-Alw_Dtl                                                      *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-Ret-Alw_Dtl



begin-select

I.PYMT_DT
I.PRD_BGN_DT
I.PRD_END_DT
I.GPJP_RA_YRS_SERV
I.GPJP_RA_BY_DISABL
I.GPJP_RA_INC_RPT
I.GPJP_RA_EARN1
I.GPJP_RA_IT1
I.GPJP_RA_EARN2
I.GPJP_RA_IT2
I.GPJP_RA_EARN3
I.GPJP_RA_IT3
I.GPJP_RA_ER_FRM_SYR
I.GPJP_RA_DEDUCTION
I.GPJP_RA_TAXABLE
I.GPJP_RA_WHTAX_SYR


     let $Pymt_date            = datetostr(&I.PYMT_DT,'YYYYMMDD')
     let $Prd_bgn_dt           = datetostr(&I.PRD_BGN_DT,'YYYYMMDD')
     let $Prd_end_dt           = datetostr(&I.PRD_END_DT,'YYYYMMDD')
     let #Gpjp_ra_yrs_serv     = &I.GPJP_RA_YRS_SERV
     let $Gpjp_ra_by_disable   = &I.GPJP_RA_BY_DISABL
     let $Gpjp_ra_inc_rpt      = &I.GPJP_RA_INC_RPT
     let #Gpjp_ra_earnings     = &I.GPJP_RA_EARN1 + &I.GPJP_RA_EARN3 + &I.GPJP_RA_EARN3
     let #Gpjp_prv_pmt_syr     = &I.GPJP_RA_ER_FRM_SYR
     let #Gpjp_ra_delta        = #Gpjp_ra_earnings + #Gpjp_prv_pmt_syr
     let #Gpjp_ra_deduction    = &I.GPJP_RA_DEDUCTION
     let #Gpjp_ra_taxable      = &I.GPJP_RA_TAXABLE
     let #Gpjp_ra_wh_tax       = &I.GPJP_RA_IT1 + &I.GPJP_RA_IT2 + &I.GPJP_RA_IT3
     let #Gpjp_ra_wh_tax_syr   = &I.GPJP_RA_WHTAX_SYR
     let #Gpjp_ra_wh_tax_sum   = #Gpjp_ra_wh_tax + #Gpjp_ra_wh_tax_syr

     do print-ret-dtl

from PS_GPJP_RA_WH_RPT I
Where I.EMPLID = &B.EMPLID
and I.EMPL_RCD = &B.EMPL_RCD
and I.DATE_YEAR_VAL = #Year_Num
end-select






end-procedure !Get-Ret-Alw_Dtl

!***********************************************************************
! print-ret-dtl                                                         *
!                                                                       *
! Called By: Get-Ret-Alw_Dtl                                            *
!***********************************************************************

begin-procedure print-ret-dtl

print $GPJP_IT01_Ret_Alw_lbl (+2,{Col_1})

print $GPJP_IT01_Pymt_date (+1,{Col_3})
print $Pymt_date (,44) edit 'YYYY/MM/DD'
print $GPJP_IT01_Gpjp_ra_earnings (,{Col_7})
print #Gpjp_ra_earnings (,92) edit 999,999,999

print $GPJP_IT01_Prd_bgn_dt (+1,{Col_3})
print $Prd_bgn_dt (,44) edit 'YYYY/MM/DD'
print $GPJP_IT01_Gpjp_prv_pmt_syr (,72)
print #Gpjp_prv_pmt_syr (,92) edit 999,999,999

print $GPJP_IT01_Prd_end_dt (+1,{Col_3})
print $Prd_end_dt (,44) edit 'YYYY/MM/DD'
print $GPJP_IT01_Gpjp_ra_delta (,72)
print #Gpjp_ra_delta (,92) edit 999,999,999

print $GPJP_IT01_Gpjp_ra_yrs_serv (+1,{Col_3})
print #Gpjp_ra_yrs_serv (,52) edit 99
print $GPJP_IT01_Gpjp_ra_deduction (,{Col_7})
print #Gpjp_ra_deduction (,92) edit 999,999,999

print $GPJP_IT01_Gpjp_ra_by_disable (+1,{Col_3})
if $Gpjp_ra_by_disable = 'Y'
print $GPJP_IT01_Disabled (,46)
else
print $GPJP_IT01_Ordinary (,46)
end-if
print $GPJP_IT01_Gpjp_ra_taxable (,{Col_7})
print #Gpjp_ra_taxable (,92) edit 999,999,999

print $GPJP_IT01_Gpjp_ra_inc_rpt (+1,{Col_3})
if $Gpjp_ra_inc_rpt = 'Y'
print $GPJP_IT01_Yes  (,51)
else
print $GPJP_IT01_No  (,52)
end-if
print $GPJP_IT01_Gpjp_ra_wh_tax (,{Col_7})
print #Gpjp_ra_wh_tax  (,92) edit 999,999,999


print $GPJP_IT01_Gpjp_prv_pmt_syr (+1,72)
print #Gpjp_ra_wh_tax_syr (,92) edit 999,999,999


print $GPJP_IT01_Gpjp_ra_delta (+1,72)
print #Gpjp_ra_wh_tax_sum  (,92) edit 999,999,999



end-procedure !print-ret-dtl

!***********************************************************************
! Get-YEA-COLL-TAX                                                          *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get-YEA-COLL-TAX


Let $RowSelected = 'N'

begin-select
Sum(CALC_RSLT_VAL) &COLL_TAX
  Let $RowSelected = 'Y'
from PS_GP_RSLT_ERN_DED ED, PS_GP_CAL_RUN_DTL CRD
where ED.PIN_NUM in (&IN_TAX_SAL,&IN_TAX_BON)
and ED.CAL_RUN_ID = ED.ORIG_CAL_RUN_ID
and ED.CAL_RUN_ID = CRD.CAL_RUN_ID
and ED.GP_PAYGROUP = CRD.GP_PAYGROUP
and ED.EMPLID = &B.EMPLID
and ED.EMPL_RCD = &B.EMPL_RCD
and CRD.PYMT_DT between $First_Day_Of_Year and $Last_Day_Of_Year
end-select

If $RowSelected = 'Y'
  Let #COLL_TAX = &COLL_TAX + &D.GPJP_YEA_PRITAX
Else
  Let #COLL_TAX = &COLL_TAX
End-if

end-procedure !Get-YEA-COLL-TAX

!***********************************************************************
! Get_PYE_TAX                                                          *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get_PYE_TAX

begin-select
F.GPJP_IT_EMPTYPE
F.GPJP_IT_EMPDIS
F.GPJP_IT_TYPE
F.EFFDT
From PS_GPJP_IT_PYE_TAX F
Where F.EMPLID = &B.EMPLID
and F.EMPL_RCD = &B.EMPL_RCD
and F.EFFDT = (Select max(EFFDT)
              From PS_GPJP_IT_PYE_TAX
              Where EMPLID = F.EMPLID
               and EMPL_RCD = F.EMPL_RCD)
end-select

end-procedure !Get_PYE_TAX

!***********************************************************************
! Get_DEP_TAX                                                          *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get_DEP_TAX

begin-select

G.GPJP_IT_DEPDIS
From PS_GPJP_IT_DEP_TAX G
Where G.EMPLID = &B.EMPLID
and G.EMPL_RCD = &B.EMPL_RCD
and G.GPJP_IT_SUBJ_DED <> 'N'
and G.EFFDT           = (SELECT MAX(EFFDT)
                      FROM PS_GPJP_IT_DEP_TAX
                      WHERE EMPLID = G.EMPLID
                      and DEPENDENT_BENEF = G.DEPENDENT_BENEF
                      and EFFDT <= $Last_Day_Of_Year)
and G.DEPENDENT_BENEF in (SELECT H.DEPENDENT_BENEF
                          FROM PS_DEP_BEN_EFF H, PS_DEP_BEN J
                          WHERE H.EMPLID = G.EMPLID
                          and H.EMPLID = J.EMPLID
                          and H.DEPENDENT_BENEF = J.DEPENDENT_BENEF
                          and H.RELATIONSHIP = 'SP'
                          and (J.DT_OF_DEATH IS NULL
                          or  J.DT_OF_DEATH >= $First_Day_Of_Year)

AND H.EFFDT = (SELECT MAX(EFFDT)
              FROM PS_DEP_BEN_EFF
              WHERE EMPLID = H.EMPLID
              AND DEPENDENT_BENEF = H.DEPENDENT_BENEF
              AND EFFDT <= $Last_Day_Of_Year))

end-select

end-procedure !Get_DEP_TAX



!***********************************************************************
! Get_INC_ADJ                                                         *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get_INC_ADJ

begin-select

H1.CALC_RSLT_VAL 
FROM PS_GP_RSLT_ACUM H1
WHERE H1.EMPLID = &B.EMPLID
AND H1.EMPL_RCD = &B.EMPL_RCD
AND H1.PIN_NUM = (SELECT PIN_NUM
                FROM PS_GP_PIN
                WHERE PIN_CODE = 'YE AC INC ADJ YTD JPN')
                AND ACM_FROM_DT >= $First_Day_Of_Year
                AND ACM_THRU_DT <= $Last_Day_Of_Year
   

end-select

end-procedure !Get_INC_ADJ


!***********************************************************************
! Get_BAS_DED                                                         *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get_BAS_DED

begin-select

H2.CALC_RSLT_VAL 
FROM PS_GP_RSLT_ACUM H2
WHERE H2.EMPLID = &B.EMPLID
AND H2.EMPL_RCD = &B.EMPL_RCD
AND H2.PIN_NUM = (SELECT PIN_NUM
                FROM PS_GP_PIN
                WHERE PIN_CODE = 'YE AC PERS BAS DED JPN')
                AND ACM_FROM_DT >= $First_Day_Of_Year
                AND ACM_THRU_DT <= $Last_Day_Of_Year
   

end-select

end-procedure !Get_BAS_DED



!***********************************************************************
! Get-YEA-XLAT                                                          *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get-YEA-XLAT

Let $IT_TYPE_desc = ' '
Let $IT_EMPTYPE_desc = ' '
Let $IT_EMPDIS_desc = ' '
Let $IT_DEPDIS_desc = ' '

  let $FieldName = 'GPJP_IT_TYPE'
  let $FieldValue = &F.GPJP_IT_TYPE

  do Read-Translate-Table
  let $IT_TYPE_desc = $XlatLongName
  
  
  if &F.EFFDT >= strtodate('01/04/2020','dd/mm/yyyy')
  let #Message_Set_Nbr = 17270
  Evaluate  &F.GPJP_IT_EMPTYPE
    when = '10'
    let #Message_Nbr = 269
    break
    when = '20'
    let #Message_Nbr = 272
    break
    when = '40'
    let #Message_Nbr = 270
    break
    when = '50'
    let #Message_Nbr = 271
    break
    when = '70'
    let #Message_Nbr = 273
    break
    when = '80'
    let #Message_Nbr = 274
    break
    when-other
    let #Message_Nbr = 0
    break
  End-Evaluate 
  do Get_Message_Text_Lang
  let $IT_EMPTYPE_desc = $Message_Value
  else
  let $FieldName = 'GPJP_IT_EMPTYPE'
  let $FieldValue = &F.GPJP_IT_EMPTYPE

  do Read-Translate-Table
  let $IT_EMPTYPE_desc = ltrim($XlatLongName,' ')
  end-if
  
  let $IT_EMPTYPE_desc = rtrim($IT_EMPTYPE_desc,' ')

  let $FieldName = 'GPJP_IT_EMPDIS'
  let $FieldValue = &F.GPJP_IT_EMPDIS

  do Read-Translate-Table
  let $IT_EMPDIS_desc = ltrim($XlatLongName,' ')
  let $IT_EMPDIS_desc = rtrim($IT_EMPDIS_desc ,' ')

  let $FieldName = 'GPJP_IT_DEPDIS'
  let $FieldValue = &G.GPJP_IT_DEPDIS

  do Read-Translate-Table
  let $IT_DEPDIS_desc = ltrim($XlatLongName,' ')
  let $IT_DEPDIS_desc = rtrim($IT_DEPDIS_desc,' ')

end-procedure !Get-YEA-XLAT

!***********************************************************************
! Get_Message_Text_Lang                                                         *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get_Message_Text_Lang

let $Message_Value=' '

begin-select

M1.MESSAGE_TEXT 
 let $Message_Value = &M1.MESSAGE_TEXT
FROM PSMSGCATLANG M1
WHERE M1.MESSAGE_SET_NBR = #Message_Set_Nbr
AND M1.MESSAGE_NBR = #Message_Nbr
AND M1.LANGUAGE_CD = $curr_Language_Cd
   

end-select

if $Message_Value = ' ' 
do Get_Message_Text

end-if

end-procedure !Get_Message_Text_Lang

!***********************************************************************
! Get_Message_Text                                                         *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

begin-procedure Get_Message_Text



begin-select

M2.MESSAGE_TEXT 
 let $Message_Value = &M2.MESSAGE_TEXT 
 
 
FROM PSMSGCATDEFN M2
WHERE M2.MESSAGE_SET_NBR = #Message_Set_Nbr
AND M2.MESSAGE_NBR = #Message_Nbr
 

end-select

end-procedure !Get_Message_Text

!***********************************************************************
! Print-YEA                                                            *
!                                                                      *
! Called By: Get-Year-End-Adj                                          *
!***********************************************************************

Begin-Procedure Print-YEA


#define Col_8         85
#define Col_9         92
#define Col_10        99
#define Col_11        108
#define Col_12        117
#define Col_13        126
#define Col_14        135
#define Col_15        142
#define Col_16        149
#define Col_17        156
#define col_17a       160
#define col_5a        51
#define col_9a        100
#define col_13a       134



print $YEAR_END_ADJ_lbl (+2,{Col_1})

!Line 1
print $Taxation_Total_lbl (+1,{Col_3})
print &E.GPJP_IT_EARNS (,{Col_5}) edit 999,999,999
print $Annual_Inc_Tax_lbl (,{Col_7})
IF &E.GPJP_YEA_TYPE ='10'
        print &E.GPJP_YEA_YEATAX (,{Col_9}) edit 999,999,999
else
        print $NA (,{Col_9a})              !edit 999,999,999
end-if
print $Inc_Tax_Type_lbl (,{Col_11})
print $IT_TYPE_desc (,{Col_13a})
print $Empl_Type_lbl (,{Col_15})
print $IT_EMPTYPE_desc (,{Col_17a})

!Line 2
print $Net_Salary_lbl (+1,{Col_3})
let #Net_Sal_Including_Inc_Adj= &E.GPJP_YEA_INCAFT + &H1.CALC_RSLT_VAL
IF &E.GPJP_YEA_TYPE ='10'
        print #Net_Sal_Including_Inc_Adj (,{Col_5}) edit 999,999,999
else
        print $NA (,{Col_5a})              !edit 999,999,999
end-if
print $Amt_Of_Housing_lbl (,{Col_7})
print &E.GPJP_YEA_HOUSE (,{Col_9}) edit 999,999,999
print $Pers_Ins_Prem_lbl (,{Col_11})
print &E.GPJP_YEA_PENPRE (,{Col_13}) edit 999,999,999
print $Empl_Dis_Type_lbl (,{Col_15})
print $IT_EMPDIS_desc (,{Col_17a})

!Line 3
print $INC_ADJ (+1,{Col_3})
IF &E.GPJP_YEA_TYPE ='10'
print &H1.CALC_RSLT_VAL (,{Col_5}) edit 999,999,999
else
        print $NA (,{Col_5a})              !edit 999,999,999
end-if
print $Inc_Tax_After_Ded_lbl (,{Col_7})
IF &E.GPJP_YEA_TYPE ='10'
        print &E.GPJP_YEA_YEATX2 (,{Col_9}) edit 999,999,999
else
        print $NA (,{Col_9a})              !edit 999,999,999
end-if
print $LTNon_Life_Ded_lbl (,{Col_11})
print &E.GPJP_YEA_LTNONL (,{Col_13}) edit 999,999,999
print $Spouse_Type_lbl (,{Col_15})


if &E.GPJP_YEA_DEDSPO = '1'
   ! if &E.GPJP_YEA_DEDELS = '1'    

   ! print $ELDERLY (,{Col_17a})
   ! else
    print $ORDINARY (,{Col_17a})
  ! end-if
else

    print $NA (,{Col_17a})
end-if


!Line 4
print $NET_SAL_AFT_DED (+1,{Col_3})
IF &E.GPJP_YEA_TYPE ='10'
        print &E.GPJP_YEA_INCAFT (,{Col_5}) edit 999,999,999
else
        print $NA (,{Col_5a})              !edit 999,999,999
end-if
print $INC_TAX_RECON_TAX (,{Col_7})
IF &E.GPJP_YEA_TYPE ='10'
        print &E.GPJP_YEA_SPCTX2 (,{Col_9}) edit 999,999,999
else
        print $NA (,{Col_9a})              !edit 999,999,999
end-if
print $Spouse_Income_lbl (,{Col_11})
IF &E.GPJP_YEA_TYPE ='10'

        print &E.GPJP_YEA_SPSINC (,{Col_13}) edit 999,999,999
else
        print $NA (,{Col_13a}) !edit 999,999,999
end-if
print $Spouse_Dis_Type_lbl (,{Col_15})

if $IT_DEPDIS_desc = ''
  print $NA (,{Col_17a})
else

print $IT_DEPDIS_desc (,{Col_17a})
end-if
!Line 5
print $Total_Soc_Ins_Prem_lbl (+1,{Col_3})
print &E.GPJP_YEA_PERSINS (,{Col_5}) edit 999,999,999

print $Collected_Tax_lbl (,{Col_7})
print #COLL_TAX (,{Col_9}) edit 999,999,999
print $Dep_Minus_Spouse_lbl (,{Col_15})
print &E.GPJP_YEA_DEPOTH (,{Col_17a}) edit 99

!Line 6
print $Soc_Ins_Prem_Rpt_lbl (+1,{Col_3})
print &E.GPJP_YEA_YEASC (,{Col_5}) edit 999,999,999
!print $Spc_Tax_YEA_lbl (,{Col_7})
!IF &E.GPJP_YEA_TYPE ='10'
!        print &E.GPJP_YEA_SPCTAX (,{Col_9}) edit 999,999,999
!else
!        print $NA (,{Col_9a})              !edit 999,999,999
!end-if
print $Tax_Diff_lbl (,{Col_7})
IF &E.GPJP_YEA_TYPE ='10'
        print #TAX_DIFF (,{Col_9}) edit 999,999,999
else
        print $NA (,{Col_9a})              !edit 999,999,999
END-IF
print $Spec_Dependent_lbl (,{Col_15})
print &E.GPJP_YEA_DEPSPC (,{Col_17a}) edit 99

!Line 7
print $SCMAFI_Ded_lbl (+1,{Col_3})
print &E.GPJP_YEA_MUTAID (,{Col_5}) edit 999,999,999
!print $Inc_Tax_Spc_lbl (,{Col_7})
!IF &E.GPJP_YEA_TYPE ='10'
!        print &E.GPJP_YEA_SPCTX2 (,{Col_9}) edit 999,999,999
!else
!        print $NA (,{Col_9a})              !edit 999,999,999
!end-if
Print $GPJP_YEA_DED_REF_lbl (,{COL_7c})
IF &E.GPJP_YEA_TYPE = '10'
   print #DED_REF (,{col_9}) edit 999,999,999
else
   print $NA (,{col_9a})    !edit 999,999,999
END-IF
print $Elderly_Dep_lbl (,{Col_15})
print &E.GPJP_YEA_ELDPRT (,{Col_17a}) edit 99

!Line 8
print $Life_Ded_lbl (+1,{Col_3})
print &E.GPJP_YEA_LIFPRE (,{Col_5}) edit 999,999,999
!print $Collected_Tax_lbl (,{Col_7})
!print #COLL_TAX (,{Col_9}) edit 999,999,999
!Print $GPJP_YEA_DED_REF_lbl (,{COL_7c})
!IF &E.GPJP_YEA_TYPE = '10'
!   print #DED_REF (,{col_9}) edit 999,999,999
!else
!   print $NA (,{col_9a})    !edit 999,999,999
!END-IF
Print $GPJP_YEA_CARRYOVER_lbl (,{COL_7c})
IF &E.GPJP_YEA_TYPE = '10'
   print &E.GPJP_YEA_CARRYOVER (,{col_9}) edit 999,999,999
else
   print $NA (,{col_9a})                 !edit 999,999,999
END-IF
print $Elderly_Live_lbl (,{Col_15})
print &E.GPJP_YEA_LIVELD (,{Col_17a}) edit 99

!Line 9
if #Year_Num < 2007
print $Non_Life_Ded_lbl (+1,{Col_3})
else
print $Earth_Quake_Ins_lbl (+1,{Col_3})
end-if

print &E.GPJP_YEA_NONLIF (,{Col_5}) edit 999,999,999
!print $Tax_Diff_lbl (,{Col_7})
!IF &E.GPJP_YEA_TYPE ='10'
!        print #TAX_DIFF (,{Col_9}) edit 999,999,999
!else
!        print $NA (,{Col_9a})              !edit 999,999,999
!END-IF

!Print $GPJP_YEA_CARRYOVER_lbl (,{COL_7c})
!IF &E.GPJP_YEA_TYPE = '10'
!   print &E.GPJP_YEA_CARRYOVER (,{col_9}) edit 999,999,999
!else
!   print $NA (,{col_9a})                 !edit 999,999,999
!END-IF
print $Disabled_Num_lbl (,{Col_15})
print &E.GPJP_YEA_DISOTH (,{Col_17a}) edit 99

!Line 10
print $Spouse_Spec_Ded_lbl (+1,{Col_3})
IF &E.GPJP_YEA_TYPE ='10'

                if &E.GPJP_YEA_SPSDED <> 0 
                print &E.GPJP_YEA_SPSDED (,{Col_5}) edit 999,999,999
                else
                print &E.GPJP_YEA_SDED (,{Col_5}) edit 999,999,999
                end-if
else
                print $NA (,{Col_5a})              !edit 999,999,999
end-if
print $Spec_Dis_Num_lbl (,{Col_15})
let #Spec_Dis =  &E.GPJP_YEA_DISSPC - &E.GPJP_YEA_DISLIV
print #Spec_Dis (,{Col_17a}) edit 99

!Line 11
print $BAS_DED (+1,{Col_3})
IF &E.GPJP_YEA_TYPE ='10'
print &H2.CALC_RSLT_VAL (,{Col_5}) edit 999,999,999
else
print $NA (,{Col_5a})              !edit 999,999,999
end-if
print $Spec_Dis_Live_lbl (,{Col_15})
print &E.GPJP_YEA_DISLIV (,{Col_17a}) edit 99

!Line 12
print $Dependent_Ded_lbl (+1,{Col_3})
IF &E.GPJP_YEA_TYPE ='10'
                move &E.GPJP_YEA_SDED to #spouse_ded
                move &E.GPJP_YEA_AMTDED to #yea_amt_ded
                move &H2.CALC_RSLT_VAL to #basic_deduction
                let #spouse_ded = #spouse_ded + #basic_deduction
                If #spouse_ded < #yea_amt_ded
                let #yea_amt_ded = #yea_amt_ded - #spouse_ded
                else
                let #yea_amt_ded = #spouse_ded - #yea_amt_ded
                end-if
                
                print #yea_amt_ded (,{Col_5}) edit 999,999,999
else
                print $NA (,{Col_5a})             ! edit 999,999,999
end-if

!Line 13
print $Total_Inc_Ded_lbl (+1,{Col_3})
IF &E.GPJP_YEA_TYPE ='10'
        print &E.GPJP_YEA_YEADED (,{Col_5}) edit 999,999,999
else
        print $NA (,{Col_5a})              !edit 999,999,999
end-if

!Line 14

print $Annual_Net_Inc_lbl (+1,{Col_3})
IF &E.GPJP_YEA_TYPE ='10'
        print &E.GPJP_YEA_NET (,{Col_5}) edit 999,999,999
else
        print $NA (,{Col_5a})              !edit 999,999,999
end-if



#define Col_8         111
#define Col_9         118
#define Col_10        125
#define Col_11        134
#define Col_12        143
#define Col_13        150
#define Col_14        161
#define Col_15        168
#define Col_16        175
#define Col_17        182
#define col_17a       184


End-procedure !Print-YEA!

!***********************************************************************
! Initialize-Totals                                                    *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Initialize-Totals

Let #GPJP_IT_EARNS = 0
Let #GPJP_IT_TXBLE = 0
Let #GPJP_SC_PREM = 0
Let #GPJP_IT_INCTAX = 0
Let #GPJP_IT_TAXDIFF = 0
Let #GPJP_IT_TOTAL = 0
Let #GPJP_IT_WRKDAYS = 0
Let #GPJP_IT_HOLHRS = 0
Let #GPJP_IT_HRSERN = 0
Let #OT_HRS = 0
Let #GPJP_IT_LTOTHRS = 0
Let #GPJP_IT_HOLWRK = 0
Let #GPJP_IT_PTODAYS = 0
Let #GPJP_IT_SPCDAYS = 0
Let #GPJP_IT_ABSDAYS = 0

Let #GPJP_IT_EARNS_total = 0
Let #GPJP_IT_TXBLE_total = 0
Let #GPJP_SC_PREM_total = 0
Let #GPJP_IT_INCTAX_total = 0
Let #GPJP_IT_WRKDAYS_total = 0
Let #GPJP_IT_HOLHRS_total = 0
Let #GPJP_IT_HRSERN_total = 0
Let #OT_HRS_total = 0
Let #GPJP_IT_LTOTHRS_total = 0
Let #GPJP_IT_HOLWRK_total = 0
Let #GPJP_IT_PTODAYS_total = 0
Let #GPJP_IT_SPCDAYS_total = 0
Let #GPJP_IT_ABSDAYS_total = 0

end-procedure !Initialize-Totals

!***********************************************************************
! Update-Totals                                                        *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Update-Totals

Let #GPJP_IT_EARNS = #GPJP_IT_EARNS + &C.GPJP_IT_EARNS
Let #GPJP_IT_TXBLE = #GPJP_IT_TXBLE + &C.GPJP_IT_TXBLE
Let #GPJP_SC_PREM = #GPJP_SC_PREM + &C.GPJP_SC_PREM
Let #GPJP_IT_INCTAX = #GPJP_IT_INCTAX + &C.GPJP_IT_INCTAX
Let #GPJP_IT_TAXDIFF = #GPJP_IT_TAXDIFF + &C.GPJP_IT_TAXDIFF
Let #GPJP_IT_TOTAL = #GPJP_IT_INCTAX + #GPJP_IT_TAXDIFF
Let #GPJP_IT_WRKDAYS = #GPJP_IT_WRKDAYS + &C.GPJP_IT_WRKDAYS
Let #GPJP_IT_HOLHRS = #GPJP_IT_HOLHRS + &C.GPJP_IT_HOLHRS
Let #GPJP_IT_HRSERN = #GPJP_IT_HRSERN + &C.GPJP_IT_HRSERN
Let #OT_HRS = #OT_HRS + &C.OT_HRS
Let #GPJP_IT_LTOTHRS = #GPJP_IT_LTOTHRS + &C.GPJP_IT_LTOTHRS
Let #GPJP_IT_HOLWRK = #GPJP_IT_HOLWRK + &C.GPJP_IT_HOLWRK
Let #GPJP_IT_PTODAYS = #GPJP_IT_PTODAYS + &C.GPJP_IT_PTODAYS
Let #GPJP_IT_SPCDAYS = #GPJP_IT_SPCDAYS + &C.GPJP_IT_SPCDAYS
Let #GPJP_IT_ABSDAYS = #GPJP_IT_ABSDAYS + &C.GPJP_IT_ABSDAYS

end-procedure !Update-Totals

!***********************************************************************
! Print-Reg2                                                           *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Print-Reg2
LET #TAX_TOTAL = &C.GPJP_IT_INCTAX + &C.GPJP_IT_TAXDIFF
print $PYMT_DT (+1,{Col_3}) edit 'YYYY/MM/DD'
print &C.GPJP_IT_EARNS (,{Col_4}) edit 999,999,999
print &C.GPJP_IT_TXBLE (,{Col_5}) edit 999,999,999
print &C.GPJP_SC_PREM (,{Col_6}) edit 999,999,999
print &C.GPJP_IT_INCTAX (,{Col_7}) edit 999,999,999
print &C.GPJP_IT_TAXDIFF (,{Col_7a}) edit 999,999,999
print #TAX_TOTAL (,{Col_7b}) edit 999,999,999

end-procedure !Print-Reg2

!***********************************************************************
! Print-Reg2-Sal                                                       *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Print-Reg2-Sal

print &C.GPJP_IT_WRKDAYS (,{Col_8}) edit 999.9
print &C.GPJP_IT_HOLHRS (,{Col_9}) edit 999.9
print &C.GPJP_IT_HRSERN (,{Col_10}) edit 9999.99
print &C.OT_HRS          (,{Col_11}) edit 9999.99
print &C.GPJP_IT_LTOTHRS (,{Col_12}) edit 9999.99
print &C.GPJP_IT_HOLWRK (,{Col_13}) edit 9999.99
print &C.GPJP_IT_PTODAYS (,{Col_14}) edit 999.9
print &C.GPJP_IT_SPCDAYS (,{Col_15}) edit 999.9
print &C.GPJP_IT_ABSDAYS (,{Col_16}) edit 999.9

end-procedure !Print-Reg2-Sal

!***********************************************************************
! Print-Sal-Totals                                                     *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Print-Sal-Totals

Let #GPJP_IT_EARNS_total = #GPJP_IT_EARNS
Let #GPJP_IT_TXBLE_total = #GPJP_IT_TXBLE
Let #GPJP_SC_PREM_total = #GPJP_SC_PREM
Let #GPJP_IT_INCTAX_total = #GPJP_IT_INCTAX
Let #GPJP_IT_TAXDIFF_total = #GPJP_IT_TAXDIFF
Let #GPJP_IT_TOTAL_total = #GPJP_IT_TOTAL
Let #GPJP_IT_WRKDAYS_total = #GPJP_IT_WRKDAYS
Let #GPJP_IT_HOLHRS_total = #GPJP_IT_HOLHRS
Let #GPJP_IT_HRSERN_total = #GPJP_IT_HRSERN
Let #OT_HRS_total = #OT_HRS
Let #GPJP_IT_LTOTHRS_total = #GPJP_IT_LTOTHRS
Let #GPJP_IT_HOLWRK_total = #GPJP_IT_HOLWRK
Let #GPJP_IT_PTODAYS_total = #GPJP_IT_PTODAYS
Let #GPJP_IT_SPCDAYS_total = #GPJP_IT_SPCDAYS
Let #GPJP_IT_ABSDAYS_total = #GPJP_IT_ABSDAYS

print $TOTAL_lbl (+2,{Col_3})
print ':' (,)

print #GPJP_IT_EARNS_total (,{Col_4}) edit 999,999,999
print #GPJP_IT_TXBLE_total (,{Col_5}) edit 999,999,999
print #GPJP_SC_PREM_total (,{Col_6}) edit 999,999,999
print #GPJP_IT_INCTAX_total (,{Col_7}) edit 999,999,999
print #GPJP_IT_TAXDIFF_total (,{Col_7a}) edit 999,999,999
print #GPJP_IT_TOTAL_total (,{Col_7b}) edit 999,999,999
print #GPJP_IT_WRKDAYS_total (,{Col_8}) edit 999.9
print #GPJP_IT_HOLHRS_total (,{Col_9}) edit 999.9
print #GPJP_IT_HRSERN_total (,{Col_10}) edit 9999.99
print #OT_HRS_total (,{Col_11}) edit 9999.99
print #GPJP_IT_LTOTHRS_total (,{Col_12}) edit 9999.99
print #GPJP_IT_HOLWRK_total (,{Col_13}) edit 9999.99
print #GPJP_IT_PTODAYS_total (,{Col_14}) edit 999.99
print #GPJP_IT_SPCDAYS_total (,{Col_15}) edit 999.99
print #GPJP_IT_ABSDAYS_total (,{Col_16}) edit 999.99


print ' ' (+1,1)

Let #GPJP_IT_EARNS = 0
Let #GPJP_IT_TXBLE = 0
Let #GPJP_SC_PREM = 0
Let #GPJP_IT_INCTAX = 0
Let #GPJP_IT_TAXDIFF = 0
Let #GPJP_IT_TOTAL = 0
Let #GPJP_IT_WRKDAYS = 0
Let #GPJP_IT_HOLHRS = 0
Let #GPJP_IT_HRSERN = 0
Let #OT_HRS = 0
Let #GPJP_IT_LTOTHRS = 0
Let #GPJP_IT_HOLWRK = 0
Let #GPJP_IT_PTODAYS = 0
Let #GPJP_IT_SPCDAYS = 0
Let #GPJP_IT_ABSDAYS = 0

end-procedure !Print-Sal-Totals

!***********************************************************************
! Print-Reg1-Head1                                                     *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Print-Reg1-Head1

print $PTO_TITLE_lbl (,{Col_9})
print $ENTITLE_lbl (,{Col_11})
print $TAKE_lbl (,{Col_14})

end-procedure !Print-Reg1-Head1

!***********************************************************************
! Print-Reg1-Head2                                                     *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Print-Reg1-Head2

print $CARRIED_PTO_lbl (,{Col_11})
print $PTO_ENTITLE_lbl (,{Col_12})
print $TOTAL_DAY_lbl (,{Col_13})
print $PREV_YR_DAY_lbl (,{Col_14})
print $CUR_YR_DAY_lbl (,{Col_15})
print $BALANCE_lbl (,{Col_16})

end-procedure !Print-Reg1-Head2

!***********************************************************************
! Print-Reg1-Detail                                                    *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Print-Reg1-Detail

print &B.GPJP_IT_PTOPRV (,{Col_11}) edit 99.9
print &B.GPJP_IT_PTOCUR (,{Col_12}) edit 99.9
print &B.GPJP_IT_PTOTTL  (,{Col_13}) edit 99.9
print &B.GPJP_IT_PTOTKNP  (,{Col_14}) edit 99.9
print &B.GPJP_IT_PTOTKNC  (,{Col_15}) edit 99.9
print $Gpjp_it_ptobal     (,{Col_16}) edit 99.9

end-procedure !Print-Reg1-Detail

!***********************************************************************
! Print-Bon-Totals                                                     *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

Begin-procedure Print-Bon-Totals

If #GPJP_IT_EARNS > 0 OR #GPJP_IT_TXBLE > 0 OR
     #GPJP_SC_PREM> 0 OR #GPJP_IT_INCTAX>0 OR #GPJP_IT_TAXDIFF>0

  print $TOTAL_lbl (+2,{Col_3})
  print ':' (,)

  print #GPJP_IT_EARNS (,{Col_4}) edit 999,999,999
  print #GPJP_IT_TXBLE (,{Col_5}) edit 999,999,999
  print #GPJP_SC_PREM (,{Col_6}) edit 999,999,999
  print #GPJP_IT_INCTAX (,{Col_7}) edit 999,999,999
  print #GPJP_IT_TAXDIFF (,{Col_7a}) edit 999,999,999
  print #GPJP_IT_TOTAL (,{Col_7b}) edit 999,999,999

end-if

Let #GPJP_IT_EARNS_total = #GPJP_IT_EARNS_total + #GPJP_IT_EARNS
Let #GPJP_IT_TXBLE_total = #GPJP_IT_TXBLE_total + #GPJP_IT_TXBLE
Let #GPJP_SC_PREM_total = #GPJP_SC_PREM_total + #GPJP_SC_PREM
Let #GPJP_IT_INCTAX_total = #GPJP_IT_INCTAX_total + #GPJP_IT_INCTAX
Let #GPJP_IT_TAXDIFF_total = #GPJP_IT_TAXDIFF_total + #GPJP_IT_TAXDIFF
Let #GPJP_IT_TOTAL_total = #GPJP_IT_TOTAL_total + #GPJP_IT_TOTAL

end-procedure !Print-Bon-Totals

!***********************************************************************
! Print-Sal-Bon-Totals                                                 *
!                                                                      *
! Called By: Get-REG2                                                  *
!***********************************************************************

begin-procedure Print-Sal-Bon-Totals

print $SAL_N_BONUS_lbl (+1,{Col_3})
print ':' (,)

print #GPJP_IT_EARNS_total (,{Col_4}) edit 999,999,999
print #GPJP_IT_TXBLE_total (,{Col_5}) edit 999,999,999
print #GPJP_SC_PREM_total (,{Col_6}) edit 999,999,999
print #GPJP_IT_INCTAX_total (,{Col_7}) edit 999,999,999
print #GPJP_IT_TAXDIFF_total (,{Col_7a}) edit 999,999,999
print #GPJP_IT_TOTAL_total (,{Col_7b}) edit 999,999,999

end-procedure !Print-Sal-Bon-Totals

!***********************************************************************
! Additional SQCs included in the report                               *
!***********************************************************************

#include 'datetime.sqc'     !Routines for date and time formatting
#include 'datemath.sqc'     !Date conversion procedures
#include 'hrsecty.sqc'      !Get SQR Security parameters
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
#include 'prcsapi.sqc'      !Replaces stdapi.sqc
#include 'prcslng.sqc'      !Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        !Reset printer procedure
#include 'number.sqc'       !Routines to format numbers
#include 'getcodta.sqc'     !Retrieves Company Name
#include 'getdptnm.sqc'     !Retrieves Department Name
