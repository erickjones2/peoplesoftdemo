!**********************************************
!  TAX015:  Quarter Tax Balances Audit Report *
!**********************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2017, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  25921085                                            !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'                 ! Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main

  display 'Companies Checked: ' noline
  display #Companies 9,999
  display 'Employees Checked: ' noline
  display #Employees 9,999

  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX015' to $ReportID
  move 'Quarter Tax Balances Audit Report' to $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Get-Calendar-Year-Id
  do Stdapi-Init

  if $Prcs_Process_Instance = ''
    input $ParmYr maxLen=4 type=Number 'Enter Desired Year (YYYY)'
    input $ParmQtr maxLen=1 type=Number 'Enter Quarter Number'
  else
    do Select-Parameters
    move #RC_PAY.Balance_Year to $ParmYr  9999
    move #RC_PAY.Balance_Qtr         to $ParmQtr 9
    move $RC_PAY.BAL_1042     to $Flg_1042

  end-if

  let   #ParmYr = $ParmYr
  let   #ParmQtr = $ParmQtr

  evaluate $ParmQtr
      when = '1'
         move '0331' to $ParmMMDD
         break
      when = '2'
         move '0630' to $ParmMMDD
         break
      when = '3'
         move '0930' to $ParmMMDD
         break
      when = '4'
         move '1231' to $ParmMMDD
         break
  end-evaluate

  let $ParmDate = $ParmYr || $ParmMMDD
  do Format-DateTime($ParmDate,$EffDate,{DEFCMP},'','native')

  let $IRS_Date = $ParmYr || '0101'
  do Format-DateTime($IRS_Date, $IRS_Date, {DEFCMP}, '', 'native')

end-procedure

begin-heading 8

  #include 'stdhdg02.sqc'
  print '   PSD'                                           (+3,74)
  print '   Payline'                                       (0,130)
  print '   Balance'                                       (0,150)
  print 'Employee ID'                                      (+1,1)
  print 'Name'                                             (0,14)
  print 'Dept. ID'                                         (0,45)

#ifdef USA
  print 'St'                                               (0,55)
#endif

#ifdef CANADA
  print 'Prov '                                            (0,55)
#endif

  print 'Locality'                                         (0,60)
  print 'Work'                                             (0,73)
  print 'Res'                                              (0,80)
  print 'Tax Class'                                        (0,86)
  print 'Balance Type'                                     (0,98)
  print 'Detail Sum'                                       (0,130)
  print 'Record Qtd'                                       (0,150)
  print 'Difference'                                       (0,170)

end-heading


begin-procedure Process-Main

begin-SELECT
A.COMPANY       () on-break print=never procedure=Company-Change
A1.BALANCE_YEAR
A1.BALANCE_QTR

  if &A.Company <> $Company
    move &A1.Balance_Year to #AsOfYYYY
    move &A1.Balance_Qtr to #AsOfQtr
    add 1 to #Companies
    move &A.Company to $Company
    do Get-Employee-Balances
    ! for the 1042 Records
    if $Flg_1042 = 'Y'
       do Get-Employee-1042Balances
    end-if
  end-if

FROM  PS_PAY_CALENDAR A, PS_PAY_CAL_BAL_ID A1
WHERE  A.COMPANY = A1.COMPANY AND A.PAYGROUP = A1.PAYGROUP
  AND A.PAY_END_DT = A1.PAY_END_DT AND A1.BALANCE_ID = $Calendar_Year_Id
  AND A1.BALANCE_YEAR = #ParmYr
  AND A1.BALANCE_QTR  = #ParmQtr
ORDER BY A. COMPANY
end-SELECT

  do Company-Change                    ! for last company

end-procedure


begin-procedure Company-Change

  if #OutofBalance = 0
    print   'All Balances Check OK'      (+1,3)
    display ' '
    display 'All Balances Check OK for Employees of ' noline
    display $Company
    display ' '
  else
    display ' '
    display 'Out of Balance Condition Found for Employee(s) of ' noline
    display $Company
    display ' '
  end-if

  new-page

  move 0 to #OutofBalance
end-procedure


begin-procedure Get-Employee-Balances

begin-SELECT
B.EMPLID
C.STATE
C.LOCALITY
C.TAX_CLASS
SUM(C.NLGRS_CUR) &NLGrs
SUM(C.TXGRS_CUR) &TxGrs
SUM(C.TAX_CUR) &Tax
C.WORK_PSD_CD
C.RES_PSD_CD

  if &B.Emplid <> $Emplid
    add 1 to #Employees
    move &B.Emplid to $Emplid
    move 0 to #NLGrs
    move 0 to #TxGrs
    move 0 to #Tax
  end-if

  if RTRIM(&C.Locality, ' ') <> ''
    do Get-Local-Qtd-Balance
  else
    do Get-State-Qtd-Balance
  end-if

  do Compare-Sums-To-Balances

FROM  PS_PAY_CALENDAR P, PS_PAY_CAL_BAL_ID P1,
      PS_PAY_CHECK B,
      PS_PAY_TAX C
WHERE P.COMPANY = P1.COMPANY AND P.PAYGROUP = P1.PAYGROUP
  AND P.PAY_END_DT = P1.PAY_END_DT AND P1.BALANCE_ID = $Calendar_Year_Id
  AND B.COMPANY          = P.COMPANY
  AND B.PAYGROUP         = P.PAYGROUP
  AND B.PAY_END_DT       = P.PAY_END_DT
  AND B.PAYCHECK_STATUS IN ('F','R','A')
  AND C.COMPANY          = B.COMPANY
  AND C.PAYGROUP         = B.PAYGROUP
  AND C.PAY_END_DT       = B.PAY_END_DT
  AND C.OFF_CYCLE        = B.OFF_CYCLE
  AND C.PAGE_NUM            = B.PAGE_NUM
  AND C.LINE_NUM            = B.LINE_NUM
  AND C.SEPCHK           = B.SEPCHK
  AND P.COMPANY          = $Company
  AND P1.BALANCE_YEAR    = #ParmYr
  AND P1.BALANCE_QTR     = #ParmQtr
  AND C.TAX_CLASS       <> 'W'         ! exclude weeks worked
GROUP BY B.EMPLID, C.STATE, C.LOCALITY, C.TAX_CLASS, C.WORK_PSD_CD, C.RES_PSD_CD
ORDER BY B.EMPLID, C.STATE, C.LOCALITY, C.TAX_CLASS, C.WORK_PSD_CD, C.RES_PSD_CD
end-SELECT

end-procedure

begin-procedure Get-Employee-1042Balances

begin-SELECT
D.EMPLID
J.STATE
J.COUNTRY
K.IRS_INCOME_CD_1042
J.INCOME_CD_1042
J.TAX_RT
SUM(J.WH_ALLOW_CUR) &WhA1042
SUM(J.TXGRS_1042_CUR) &TxGr1042
SUM(J.TAX_1042_CUR) &Tax1042

  move &WhA1042  to #DetWha
  move &TxGr1042 to #DetTxGrs
  move &Tax1042  to #DetTax
  do Get-Employee-1042BalGen
  do Compare-Sums1042-To-Balances

FROM  PS_PAY_CALENDAR P, PS_PAY_CAL_BAL_ID P1,
      PS_PAY_CHECK D,
      PS_PAY_TAX_1042 J,
      PS_INC_CD_1042_TBL K
WHERE P.COMPANY = P1.COMPANY AND P.PAYGROUP = P1.PAYGROUP
  AND P.PAY_END_DT = P1.PAY_END_DT AND P1.BALANCE_ID = $Calendar_Year_Id
  AND D.COMPANY          = P.COMPANY
  AND D.PAYGROUP         = P.PAYGROUP
  AND D.PAY_END_DT       = P.PAY_END_DT
  AND D.PAYCHECK_STATUS IN ('F','R','A')
  AND J.COMPANY          = D.COMPANY
  AND J.PAYGROUP         = D.PAYGROUP
  AND J.PAY_END_DT       = D.PAY_END_DT
  AND J.OFF_CYCLE        = D.OFF_CYCLE
  AND J.PAGE_NUM            = D.PAGE_NUM
  AND J.LINE_NUM            = D.LINE_NUM
  AND J.SEPCHK           = D.SEPCHK
  AND P.COMPANY          = $Company
  AND P1.BALANCE_YEAR    = #ParmYr
  AND P1.BALANCE_QTR     = #ParmQtr
  AND K.INCOME_CD_1042   = J.INCOME_CD_1042
  AND K.EFFDT            = (SELECT MAX(K1.EFFDT)
                            FROM  PS_INC_CD_1042_TBL K1
                            WHERE K1.INCOME_CD_1042 = K.INCOME_CD_1042
                              AND K1.EFFDT         <= $IRS_Date)
GROUP BY D.EMPLID, J.STATE, J.COUNTRY, K.IRS_INCOME_CD_1042, J.INCOME_CD_1042, J.TAX_RT
ORDER BY D.EMPLID, J.STATE, J.COUNTRY, K.IRS_INCOME_CD_1042, J.INCOME_CD_1042, J.TAX_RT

end-SELECT

end-procedure


begin-procedure Get-Local-Qtd-Balance

begin-SELECT LOOPS=1
L.NLGRS_QTD
L.TXGRS_QTD
L.TAX_QTD
L.BALANCE_PERIOD

  move &L.NLGrs_Qtd to #NLGrs
  move &L.TxGrs_Qtd to #TxGrs
  move &L.Tax_Qtd to #Tax

FROM  PS_TAX_BALANCE L
WHERE L.EMPLID        = &B.Emplid
  AND L.COMPANY       = $Company
  AND L.BALANCE_YEAR = #AsOfYYYY
  AND L.BALANCE_QTR    = #AsOfQtr
  AND L.BALANCE_ID    = $Calendar_Year_Id
  AND L.STATE         = &C.State
  AND L.LOCALITY      = &C.Locality
  AND L.WORK_PSD_CD   = &C.Work_PSD_Cd
  AND L.RES_PSD_CD    = &C.Res_PSD_Cd
  AND L.TAX_CLASS     = &C.Tax_Class
ORDER BY L.BALANCE_PERIOD DESC
end-SELECT

end-procedure


begin-procedure Get-State-Qtd-Balance

begin-SELECT LOOPS=1
S.NLGRS_QTD
S.TXGRS_QTD
S.TAX_QTD
S.BALANCE_PERIOD

  move &S.NLGrs_Qtd to #NLGrs
  move &S.TxGrs_Qtd to #TxGrs
  move &S.Tax_Qtd to #Tax

FROM  PS_TAX_BALANCE S
WHERE S.EMPLID        = &B.Emplid
  AND S.COMPANY       = $Company
  AND S.BALANCE_YEAR = #AsOfYYYY
  AND S.BALANCE_QTR   = #AsOfQtr
  AND S.BALANCE_ID    = $Calendar_Year_Id
  AND S.STATE         = &C.State
  AND S.LOCALITY      = ' '
  AND S.TAX_CLASS     = &C.Tax_Class
ORDER BY S.BALANCE_PERIOD DESC
end-SELECT

end-procedure

begin-procedure Get-Employee-1042BalGen

begin-SELECT LOOPS=1
M.WH_ALLOW_QTD
M.TXGRS_1042_QTD
M.TAX_1042_QTD
M.BALANCE_PERIOD

  move &M.WH_ALLOW_QTD   to #BalWha
  move &M.TXGRS_1042_QTD to #BalTxGrs
  move &M.TAX_1042_QTD   to #BalTax

FROM  PS_TAX1042_BALANCE M
WHERE M.EMPLID         = &D.Emplid
  AND M.COMPANY        = $Company
  AND M.BALANCE_ID     = $Calendar_Year_Id
  AND M.BALANCE_YEAR   = #AsOfYYYY
  AND M.BALANCE_QTR    = #AsOfQtr
  AND M.STATE          = &J.STATE
  AND M.COUNTRY        = &J.COUNTRY
  AND M.INCOME_CD_1042 = &J.INCOME_CD_1042
  AND M.TAX_RT         = &J.TAX_RT
ORDER BY M.BALANCE_PERIOD DESC

end-SELECT

end-procedure

begin-procedure Compare-Sums-To-Balances

  if &NLGrs <> #NLGrs
    move 'No-Limit Taxable Gross' to $BalanceType
    move &NLGrs to #PaylineSum
    move #NLGrs to #BalanceRec
    add 1 to #OutofBalance
    do Print-Employee-Data
  end-if

  if &TxGrs <> #TxGrs
    move 'Taxable Gross' to $BalanceType
    move &TxGrs to #PaylineSum
    move #TxGrs to #BalanceRec
    add 1 to #OutofBalance
    do Print-Employee-Data
  end-if

  if &Tax <> #Tax
    move 'Tax' to $BalanceType
    move &Tax to #PaylineSum
    move #Tax to #BalanceRec
    add 1 to #OutofBalance
    do Print-Employee-Data
  end-if

end-procedure

begin-procedure Compare-Sums1042-To-Balances

  if #DetWha <> #BalWha
    move 'Allow ' to $BalanceType
    move #DetWha to #PaylineSum
    move #BalWha to #BalanceRec
    add 1 to #OutofBalance
    do Print-Employee-Data-1042
  end-if

  if #DetTxGrs <> #BalTxGrs
    move 'Taxable Gross' to $BalanceType
    move #DetTxGrs to #PaylineSum
    move #BalTxGrs to #BalanceRec
    add 1 to #OutofBalance
    do Print-Employee-Data-1042
  end-if

  if #DetTax <> #BalTax
    move 'Tax' to $BalanceType
    move #DetTax to #PaylineSum
    move #BalTax to #BalanceRec
    add 1 to #OutofBalance
    do Print-Employee-Data-1042
  end-if

end-procedure

begin-procedure Print-Employee-Data

  print &B.Emplid                      (+1,3)    on-break level=1 skiplines=1

  if &B.EMPLID <> $prior_EMPLID
    do Get-Employee-Data
    move &B.EMPLID to $prior_EMPLID
  end-if

  print &Y.Name                        (0,14,30) on-break level=1
  print &X.Deptid                      (0,45)    on-break level=2
  print &C.State                       (0,55)
  print &C.Locality                    (0,60)
  print &C.Work_PSD_Cd                 (0,72)
  print &C.Res_PSD_Cd                  (0,79)
  move 'TAX_CLASS' to $FieldName

  move &C.TAX_CLASS to $USTaxClass
  let $Current_FieldValue = rtrim(&C.TAX_CLASS, ' ')
  
  if $Current_FieldValue <> $prior_FieldValue
    do Get-US-Tax-Class-Name
    let $prior_FieldValue = rtrim($USTaxClass, ' ')
  end-if

  print $USTaxClassNameAbbrv           (0,86)
  print $BalanceType                   (0,98)

  do Format-Number(#PaylineSum, $out, '$$$,$$$,$$$,$$9.99mi')
  print $out                   (0,122)

  do Format-Number(#BalanceRec, $out, '$$$,$$$,$$$,$$9.99mi')
  print $out                   (0,142)

  move #PaylineSum to #Difference
  subtract #BalanceRec from #Difference
  do Format-Number(#Difference, $out, '$$$,$$$,$$$,$$9.99mi')
  print $out                   (0,162)

end-procedure

begin-procedure Print-Employee-Data-1042

  print &D.EMPLID                      (+1,3)    on-break level=1 skiplines=1

  if &D.EMPLID <> $prior_EMPLID
    do Get-Employee-Data-1042
    move &D.EMPLID to $prior_EMPLID
  end-if

  print &Z.Name                        (0,14,30) on-break level=1
  print &W.Deptid                      (0,45)    on-break level=2
  print &J.State                       (0,55)
  print 'Country'                      (+1,41)
  print &J.COUNTRY                     (0,49)
  print 'Income Code'                  (0,54)
  print &K.IRS_INCOME_CD_1042          (0,66)
  print 'Tax Rate'                     (0,70)
  move &J.TAX_RT to #TaxRate
  do Format-Number(#TaxRate, $out, '999.99')
  print $out                           (0,79)
  print '1042'                         (0,86)
  print $BalanceType                   (0,98)

  do Format-Number(#PaylineSum, $out, '$$$,$$$,$$$,$$9.99mi')
  print $out                   (0,122)

  do Format-Number(#BalanceRec, $out, '$$$,$$$,$$$,$$9.99mi')
  print $out                   (0,142)

  move #PaylineSum to #Difference
  subtract #BalanceRec from #Difference
  do Format-Number(#Difference, $out, '$$$,$$$,$$$,$$9.99mi')
  print $out                   (0,162)

end-procedure

begin-procedure Get-Employee-Data

begin-SELECT LOOPS=1
X.DEPTID
Y.NAME
X.EFFDT
X.EFFSEQ

FROM  PS_JOB X,
      PS_PERSON_NAME Y
WHERE Y.EMPLID = X.EMPLID
  AND X.EMPLID = &B.Emplid
  AND X.EFFDT <= $EffDate
ORDER BY X.EFFDT DESC,
         X.EFFSEQ DESC
end-SELECT

end-procedure

begin-procedure Get-Employee-Data-1042

begin-SELECT LOOPS=1
W.DEPTID
Z.NAME
W.EFFDT
W.EFFSEQ

FROM  PS_JOB W,
      PS_PERSON_NAME Z
WHERE Z.EMPLID = W.EMPLID
  AND W.EMPLID = &D.Emplid
  AND W.EFFDT <= $EffDate
ORDER BY W.EFFDT DESC,
         W.EFFSEQ DESC
end-SELECT

end-procedure


#include 'getcodta.sqc'  ! Get-Company-Data procedure
#include 'readxlat.sqc'  ! Read-Translate-Table procedure
#include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#Include 'datetime.sqc'  ! Routines for date and time formatting
#Include 'number.sqc'    ! Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'pyustxcl.sqc'  !Get the US Tax Class Name