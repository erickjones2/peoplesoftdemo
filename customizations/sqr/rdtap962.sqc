!***********************************************************************
!  RdTap962:  Read Tape File for TAX962xx                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2018, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  27111922                                            !
!                                                                      *
!***********************************************************************

begin-procedure Read-Tape-File
  while 1 = 1
    read 1 into $TapeRecord:512
    if #end-file = 1
      break  !exit the "while"
    end-if
    move ' ' to $TaxRecord              !align field start positions with
    concat $TapeRecord with $TaxRecord  !those in the EFW2 manual
    do Extract-And-Process
  end-while
  close  1
!  do Print-Employer-Totals
!  do Print-File-Totals
end-procedure

begin-procedure Read-Diskette-File
  while 1 = 1
    read 1 into $TapeRecord:512
    if #end-file = 1
      let #end-file = 0
      close 1
      do Open-Next-Diskette
      if #status = -1   !file doesn't exist
        break  !exit the "while"
      else
        read 1 into $TapeRecord:512
      end-if
    end-if
    move ' ' to $TaxRecord              !align field start positions with
    concat $TapeRecord with $TaxRecord  !those in the EFW2 manual
    do Extract-And-Process
  end-while
!  do Print-Employer-Totals
!  do Print-File-Totals
end-procedure

begin-procedure Open-Next-Diskette
   add 1 to #FileExtension
#ifdef MPE
   move #FileExtension to $FileExtension 9
   let $FileID = $FileIn || $FileExtension || '.DAT'
   let $feq='FILE ' || $FileID || '; REC=-512,,F,ASCII'
   call system using $feq #status
#else
   move #FileExtension to $FileExtension 099
   let $FileID = '{IMPORTPREFIX}' || $FileIn || '.' || $FileExtension
#endif
   open $FileID as 1 for-reading record=512:fixed status=#status
end-procedure

begin-procedure Extract-And-Process

    extract $RecType from $TaxRecord 1 2
    evaluate $RecType
    
      when = '**'
        do Print-Header-Record

        break
      when = 'RW'
        if $State-Process <> 'Y'
          if $Local-Process <> 'Y'
            do Print-RW-Record
          end-if
        end-if
        break
      when = 'RS'
        if $State-Process = 'Y'
           do Process-RS-Record
        else
          if $Local-Process = 'Y'
             do Process-RS-Record
          end-if
        end-if
        break
      when = 'RO'
        if $State-Process <> 'Y'
          if $Local-Process <> 'Y'
            do Print-RO-Record
          end-if
        end-if
        break
      when = 'RE'
        if $State-Process = 'Y'
             IF $Bulk_filing = 'N' AND $TotalsOnly = 'Y' 
                NEW-PAGE
             END-IF
          do Process-RE-Record
        else
          if $Local-Process = 'Y'
            do Process-RE-Record
          else
            do Process-Employer-Record
          end-if
        end-if
        break
      when = 'RT'
        if $State-Process = 'Y'
          do Print-Employer-Totals
        else
          if $Local-Process = 'Y'
            do Print-Employer-Totals
          else
            if $State-Process <> 'Y'
              do Process-RT-Record
            end-if
          end-if
        end-if
        break
      when = 'RA'
        if $State-Process = 'Y'
          if  #NbrOfCompanies > 1
              do Print-Employer-Totals
          end-if
             IF $Bulk_filing = 'N' AND $TotalsOnly = 'Y' AND $RA-RecPrinted = '1'
                NEW-PAGE
                Move ''  To $ErName
             END-IF
          do Process-RA-Record
          Let $RA-RecPrinted = '1'
        else
          if $Local-Process = 'Y'
            do Process-RA-Record
          end-if
        end-if
        break
      when = 'RU'
        if $State-Process <> 'Y'
          if $Local-Process <> 'Y'
            do Print-RU-Record
          end-if
        end-if
        if $NoTWritten = 'Y'
           if $State-Process = 'Y'
              if $TRecord <> 'Y'
                 do Print-Employer-Totals
              end-if
           end-if
        end-if
        break
      when = 'RV'
        if $State-Process = 'Y'
          do Print-RV-Record
          if $NoTWritten = 'Y'
             if $State-Process = 'Y'
                if $TRecord <> 'Y'
                   do Print-Employer-Totals
                end-if
             end-if
          end-if
        end-if
        break
      when = 'RF'

        if $State-Process <> 'Y'
          if $Local-Process <> 'Y'
            do Process-RF-Record
          end-if
        end-if
        if $State-Process = 'Y'
          if $TRecord <> 'Y'
             do Print-Employer-Totals
          else
            if $Local-Process = 'Y'
              if $TRecord <> 'Y'
                do Print-Employer-Totals
              else
                do Print-RF-Record
              end-if
            end-if
          end-if
        end-if
        break
      when-other
        display 'Invalid Record Type encountered.'
        stop
    end-evaluate
end-procedure

#Include 'prtmmref.sqc'   !Print-Report in EFW2 Format procedure

