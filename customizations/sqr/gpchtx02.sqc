!***********************************************************************
! GPCHTX02.SQC:  Fetching SQC for Report                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!          $Date:  2015/05/12:23:42:55                                 !
!       $Release:  HR92                                                !
!      $Revision:  107                                                 !
!***********************************************************************



Begin-Procedure Get_Data
#Debug Show '-> Get_Data '
  
   do Delete-Rec
   
    
   let $Tax_Tariff_Type_PBD  =  'AND PBD.GPCH_TX_TRF_TYPE IN (''D'',''A'',''I'',''S'',''O'',''X'')'
        
   let $Cross_Border_Cond  = ''
   let $cross_border_type  = ''
   
   #debug show $Tax_Tariff_Type
   #debug show $Field_list_Tx02

   do Get_Positive_Rows
   do Get_Negative_Rows
   !-------------------------------------------------------------------
   do Update_Non_Grouping
  
   do Insert_GPCHTX025

#Debug Show '<- Get_Data '
End-Procedure Get_Data
!*************************************************************************************
Begin-Procedure Get_Positive_Rows
#Debug Show '-> Get_Positive_Rows '

#debug show $Cross_Border_Cond
#debug show $Ctl_Canton_Crit1
#debug show $Emplid_Criteria1
#debug show $CantCrit
 
 let $Tax_Tariff_Type_PBD  =  'AND PBD.GPCH_TX_TRF_TYPE IN (''D'',''A'',''I'',''S'',''O'')'

Begin-Sql on-error=give_warning
INSERT INTO PS_GPCHTX021_TMP(PROCESS_INSTANCE,GPCH_TX_CANTON,GPCH_TX_VILLAGE_CD,GPCH_TX_TRF_TYPE,EMPLID,
EMPL_RCD,GPCH_AL_CPAY_ENDDT,SEG_BGN_DT,SEG_END_DT,RSLT_SEG_NUM,SEQNUM,SEX,COMPANY,PRD_END_DT,TERMINATION_DT,BEGIN_DT,END_DT,
BIRTHDATE,GPCH_TX_TRF_CD,NATIONAL_ID,GPCH_AH_NNSS,VISA_PERMIT_TYPE,CONTRACT_TYPE,ACTION,POSTAL,GPCH_RP_CHAR03,GPCH_RP_FROMDT1,GPCH_RP_AMOUNT1,GPCH_RP_AMOUNT2,GPCH_RP_AMOUNT3,
GPCH_RP_AMOUNT11,GPCH_RP_AMOUNT14,GPCH_RP_AMOUNT19,GPCH_RP_AMOUNT20,GPCH_RP_AMOUNT22,REG_TEMP,FTE)
#ifdef ORACLE
SELECT /*+ INDEX(PBD PS_GPCH_RP_0001)*/
#else
SELECT
#endif
[$prcs_process_instance],PBD.GPCH_TX_CANTON,
#ifdef ORACLE
   CASE  When PBD.GPCH_TX_CANTON = 'GE' Then  PBD.GPCH_TX_VILLAGE_L else PBD.GPCH_TX_VILLAGE_CD END,
#else
   CASE PBD.GPCH_TX_CANTON When 'GE' Then  PBD.GPCH_TX_VILLAGE_L else PBD.GPCH_TX_VILLAGE_CD END,
#endif
PBD.GPCH_TX_TRF_TYPE,PBD.EMPLID,
PBD.EMPL_RCD,PBD.GPCH_AL_CPAY_ENDDT,PBD.SEG_BGN_DT,PBD.SEG_END_DT,PBD.RSLT_SEG_NUM,0,PBD.SEX,PBD.COMPANY,PBD.PRD_END_DT,
PBD.TERMINATION_DT,PBD.BEGIN_DT,PBD.END_DT,PBD.BIRTHDATE,PBD.GPCH_TX_TRF_CD,PBD.NATIONAL_ID,PBD.GPCH_AH_NNSS,PBD.VISA_PERMIT_TYPE,PBD.CONTRACT_TYPE,PBD.ACTION,
#ifdef ORACLE
   CASE When PBD.GPCH_TX_CANTON = 'GE' Then CASE When PBD.COUNTRY_FROM = 'FRA' Then 'FRA' 
   When PBD.COUNTRY_FROM = 'CHE' Then PBD.GPCH_TX_VILLAGE_CD 
   ELSE PBD.POSTAL END 
   ELSE PBD.POSTAL END
#else
   CASE PBD.GPCH_TX_CANTON When 'GE' Then CASE PBD.COUNTRY_FROM When 'FRA' Then 'FRA' 
   When 'CHE' Then PBD.GPCH_TX_VILLAGE_CD 
   ELSE PBD.POSTAL END 
   ELSE PBD.POSTAL END
#endif
,PBD.GPCH_RP_CHAR03,PBD.GPCH_RP_FROMDT1,PBD.GPCH_RP_AMOUNT1,PBD.GPCH_RP_AMOUNT2,PBD.GPCH_RP_AMOUNT3,PBD.GPCH_RP_AMOUNT11,
PBD.GPCH_RP_AMOUNT14,PBD.GPCH_RP_AMOUNT19,PBD.GPCH_RP_AMOUNT20,PBD.GPCH_RP_AMOUNT22,PBD.REG_TEMP,
CASE When PBD.FTE > 1.00 Then 1.00  ELSE PBD.FTE END
FROM PS_GPCH_RP_0001 PBD
WHERE PBD.PAY_ENTITY            = $Ctl_PayEntity
and PBD.GPCH_AL_CPAY_ENDDT <= $Ctl_Curr_Pay_End_Dt
[$Tax_Tariff_Type_PBD]
[$Cal_Run_Id_Crit_PBD]
[$Ctl_Canton_Crit1]
[$Emplid_Criteria1]
[$CantCrit]
End-Sql

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif

#Debug Show '<- Get_Positive_Rows '
End-Procedure Get_Positive_Rows
!*************************************************************************************
Begin-Procedure Get_Negative_Rows
#Debug Show '-> Get_Negative_Rows '

#debug show $Tax_Tariff_Type_PBD
#debug show $Cal_Run_Id_Crit_A
#debug show $Ctl_Canton_Crit1
#debug show $Emplid_Criteria1
#debug show $CantCrit

 let $Tax_Tariff_Type_PBD  =  'AND PBD.GPCH_TX_TRF_TYPE IN (''D'',''A'',''I'',''S'',''O'')'
  
Begin-Sql on-error=give_warning
INSERT INTO PS_GPCHTX021_TMP(PROCESS_INSTANCE,GPCH_TX_CANTON,GPCH_TX_VILLAGE_CD,GPCH_TX_TRF_TYPE,EMPLID,
EMPL_RCD,GPCH_AL_CPAY_ENDDT,SEG_BGN_DT,SEG_END_DT,RSLT_SEG_NUM,SEQNUM,SEX,COMPANY,PRD_END_DT,TERMINATION_DT,BEGIN_DT,END_DT,
BIRTHDATE,GPCH_TX_TRF_CD,NATIONAL_ID,GPCH_AH_NNSS,VISA_PERMIT_TYPE,CONTRACT_TYPE,ACTION,POSTAL,GPCH_RP_CHAR03,GPCH_RP_FROMDT1,GPCH_RP_AMOUNT1,GPCH_RP_AMOUNT2,GPCH_RP_AMOUNT3,
GPCH_RP_AMOUNT11,GPCH_RP_AMOUNT14,GPCH_RP_AMOUNT19,GPCH_RP_AMOUNT20,GPCH_RP_AMOUNT22,REG_TEMP,FTE)
#ifdef ORACLE
SELECT /*+ INDEX(PBD PS_GPCH_RP_0001)*/
#else
SELECT
#endif
[$prcs_process_instance],PBD.GPCH_TX_CANTON,
#ifdef ORACLE
   CASE  When PBD.GPCH_TX_CANTON = 'GE' Then  PBD.GPCH_TX_VILLAGE_L else PBD.GPCH_TX_VILLAGE_CD END,
#else
   CASE PBD.GPCH_TX_CANTON When 'GE' Then  PBD.GPCH_TX_VILLAGE_L else PBD.GPCH_TX_VILLAGE_CD END,
#endif
PBD.GPCH_TX_TRF_TYPE,PBD.EMPLID,
PBD.EMPL_RCD,PBD.GPCH_AL_CPAY_ENDDT,PBD.SEG_BGN_DT,PBD.SEG_END_DT,PBD.RSLT_SEG_NUM,0,PBD.SEX,PBD.COMPANY,PBD.PRD_END_DT,
PBD.TERMINATION_DT,PBD.BEGIN_DT,PBD.END_DT,PBD.BIRTHDATE,PBD.GPCH_TX_TRF_CD,PBD.NATIONAL_ID,PBD.GPCH_AH_NNSS,PBD.VISA_PERMIT_TYPE,PBD.CONTRACT_TYPE,PBD.ACTION,
#ifdef ORACLE
   CASE When PBD.GPCH_TX_CANTON = 'GE' Then CASE When PBD.COUNTRY_FROM = 'FRA' Then 'FRA' 
   When PBD.COUNTRY_FROM = 'CHE' Then PBD.GPCH_TX_VILLAGE_CD 
   ELSE PBD.POSTAL END 
   ELSE PBD.POSTAL END
#else
   CASE PBD.GPCH_TX_CANTON When 'GE' Then CASE PBD.COUNTRY_FROM When 'FRA' Then 'FRA' 
   When 'CHE' Then PBD.GPCH_TX_VILLAGE_CD 
   ELSE PBD.POSTAL END 
   ELSE PBD.POSTAL END
#endif
,PBD.GPCH_RP_CHAR03,PBD.GPCH_RP_FROMDT1,PBD.GPCH_RP_AMOUNT1 * -1,PBD.GPCH_RP_AMOUNT2 * -1,PBD.GPCH_RP_AMOUNT3 * -1,
PBD.GPCH_RP_AMOUNT11,PBD.GPCH_RP_AMOUNT14 * -1,PBD.GPCH_RP_AMOUNT19 * -1,PBD.GPCH_RP_AMOUNT20,PBD.GPCH_RP_AMOUNT22,PBD.REG_TEMP,
CASE When PBD.FTE > 1.00 Then 1.00  ELSE PBD.FTE END
FROM PS_GP_PYE_PRC_STAT A, PS_GPCH_RP_0001 PBD
WHERE A.EMPLID             = PBD.EMPLID
AND   A.EMPL_RCD           = PBD.EMPL_RCD
AND   A.CAL_ID             = PBD.CAL_ID
AND   A.GP_PAYGROUP        = PBD.GP_PAYGROUP
#ifdef ORACLE
AND   PBD.GPCH_AL_CPAY_ENDDT = (SELECT /*+ INDEX(PBD1 PS_GPCH_RP_0001)*/  max(PBD1.GPCH_AL_CPAY_ENDDT) from PS_GPCH_RP_0001 PBD1
#else
AND   PBD.GPCH_AL_CPAY_ENDDT = (SELECT max(PBD1.GPCH_AL_CPAY_ENDDT) from PS_GPCH_RP_0001 PBD1
#endif
                                WHERE PBD.EMPLID              = PBD1.EMPLID
                                AND   PBD.EMPL_RCD            = PBD1.EMPL_RCD
                                AND   PBD.CAL_ID              = PBD1.CAL_ID
                                AND   PBD.GP_PAYGROUP         = PBD1.GP_PAYGROUP
                                AND   PBD1.GPCH_AL_CPAY_ENDDT < $ReportEndDate)
AND   A.SEL_ACTION         in ('R','Z')
AND   A.CALC_TYPE          = 'P'
AND   PBD.PAY_ENTITY       = $Ctl_PayEntity
[$Tax_Tariff_Type_PBD]
[$Cal_Run_Id_Crit_A]
[$Ctl_Canton_Crit1]
[$Emplid_Criteria1]
[$CantCrit]
End-Sql

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif
 
#Debug Show '<- Get_Negative_Rows '
End-Procedure Get_Negative_Rows
!*************************************************************************************
begin-procedure Delete-Rec
#Debug show '<- Delete-Rec'

Begin-Sql on-error=give_warning

  DELETE FROM PS_GPCHTX021_TMP WHERE PROCESS_INSTANCE = #prcs_process_instance

End-Sql

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif

#Debug show '-> Delete-Rec'
end-procedure Delete-Rec


!*************************************************************************************
begin-procedure Delete-RecTX025
#Debug show '<- Delete-RecTX025'

Begin-Sql on-error=give_warning

  DELETE FROM PS_GPCHTX025_TMP WHERE PROCESS_INSTANCE = #prcs_process_instance

End-Sql

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif

#Debug show '-> Delete-RecTX025'
end-procedure Delete-RecTX025

!************************************************************************************
Begin-Procedure Update_Non_Grouping 
#Debug Show '-> xxUpdate_Non_Grouping ' 

!Update Village 
Begin-Sql on-error=give_warning 
update PS_GPCHTX021_TMP 
set PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD =( select distinct P.GPCH_TX_VILLAGE_CD from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE      = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON          = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE        = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                  = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT      < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT              = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM            = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                 = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT              = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD      <> P.GPCH_TX_VILLAGE_CD )

where PS_GPCHTX021_TMP.PROCESS_INSTANCE      = #prcs_process_instance 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON          in ( 'ZH','VD') 

and exists ( select 'x' from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE      = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON          = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE        = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                  = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT      < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT              = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM            = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                 = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT              = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD      <> P.GPCH_TX_VILLAGE_CD ) 
End-Sql 

!Update Birthdate 
Begin-Sql on-error=give_warning 
update PS_GPCHTX021_TMP set PS_GPCHTX021_TMP.BIRTHDATE = ( select distinct P.BIRTHDATE from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.BIRTHDATE                <> P.BIRTHDATE ) 

where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = #prcs_process_instance 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> 'GE' 

and exists ( select 'x' from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.BIRTHDATE                <> P.BIRTHDATE ) 
End-Sql 


!Update AHV# 
Begin-Sql on-error=give_warning 
update PS_GPCHTX021_TMP set PS_GPCHTX021_TMP.NATIONAL_ID = ( select distinct P.NATIONAL_ID from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.NATIONAL_ID              <> P.NATIONAL_ID ) 

where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = #prcs_process_instance 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> 'GE' 

and exists ( select 'x' from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.NATIONAL_ID              <> P.NATIONAL_ID ) 
End-Sql 

!Update Postal 
Begin-Sql on-error=give_warning 
update PS_GPCHTX021_TMP set PS_GPCHTX021_TMP.POSTAL = ( select distinct P.POSTAL from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.POSTAL                   <> P.POSTAL )
 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = #prcs_process_instance 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> 'GE' 

and exists ( select 'x' from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.POSTAL                   <> P.POSTAL ) 

End-Sql 

!Update Canton

Begin-Sql on-error=give_warning 
update PS_GPCHTX021_TMP set PS_GPCHTX021_TMP.GPCH_TX_CANTON = ( select distinct P.GPCH_TX_CANTON from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> P.GPCH_TX_CANTON ) 

where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = #prcs_process_instance 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           in ( 'ZH','VD') 

and exists ( select 'x' from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         = P.GPCH_TX_TRF_TYPE 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> P.GPCH_TX_CANTON ) 
End-Sql 

!Update Tariff Type
Begin-Sql on-error=give_warning 
update PS_GPCHTX021_TMP set PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE= ( select distinct P.GPCH_TX_TRF_TYPE from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         <> P.GPCH_TX_TRF_TYPE ) 

where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = #prcs_process_instance 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> 'GE' 

and exists ( select 'x' from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_TYPE         <> P.GPCH_TX_TRF_TYPE ) 
End-Sql 

!Update Tariff Code
Begin-Sql on-error=give_warning 
update PS_GPCHTX021_TMP set PS_GPCHTX021_TMP.GPCH_TX_TRF_CD= ( select distinct P.GPCH_TX_TRF_CD from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_CD         <> P.GPCH_TX_TRF_CD) 

where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = #prcs_process_instance 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> 'GE' 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           <> 'ZH' 

and exists ( select 'x' from PS_GPCHTX021_VW P 
where PS_GPCHTX021_TMP.PROCESS_INSTANCE       = P.PROCESS_INSTANCE 
and PS_GPCHTX021_TMP.GPCH_TX_CANTON           = P.GPCH_TX_CANTON 
and PS_GPCHTX021_TMP.GPCH_TX_VILLAGE_CD       = P.GPCH_TX_VILLAGE_CD 
and PS_GPCHTX021_TMP.EMPLID                   = P.EMPLID 
and PS_GPCHTX021_TMP.EMPL_RCD                 = P.EMPL_RCD 
and PS_GPCHTX021_TMP.GPCH_AL_CPAY_ENDDT       < P.GPCH_AL_CPAY_ENDDT 
and PS_GPCHTX021_TMP.SEG_END_DT               = P.SEG_END_DT 
and PS_GPCHTX021_TMP.RSLT_SEG_NUM             = P.RSLT_SEG_NUM 
and PS_GPCHTX021_TMP.COMPANY                  = P.COMPANY 
and PS_GPCHTX021_TMP.PRD_END_DT               = P.PRD_END_DT 
and PS_GPCHTX021_TMP.GPCH_TX_TRF_CD         <> P.GPCH_TX_TRF_CD) 
End-Sql 



#ifdef ORACLE 
Begin-Sql on-error=give_warning 
commit 
End-Sql 
#endif 

#Debug show '-> Update_Non_Grouping' 
end-Procedure Update_Non_Grouping 
!************************************************************************************* 
Begin-Procedure Insert_GPCHTX025

Begin-Sql on-error=give_warning
INSERT INTO PS_GPCHTX025_TMP(PROCESS_INSTANCE,GPCH_TX_CANTON,GPCH_TX_VILLAGE_CD,GPCH_TX_TRF_TYPE,EMPLID,
EMPL_RCD,GPCH_AL_CPAY_ENDDT,SEG_BGN_DT,SEG_END_DT,RSLT_SEG_NUM,SEQNUM,SEX,COMPANY,PRD_END_DT,TERMINATION_DT,BEGIN_DT,END_DT,
BIRTHDATE,GPCH_TX_TRF_CD,NATIONAL_ID,GPCH_AH_NNSS,VISA_PERMIT_TYPE,CONTRACT_TYPE,ACTION,POSTAL,GPCH_RP_CHAR03,GPCH_RP_FROMDT1,GPCH_RP_AMOUNT1,GPCH_RP_AMOUNT2,GPCH_RP_AMOUNT3,
GPCH_RP_AMOUNT11,GPCH_RP_AMOUNT14,GPCH_RP_AMOUNT19,GPCH_RP_AMOUNT20,REG_TEMP,FTE)
SELECT
[$prcs_process_instance],TX02.GPCH_TX_CANTON,TX02.GPCH_TX_VILLAGE_CD,TX02.GPCH_TX_TRF_TYPE,TX02.EMPLID,TX02.EMPL_RCD,
TX02.GPCH_AL_CPAY_ENDDT,TX02.SEG_BGN_DT,TX02.SEG_END_DT,TX02.RSLT_SEG_NUM,TX02.SEQNUM,TX02.SEX,TX02.COMPANY,TX02.PRD_END_DT,
TX02.TERMINATION_DT,TX02.BEGIN_DT,TX02.END_DT,TX02.BIRTHDATE,TX02.GPCH_TX_TRF_CD,
TX02.NATIONAL_ID,TX02.GPCH_AH_NNSS,TX02.VISA_PERMIT_TYPE,TX02.CONTRACT_TYPE,TX02.ACTION,
TX02.POSTAL,TX02.GPCH_RP_CHAR03,TX02.GPCH_RP_FROMDT1,TX02.GPCH_RP_AMOUNT1 ,TX02.GPCH_RP_AMOUNT2 ,TX02.GPCH_RP_AMOUNT3 ,
TX02.GPCH_RP_AMOUNT11,TX02.GPCH_RP_AMOUNT14 ,TX02.GPCH_RP_AMOUNT19 ,TX02.GPCH_RP_AMOUNT20,TX02.REG_TEMP,
CASE When TX02.FTE > 1.00 Then 1.00  ELSE TX02.FTE END
FROM PS_GPCHTX021_TMP TX02
where TX02.PROCESS_INSTANCE = #prcs_process_instance
End-Sql 

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif

End-Procedure
 !*******************************************************

