!******************************************************************************!
! Report Name: fowc0009 - WC TO GL INTERFACE                                   !
!******************************************************************************!
!                                                                              !
!                                                                              !
!                                                                              !
! This software and related documentation are provided under a                 !
! license agreement containing restrictions on use and                         !
! disclosure and are protected by intellectual property                        !
! laws. Except as expressly permitted in your license agreement                !
! or allowed by law, you may not use, copy, reproduce,                         !
! translate, broadcast, modify, license, transmit, distribute,                 !
! exhibit, perform, publish or display any part, in any form or                !
! by any means. Reverse engineering, disassembly, or                           !
! decompilation of this software, unless required by law for                   !
! interoperability, is prohibited.                                             !
! The information contained herein is subject to change without                !
! notice and is not warranted to be error-free. If you find any                !
! errors, please report them to us in writing.                                 !
!                                                                              !
!                                                                              !
! Copyright (C) 1988, 2014, Oracle and/or its affiliates.                      !
! All Rights Reserved.                                                         !
!******************************************************************************!
!***********************************************************************
!                                                                      *
!          $Date:  2014/02/07:13:34:52                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!----------------------------------------------------------------------!
#include 'setenv.sqc'         !set environment
#include 'setup01.sqc'        !printer and page-size initialization

!******************************************************************************!
! Name: program                                                                *
!                                                                              *
! Calls    : Init-DateTime                                                     *
!            Init-Number                                                       *
!            Get-Current-DateTime                                              *
!            Stdapi-Init                                                       *
!            Initialization                                                    *
!            Set-up-EIP                                                        *
!            ff010-get-acct-key                                                *
!            cc200-zeros                                                       *
!            cc400-zeros                                                       *
!            bb010-select-accum                                                *
!            cc010-break                                                       *
!            cc300-break                                                       *
!            ps_sqr_round                                                      *
!            reset                                                             *
!            stdapi-term                                                       *
!            finalization                                                      *
!                                                                              *
! Function : Controls flow of program                                          *
!                                                                              *
!******************************************************************************!
begin-program
  let $run_date               = ''
  let $ledger                 = ' '
  let $ledger_group           = ' '

  do Init-DateTime
  do Init-Number

  do Get-Current-DateTime

  do Define-Prcs-Vars
  do Get-Run-Control-Parms

  do Initialization

  do Set-up-EIP

  !do ff010-get-acct-key
  let $gl_run_date  = $AsOfToday
 
  do Get-Next-Seqnum ($gl_run_date, #seqnum)

 
  ! Check to see if FOWC009 has been run for $run_date
  do Check-GL-Run-History
  do Add-to-GL-Run-History
  do bb010-select-accum
  if #error_counter = 0
     show ' '
     show 'fowc0009 program successfully completed'
     commit
  else
     rollback
     show 'fowc0009 program contained errors - rollback'
     stop quiet
  end-if

  do reset

  do finalization

  do 8000-wrapup

end-program
!==============================================================================!

!******************************************************************************!
! Procedure Name: Initialization                                               *
!                                                                              *
! Called By: Begin-Program                                                     *
!                                                                              *
! Calls    : ask-from-thru-date                                                *
!            get-values                                                        *
!                                                                              *
! Function : Initializes the program                                           *
!                                                                              *
!******************************************************************************!
begin-procedure Initialization

#debugf show 'Initialization'

  show 'Date: ' $AsOfToday
  show 'Time: ' $AsOfNow
  show ' '
  show 'Please wait....................fowc0009.sqr is being Processed.'
  show ''
  show 'Program to interface Workers Compensation with General Ledger.'
  show ''
  show 'The program path is ::: ' $SQR-Program
  show ''

    if $prcs_process_instance = ''
 !       do ask-from-thru-date

        let $run_dts =  strtodate($ThruDate,'DD-MON-YYYY')
        #debugf show '$run_dts' $run_dts
      else
        do get-values
    end-if

    !#ifdef MICROSOFT
      let $space = ' '
    !#else
    !  let $space = ''
   ! #endif

    let #zero = 0
    let #date_null = ''

    !let #seqnum                 = #zero
    let #linenbr                = #zero
    let $kk_amount_type         = '1'
    let $audit_actn             = 'A' !$space
    let $in_process_flg         = $space
    let $budget_line_status     = $space
    let $budget_dt              = $date_null
    let $bus_unit_gl            = $space
    let $journal_id             = $space
    let $journal_date           = $date_null
    let #journal_line           = #zero
    let $account                = $space
    let $deptid                 = $space
    let $project_id             = $space
    let $product                = $space
    let $fund_code              = $space
    let $program_code           = $space
    let $class_fld              = $space
    let $affiliate              = $space
    let $operating_unit         = $space
    let $altacct                = $space
    let $budget_ref             = $space
    let $chartfield1            = $space
    let $chartfield2            = $space
    let $chartfield3            = $space
    let $affiliate1             = $space
    let $affiliate2             = $space
    let $BUSINESS_UNIT_PC       = $space
    let $ACTIVITY_ID            = $space
    let $RESOURCE_TYPE          = $space
    let $RESOURCE_CATEGORY      = $space
    let $RESOURCE_SUB_CAT       = $space

    let $statistics_code        = $space
    let #monetary_amount        = #zero
    let #foreign_amount         = #zero
    let $foreign_currency       = 'USD'
    let $rt_type                = 'CRRNT'
    let #rate_mult              = 1
    let #rate_div               = 1
    let #statistic_amount       = #zero
    let $jrnl_ln_ref            = $space
    let $open_item_status       = 'N'
    let $line_descr             = 'WC_PREMIUM'
    let $jrnl_line_status       = '0'
    let $journal_line_date      = $date_null
    let $business_unit          = $space
    let $appl_jrnl_id           = $space
    let $accounting_dt          = $date_null
    let $gl_distrib_status      = 'N'
    !let #prcs_process_instance  = #zero
    let $currency_cd            = 'USD'
    let #accounting_period      = #zero
    let #fiscal_year            = #zero
    let $use_distribution       = $space


#debugf show 'thru date= ' $ThruDate

end-procedure Initialization
!==============================================================================!

!******************************************************************************!
! Procedure Name: Set-up-EIP
!
! Called By: PROGRAM
!
! Calls:
!
! Function:
!
!******************************************************************************!

begin-procedure Set-up-EIP
   show 'Set-up-EIP'
  do Get-Process-Name (#prcs_process_instance, $prcsname)
  do Get-Active-In-BatchPub ($prcsname, #cntmsg)

   show '#prcs_process *' #prcs_process_instance '*'
   show '$prcsname *' $prcsname '*'
   show '#cntmsg *' #cntmsg '*'

  if #cntmsg > 0      
      do Get-Job-Instance
      let $Out_Clean_Up_Flag  = 'U'
      do Insert-Param-In-BatchPub (#prcs_process_instance, #prcs_job_instance, $prcsname,
                          $SysDateTime, $Out_Clean_up_Flag)                 
  end-if

end-procedure !Set-up-EIP


!******************************************************************************!
! Procedure Name: Get-Values                                                   *
!                                                                              *
! Called By: Initialization                                                    *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function : Get Parameters                                                    *
!                                                                              *
!******************************************************************************!
begin-procedure Get-Values

#debugf show 'get-values'


BEGIN-SELECT
RUN.ASOFDATE

     let $run_date     = &run.ASOFDATE

FROM  PS_RUN_CNTL_FOWC9 RUN

WHERE RUN.OPRID       = $prcs_oprid
AND   RUN.RUN_CNTL_ID = $prcs_run_cntl_id

END-SELECT

end-procedure get-values
!==============================================================================!

!******************************************************************************!
! Procedure Name: bb010-select-accum                                           *
!                                                                              *
! Called By: begin-program                                                     *
!                                                                              *
! Calls    : dd010-write-gl                                                    *                                                                      *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!

begin-procedure bb010-select-accum

#debugf show 'bb010-select-accum'

begin-select

!A.EMPLID
A.DEPTID
A.STATE
A.COMPANY
A.PRODUCT
A.PROJECT_ID
!A.FO_PREMIUM_AMT
SUM(A.FO_PREMIUM_AMT) &a.fo_premium_amt
A.FO_GL_WC_EXP
A.FO_GL_WC_LIAB
A.BUSINESS_UNIT_GL
A.BUSINESS_UNIT_HR
A.EFFDT

!    let $emplid             = &a.emplid
    let $deptid             = &a.deptid
    let $state              = &a.state
    let $company            = &a.company
    let $product            = &a.product
    let $project_id         = &a.project_id
    let #premium_amt        = round(&a.fo_premium_amt,2)
    let $fo_gl_wc_exp       = &a.fo_gl_wc_exp
    let $fo_gl_wc_liab      = &a.fo_gl_wc_liab
    let $bus_unit_gl        = &a.business_unit_gl
    let $hold_business_unit = &a.business_unit_hr
    let $accounting_dt      = &a.effdt       
       do get-jrnl-id
       let #rec_ctr = #rec_ctr + 1
!       let #seqnum  = #seqnum  + 1

!      let #linenbr = 1

       let #linenbr  = #linenbr + 1
       let $account = $fo_gl_wc_exp
       do dd010-write-gl       
!       let #linenbr = 2
       let #linenbr  = #linenbr + 1
       let $account = $fo_gl_wc_liab
       let #premium_amt = #premium_amt * -1
       do dd010-write-gl       

!       let $hold_business_unit_gl = $bus_unit_gl

!       SHOW 'IN MAIN SELECT'

from PS_FO_WC_PREMIUM A

where A.EFFDT           = $run_date

group by DEPTID,STATE,COMPANY,PRODUCT,PROJECT_ID,FO_GL_WC_EXP, FO_GL_WC_LIAB,
BUSINESS_UNIT_GL,BUSINESS_UNIT_HR,EFFDT

order by A.BUSINESS_UNIT_GL

end-select

end-procedure bb010-select-accum
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-jrnl-id
!
! Called By: bb-select-accum
!
! Calls:
!
! Function:
!
!******************************************************************************!

begin-procedure get-jrnl-id

begin-select
JRNL.APPL_JRNL_ID

    let $appl_jrnl_id  = &JRNL.APPL_JRNL_ID

from PS_FO_WC_CO_MOD JRNL
where JRNL.COMPANY = $company
  and JRNL.EFFDT   <= $run_date
end-select

end-procedure get-jrnl-id
!==============================================================================!

!******************************************************************************!
! Procedure Name: dd010-write-gl                                               *
!                                                                              *
! Called By: dd005-write-gl                                                    *
!                                                                              *
! Calls    : yy010-dup                                                         *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!

begin-procedure  dd010-write-gl

    let #monetary_amount        = #premium_amt
    let #foreign_amount         = #premium_amt
    let $business_unit          = $bus_unit_gl



!show '  $run_date            ['   $run_date             ']'
#ifdef debug
show '  $gl_run_date         ['   $gl_run_date          ']'
show '  #seqnum              ['   #seqnum               ']'
show '  #linenbr             ['   #linenbr              ']'
show '  $kk_amount_type      ['   $kk_amount_type       ']'
show '  $audit_actn          ['   $audit_actn           ']'
show '  $in_process_flg      ['   $in_process_flg       ']'
show '  $budget_line_status  ['   $budget_line_status   ']'
show '  $budget_dt           ['   $budget_dt            ']'
show '  $bus_unit_gl         ['   $bus_unit_gl          ']'
show '  $journal_id          ['   $journal_id           ']'
show '  $journal_date        ['   $journal_date         ']'
show '  #journal_line        ['   #journal_line         ']'
show '  $account             ['   $account              ']'
show '  $deptid              ['   $deptid               ']'
show '  $project_id          ['   $project_id           ']'
show '  $product             ['   $product              ']'
show '  $fund_code           ['   $fund_code            ']'
show '  $program_code        ['   $program_code         ']'
show '  $class_fld           ['   $class_fld            ']'
show '  $affiliate           ['   $affiliate            ']'
show '  $operating_unit      ['   $operating_unit       ']'
show '  $altacct             ['   $altacct              ']'
show '  $statistics_code     ['   $statistics_code      ']'
show '  #monetary_amount     ['   #monetary_amount      ']'
show '  #foreign_amount      ['   #foreign_amount       ']'
show '  $foreign_currency    ['   $foreign_currency     ']'
show '  $rt_type             ['   $rt_type              ']'
show '  #rate_mult           ['   #rate_mult            ']'
show '  #rate_div            ['   #rate_div             ']'
show '  #statistic_amount    ['   #statistic_amount     ']'
show '  $jrnl_ln_ref         ['   $jrnl_ln_ref          ']'
show '  $open_item_status    ['   $open_item_status     ']'
show '  $line_descr          ['   $line_descr           ']'
show '  $jrnl_line_status    ['   $jrnl_line_status     ']'
show '  $journal_line_date   ['   $journal_line_date    ']'
show '  $business_unit       ['   $business_unit        ']'
show '  $appl_jrnl_id        ['   $appl_jrnl_id         ']'
show '  $accounting_dt       ['   $accounting_dt        ']'
show '  $gl_distrib_status   ['   $gl_distrib_status    ']'
show '  #process_instance    ['   #prcs_process_instance ']'
show '  $currency_cd         ['   $currency_cd          ']'
show '  #accounting_period   ['   #accounting_period    ']'
show '  #fiscal_year         ['   #fiscal_year          ']'
show '  $ledger              ['   $ledger               ']'
show '  $ledger_group        ['   $ledger_group         ']'
show '  $use_distribution    ['   $use_distribution     ']'
#endif
begin-sql   on-error=yy010-dup
insert into PS_HR_ACCTG_LINE (
RUN_DT
,SEQNUM
,LINE_NBR
,KK_AMOUNT_TYPE
,AUDIT_ACTN
,IN_PROCESS_FLG
,BUDGET_LINE_STATUS
,BUDGET_DT
,BUSINESS_UNIT_GL
,JOURNAL_ID
,JOURNAL_DATE
,JOURNAL_LINE
,ACCOUNT
,DEPTID
,PROJECT_ID
,PRODUCT
,FUND_CODE
,PROGRAM_CODE
,CLASS_FLD
,AFFILIATE
,OPERATING_UNIT
,ALTACCT
,BUDGET_REF
,CHARTFIELD1
,CHARTFIELD2
,CHARTFIELD3
,AFFILIATE_INTRA1
,AFFILIATE_INTRA2
,BUSINESS_UNIT_PC
,ACTIVITY_ID
,RESOURCE_TYPE
,RESOURCE_CATEGORY
,RESOURCE_SUB_CAT
,STATISTICS_CODE
,MONETARY_AMOUNT
,FOREIGN_AMOUNT
,FOREIGN_CURRENCY
,RT_TYPE
,RATE_MULT
,RATE_DIV
,STATISTIC_AMOUNT
,JRNL_LN_REF
,OPEN_ITEM_STATUS
,LINE_DESCR
,JRNL_LINE_STATUS
,JOURNAL_LINE_DATE
,BUSINESS_UNIT
,APPL_JRNL_ID
,ACCOUNTING_DT
,GL_DISTRIB_STATUS
,PROCESS_INSTANCE
,CURRENCY_CD
,ACCOUNTING_PERIOD
,FISCAL_YEAR
,LEDGER
,LEDGER_GROUP
,USE_DISTRIBUTION )




! We need to use the $gl_run_date since it represents the current date.
! This follows the logic in the GL Interface.
! ACCOUNTING_DT holds the value of $run_date
! values       ($run_date,
 values       ($gl_run_date,
        #seqnum,
        #linenbr,
        $kk_amount_type,
        $audit_actn,
        $in_process_flg,
        $budget_line_status,
        $budget_dt,
        $bus_unit_gl,
        $journal_id,
        $journal_date,
        #journal_line,
        ! CF
        $account,
        $deptid,
        $project_id,
        $product,
        $fund_code,
        $program_code,
        $class_fld,
        $affiliate,
        $operating_unit,
        $altacct,
        $budget_ref,
        $chartfield1,
        $chartfield2,
        $chartfield3,
        $affiliate1,
        $affiliate2,
        $BUSINESS_UNIT_PC,
        $ACTIVITY_ID,
        $RESOURCE_TYPE,
        $RESOURCE_CATEGORY,
        $RESOURCE_SUB_CAT,
        ! End of CF
        $statistics_code,
        #monetary_amount,
        #foreign_amount,
        $foreign_currency,
        $rt_type,
        #rate_mult,
        #rate_div,
        #statistic_amount,
        $jrnl_ln_ref,
        $open_item_status,
        $line_descr,
        $jrnl_line_status,
        $journal_line_date,
        $business_unit,
        $appl_jrnl_id,
        $accounting_dt,
        $gl_distrib_status,
        #prcs_process_instance,
        $currency_cd,
        #accounting_period,
        #fiscal_year,
        $ledger,
        $ledger_group,
        $use_distribution)
end-sql

!    let #gl_count = #gl_count + 1

end-procedure dd010-write-gl
!==============================================================================!

!******************************************************************************!
! Procedure Name: ff010-get-acct-key                                           *
!                                                                              *
! Called By: begin-program                                                     *
!                                                                              *
! Calls    : ff020-get-acct-key                                                *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!

!begin-procedure ff010-get-acct-key

!#debugf show 'ff010'

!begin-select

!max(AC.SEQNUM) &ac.sequence_num

!  let #seqnum = &ac.sequence_num

!from PS_HR_ACCTG_LINE AC

!where AC.RUN_DT = $asofdate

!end-select

!end-procedure !ff010-get-acct-key


!*******************************
begin-procedure Get-Next-Seqnum ($dt, :#no)
!*******************************

let #no = 0

begin-SELECT ON-ERROR=SQL-error

MAX(SEQNUM) &SEQNUM
  let #no = &SEQNUM

FROM PS_GL_GEN_HISTORY
WHERE RUN_DT = $dt

end-SELECT

let #no = #no + 1

end-procedure Get-Next-Seqnum



!******************************************
begin-procedure Check-GL-Run-History
!******************************************

!   Check the GL_GEN_HISTORY table for an entry for FOWC0009  where the $run_dt = PAY_END_DT.                              *
!   If a row is returned, that means we have already published the WC for this payroll.                                         *

 let $found = 'N'

begin-SELECT ON-ERROR=SQL-error

SEQNUM  &SEQNUM
            let $found = 'Y'
FROM PS_GL_GEN_HISTORY
WHERE PAY_END_DT = $run_date  AND PROGRAM_ID = 'FOWC0009'

end-SELECT

 IF $found = 'Y'
      SHOW ''
      SHOW ' This program has already been run with the Run Date of ' $run_date
      stop quiet
 END-IF

end-procedure

!*************************************
begin-procedure Add-to-GL-Run-History
!*************************************

    let $run_company      = ' '
    let $run_paygroup     = ' '
    let $RUN_ID           = ' '
    !let $run_pay_end_dt   = ''
    let $run_pay_end_dt   = $run_date

begin-SQL ON-ERROR=SQL-error
INSERT INTO PS_GL_GEN_HISTORY ( RUN_DT,
                                SEQNUM,
                                GL_RUN_NUM,
                                RUN_ID,
                                COMPANY,
                                PAYGROUP,
                                PAY_END_DT,
                                GL_GEN_STATUS,
                                PROGRAM_ID,
                                RECEIVED_FLAG
                               )
                       VALUES ( $gl_run_date,
                                #seqnum,
                                1,
                                $RUN_ID,
                                $run_company,
                                $run_paygroup,
                                $run_pay_end_dt,
                                'N',
                                'FOWC0009',
                                'N'
                               );

end-SQL

end-procedure Add-to-GL-Run-History




!==============================================================================!
!******************************************************************************!
! Procedure Name: yy010-dup                                                    *
!                                                                              *
! Called By: dd010-write-gl and ff030-update-acct-key                          *
!                                                                              *
! Calls    : yy010-dup                                                         *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure yy010-dup

#debugf show 'yy010'

   let #error_counter = #error_counter + 1
   show 'error number: ' #sql-status
   show 'sql-error: ' $sql-error
   show 'record ' $process-file   '  rundate='  $run_date
                                    '  seqnum='   #seqnum
                                    '  linenbr='  #linenbr
                                    '  account='  $insert_account
end-procedure yy010-dup
!==============================================================================!

!******************************************************************************!
! Procedure Name: finalization                                                 *
!                                                                              *
! Called By: Begin-Program                                                     *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function : Wraps up the program                                              *
!                                                                              *
!******************************************************************************!
begin-procedure finalization

  do Init-Datetime
  do Get-Current-DateTime

  Show ''
  Show 'Date: ' $AsOfToday
  Show 'Time: ' $AsOfNow
  Show ''

end-procedure finalization
!==============================================================================!

!**************************************************************************
!                                                                         *
! PROCEDURE: 8000-WRAPUP                                                  *
!                                                                         *
! PURPOSE: THIS PROCEDURE:                                                *
!            1. UPDATES THE PROCESS SCHEDULER TO INDICATE A SUCCESSFUL    *
!               COMPLETION.                                               *
!            2. EXECUTES THE STANDARD ERROR REPORT PROCEDURE TO GENERATE  *
!               A REPORT OF ANY ERRORS ENCOUNTERED DURING THE PROCESS.    *
!                                                                         *
!**************************************************************************
BEGIN-PROCEDURE 8000-wrapup

if $prcs_process_instance <> ''
   do update-prcs-run-status
end-if

END-PROCEDURE

!******************************************************************************!
! Include Header files
!******************************************************************************!
!#include 'hrrnctl1.sqc'  ! GET RUN CONTROL PARAMETER VALUES
!#include 'hrgetval.sqc'  ! GET VALUES MASK ROUTINES
!#include 'askftd.sqc'    ! FROM THRU DATE INPUT
#include 'reset.sqc'     ! RESET PRINTER PROCEDURE
#Include 'prcsdef.sqc'   !Update Process Request variable declare
#Include 'prcsapi.sqc'   !Update Process API
#include 'curdttim.sqc'  ! GET-CURRENT-DATETIME PROCEDURE
#include 'datetime.sqc'  ! ROUTINES FOR DATE AND TIME FORMATTING
#include 'number.sqc'    ! ROUTINES TO FORMAT NUMBERS
#include 'datemath.sqc'  ! ROUTINES FOR DATEMATH
#Include 'eoprcsnm.sqc'  !Determine Process Name
#Include 'eoactive.sqc'  !Determine Active Publish Definition
#Include 'eoparam.sqc'   !Insert values into Parameter Table for Batch Publish
