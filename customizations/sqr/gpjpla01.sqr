!***********************************************************************
! GPJPLA01.sqr:  Employment Insurance Exempt Report                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:47:05                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !page layout AND printer definition

begin-setup

  declare-variable
    date $ObjectDate_dt
    date $Empl_Birthdate_dt
    integer #age
  end-declare

end-setup


begin-report


        do Init-Processing

        do Calc-Date

        do Build-Select

        do Process-Main

        do Reset

        do Update-Prcs-Run-Status

end-report


!***********************************************************************
!                                                                      *
! Init-Processing                                                      *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Define-Prcs-Vars        - prcsapi.sqc                  *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Get-Language-Codes      - prcslng.sqc                  *
!               Get-GPJPLA01-runctl                                    *
!               Init-Report                                            *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!                                                                      *
!***********************************************************************
begin-procedure Init-Processing


        do Init-Datetime

        do Get-Current-Datetime

        do Define-Prcs-Vars

        do Get-Run-Control-Parms

        do Get-Language-Codes

        do Get-Gpjpla01-runctl

        do Init-Report


end-procedure ! Init-Processing


!***********************************************************************
!                                                                      *
! Get-Gpjpla01-runctl                                                  *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Description:  Gets data from GPJP_RC_LA01 runcotrol record.          *
!                                                                      *
!***********************************************************************
begin-procedure Get-Gpjpla01-Runctl


begin-SELECT

RC.DATE_YEAR_VAL
RC.GPJP_TAX_ESTAB
RC.BUSINESS_UNIT
RC.DEPTID

FROM PS_GPJP_RC_LA01 RC
WHERE RC.OPRID = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SELECT

  let #RC_ObjectYear     = &RC.DATE_YEAR_VAL
  let $RC_LA_Estab       = RTRIM(&RC.GPJP_TAX_ESTAB, ' ')
  let $RC_BusinessUnit   = RTRIM(&RC.BUSINESS_UNIT, ' ')
  let $RC_DeptId         = RTRIM(&RC.DEPTID, ' ')


end-procedure ! Get-Gpjpla01-Runctl


!***********************************************************************
!                                                                      *
! Init-Report                                                          *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Calls:        Init_Report_Translation    - sqrtrans.sqc              *
!               Append_Report_Translation  - sqrtrans.sqc              *
!               Get_Field_Information                                  *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header & throughout report.  Performs   *
!               Strings Table translation.  #Defines variables for     *
!               use throughout report in printing columns.             *
!                                                                      *
!***********************************************************************
begin-procedure Init-Report


!***********************************************************************
!                                                                      *
! Translations procedures & Strings Table retrievals.                  *
!                                                                      *
!***********************************************************************

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Append_Report_Translation ('GPJPLA01')

    do Get_Field_Information ('GPJPLA01','TITLE',                $GPJPLA01_Title,               #dummy_width)
    do Get_Field_Information ('GPJPLA01','ESTAB',                $GPJPLA01_Estab,               #dummy_width)
    do Get_Field_Information ('GPJPLA01','BUSINESS_UNIT',        $GPJPLA01_BusinessUnit,        #dummy_width)
    do Get_Field_Information ('GPJPLA01','BUSINESS_UNIT_NAME',   $GPJPLA01_BusinessUnitName,    #dummy_width)
    do Get_Field_Information ('GPJPLA01','DEPTID',               $GPJPLA01_DeptId,              #dummy_width)
    do Get_Field_Information ('GPJPLA01','DEPT_NAME',            $GPJPLA01_DeptName,            #dummy_width)
    do Get_Field_Information ('GPJPLA01','BIRTHDATE',            $GPJPLA01_Birthdate,           #dummy_width)
    do Get_Field_Information ('GPJPLA01','AGE',                  $GPJPLA01_Age,                 #dummy_width)
    do Get_Field_Information ('GPJPLA01','EMPLID',               $GPJPLA01_EmplId,              #dummy_width)
    do Get_Field_Information ('GPJPLA01','EMPL_RCD',             $GPJPLA01_EMPL_RCD,            #dummy_width)
    do Get_Field_Information ('GPJPLA01','EMPL_NAME',            $GPJPLA01_EmplName,            #dummy_width)
    do Get_Field_Information ('GPJPLA01','SEX',                  $GPJPLA01_Gender,              #dummy_width)
    do Get_Field_Information ('GPJPLA01','SUPV_LVL_ID',          $GPJPLA01_Supervisor,          #dummy_width)
    do Get_Field_Information ('GPJPLA01','DEPT_TOT',             $GPJPLA01_DeptTot,             #dummy_width)
    do Get_Field_Information ('GPJPLA01','ESTAB_TOT',            $GPJPLA01_EstabTot,            #dummy_width)


!***********************************************************************
!                                                                      *
! Report variables.                                                    *
!                                                                      *
!***********************************************************************

    let $ReportID              = 'GPJPLA01'          ! Printed in header
    let $ReportTitle           = $GPJPLA01_Title     ! Printed in header
    let $ReportDate            = $AsOfToday          ! Printed in header
    let $ReportTime            = $AsOfNow            ! Printed in header
    let $Report_Language       = $curr_language_cd   ! curr_language_cd resolved in prcslng.sqc


    let $_TableAlias = 'A'
    do Security-Param                   ! SQR Security

end-procedure ! Init-Report


!***********************************************************************
!                                                                      *
! Calc-Date                                                            *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Calculates the Object Date.                            *
!               Calculates what the birthdate have to be for someone   *
!               who will be 64 or older as of the Object date. (In     *
!               Japan a person would reach the age of 64 on the day    *
!               before his/her 64th birthdate).                        *
!                                                                      *
!***********************************************************************

begin-procedure Calc-Date

  move #RC_ObjectYear to $ObjectYear 9999
  let $ObjectDt = $ObjectYear || '0401'
  do Format-DateTime($ObjectDt, $ObjectDate, {DEFCMP}, '', 'native')

  let #BirthYr = (#RC_ObjectYear - 64)
  move #BirthYr to $BirthYear 9999
  let $BirthDt = $BirthYear || '0401'
  do Format-DateTime($BirthDt, $BirthDate, {DEFCMP}, '', 'native')

end-procedure ! Calc-Date


!***********************************************************************
!                                                                      *
! Build-select                                                         *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Builds dynamic select statement for main procedure.    *
!                                                                      *
!***********************************************************************
begin-procedure Build-select

    move '' to $Labor_Ins_Num_Crit

    if $RC_LA_Estab <> ''
      let $Labor_Ins_Num_Crit = ' AND A.GPJP_TAX_ESTAB = ''' || $RC_LA_Estab ||  ''' '
    else
      let $Labor_Ins_Num_Crit = ' '
    end-if

    move '' to $BusinessUnit_Crit

    if $RC_BusinessUnit <> ''
      let $BusinessUnit_Crit = ' AND B.BUSINESS_UNIT = ''' || $RC_BusinessUnit ||  ''' '
    else
      let $BusinessUnit_Crit = ' '
    end-if

    move '' to $DeptID_Crit

    if $RC_DeptID <> ''
      let $DeptID_Crit = ' AND B.DEPTID = ''' || $RC_DeptID ||  ''' '
    else
      let $DeptID_Crit = ' '
    end-if

end-procedure !Build-select

!***************************
begin-heading 7
!***************************

#include 'stdhdgtr.sqc'

    print $GPJPLA01_Estab             (+2,5,22)
    print $Est_save                   (0,28,15)
    print $EstabName                  (0,46,30)
    print $GPJPLA01_BusinessUnit      (+2,5,13)
    print $GPJPLA01_BusinessUnitName  (0,20,20)
    print $GPJPLA01_DeptId            (0,42,10)
    print $GPJPLA01_DeptName          (0,55,15)
    print $GPJPLA01_Birthdate         (0,80,10)
    print $GPJPLA01_Age               (0,92,6)
    print $GPJPLA01_EmplId            (0,100,11)
    print $GPJPLA01_EMPL_RCD            (0,110,8)
    print $GPJPLA01_EmplName          (0,115,20)
    print $GPJPLA01_Gender            (0,155,6)
    print $GPJPLA01_Supervisor        (0,165,20)

end-heading


!***********************************************************************
!                                                                      *
! Process-Main                                                         *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Description:  Main procedure.                                        *
!                                                                      *
!***********************************************************************
begin-procedure Process-Main

  let #Dept_Total = 0
  let #Estab_Total = 0
  let $Dept_save = ' '
  let $Est_save = ' '
  let $No_records = 'Y'

Begin-SELECT
A.EMPLID
A.EMPL_RCD
A.GPJP_TAX_ESTAB
B.BUSINESS_UNIT
B.DEPTID
B.EMPL_RCD
B.EFFDT
B.EFFSEQ
C.BIRTHDATE


     let $Emplid                  = &A.Emplid
     let $Emplrcd              = &A.EMPL_RCD
     let $Estab                   = &A.Gpjp_tax_estab
     let $EstabType               = 'LA'
     let $BusinessUnit            = &B.Business_unit
     let $BU                      = &B.Business_unit
     let $DeptID                  = &B.Deptid

     do Get-Employee-Name
     do Get-Sex

     let $Empl_Birthdate = &C.Birthdate
     do Convert-To-DTU-Date ($Empl_Birthdate, $Empl_Birthdate_YMD)

     let $No_records     = 'N'

     if $Estab <> $Est_save
        if $Est_save <> ' '
           do Print-Dept-Total
           do Print-Estab-Total
        end-if
        let $Est_save = $Estab
        let $Dept_save = ' '
     end-if
     do Get-Business-Unit-Name
     do Get-Estab-Name

     do Get-Department-Name

     if $DeptID <> $Dept_save
        if $Dept_save <> ' '
           do Print-Dept-Total
        end-if

        print $BU         (+2,5,10)
        print &BU.DESCR   (0,20,20)
        print $DeptID     (0,42,30)
        print $DeptName   (0,55,30)

        let $Dept_save = $DeptID
        let #Dept_total = 0
     end-if

     do Calculate-Age

     do Get-Gender-Descr

     do Get-Job-Jr

     add 1 to #Dept_Total
     add 1 to #Estab_Total

     do Print-Detail-line

FROM PS_GPJP_LA_PYE_DTA A,
PS_JOB B,
PS_PERSON C


WHERE A.EMPLID = B.EMPLID
AND A.EFFDT = (SELECT MAX(A1.EFFDT)
                 FROM PS_GPJP_LA_PYE_DTA A1
                WHERE A1.EMPLID = A.EMPLID
                  AND  A1.EMPL_RCD=A.EMPL_RCD
                  AND A1.EFFDT <= $AsOfToday)
AND B.EMPL_RCD = A.EMPL_RCD
AND B.EFFDT = (SELECT MAX(B1.EFFDT)
                 FROM PS_JOB B1
                WHERE B1.EMPLID = B.EMPLID
                  AND B1.EMPL_RCD = B.EMPL_RCD
                  AND B1.EFFDT <= $ObjectDate)
AND B.EFFSEQ = (SELECT MAX(B2.EFFSEQ)
                  FROM PS_JOB B2
                 WHERE B2.EMPLID = B.EMPLID
                   AND B2.EMPL_RCD = B.EMPL_RCD
                   AND B2.EFFDT = B.EFFDT)
AND B.HR_STATUS = 'A'
AND B.PAY_SYSTEM_FLG = 'GP'
AND A.EMPLID = C.EMPLID
AND C.BIRTHDATE <= $Birthdate


  [$Labor_Ins_Num_Crit]
  [$BusinessUnit_Crit]
  [$DeptID_Crit]
  [$SecurityClausewithERN]

ORDER BY A.GPJP_TAX_ESTAB, B.BUSINESS_UNIT, B.DEPTID, C.BIRTHDATE

end-SELECT

    if $No_records <> 'Y'
        let $End = 'Y'
        do Print-Dept-Total
        do Print-Estab-Total
    end-if

end-procedure ! Process-Main

!***********************************************************************
!                                                                      *
! Get Sex                                                              *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Retrieve's a person sex from PERS_DATA_EFFDT.    *
!                                                                      *
!***********************************************************************
begin-procedure Get-Sex

Let $Sex = ' '

begin-select
C.SEX
  Let $Sex = &C.SEX
From PS_PERS_DATA_EFFDT C
Where C.EMPLID = $EmplID
and C.EFFDT = (Select max(EFFDT)
               From PS_PERS_DATA_EFFDT
               Where EMPLID = C.EMPLID)
end-select

end-procedure !Get-Sex


!***********************************************************************
!                                                                      *
! Calculate-Age                                                        *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Calculates a person's age based on their birthdate.    *
!                                                                      *
!***********************************************************************
begin-procedure Calculate-Age

       let $Empl_Birthdate_str = datetostr(&C.Birthdate,'YYYYMMDD')

       let $ObjectDate_dt = strtodate($ObjectDt)
       let $Empl_Birthdate_dt = strtodate($Empl_Birthdate_str)

       let #age = datediff($ObjectDate_dt ,$Empl_Birthdate_dt,'year')

end-procedure !Calculate-Age


!***********************************************************************
!                                                                      *
! Get-Gender-Descr                                                     *
!                                                                      *
! Called By: Process-Main                                              *
!                                                                      *
! Description:  Gets gender description from XLATTABLE                 *
!***********************************************************************

begin-procedure Get-Gender-Descr

  let $FieldName = 'SEX'
  let $FieldValue = $Sex
  do Read-Translate-Table
  let $Gender_desc = $XlatLongName

end-procedure !Get-Gender-Descr


!***********************************************************************
!                                                                      *
! Print-Detail-line                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints detail lines.                                   *
!                                                                      *
!***********************************************************************
begin-procedure Print-Detail-line

    print $Empl_Birthdate_YMD             (+1,80,10)
    print #age                            (0,92,3) edit 999
    print $Emplid                         (0,100,11)
    print #Emplrcd                     (0,110,8) edit 999
    print $Name                           (0,115,40)
    print $Gender_desc                    (0,155,8)
    print $SupvlvlName                    (0,165,30)



end-procedure  !Print-Detail-line


!***********************************************************************
!                                                                      *
! Print-Estab-Total                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Establishment Total.                            *
!                                                                      *
!***********************************************************************
begin-procedure Print-Estab-Total

      print $GPJPLA01_EstabTot                  (+3,5,30)
      print  #Estab_Total                       (0,37,9) edit 9,999,999
      let #Estab_Total = 0
      do page_break

end-procedure  !Print-Estab-Total


!***********************************************************************
!                                                                      *
! Print-Dept-Total                                                     *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Department Total.                               *
!                                                                      *
!***********************************************************************
begin-procedure Print-Dept-Total

      print $GPJPLA01_DeptTot                   (+2,5,30)
      print  #Dept_Total                        (0,37,9) edit 9,999,999
      let #Dept_Total = 0

end-procedure  !Print-Dept-Total


!***********************************************************************
!                                                                      *
! page_break                                                           *
!                                                                      *
!                                                                      *
! Called By:    Print-Estab-Total                                      *
!                                                                      *
! Description:  Performs Page break and ensures end of report line     *
!               is printed.                                            *
!                                                                      *
!***********************************************************************
begin-procedure page_break

    if $End = 'Y'
      do Reset
    end-if

    new-page
end-procedure  !page_break


!***********************************************************************
!                                                                      *
! Get-Job-Jr                                                           *
!                                                                      *
!                                                                      *
! Called By: Process-Main                                              *
!                                                                      *
! Description:  Retrieves Supervisor Level Name                        *
!                                                                      *
!***********************************************************************

begin-procedure Get-Job-Jr

begin-SELECT
S.SUPV_LVL_ID

  let $Recname = 'SUPVSR_LVL_TBL'

  do  Get-Setid ($BU, $Recname, $Setid)

  let $Setid_dept = $Setid
  Let $SUPV_LVL_ID = &S.SUPV_LVL_ID

  Do Get-Supvlvl-Name

FROM PS_JOB S

WHERE S.EMPLID = &A.EMPLID
AND S.EMPL_RCD = &B.EMPL_RCD
AND S.EFFDT    = &B.EFFDT
AND S.EFFSEQ   = &B.EFFSEQ
end-SELECT

end-procedure !Get-Job-Jr

!***********************************************************************
!                                                                      *
!                                                                      *
! SQCS included in the report                                          *
!                                                                      *
!***********************************************************************
#include 'getbunam.sqc'     ! Get-Business-Unit-Name procedure
#include 'getdptnm.sqc'     ! Get-Department-Name procedure
#include 'getestab.sqc'     ! Get-Estab-Name procedure
#include 'number.sqc'       ! Routines to format numbers
#include 'datetime.sqc'     ! Routines for date AND time formatting
#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcsapi.sqc'      ! Replaces stdapi.sqc
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        ! Reset printer procedure
#include 'hrsecty.sqc'      ! Get SQR Security parameters
#Include 'getsetid.sqc'     ! Get Set Id from the Tableset Record Detail
#include 'getsupjp.sqc'     ! Get Supervisor Level Name
#Include 'getempnm.sqc'     ! Get Employee Name
