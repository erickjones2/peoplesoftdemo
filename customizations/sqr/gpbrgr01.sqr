!***********************************************************************
!  gpbrgr01: GRCS - Guia de Recolhimento da Contribuição Sindical      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2015/02/03:13:34:45                                 *
!       $Release:  HR92                                                *
!      $Revision:  104                                                 *
!                                                                      *
!***********************************************************************
#define G0     1
#define G1     3
#define G2     5  
#include 'setenv.sqc'   !Set environment

Begin-Setup
 #include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
     type          = HPLASERJET
     symbol-set    = 19U
     font          = 5
     point-size    = 4
 End-Declare
 Declare-Layout THIS_REPORT
       Orientation=Portrait
       Top-Margin= .4
       !Bottom-Margin= .2
       Left-Margin=.4
       Max-Columns=130
       Max-lines=94
       Char-Width=4.3    ! 7.2
       Line-Height=8     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
 End-Declare
 
 declare-variable
    date $aux_date1
    date $aux_date2
decimal #amt_chrge
integer #nbrOfDays
    integer #chk_digit
integer #chk_digit11
 end-declare

end-Setup

!**************************************
begin-report
!**************************************   
  #include 'setupdb.sqc'               ! Database specific setup
  let #FontStd   = 5  
  let #SizeGrd1  = 12  
  
  let #pos  = instr($sqr-program,'gpbrgr01',0)
  let #pos  = #pos - 1 
  let $path = substr($sqr-program,1,#pos)
  let $FileDir = $path || 'caixa.gif'
      
    #ifdef MVS
     let #pos  = instr($sqr-program,'gpbrgr01',0)
     let #pos  = #pos - 1
     let $path = substr($sqr-program,1,#pos)
     let $FileDir = $path || 'caixa)'
    #end-if
      
    #ifdef OS390
     let #pos  = instr($sqr-program,'gpbrgr01',0)
     let #pos  = #pos - 1
     let $path = substr($sqr-program,1,#pos)
     let $FileDir = $path || 'caixa)'
    #end-if
      
    #ifdef OS400
     let #pos  = instr($sqr-program,'gpbrgr01',0)
     let #pos  = #pos - 1
     let $path = substr($sqr-program,1,#pos)
     let $FileDir = $path || 'caixa)'
    #end-if
      
    #ifdef UNIX
     let $FileDir = $path || 'caixa.gif'
  #end-if
  
  #debug show $FileDir '---' $sqr-program
  
  Do Init-Report
  Do Process-Main

  Do Stdapi-Term
end-report

!**************************************
begin-procedure Init-Report
!**************************************
  move '2' to $ReportDateType   ! Set for date to format as DMY
  move '1' to $ReportYear4      ! Set for year to be formatted YYYY
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime 
  move 'GPBRGR01' to $ReportID
  move 'GRCSU - Guia de Recolhimento da Contribuição Sindical Urbana' to $ReportTitle
  move '100609 1500' to $ReportVersion  
  move '.'                To $ReportSThousand 
  move ','                To $ReportSDecimal
     
  Alter-Locale MONEY-SIGN = 'R$'
    
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display $AsOfToday noline
  display ' ' noline
  display &timeBegan
end-procedure Init-Report

!**************************************
begin-procedure Process-Main
!**************************************
  Do Security-Param
  Do Select-Parameters
  Do Create-Strings-Labels
  Do Select-Union-Data
end-procedure Process-Main

!**************************************
begin-procedure Select-Parameters
#debug show '** Select-Parameters **'
!**************************************
begin-select
RC.COMPANY
RC.ESTABID
RC.UNION_CD
RC.GPBR_YEAR_REFER
RC.GPBR_DUE_DATE
RC.GPBR_GRCS_TYPE
RC.GPBR_TOT_AMT
RC.GPBR_TOT_AMT2
RC.GPBR_DEDUCTION_AMT
RC.GPBR_DISCOUNT_AMT
RC.GPBR_FINE_AMOUNT
RC.GPBR_OTHER_AMOUNT
  
  let $company        = Rtrim(&RC.COMPANY , ' ')
  let $estabId        = Rtrim(&RC.ESTABID , ' ')
  let $union          = Rtrim(&RC.UNION_CD, ' ')
  let $year           = Rtrim(&RC.GPBR_YEAR_REFER, ' ')
  let #year           = to_number($year)
  let $dueDate        = Rtrim(&RC.GPBR_DUE_DATE, ' ')
  let $GRCStype       = rtrim(&RC.GPBR_GRCS_TYPE, ' ')
  let #capitalCompany = &RC.GPBR_TOT_AMT
  let #capitalEstab   = &RC.GPBR_TOT_AMT2
  let #deductionAmt   = &RC.GPBR_DEDUCTION_AMT
  let #discountAmt    = &RC.GPBR_DISCOUNT_AMT
  let #fineAmt        = &RC.GPBR_FINE_AMOUNT
  let #otherAmt       = &RC.GPBR_OTHER_AMOUNT
  let #totalAmt       = 0

#debug show '$company      : ' $company
#debug show '$estabId      : ' $estabId
#debug show '$union        : ' $union
#debug show '#discountAmt  : ' #discountAmt
#debug show '#fineAmt      : ' #fineAmt
#debug show '#otherAmt     : ' #otherAmt
#debug show '#totalAmt     : ' #totalAmt

  
  if $dueDate = ''
     let $dueDate = $AsOfToday
   end-if  
     
  Let $ProcessDate = '           '
  do Format-DateTime($AsOfToday, $ProcessDate,{DEFDMY}, '','')
  
  Let $BgnDt = '           '
  Let $DocumentDate = '           '  
  Let $DocDate = '           '
  do CONVERT-to-DTU-DATE($dueDate, $DocDate)
  do dtu-add-months($DocDate, -1, $DocDate)
  do dtu-month-end($DocDate, $DocDate)  
  let $month = substr($DocDate, 6,2)
  Let $BgnDt = $DocDate
  do CONVERT-FROM-DTU-DATE($DocDate, $DocDate)  
  do Format-DateTime($DocDate, $DocumentDate,{DEFDMY}, '','')

  Let $dueDateOut = '           '
  do CONVERT-to-DTU-DATE($dueDate, $dueDateOut)
  do dtu-month-end($dueDateOut, $dueDateOut)  
  do CONVERT-FROM-DTU-DATE($dueDateOut, $dueDateOut)
  do Format-DateTime($dueDateOut, $dueDateOut,{DEFDMY}, '','')

  do dtu-month-begin($BgnDt, $BgnDt)
  do CONVERT-FROM-DTU-DATE($BgnDt, $BgnDt)
  
  #debug show 'Mês:        ' $month
  #debug show 'Vencimento: ' $DocumentDate
  
FROM  PS_GPBR_RC_GRCS RC
WHERE RC.OPRID  = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure Select-Parameters


!**************************************
begin-procedure Select-union-data
#debug show '** Select-union-data **'
#debug show '#year    : ' #year
#debug show '$DocDate : ' $DocDate
#debug show '$month   : ' $month
#debug show '$union   : ' $union
#debug show '$estabId : ' $estabId
#debug show '$BgnDt   : ' $BgnDt
!**************************************

if $month <> '01' or $month <> '02' or $month <> '03'

!Variable used in procedure Select-union-data
!Only needs read one time.

Let #cs_base_contr_sind = 0

begin-select
PIN_NUM
  Let #cs_base_contr_sind = &PIN_NUM
FROM PS_GP_PIN
WHERE PIN_NM = 'CS BASE CONTR SIND'
end-select

!create dynamic where clause to generat a lot of GRCS per Company,  Establishment and Union Code.

Let $where_clause1 = ' '

If $company <> ''
   Let $where_clause1 = ' and JOB.COMPANY = ' || '''' ||  $company || ''''
end-if

If $estabId <> ''
   Let $where_clause1 = $where_clause1 || ' and JOB.ESTABID = ' || '''' || $estabId || ''''
end-if

If $union   <> ''
   Let $where_clause1 = $where_clause1 || ' and JOB.UNION_CD = ' || '''' || $union || ''''
end-if

#debug show '$where_clause1 : ' $where_clause1

let $firstprint = 'Y'
Let #TotalEarnings = 0

begin-select
JOB.ESTABID
JOB.UNION_CD
COUNT(*)               &employeesCount
SUM(WA.AMOUNT)         &WA.AMOUNT
SUM(ACM.CALC_RSLT_VAL) &TotalEarnings


  let $estabId        = Rtrim(&JOB.ESTABID , ' ')
  let $union          = Rtrim(&JOB.UNION_CD , ' ')
  let #Amount         = &WA.AMOUNT
  let #employeesCount = &employeesCount
  let #TotalEarnings  = &TotalEarnings

#debug show '$estabId : ' $estabId       
#debug show '$union   : ' $union
#debug show '#Amount  : ' #Amount
  
  if #Amount > 0
     let #totalAmt = (#Amount + #otherAmt + #fineAmt) - (#discountAmt + #deductionAmt)
  end-if  

#debug show '#deductionAmt : ' #deductionAmt
#debug show '#discountAmt  : ' #discountAmt
#debug show '#fineAmt      : ' #fineAmt
#debug show '#otherAmt     : ' #otherAmt
#debug show '#totalAmt     : ' #totalAmt

  
  if #employeesCount > 0
     do get-estab-desc
     do get-union-desc
     do Count-employees
     do Validate-barcode-fields
     if $print_barcode_flg = 'Y'
        do Map-barcode-fields
     end-if
     do Print-format
  end-if

FROM PS_GPBR_PYE_UN_WA WA
    ,PS_GP_PYE_SEG_STAT SEG
    ,PS_JOB JOB 
    ,PS_GP_RSLT_ACUM ACM
WHERE WA.YEAR_DISPLAY= #year
AND WA.EMPLID        = JOB.EMPLID
AND WA.EMPL_RCD      = JOB.EMPL_RCD
AND WA.GP_PAYGROUP   = SEG.GP_PAYGROUP
AND WA.CAL_ID        = SEG.CAL_ID
AND WA.CAL_RUN_ID    = SEG.CAL_RUN_ID
AND WA.EMPLID        = SEG.EMPLID
AND WA.EMPL_RCD      = SEG.EMPL_RCD
AND WA.UNION_CD      = JOB.UNION_CD
AND WA.EMPLID        = ACM.EMPLID
AND WA.EMPL_RCD      = ACM.EMPL_RCD
AND WA.GP_PAYGROUP   = ACM.GP_PAYGROUP
AND WA.CAL_ID        = ACM.CAL_ID
AND WA.CAL_RUN_ID    = ACM.CAL_RUN_ID
AND ACM.PIN_NUM      = #cs_base_contr_sind
AND WA.GPBR_CALC_TYPE= '01'  
AND WA.EFFDT         = (SELECT MAX(EFFDT)
                        FROM PS_GPBR_PYE_UN_WA
                        WHERE EMPLID      = WA.EMPLID
                        AND   EMPL_RCD    = WA.EMPL_RCD
                        AND   CAL_RUN_ID  = WA.CAL_RUN_ID
                        AND   GP_PAYGROUP = WA.GP_PAYGROUP
                        AND   CAL_ID      = WA.CAL_ID)
AND SEG.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)  
                        FROM PS_GP_PYE_SEG_STAT 
                        WHERE EMPLID          = SEG.EMPLID
                        AND   EMPL_RCD        = SEG.EMPL_RCD
                        AND   GP_PAYGROUP     = SEG.GP_PAYGROUP
                        AND   CAL_ID          = SEG.CAL_ID
                        AND   CAL_RUN_ID      = SEG.CAL_RUN_ID
                        AND   ORIG_CAL_RUN_ID = SEG.ORIG_CAL_RUN_ID)
AND ACM.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)  
                        FROM PS_GP_RSLT_ACUM 
                        WHERE EMPLID          = ACM.EMPLID
                        AND   EMPL_RCD        = ACM.EMPL_RCD
                        AND   GP_PAYGROUP     = ACM.GP_PAYGROUP
                        AND   CAL_ID          = ACM.CAL_ID
                        AND   CAL_RUN_ID      = ACM.CAL_RUN_ID
                        AND   ORIG_CAL_RUN_ID = ACM.ORIG_CAL_RUN_ID)
AND SEG.RSLT_VER_NUM = (SELECT MAX(RSLT_VER_NUM) 
                        FROM PS_GP_PYE_SEG_STAT 
                        WHERE EMPLID          = SEG.EMPLID
                        AND   EMPL_RCD        = SEG.EMPL_RCD
                        AND   RSLT_SEG_NUM    = SEG.RSLT_SEG_NUM
                        AND   GP_PAYGROUP     = SEG.GP_PAYGROUP
                        AND   CAL_ID          = SEG.CAL_ID)
AND SEG.RSLT_REV_NUM = (SELECT MIN(RSLT_REV_NUM) 
                        FROM PS_GP_PYE_SEG_STAT 
                        WHERE EMPLID          = SEG.EMPLID
                        AND   EMPL_RCD        = SEG.EMPL_RCD
                        AND   RSLT_SEG_NUM    = SEG.RSLT_SEG_NUM
                        AND   RSLT_VER_NUM    = SEG.RSLT_VER_NUM
                        AND   GP_PAYGROUP     = SEG.GP_PAYGROUP
                        AND   CAL_ID          = SEG.CAL_ID) 
AND SEG.SEG_BGN_DT      BETWEEN $BgnDt AND $DocDate
AND ACM.ACM_FROM_DT     BETWEEN $BgnDt AND $DocDate
AND JOB.EFFDT        = (SELECT MAX(B1.EFFDT) 
                        FROM PS_JOB B1 
                        WHERE B1.EMPLID       = JOB.EMPLID
                        AND   B1.EMPL_RCD     = JOB.EMPL_RCD
                        AND   B1.EFFDT       <= $DocDate)
AND JOB.EFFSEQ       = (SELECT MAX(B2.EFFSEQ) 
                        FROM PS_JOB B2 
                        WHERE B2.EMPLID       = JOB.EMPLID
                        AND   B2.EMPL_RCD     = JOB.EMPL_RCD
                        AND   B2.EFFDT        = JOB.EFFDT)
[$where_clause1]
GROUP BY JOB.ESTABID, JOB.UNION_CD
end-SELECT
end-if
end-procedure Select-union-data

!**************************************
begin-procedure Count-employees
#debug show 'Count-employees'
#debug show '$estabId ' $estabId
#debug show '$DocDate ' $DocDate
!**************************************
begin-select
COUNT(*)      &emplCount

  let #emplEstabCount = &emplCount
  
FROM PS_JOB JOB 
WHERE JOB.EFFDT   = (SELECT MAX(B1.EFFDT) 
                     FROM PS_JOB B1 
                     WHERE B1.EMPLID = JOB.EMPLID
                     AND B1.EMPL_RCD = JOB.EMPL_RCD
                     AND B1.EFFDT <= $DocDate)
AND JOB.EFFSEQ    = (SELECT MAX(B2.EFFSEQ) 
                    FROM PS_JOB B2 
                    WHERE B2.EMPLID = JOB.EMPLID
                    AND B2.EMPL_RCD = JOB.EMPL_RCD
                    AND B2.EFFDT = JOB.EFFDT) 
AND JOB.ESTABID   = $estabId
end-SELECT

end-procedure Count-Employees
 
!**************************************
begin-procedure get-estab-desc
#debug show '** get-estab-desc **'
#debug show '$estabId: ' $estabId
#debug show '$DocDate: ' $DocDate
!**************************************
 
Begin-Select
E.DESCR
E.ADDRESS1
E.ADDRESS2
E.ADDRESS4
E.STATE
E.POSTAL
E.NUM1
E.CITY
ES.COMP_INS_TYPE_BRA
ES.ESTAB_TYPE_CD_BRA

  let $estabDescr       = Ltrim(Rtrim(&E.DESCR, ' '), ' ')
  let $estabNumber      = Ltrim(Rtrim(&E.NUM1, ' '), ' ')
  let $estabAddress1    = Ltrim(Rtrim(&E.ADDRESS1, ' '), ' ') 
  let $estabPostal      = Ltrim(Rtrim(&E.POSTAL, ' '), ' ')
  let $estabState       = Ltrim(Rtrim(&E.STATE, ' '), ' ')
  let $estabAddress2    = &E.ADDRESS2
  let $estabCity        = &E.CITY
  let $insType          = rtrim(&ES.COMP_INS_TYPE_BRA, ' ')
  let $estabNeighborhood = &E.ADDRESS4
  
  do Get-Estab-CNPJ
  do Get-Estab-CNAE
   
FROM PS_ESTAB_TBL E
    ,PS_ESTAB_TBL_BRA  ES
WHERE E.ESTABID = $estabId
AND   E.ESTABID = ES.ESTABID
AND   E.EFFDT  = ES.EFFDT
AND   E.EFFDT = (SELECT MAX(EFFDT)
                 FROM PS_ESTAB_TBL 
                 WHERE ESTABID = E.ESTABID               
                 AND   EFFDT <= $DocDate)
End-Select

BEGIN-Select                 
EST.ESTAB_ID_BRA

  let $estabTypeCd = Ltrim(Rtrim(&EST.ESTAB_ID_BRA, ' '), ' ')

FROM PS_ESTAB_ID_BRA EST
WHERE EST.ESTABID = $estabId
AND EST.ESTAB_ID_TYPE_BRA = 'CNAE'
AND EST.COUNTRY = 'BRA'
AND EST.EFFDT = (SELECT MAX(EST2.EFFDT)
                 FROM PS_ESTAB_ID_BRA EST2
                 WHERE EST2.ESTABID     = EST.ESTABID 
                 AND EST2.ESTAB_ID_TYPE_BRA = EST.ESTAB_ID_TYPE_BRA
                 AND EST2.COUNTRY       = EST.COUNTRY
                 AND EST2.COUNTY_CD_BRA = EST.COUNTY_CD_BRA
                 AND EST2.EFFDT        <= $DocDate)          
End-Select                 

#debug show '$estabTypeCd : ' $estabTypeCd

BEGIN-Select
EE.DESCR     

  let $estabDescr   = Ltrim(Rtrim(&EE.DESCR, ' '), ' ')

FROM PS_ESTAB_TBL_LANG EE
WHERE EE.ESTABID = $Estabid
AND   EE.LANGUAGE_CD = $curr_language_cd
AND   EE.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_ESTAB_TBL_LANG
                  WHERE ESTABID = EE.ESTABID
                  AND   LANGUAGE_CD = EE.LANGUAGE_CD
                  AND   EFFDT <= $DocDate)
End-Select


end-procedure get-estab-desc

!**************************************
begin-procedure get-union-desc
BEGIN-SELECT
A.DESCR
A.ADDRESS1
A.ADDRESS2
A.ADDRESS4
A.CITY
A.NUM1
A.STATE
A.POSTAL
B.UNION_TYPE_BRA
B.UNION_CNPJ_BRA
B.UNION_CODE_BRA
B.UNION_TYPE_ID_BRA

 let $unionDescr    = &A.DESCR
 let $unionAddress1 = &A.ADDRESS1
 let $unionAddress2 = &A.ADDRESS2
 let $unionNeighborhood = &A.ADDRESS4 
 let $unionCity     = &A.CITY
 let $unionNum      = &A.NUM1
 let $unionState    = &A.STATE
 let $unionPostal   = &A.POSTAL
 let $unionCNPJ     = &B.UNION_CNPJ_BRA 
 let $unionCdBRA    = &B.UNION_CODE_BRA
 let $unionTypeID   = &B.UNION_TYPE_ID_BRA

FROM PS_UNION_TBL A
    ,PS_UNION_TBL_BRA B
WHERE A.UNION_CD = $union
AND A.EFF_STATUS = 'A'
AND A.UNION_CD   = B.UNION_CD
AND A.EFFDT      = B.EFFDT
AND A.EFFDT      = (SELECT MAX(AA.EFFDT) 
                    FROM PS_UNION_TBL AA 
                    WHERE AA.UNION_CD = A.UNION_CD 
                    AND AA.EFF_STATUS = A.EFF_STATUS
                    AND AA.EFFDT     <= $DocDate)
end-select

BEGIN-Select
B1.DESCR     

  let $unionDescr   = Ltrim(Rtrim(&B1.DESCR, ' '), ' ')

FROM PS_UNION_TBL_LANG B1
WHERE B1.UNION_CD = $union
AND   B1.LANGUAGE_CD = $curr_language_cd
AND   B1.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_UNION_TBL_LANG
                  WHERE UNION_CD = B1.UNION_CD
                  AND   LANGUAGE_CD = B1.LANGUAGE_CD
                  AND   EFFDT <= $DocDate)
End-Select


end-procedure get-union-desc
  
!**************************************
begin-procedure Declare-Rows
!**************************************
  let #R1b  = #R1 - 1
  let #R2  = #R1 + 1
  let #R3  = #R2 + 2
  let #R3b = #R3 + 1
  let #R4  = #R3 + 2 
  let #R4b = #R4 + 1 
  let #R5  = #R4 + 2
  let #R6  = #R5 + 1
  let #R7  = #R6 + 2
  let #R8  = #R7 + 1
  let #R9  = #R8 + 2
  let #R10 = #R9 + 1
  let #R11 = #R10 + 2
  let #R12 = #R11 + 1
  let #R13 = #R12 + 2
  let #R14 = #R13 + 1
  let #R15 = #R14 + 2
  let #R16 = #R15 + 1
  let #R17 = #R16 + 2
  let #R18 = #R17 + 1
  let #R19 = #R18 + 2
  let #R20 = #R19 + 1
  let #R21 = #R20 + 2
  let #R22 = #R21 + 1
  let #R23 = #R22 + 2
  let #R24 = #R23 + 1 
  let #R26b = #R24 + 4
  let #R27  = #R24 + 1
  
end-procedure Declare-Rows

!**************************************
begin-procedure Validate-barcode-fields
!**************************************
  ! Validate content and format of required fields to generate barcode.
  let $print_barcode_flg = 'Y'
  let #len_unionCdBRA = length($unionCdBRA)
  if #len_unionCdBRA <> 12
     let $print_barcode_flg = 'N'
     display 'Código do Sindicato deve conter doze algarismos numéricos no cadastro de Sindicatos.'
  end-if

  let #i = 0
  while #i <= #len_unionCdBRA
    let $aux_string = substr($unionCdBRA, #i, 1)
    find $aux_string in '0123456789' 0 #loc
if #loc = -1
       let $print_barcode_flg = 'N'
       display 'Código do Sindicato não é valido no cadastro de Sindicatos. Use 999999999999.'
      break
end-if
    add 1 to #i  
  end-while
  
  find $unionTypeID in '1234' 0 #loc
  if #loc = -1
     let $print_barcode_flg = 'N'
     display 'Identificação do Tipo da Entidade Sindical está em branco no cadastro de Sindicatos. Escolha um valor válido.'
  end-if  
  
  if $insType = '10'     !CNPJ
     if isblank($CNPJ) = 1 
        let $print_barcode_flg = 'N' 
    display 'ID do CNPJ não está definido no cadastro de Estabelecimento BRA.'
 end-if
  else
     if isblank($CEI) = 1
        let $print_barcode_flg = 'N' 
    display 'ID do CEI não está definido no cadastro de Estabelecimento BRA.'
 end-if
  end-if
  
  if isblank($CNAE) = 1
     let $print_barcode_flg = 'N'  
 display 'ID do CNAE não está definido no cadastro de Estabelecimento BRA.'
  end-if
end-procedure Validate-barcode-fields

!**************************************
begin-procedure Map-barcode-fields
!**************************************
  !field 1
  let $nm_cd_bank          = '104'                    !bank code
  let $nm_cd_curr_cd       = '9'                      !currency code
  let $nm_cd_sicob         = '97'                     !used by SICOB/SINCO
  let $nm_cd_union_cd1     = substr($unionCdBRA,7,3)  !union entity code
  let $mod10_str           = $nm_cd_bank || $nm_cd_curr_cd || $nm_cd_sicob || $nm_cd_union_cd1
  do calc-mod10
  let $nm_cd_chk_dig1      = to_char(#chk_digit)      !check digit field 1 mod 10

  !field 2
  let $nm_cd_union_cd2     = substr($unionCdBRA,10,2) !union entity code
  let $nm_cd_cnae1         = substr($CNAE,1,1)        !CNAE 1st position
  let $nm_cd_entity_typ    = $unionTypeID             !Union Type BRA
  let $nm_cd_identifier    = '77'                     !SITCS ID
  if $insType = '10'                                  !CNPJ         
     let $nm_cd_payer_id1  = substr($CNPJ,1,4)        !CNPJ payer ID
  else
     let $nm_cd_payer_id1  = substr($CEI,1,4)         !CEI payer ID
  end-if
  let $mod10_str           = $nm_cd_union_cd2 || $nm_cd_cnae1 || $nm_cd_entity_typ || $nm_cd_identifier || $nm_cd_payer_id1
  do calc-mod10
  let $nm_cd_chk_dig2      = to_char(#chk_digit)      !check digit field 2 mod 10

  !field 3
  if $insType = '10'                                  !CNPJ
     let $nm_cd_payer_id2  = substr($CNPJ,5,8)        !CNPJ payer ID
  else
     let $nm_cd_payer_id2  = substr($CEI,5,8)         !CEI payer ID
  end-if
  let $nm_cd_cnae2         = substr($CNAE,2,2)        !CNAE 2nd & 3rd positions
  let $mod10_str           = $nm_cd_payer_id2 || $nm_cd_cnae2
  do calc-mod10
  let $nm_cd_check_dig3    = to_char(#chk_digit)      !check digit field 3 mod 10

  !field 4
  let $aux_date1 = strtodate('07-10-1997', 'DD-MM-YYYY')
  let $aux_date2 = strtodate($DocDate, 'DD-MON-YYYY')
  let #nbrOfDays = datediff($aux_date2, $aux_date1, 'day')
  let $nm_cd_due_factor    = to_char(#nbrOfDays)      !due date factor 
  let #amt_chrge = round(#totalAmt, 2) 
  let $nm_cd_amount        = to_char(#amt_chrge)      !amount
  let $nm_cd_amt_str = replace($nm_cd_amount, '.', '')
  let #length_zero_fill  = 10 - Length($nm_cd_amt_str)
  let #counter_1 = 1
  while #counter_1 <= #length_zero_fill
    let $nm_cd_amt_str = '0' || $nm_cd_amt_str
    add 1 to #counter_1
  end-while
  
  !module 11 string
  let $mod11_str = $nm_cd_bank
  let $mod11_str = $mod11_str || $nm_cd_curr_cd
  let $mod11_str = $mod11_str || $nm_cd_due_factor
  let $mod11_str = $mod11_str || $nm_cd_amt_str
  let $mod11_str = $mod11_str || $nm_cd_sicob
  let $mod11_str = $mod11_str || $nm_cd_union_cd1
  let $mod11_str = $mod11_str || $nm_cd_union_cd2
  let $mod11_str = $mod11_str || $nm_cd_cnae1
  let $mod11_str = $mod11_str || $nm_cd_entity_typ
  let $mod11_str = $mod11_str || $nm_cd_identifier
  let $mod11_str = $mod11_str || $nm_cd_payer_id1
  let $mod11_str = $mod11_str || $nm_cd_payer_id2
  let $mod11_str = $mod11_str || $nm_cd_cnae2
  do calc-mod11
  let $chk_dig_abs = to_char(#chk_digit11)

  !barcode formatting
  let $barcode_format = $nm_cd_bank
  let $barcode_format = $barcode_format || $nm_cd_curr_cd
  let $barcode_format = $barcode_format || $chk_dig_abs  
  let $barcode_format = $barcode_format || $nm_cd_due_factor
  let $barcode_format = $barcode_format || $nm_cd_amt_str
  let $barcode_format = $barcode_format || $nm_cd_sicob
  let $barcode_format = $barcode_format || $nm_cd_union_cd1
  let $barcode_format = $barcode_format || $nm_cd_union_cd2
  let $barcode_format = $barcode_format || $nm_cd_cnae1
  let $barcode_format = $barcode_format || $nm_cd_entity_typ
  let $barcode_format = $barcode_format || $nm_cd_identifier
  let $barcode_format = $barcode_format || $nm_cd_payer_id1
  let $barcode_format = $barcode_format || $nm_cd_payer_id2
  let $barcode_format = $barcode_format || $nm_cd_cnae2

  !numeric code formatting
  let $numcode_format = $nm_cd_bank
  let $numcode_format = $numcode_format || $nm_cd_curr_cd
  let $numcode_format = $numcode_format || substr($nm_cd_sicob, 1, 1)
  let $numcode_format = $numcode_format || '.'
  let $numcode_format = $numcode_format || substr($nm_cd_sicob, 2, 1)
  let $numcode_format = $numcode_format || $nm_cd_union_cd1
  let $numcode_format = $numcode_format || $nm_cd_chk_dig1
  let $numcode_format = $numcode_format || ' '
  let $numcode_format = $numcode_format || $nm_cd_union_cd2
  let $numcode_format = $numcode_format || $nm_cd_cnae1
  let $numcode_format = $numcode_format || $nm_cd_entity_typ
  let $numcode_format = $numcode_format || substr($nm_cd_identifier, 1, 1)
  let $numcode_format = $numcode_format || '.'
  let $numcode_format = $numcode_format || substr($nm_cd_identifier, 2, 1)
  let $numcode_format = $numcode_format || $nm_cd_payer_id1
  let $numcode_format = $numcode_format || $nm_cd_chk_dig2
  let $numcode_format = $numcode_format || ' '
  let $numcode_format = $numcode_format || substr($nm_cd_payer_id2, 1, 5)
  let $numcode_format = $numcode_format || '.'
  let $numcode_format = $numcode_format || substr($nm_cd_payer_id2, 6, 3)
  let $numcode_format = $numcode_format || $nm_cd_cnae2
  let $numcode_format = $numcode_format || $nm_cd_check_dig3
  let $numcode_format = $numcode_format || ' '  
  let $numcode_format = $numcode_format || $chk_dig_abs
  let $numcode_format = $numcode_format || ' '    
  let $numcode_format = $numcode_format || $nm_cd_due_factor
  let $numcode_format = $numcode_format || $nm_cd_amt_str
end-procedure Map-barcode-fields

!**************************************
begin-procedure calc-mod10
!**************************************
let #FieldLength = Length($mod10_str) 
let #counter = 1
let #factor = 2
let #total_sum = 0
while #counter <= #FieldLength
  let $algarism = substr($mod10_str,#FieldLength + 1 - #counter,1)
  let #value    = to_number($algarism)
  let #result   = #value * #factor
  if #result > 9
     let $result      = to_char(#result)
 let $decimal     = substr($result,1,1)
 let #decimal     = to_number($decimal)
 let $unit        = substr($result,2,1)
 let #unit        = to_number($unit)
 let #part_sum    = #decimal + #unit
  else
   let #part_sum    = #result
  end-if

  let #total_sum = #total_sum + #part_sum
  
  if #factor = 2
     let #factor = 1
  else
     let #factor = 2
  end-if
  add 1 to #counter
end-while

let #remainder = mod(#total_sum, 10)
if #remainder = 0
   let #chk_digit = 0
else
   let #chk_digit = 10 - #remainder
end-if
end-procedure calc-mod10

!**************************************
begin-procedure calc-mod11
!**************************************
let #FieldLength11 = Length($mod11_str)
let #counter11 = 1
let #factor11 = 2
let #total_sum11 = 0
while #counter11 <= #FieldLength11
  let $algarism11 = substr($mod11_str, #FieldLength11 + 1 - #counter11, 1)
  let #value11    = to_number($algarism11)
  let #result11   = #value11 * #factor11
  let #part_sum11 = #result11
  let #total_sum11 = #total_sum11 + #part_sum11
  
  add 1 to #factor11

  if #factor11 > 9
     let #factor11 = 2
  end-if
  add 1 to #counter11
end-while

let #remainder11 = mod(#total_sum11, 11)
evaluate #remainder11
when = 0
when = 1
when = 10
   let #chk_digit11 = 1
break
when-other
   let #chk_digit11 = 11 - #remainder11
end-evaluate
end-procedure calc-mod11

!**************************************
begin-procedure Print-format
#debug show 'Print-format'

if $firstprint = 'Y'
   let $firstprint = 'N'
else
   new-page
end-if

  !************************************ CAIXA
  !**************** Format  
  let #R1  = 3
  do declare-Rows
       
  print-image (1,2)
     type         = GIF-FILE
     image-size   = (20,4)
     source       = $FileDir
    
  graphic (#R2 ,105,2)                 vert-line {G0}
  graphic (#R2 ,120,2)                 vert-line {G0}
  graphic (#R2 ,130,2)                 vert-line {G0}
  graphic (#R3 ,105,25)                horz-line {G0}
  
  !**************** Labels
   
  Alter-Printer Point-size = #SizeGrd1  Font-Type = Proportional Font = 4
  print $lTitle01                      (#R1b,25) bold
  !print $lTitle02                      (#R2,1) center bold
    
  Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd
  print 'Vencimento'                   (#R2,106)  
  print $lSec102                       (#R2,121) 
  
  !**************** Data
       
  Alter-Printer Point-size = 9  Font-Type = Proportional Font = #FontStd
  print $dueDateOut                    (#R3,106)  
  print $year                          (#R3,121) 
  
  !************************************ Dados da Entidade Sindical
  !**************** Format
  
  graphic (#R4 ,1,2)                   vert-line {G0}
  graphic (#R4 ,90,2)                  vert-line {G0}
  graphic (#R4 ,130,2)                 vert-line {G0} 
  graphic (#R5 ,1, 129)                horz-line {G0} 
    
  graphic (#R6 ,1,2)                   vert-line {G0}
  graphic (#R6 ,55,2)                  vert-line {G0}
  graphic (#R6 ,65,2)                  vert-line {G0} 
  graphic (#R6 ,90,2)                  vert-line {G0} 
  graphic (#R6 ,130,2)                 vert-line {G0} 
  graphic (#R7 ,1, 129)                horz-line {G0}
    
  graphic (#R8 ,1,2)                   vert-line {G0}
  graphic (#R8 ,50,2)                  vert-line {G0}
  graphic (#R8 ,65,2)                  vert-line {G0} 
  graphic (#R8 ,115,2)                 vert-line {G0} 
  graphic (#R8 ,130,2)                 vert-line {G0} 
  graphic (#R9 ,1, 129)                horz-line {G0} 
  
  !**************** Labels
  
  Alter-Printer Point-size = 8  Font-Type = Proportional Font = #FontStd
  print 'Dados da Entidade Sindical'   (#R3b,1) bold
   
  Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd
  print 'Nome da Entidade'             (#R4,2)  
  print $lSec202                       (#R4,91) 
   
  print $lAddress01                    (#R6,2)  
  print $lNumber                       (#R6,56)
  print $lAddress02                    (#R6,66)  
  print $lCNPJ                         (#R6,91) 
   
  print $lNeighborhood                 (#R8,2)  
  print $lPostal                       (#R8,51)
  print $lCity                         (#R8,66)  
  print $lState                        (#R8,116) 
  
  !**************** Data

  Alter-Printer Point-size = 9  Font-Type = Proportional Font = #FontStd
  print $unionDescr                    (#R5,2)  
  print $unionCdBRA                    (#R5,91) edit XXX.XXX.XXXXX-X
    
  print $unionAddress1                 (#R7,2)  
  print $unionNum                      (#R7,56)
    
  print $unionAddress2                 (#R7 ,66, 25)  
  print $unionCNPJ                     (#R7,91) edit XX.XXX.XXX/XXXX-XX
    
  print $unionNeighborhood             (#R9,2)  
  print $unionPostal                   (#R9,51)
  print $unionCity                     (#R9,66)  
  print $unionState                    (#R9,116) 
    
  !************************************  Dados do contribuinte
  !**************** Format
  
  let #R1  = #R1 + 10 
  do Declare-Rows
  
  graphic (#R4 ,1,2)                   vert-line {G0}
  graphic (#R4 ,100,2)                 vert-line {G0}
  graphic (#R4 ,130,2)                 vert-line {G0} 
  graphic (#R5 ,1, 129)                horz-line {G0} 
     
  graphic (#R6 ,1,2)                   vert-line {G0}
  graphic (#R6 ,55,2)                  vert-line {G0}
  graphic (#R6 ,65,2)                  vert-line {G0}  
  graphic (#R6 ,130,2)                 vert-line {G0} 
  graphic (#R7 ,1, 129)                horz-line {G0}
    
  graphic (#R8 ,1,2)                   vert-line {G0}
  graphic (#R8 ,25,2)                  vert-line {G0}
  graphic (#R8 ,65,2)                  vert-line {G0} 
  graphic (#R8 ,100,2)                 vert-line {G0} 
  graphic (#R8 ,115,2)                 vert-line {G0} 
  graphic (#R8 ,130,2)                 vert-line {G0} 
  graphic (#R9 ,1, 129)                horz-line {G0}  
  
  !**************** Labels  
    
  Alter-Printer Point-size = 8  Font-Type = Proportional Font = #FontStd
  print $LSecc02                       (#R3b,1) bold
      
  Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd
  print $lSec501                       (#R4,2)  
  print $lSec502                       (#R4,101) 
     
  print $lAddress01                    (#R6,2)  
  print $lNumber                       (#R6,56)
  print $lAddress02                    (#R6,66)   
      
  print $lPostal                       (#R8,2)  
  print $lNeighborhood                 (#R8,26)
  print $lCity                         (#R8,66)  
  print $lState                        (#R8,101) 
  print 'Código Atividade'             (#R8,116) 
  
  !**************** Data
  
  Alter-Printer Point-size = 9  Font-Type = Proportional Font = #FontStd    
  print $estabDescr                    (#R5,2) 
    
  if $insType = '10'     !CNPJ
     print $CNPJ                       (#R5,101) edit XX.XXX.XXX/XXXX-XX
  else
     print $CEI                        (#R5,101) 
  end-if
  
  print $estabAddress1                 (#R7,2)  
  print $estabNumber                   (#R7,56)
  print $estabAddress2                 (#R7,66)   
      
  print $estabPostal                   (#R9,2)  
  print $estabNeighborhood             (#R9,26)
  print $estabCity                     (#R9,66)  
  print $estabState                    (#R9,101) 
  print $estabTypeCd                   (#R9,116)     
  
  !************************************ Dados de Referência da Contribuição
  !**************** Format
  let #R1  = #R1 + 10
  do Declare-Rows
  
  graphic (#R4 ,90,2)                  vert-line {G0}  
  graphic (#R4 ,130,2)                 vert-line {G0} 
  graphic (#R5 ,90, 40)                horz-line {G0} 
  
  graphic (#R4b ,1,3)                  box 1 {G0}
  graphic (#R4b ,22,3)                 box 1 {G0} 
  graphic (#R4b ,44,3)                 box 1 {G0}
  graphic (#R4b ,66,3)                 box 1 {G0} 
  
  graphic (#R6 ,1,2)                   vert-line {G0}  
  graphic (#R6 ,45,2)                  vert-line {G0} 
  graphic (#R6 ,90,2)                  vert-line {G0}  
  graphic (#R6 ,130,2)                 vert-line {G0} 
  graphic (#R7 ,1, 129)                horz-line {G0} 
  
  graphic (#R8 ,1,2)                   vert-line {G0}  
  graphic (#R8 ,45,2)                  vert-line {G0} 
  graphic (#R8 ,90,2)                  vert-line {G0}  
  graphic (#R8 ,130,2)                 vert-line {G0} 
  graphic (#R9 ,1, 129)                horz-line {G0} 
  
  graphic (#R10 ,1,8)                  vert-line {G0}  
  graphic (#R10 ,45,2)                 vert-line {G0} 
  graphic (#R10 ,90,2)                 vert-line {G0}  
  graphic (#R10 ,130,2)                vert-line {G0} 
  graphic (#R11 ,45, 85)               horz-line {G0} 
  
  graphic (#R12 ,90,5)                 vert-line {G0}  
  graphic (#R12 ,130,5)                vert-line {G0} 
  graphic (#R13 ,90,40)                horz-line {G0}  
  graphic (#R15 ,1,129)                horz-line {G0}
  
  !**************** Labels
      
  Alter-Printer Point-size = 8  Font-Type = Proportional Font = #FontStd
  print 'Dados de Referência da Contribuição'  (#R3b,1) bold
  print $LSecc04                       (#R3b,90) bold
    
  Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd
  print 'Categoria'                    (#R4,2)  
  print '(=) Valor do Documento'       (#R4,91)  
    
  print 'Patronal/Empregador'          (#R4b,5) 
  print 'Empregados'                   (#R4b,26) 
  print 'Prof. Liberal'                (#R4b,48)  
  print 'Autônomos'                    (#R4b,70)
   
  print 'Capital Social - Empresa'     (#R6,2) 
  print 'N° Empregados Contribuintes'  (#R6,46) 
  print '(-) Desconto/Abatimento'      (#R6,91) 
   
  print 'Capital Social - Estabelecimento'   (#R8,2) 
  print 'Total Remuneração - Contribuintes'  (#R8,46) 
  print '(-) Outras Deduções'          (#R8,91)
    
  print 'Total Empregados - Estabelecimento'  (#R10,46) 
  print '(+) Mora/Multa'              (#R10,91)
   
  print '(+) Outros Acréscimos'       (#R12,91)
  
  print '(=) Valor Cobrado'           (#R14,91)
  
  !**************** Data
  
  evaluate $GRCStype
    when = '0010'
        print 'X'                     (#R4b,2)   
    when = '0020'
        print 'X'                     (#R4b,23) 
    when = '0030'
        print 'X'                     (#R4b,46) 
    when = '0040'
        print 'X'                     (#R4b,67) 
  end-evaluate
  
  Alter-Printer Point-size = 9  Font-Type = Proportional Font = #FontStd
  print #Amount                       (#R5 ,110)  edit  999,999,999,999.99c bold  
  print #discountAmt                  (#R7 ,110)  edit  999,999,999,999.99c bold
  print #TotalEarnings                (#R9 ,55 )  edit  999,999,999,999.99c bold
  print #deductionAmt                 (#R9 ,110)  edit  999,999,999,999.99c bold 
  print #fineAmt                      (#R11,110)  edit  999,999,999,999.99c bold
  print #otherAmt                     (#R13,110)  edit  999,999,999,999.99c bold
  print #totalAmt                     (#R15,110)  edit  999,999,999,999.99c bold  
  print #CapitalCompany               (#R7 ,20 )  edit  999,999,999,999.99c bold   
  print #employeesCount               (#R7 ,55 )  edit  '999999' 
  print #CapitalEstab                 (#R9 ,20 )  edit  999,999,999,999.99c bold 
  print #emplEstabCount               (#R11,55 )  edit  '999999'
  
  !************************************ 104
  !**************** Format
  
  let #R1  = #R1 + 17
  do Declare-Rows

  graphic (#R4 ,8,2)                   vert-line {G0}
  graphic (#R5 ,1, 129)                horz-line  {G0}
  
  graphic (#R6 ,1,2)                   vert-line {G0}
  graphic (#R6 ,30,2)                  vert-line {G0}
  graphic (#R6 ,60,2)                  vert-line {G0} 
  graphic (#R6 ,90,2)                  vert-line {G0} 
  graphic (#R6 ,120,2)                 vert-line {G0}
  graphic (#R6 ,130,2)                 vert-line {G0}
  graphic (#R7 ,1, 129)                horz-line  {G0}
  
  graphic (#R7 ,80,2)                  vert-line {G0}
  
  !**************** Labels
  
  Alter-Printer Point-size = 12  Font-Type = Proportional Font = #FontStd
  print '104-0'                        (#R5,1) bold
  
  if $print_barcode_flg = 'Y'
     let $numericId = $numcode_format
     print $numericId                  (#R5,9) bold
  else
     Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd
     print '1049'                      (#R5,9)
  end-if
  
  Alter-Printer Point-size = 7  Font-Type = Proportional Font = 32
  
  if $print_barcode_flg = 'N'
     print '(Representação Númerica da Guia)'  (#R5)  
  end-if
              
  Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd
  print 'Código do Cedente'            (#R6,2)  
  print 'Nosso Número'                 (#R6,31)
  print 'Valor do Documento'           (#R6,61) 
  print 'Data Vencimento'              (#R6,91) 
  print 'Exercício'                    (#R6,121) 
     
  print '1ª Via - Contribuinte'        (#R8,2)
  print 'Autenticação mecânica'        (#R8,81)
  
  !**************** Data
  
  Alter-Printer Point-size = 9  Font-Type = Proportional Font = #FontStd
  print $unionCdBRA                    (#R7,3  ) edit XXX.XXX.XXXXX-X
  print $unionCNPJ                     (#R7,32 ) edit XX.XXX.XXX/XXXX-XX
  print $dueDateOut                    (#R7,106)  
  print $year                          (#R7,121)   
  
  !************************************
  
  !**************** Format
  print '- '                           (#R9,1,190) fill
  
  let #R1  = #R1 + 9
  do Declare-Rows
  
  print-image (#R4,2)
       type         = GIF-FILE
       image-size   = (17,3)
       source       = $FileDir
  
  graphic (#R4 ,20,2)                  vert-line {G0}
  graphic (#R4 ,28,2)                  vert-line {G0}
  graphic (#R5 ,1, 129)                horz-line {G0}
    
  graphic (#R6 ,1,2)                   vert-line {G0}
  graphic (#R6 ,98,2)                  vert-line {G0}
  graphic (#R6 ,100,2)                 vert-line {G0}
  graphic (#R6 ,130,2)                 vert-line {G0} 
  graphic (#R7 ,1, 97)                 horz-line {G0}
  graphic (#R7 ,100, 30)               horz-line {G0}
  
  graphic (#R8 ,1,2)                   vert-line {G0}
  graphic (#R8 ,98,2)                  vert-line {G0}
  graphic (#R8 ,100,2)                 vert-line {G0}
  graphic (#R8 ,130,2)                 vert-line {G0} 
  graphic (#R9 ,1, 97)                 horz-line {G0}
  graphic (#R9 ,100, 30)               horz-line {G0}
  
  graphic (#R10 ,1,2)                  vert-line {G0}
  graphic (#R10 ,20,2)                 vert-line {G0}
  graphic (#R10 ,45,2)                 vert-line {G0}
  graphic (#R10 ,55,2)                 vert-line {G0}
  graphic (#R10 ,70,2)                 vert-line {G0} 
  graphic (#R10 ,98,2)                 vert-line {G0}
  graphic (#R10 ,100,2)                vert-line {G0}
  graphic (#R10 ,130,2)                vert-line {G0}
  graphic (#R11 ,1, 97)                horz-line {G0}
  graphic (#R11 ,100, 30)              horz-line {G0}
  
  graphic (#R12 ,1,2)                  vert-line {G0}
  graphic (#R12 ,20,2)                 vert-line {G0}
  graphic (#R12 ,35,2)                 vert-line {G0}
  graphic (#R12 ,55,2)                 vert-line {G0}
  graphic (#R12 ,75,2)                 vert-line {G0} 
  graphic (#R12 ,98,2)                 vert-line {G0}
  graphic (#R12 ,100,2)                vert-line {G0}
  graphic (#R12 ,130,2)                vert-line {G0}
  graphic (#R13 ,1, 97)                horz-line {G0}
  graphic (#R13 ,100, 30)              horz-line {G0}
  
  graphic (#R14 ,1,14)                 vert-line {G0}
  graphic (#R14 ,98,14)                vert-line {G0}
  
  graphic (#R14 ,100,2)                vert-line {G0}
  graphic (#R14 ,130,2)                vert-line {G0}
  graphic (#R15 ,100, 30)              horz-line {G0}
  
  graphic (#R16 ,100,2)                vert-line {G0}
  graphic (#R16 ,130,2)                vert-line {G0}
  graphic (#R17 ,100, 30)              horz-line  {G0}
  
  graphic (#R18 ,100,2)                vert-line {G0}
  graphic (#R18 ,130,2)                vert-line {G0}
  graphic (#R19 ,100, 30)              horz-line  {G0}
  
  graphic (#R20 ,100,2)                vert-line {G0}
  graphic (#R20 ,130,2)                vert-line {G0}
  graphic (#R21 ,100, 30)              horz-line  {G0}
    
  graphic (#R22 ,100,2)                vert-line {G0}
  graphic (#R22 ,130,2)                vert-line {G0}
  graphic (#R23 ,1, 97)                horz-line  {G0}
  graphic (#R23 ,100, 30)              horz-line  {G0}
  
  graphic (#R24 ,1,4)                  vert-line {G0}  
  graphic (#R24 ,130,4)                vert-line {G0}
  graphic (#R26b ,1, 129)               horz-line  {G0}
  
  !**************** Labels
  
  Alter-Printer Point-size = 12  Font-Type = Proportional Font = #FontStd
  print '104-0'                        (#R5,20) bold
  if $print_barcode_flg = 'N'
     Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd  
     print '1049'                      (#R5,29)  
     Alter-Printer Point-size = 7  Font-Type = Proportional Font = 32
     print '(Representação Númerica da Guia)'  (#R5)  
  else
     Alter-Printer Point-size = 12  Font-Type = Proportional Font = #FontStd
     let $numericId = $numcode_format
     print $numericId                  (#R5,29) bold
  end-if
     
  Alter-Printer Point-size = 7  Font-Type = Proportional Font = #FontStd
  print 'Local de Pagamento'           (#R6,2)  
  print 'Vencimento'                   (#R6,101)
     
  print 'Cedente'                      (#R8,2) 
  print 'Agência/Código Cedente'       (#R8,101) 
    
  print 'Data do Documento'            (#R10,2) 
  print 'Número do Documento'          (#R10,21) 
  print 'Esp. Docum.'                  (#R10,46) 
  print 'Aceite'                       (#R10,56)
  print 'Data Processamento'           (#R10,71)
  print 'Nosso Número'                 (#R10,101)
     
  print 'Uso do Banco'                 (#R12,2)
  print 'Carteira'                     (#R12,21)
  print 'Espécie'                      (#R12,36)
  print 'Quantidade'                   (#R12,56)
  print 'Valor'                        (#R12,76)
  print '(=) Valor do Documento'       (#R12,101)
         
!  print 'EXERC'                        (#R14,2)
       
  print 'Instruções'                   (#R14,2)
  print '(-) Desconto/Abatimento'      (#R14,101)
       
  print '(-) Outras Deduções'          (#R16,101)
       
  print '(+) Mora/Multa'               (#R18,101)
       
  print '(+) Outros Acréscimos'        (#R20,101)
         
  print '(=) Valor Cobrado'            (#R22,101)
         
  print 'Sacado'                       (#R24,2)
         
  print 'Sacador/Avalista:______'      (#R26b,2)
         
  if $print_barcode_flg = 'N'
     print 'Código de Barras'                            (+1,2)
  end-if
  print 'Ficha de Compensação/Autenticação Mecânica'     (+1,95)
  
  !**************** Data
  Alter-Printer Point-size = 9  Font-Type = Proportional Font = #FontStd
  print 'PAGÁVEL NAS CASAS LOTÉRICAS, AGÊNCIAS DA CAIXA E REDE BANCÁRIA' (#R7, 2) Bold
  print $dueDateOut                    (#R7,117)  
  print $unionDescr                    (#R9,2)
  print $unionCdBRA                    (#R9,110) edit /bbXXX.XXX.XXXXX-X
  print $DocumentDate                  (#R11,5 )
  print 'GRCS'                         (#R11,46)
  print $ProcessDate                   (#R11,85)
  if $insType = '10'     !CNPJ
     print $CNPJ                       (#R11,110) edit bbXX.XXX.XXX/XXXX-XX
  else
     print $CEI                        (#R11,110) 
  end-if  
  print $year                          (#R13,3)
  print 'SIND'                         (#R13,21)
  print 'R$'                           (#R13,41)
  print #Amount                        (#R13,110)  edit  999,999,999,999.99c bold  
  print #discountAmt                   (#R15,110)  edit  999,999,999,999.99c bold 
  print #deductionAmt                  (#R17,110)  edit  999,999,999,999.99c bold 
  print #fineAmt                       (#R19,110)  edit  999,999,999,999.99c bold
  print #otherAmt                      (#R21,110)  edit  999,999,999,999.99c bold
  print #totalAmt                      (#R23,110)  edit  999,999,999,999.99c bold  
  
  Alter-Printer Point-size = 9  Font-Type = Proportional Font = #FontStd
  print $estabDescr                    (#R24,10)
  print $estabAddress1                 (+1,10)  
  print $estabNumber                   (,64)
  print $estabAddress2                 (,74)   
      
  print $estabPostal                   (+1,10)  
  print $estabNeighborhood             (,34)
  print $estabCity                     (,74)  
  print $estabState                    (,109) 

  if $print_barcode_flg = 'Y'
     print-bar-code (+4,1)
     type=7 !Interleaved 2 of 5
     height=0.5
     text=$barcode_format
  end-if
end-procedure Print-format 

!**************************************
begin-procedure Create-Strings-Labels
!**************************************
   
  let $lTitle01    = 'GRCSU - Guia de Recolhimento da Contribuição Sindical Urbana' 
  !let $lTitle02    = 'Urbana - GRCSU'   
  let $LSecc02     = 'Dados do Contribuinte' 
  let $LSecc04     = 'Dados da Contribuição'
  
  let $lSec102     = 'Exercicio'
  let $lSec201     = 'Nome da Entidade'
  let $lSec202     = 'Código da Entidade Sindical'
  let $lSec501     = 'Nome/Razão Social/Denominação Social'
  let $lSec502     = 'CPF/CNPJ/Código do Contribuinte'
  let $lSec801     = 'Categoria'
  
  
  let $lAddress01  = 'Endereço'
  let $lNumber     = 'Número'
  let $lAddress02  = 'Complemento'
  let $lCNPJ       = 'CNPJ da Entidade'
  let $lNeighborhood       = 'Bairro/Distrito'
  let $lPostal     = 'CEP'
  let $lCity       = 'Cidade/Município'
  let $lState      = 'UF' 
  
end-procedure Create-Strings-Labels

!**************************************
begin-procedure Get-Estab-CNPJ
#debug show 'Get-Estab-CNPJ'
!**************************************
Let $CNPJ = ''
begin-SELECT  
CNPJ.ESTAB_ID_BRA

  if $insType = '10'     !CNPJ
     let $CNPJ  = &CNPJ.ESTAB_ID_BRA
  else
     let $CEI = &CNPJ.ESTAB_ID_BRA
  end-if
  
FROM PS_ESTAB_ID_BRA CNPJ
WHERE CNPJ.ESTABID = $Estabid
AND CNPJ.ESTAB_ID_TYPE_BRA IN ( 'CNPJ', 'CEI')
AND CNPJ.EFFDT =(SELECT MAX(ES2.EFFDT) 
                FROM PS_ESTAB_ID_BRA ES2 
                WHERE CNPJ.ESTAB_ID_BRA=ES2.ESTAB_ID_BRA
                AND ES2.EFFDT <= $DocDate)
end-select
end-procedure Get-Estab-CNPJ

!**************************************
begin-procedure Get-Estab-CNAE
#debug show 'Get-Estab-CNAE'
!**************************************
Let $CNAE = ''
begin-SELECT  
CNAE.ESTAB_ID_BRA

  let $CNAE  = &CNAE.ESTAB_ID_BRA
  
FROM PS_ESTAB_ID_BRA CNAE
WHERE CNAE.ESTABID = $Estabid
AND CNAE.ESTAB_ID_TYPE_BRA = 'CNAE'
AND CNAE.EFFDT =(SELECT MAX(ES2.EFFDT) 
                FROM PS_ESTAB_ID_BRA ES2 
                WHERE CNAE.ESTABID=ES2.ESTABID
                AND ES2.EFFDT <= $DocDate)
end-select
end-procedure Get-Estab-CNAE



!**************************************
!#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports
#include 'hrsecty.sqc'   !Get SQR Security parameters