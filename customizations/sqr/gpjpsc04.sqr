!***********************************************************************
! GPJPSC04.sqr:  Termination Report for Employee's Pension Insurance   *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:47:50                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'number.sqc'   !Routines to format numbers
#include 'datetime.sqc' !Routines for date and time formatting
#include 'setup32.sqc'  !page layout and printer definition

begin-setup

  declare-variable
    date $Object_dt1
    date $Empl_Birthdate1
    integer #age
  end-declare

end-setup


begin-report


        do Init-Processing

        do Calc-Date

        do Build-select

        do Process-Main

        do Reset

        do Update-Prcs-Run-Status

end-report


!***********************************************************************
!                                                                      *
! Init-Processing                                                      *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Get-Language-Codes      - prcslng.sqc                  *
!               Get-GPJPSC04-runctl                                    *
!               Init-Report                                            *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!                                                                      *
!***********************************************************************
begin-procedure Init-Processing


        do Init-Datetime

        do Get-Current-Datetime

        do Define-Prcs-Vars

        do Get-Run-Control-Parms

        do Get-Language-Codes

        do Get-GPJPSC04-runctl

        do Init-Report


end-procedure ! Init-Processing


!***********************************************************************
!                                                                      *
! Get-GPJPSC04-runctl                                                  *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Description:  Get data from GPJP_RC_SI03 runcontrol record.          *
!                                                                      *
!***********************************************************************
begin-procedure Get-GPJPSC04-runctl


begin-select

RC.GPJP_OBJECT_DATE
RC.GPJP_TAX_ESTAB
RC.BUSINESS_UNIT
RC.DEPTID

FROM  PS_GPJP_RC_SC04 RC
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select

        let $Rc_object_date    = &RC.Gpjp_object_date
        let $Rc_Gpjp_tax_estab = RTRIM(&RC.Gpjp_tax_estab, ' ')
        let $Rc_business_unit  = RTRIM(&RC.Business_unit, ' ')
        let $Rc_deptid         = RTRIM(&RC.Deptid, ' ')


end-procedure !Get-GPJPSC04-runctl


!***********************************************************************
!                                                                      *
! Init-Report                                                          *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Calls:        Init_Report_Translation    - sqrtrans.sqc              *
!               Append_Report_Translation  - sqrtrans.sqc              *
!               Get_Field_Information                                  *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header & throughout report.  Performs   *
!               Strings Table translation.  #Defines variables for     *
!               use throughout report in printing columns.             *
!                                                                      *
!***********************************************************************
begin-procedure Init-Report


!***********************************************************************
!                                                                      *
! Translations procedures & Strings Table retrievals.                  *
!                                                                      *
!***********************************************************************

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Append_Report_Translation ('GPJPSC04')

    do Get_Field_Information ('GPJPSC04','BUNIT_NAME',     $GPJPSC04_BusinessUnitName,  #dummy_width)
    do Get_Field_Information ('GPJPSC04','TITLE',          $GPJPSC04_Title,             #dummy_width)
    do Get_Field_Information ('GPJPSC04','ESTAB',          $GPJPSC04_Estab,             #dummy_width)
    do Get_Field_Information ('GPJPSC04','DEPTID',         $GPJPSC04_DeptId,        #dummy_width)
    do Get_Field_Information ('GPJPSC04','BIRTHDATE',      $GPJPSC04_Birthdate,     #dummy_width)
    do Get_Field_Information ('GPJPSC04','AGE',            $GPJPSC04_Age,           #dummy_width)
    do Get_Field_Information ('GPJPSC04','EMPLID',         $GPJPSC04_EmplId,        #dummy_width)
    do Get_Field_Information ('GPJPSC04','EMPL_NAME',      $GPJPSC04_EmplName,      #dummy_width)
    do Get_Field_Information ('GPJPSC04','SEX',            $GPJPSC04_Gender,        #dummy_width)
    do Get_Field_Information ('GPJPSC04','SUPV_LVL_ID',    $GPJPSC04_Position,      #dummy_width)
    do Get_Field_Information ('GPJPSC04','DEPT_TOT',       $GPJPSC04_DeptTot,       #dummy_width)
    do Get_Field_Information ('GPJPSC04','ESTAB_TOT',      $GPJPSC04_EstabTot,      #dummy_width)
    do Get_Field_Information ('GPJPSC04','VOL_ENROLLMENT', $GPJPSC04_Vol_enrol,     #dummy_width)
    do Get_Field_Information ('GPJPSC04','EMPL_ELIG',      $GPJPSC04_Empl_elig,     #dummy_width)
    do Get_Field_Information ('GPJPSC04','EMPL_VOL_ENROL', $GPJPSC04_Empl_vol_enrol,#dummy_width)



!***********************************************************************
!                                                                      *
! Report variables.                                                    *
!                                                                      *
!***********************************************************************

    let $ReportID              = 'GPJPSC04'          ! Printed in header
    let $ReportTitle           = $GPJPSC04_Title     ! Printed in header
    let $Report_Language       = $curr_language_cd   ! curr_language_cd resolved in prcslng.sqc


    let $_TableAlias = 'C'
    do Security-Param                   ! SQR Security

end-procedure ! Init-Report


!***********************************************************************
!                                                                      *
! Calc-Date                                                            *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Calculate what the birthdate have to be for someone    *
!               who will be 70 or older as of the Object date. (In     *
!               Japan a person would reach the age of 70 on the day    *
!               before his/her 70th birthdate )                        *
!                                                                      *
!***********************************************************************
begin-procedure Calc-Date

    do Convert-To-DTU-Date ($Rc_object_date, $Object_dt_YMD)

    do dtu-parse-date ($Object_dt_YMD, #year, #month, #day )

    let #Birthyear = #year - 70

    do dtu-format-date(#Birthyear, #month, #day, $Birthdate)

    do dtu-add-days($Birthdate, 1, $Birthdate2)
    do Convert-From-DTU-Date($Birthdate2,$Birthdate_70)


end-procedure !Calc-Date


!***********************************************************************
!                                                                      *
! Build-select                                                         *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Build dynamic select statement for main procedure      *
!                                                                      *
!***********************************************************************
begin-procedure Build-select

     move '' to $SlctSC_Estblm

     if $Rc_Gpjp_tax_estab <> ''
        concat 'AND B.GPJP_TAX_ESTAB = ' with  $SlctSC_Estblm
        concat   '''' with $SlctSC_Estblm
        concat  $Rc_Gpjp_tax_estab with  $SlctSC_Estblm
        concat   ''' ' with $SlctSC_Estblm
     end-if

     move '' to $SlctDept

     if $Rc_deptid <> ''
        concat 'AND C.DEPTID = ' with  $SlctDept
        concat   '''' with $SlctDept
        concat  $Rc_deptid with  $SlctDept
        concat '''' with $SlctDept
     end-if

     move '' to $SlctBU

     if $Rc_business_unit <> ''
        concat 'AND C.BUSINESS_UNIT = ''' with $SlctBU
        concat  $Rc_business_unit with  $SlctBU
        concat   ''' ' with $SlctBU
     end-if

end-procedure !Build-select


!***************************
begin-heading 7
!***************************

#include 'stdhdgtr.sqc'

    print $GPJPSC04_Estab             (+2,5,22)
    let $EstabName = RTRIM($Est_save,' ') || ' - ' || $EstabName
    print $EstabName                  (0,28,48)

    
    print $GPJPSC04_BusinessUnitName  (+2,5,14)
    print $GPJPSC04_DeptId            (0,45,10)
    print $GPJPSC04_Birthdate         (0,70,10)
    print $GPJPSC04_Age               (0,82,6)
    print $GPJPSC04_EmplId            (0,87,11)
    print $GPJPSC04_EmplName          (0,100,20)
    print $GPJPSC04_Gender            (0,137,6)
    print $GPJPSC04_Position          (0,150,16)
    print $GPJPSC04_Vol_enrol         (0,174,9)

end-heading


!***********************************************************************
!                                                                      *
! Process-Main                                                         *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Main processing                                        *
!                                                                      *
!***********************************************************************
begin-procedure Process-Main

  let #Dept_tot_elig_loss = 0
  let #Dept_tot_vol_enrl = 0
  let #Est_tot_elig_loss = 0
  let #Est_tot_vol_enrl = 0
  let $Dept_save = ' '
  let $Est_save = ' '
  let $No_records = 'Y'

begin-select DISTINCT
B.EMPLID
B.GPJP_TAX_ESTAB
C.DEPTID
C.BUSINESS_UNIT
C.SETID_SUPV_LVL
C.SUPV_LVL_ID
C.SETID_DEPT
C.EMPL_RCD
C.EFFDT
C.EFFSEQ
D.BIRTHDATE
D.SEX
D.NAME
B.GPJP_ELIG_VOL_ER

     let $Emplid        = &B.Emplid
     let $Estab         = &B.Gpjp_tax_estab
     let $EstabType     = 'SC'
     let $SETID_DEPT    = RTRIM(&C.SETID_SUPV_LVL,' ')
     let $SUPV_LVL_ID   = &C.SUPV_LVL_ID
     let $DeptID        = &C.Deptid
     let $BU            = &C.Business_unit
     let $Sex           = &D.Sex
     let $Name          = &D.Name
     let $Vol_enr_ind   = &B.Gpjp_elig_vol_er
     let $No_records    = 'N'

     let $Empl_Birthdate = &D.Birthdate
     do Convert-To-DTU-Date ($Empl_Birthdate, $Empl_Birthdate_YMD)

     if $Estab <> $Est_save
        if $Est_save <> ' '
           do Print-Dept-Totals
           do Print-Estab-Totals
        end-if
        let $Est_save = $Estab
        let $Dept_save = ' '
     end-if

     do Get-Estab-Name

     do Get-Business-Unit-Name

     do Get-Department-Name

     if $DeptID <> $Dept_save
        if $Dept_save <> ' '
           do Print-Dept-Totals
        end-if
        let $BU_DESCR = RTRIM($BU,' ') || ' - ' || $BU_DESCR
        let $DeptName = RTRIM($DeptID,' ') || ' - ' || $DeptName
        print $BU_DESCR           (+2,5,38)
        print $DeptName           (0,45,43)
        let $Dept_save = $DeptID
        let #Dept_tot_elig_loss = 0
        let #Dept_tot_vol_enrl = 0
     end-if

     do Calculate-Age

     do Get-Gender-Descr

     do Get-Supvlvl-Name


     if &B.Gpjp_elig_vol_er = 'Y'
        add 1 to #Dept_tot_vol_enrl
        add 1 to #Est_tot_vol_enrl
     end-if

     add 1 to #Dept_tot_elig_loss
     add 1 to #Est_tot_elig_loss

     do Print-Detail-line


FROM PS_GPJP_SC_PYE_DTA B,
     PS_JOB C,
     PS_PERSONAL_DT_FST D
WHERE B.EFFDT = (SELECT MAX(B1.EFFDT) FROM PS_GPJP_SC_PYE_DTA B1
               WHERE B1.EMPLID = B.EMPLID
               AND B1.EFFDT <= $AsOfToday)
AND B.EMPLID = C.EMPLID
AND B.EMPL_RCD = C.EMPL_RCD
AND C.HR_STATUS = 'A'
AND C.PAY_SYSTEM_FLG = 'GP'
AND C.EFFDT = (SELECT MAX(C1.EFFDT) FROM PS_JOB C1
               WHERE C1.EMPLID = C.EMPLID
               AND C1.EMPL_RCD = C.EMPL_RCD
               AND C1.EFFDT <= $Rc_object_date)
AND C.EFFSEQ = (SELECT MAX(C2.EFFSEQ) FROM PS_JOB C2
               WHERE C2.EMPLID = C.EMPLID
               AND C2.EMPL_RCD = C.EMPL_RCD
               AND C2.EFFDT = C.EFFDT)
AND B.EMPLID = D.EMPLID
AND D.BIRTHDATE <= $Birthdate_70
[$SlctSC_Estblm]
[$SlctDept]
[$SlctBU]
[$SecurityClausewithERN]
ORDER BY B.GPJP_TAX_ESTAB,C.BUSINESS_UNIT, C.DEPTID, D.BIRTHDATE

end-select

    if $No_records <> 'Y'
        let $End = 'Y'
        do Print-Dept-Totals
        do Print-Estab-Totals
    end-if

end-procedure ! Process-Main


!***********************************************************************
!                                                                      *
! Calculate-Age                                                        *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Calculates a person's age based on their birthdate     *
!                                                                      *
!***********************************************************************
begin-procedure Calculate-Age

       do Convert-To-DTU-Date (&RC.Gpjp_object_date, $Object_dt_YMD)
        do dtu-add-days($Object_dt_YMD,1,$Object_dt_YMD)

 !      let $Object_dt_1 = datetostr(&RC.Gpjp_object_date,'YYYYMMDD')
       let $Empl_Birthdate_1 = datetostr(&D.Birthdate,'YYYYMMDD')

       let $Object_dt1 = strtodate($Object_dt_YMD,{DTUDateFormat})
       let $Empl_Birthdate1 = strtodate($Empl_Birthdate_1)

       let #age = datediff($Object_dt1 ,$Empl_Birthdate1,'year')


end-procedure !Calculate-Age

!***********************************************************************
!                                                                      *
! Get-Gender-Descr                                                     *
!                                                                      *
! Called By: Process-Main                                              *
!                                                                      *
! Description:  Gets gender description from XLATTABLE                 *
!***********************************************************************

begin-procedure Get-Gender-Descr

  let $FieldName = 'SEX'
  let $FieldValue = $Sex
  do Read-Translate-Table
  let $Gender_desc = $XlatLongName

end-procedure !Get-Gender-Descr


!***********************************************************************
!                                                                      *
! Print-Detail-line                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints detail lines                                    *
!                                                                      *
!***********************************************************************
begin-procedure Print-Detail-line

   print $Empl_Birthdate_YMD             (+1,70,10)
    print #age                            (0,82,3) edit 999
    print $Emplid                         (0,87,11)
    let $Name = SUBSTRP($Name,1,35)
    print $Name                           (0,100,50)
    print $Gender_desc                    (0,137,8)
    print $SupvlvlName                    (0,150,30)
    print $Vol_enr_ind                    (0,177,1)

end-procedure  !Print-Detail-line


!***********************************************************************
!                                                                      *
! Print-Estab-Totals                                                   *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Establishment Totals                            *
!                                                                      *
!***********************************************************************
begin-procedure Print-Estab-Totals

      print $GPJPSC04_EstabTot                  (+3,45,30)
      print $GPJPSC04_Empl_elig                 (0,80,35)
      print  #Est_tot_elig_loss                 (0,110,9) edit 9,999,999
      print $GPJPSC04_Empl_vol_enrol            (0,125,35)
      print  #Est_tot_vol_enrl                  (0,162,9) edit 9,999,999
      let #Est_tot_elig_loss = 0
      let #Est_tot_vol_enrl = 0
      do page_break

end-procedure  !Print-Estab-Totals

!***********************************************************************
!                                                                      *
! Print-Dept-Totals                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Department Totals                               *
!                                                                      *
!***********************************************************************
begin-procedure Print-Dept-Totals

      print $GPJPSC04_DeptTot                   (+2,45,30)
      print $GPJPSC04_Empl_elig                 (0,80,35)
      print  #Dept_tot_elig_loss                (0,110,9) edit 9,999,999
      print $GPJPSC04_Empl_vol_enrol            (0,125,35)
      print  #Dept_tot_vol_enrl                 (0,162,9) edit 9,999,999
      let #Dept_tot_elig_loss = 0
      let #Dept_tot_vol_enrl = 0


end-procedure  !Print-Dept-Totals

!***********************************************************************
!                                                                      *
! page_break                                                           *
!                                                                      *
!                                                                      *
! Called By:                                                           *
!                                                                      *
! Description:  Performs Page break and ensures end of report line     *
!               is printed.                                            *
!                                                                      *
!***********************************************************************
begin-procedure page_break

    if $End = 'Y'
      do Reset
    end-if

    new-page
end-procedure  !page_break


!***********************************************************************
!                                                                      *
!                                                                      *
! SQCS included in the report                                          *
!                                                                      *
!***********************************************************************
#include 'getestab.sqc'     ! Get Establishment Data from the GPJP_TAX_ESTAB
#include 'getdptnm.sqc'     ! Get Department Name from the Department Table
#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcsapi.sqc'      ! Replaces stdapi.sqc
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        ! Reset printer procedure
#include 'hrsecty.sqc'      ! Get SQR Security parameters
#include 'getsupjp.sqc'     ! Get Supervisor Level Name
#include 'getbunam.sqc'     ! Get Business Unit Name
