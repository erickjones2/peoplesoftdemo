!***************************************
!  HRS005:  Candidate Listing          *
!***************************************
!************************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:12:48:53                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!Porcedures ending with "Scrty" and Record alias ending with "SC" are
!using SQR Seurity.
!***********************************************************************
#include 'setenv.sqc'   !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup


begin-Report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
   if $prcs_oprid=''
  goto last2
 end-if

  do Report

  do Stdapi-Term
last2:
end-report

begin-Heading 8

do Get_Field_Information ('HR',     'JOB_OPENING_NAME', $JO,           #DW)
do Get_Field_Information ('HRS005', 'REPORT_TITLE',     $REPORTTITLE,  #DW)
#Include 'stdhdgtr.sqc'
do Get_Field_Information ('HR',     'ID_LBL',           $ID,           #DW)
do Get_Field_Information ('HR',     'HOT_JOB_HEADER',   $HJH,          #DW)
do Get_Field_Information ('HR',     'JOBCODE1',         $JOB1,         #DW)
do Get_Field_Information ('HR',     'JOBCODE2',         $JOB2,         #DW)
do Get_Field_Information ('HR',     'POSITION_NBR1',    $POS1,         #DW)
do Get_Field_Information ('HR',     'POSITION_NBR2',    $POS2,         #DW)
do Get_Field_Information ('HR',     'DATE_APPROVED1',   $DATE1,        #DW)
do Get_Field_Information ('HR',     'DATE_APPROVED2',   $DATE2,        #DW)
do Get_Field_Information ('HR',     'NEW_REPL1',        $REPL1,        #DW)
do Get_Field_Information ('HR',     'NEW_REPL2',        $REPL2,        #DW)
do Get_Field_Information ('HR',     'STATUS',           $STATUS,       #DW)
do Get_Field_Information ('HR',     'TITLE',            $TITLE,        #DW)
do Get_Field_Information ('HRS005', 'APPLICATIONS',     $APPLICATIONS, #DW)
do Get_Field_Information ('HRS005', 'REFERRALS',        $REFERRALS,    #DW)
do Get_Field_Information ('HRS005', 'INTERVIEWS',       $INTERVIEWS,   #DW)
do Get_Field_Information ('HRS005', 'NEW',              $NEW,          #DW)
do Get_Field_Information ('HRS005', 'REPLACE',          $REPLACE,      #DW)
do Get_Field_Information ('HRS005', 'DEPT_TOT',         $DEPT_TOT,     #DW)
do Get_Field_Information ('HRS005', 'REPORT_TITLE',     $REPORTTITLE,  #DW)
do Get_Field_Information ('HRS005', 'DEPARTMENT',       $DEPT,         #DW)
do Get_Field_Information ('HRS005', 'TITLE_RECRUIT1',   $RECRUIT1,     #DW)
do Get_Field_Information ('HRS005', 'TITLE_RECRUIT2',   $RECRUIT2,     #DW)
do Get_Field_Information ('HRS005', 'CANDIDATE_NAME1',  $CANDIDATE1,   #DW)
do Get_Field_Information ('HRS005', 'CANDIDATE_NAME2',  $CANDIDATE2,   #DW)
do Get_Field_Information ('HRS005', 'OFFER',            $OFFER,        #DW)
do Get_Field_Information ('HRS005', 'STATUS_STEP1',     $STAT1,        #DW)
do Get_Field_Information ('HRS005', 'STATUS_STEP2',     $STAT2,        #DW)

  String $DEPT ':' by '' into $deptadd
  print $deptadd       (3,1,11)
  let $HdgDeptID=RTRIM($DeptID,' ')
  print $HdgDeptID     (0,13)
  if $DeptID <> $PriorDeptID
    do Get-Department-Name
    print $DeptName    (0,+2)
    move $DeptID to $PriorDeptID
  end-if

PRINT $HJH              (+2,1)
PRINT $JO               (+1,1,11)
PRINT $JOB1             (0,15,7)
PRINT $POS1             (0,23,19)
PRINT $CANDIDATE1       (0,100,40)
PRINT $STAT1            (0,141)
PRINT $ID               (+1,1,6)
PRINT $JOB2             (0,15,7)
PRINT $POS2             (0,23,8)
PRINT $STATUS           (0,32,10)
PRINT $RECRUIT2         (0,48,41)
PRINT $CANDIDATE2       (0,100,40)
PRINT $STAT2            (0,143,20)
PRINT $OFFER            (0,162)

  LET #line = 1         ! resolution 301350
  let #nextline = #line + 1   ! resolution 301350

end-Heading

!********************************************
begin-procedure Init-Report

  move 'HRS005' to $ReportID
  display ' '

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    ! No Prompt
  else
    do Select-Parameters
  end-if

do Init_Printer
do Get-Values
do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
last1:
end-procedure

!********************************************
begin-procedure Get-Values
   do Get-Current-Language
   let $language_cd = $curr_language_cd
end-procedure

!***********************************************************************
!  PROC REPORT
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Report

do Installation-Values

BEGIN-SELECT DISTINCT
A.BUSINESS_UNIT
  LET $BU = RTRIM(&A.BUSINESS_UNIT,' ')
A.DEPTID          () on-break print=never level=1 procedure=Dept-Change
  move &A.DeptID to $DeptID
A.HOT_JOB
  move &A.Hot_Job to $HotJob
A.HRS_JOB_OPENING_ID      () on-break print=never level=2 procedure=Req-Change
  move &A.HRS_JOB_OPENING_ID TO $JobOpening
  if $HotJob = 'Y'
    concat '*' WITH $JobOpening
  end-if
  print $JobOpening (1,1,15)
A.JOBCODE (0,15,7)             
A.POSITION_NBR (0,23,8) 
    if $PositionMgmt <> 'N'
     move &A.Position_Nbr to $Position_Nbr
     do Get-Position-Title
     print $PosName         (0,48,40)
  else
    move &A.JOBCODE TO $JOBCODE
    do Get-Job-Title
    print $JobTitle          (0,48,40)
  end-if
         
A.STATUS_CODE      
  move &A.STATUS_CODE to $JO_StatusCode

STS1.DESCRSHORT    
  move &STS1.DESCRSHORT to $JO_StatusDesc

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
    do GetJOSTSLng
  end-if

  print $JO_StatusDesc         (0,32,10)

A.RECRUITER_ID
  let $EMPLID = &A.RECRUITER_ID
  let $EMPLID = RTRIM($EMPLID, ' ')
  DO Get-Employee-Name
  PRINT $Name                      (2,48)

  do Get-Candidates

FROM PS_HRS_JO_I A
    ,PS_HRS_STS_JO_VW STS1
    ,PS_FAST_SQR_SEC_VW SCRTY

WHERE A.STATUS_CODE = STS1.STATUS_CODE
  AND A.ORIGINATOR_ID = SCRTY.EMPLID
[$SecurityClause]

ORDER BY A.DEPTID, A.HRS_JOB_OPENING_ID
END-SELECT
  move 'Y' to $End
  do Dept-Change
END-PROCEDURE Report


!***********************************************************************
!  PROC Get-Candidates
!***********************************************************************

BEGIN-PROCEDURE Get-Candidates
  move 1 to #line
BEGIN-SELECT

C.HRS_PERSON_ID            
 
AE1.NAME_DISPLAY                     
STS2.DESCRSHORT
D.STATUS_CODE      
  move &D.STATUS_CODE to $APP_StatusCode

  move &STS2.DESCRSHORT to $APP_StatusDesc

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
    do GetAPPSTSLng
  end-if

C.HRS_JOB_OPENING_ID
C.HRS_RCMNT_ID

  

  do Determine-Step
  
  print ' '                  (#line,0)
  print &C.HRS_PERSON_ID     (#line,100,40)
  print $APP_StatusDesc      (#line,143)
  
  let #nextline = #line + 1
  print ' '                  (#nextline,0)
  print &AE1.NAME_DISPLAY    (#nextline,100,40)
  
  print $Step                (#nextline,143)
  add 1 to #Applications
  add #line2 to #line

 FROM PS_HRS_RCMNT_I C,
      PS_HRS_APPLICANT D,
      PS_HRS_APP_NAME_I AE1,
      PS_HRS_STS_APP_VW STS2
WHERE C.HRS_JOB_OPENING_ID      = &A.HRS_JOB_OPENING_ID  !ice 724006003
  AND C.HRS_PERSON_ID           = D.HRS_PERSON_ID
  AND D.STATUS_CODE      = STS2.STATUS_CODE
  AND C.HRS_PERSON_ID           = AE1.HRS_PERSON_ID
ORDER BY C.HRS_PERSON_ID

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC GetJOSTSLng
!***********************************************************************

BEGIN-PROCEDURE GetJOSTSLng

BEGIN-SELECT

C.DESCRSHORT   
  move &C.DESCRSHORT to $JO_StatusDesc

FROM PS_HRS_STS_JO_LVW C
WHERE C.STATUS_CODE = $JO_StatusCode

END-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC GetAPPSTSLng
!***********************************************************************

BEGIN-PROCEDURE GetAPPSTSLng

BEGIN-SELECT

D.DESCRSHORT   
  move &D.DESCRSHORT to $APP_StatusDesc

FROM PS_HRS_STS_APP_LVW D
WHERE D.STATUS_CODE = $APP_StatusCode

END-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC Determine-Step
!***********************************************************************

BEGIN-PROCEDURE Determine-Step

  move '' to $Step

BEGIN-SELECT
R.HRS_PERSON_ID
  move 'Referral' to $Step
  add 1 to #Referrals
  EXIT-SELECT
 FROM PS_HRS_APP_RTE_DTL R
WHERE R.HRS_PERSON_ID    = &C.HRS_PERSON_ID
  AND R.HRS_RCMNT_ID     = &C.HRS_RCMNT_ID
END-SELECT

BEGIN-SELECT
E1.HRS_JOB_OPENING_ID
E.HRS_PERSON_ID
  move 'Interview' to $Step
  add 1 to #Interviews
  EXIT-SELECT
 FROM PS_HRS_RCM_INT E,
  PS_HRS_RCMNT_I E1
WHERE E.HRS_PERSON_ID = E1.HRS_PERSON_ID
  AND E.HRS_RCMNT_ID      = E1.HRS_RCMNT_ID
  AND E.HRS_PERSON_ID    = &C.HRS_PERSON_ID
  AND E.HRS_RCMNT_ID      = &C.HRS_RCMNT_ID
ORDER BY E1.HRS_JOB_OPENING_ID, E.HRS_PERSON_ID
END-SELECT

LET #line1=#line
LET #line2=0

BEGIN-SELECT
FF.HRS_JOB_OPENING_ID
FF.HRS_PERSON_ID
F.OFFER_DT
DTL1.CURRENCY_CD &curin
DTL1.OFFER_AMT
  do Format-Amt(&DTL1.Offer_Amt, $out, '9999999999.99',&curin, $curout)
  print $out (#line1,151)
DTL1.OFFER_FREQUENCY
  move 'OFFER_FREQUENCY' to $FieldName
  move &DTL1.OFFER_FREQUENCY to $FieldValue
  do Read-Translate-Table
  print ' / '              (#line1,0)
  print $XlatShortName     (#line1,0)
  print $curout            (#line1,+1)
  ADD 1 TO #line1
  ADD 1 TO #line2
FROM PS_HRS_RCMNT_I FF,
     PS_HRS_OFFER_MAX_I F,
     PS_HRS_OFF_DTL_I DTL1
WHERE FF.HRS_PERSON_ID      = &C.HRS_PERSON_ID
  AND FF.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
  AND FF.HRS_PERSON_ID      = F.HRS_PERSON_ID
  AND FF.HRS_RCMNT_ID      = F.HRS_RCMNT_ID
  AND F.HRS_PERSON_ID      = DTL1.HRS_PERSON_ID
  AND F.HRS_RCMNT_ID      = DTL1.HRS_RCMNT_ID
  AND F.HRS_OFF_ID      = DTL1.HRS_OFF_ID
  ORDER BY FF.HRS_JOB_OPENING_ID, FF.HRS_PERSON_ID, F.OFFER_DT DESC
END-SELECT

if #line2 < 2
let #line2 = 2
end-if

END-PROCEDURE

!***********************************************************************
!  PROC Req-Change
!***********************************************************************

BEGIN-PROCEDURE Req-Change
  next-listing skiplines=1
  
  if $APPLICATIONS = ''
    do Get_Field_Information ('HRS005',     'APPLICATIONS',      $APPLICATIONS,      #DW)
    do Get_Field_Information ('HRS005',     'REFERRALS',         $REFERRALS,         #DW)
    do Get_Field_Information ('HRS005',     'INTERVIEWS',        $INTERVIEWS,        #DW)
  end-if



  print $APPLICATIONS  (1,25)
  do Format-Number(#Applications, $out, '9999')
  print $out           (0,+1)
  print $REFERRALS     (0,55)
  do Format-Number(#Referrals, $out, '9999')
  print $out           (0,+1)
  print $INTERVIEWS    (0,85)
  do Format-Number(#Interviews, $out, '9999')
  print $out           (0,+1)
  add #Applications to #ApplicationsDept
  add #Referrals    to #ReferralsDept
  add #Interviews   to #InterviewsDept
  move 0 to #Applications
  move 0 to #Referrals
  move 0 to #Interviews
  next-listing need=3 skiplines=1
END-PROCEDURE

!***********************************************************************
!  PROC Inatallation-Values
!***********************************************************************

BEGIN-PROCEDURE Installation-Values

begin-SELECT
I.POSITION_MGMT
   move &I.POSITION_MGMT to $PositionMgmt
FROM PS_INSTALLATION I
end-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC Dept-Change
!***********************************************************************

BEGIN-PROCEDURE Dept-Change
  do Req-Change
  print $DEPT_TOT      (1,10)
  print $APPLICATIONS  (0,25)
  do Format-Number(#ApplicationsDept, $out, '9999')
  print $out      (0,+1)
  print $REFERRALS     (0,55)
  do Format-Number(#ReferralsDept, $out, '9999')
  print $out           (0,+1)
  print $INTERVIEWS    (0,85)
  do Format-Number(#InterviewsDept, $out, '9999')
  print $out        (0,+1)
  move 0 to #ApplicationsDept
  move 0 to #ReferralsDept
  move 0 to #InterviewsDept
  if $End = 'Y'
    do Reset
  end-if
  new-page
END-PROCEDURE


!****************************************************************

#include 'prcslng.sqc'   !Get language code
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getempnm.sqc'  !Get-Employee-Name and Get-Applicant-Name
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getposnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

