!*************************************************************!
!       $Release:  HR92                                       !
!           $Bug:  27231547                                   !
!*************************************************************!
! ************************************************************* !
!                                                               !
!                                                               !
! This software and related documentation are provided under a  !
! license agreement containing restrictions on use and          !
! disclosure and are protected by intellectual property         !
! laws. Except as expressly permitted in your license agreement !
! or allowed by law, you may not use, copy, reproduce,          !
! translate, broadcast, modify, license, transmit, distribute,  !
! exhibit, perform, publish or display any part, in any form or !
! by any means. Reverse engineering, disassembly, or            !
! decompilation of this software, unless required by law for    !
! interoperability, is prohibited.                              !
! The information contained herein is subject to change without !
! notice and is not warranted to be error-free. If you find any !
! errors, please report them to us in writing.                  !
!                                                               !
! Copyright (C) 1988, 2018, Oracle and/or its affiliates.       !
! All Rights Reserved.                                          !
! ************************************************************* !
!************************************************************************
! Procedure DATOS-PARTE
!************************************************************************
begin-procedure DATOS-PARTE
#debug do Fin-Debug-Msg('DATOS-PARTE')


let #numero = 0
let $fecha_parte = ''

let $sql-statement = 'GPESFNIT.SQR,DATOS-PARTE,Select,PS_GPES_ABSEVT_NT'
begin-SELECT DISTINCT on-error=SQL-Error
IT.GPES_SICK_DATE
IT.GPES_FDI_NUMBER

   let $fecha_parte = &IT.GPES_SICK_DATE
   let #numero      = &IT.GPES_FDI_NUMBER

FROM PS_GPES_ABSEVT_NT IT
    ,PS_GP_ABS_EVENT BJ
    ,PS_GP_ABS_TAKE TAKE
    ,PS_GP_ABS_TYPE TYP
WHERE IT.EMPLID = $Select-EMPLID
  AND IT.EMPL_RCD = #Select-EMPL-RCD
  AND IT.BGN_DT = $fecha_inicio_baja
  AND IT.PIN_TAKE_NUM = BJ.PIN_TAKE_NUM
  AND IT.GPES_FDI_NOTE_TYPE = 'PC'
  AND IT.GPES_SICK_DATE =
      (SELECT MAX(IT2.GPES_SICK_DATE)
         FROM PS_GPES_ABSEVT_NT IT2
        WHERE IT2.EMPLID = IT.EMPLID
          AND IT2.GPES_SICK_DATE <= $Select-ASOFDATE)
  AND BJ.EMPLID = IT.EMPLID
  AND BJ.EMPL_RCD = IT.EMPL_RCD
  AND BJ.BGN_DT = IT.BGN_DT
  AND BJ.PIN_TAKE_NUM = TAKE.PIN_NUM
  AND BJ.END_DT = IT.END_DT
  AND TAKE.ABS_TYPE_OPTN = TYP.ABS_TYPE_OPTN
  AND TYP.COUNTRY = 'ESP'
  AND TYP.ABS_TYPE_OPTN IN ('DIS','ACC')
  AND TYP.USED_BY = 'C'
end-SELECT

end-procedure

!************************************************************************
! Procedure Print-Certificate-IT
!************************************************************************
begin-procedure Print-Certificate-IT
#debug do Fin-Debug-Msg('Print-Certificate-IT')

  #define DFLT_COL1                02
  #define DFLT_COL2                84!16
  #define CMPNY_NM_BOX             {DFLT_COL1}
  #define CMPNY_NM_FLD             03
  #define CMPNY_CCC_BOX            98
  #define CMPNY_CCC_FLD            99
  #define CMPNY_ADDR_BOX           {DFLT_COL1}
  #define CMPNY_ADDR_FLD           03
  #define CMPNY_NUM_BOX            74
  #define CMPNY_NUM_FLD            75
  #define CMPNY_BLOQUE_BOX         82
  #define CMPNY_BLOQUE_FLD         83
  #define CMPNY_ESCALERA_BOX       89
  #define CMPNY_ESCALERA_FLD       90
  #define CMPNY_PISO_BOX           98
  #define CMPNY_PISO_FLD           99
  #define CMPNY_PUERTA_BOX         104
  #define CMPNY_PUERTA_FLD         105
  #define CMPNY_POSTAL_BOX         111
  #define CMPNY_POSTAL_FLD         112
  #define CMPNY_CITY_BOX           {DFLT_COL1}
  #define CMPNY_CITY_FLD           03
  #define CMPNY_STATE_BOX          45
  #define CMPNY_STATE_FLD          46
  #define CMPNY_TEL_BOX            98
  #define CMPNY_TEL_FLD            99
  #define EMPL_NM_BOX              {DFLT_COL1}
  #define EMPL_NM_FLD              03
  #define EMPL_DNI_BOX             103
  #define EMPL_DNI_FLD             104
  #define EMPL_ADDR_BOX            {DFLT_COL1}
  #define EMPL_ADDR_FLD            03
  #define EMPL_NUM_BOX             74
  #define EMPL_NUM_FLD             75
  #define EMPL_BLOQUE_BOX          82
  #define EMPL_BLOQUE_FLD          83
  #define EMPL_ESCALERA_BOX        89
  #define EMPL_ESCALERA_FLD        90
  #define EMPL_PISO_BOX            98
  #define EMPL_PISO_FLD            99
  #define EMPL_PUERTA_BOX          104
  #define EMPL_PUERTA_FLD          105
  #define EMPL_CP_BOX              111
  #define EMPL_CP_FLD              112
  #define EMPL_LOCAL_BOX           {DFLT_COL1}
  #define EMPL_LOCAL_FLD           03
  #define EMPL_PROV_BOX            42
  #define EMPL_PROV_FLD            43
  #define EMPL_SSN_BOX             73
  #define EMPL_SSN_FLD             74
  #define EMPL_GCTZ_BOX            98
  #define EMPL_GCTZ_FLD            99
  #define CNTRCT_TYPE_BOX          37   !bea 96
  #define CNTRCT_TYPE_FLD          38   !bea 97
  #define EMPL_JOBCODE_BOX         {DFLT_COL1}
  #define EMPL_JOBCODE_FLD         03
  #define EMPL_CTG_BOX             47
  #define EMPL_CTG_FLD             48
  #define EMPL_HIREDT_BOX          78
  #define EMPL_HIREDT_FLD          79
  #define EMPL_SS_TERMDT_BOX       101
  #define EMPL_SS_TERMDT_FLD       102
  #define EMPL_TERMDT_BOX          {DFLT_COL1}
  #define EMPL_TERMDT_FLD          03
  #define EMPL_TERMRSN_BOX         54  !bea 74
  #define EMPL_TERMRSN_FLD         55  !bea 75
  #define EMPL_VACN_DAYS_BOX       {DFLT_COL1}
  #define EMPL_VACN_DAYS_FLD       03
  #define EMPL_FBM_BOX             {DFLT_COL1}
  #define EMPL_FBM_FLD             03
  #define EMPL_UPC_BOX             55
  #define EMPL_UPC_FLD             56
  #define EMPL_CHECK1_BOX          95
  #define EMPL_CHECK2_BOX          105
  #define EMPL_CHECK1_FLD          98
  #define EMPL_CHECK2_FLD          108



  #define MAIN_BOX_WIDTH    {ColR}

  #define ARIAL               4
  #define ARIAL_BOLD        400
  #define COURIER_NEW         3
  #define HELVETICA_NARROW   38
  #define TIMES_ITALIC       32

  print ' '                                             ( 1, 1)

    !---- HEADER PART----!

    !print-image ministerio                              ( 4,01)
    PRINT-IMAGE  (  1,  {DFLT_COL1})
      type         = jpeg-file
      image-size   = (47,9)
      source       = $FileDir

    PRINT-IMAGE  (  1,  100)
      type         = jpeg-file
      image-size   = (25,9)
    source       = $FileDir2

    alter-printer point-size=8 font={ARIAL}
    Let $out = 'Esta certificación debe ser cumplimentada, firmada y sellada por la Empresa '
    Let $out = $out || 'en la que se hayan prestado servicios dentro del periodod indicado'
    print $out                                          (+10,{DFLT_COL1})


    !******** HEADER ***********!!!

    alter-printer point-size=12 font={ARIAL_BOLD}

    graphic (+1, 73, 25) box 8
    graphic (  ,100, 25) box 8
        
    print 'CERTIFICADO DE EMPRESA'                      (+2,{DFLT_COL1})
    print 'PARA LA SOLICITUD DE '   (+2,{DFLT_COL1})
    print 'INCAPACIDAD TEMPORAL'   (+2,{DFLT_COL1})

    alter-printer point-size=8 font={ARIAL}
    print 'D/Dña.'                                      (+4 ,{DFLT_COL1})
    print $Responsible-Name                             (  , 11)
    graphic (,9,61) horz-line

    print 'con DNI - NIE - Pasaporte'                   (  , 72)
    print $Responsible-DNI                              (  ,97)
    graphic (,95,29) horz-line

    print 'que desempeña en la empresa el cargo de'     (+2,{DFLT_COL1})
    print $Reponsible-JobCode                           (  , 41)
    graphic (,39,85) horz-line

    alter-printer point-size=8 font={ARIAL}
    print 'CERTIFICA,'                                  (+3, {DFLT_COL1})
    Let $out = 'que son ciertos los datos relativos a la empresa, así como los personales, '
    Let $out = $out|| 'profesionales y de cotización, que a continuación'
    print $out                                         (  ,13)
    print 'se consignan:'                              (+1,13)



    !********* COMPANY ****************!!
    alter-printer point-size=8 font={ARIAL}
    print '1. DATOS DE EMPRESA'                         (+3, {DFLT_COL1})  Bold

    alter-printer point-size=16 font={ARIAL}
    graphic (+2, {CMPNY_NM_BOX}, {MAIN_BOX_WIDTH}) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_CCC_BOX} + 2
    graphic (  , {CMPNY_CCC_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Nombre o razón social'                       (  , {CMPNY_NM_FLD})
    print 'Código de cuenta de cotización'                    (  , {CMPNY_CCC_FLD})
    print $Cmpny-Descr                                  (+1, {CMPNY_NM_FLD})
    print $Cmpny-Ssn                                    (  , {CMPNY_CCC_FLD}) edit 'XX/XXXXXXXXX'


    alter-printer point-size=16 font={ARIAL}
    graphic (+2, {CMPNY_ADDR_BOX}, {MAIN_BOX_WIDTH}) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_NUM_BOX} + 2
    graphic ( , {CMPNY_NUM_BOX}, #Width) box 3

    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_BLOQUE_BOX} + 2
    graphic ( , {CMPNY_BLOQUE_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_ESCALERA_BOX} + 2
    graphic ( , {CMPNY_ESCALERA_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_PISO_BOX} + 2
    graphic ( , {CMPNY_PISO_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_PUERTA_BOX} + 2
    graphic ( , {CMPNY_PUERTA_BOX}, #Width) box 3

    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_POSTAL_BOX} + 2
    graphic ( , {CMPNY_POSTAL_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Domicilio'                                   (  , {CMPNY_ADDR_FLD})
    print 'Número'                                      (  , {CMPNY_NUM_FLD})
    print 'Bloque'                                      (  , {CMPNY_BLOQUE_FLD})
    print 'Escalera'                                    (  , {CMPNY_ESCALERA_FLD})
    print 'Piso'                                        (  , {CMPNY_PISO_FLD})
    print 'Puerta'                                      (  , {CMPNY_PUERTA_FLD})
    print 'Código Postal'                               (  , {CMPNY_POSTAL_FLD})
    print $Wrk-Center-Domicilio                              (+1, {CMPNY_ADDR_FLD})
    print $Wrk-Center-Numero                                 (  , {CMPNY_NUM_FLD})
    print $Wrk-Center-Bloque                                 (  , {CMPNY_BLOQUE_FLD})
    print $Wrk-Center-Escalera                               (  , {CMPNY_ESCALERA_FLD})
    print $Wrk-Center-Piso                                   (  , {CMPNY_PISO_FLD})
    print $Wrk-Center-Puerta                                 (  , {CMPNY_PUERTA_FLD})
    print $Wrk-Center-Postal                                 (  , {CMPNY_POSTAL_FLD})

    alter-printer point-size=16 font={ARIAL}
    graphic (+2, {CMPNY_CITY_BOX}, {MAIN_BOX_WIDTH}) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_STATE_BOX} + 2
    graphic ( , {CMPNY_STATE_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_TEL_BOX} + 2
    graphic ( , {CMPNY_TEL_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Localidad'                                  (  , {CMPNY_CITY_FLD})
    print 'Provincia'                                  (  , {CMPNY_STATE_FLD})
    print 'Teléfono'                                   (  , {CMPNY_TEL_FLD})
    print $Wrk-Center-City                             (+1, {CMPNY_CITY_FLD})
    print $Wrk-Center-State-Desc                       (  , {CMPNY_STATE_FLD})
    print $Wrk-Center-Telefono                         (  , {CMPNY_TEL_FLD})

    !********* EMPLOYEE ****************!!

    alter-printer point-size=8 font={ARIAL}
    print '2. DATOS DEL/LA TRABAJADOR/A'               (+4, {DFLT_COL1}) Bold

    alter-printer point-size=16 font={ARIAL}
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_NM_BOX} + 2
    graphic (+2 , {EMPL_NM_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_DNI_BOX} + 2
    graphic ( , {EMPL_DNI_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Apellidos y nombre'                         (  , {EMPL_NM_FLD})
    print 'DNI - NIE - pasaporte'                      (  , {EMPL_DNI_FLD})
    PRINT $Empl-Name                                   (+1, {EMPL_NM_FLD})
    PRINT $Empl-DNI                                    (  , {EMPL_DNI_FLD})

    alter-printer point-size=16 font={ARIAL}
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_ADDR_BOX} + 2
    graphic (+2, {EMPL_ADDR_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_NUM_BOX} + 2
    graphic (, {EMPL_NUM_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_BLOQUE_BOX} + 2
    graphic (, {EMPL_BLOQUE_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_ESCALERA_BOX} + 2
    graphic (, {EMPL_ESCALERA_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PISO_BOX} + 2
    graphic (, {EMPL_PISO_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PUERTA_BOX} + 2
    graphic (, {EMPL_PUERTA_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_CP_BOX} + 2
    graphic (  , {EMPL_CP_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Domicilio'                                   (  , {EMPL_ADDR_FLD})
    print 'Número'                                      (  , {EMPL_NUM_FLD})
    print 'Bloque'                                      (  , {EMPL_BLOQUE_FLD})
    print 'Escalera'                                    (  , {EMPL_ESCALERA_FLD})
    print 'Piso'                                        (  , {EMPL_PISO_FLD})
    print 'Puerta'                                      (  , {EMPL_PUERTA_FLD})
    print 'Código Postal'                               (  , {EMPL_CP_FLD})
    PRINT $DPersonales-Domicilio                        (+1, {EMPL_ADDR_FLD})
    print $DPersonales-Numero                           (  , {EMPL_NUM_FLD})
    print $DPersonales-Bloque                           (  , {EMPL_BLOQUE_FLD})
    print $DPersonales-Escalera                         (  , {EMPL_ESCALERA_FLD})
    print $DPersonales-Piso                             (  , {EMPL_PISO_FLD})
    print $DPersonales-Puerta                           (  , {EMPL_PUERTA_FLD})
    print $Empl-Postal                                  (  , {EMPL_CP_FLD})
    alter-printer point-size=16 font={ARIAL}
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_LOCAL_BOX} + 2
    graphic (+2 , {EMPL_LOCAL_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PROV_BOX} + 2
    graphic (  , {EMPL_PROV_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_SSN_BOX} + 2
    graphic (, {EMPL_SSN_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_GCTZ_BOX} + 2
    graphic (  , {EMPL_GCTZ_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Localidad'                                   ( , {EMPL_LOCAL_FLD})
    print 'Provincia'                                   (  , {EMPL_PROV_FLD})
    print 'Número de la Seguridad Social'               (  , {EMPL_SSN_FLD})
    print 'Grupo de Cotización'                         (  , {EMPL_GCTZ_FLD})
    print $Empl-City                                    (+1 , {EMPL_LOCAL_FLD})
    print $Empl-State-Desc                              (  , {EMPL_PROV_FLD})
    PRINT $Empl-SSN                                     (, {EMPL_SSN_FLD})      EDIT 'XX/XXXXXXXX/XX'
    PRINT $Empl-SS-Grp-Desc                             (  , {EMPL_GCTZ_FLD})

    alter-printer point-size=7 font={ARIAL}
    print 'DATOS LABORALES'            (+2, {DFLT_COL1}) Bold

    alter-printer point-size=16 font={ARIAL}
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_JOBCODE_BOX} + 2
    graphic (+1, {EMPL_JOBCODE_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_CTG_BOX} + 2
    graphic (  , {EMPL_CTG_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_HIREDT_BOX} + 2
    graphic (  , {EMPL_HIREDT_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_SS_TERMDT_BOX} + 2
    graphic (  , {EMPL_SS_TERMDT_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Profesión'                                   (  , {EMPL_JOBCODE_FLD})
    print 'Categoría'                                   (  , {EMPL_CTG_FLD})
    print 'Fecha de alta en la empresa'                 (  , {EMPL_HIREDT_FLD})
    print 'Fecha de baja en la empresa'                 (  , {EMPL_SS_TERMDT_FLD})

    !print $Empl-JobCode-Desc
    let $out = $CNO-Code || ' - ' || $Empl-CNO-Desc
    print $out                                          (+1 , {EMPL_JOBCODE_FLD})
    print $Empl-Ctg-Desc                                (  , {EMPL_CTG_FLD})
    do Format-DateTime($Hire-Dt, $Hire_Dt-Print, {DEFDMY}, '', '')
    print $Hire_Dt-Print                                (  , {EMPL_HIREDT_FLD})
    if $Empl-Terminated = 'Y'
      do Format-DateTime($Termination-Dt, $Termination-Dt-Print, {DEFDMY}, '', '')
      print $Termination-Dt-Print                       (  ,{EMPL_SS_TERMDT_FLD})
    End-if

    alter-printer point-size=16 font={ARIAL}
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_TERMDT_BOX} + 2
    graphic (+2, {EMPL_TERMDT_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {CNTRCT_TYPE_BOX} + 2
    graphic (  , {CNTRCT_TYPE_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_TERMRSN_BOX} + 2
    graphic (  , {EMPL_TERMRSN_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Fecha de la extinción del contrato de trabajo'        (  , {EMPL_TERMDT_FLD})
    print 'Tipo de contrato (1)'                                 (  , {CNTRCT_TYPE_FLD})
    print 'Causa de la extinción del contrato de trabajo (2)'    (  , {EMPL_TERMRSN_FLD})

    print $Termination-Dt-Print                         (+1, {EMPL_TERMDT_FLD})
    let #LineWk = #current-line
    if $Empl-Terminated = 'Y'
       !print $Action_Reason_Desc                        (  , {EMPL_TERMRSN_FLD})
       let $Out = substr($Actn-Rsn-INEM_Desc, 1, {MAIN_BOX_WIDTH} - {EMPL_TERMRSN_BOX} + 19)
       print $Out                                       (#LineWk, {EMPL_TERMRSN_FLD})
    end-if
    !print $Cntrct-Type-Desc                             (  , {CNTRCT_TYPE_FLD})
    print $Cntrct-Type-INEM-Desc                        (#LineWk, {CNTRCT_TYPE_FLD})

    alter-printer point-size=16 font={ARIAL}
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_TERMDT_BOX} + 2
    graphic (+2, {EMPL_VACN_DAYS_BOX}, #Width) box 2
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_TERMRSN_BOX} + 2

    let #Vactn-days-ln = #current-line


   !******************************************************!
    alter-printer point-size=7 font={ARIAL}
    print 'DATOS DE LA INCAPACIDAD TEMPORAL'                                (+2, {DFLT_COL1})Bold

    alter-printer point-size=16 font={ARIAL}
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_FBM_BOX} + 2
    graphic (+1, {EMPL_FBM_BOX}, #Width) box 3
    Let #Width = {MAIN_BOX_WIDTH} - {EMPL_UPC_BOX} + 2
    graphic (  , {EMPL_UPC_BOX}, #Width) box 3
    alter-printer point-size=7 font={ARIAL}
    print 'Fecha de la baja médica'                                         (  , {EMPL_FBM_FLD})
    print 'Último parte de confirmación abonado por la empresa:'            (  , {EMPL_UPC_FLD})
    Do Format-DateTime($orig_begin_date, $fecha_inicio_baja-Print,{DEFDMY}, '', '')
    print $fecha_inicio_baja-Print                                          (+1, {EMPL_FBM_FLD})
    Do Format-Number(#numero, $numero-Print , '99')
    let $Out = rpad($numero-Print, 2, ' ')
    do Format-DateTime($fecha_parte, $fecha_parte-Print,{DEFDMY}, '', '')
    let $ultimoparte = 'Número: '  ||$numero-Print||   '             Fecha: '          ||$fecha_parte-Print
    print $ultimoparte                                                      (  , {EMPL_UPC_FLD})


    alter-printer point-size=7 font={ARIAL}
    print 'BASES DE COTIZACIÓN MES ANTERIOR AL DE LA BAJA MEDICA(4)'        (+2, {DFLT_COL1}) bold
    print '(En caso de un contrato a tiempo parcial se certificarán los 3 meses inmediatamente anteriores)' (, 56)

    #define TABLE-ROWS              4
    #define DFLT_BC_HEIGHT          2
    #define DFLT_LINE_HEIGHT_ANT    2

    Let #Line-Prev_ant = #current-line
    Let #linea_ant_it  = #current-line + {DFLT_BC_HEIGHT} +1

    alter-printer point-size=7 font={ARIAL}
    graphic (, {DFLT_COL1}, {MAIN_BOX_WIDTH}) box {DFLT_BC_HEIGHT} 1

    Let #Height_ant = {DFLT_BC_HEIGHT}
    Let #I = 1
    While #I <= {TABLE-ROWS}

       graphic (  , {DFLT_COL1}, 8)  box #Height_ant 1 #Shadow      !Column AÑO
       graphic (  , {DFLT_COL1}, 16) box #Height_ant 1 #Shadow      !Column MES
       graphic (  , {DFLT_COL1}, 31) box #Height_ant 1 0            !Column NUMEROS DIAS COTIZADOS (4)
       graphic (  , {DFLT_COL1}, 56) box #Height_ant 1 0            !Column BASE COTIZACIÓN CONTINGENCIAS COMUNES (6)
       graphic (  , {DFLT_COL1}, 80) box #Height_ant 1 0            !Column BASE COTIZACIÓN DESEMPLEO (6)
       graphic (  , {DFLT_COL1}, {MAIN_BOX_WIDTH}) box #Height_ant 1 0
       position (+#Height_ant, )

       Let #Height_ant = {DFLT_LINE_HEIGHT_ANT}
       Let #I = #I + 1
    End-While

    alter-printer point-size=6 font={ARIAL}
    print 'Año'                                         (#Line-Prev_ant, 4)
    print 'Mes'                                         (  ,11)
    print 'Núm. días'                                   (  ,20)
    print 'Base de cotización'                          (  ,36)
    print 'Base AT/EP'                                  (  ,65)
    print 'Observaciones (5)'                           (  ,97)
    print 'cotizados'                                   (+1,20)
    print 'contingencias comunes'                       (  ,35)



    alter-printer point-size=8 font={ARIAL}
    Let $out = '3. COTIZACIONES POR CONTINGENCIAS COMUNES Y AT/EP, SEGÚN TC-2, '
    Let $out = $out || 'DURANTE LOS ÚLTIMOS 180 DÍAS PRECEDENTES'
    print $out                                          (+08, {DFLT_COL1}) Bold
    print 'A LA EXTINCION DEL CONTRATO DE TRABAJO.'     (+2, {DFLT_COL1}) Bold

    Let #Line-Reg = #current-line + 3

    #define TABLE-ROWS          10
    #define DFLT_HDR_HEIGHT     2
    #define DFLT_LINE_HEIGHT    2

    alter-printer point-size=7 font={ARIAL}
    graphic (+2, {DFLT_COL1}, 122) box {DFLT_HDR_HEIGHT} 1
    Let #Line-Prev = #current-line
    Let #linea_ant_b1 = #current-line + {DFLT_HDR_HEIGHT} +1

    Let #Height = {DFLT_HDR_HEIGHT}
    Let #I = 1
    While #I <= {TABLE-ROWS}
       If #I = {TABLE-ROWS} - 1
         Let #Vactn-Line = #current-line + 1
         Let #vert-line2 = #current-line
         let #Shadow = 10
        else
         let #Shadow = 0
       end-if

       If #I <> {TABLE-ROWS}
          If #I <> {TABLE-ROWS} - 1
             !#debugt show '#I ' #I
!             graphic (  , {DFLT_COL1},  8) box #Height 1 #Shadow   !Column AÑO
             graphic (  , {DFLT_COL1},  19) box #Height 1 #Shadow   !Column AÑO
          End-If
       else
          If #I = {TABLE-ROWS}
            let #Totals-Line = #current-line + 1
          End-If
       end-if

       !graphic (  , {DFLT_COL1}, 16) box #Height 1 #Shadow      !Column MES
       !graphic (  , {DFLT_COL1}, 31) box #Height 1 0            !Column NUMEROS DIAS COTIZADOS (4)
       !graphic (  , {DFLT_COL1}, 56) box #Height 1 0            !Column BASE COTIZACIÓN CONTINGENCIAS COMUNES (6)
       !graphic (  , {DFLT_COL1}, 80) box #Height 1 0            !Column BASE CONTIZACIÓN DESEMPLEO (6)

       graphic (  , {DFLT_COL1}, 50) box #Height 1 #Shadow      !Column MES
       graphic (  , {DFLT_COL1}, 61) box #Height 1 0            !Column NUMEROS DIAS COTIZADOS (4)
       graphic (  , {DFLT_COL1}, 92) box #Height 1 0            !Column BASE COTIZACIÓN CONTINGENCIAS COMUNES (6)
       graphic (  , {DFLT_COL1}, {MAIN_BOX_WIDTH}) box #Height 1 0            !Column BASE CONTIZACIÓN DESEMPLEO (6)
       position (+#Height, )

       Let #Height = {DFLT_LINE_HEIGHT}
       Let #I = #I + 1
    End-While

   alter-printer point-size=6 font={ARIAL}
   print 'Año'                                          (#Line-Prev, 8)
   print 'Mes(6)'                                       (  ,30)
   print 'Núm. días'                                    (  ,53)
   PRINT 'Base de cotización de'                        (  ,70)
   print 'Base AT/EP (8)'                               (  ,100)
   print 'cotizados (7)'                                (+1,53)
   print 'contingencias comunes'                        (  ,100)

   !alter-printer point-size=7 font={ARIAL}
   !print 'RÉGIMEN ESPECIAL AGRARIO CUENTA AJENA'        (#Line-Reg , {DFLT_COL2}) Bold
   !alter-printer point-size=6 font={ARIAL}
   !print 'Trabajador'   (+3, {DFLT_COL2})
   !graphic (,{EMPL_CHECK1_BOX},2) box 1
   !graphic (,{EMPL_CHECK2_BOX},2) box 1
   !print 'Fijo'                                         ( , {EMPL_CHECK1_FLD})
   !print 'Eventual'                                     ( , {EMPL_CHECK2_FLD})
   !print '¿Se encontraba en vigor el contrato en la fecha de baja?'   (+3, {DFLT_COL2})
   !graphic (+2,{EMPL_CHECK1_BOX},2) box 1
   !graphic (,{EMPL_CHECK2_BOX},2) box 1
   !print 'Sí'                                           ( ,{EMPL_CHECK1_FLD})
   !print 'No'                                           ( ,{EMPL_CHECK2_FLD})
   !
   !print 'Fecha última jornada de trabajo (10)'         (+2, {DFLT_COL2})
   !graphic (,108,15) horz-line
   !print 'Núm. jornadas reales mes anterior a la baja'   (+2, {DFLT_COL2})
   !graphic (,113,10) horz-line
   !
   !print 'Salario real del trabajador'   (+2 , {DFLT_COL2})
   !graphic (,102,16) horz-line
   !print '/Día'   ( , 120)

   do Format-DateTime($AsOfToday, $out, {DEFCMP}, '', '')
   let $Day = substr($out, 7, 2)
   let $Month = substr($out, 5, 2)
   let $Year = substr($out, 1, 4)

   let $FieldName = 'GPES_MONTHCD'
   let $FieldValue = $Month
   let $AsOfDate = $Select-ASOFDATE
   Do Read-Translate-Table
   let $Month_Cd_Descr = RTrim($XLatshortName, ' ')
   let $Empl-State-Desc1 = RTrim($Empl-State-Desc, ' ')
 
   alter-printer point-size=7 font={ARIAL}
   Let $As-Of-String = ' En ' ||$Empl-State-Desc1 ||' , ' ||' a '
   Let $As-Of-String = $As-Of-String || $Day || ' de ' || $Month_Cd_Descr || ' de ' || $Year || ' . '
   print $As-Of-String                            (+20,  35)

   print '(Firma y sello)'                                  (+2, 52)

end-procedure


!************************************************************************
! Procedure Print-Contribution-bases-AntIT
!************************************************************************
begin-procedure Print-Contribution-bases-AntIT
#debug do Fin-Debug-Msg('Print-Contribution-bases-AntIT')


  If $Bases-AntIT-Loaded = 'N'

    Let $Bases-AntIT-Loaded = 'Y'

    CREATE-ARRAY NAME = Bases-AntIT SIZE = 3
      FIELD=#Prev-Year-Arr:Number
      FIELD=#Prev-Month-Arr:Number
      FIELD=#Ctz-Days-Arr:Number
      FIELD=#Total-CC-Arr:Number
      FIELD=#Total-Dsmpl-Arr:Number


    do Format-DateTime($BRD_Date, $out, {DEFCMP}, '', '')
    let #From-Year = substr($out, 1, 4)
    let #From-Month = substr($out, 5, 2)
    let $TC-Period-Begin = to_char(#From-Year) || '-' || to_char(#From-Month) || '-01'

    !Includes/excludes 'contributing by minimum base' bases
    do Convert-From-DTU-Date($TC-Period-Begin, $VR-Ref-Dt)
    Let $CLI_VR_OPC_CLC_BRD = 'A'
    let $sql-statement = 'GPESFNIT.SQR,Print-Contribution-bases-AntIT,Select,PS_GP_VARIABLE VR'
Begin-SELECT on-error=SQL-Error
VR.CHARACTER_VALUE
    Let $CLI_VR_OPC_CLC_BRD = &VR.CHARACTER_VALUE

FROM PS_GP_PIN GPP
   , PS_GP_VARIABLE VR
WHERE GPP.PIN_CODE = 'CLI VR OPC CLC BRD ESP'
  AND GPP.PIN_NUM = VR.PIN_NUM
  AND VR.EFFDT = (SELECT MAX(EFFDT) FROM PS_GP_VARIABLE
                   WHERE PIN_NUM = VR.PIN_NUM
                     AND EFFDT <= $VR-Ref-Dt)
End-SELECT
    #debugd show 'CLI VR OPC CLC BRD: ' $CLI_VR_OPC_CLC_BRD ' as of: ' $VR-Ref-Dt
    !Includes/excludes 'contributing by minimum base' bases
  
    Let #Bases-AntIT-Row = 0
    let $Naturual-Days-Count = 'N'
  
    !******** PART TIME ******
    #debugd show 'Full Part time flag: ' $JOB-Full-Part-Time
    if $JOB-Full-Part-Time = 'P'  ! trabajador a tiempo parcial
      do dtu-add-months ($TC-Period-Begin, -1, $TC-Period-Begin_1)
      do dtu-add-months ($TC-Period-Begin, -3, $TC-Period-Begin_3)
      do Convert-From-DTU-Date($TC-Period-Begin_1, $TC-Period-Begin_To)
      do Convert-From-DTU-Date($TC-Period-Begin_3, $TC-Period-Begin_From)
      #debugd show 'TC results retrieval range: ' $TC-Period-Begin_From '/' $TC-Period-Begin_To

      alter-printer point-size=8 font={COURIER_NEW}

!*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
      let $OVRD-Bgn-Dt = $fecha_inicio_baja
      let $OVRD-End-Dt = $fecha_fin_baja
      Do Get-WorkDay-Reduction

      If $Workday-Reduction <> 'WKR'
        let $sql-statement = 'GPESFNIT.SQR,Print-Contribution-bases-AntIT,Select,PS_GP_ABS_EVENT ABSE'
Begin-SELECT DISTINCT on-error=SQL-Error
'X' &ABSE3.X
        let $Naturual-Days-Count = 'Y'

FROM PS_GP_PIN GPP
   , PS_GP_ABS_EVENT ABSE
WHERE GPP.PIN_CODE IN ('IT PRORROGADA ESP','AT/EP PRORROGADA ESP')
  AND GPP.PIN_NUM = ABSE.PIN_TAKE_NUM
  AND ABSE.BGN_DT = $fecha_inicio_baja AND ABSE.END_DT = $fecha_fin_baja
End-SELECT
        #debugd show 'Natural days count for IT & AT/EP PRORROGADAs: ' $Naturual-Days-Count
        #debugd show 'Event bgn/end dates: ' $fecha_inicio_baja '/' $fecha_fin_baja
      End-if
!*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*

      let #Prev-Month       =  0
      let $Prev-sstc-Paymnt =  ' ' 
      let #Total-CC     =  0
      let #Total-Dsmpl  =  0
      let #Ctz-Days     =  0
      let #Ctz-Days_L03     =  0
      let $Base-stored =  ''

let $sql-statement = 'GPESFNIT.SQR,Print-Contribution-bases-AntIT,Select,PS_GPES_SSTC_RS_VW SSTC_3ANT'
Begin-SELECT on-error=SQL-Error
SSTC_3ANT.EMPLID
SSTC_3ANT.GPES_YEAR_RECALC
SSTC_3ANT.GPES_MONTH_RECALC
SSTC_3ANT.GPES_YEAR
SSTC_3ANT.GPES_MONTH
SSTC_3ANT.GPES_SSTC_ELEMENT
SSTC_3ANT.GPES_SSTC_PAYMNT
SSTC_3ANT.CONTRACT_NUM
SUM(SSTC_3ANT.GPES_SSTC_DAYS)    &SSTC_3ANT.GPES_SSTC_DAYS
SUM(SSTC_3ANT.GPES_SSTC_AMOUNT)  &SSTC_3ANT.GPES_SSTC_AMOUNT

      ! In case of litigation salaries we find L00 & L02 records in the table that make to print
      ! two lines in the report for the same month. We just want to print one line with the sum of
      ! L00 & L02 records for a month.
      let $sstc-Paymnt = &SSTC_3ANT.GPES_SSTC_PAYMNT
      if &SSTC_3ANT.GPES_SSTC_PAYMNT <> 'L13'
        let $sstc-Paymnt = 'L00'
      end-if

      let $Base-stored     =  'N'

      if #Prev-Month <> &SSTC_3ANT.GPES_MONTH_RECALC
          or $Prev-sstc-Paymnt <> $sstc-Paymnt
   
  
        if $Prev-sstc-Paymnt = ' '
          !Initialization for the first loop
          let $Prev-sstc-Paymnt =  $sstc-Paymnt
          let #Prev-Year        =  &SSTC_3ANT.GPES_YEAR_RECALC
          let #Prev-Month       =  &SSTC_3ANT.GPES_MONTH_RECALC
          let  #Prev_GPES_YEAR=&SSTC_3ANT.GPES_YEAR
          let  #Prev_GPES_MONTH=&SSTC_3ANT.GPES_MONTH

        else
          if #Ctz-Days=0
           let #Ctz-Days=#Ctz-Days_L03
          end-if 
  
          PUT #Prev-Year   #Prev-Month   #Ctz-Days   #Total-CC   #Total-Dsmpl
          INTO Bases-AntIT(#Bases-AntIT-Row)
          #debugd show 'Storing contrib base AntIT: ' #Bases-AntIT-Row
          Let #Bases-AntIT-Row = #Bases-AntIT-Row + 1
          let $Base-stored    =  'Y'
          
          let #Prev-Year    =  &SSTC_3ANT.GPES_YEAR_RECALC
          let #Prev-Month   =  &SSTC_3ANT.GPES_MONTH_RECALC
           let  #Prev_GPES_YEAR=&SSTC_3ANT.GPES_YEAR
          let  #Prev_GPES_MONTH=&SSTC_3ANT.GPES_MONTH
          let #Ctz-Days     =  0
          let #Ctz-Days_L03=0
          let #Total-CC     =  0
          let #Total-Dsmpl  =  0
          let $Prev-sstc-Paymnt =  $sstc-Paymnt
        end-if
      end-if

      let $mult_contract = &SSTC_3ANT.CONTRACT_NUM
   
      #debugd show 'TC Payment/Element:       ' &SSTC_3ANT.GPES_SSTC_PAYMNT '/' &SSTC_3ANT.GPES_SSTC_ELEMENT
      #debugd show 'Year Recalc/Month Recalc: ' &SSTC_3ANT.GPES_YEAR_RECALC '/' &SSTC_3ANT.GPES_MONTH_RECALC
      #debugd show 'TC contributing days:     ' &SSTC_3ANT.GPES_SSTC_DAYS
      #debugd show 'TC Base Amount:           ' &SSTC_3ANT.GPES_SSTC_AMOUNT

      !** Procedure to get the company code of the employee's contract id***!
      do GetEmployeeContractCompany
      #debugd show 'Job/contract company: ' &JOB.COMPANY '/' $EmpContractCompany
      #debugd show 'Job/FAN rslt table contracts: ' &JOB.CONTRACT_NUM '/' &SSTC_3ANT.CONTRACT_NUM
      #debugd show ' '

      !**1648916000- Contributions pertaining to last 180days (across contracts) for same company as the TER one**!
      if $EmpContractCompany = &JOB.COMPANY
        if &SSTC_3ANT.GPES_SSTC_ELEMENT = 'BA01' or &SSTC_3ANT.GPES_SSTC_ELEMENT = 'BA21'
          let #Total-CC =  #Total-CC + &SSTC_3ANT.GPES_SSTC_AMOUNT
        else
          let #Total-Dsmpl =  #Total-Dsmpl +  &SSTC_3ANT.GPES_SSTC_AMOUNT
          if $sstc-Paymnt = $Prev-sstc-Paymnt and (&SSTC_3ANT.GPES_SSTC_PAYMNT <> 'L03' AND &SSTC_3ANT.GPES_SSTC_PAYMNT <> 'L09' 
  AND  &SSTC_3ANT.GPES_SSTC_PAYMNT <> 'L90'  AND &SSTC_3ANT.GPES_SSTC_PAYMNT <> 'L91')
            let #Ctz-Days         =  #Ctz-Days +  &SSTC_3ANT.GPES_SSTC_DAYS
            !let $Prev-sstc-Paymnt =  $sstc-Paymnt - not required as the value of both the variables will the same
          end-if
  
          if $sstc-Paymnt = $Prev-sstc-Paymnt 
                    and  #Prev_GPES_MONTH=&SSTC_3ANT.GPES_MONTH  and  #Prev_GPES_YEAR=&SSTC_3ANT.GPES_YEAR 
                    and (&SSTC_3ANT.GPES_SSTC_PAYMNT = 'L03'    or &SSTC_3ANT.GPES_SSTC_PAYMNT = 'L09' 
                                  or &SSTC_3ANT.GPES_SSTC_PAYMNT = 'L90'   or &SSTC_3ANT.GPES_SSTC_PAYMNT = 'L91')
            let #Ctz-Days_L03         =  #Ctz-Days_L03 +  &SSTC_3ANT.GPES_SSTC_DAYS
          end-if
  
        end-if
      end-if !end of if $EmpContractCompany = &JOB.COMPANY

      #debugd show 'Agregate CC/CP Base amount: ' #Total-CC '/' #Total-Dsmpl
      #debugd show 'Agregate contributing days: ' #Ctz-Days
      #debugd show 'Agregate contributing days:_L03 ' #Ctz-Days_L03
      #debugd show '  '

FROM PS_GPES_SSTC_RS_VW  SSTC_3ANT
    ,PS_GPES_SYS_CALEND CAL_3ANT
WHERE SSTC_3ANT.EMPLID = $Select-EMPLID
 AND SSTC_3ANT.EMPL_RCD = #Select-EMPL-RCD

   !BRD Natural days count for IT PRORROGADA & AT/EP PRORROGADA
   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.
 AND (SSTC_3ANT.GPES_SSTC_ELEMENT IN ('BA01','BA02','BA42')
      OR (SSTC_3ANT.GPES_SSTC_ELEMENT IN ('BA21','BA22')
          AND ('A' = $CLI_VR_OPC_CLC_BRD
               OR ('A' <> $CLI_VR_OPC_CLC_BRD AND SSTC_3ANT.GPES_SSTC_NOSALARY <> 'A')
              )
         )
     )
   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.
 AND SSTC_3ANT.GPES_SSTC_PAYMNT NOT IN ('L13')
 AND SSTC_3ANT.GPES_SSTC_LGL_CUST <> 'T'
 AND CAL_3ANT.CALYEAR = GPES_YEAR_RECALC AND CAL_3ANT.GPES_MONTH = GPES_MONTH_RECALC
 AND CAL_3ANT.GPES_MONTH_BGN_DT >= $TC-Period-Begin_From AND CAL_3ANT.GPES_MONTH_BGN_DT <= $TC-Period-Begin_To
 AND SSTC_3ANT.SLICE_BGN_DT >= $Hire-Dt

GROUP BY SSTC_3ANT.EMPLID, SSTC_3ANT.GPES_YEAR_RECALC, SSTC_3ANT.GPES_MONTH_RECALC, SSTC_3ANT.GPES_SSTC_PAYMNT,
         SSTC_3ANT.GPES_SSTC_ELEMENT, SSTC_3ANT.CONTRACT_NUM,SSTC_3ANT.GPES_YEAR, SSTC_3ANT.GPES_MONTH
ORDER BY SSTC_3ANT.EMPLID, SSTC_3ANT.GPES_YEAR_RECALC DESC, SSTC_3ANT.GPES_MONTH_RECALC DESC,
         SSTC_3ANT.GPES_SSTC_PAYMNT DESC, SSTC_3ANT.GPES_SSTC_ELEMENT
End-SELECT
     
      If $Base-stored = 'N'
      if #Ctz-Days=0
           let #Ctz-Days=#Ctz-Days_L03
      end-if
        PUT #Prev-Year   #Prev-Month   #Ctz-Days   #Total-CC   #Total-Dsmpl
        INTO Bases-AntIT(#Bases-AntIT-Row)
        #debugd show 'Storing contrib base AntIT: ' #Bases-AntIT-Row
        Let #Bases-AntIT-Row = #Bases-AntIT-Row + 1
      End-if
    End-if !$JOB-Full-Part-Time = 'P'



    !*********** FULL TIME ***********!
    if $JOB-Full-Part-Time = 'F'  ! trabajador fijo
      do dtu-add-months ($TC-Period-Begin, -1, $TC-Period-Begin_1)
      !let #From-Month_1 =  substr($TC-Period-Begin_1, 6, 2)
      !let #From-Year_1  =  substr($TC-Period-Begin_1, 1, 4)
      !#debugd show 'From year/Month: ' #From-Year_1 '/' #From-Month_1
      do Convert-From-DTU-Date($TC-Period-Begin_1, $TC-Period-Begin_From)
      #debugd show 'TC results retrieval month: ' $TC-Period-Begin_From

      alter-printer point-size=8 font={COURIER_NEW}

      let #Total-CC     =  0
      let #Total-Dsmpl  =  0
      let #Ctz-Days     =  0
      let #Ctz-Days_L03 = 0
      let $Prev-sstc-Paymnt = ' '

      let $sql-statement = 'GPESFNIT.SQR,Print-Contribution-bases-AntIT,Select,PS_GPES_SSTC_RS_VW SSTC_ANT'
Begin-SELECT on-error=SQL-Error
SSTC_ANT.EMPLID
SSTC_ANT.GPES_YEAR_RECALC
SSTC_ANT.GPES_MONTH_RECALC
SSTC_ANT.GPES_SSTC_ELEMENT
SSTC_ANT.GPES_SSTC_PAYMNT
SSTC_ANT.CONTRACT_NUM
SUM(SSTC_ANT.GPES_SSTC_DAYS)    &SSTC_ANT.GPES_SSTC_DAYS
SUM(SSTC_ANT.GPES_SSTC_AMOUNT)  &SSTC_ANT.GPES_SSTC_AMOUNT

      ! In case of litigation salaries we find L00 & L02 records in the table that make to print
      ! two lines in the report for the same month. We just want to print one line with the sum of
      ! L00 & L02 records for a month.
      let $sstc-Paymnt = &SSTC_ANT3.GPES_SSTC_PAYMNT
      if &SSTC_3ANT.GPES_SSTC_PAYMNT <> 'L13'
        let $sstc-Paymnt = 'L00'
      end-if

      if $Prev-sstc-Paymnt = ' '
        let $Prev-sstc-Paymnt =  $sstc-Paymnt
      end-if

      let #Prev-Year  =  &SSTC_ANT.GPES_YEAR_RECALC
      let #Prev-Month =  &SSTC_ANT.GPES_MONTH_RECALC
     
      let $mult_contract = &SSTC_ANT.CONTRACT_NUM
   
      #debugd show 'TC Payment/Element:       ' &SSTC_ANT.GPES_SSTC_PAYMNT '/' &SSTC_ANT.GPES_SSTC_ELEMENT
      #debugd show 'Year Recalc/Month Recalc: ' &SSTC_ANT.GPES_YEAR_RECALC '/' &SSTC_ANT.GPES_MONTH_RECALC
      #debugd show 'TC contributing days:     ' &SSTC_ANT.GPES_SSTC_DAYS
      #debugd show 'TC Base Amount:           ' &SSTC_ANT.GPES_SSTC_AMOUNT

      !** Procedure to get the company code of the employee's contract id***!
      do GetEmployeeContractCompany
      #debugd show 'Job/contract company: ' &JOB.COMPANY '/' $EmpContractCompany
      #debugd show 'Job/FAN rslt table contracts: ' &JOB.CONTRACT_NUM '/' &SSTC_ANT.CONTRACT_NUM
      #debugd show ' '

      !**1648916000- Contributions pertaining to last 180days (across contracts) for same company as the TER one**!
      if $EmpContractCompany = &JOB.COMPANY
        if &SSTC_ANT.GPES_SSTC_ELEMENT = 'BA01' or &SSTC_ANT.GPES_SSTC_ELEMENT = 'BA21'
          let #Total-CC       =  #Total-CC + &SSTC_ANT.GPES_SSTC_AMOUNT
        else
          let #Total-Dsmpl      =  #Total-Dsmpl +  &SSTC_ANT.GPES_SSTC_AMOUNT
          if $sstc-Paymnt = $Prev-sstc-Paymnt and (&SSTC_ANT.GPES_SSTC_PAYMNT <> 'L03' AND &SSTC_ANT.GPES_SSTC_PAYMNT <> 'L09' 
           AND &SSTC_ANT.GPES_SSTC_PAYMNT <> 'L91' AND &SSTC_ANT.GPES_SSTC_PAYMNT <> 'L90')
            let #Ctz-Days         =  #Ctz-Days +  &SSTC_ANT.GPES_SSTC_DAYS
            !let $Prev-sstc-Paymnt =  $sstc-Paymnt - not required as the value of both the variables will the same
          end-if
  
            if $sstc-Paymnt = $Prev-sstc-Paymnt        
                             and (&SSTC_ANT.GPES_SSTC_PAYMNT = 'L03'     Or  &SSTC_ANT.GPES_SSTC_PAYMNT = 'L09'   
                                        or  &SSTC_ANT.GPES_SSTC_PAYMNT = 'L90'    or  &SSTC_ANT.GPES_SSTC_PAYMNT = 'L91')
              let #Ctz-Days_L03         =  #Ctz-Days_L03  +  &SSTC_ANT.GPES_SSTC_DAYS
           
          end-if
  
        end-if
      end-if !end of if $EmpContractCompany = &JOB.COMPANY

      #debugd show 'Agregate CC/CP Base amount: ' #Total-CC '/' #Total-Dsmpl
      #debugd show 'Agregate contributing days: ' #Ctz-Days
      #debugd show 'Agregate contributing days: #Ctz_Days_L03' #Ctz-Days_L03
      #debugd show '  '

FROM PS_GPES_SSTC_RS_VW  SSTC_ANT
    ,PS_GPES_SYS_CALEND CAL_ANT
WHERE SSTC_ANT.EMPLID = $Select-EMPLID
 AND SSTC_ANT.EMPL_RCD = #Select-EMPL-RCD

   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.
 AND (SSTC_ANT.GPES_SSTC_ELEMENT IN ('BA01','BA02','BA42')
      OR (SSTC_ANT.GPES_SSTC_ELEMENT IN ('BA21','BA22')
          AND ('A' = $CLI_VR_OPC_CLC_BRD
               OR ('A' <> $CLI_VR_OPC_CLC_BRD AND SSTC_ANT.GPES_SSTC_NOSALARY <> 'A')
              )
         )
     )
   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.
 AND SSTC_ANT.GPES_SSTC_PAYMNT NOT IN ('L13')

 AND SSTC_ANT.GPES_SSTC_LGL_CUST <> 'T'
 !AND SSTC_ANT.GPES_YEAR_RECALC = #From-Year_1 AND SSTC_ANT.GPES_MONTH_RECALC = #From-Month_1
 AND CAL_ANT.CALYEAR = GPES_YEAR_RECALC AND CAL_ANT.GPES_MONTH = GPES_MONTH_RECALC
 AND CAL_ANT.GPES_MONTH_BGN_DT >= $TC-Period-Begin_From AND CAL_ANT.GPES_MONTH_BGN_DT <= $TC-Period-Begin_From
  AND SSTC_ANT.SLICE_BGN_DT >= $Hire-Dt

GROUP BY SSTC_ANT.EMPLID, SSTC_ANT.GPES_YEAR_RECALC, SSTC_ANT.GPES_MONTH_RECALC, SSTC_ANT.GPES_SSTC_PAYMNT,
         SSTC_ANT.GPES_SSTC_ELEMENT, SSTC_ANT.CONTRACT_NUM
ORDER BY SSTC_ANT.EMPLID, SSTC_ANT.GPES_YEAR_RECALC DESC, SSTC_ANT.GPES_MONTH_RECALC DESC,
         SSTC_ANT.GPES_SSTC_PAYMNT DESC, SSTC_ANT.GPES_SSTC_ELEMENT

End-SELECT
         if #Ctz-Days=0
           let #Ctz-Days=#Ctz-Days_L03
         end-if
      PUT #Prev-Year   #Prev-Month   #Ctz-Days   #Total-CC   #Total-Dsmpl
      INTO Bases-AntIT(#Bases-AntIT-Row)
      Let #Bases-AntIT-Row = #Bases-AntIT-Row + 1

    end-if !$JOB-Full-Part-Time = 'F'
  end-if  

  Do Print-Contribution-Ln-Ant-IT

end-procedure


!************************************************************************
! Procedure Print-Contribution-bases-IT
!************************************************************************
begin-procedure Print-Contribution-bases-IT
#debug do Fin-Debug-Msg('Print-Contribution-bases-IT')

  do Format-DateTime($Termination-Dt, $out, {DEFCMP}, '', '')
  let #From-Year = substr($out, 1, 4)
  let #From-Month = substr($out, 5, 2)
  let #Prev-Year = #From-Year
  let #Prev-Month = #From-Month
  let #Prev_GPES_MONTH=#From-Month
  let #Prev_GPES_YEAR=#From-Year

  do Format-DateTime($Hire-Dt, $out, {DEFCMP}, '', '')
  let #To-Year =  substr($out, 1, 4)
  let #To-Month = substr($out, 5, 2)
  let #To-Day = substr($out, 7, 2)

  let #Total-CC = 0
  let #Total-Dsmpl = 0
  let #OT_hrs = 0
  let #denormalzdCP = 0
  let #OTbetCeilings = 0
  let #Ctz-Days = 0
  let #Ctz-Days_L03=0
  let #Init-Natural-Days = 1
  let #Empl-Total-CC = 0
  let #Empl-Total-Dsmpl = 0
  let #Empl-Ctz-Days = 0
  let #Vactn-Total-CC = 0
  let #Vactn-Total-Dsmpl = 0
  let #Vactn-Ctz-Days = 0
  let $Prev-sstc-Paymnt = ' '
  let #Natural-Days = 0
  let #Contributing-Days = 0

  let $Forced-Exit-Flag = ''
  let $var = 'N'

  let $Term-From-Dt = ''
  let $Term-To-Dt   = ''

  !*********** 180 DAYS  ***********!

  let #Table-Row = {TABLE-ROWS} - 8

let $sql-statement = 'GPESFNIT.SQR,Print-Contribution-bases-IT,Select,PS_GPES_SSTC_RS_VW'
Begin-SELECT on-error=SQL-Error
SSTC1.EMPLID
SSTC1.GPES_YEAR_RECALC
SSTC1.GPES_MONTH_RECALC
SSTC1.GPES_YEAR
SSTC1.GPES_MONTH
SSTC1.GPES_SSTC_ELEMENT
SSTC1.GPES_SSTC_PAYMNT
MIN (SSTC1.CONTRACT_NUM ) &SSTC1.CONTRACT_NUM 
  ! In case of litigation salaries we find L00 & L02 records in the table that make to print
  ! two lines in the report for the same month. We just want to print one line with the sum of
  ! L00 & L02 records for a month.
  let $sstc-Paymnt = &SSTC1.GPES_SSTC_PAYMNT
  if &SSTC1.GPES_SSTC_PAYMNT <> 'L13'
    let $sstc-Paymnt = 'L00'
  end-if

SUM(SSTC1.GPES_SSTC_DAYS)    &SSTC1.GPES_SSTC_DAYS
SUM(SSTC1.GPES_SSTC_AMOUNT)  &SSTC1.GPES_SSTC_AMOUNT

   let $Forced-Exit-Flag = 'N'

   if #Prev-Month <> &SSTC1.GPES_MONTH_RECALC
       or #Prev-Year <> &SSTC1.GPES_YEAR_RECALC
       or $Prev-sstc-Paymnt <> $sstc-Paymnt
     !if $Prev-sstc-Paymnt = ' '
     !  !Initialization for the first loop
     !  let $Prev-sstc-Paymnt  =  $sstc-Paymnt
     !  let #Prev-Year         =  &SSTC1.GPES_YEAR_RECALC
     !  let #Prev-Month        =  &SSTC1.GPES_MONTH_RECALC
     !else
       if #Ctz-Days <> 0 or #Ctz-Days_L03 <> 0
   
    if #Ctz-Days = 0
    let #Ctz-Days = #Ctz-Days_L03
    end-if
   
         if #Table-Row > {TABLE-ROWS} - 2
           Do Print-Vacations-Ln
           New-Page 1
           Do Print-Certificate-IT
           Do Print-Contribution-Bases-AntIT
           let #Table-Row = {TABLE-ROWS} - 8
         end-if

         if $Prev-sstc-Paymnt <> 'L13'
           Do Print-Contribution-Ln-IT

           let #Contributing-Days = #Contributing-Days + #Ctz-Days
           #debugd show 'Contributing Days Count: ' #Contributing-Days
           if #Contributing-Days >= 180
             let $Forced-Exit-Flag = 'Y'
             EXIT-SELECT
           end-if
         end-if
       end-if

       let #Prev-Year        = &SSTC1.GPES_YEAR_RECALC
       let #Prev-Month       = &SSTC1.GPES_MONTH_RECALC
       let  #Prev_GPES_YEAR=&SSTC1.GPES_YEAR
       let  #Prev_GPES_MONTH=&SSTC1.GPES_MONTH
       let #Total-CC         = 0
       let #Total-Dsmpl      = 0
       let #Ctz-Days         = 0
       let #Ctz-Days_L03 =0 
       let $Prev-sstc-Paymnt = $sstc-Paymnt
       let #OT_hrs           = 0
       let #denormalzdCP     = 0
       let #OTbetCeilings    = 0
     !end-if
   end-if

   let $mult_contract = &SSTC1.CONTRACT_NUM

   #debugd show 'TC Payment/Element:       ' &SSTC1.GPES_SSTC_PAYMNT '/' &SSTC1.GPES_SSTC_ELEMENT
   #debugd show 'Year Recalc/Month Recalc: ' &SSTC1.GPES_YEAR_RECALC '/' &SSTC1.GPES_MONTH_RECALC
   #debugd show 'TC contributing days:     ' &SSTC1.GPES_SSTC_DAYS
   #debugd show 'TC Base Amount:           ' &SSTC1.GPES_SSTC_AMOUNT

   !** Procedure to get the company code of the employee's contract id***!
   do GetEmployeeContractCompany
   #debugd show 'Job/contract company: ' $CMP '/' $EmpContractCompany
   #debugd show 'Job/FAN rslt table contracts: ' &JOB.CONTRACT_NUM '/' &SSTC1.CONTRACT_NUM
   #debugd show ' '

      !**1648916000- Contributions pertaining to last 180days (across contracts) for same company as the TER one**!
   if $EmpContractCompany = $CMP
     if &SSTC1.GPES_SSTC_ELEMENT = 'BA01' or &SSTC1.GPES_SSTC_ELEMENT = 'BA21'
       if &SSTC1.GPES_SSTC_PAYMNT = 'L13'
         !**1648916000 - Vacation paid days should be of the last contract**!
         !** &JOB.CONTRACT_NUM - variable has the last contract id when the employee was terminated**!
         !IF &SSTC1.CONTRACT_NUM = &JOB.CONTRACT_NUM
           let #Vactn-Total-CC =  #Vactn-Total-CC +  &SSTC1.GPES_SSTC_AMOUNT
         !END-IF
       else
         let #Total-CC =  #Total-CC + &SSTC1.GPES_SSTC_AMOUNT
       end-if
     end-if
     if &SSTC1.GPES_SSTC_ELEMENT = 'BA02' or &SSTC1.GPES_SSTC_ELEMENT = 'BA22'
         or &SSTC1.GPES_SSTC_ELEMENT = 'BA42'
       if &SSTC1.GPES_SSTC_PAYMNT = 'L13'
         !**1648916000 - Vacation paid days should be of the last contract**!
         !** &JOB.CONTRACT_NUM - variable has the last contract id when the employee was terminated**!
         !IF &SSTC1.CONTRACT_NUM = &JOB.CONTRACT_NUM
           let #Vactn-Total-Dsmpl = #Vactn-Total-Dsmpl +  &SSTC1.GPES_SSTC_AMOUNT
          if &SSTC1.GPES_YEAR_RECALC = &SSTC1.GPES_YEAR AND &SSTC1.GPES_MONTH_RECALC = &SSTC1.GPES_MONTH
           let #Vactn-Ctz-Days    = #Vactn-Ctz-Days +  &SSTC1.GPES_SSTC_DAYS
           let #Contributing-Days =  #Contributing-Days +  &SSTC1.GPES_SSTC_DAYS
           #debugd show 'Contributing Days Count (L13): ' #Contributing-Days
          end-if
         !END-IF
       else
         let #Total-Dsmpl = #Total-Dsmpl +  &SSTC1.GPES_SSTC_AMOUNT
         if $sstc-Paymnt = $Prev-sstc-Paymnt and (&SSTC1.GPES_SSTC_PAYMNT <> 'L03' AND &SSTC1.GPES_SSTC_PAYMNT <> 'L09' 
          AND &SSTC1.GPES_SSTC_PAYMNT <> 'L91'
             AND &SSTC1.GPES_SSTC_PAYMNT <> 'L90')
           let #Ctz-Days = #Ctz-Days +  &SSTC1.GPES_SSTC_DAYS
         end-if
 
         if $sstc-Paymnt = $Prev-sstc-Paymnt 
           and #Prev_GPES_MONTH=&SSTC1.GPES_MONTH and #Prev_GPES_YEAR=&SSTC1.GPES_YEAR 
           and  (&SSTC1.GPES_SSTC_PAYMNT = 'L03'
            or &SSTC1.GPES_SSTC_PAYMNT = 'L09' or &SSTC1.GPES_SSTC_PAYMNT = 'L90' or &SSTC1.GPES_SSTC_PAYMNT = 'L91')
                              let #Ctz-Days_L03 = #Ctz-Days_L03 +  &SSTC1.GPES_SSTC_DAYS
                              
         end-if
 
 
 
       end-if
     end-if

     #debugd show 'Agregate CC/CP Base amount: ' #Total-CC '/' #Total-Dsmpl
     #debugd show 'Agregate contributing days: ' #Ctz-Days
     #debugd show 'Agregate contributing days:  #Ctz-Days_L03'  #Ctz-Days_L03
     #debugd show '  '

     !** refer incident id:1649774001 for explantaions on the below code **!
     if &SSTC1.GPES_SSTC_ELEMENT = 'BA10' or &SSTC1.GPES_SSTC_ELEMENT = 'BA11'
       let #OT_hrs = #OT_hrs + &SSTC1.GPES_SSTC_AMOUNT
     End-if
   end-if
       
FROM PS_GPES_SSTC_RS_VW  SSTC1
,PS_CONTRACT_DATA CWKD
WHERE SSTC1.EMPLID = $Select-EMPLID
 AND  SSTC1.EMPL_RCD = #Select-EMPL-RCD
AND  SSTC1.EMPLID = CWKD.EMPLID
  AND  SSTC1.CONTRACT_NUM = CWKD.CONTRACT_NUM
  AND  SSTC1.GPES_SSTC_ELEMENT IN ('BA01','BA02','BA21','BA22','BA42','BA10','BA11')
  AND  SSTC1.SLICE_BGN_DT >= $Hire-Dt
  AND ((SSTC1.SLICE_BGN_DT <= $Termination-Dt AND &A.GPES_EMPLOYEE_TYPE = 'I') 
          OR (SSTC1.SLICE_BGN_DT <= $Select-ASOFDATE AND &A.GPES_EMPLOYEE_TYPE = 'A' ))
  AND (((SSTC1.GPES_YEAR_RECALC = #From-Year AND  SSTC1.GPES_MONTH_RECALC <= #From-Month) OR SSTC1.GPES_YEAR_RECALC < #From-Year)
          AND ((SSTC1.GPES_YEAR_RECALC = #To-Year AND  SSTC1.GPES_MONTH_RECALC >= #To-Month) OR SSTC1.GPES_YEAR_RECALC > #To-Year)
  OR  (SSTC1.GPES_YEAR = #From-Year AND SSTC1.GPES_MONTH = #From-Month AND SSTC1.GPES_SSTC_PAYMNT = 'L13'))
 
GROUP BY SSTC1.EMPLID, SSTC1.GPES_YEAR_RECALC, SSTC1.GPES_MONTH_RECALC, SSTC1.GPES_YEAR, SSTC1.GPES_MONTH, SSTC1.GPES_SSTC_PAYMNT, SSTC1.GPES_SSTC_ELEMENT, CWKD.CONTRACT_NUM

ORDER BY SSTC1.EMPLID, SSTC1.GPES_YEAR_RECALC DESC, SSTC1.GPES_MONTH_RECALC DESC,
         SSTC1.GPES_SSTC_PAYMNT DESC, SSTC1.GPES_SSTC_ELEMENT
End-SELECT

   #debugd show ''
   #debugd show '******************************PRINT CONTRIBUTION BASES WHERE CLAUSE************************'
   #debugd show 'FROM PS_GPES_SSTC_RS_VW  SSTC1'
   #debugd show '    ,PS_CONTRACT_DATA CWKD'
   #debugd show 'WHERE SSTC1.EMPLID = ''' $Select-EMPLID ''''
   #debugd show 'AND  SSTC1.EMPL_RCD = ' #Select-EMPL-RCD
   #debugd show ' AND SSTC1.EMPLID = CWKD.EMPLID'
   #debugd show ' AND SSTC1.CONTRACT_NUM = CWKD.CONTRACT_NUM'
   #debugd show 'AND  SSTC1.GPES_SSTC_ELEMENT IN (''BA01'',''BA02'',''BA21'',''BA22'',''BA42'',''BA10'',''BA11'')'
   #debugd show 'AND  SSTC1.SLICE_BGN_DT >= ''' $Hire-Dt ''''
   #debugd show 'AND ((SSTC1.SLICE_BGN_DT <= ''' $Termination-Dt ''' AND ''' &A.GPES_EMPLOYEE_TYPE ''' = ''I'')'
   #debugd show '        OR (SSTC1.SLICE_BGN_DT <= ''' $Select-ASOFDATE ''' AND ''' &A.GPES_EMPLOYEE_TYPE ''' = ''A''))'
   #debugd show 'AND (((SSTC1.GPES_YEAR_RECALC = ' #From-Year ' AND  SSTC1.GPES_MONTH_RECALC <= ' #From-Month ') OR SSTC1.GPES_YEAR_RECALC < ' #From-Year ')'
   #debugd show '    AND ((SSTC1.GPES_YEAR_RECALC = ' #To-Year ' AND  SSTC1.GPES_MONTH_RECALC >= ' #To-Month ') OR SSTC1.GPES_YEAR_RECALC > ' #To-Year ')'
   #debugd show ' OR  (SSTC1.GPES_YEAR = ' #From-Year ' AND SSTC1.GPES_MONTH = ' #From-Month ' AND GPES_SSTC_PAYMNT = ''L13''))'
   #debugd show '******************************PRINT CONTRIBUTION BASES WHERE CLAUSE************************'
   #debugd show ''
   
  #debugd show 'Year/Month From (Backward); ' #From-Year '/' #From-Month
  #debugd show 'Employee ID:    ' $Select-EMPLID
  #debugd show 'Empl Rcd#:      ' #Select-EMPL-RCD
  #debugd show 'Termination Dt: ' $Termination-Dt

  #debugd show 'Forced Exit/#Table-row/TABLE-ROWS: ' $Forced-Exit-Flag '/' #Table-Row '/' {TABLE-ROWS}
  If $Forced-Exit-Flag = 'N'
    if #Ctz-Days <> 0 or #Ctz-Days_L03  <> 0
    if #Ctz-Days = 0
    let #Ctz-Days = #Ctz-Days_L03
    end-if
 
      if #Table-Row > {TABLE-ROWS} - 2
        Do Print-Vacations-Ln
        New-Page 1
        Do Print-Certificate-IT
        Do Print-Contribution-Bases-AntIT
        let #Table-Row = {TABLE-ROWS} - 8
      end-if
      Do Print-Contribution-Ln-IT
    end-if
  end-if

  Do Print-Vacations-Ln

  ! Print Vacations related data total
  alter-printer point-size=8 font={COURIER_NEW}
  
  Do Format-Number(#Vactn-Ctz-Days, $Vactn-Ctz-Days-Print, '999')
  let $Out = lpad($Vactn-Ctz-Days-Print, 3, ' ')
  print $Vactn-Ctz-Days-Print                  ( #Vactn-Line, 55)
  Do Format-Number(#Vactn-Total-CC, $out, '999,999.99')
  let $Out = lpad($out, 12, ' ')
  print $Out                                   ( #Vactn-Line, 71)
  Do Format-Number(#Vactn-Total-Dsmpl, $out, '999,999.99')
  let $Out = lpad($out, 12, ' ')
  print $Out                                   ( #Vactn-Line, 99)

  ! Print employee totals
  let #Empl-Ctz-Days = #Empl-Ctz-Days + #Vactn-Ctz-Days
  let #Empl-Total-CC = #Empl-Total-CC + #Vactn-Total-CC
  let #Empl-Total-Dsmpl = #Empl-Total-Dsmpl + #Vactn-Total-Dsmpl

  print 'TOTALES' ( #Totals-Line , 43)

  Do Format-Number(#Empl-Ctz-Days, $out, '999')
  let $Out = lpad($out, 3, ' ')
  print $out                                   ( #Totals-Line, 55)
  Do Format-Number(#Empl-Total-CC, $out, '999,999.99')
  let $Out = lpad($out, 12, ' ')
  print $Out                                   ( #Totals-Line, 71)
  Do Format-Number(#Empl-Total-Dsmpl, $out, '999,999.99')
  let $Out = lpad($out, 12, ' ')
  print $Out                                   ( #Totals-Line, 99)

end-procedure


!************************************************************************
! Procedure Print-Vacations-Ln
!************************************************************************
begin-procedure Print-Vacations-Ln
  #debug do Fin-Debug-Msg('Print-Vacations-Ln')

  alter-printer point-size=7 font={ARIAL}
  Let $variable = 'Tiene días de vacaciones anuales retribuidas y no disfrutadas?(3):  '
  !|| $var || '                 Número de días:'
  print $variable (#Vactn-days-ln  , {EMPL_VACN_DAYS_FLD})

  #define VAC_NDFRTDS_CHECK1_BOX   52
  #define VAC_NDFRTDS_CHECK1_FLD   55
  #define VAC_NDFRTDS_CHECK2_BOX   59
  #define VAC_NDFRTDS_CHECK2_FLD   62
  graphic (,{VAC_NDFRTDS_CHECK1_BOX},2) box 1
  graphic (,{VAC_NDFRTDS_CHECK2_BOX},2) box 1
  print 'Sí'                                     ( , {VAC_NDFRTDS_CHECK1_FLD})
  print 'No'                                     ( , {VAC_NDFRTDS_CHECK2_FLD})
  print 'Núm. días:'                             ( , 67)
  graphic (,76,5) horz-line
  If $Empl-Terminated = 'Y'
    If #Vactn-Ctz-Days <> 0
      print 'X'                                  ( , {VAC_NDFRTDS_CHECK1_BOX})
    else
      print 'X'                                  ( , {VAC_NDFRTDS_CHECK2_BOX})
    end-if

    Do Format-Number(#Vactn-Ctz-Days, $Vactn-Ctz-Days-Print, '999')
    let $Vactn-Ctz-Days-Print = ltrim($Vactn-Ctz-Days-Print, ' ')
    let #Vactn-days-col = {EMPL_VACN_DAYS_FLD} + 75
    print $Vactn-Ctz-Days-Print                    (#Vactn-days-ln, #Vactn-days-col)
  end-if

  let #desde = {EMPL_VACN_DAYS_FLD} + 81
  let #termination_dt = {EMPL_VACN_DAYS_FLD} + 87
  let #hasta = {EMPL_VACN_DAYS_FLD} + 99
  let #final_dt = {EMPL_VACN_DAYS_FLD} + 105
  print 'Desde:'                                 ( , #desde)
  graphic (,#termination_dt,9) horz-line
  print 'Hasta:'                                 ( , #hasta)
  graphic (,#final_dt,9) horz-line

  if #Vactn-Ctz-Days <> 0
    if $Term-From-Dt = ''
      let $var = 'S'
      do Convert-To-DTU-Date($Termination-Dt, $Term-From-Dt)
      do dtu-add-days($Term-From-Dt , #Vactn-Ctz-Days , $Term-To-Dt)
      do dtu-add-days($Term-From-Dt , 1 , $Term-From-Dt)
      do Convert-From-DTU-Date($Term-From-Dt, $Term-From-Dt)
      do Format-DateTime($Term-From-Dt, $Term-From-Dt-Print, {DEFDMY}, '', '')
      do Convert-From-DTU-Date($Term-To-Dt, $Term-To-Dt)
      do Format-DateTime($Term-To-Dt, $Term-To-Dt-Print, {DEFDMY}, '', '')
    end-if

    print $Term-From-Dt-Print                   ( , #termination_dt)
    print $Term-To-Dt-Print                     ( , #final_dt)
  end-if

  alter-printer point-size=5 font={ARIAL}
  set-color print-text-foreground = ('black')
  print 'Por vacaciones anuales,retribuidas y no disfrutadas antes de la fecha de cese en la empresa(9)'  (#vert-line2,2)
 ! print 'antes de la fecha de cese en la empresa(9)'            (+1,2)
  set-color print-text-foreground = ('black')

end-procedure


!************************************************************************
! Procedure Print-Contribution-Ln-Ant-IT
!************************************************************************
begin-procedure Print-Contribution-Ln-Ant-IT
#debug do Fin-Debug-Msg('Print-Contribution-Ln-Ant-IT')

  alter-printer point-size=8 font={COURIER_NEW}
  
  let #Prev-Year-IT   = #Prev-Year
  let #Prev-Month-IT  = #Prev-Month
  let #Ctz-Days-IT    = #Ctz-Days
  let #Total-CC-IT    = #Total-CC
  let #Total-Dsmpl-IT = #Total-Dsmpl

  Let #x = 0
  While #x < #Bases-AntIT-Row

    GET #Prev-Year   #Prev-Month   #Ctz-Days   #Total-CC   #Total-Dsmpl
    FROM Bases-AntIT(#x)
    #debugd show 'Retrieving contrib base AntIT: ' #x
    Let #x = #x + 1

    If $Naturual-Days-Count = 'Y'
      #Debugd show 'Year/Month/Day: ' #Prev-Year '/' #Prev-Month '/01'
      let $Month-Bgn-Dt-CMP = to_char(#Prev-Year) || lpad(to_char(#Prev-Month), 2, '0') || '01'
      let $In-DTU = to_char(#Prev-Year) || '-' || to_char(#Prev-Month) || '-01'
      Do DTU-Month-End($In-DTU, $Month-End-Dt-DTU)
      Do Convert-From-DTU-Date($Month-End-Dt-DTU, $Month-End-Dt)
      do Format-DateTime($Month-End-Dt, $Month-End-Dt-CMP, {DEFCMP}, '', '')
      do Format-DateTime($Hire-Dt, $Hire-Dt-CMP, {DEFCMP}, '', '')
      #Debugd show 'Month BgnDt: ' $Month-Bgn-Dt-CMP ' Month EndDt: ' $Month-End-Dt-CMP ' Hire Dt: ' $Hire-Dt-CMP
      If $Month-Bgn-Dt-CMP < $Hire-Dt-CMP
          and $Hire-Dt-CMP <= $Month-End-Dt-CMP
        do Convert-To-DTU-Date($Hire-Dt, $TC-Period-Begin)
      Else
        let $TC-Period-Begin = to_char(#Prev-Year) || '-' || to_char(#Prev-Month) || '-01'
      End-If
      do DTU-Month-End($TC-Period-Begin, $TC-Period-End)
      do dtu-diff-days($TC-Period-Begin, $TC-Period-End, #Natural-Days-Wk)
      #Debugd show 'Natural days: ' #Natural-Days-Wk ' )' $TC-Period-Begin '-' $TC-Period-End ')'
      let #Natural-Days-Wk = #Natural-Days-Wk + 1

      #debugd show 'Converting dates...'
      do Convert-From-DTU-Date($TC-Period-Begin, $Month-Bgn-Dt)
      do Convert-From-DTU-Date($TC-Period-End, $Month-End-Dt)
      #debugd show 'Contrib by min. base bgn/end dates: ' $Month-Bgn-Dt '/' $Month-End-Dt

      Let #Ctz-B-Min-Days = 0

      If $CLI_VR_OPC_CLC_BRD <> 'A'
        let $sql-statement = 'GPESFNIT.SQR,Print-Contribution-Ln-Ant-IT,Select,PS_GP_PYE_PRC_STAT PPRC'
Begin-SELECT on-error=SQL-Error
SUM(A.CALC_RSLT_VAL)    &A.CTZ_B_MIN_DAYS
      Let #Ctz-B-Min-Days = &A.CTZ_B_MIN_DAYS

FROM PS_GP_PYE_PRC_STAT PPRC
   , PS_GP_PIN B
   , PS_GP_RSLT_ACUM A
WHERE PPRC.EMPLID = $Select-EMPLID
  AND PPRC.EMPL_RCD = #Select-EMPL-RCD
  AND PPRC.EMPLID = A.EMPLID
  AND PPRC.EMPL_RCD = A.EMPL_RCD
  AND PPRC.CAL_RUN_ID = A.CAL_RUN_ID
  AND PPRC.GP_PAYGROUP = A.GP_PAYGROUP
  AND PPRC.CAL_ID = A.CAL_ID
  AND PPRC.ORIG_CAL_RUN_ID = A.ORIG_CAL_RUN_ID
  AND PPRC.CALC_TYPE = 'P'
  AND PPRC.RSLT_VER_NUM = (SELECT MAX(RSLT_VER_NUM) FROM PS_GP_PYE_PRC_STAT
                            WHERE EMPLID = PPRC.EMPLID 
                              AND EMPL_RCD = PPRC.EMPL_RCD 
                              AND GP_PAYGROUP = PPRC.GP_PAYGROUP 
                              AND CAL_ID = PPRC.CAL_ID 
                              AND ORIG_CAL_RUN_ID = PPRC.ORIG_CAL_RUN_ID)
  AND PPRC.RSLT_REV_NUM = (SELECT MAX(RSLT_REV_NUM) FROM PS_GP_PYE_PRC_STAT
                            WHERE EMPLID = PPRC.EMPLID 
                              AND EMPL_RCD = PPRC.EMPL_RCD 
                              AND GP_PAYGROUP = PPRC.GP_PAYGROUP 
                              AND CAL_ID = PPRC.CAL_ID 
                              AND ORIG_CAL_RUN_ID = PPRC.ORIG_CAL_RUN_ID)
  AND B.PIN_CODE ='AUS AC D CTZ B MIN ESP'
  AND A.PIN_NUM = B.PIN_NUM
  AND A.SLICE_BGN_DT >= $Month-Bgn-Dt AND A.SLICE_END_DT <= $Month-End-Dt
End-SELECT

        #debugd show 'Contrib by min. base days: ' #Ctz-B-Min-Days
      End-If
      Let #Ctz-days = #Natural-Days-Wk - #Ctz-B-Min-Days
    End-If

    if (#Ctz-Days <> 0 or #Ctz-Days_L03 <> 0) and #Total-CC <> 0 and #Total-Dsmpl <> 0
       if #Ctz-Days = 0
       let #Ctz-Days =#Ctz-Days_L03
     end-if
   !if #prev_month_imp <> #Prev-Month
      print #Prev-Year                                     (#linea_ant_it, 4)    EDIT '9999'
      print #Prev-Month                                    (  , 11)              EDIT '99'
      Do Format-Number(#Ctz-Days, $out, '999')
      let $Out = lpad($out, 3, ' ')
      print $out                                           (  , 19)
      Do Format-Number(#Total-CC, $out, '999,999.99')
      let $Out = lpad($out, 11, ' ')
      print $Out                                           (  , 36)
      Do Format-Number(#Total-Dsmpl, $out, '999,999.99')
      let $Out = lpad($out, 11, ' ')
      print $Out                                           (  , 63)
    !  let #prev_month_imp = #Prev-Month
      let #linea_ant_it = #linea_ant_it + {DFLT_LINE_HEIGHT_ANT}
      !end-if
    end-if

  end-while
  
  let #Prev-Year   = #Prev-Year-IT
  let #Prev-Month  = #Prev-Month-IT
  let #Ctz-Days    = #Ctz-Days-IT
  let #Total-CC    = #Total-CC-IT
  let #Total-Dsmpl = #Total-Dsmpl-IT

end-procedure


!************************************************************************
! Procedure Print-Contribution-Ln-IT
!************************************************************************
begin-procedure Print-Contribution-Ln-IT
#debug do Fin-Debug-Msg('Print-Contribution-Ln-IT')

  alter-printer point-size=8 font={COURIER_NEW}
  
  !** refer incident id:1649774001 for explantaions on the below code **!
  !** The below check is made only if the employee has OT earnings **!
  If #OT_hrs > 0
   let #denormalzdCP = #Total-CC + #OT_hrs
   if #denormalzdCP > #Total-Dsmpl
     let #OTbetCeilings = #OT_hrs - (#denormalzdCP - #Total-Dsmpl)
   else
     let #OTbetCeilings = #OT_hrs
   End-if
   let #Total-Dsmpl = #Total-Dsmpl - #OTbetCeilings
  End-if


  If #Contributing-Days + #Ctz-Days >= 180
    !Active employee filter criteria contributing base proration only for first month
    Or (&A.GPES_EMPLOYEE_TYPE = 'A' and #Init-Natural-Days = 1       !Active employees filter criteria..
        and #Prev-Year = #From-Year AND #Prev-Month = #From-Month)   !only for first month
    !Active employee filter criteria contributing base proration

    If &A.GPES_EMPLOYEE_TYPE = 'A' and #Init-Natural-Days = 1
      let $SchDays-Last-Month-PdEnd = $Select-ASOFDATE    !Sets variable for procedure Get-Schedule-Days-Last-Month

      !Carefull when hiring/terminating in the same month
      If #From-Year = #To-Year and #From-Month = #To-Month
        do Convert-To-DTU-Date($Hire-Dt, $TC-Period-Begin-DTU)
      else
        let $TC-Period-Begin-DTU = to_char(#Prev-Year) || '-' || to_char(#Prev-Month) || '-01'
      End-if

      Do DTU-Month-End($TC-Period-Begin-DTU, $TC-Period-End-DTU)
      Do Convert-From-DTU-Date($TC-Period-Begin-DTU, $TC-Period-Begin)
      Do Convert-From-DTU-Date($TC-Period-End-DTU, $TC-Period-End)
      #debugd show 'Last Month Begin/End Dates: ' $TC-Period-Begin '/' $TC-Period-End
      Do Get-Full-Part-Time-Last-Month     !Fills $FPLM-Full-Part-Time, $Contract-Bgn-Dt and $Contract-End-Dt

      let $OVRD-Bgn-Dt = $Contract-Bgn-Dt
      let $OVRD-End-Dt = $Contract-End-Dt
      Do Get-WorkDay-Reduction

      do Convert-To-DTU-Date($Select-ASOFDATE, $Select-ASOFDATE-DTU)
      do dtu-diff-days($TC-Period-Begin-DTU, $TC-Period-End-DTU, #diff-month-day)
      do dtu-diff-days($TC-Period-Begin-DTU, $Select-ASOFDATE-DTU, #diff-day)
      let #diff-month-day = #diff-month-day + 1
      let #diff-day       = #diff-day       + 1
      #debugd show 'Month days: ' #diff-month-day ' As Of Date days: ' #diff-day
      If #diff-month-day = #diff-day
        let #Partial-Days = #Ctz-Days
      Else
        let #Partial-Days = #diff-day
        if $FPLM-Full-Part-Time = 'P' and $Workday-Reduction <> 'WKR'
          Do Get-Schedule-Days-Last-Month_Main
          let #Partial-Days = #LastMonthWorkDays_Total
        end-if
      End-If
      #debugd show 'Partial Contribution days(1): ' #Partial-Days

    else
      Let #Partial-Days = #Ctz-Days - (#Contributing-Days + #Ctz-Days - 180)
    end-if

    #debugd show 'Partial Contribution days: ' #Partial-Days
    #debugd show 'Base CC proration:         ' #Total-CC '/' #Ctz-Days '*' #Partial-Days '='
    Let #Total-CC = round((#Total-CC / #Ctz-Days) * #Partial-Days, 2)
    #debugd show '.......................... ' #Total-CC
    let #Total-Dsmpl = round((#Total-Dsmpl / #Ctz-Days) * #Partial-Days, 2)
    Let #Ctz-Days = #Partial-Days
  
    #debugd show 'Contributing Days (Prorated): ' #Ctz-Days
  End-if

  let #Init-Natural-Days = 0

  
  If #Ctz-Days > 0
      let #Empl-Ctz-Days    =  #Empl-Ctz-Days +  #Ctz-Days
      let #Empl-Total-CC    =  #Empl-Total-CC + #Total-CC
      let #Empl-Total-Dsmpl =  #Empl-Total-Dsmpl +  #Total-Dsmpl

      #debugd show 'Printing line... ' #linea_ant_b1

      print #Prev-Year                                        (#linea_ant_b1, 8)    EDIT '9999'
      print #Prev-Month                                       (  , 31)   EDIT '99'
      Do Format-Number(#Ctz-Days, $out, '999')
      let $Out = lpad($out, 3, ' ')
      print $out                                              (  , 55)
      Do Format-Number(#Total-CC, $out, '999,999.99')
      let $Out = lpad($out, 11, ' ')
      print $Out                                              (  , 72)
      Do Format-Number(#Total-Dsmpl, $out, '999,999.99')
      let $Out = lpad($out, 11, ' ')
      print $Out                                              (  , 100)

      let #linea_ant_b1 = #linea_ant_b1 + {DFLT_HDR_HEIGHT}
      let #Table-Row = #Table-Row + 1
  end-if

end-procedure

