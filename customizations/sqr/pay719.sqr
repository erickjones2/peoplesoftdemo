!******************************************
!  PAY719:  Garnishment Proration Report  *
!******************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:15:42:27                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY719' to $ReportID
  move 'Garnishment Proration Report' to $ReportTitle

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Calendar-Year-Id
  do Payroll-Report-Initialization
end-procedure

begin-heading 11
  #Include 'stdhdg01.sqc'

  print 'Court Name'          (+2,1)
  print $Court_Name           (0,13)
  print 'State'               (+1,1)
  print $State_Garn_Prorate   (0,13)

  print 'Name'                (+2,1)
  print 'Prorate'             (0,40)
  print 'GarnID'              (0,53)
  print 'Support'             (0,66)
  print 'Court Document IDs'  (0,75)
  print 'Pay End'             (0,101)
  print 'Disposable'          (0,116)
  print 'Unprorated'          (0,131)
  print 'Prorated'            (0,148)
  print ' Rule '              (+1,40)
  print 'Type'                (0,66)
  print ' Date '              (0,101)
  print ' Earnings'           (0,116)
  print '  Amount'            (0,131)
  print ' Amount'             (0,148)

end-heading


begin-procedure Report


If $SlctRunID <> '*'
  do Get-PayRun-Data
else
  do Get-Industry-From-Company($SlctCompany,$SlctPayEndDt,$Industry_Test,$Sector_Test)

  if $Industry_Test = 'GOVT' and $Sector_Test =  'USFG'
     do Select-Report-Federal
  else
     do Select-Report-Core
  end-if

end-if
end-procedure

begin-procedure Get-PayRun-Data
begin-SELECT
A1.COMPANY
A1.PAYGROUP
A1.PAY_END_DT
  move &A1.Company    to $SlctCompany
  move &A1.PayGroup   to $SlctPayGroup
  move &A1.Pay_End_Dt to $SlctPayEndDt

  do Get-Industry-From-Company($SlctCompany,$SlctPayEndDt,$Industry_Test,$Sector_Test)

  if $Industry_Test = 'GOVT' and $Sector_Test =  'USFG'
     do Select-Report-Federal
  else
     do Select-Report-Core
  end-if


FROM  PS_PAY_CALENDAR A1
WHERE A1.RUN_ID = $SlctRunID
end-SELECT
end-procedure

begin-procedure Select-Report-Core

begin-SELECT
B.COURT_NAME            () on-break print=never level=1 Procedure = Process-NewPage
  move &B.Court_Name to $Court_Name
A.STATE_GARN_PRORATE    () on-break print=never level=2 Procedure = Process-NewPage
  move &A.State_Garn_Prorate to $State_Garn_Prorate
C.NAME                  () on-break print=never
B.EMPLID                () on-break print=never level=4 After = Emp-Subtotal
A.COMPANY
A.PAY_END_DT
A.GARNID
A.GARN_DE_AMT
A.GARN_DED_LIM_TYPE
A.DEDUCT_AMT
A.GARN_PRORATE_RL_ID
A.GARN_SUPPORT_TYPE
B.GARN_TYPE
B.COURT_DOC_ID
B.COURT_DOC_ID2
B.GARN_DED_PCT
B.GARN_DED_AMT
B.GARN_VAR_FREQUENCY

  move 'GARN_SUPPORT_TYPE'   to $FieldName
  move &A.Garn_Support_Type  to $FieldValue
  do Read-Translate-Table
  move $XlatShortName        to $Support_Type

  move 'GARN_VAR_FREQUENCY'  to $FieldName
  move &B.Garn_Var_Frequency to $FieldValue
  do Read-Translate-Table
  move $XlatShortName        to $Var_Frequency

  print &C.Name                      (+1,1)
  print &A.Garn_Prorate_Rl_Id        (0,40)
  print &A.Garnid                    (0,53)
  print $Support_Type                (0,66)
  print &B.Court_Doc_Id              (0,75)

  do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out                   (0,101,10)

  do Format-Number(&A.Garn_De_Amt, $out, 'B9999,999.99')
  print $out                         (0,114)

  let #Unprorated_Amt = (&A.Garn_De_Amt * &B.Garn_Ded_Pct)/100 + &B.Garn_Ded_Amt
  do Format-Number(#Unprorated_Amt, $out, 'B9999,999.99')
  print $out                         (0,129)

  do Format-Number(&A.Deduct_Amt, $out, 'B9999,999.99')
  print $out                         (0,144)

  let #Emp_Unprorated_Tot = #Emp_Unprorated_Tot + #Unprorated_Amt
  let #Emp_Prorated_Tot   = #Emp_Prorated_Tot   + &A.Deduct_Amt

FROM  PS_PAY_GARNISH   A,
      PS_GARN_SPEC     B,
      PS_NAMES         C,
      PS_PAY_CHECK     D
WHERE A.COMPANY          = $SlctCompany
  AND A.PAYGROUP         = $SlctPayGroup
  AND A.PAY_END_DT       = $SlctPayEndDt
  AND A.PRORATE_INEFF_SW = 'Y'
  AND B.COMPANY          = A.COMPANY
  AND B.GARNID           = A.GARNID
  AND B.EMPLID           = C.EMPLID
  AND C.NAME_TYPE = 'PRI'
  AND C.EFFDT =
      (SELECT MAX(CN.EFFDT)
       FROM   PS_NAMES CN
       WHERE  CN.EMPLID    = C.EMPLID
         AND  CN.NAME_TYPE = C.NAME_TYPE
         AND  CN.EFFDT    <= $SlctPayEndDt)
  AND A.COMPANY          = D.COMPANY
  AND A.PAYGROUP         = D.PAYGROUP
  AND A.PAY_END_DT       = D.PAY_END_DT
  AND A.OFF_CYCLE        = D.OFF_CYCLE
  AND A.PAGE_NUM            = D.PAGE_NUM
  AND A.LINE_NUM            = D.LINE_NUM
  AND A.SEPCHK           = D.SEPCHK
  AND B.EMPLID           = D.EMPLID
ORDER BY B.COURT_NAME ASC,
         A.STATE_GARN_PRORATE,
         C.NAME,
         B.EMPLID
end-SELECT

end-procedure

begin-procedure Select-Report-Federal

begin-SELECT
BF.COURT_NAME            () on-break print=never level=1 Procedure = Process-NewPage
  move &BF.Court_Name to $Court_Name
AF.STATE_GARN_PRORATE    () on-break print=never level=2 Procedure = Process-NewPage
  move &AF.State_Garn_Prorate to $State_Garn_Prorate
CF.NAME                  () on-break print=never
BF.EMPLID                () on-break print=never level=4 After = Emp-Subtotal
AF.COMPANY
AF.PAY_END_DT
AF.GARNID
AF.GARN_DE_AMT
AF.GARN_DED_LIM_TYPE
AF.DEDUCT_AMT
AF.GARN_PRORATE_RL_ID
AF.GARN_SUPPORT_TYPE
BF.GARN_TYPE
BF.COURT_DOC_ID
BF.COURT_DOC_ID2
BF.GARN_DED_PCT
BF.GARN_DED_AMT
BF.GARN_VAR_FREQUENCY

  move 'GARN_SUPPORT_TYPE'   to $FieldName
  move &AF.Garn_Support_Type  to $FieldValue
  do Read-Translate-Table
  move $XlatShortName        to $Support_Type

  move 'GARN_VAR_FREQUENCY'  to $FieldName
  move &BF.Garn_Var_Frequency to $FieldValue
  do Read-Translate-Table
  move $XlatShortName        to $Var_Frequency

  print &CF.Name                      (+1,1)
  print &AF.Garn_Prorate_Rl_Id        (0,40)
  print &AF.Garnid                    (0,53)
  print $Support_Type                (0,66)
  print &BF.Court_Doc_Id              (0,75)

  do Format-DateTime(&AF.Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out                   (0,101,10)

  do Format-Number(&AF.Garn_De_Amt, $out, 'B9999,999.99')
  print $out                         (0,114)

  let #Unprorated_Amt = (&AF.Garn_De_Amt * &BF.Garn_Ded_Pct)/100 + &BF.Garn_Ded_Amt
  do Format-Number(#Unprorated_Amt, $out, 'B9999,999.99')
  print $out                         (0,129)

  do Format-Number(&AF.Deduct_Amt, $out, 'B9999,999.99')
  print $out                         (0,144)

  let #Emp_Unprorated_Tot = #Emp_Unprorated_Tot + #Unprorated_Amt
  let #Emp_Prorated_Tot   = #Emp_Prorated_Tot   + &AF.Deduct_Amt

FROM  PS_PAY_GARNISH   AF,
      PS_GVT_GARN_SPEC BF,
      PS_NAMES         CF,
      PS_PAY_CHECK     DF
WHERE AF.COMPANY          = $SlctCompany
  AND AF.PAYGROUP         = $SlctPayGroup
  AND AF.PAY_END_DT       = $SlctPayEndDt
  AND AF.PRORATE_INEFF_SW = 'Y'
  AND BF.COMPANY          = AF.COMPANY
  AND BF.GARNID           = AF.GARNID
  AND BF.EMPLID           = CF.EMPLID
  AND CF.NAME_TYPE = 'PRI'
  AND CF.EFFDT =
      (SELECT MAX(CNF.EFFDT)
       FROM   PS_NAMES CNF
       WHERE  CNF.EMPLID    = CF.EMPLID
         AND  CNF.NAME_TYPE = CF.NAME_TYPE
         AND  CNF.EFFDT    <= $SlctPayEndDt)
  AND AF.COMPANY          = DF.COMPANY
  AND AF.PAYGROUP         = DF.PAYGROUP
  AND AF.PAY_END_DT       = DF.PAY_END_DT
  AND AF.OFF_CYCLE        = DF.OFF_CYCLE
  AND AF.PAGE_NUM         = DF.PAGE_NUM
  AND AF.LINE_NUM         = DF.LINE_NUM
  AND AF.SEPCHK           = DF.SEPCHK
  AND BF.EMPLID           = DF.EMPLID
ORDER BY BF.COURT_NAME ASC,
         AF.STATE_GARN_PRORATE,
         CF.NAME,
         BF.EMPLID
end-SELECT

end-procedure

begin-procedure Process-NewPage

Move 0 to #PAGE_NUM
new-page

end-procedure

begin-procedure Emp-Subtotal

print 'Employee Total '   (+2,1)

do Format-Number(#Emp_Unprorated_Tot, $out, 'B9999,999.99')
print $out                         (0,129)

do Format-Number(#Emp_Prorated_Tot, $out, 'B9999,999.99')
print $out                         (0,144)

print ' '                          (+1,1)

move 0 to #Emp_Unprorated_Tot
move 0 to #Emp_Prorated_Tot

end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getdedbl.sqc'  !Get-Deduction-Balances procedure
#Include 'getindcd.sqc'  !Get-Industry-From-company
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
