!***********************************************************************
!  Trustee Extract Detailed Report - Record Type Wise
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:15:00:35                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'usarpt.sqc' !Get USA variables
begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do StdApi-Term
end-report

#Include 'setup31.sqc'  !printer and page-size initialization


!* The below section defines various column lengths and widths as    *!
!* variables.  This is intended to ease the formatting of data.      *!
#define colTitle 1
!*                                                                   *!
!*                                                                   *!


#define header-lines 7
begin-HEADING {header-lines}
  #Include 'stdhdg01.sqc'
  #Include 'pat09hdg.sqc'
end-HEADING

!* The below sections determine if the report was started from within   *!
!* tools or from the SQRW icon.  If it was started from the icon,       *!
!* prompt the user to enter the calculation name and employee id        *!
!* (Ask-Values).  Otherwise get the values from the run control table   *!
!* with the run control id and oprid passed from the process scheduler. *!
!* (Get-Values).                                                        *!

begin-procedure Init-Report
  move 'PAT09' to $ReportID
  move 'Trustee Extract Summary Report - Record Type ' to $ReportTitle
  do StdApi-Init
  if $prcs_process_instance = ''
     do Ask-values
  else
     do get-values-pa
  end-if
 end-procedure

begin-procedure Get-values-pa
  do Select-parameters-PA
  let $pa_run_id = rtrim(&pa_run_cntl.pa_run_id,'')
end-procedure

begin-procedure Ask-values
   input $pa_run_id_inpt   'Enter Run Control Id'
   let $pa_run_id = rtrim($pa_run_id_inpt,'')
end-procedure

!*                                                                   *!
!*                                                                   *!
!* The below section is the main paragraph of the program.  From this*!
!* procedure the four major paragraphs are executed.                 *!
!* 1. Initialization                                                 *!
!* 2. Calculation level employee information                         *!
!* 3. Plan level information (most of the calculation results are    *!
!*    specific to a benefit plan.)                                   *!
!* 4. Summary information                                            *!
!*                                                                   *!
!* For every plan found in the ps_pa_clc_pln_inpt table with the     *!
!* calculation keys, a process-pln-lvl-info paragraph is executed    *!
!*                                                                   *!
!* Note : $plan_name_flag is used to allow benefit plan to be printed*!
!*        in the header only if processing at plan level information *!
begin-procedure Process-Main
do Initialize
do Read-ps-pa-read-hdr
do page-break
end-procedure
!*                                                                   *!
!*                                                                   *!

!* The below section is the initialization section                   *!
begin-procedure Initialize
move 0 to #lines_remaining
move 0 to #line_count
move 0 to #section_min
create-array name=function-result size=100
   field = functn-rslt:char
   field = functn-descr:char

create-array name=message-parm size=100
   field = parm-seq:number
   field = message-parm:char
move 0 to #counter
end-procedure
!*                                                                   *!
!*                                                                   *!

begin-procedure Read-PS-PA-READ-HDR
let $sql-statement = 'PAT09-Trustee Extract PA-run-id,'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PA_TE_HDR.PA_RUN_ID
PA_TE_HDR.PA_PMT_END_DT
PA_TE_HDR.PA_CHECK_DATE
   move &pa_te_hdr.pa_run_id     to $wpa_run_id
   move &PA_TE_HDR.PA_PMT_END_DT to $PA_PMT_END_DT
   do Format-DateTime ($PA_PMT_END_DT, $wPA_PMT_END_DT,{DEFMDY},'','')
   move &PA_TE_HDR.PA_CHECK_DATE to $PA_CHECK_DATE
   do Format-DateTime ($PA_CHECK_DATE, $wPA_CHECK_DATE,{DEFMDY},'','')
FROM PS_PA_TE_HDR PA_TE_HDR
WHERE PA_TE_HDR.PA_RUN_ID = $PA_RUN_ID
END-SELECT
DO READ-PS-PA-TE-BDED
if #RUN_DED_CUR > 0
   DO 40TYPE-TOTAL
end-if
DO READ-PS-PA-TE-BADJ
if #RUN_ADJ_AMT  > 0   or #RUN_ADJ_AMT_NOTAX > 0
   DO 70TYPE-TOTAL
end-if
DO READ-PS-PA-TE-SPMT
if #RUN_PMT_AMT > 0  or #RUN_PMT_AMT_NOTAX > 0
   DO 80TYPE-TOTAL
end-if
DO READ-PS-PA-TE-1PMT
if #RUN_1ADJ_AMT > 0  or #RUN_1ADJ_AMT_NOTAX > 0
   DO 81TYPE-TOTAL
end-if
end-procedure






begin-procedure read-employeename-tbl
let $sql-statement = 'PAT09-Trustee Extract Deduction Description'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PN.NAME
  move &PN.NAME to $name
from PS_PERSON_NAME PN
where PN.EMPLID = $emplid
end-select
end-procedure




begin-procedure READ-PS-PA-TE-BDED
let $sql-statement = 'PAT09-Trustee Extract Benefit Dedcutions,'
let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
let #first_time=0
let #kount1  = 1
BEGIN-SELECT ON-ERROR=SQL-ERROR

PA_TE_BDED.BENEFIT_PLAN
PA_TE_BDED.EMPLID
PA_TE_BDED.EMPL_RCD
PA_TE_BDED.PLAN_TYPE
PA_TE_BDED.DEDCD
PA_TE_BDED.DED_CLASS
PA_TE_BDED.DED_CUR
   LET $SECOND_LOOP = 'Y'
   LET $BENEFIT_PLAN = &PA_TE_BDED.BENEFIT_PLAN
   LET $EMPLID       = &PA_TE_BDED.EMPLID
   if #kount1 = 1
      do BENEFIT-DEDUCTION-HEAD
      let #kount1 = 2
   end-if
   PRINT &PA_TE_BDED.BENEFIT_PLAN   ()      on-break print=never level=1 after=41BENEFIT-TOTAL
   PRINT &PA_TE_BDED.EMPLID         (+1,1)  on-break             level=2 after=benefit-deduction-total
   do read-employeename-tbl
   PRINT $Name                      (   ,14) on-break print=change  edit xxxxxxxxxxxxxxxxxxxxx
   PRINT &PA_TE_BDED.EMPL_RCD      (   ,39)
   PRINT &PA_TE_BDED.DEDCD          (   ,46)
   move &pa_te_bded.dedcd     to $dedcd
   move &pa_te_bded.plan_type to $plan_type
   do read-deduction-tbl
   print $description              (,   62)
   move 'DED_CLASS'           to $FieldName
   move &PA_TE_BDED.DED_CLASS to $FieldValue
   do Read-Translate-Table
   print $XlatLongName              (,85)
   PRINT &PA_TE_BDED.DED_CUR         (, 108)  edit 99999999.99
   LET   #EMP_REC_DED_CUR = #EMP_REC_DED_CUR + &PA_TE_BDED.DED_CUR

FROM PS_PA_TE_BDED   PA_TE_BDED
WHERE PA_TE_BDED.PA_RUN_ID       = $PA_RUN_ID
ORDER BY BENEFIT_PLAN, EMPLID, EMPL_RCD

END-SELECT

END-PROCEDURE

begin-procedure read-deduction-tbl
let $sql-statement = 'PAT09-Trustee Extract Deduction Description'
BEGIN-SELECT ON-ERROR=SQL-ERROR
DEDUCTION_TBL.DESCR
DEDUCTION_TBL.PLAN_TYPE
DEDUCTION_TBL.DEDCD
    move &DEDUCTION_TBL.DESCR to $description
from PS_DEDUCTION_TBL DEDUCTION_TBL
where DEDUCTION_TBL.PLAN_TYPE = $plan_type
and   DEDUCTION_TBL.DEDCD     = $dedcd
end-select
end-procedure

begin-procedure Read-PS-PA-TE-BADJ
let $sql-statement = 'PAT09-Trustee Extract Balance Adjustments'
let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
let #kount2  = 1

BEGIN-SELECT ON-ERROR=SQL-ERROR

PA_TE_BADJ.BENEFIT_PLAN
PA_TE_BADJ.EMPLID
PA_TE_BADJ.EMPL_RCD
PA_TE_BADJ.PA_ADJ_RSN
PA_TE_BADJ.PA_ADJ_AMT
PA_TE_BADJ.PA_ADJ_AMT_NOTAX
      LET $BENEFIT_PLAN =  &PA_TE_BADJ.BENEFIT_PLAN
      if #kount2 = 1
         DO BALANCE-ADJUSTMENT-HEAD
         let #kount2 = 2
      end-if
      LET  $EMPLID       = &PA_TE_BADJ.EMPLID
      PRINT &PA_TE_BADJ.BENEFIT_PLAN   ()      on-break print=never level=1 after=70BENEFIT-TOTAL
      PRINT &PA_TE_BADJ.EMPLID         (+1,1)  on-break             level=2 after=balance-adjustment-total
      do read-employeename-tbl
      PRINT $Name                      (   ,14) on-break print=change edit xxxxxxxxxxxxxxxxxxxxx
      PRINT &PA_TE_BDED.EMPL_RCD      (   ,39)
      move 'PA_ADJ_RSN'           to $FieldName
      move &PA_TE_BADJ.pa_adj_rsn to $FieldValue
      do Read-Translate-Table
      print $XlatLongName                ( ,47)
      Print &pa_te_badj.pa_adj_amt       (, 71)     edit '999999999.99'
      Print &pa_te_badj.pa_adj_amt_notax (, 97)    edit '999999999.99'

      LET #EMP_REC_ADJ_AMT        =  #EMP_REC_ADJ_AMT + &PA_TE_BADJ.PA_aDJ_AMT
      LET #EMP_REC_ADJ_AMT_NOTAX  =  #EMP_REC_ADJ_AMT_NOTAX + &PA_TE_BADJ.PA_ADJ_AMT_NOTAX
      LET $THIRD_LOOP = 'Y'

FROM PS_PA_TE_BADJ   PA_TE_BADJ
WHERE PA_TE_BADJ.PA_RUN_ID       = $PA_RUN_ID
ORDER BY BENEFIT_PLAN, EMPLID, EMPL_RCD
END-SELECT
!if #EMP_REC_ADJ_AMT > 0 or #EMP_REC_ADJ_AMT_NOTAX > 0
!Do BALANCE-ADJUSTMENT-TOTAL
!end-if
END-PROCEDURE



begin-procedure Read-PS-PA-TE-SPMT
let $sql-statement = 'PAT09-Trustee Extract Schedulted Payments'
let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
let $sql-statement = 'PAT09-Trustee Extract Scheduled Payment'

let #kount3  = 1

BEGIN-SELECT ON-ERROR=SQL-ERROR
PA_TE_SPMT.BENEFIT_PLAN
PA_TE_SPMT.EMPLID
PA_TE_SPMT.EMPL_RCD
PA_TE_SPMT.PA_PMT_NBR
PA_TE_SPMT.SETID
PA_TE_SPMT.VENDOR_ID
PA_TE_SPMT.FORM_CODE
PA_TE_SPMT.GUARANTEED_PAYMENT
PA_TE_SPMT.PCT_CONTINUED
PA_TE_SPMT.PYMT_FREQ
PA_TE_SPMT.PA_PMT_END_DT
PA_TE_SPMT.PA_PMT_AMT
PA_TE_SPMT.PA_PMT_AMT_NOTAX

      if #kount3 = 1
         do scheduled-payment-head
         let #kount3 = 2
      end-if
      LET $BENEFIT_PLAN = &PA_TE_SPMT.BENEFIT_PLAN
      LET $EMPLID       = &PA_TE_SPMT.EMPLID
      PRINT &PA_TE_SPMT.BENEFIT_PLAN   ()  on-break print=never level=1 after=80BENEFIT-TOTAL
      PRINT &PA_TE_SPMT.EMPLID         (+1,1)  on-break         level=2 after=scheduled-payment-total

      do read-employeename-tbl
      PRINT $Name                    (   ,14) on-break print=change edit xxxxxxxxxxxxxxxxxxxxx
      PRINT &PA_TE_SPMT.EMPL_RCD     (   ,39)
      PRINT &PA_TE_SPMT.PA_PMT_NBR   (   ,47)
      PRINT &PA_TE_SPMT.VENDOR_ID    (  , 54)
      PRINT &PA_TE_SPMT.FORM_CODE    (  , 75)
      PRINT &PA_TE_SPMT.PA_PMT_AMT   (  ,111)  edit 999999999.99

      move &PA_TE_SPMT.SETID     to $Setid
      move &PA_TE_SPMT.VENDOR_ID to $Provider

      do read-provider-tbl
      PRINT $descr                  (+1, 54)
      move 'FORM_CODE'           to $FieldName
      move &PA_TE_SPMT.FORM_CODE to $FieldValue
      do Read-Translate-Table
      print $XlatLongName              (, 75)

      PRINT &PA_TE_SPMT.PA_PMT_AMT_NOTAX   (,111)  edit 999999999.99

      LET #EMP_REC_PMT_AMT        =  #EMP_REC_PMT_AMT       + &PA_TE_SPMT.PA_PMT_AMT
      LET #EMP_REC_PMT_AMT_NOTAX  =  #EMP_REC_PMT_AMT_NOTAX + &PA_TE_SPMT.PA_PMT_AMT_NOTAX
      LET $FIRST_LOOP = 'Y'


FROM PS_PA_TE_SPMT   PA_TE_SPMT
WHERE PA_TE_SPMT.PA_RUN_ID       = $PA_RUN_ID
ORDER BY BENEFIT_PLAN, EMPLID, EMPL_RCD
END-SELECT
END-PROCEDURE




begin-procedure Read-PS-PA-TE-1PMT
let $sql-statement = 'PAT09-Trustee Extract One time Payment'
let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
let #kount4 = 1
BEGIN-SELECT ON-ERROR=SQL-ERROR


PA_TE_1PMT.BENEFIT_PLAN
PA_TE_1PMT.EMPLID
PA_TE_1PMT.EMPL_RCD
PA_TE_1PMT.PA_PMT_NBR
PA_TE_1PMT.SETID
PA_TE_1PMT.VENDOR_ID
PA_TE_1PMT.PA_ADJ_RSN
PA_TE_1PMT.PA_ADJ_AMT
PA_TE_1PMT.PA_ADJ_AMT_NOTAX
     if #kount4 = 1
        DO ONETIME-PAYMENT-HEAD
        let  #kount4 = 2
     end-if
     LET  $BENEFIT_PLAN = &PA_TE_1PMT.BENEFIT_PLAN
     LET  $EMPLID       = &PA_TE_1PMT.EMPLID
     PRINT &PA_TE_1PMT.BENEFIT_PLAN   ()  on-break print=never level=1 after=81BENEFIT-TOTAL
     PRINT &PA_TE_1PMT.EMPLID         (+1,1)  on-break         level=2 after=onetime-payment-total
     do read-employeename-tbl
     PRINT $Name                      (   ,14) on-break print=change edit xxxxxxxxxxxxxxxxxxxxx
     PRINT &PA_TE_1PMT.EMPL_RCD       (   ,39)
     print &PA_TE_1PMT.PA_PMT_NBR     (  , 46)
     PRINT &PA_TE_1PMT.VENDOR_ID      (  , 49)

     move &PA_TE_1PMT.SETID     to $Setid
     move &PA_TE_1PMT.VENDOR_ID to $Provider

     do read-provider-tbl
     PRINT $descr                     ( , 58)
     move 'PA_ADJ_RSN'           to $FieldName
      move &PA_TE_1PMT.pa_adj_rsn to $FieldValue
      do Read-Translate-Table
      print $XlatShortName              (, 72)
     PRINT &PA_TE_1PMT.PA_ADJ_AMT       (, 90)    edit 999999999.99
     PRINT &PA_TE_1PMT.PA_ADJ_AMT_NOTAX (, 113)   edit 999999999.99
     LET #EMP_REC_1ADJ_AMT        =  #EMP_REC_1ADJ_AMT + &PA_TE_1PMT.PA_ADJ_AMT
     LET #EMP_REC_1ADJ_AMT_NOTAX  =  #EMP_REC_1ADJ_AMT_NOTAX + &PA_TE_1PMT.PA_ADJ_AMT_NOTAX
     LET $FOURTH_LOOP = 'Y'
FROM PS_PA_TE_1PMT   PA_TE_1PMT
WHERE PA_TE_1PMT.PA_RUN_ID       = $PA_RUN_ID
ORDER BY BENEFIT_PLAN, EMPLID, EMPL_RCD
END-SELECT
!if  #EMP_REC_1ADJ_AMT > 0 or #EMP_REC_1ADJ_AMT_NOTAX > 0
!    DO ONETIME-PAYMENT-TOTAL
!end-if
END-PROCEDURE


begin-procedure read-provider-tbl

let $sql-statement = 'PAT09-Trustee Extract Deduction Description'

BEGIN-SELECT ON-ERROR=SQL-ERROR
VENDOR.NAME1
VENDOR.SETID
VENDOR.VENDOR_ID

  move &VENDOR.NAME1 to $descr

FROM  PS_VENDOR  VENDOR
WHERE VENDOR.SETID     = $Setid
AND   VENDOR.VENDOR_ID = $Provider

end-select

end-procedure



begin-procedure  BENEFIT-DEDUCTION-HEAD


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Record  Type  : 41       Benefit Deduction Record'  (+1, 1)
PRINT 'Benefit Plan  :'           (+1, 1)
PRINT  $BENEFIT_PLAN              (  ,17)
PRINT 'Employee ID'               (+1, 1)
PRINT 'Employee Name'             (  , 14)
PRINT 'Record #'                  (  , 36)
PRINT 'Deduction Code'            (  , 46)
PRINT 'Deduction Description'     (,   62)
PRINT 'Deduction Class'           (,   85)
PRINT 'Deduction Amount'          (,   103)
PRINT '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~' (+1,1)
end-procedure

begin-procedure  BENEFIT-DEDUCTION-TOTAL


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT '~~~~~~~~~~~~~~~~~~'        (+1, 101)
PRINT #EMP_REC_DED_CUR            (+1, 107)  edit 999999999.99
PRINT ''                                                  (+1,1)
LET $FIRST_LOOP = 'N'
LET #BEN_DED_CUR  =  #BEN_DED_CUR + #EMP_REC_DED_CUR
LET #EMP_REC_DED_CUR = 0
LET $SECOND_LOOP = 'N'
end-procedure


begin-procedure  BALANCE-ADJUSTMENT-HEAD


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Record  Type  : 70       Balance Adjustment Record'  (+1, 1)
PRINT 'Benefit Plan  :'           (+1, 1)
PRINT  $BENEFIT_PLAN               (  ,17)
PRINT 'Employee ID'               (+1, 1)
PRINT 'Employee Name'             (  , 14)
PRINT 'Record #'                  (  , 36)
PRINT 'Adjustment Reason'         (  , 47)
PRINT 'Adjustment Amount'         (,   66)
PRINT 'Nontax Adjustment Amount'  (,   85)
PRINT '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~' (+1,1)
end-procedure

begin-procedure  BALANCE-ADJUSTMENT-TOTAL


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT '~~~~~~~~~~~~~~~~~~~~~'  (+1, 63)
PRINT '~~~~~~~~~~~~~~~~~~~~~'  (,   88)
PRINT #EMP_REC_ADJ_AMT           (+1, 70)  edit '9999999999.99'
PRINT #EMP_REC_ADJ_AMT_NOTAX     (  , 96)  edit '9999999999.99'
PRINT ''                                                  (+1,1)
LET $SECOND_LOOP = 'N'
LET #BEN_ADJ_AMT        =  #BEN_ADJ_AMT + #EMP_REC_ADJ_AMT
LET #BEN_ADJ_AMT_NOTAX  =  #BEN_ADJ_AMT_NOTAX + #EMP_REC_ADJ_AMT_NOTAX
LET #EMP_REC_ADJ_AMT = 0
LET #EMP_REC_ADJ_AMT_NOTAX = 0
LET $THIRD_LOOP = 'N'
end-procedure


begin-procedure  SCHEDULED-PAYMENT-HEAD


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Record  Type  : 80       Scheduled Payment Record'  (+1, 1)
PRINT 'Benefit Plan  :'           (+1, 1)
PRINT $BENEFIT_PLAN               (  ,17)
PRINT 'Employee ID'               (+1, 1)
PRINT 'Employee Name'             (  , 14)
PRINT 'Record #'                  (  , 36)
PRINT 'Payment'                   (  , 46)
PRINT 'Provider'                  (,   54)
PRINT 'Form Code'                 (,   74)
PRINT 'Payment Amount'            (,   109)
PRINT 'No.'                       (+1, 46)
PRINT 'Provider Name'             (,   54)
PRINT 'Form Description'          (,   74)
PRINT 'Nontax Payment Amount'     (,   102)
print '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~' (+1,1)
end-procedure


begin-procedure  SCHEDULED-PAYMENT-TOTAL

let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT '~~~~~~~~~~~~~~~~~~~~~~~~'  (+1, 99)
PRINT #EMP_REC_PMT_AMT           (+1, 110)  edit 9999999999.99
PRINT #EMP_REC_PMT_AMT_NOTAX     (+1, 110)  edit 9999999999.99
PRINT ''                                                  (+1,1)
LET $THIRD_LOOP = 'N'
LET #BEN_PMT_AMT        =  #BEN_PMT_AMT + #EMP_REC_PMT_AMT
LET #BEN_PMT_AMT_NOTAX  =  #BEN_PMT_AMT_NOTAX + #EMP_REC_PMT_AMT_NOTAX
LET #EMP_REC_PMT_AMT = 0
LET #EMP_REC_PMT_AMT_NOTAX = 0
LET $FIRST_LOOP = 'N'
end-procedure


begin-procedure  ONETIME-PAYMENT-HEAD


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Record  Type  : 81       Onetime Payment Record'  (+1, 1)
PRINT 'Benefit Plan  :'           (+1, 1)
PRINT $BENEFIT_PLAN               (  ,17)
PRINT 'Employee ID'               (+1, 1)
PRINT 'Employee Name'             (  , 14)
PRINT 'Rec #'                     (  , 36)
PRINT 'Pay #'                     (  , 42)
PRINT 'Provider'                  (,   49)
PRINT 'Provider Name'             (,   58)
PRINT 'Adjust.Reason'             (,   72)
PRINT 'Payment Amount'             (,  88)
PRINT 'Nontax Payment Amount'     (,   104)
PRINT '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~' (+1,1)
end-procedure


begin-procedure  ONETIME-PAYMENT-TOTAL

let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT '~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~'  (+1, 88)
PRINT #EMP_REC_1ADJ_AMT           (+1, 89) edit 999999999.99
PRINT #EMP_REC_1ADJ_AMT_NOTAX     (  , 112) edit 999999999.99
PRINT ''                                                  (+1,1)
LET $THIRD_LOOP = 'N'
LET #BEN_1ADJ_AMT        =  #BEN_1ADJ_AMT + #EMP_REC_1ADJ_AMT
LET #BEN_1ADJ_AMT_NOTAX  =  #BEN_1ADJ_AMT_NOTAX + #EMP_REC_1ADJ_AMT_NOTAX
LET #EMP_REC_1ADJ_AMT = 0
LET #EMP_REC_1ADJ_AMT_NOTAX = 0
LET $FOURTH_LOOP = 'N'
end-procedure




begin-procedure  41BENEFIT-TOTAL


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Benefit Plan'                                      (+2,1)
PRINT $BENEFIT_PLAN                                       (,  15)
PRINT #BEN_DED_CUR                                        (, 106)   edit 9999999999.99
PRINT ''                                                  (+1,1)
LET #RUN_DED_CUR        = #RUN_DED_CUR        + #BEN_DED_CUR
LET #BEN_DED_CUR        = 0
end-procedure



begin-procedure  70BENEFIT-TOTAL


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Benefit Plan'                                      (+2,1)
PRINT $BENEFIT_PLAN                                       (,  15)
PRINT  #BEN_ADJ_AMT                                       (, 69)   edit 99999999999.99
PRINT  #BEN_ADJ_AMT_NOTAX                                 (, 95)   edit 99999999999.99
PRINT ''                                                  (+1,1)
LET #RUN_ADJ_AMT        = #RUN_ADJ_AMT        + #BEN_ADJ_AMT
LET #RUN_ADJ_AMT_NOTAX  = #RUN_ADJ_AMT_NOTAX  + #BEN_ADJ_AMT_NOTAX

LET #BEN_ADJ_AMT        = 0
LET #BEN_ADJ_AMT_NOTAX  = 0
end-procedure




begin-procedure  80BENEFIT-TOTAL


let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Benefit Plan'                                      (+2,1)
PRINT $BENEFIT_PLAN                                       (,  15)
PRINT  #BEN_PMT_AMT                                       (, 109)   edit 99999999999.99
PRINT  #BEN_PMT_AMT_NOTAX                                 (+1,109)  edit 99999999999.99
PRINT ''                                                  (+1,1)
LET #RUN_PMT_AMT        = #RUN_PMT_AMT        + #BEN_PMT_AMT
LET #RUN_PMT_AMT_NOTAX  = #RUN_PMT_AMT_NOTAX  + #BEN_PMT_AMT_NOTAX

LET #BEN_PMT_AMT        = 0
LET #BEN_PMT_AMT_NOTAX  = 0

end-procedure



begin-procedure  81BENEFIT-TOTAL

let #section_min = 6
let #lines_remaining = 55 - #current-line
if #section_min > #lines_remaining
 do page-break
end-if
let #sec-line1 = (#current-line - {header-lines}) + 6
PRINT 'Benefit Plan'                                      (+2,1)
PRINT $BENEFIT_PLAN                                       (,  15)
PRINT  #BEN_1ADJ_AMT                                      (, 88)   edit 99999999999.99
PRINT  #BEN_1ADJ_AMT_NOTAX                                (, 111)  edit 99999999999.99
PRINT ''                                                  (+1,1)
LET #RUN_1ADJ_AMT       = #RUN_1ADJ_AMT       + #BEN_1ADJ_AMT
LET #RUN_1ADJ_AMT_NOTAX = #RUN_1ADJ_AMT_NOTAX + #BEN_1ADJ_AMT_NOTAX
LET #BEN_1ADJ_AMT       = 0
LET #BEN_1ADJ_AMT_NOTAX = 0

end-procedure



begin-procedure  40TYPE-TOTAL

PRINT 'Record Type - 40  Benefit Deduction Total'          (+1,1)
PRINT  #RUN_DED_CUR                                      (, 106)  edit 9999999999.99
do page-break
end-procedure


begin-procedure  70TYPE-TOTAL
PRINT 'Record Type - 70  Balance Adjustment Total'          (+1,1)
PRINT  #RUN_ADJ_AMT                                      (,  69)  edit 99999999999.99
PRINT  #RUN_ADJ_AMT_NOTAX                                (,95)  edit 99999999999.99
do page-break
end-procedure


begin-procedure  80TYPE-TOTAL
PRINT 'Record Type - 80  Scheduled Payment Total'         (+1,1)
PRINT  #RUN_PMT_AMT                                      (, 109)  edit 99999999999.99
PRINT  #RUN_PMT_AMT_NOTAX                                (+1,109)  edit 99999999999.99
do page-break
end-procedure




begin-procedure  81TYPE-TOTAL
PRINT 'Record Type - 81  Onetime Payment Total'          (+1,1)
PRINT  #RUN_1ADJ_AMT                                     (, 88)  edit 99999999999.99
PRINT  #RUN_1ADJ_AMT_NOTAX                               (, 111)  edit 99999999999.99
PRINT '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'  (+1, 1)
end-procedure





!***********************************************************************
!***********************************************************************
begin-procedure Page-Break
!  do load-header-info
new-page
if $FIRST_LOOP = 'Y'
   do SCHEDULED-PAYMENT-HEAD
else
   if $SECOND_LOOP = 'Y'
      do BENEFIT-DEDUCTION-HEAD
   else
      if $THIRD_LOOP  = 'Y'
         do BALANCE-ADJUSTMENT-HEAD
      else
         if $FOURTH_LOOP = 'Y'
            do ONETIME-PAYMENT-HEAD
         end-if
      end-if
   end-if
end-if
end-procedure



!***********************************************************************
!***********************************************************************

#include 'stdapi.sqc'    !Update Process Request API
#include 'parnctl1.sqc'  !Get run control parameter values
#include 'pagetval.sqc'  !Get values mask routines
#include 'readxlat.sqc'  !read translate table
!* #include 'paresult.sqc'  !read results table  *!
!* #include 'paservce.sqc'  !read service array  *!
!* #include 'pafunctn.sqc'  !read function table *!
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
