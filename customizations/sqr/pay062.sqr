!***********************************************************************
!  PAY062.SQR: Position Budget Check Log Report                        *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:15:38:00                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

!************
begin-report
!************

  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report


!***************************
begin-procedure Init-Report
!***************************

  move 'PAY062' to $ReportID
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  do Get-Run-Control


  move 'Position Budget Check Log Report' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '
  do REPORT-TRANSLATION

end-procedure


!****************
begin-heading 9
!****************

  let $FromDate      =  &RC.HP_Run_Dt
  let $AsOfDate      =  &RC.HP_Thru_Dt_Run

#Include 'stdhtr02.sqc'

  let $FiscalYr_Title = $PAY062_HDG_FISCAL_YR || ' ' || $RC_FiscalYr
  print $FiscalYr_Title             (3,,)      center

  print $PAY062_ENC_TRANS           (+1,,)     center

  print $PAY062_PAYGROUP            (4,1)
  print $PayGroup                   (,+2)
  print $PayGroupName               (,+1)

  print $PAY062_HDG_DEPTID          (+1,1)

  print $DeptID                     (,+2)
  print $DeptName                   (,+1)

  print $PAY062_DOCUMENT_ID         (+1,57,31)
  print $PAY062_COMBO_CODE          (,96,25)
  print $PAY062_ACCOUNT             (,122,10)
  print $PAY062_RTBC                (,161,4)

  print $PAY062_POSITION_ID         (+1,1,11)
  print $PAY062_TITLE               (,14,30)
  print $PAY062_HEAD_COUNT          (,46,10)

  print $PAY062_ENCUM_HDR_STATUS    (,57,26)
  print $PAY062_DOC_LN#             (,90,7)
  print $PAY062_EXCPTN_TYPE         (,96,25)
  print $PAY062_MESSAGE             (,122,8)
  print $PAY062_SETID               (,133,5)
  print $PAY062_BUD_YR              (,139,8)
  print $PAY062_BUD_STAT            (,146,8)
  print $PAY062_RTBC_PERFORMED      (,155,5)
  print $PAY062_TRIGGER             (,161,10)

  print '-----------'               (+1,1)
  print '-----'                     (,14)
  print '----------'                (,46)
  print '-------------'             (,57)
  print '---'                       (,90)
  print '----------------'          (,96)
  print '-------'                   (,122)
  print '-----'                     (,133)
  print '------'                    (,139)
  print '--------'                  (,146)
  print '-----'                     (,155)
  print '-------'                   (,161)


end-HEADING

!*********************************
begin-procedure REPORT-TRANSLATION
!*********************************

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('PAY062', 'PAYGROUP',      $PAY062_PAYGROUP,       #DW)

  do Get_Field_Information ('PAY062', 'HDG_FISCAL_YR', $PAY062_HDG_FISCAL_YR,  #DW)
  do Get_Field_Information ('PAY062', 'HDG_DEPTID'   , $PAY062_HDG_DEPTID,     #DW)

  do Get_Field_Information ('PAY062', 'POSITION_ID',   $PAY062_POSITION_ID,    #DW)
  do Get_Field_Information ('PAY062', 'TITLE',         $PAY062_TITLE,          #DW)
  do Get_Field_Information ('PAY062', 'HEAD_COUNT',    $PAY062_HEAD_COUNT,     #DW)
  do Get_Field_Information ('PAY062', 'DOCUMENT_ID',   $PAY062_DOCUMENT_ID,    #DW)
  do Get_Field_Information ('PAY062', 'DOC_LN#',       $PAY062_DOC_LN#,        #DW)
  do Get_Field_Information ('PAY062', 'COMBO_CODE',    $PAY062_COMBO_CODE,     #DW)
  do Get_Field_Information ('PAY062', 'ACCOUNT',       $PAY062_ACCOUNT,        #DW)
  do Get_Field_Information ('PAY062', 'SETID',         $PAY062_SETID,          #DW)
  do Get_Field_Information ('PAY062', 'FISCAL',        $PAY062_FISCAL,         #DW)
  do Get_Field_Information ('PAY062', 'BUD_YR',        $PAY062_BUD_YR,         #DW)
  do Get_Field_Information ('PAY062', 'BUD_STAT',      $PAY062_BUD_STAT,       #DW)
  do Get_Field_Information ('PAY062', 'RTBC_PERFORMED',$PAY062_RTBC_PERFORMED, #DW)
  do Get_Field_Information ('PAY062', 'RTBC',          $PAY062_RTBC,           #DW)
  do Get_Field_Information ('PAY062', 'TRIGGER',       $PAY062_TRIGGER,        #DW)
  do Get_Field_Information ('PAY062', 'ENCUM_HDR_STATUS',$PAY062_ENCUM_HDR_STATUS, #DW)
  do Get_Field_Information ('PAY062', 'EXCPTN_TYPE'   ,$PAY062_EXCPTN_TYPE,    #DW)
  do Get_Field_Information ('PAY062', 'MESSAGE'       ,$PAY062_MESSAGE,        #DW)
  do Get_Field_Information ('PAY062', 'ENC_TRANS'     ,$PAY062_ENC_TRANS,      #DW)

end-procedure

!****************************
begin-procedure Process-Main
!****************************

begin-SELECT

EN.COMPANY              () on-break print=never  level=1  procedure=change-page
EN.PAYGROUP             () on-break print=never  level=2  procedure=change-page
EN.DEPTID               () on-break print=never  level=3  procedure=change-page
PO.POSITION_NBR
EN.HP_KK_DOC_ID
EN.HP_KK_DOC_LINE_NBR
EN.ACCT_CD
EN.ACCOUNT
EN.SETID
EN.FISCAL_YEAR
EN.HP_BUDGET_YEAR
PO.HP_RTBC_PERFORMED
PO.HP_RTBC_TRIGGER
{DateTimeOut-Prefix}PO.HP_LSTUPD_ENC_TIME{DateTimeOut-Suffix}  &PO.HP_LSTUPD_ENC_TIME

  do Format-DateTime(&PO.HP_LSTUPD_ENC_TIME, $out, {DEFCMP}, '', '')
  let $Log_Date_CMP = $out

  if ($DateRange_Fnd = 'Y' and
       ($Log_Date_CMP   >=  $RC_RunDt_CMP  and
        $Log_Date_CMP   <=  $RC_ThruDt_CMP)) or
     $DateRange_Fnd = 'N'

    print &EN.HP_KK_Doc_ID            (+2,57,31)
    print &EN.HP_KK_Doc_Line_Nbr      (,90,3)
    print &EN.Acct_Cd                 (,96,25)
    print &EN.Account                 (,122,10)
    print &EN.SetID                   (,133,5)
    print &EN.HP_Budget_Year          (,139,4)
    print &PO.HP_RTBC_Performed       (,156,1)

    if &PO.Position_Nbr <> $prior_PosNbr
      print &PO.Position_Nbr          (,1,8)
      move &PO.Position_Nbr to $prior_PosNbr

      let $Position_Nbr = rtrim(&PO.Position_Nbr, ' ')
      do Format-DateTime($Log_Date_CMP, $AsOfDate, {DEFCMP}, '', 'native')
      do Get-Position-Title
      print $PosName                  (,14,30)

      do Get-Pos-Max-Head-Cnt
      do Format-Number (#MaxHeadCount, $MaxHeadCount, '9999')
      print $MaxHeadCount             (,48,4)
    end-if

    let $Company  = rtrim(&EN.Company, ' ')
    let $PayGroup = rtrim(&EN.PayGroup, ' ')
    do Get-PayGroup-Data

    let $SetID    = rtrim(&EN.SetID,' ')
    let $DeptID   = rtrim(&EN.DeptID,' ')
    do Get-Department-Name-with-SetID

    do Get-DocID-Summary

    move 'HP_BUDGET_STATUS'           to $FieldName
    move $Budget_Status               to $FieldValue
    do Read-Translate-Table
    move $XlatShortName               to $Budget_Status
    print $Budget_Status              (,146,8)

    move 'HP_RTBC_TRIGGER'            to $FieldName
    let $RTBC_Trigger =  rtrim(&PO.HP_RTBC_Trigger, ' ')
    move $RTBC_Trigger                to $FieldValue
    do Read-Translate-Table
    move $XlatShortName               to $RTBC_Trigger
    print $RTBC_Trigger               (,161,10)

    do Get-Budget-Chk-Hdr

    let $Position_Log_printed = 'Y'

  end-if


FROM PS_HP_BDCK_LOG_POS PO,
     PS_ENCUMB_DIST     EN

[$WhereParam]
AND  PO.POSITION_NBR    = EN.POSITION_NBR
ORDER BY EN.COMPANY, EN.PAYGROUP, EN.DEPTID, PO.POSITION_NBR

end-SELECT

end-procedure


!*********************************
begin-procedure Get-DocID-Summary
!*********************************

  let $Budget_Status = ' '

begin-SELECT
S.HP_BUDGET_STATUS

  let $Budget_Status = rtrim(&S.HP_Budget_Status, ' ')

FROM PS_HP_DOC_ID_SUMM S
WHERE S.HP_KK_DOC_ID       = &EN.HP_KK_Doc_ID
  AND S.HP_KK_DOC_LINE_NBR = &EN.HP_KK_Doc_Line_Nbr
  AND S.FISCAL_YEAR        = &EN.Fiscal_Year
  AND S.HP_BUDGET_YEAR     = &EN.HP_Budget_Year

end-SELECT

end-procedure Get-DocID-Summary


!************************************
begin-procedure Get-Pos-Max-Head-Cnt
!************************************

  let #MaxHeadCount = 0

begin-SELECT
PD.MAX_HEAD_COUNT

  let #MaxHeadCount = &PD.Max_Head_Count

FROM  PS_POSITION_DATA PD
WHERE PD.POSITION_NBR = $Position_Nbr
  AND PD.EFF_STATUS =  'A'
  AND PD.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_POSITION_DATA
       WHERE  POSITION_NBR = $Position_Nbr
         AND  EFF_STATUS = PD.EFF_STATUS
         AND  EFFDT  <= $AsOfDate)
end-SELECT

end-procedure Get-Pos-Max-Head-Cnt


!**************************************
begin-procedure Get-Budget-Chk-Hdr
!**************************************

  let $Bud_Hdr_Status  = ' '

begin-SELECT
H.HP_KK_DOC_ID
H.HP_FISCAL_YEAR
H.HP_BUDGET_YEAR
H.BUDGET_HDR_STATUS

    move 'BUDGET_HDR_STATUS'            to $FieldName
    let $Bud_Hdr_Status  =  rtrim(&H.Budget_Hdr_Status, ' ')
    move $Bud_Hdr_Status                to $FieldValue
    do Read-Translate-Table
    move $XlatShortName                 to $Bud_Hdr_Status
    print $Bud_Hdr_Status               (+1,57,10)

    do Get-Budget-Chk-Line-Msg

FROM PS_HP_BUD_RESP_HDR H
WHERE H.HP_KK_DOC_ID     =  &EN.HP_KK_Doc_ID
  AND H.HP_FISCAL_YEAR   =  &EN.Fiscal_Year
  AND H.HP_BUDGET_YEAR   =  &EN.HP_Budget_Year

end-SELECT

end-procedure Get-Budget-Chk-Hdr


!**************************************
begin-procedure Get-Budget-Chk-Line-Msg
!**************************************

  let $Msg_Parm1   = ' '
  let $Msg_Parm2   = ' '
  let $Msg_Parm3   = ' '
  let $Msg_Parm4   = ' '
  let #Message_Nbr = 0
  let #Excep_Cnt   = 0

begin-SELECT
L.HP_KK_DOC_LINE_NBR
L.EXCPTN_TYPE
L.MESSAGE_NBR
L.MESSAGE_PARM1
L.MESSAGE_PARM2
L.MESSAGE_PARM3
L.MESSAGE_PARM4


    do Get-Excptn-Type-Descr

    if #Excep_Cnt > 0
      print $Excptn_Type          (+1,96,10)
    else
      print $Excptn_Type          (,96,10)
    end-if

    if &L.MESSAGE_NBR > 0

      do Get-Bud-Check-Msg

      if $Msg_Text <> ' '
        let $Msg_Parm1 = rtrim(&L.Message_Parm1, ' ')
        let $Msg_Parm2 = rtrim(&L.Message_Parm2, ' ')
        let $Msg_Parm3 = rtrim(&L.Message_Parm3, ' ')
        let $Msg_Parm4 = rtrim(&L.Message_Parm4, ' ')
        do Format-Msg-Text

        print $Msg_Text         (,122) wrap 45 6
      end-if

    end-if

    add 1 to #Excep_Cnt

FROM PS_HP_BUD_RESP_LN  L
WHERE L.HP_KK_DOC_ID        =  &H.HP_KK_Doc_ID
  AND L.HP_FISCAL_YEAR      =  &H.HP_Fiscal_Year
  AND L.HP_BUDGET_YEAR      =  &H.HP_Budget_Year
  AND L.HP_KK_DOC_LINE_NBR  =  &EN.HP_KK_Doc_Line_Nbr
ORDER BY L.EXCPTN_TYPE

end-SELECT

end-procedure Get-Budget-Chk-Line-Msg


!************************************
begin-procedure Get-Excptn-Type-Descr
!************************************

  let $Excptn_Type = ' '

begin-SELECT
BE.DESCRSHORT

  let $Excptn_Type = rtrim(&BE.Descrshort, ' ')

FROM PS_HP_BUD_EXCP_TBL  BE
WHERE BE.EXCPTN_TYPE  =  &L.Excptn_Type

end-SELECT

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
     do Get-Excptn-Type-Descr-Lang
  end-if

end-procedure Get-Excptn-Type-Descr


!*****************************************
begin-procedure Get-Excptn-Type-Descr-Lang
!*****************************************

begin-SELECT
BL.DESCRSHORT

  let $Excptn_Type = rtrim(&BL.Descrshort, ' ')

FROM PS_HP_BUD_EXCP_LNG BL
WHERE BL.EXCPTN_TYPE  =  &L.Excptn_Type
  AND BL.LANGUAGE_CD  =  $curr_Language_Cd

end-SELECT

end-procedure Get-Excptn-Type-Descr-Lang


!*********************************
begin-procedure Get-Bud-Check-Msg
!*********************************

  let $Msg_Text = ' '

begin-SELECT
M.MESSAGE_TEXT

  let $Msg_Text = rtrim(&M.Message_Text,' ')

FROM PS_HP_BUD_MSG_TBL M
WHERE M.MESSAGE_NBR = &L.Message_Nbr

end-SELECT

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
     do Get-Bud-Check-Msg-Lang
  end-if

end-procedure Get-Bud-Check-Msg


!**************************************
begin-procedure Get-Bud-Check-Msg-Lang
!**************************************

begin-SELECT
LM.MESSAGE_TEXT

  let $Msg_Text = rtrim(&LM.Message_Text,' ')

FROM PS_HP_BUD_MSG_LNG LM
WHERE LM.MESSAGE_NBR = &L.Message_Nbr
  AND LM.LANGUAGE_CD = $curr_Language_Cd

end-SELECT

end-procedure Get-Bud-Check-Msg-Lang


!********************************
begin-procedure Format-Msg-Text
!********************************

  let $Msg_Text = replace($Msg_Text, '%1', $Msg_Parm1)
  let $Msg_Text = replace($Msg_Text, '%2', $Msg_Parm2)
  let $Msg_Text = replace($Msg_Text, '%3', $Msg_Parm3)
  let $Msg_Text = replace($Msg_Text, '%4', $Msg_Parm4)

  let $Msg_Text = ltrim(rtrim($Msg_Text, ' '), ' ')

end-procedure Format-Msg-Text


!***************************
begin-procedure change-page
!***************************

  if $Position_Log_printed = 'Y'
    new-page
    let $Position_Log_printed = 'N'
  end-if

end-procedure change-page


!******************************
begin-procedure Get-Run-Control
!******************************

  let $WhereParam = ''
  let $DateRange_Fnd = ' '

begin-SELECT
RC.HP_RUN_DT
RC.HP_THRU_DT_RUN
RC.HP_BUDGET_STATUS
RC.FISCAL_YEAR
RC.SETID
RC.DEPTID
RC.COMPANY
RC.PAYGROUP

  let $FromDate      =  &RC.HP_Run_Dt
  let $AsOfDate      =  &RC.HP_Thru_Dt_Run

  if rtrim(&RC.HP_Run_Dt, ' ') <> '' and
     rtrim(&RC.HP_Thru_Dt_Run, ' ') <> ''
    do Format-DateTime(&RC.HP_Run_Dt, $RC_RunDt_CMP, {DEFCMP}, '', '')
    do Format-DateTime(&RC.HP_Thru_Dt_Run, $RC_ThruDt_CMP, {DEFCMP}, '', '')
    let $DateRange_Fnd = 'Y'
  else
    let $DateRange_Fnd = 'N'
  end-if

  let $RC_BudStat   =  ltrim(rtrim(&RC.HP_Budget_Status,' '),' ')

  do Format-Number (&RC.Fiscal_Year, $RC_FiscalYr, '9999')

  let $RC_SetID     =  ltrim(rtrim(&RC.SetID,' '),' ')
  let $RC_DeptID    =  ltrim(rtrim(&RC.DeptID ,' '),' ')
  let $RC_Company   =  ltrim(rtrim(&RC.Company ,' '),' ')
  let $RC_PayGroup  =  ltrim(rtrim(&RC.Paygroup ,' '),' ')


  let $WhereParam = 'WHERE EN.FISCAL_YEAR = ' || $RC_FiscalYr

  if rtrim($RC_Company, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND EN.COMPANY =  ' || '''' || $RC_Company || ''''
  end-if

  if rtrim($RC_PayGroup, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND EN.PAYGROUP =  ' || '''' || $RC_PayGroup || ''''
  end-if

  if rtrim($RC_SetID, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND EN.SETID =  ' || '''' || $RC_SetID  || ''''
  end-if

  if rtrim($RC_DeptID, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND EN.DEPTID = ' || '''' || $RC_DeptID  || ''''
  end-if

  if rtrim($RC_BudStat, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND PO.HP_BUDGET_STATUS = ' || '''' || $RC_BudStat || ''''
  end-if


FROM PS_RUN_CNTL_RTBC RC
WHERE RC.OPRID = $prcs_oprid
  AND RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-SELECT

end-procedure Get-Run-Control


begin-footing 4
  print ' '             (+0,1) center
end-footing

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getposnm.sqc'  !Get-Position-Title
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'readxlat.sqc'  !Read-Translate-Table procedure


