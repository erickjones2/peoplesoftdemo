!-----------------------------------------------------------------------
!  STES006:  Stock Purchase Carry Forward/Refund 
!-----------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!-----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:50:16                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!-----------------------------------------------------------------------
! Program Descr:  Summary of employee Carry Forward/Refunds after
!                 stock purchase.
!-----------------------------------------------------------------------
! Prompts:  from/Thru purchase dates
!           Process Group
!-----------------------------------------------------------------------

#include 'setenv.sqc'

!--------------------------------------------------------------------
Begin-Setup
!--------------------------------------------------------------------

 #include 'ptpsl177.sqc'

End-Setup

Begin-Program

  do Init-Report
  do Process-Main
  do Reset
  do Successful-EOJ

End-Program

!-----------------------------------------------------------------------
! print Report Header
!-----------------------------------------------------------------------
Begin-Heading 12

  #include 'stdhdg01.sqc'

  print $StockId                                           (-1,001,010)
  print $PUR_StockID                                       (  ,016,010)
  print $PurchaseIdLbl                                     (  ,080,011)
  print $RC_Purchase_ID                                    (  ,095,010)
  print $StockPlan                                         (+1,001,010)
  print $PUR_StPlan                                        (  ,016,010)
  print $OfferId                                           (+1,001,011)
  print $PUR_Offering                                      (  ,016,010)
  print $PurchDt                                           (+1,001,013)
  print $PUR_PurchDt                                       (  ,016,010)

  print $ProcessGrp                                        (+2,001,013)
  print $Prev_PrcsGrp                                      (  ,016,010)
  print $StkCurr                                           (  ,060,020)
  print $FromCur                                           (  , +2,003)
  print $SrcCurr                                           (  ,145,020)
  print $ToCur                                             (  , +2,003)

  print '-'                                                (+2,044,068) fill
  print '-'                                                (  ,130,045) fill

  print $Emplid                                            (+1,037,006)
  print $Total                                             (  ,061,010)
  print $ResidualLbl                                       (  ,104,008)
  print $Conversion                                        (  ,121,010)
  print $Refund                                            (  ,169,007)
  print $Name                                              (+1,001,025)
  print $Emplid                                            (  ,027,006)
  print $RcdNbr                                            (  ,037,007)
  print $Contribution                                      (  ,054,012)
  print $GrantCostLbl                                      (  ,078,011)
  print $Contribution                                      (  ,100,012)
  print $Rate                                              (  ,125,005)
  print $CarryFwd                                          (  ,139,013)
  print $Amt                                               (  ,169,008)
  print '-'                                                (+1,001,174) fill


End-Heading
!
!------------------------------------------------------------------------
! Function:    Init-Report
! Description: Prompt for run-time parameters
!------------------------------------------------------------------------
Begin-Procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  do Get-Current-Language
  let $ReportID = 'STES006'

  !do Init_Report_Translation ('STOCK', $language_cd)
  do Init_Report_Translation ('STOCK', $curr_language_cd)
  do Append_Report_Translation ($ReportID)

  do Get_Field_Information ('STOCK',   'PURCHASE_ID',      $PurchaseIdLbl, #DW)
  do Get_Field_Information ('STOCK',   'STOCK_PLAN_DESC',  $StockPlan,     #DW)
  do Get_Field_Information ('STOCK',   'OFFERING_ID',      $OfferId,       #DW)
  do Get_Field_Information ('STOCK',   'PURCHASE_DT',      $PurchDt,       #DW)
  do Get_Field_Information ('STOCK',   'PROCESS_GRP',      $ProcessGrp,    #DW)
  do Get_Field_Information ('STOCK',   'NAME',             $Name,          #DW)
  do Get_Field_Information ('STOCK',   'EMPLID',           $Emplid,        #DW)
  do Get_Field_Information ('STOCK',   'STOCK_ID',         $StockId,       #DW)
  do Get_Field_Information ('STOCK',   'TOTAL',            $Total,         #DW)
  do Get_Field_Information ('STOCK',   'CARRYFWD',         $CarryFwd,      #DW)
  do Get_Field_Information ('STOCK',   'CURRENCY_CD',      $Currency,      #DW)
  do Get_Field_Information ('STOCK',   'PURCHASE_VALUE',   $PurchVal,      #DW)
  do Get_Field_Information ('STOCK',   'DATE' ,            $Date,          #DW)
  do Get_Field_Information ('STOCK',   'GRANT_COST',       $GrantCostLbl,  #DW)
  do Get_Field_Information ('STOCK',   'RCD_NBR',          $RcdNbr,        #DW)
  
  do Get_Field_Information ('STES006', 'REPORT_TITLE',     $ReportTitle,   #DW)
  do Get_Field_Information ('STES006', 'REFUND',           $Refund,        #DW)
  do Get_Field_Information ('STES006', 'RESIDUAL',         $ResidualLbl,   #DW)
  do Get_Field_Information ('STES006', 'EXCHANGE',         $Conversion,    #DW)
  do Get_Field_Information ('STES006', 'CONTRIBUTION',     $Contribution,  #DW)
  do Get_Field_Information ('STES006', 'SOURCE_CURR',      $SrcCurr,       #DW)
  do Get_Field_Information ('STES006', 'STOCK_CURR',       $StkCurr,       #DW)
  do Get_Field_Information ('STES006', 'RATE'       ,      $Rate,          #DW)
  do Get_Field_Information ('STES006', 'AMT',              $Amt,           #DW)
  do Get_Field_Information ('STES006', 'CODE',             $Code,          #DW)

  if $prcs_process_instance = ''
    input $RC_PURCHASE_ID MAXLEN=10 'Purchase ID' Type=Char
    uppercase $RC_Purchase_ID
  else
    do Get-SQR-Parms                   ! Get Run Control Values
  end-if

  do Get-Purchase-ID
  let $SQLQuote      = ''''
  let $WhereEmplid   = ''
  let $WherePrcsGrp  = ''
  let $OrderBy       = ''
  let $RC_Emplid     = rtrim($RC_Emplid,' ')
  let $RC_PrcsGrp    = rtrim($RC_PrcsGrp, ' ')

  if $RC_PrcsGrp <> ''
    let $WherePrcsGrp   = ' and A.PROCESS_GROUP  = ' || $SQLQuote || $RC_PrcsGrp || $SQLQuote
  else
    let $WherePrcsGrp   = ''
  end-if

  if $RC_Emplid <> ''
    let $WhereEmplid   = ' and A.EMPLID  = ' || $SQLQuote || $RC_Emplid || $SQLQuote
  else
    let $WhereEmplid   = ''
  end-if

End-Procedure

!------------------------------------------------------------------------
! Function:    Process-Main
! Description: This is the main report procedure.  Selects and prints
!              share contribution, carry forward and refunds per employee.
!------------------------------------------------------------------------
Begin-Procedure Process-Main

Begin-Select

A.PROCESS_GROUP                                            (  ,   ,   ) on-break print=never level=1
                                                             after=Page-Eject2
                                                             save=$Prev_PrcsGrp
B.FROM_CUR                                                 (  ,   ,   ) on-break print=never level=1 save=$FromCur
B.TO_CUR                                                   (  ,   ,   ) on-break print=never level=1 save=$ToCur
C.NAME                                                     (+1,001,025)
A.EMPLID                                                   (  ,027,006)
B.EMPL_RCD                                                 (  ,039,003)
A.ESPP_STOCK_CONTRIB                                       (  ,044,022) edit 999,999,999,999.999999
A.ESPP_PURCHASE_AMT                                        (  ,067,022) edit 999,999,999,999.999999
A.ESPP_RESIDUAL_AMT                                        (  ,090,022) edit 999,999,999,999.999999
B.ST_OVRD_MARKET_RT                                        (  ,113,016) edit 9999999.99999999
B.ESPP_RESIDUAL_TYPE
B.ESPP_CONTRIB_AMT


  let #StkContribTotal  = #StkContribTotal  + &a.espp_stock_contrib
  let #PurchaseAmtTotal = #PurchaseAmtTotal + &a.espp_purchase_amt
  let #ResidualAmtTotal = #ResidualAmtTotal + &a.espp_residual_amt
  let #CarryForwardAmt  = 0
  let #RefundAmt        = 0

  if &b.espp_residual_type= 'C'
    let #CarryForwardAmt  = &b.espp_contrib_amt
    let #CarryFwdAmtTotal = #CarryFwdAmtTotal + #CarryForwardAmt
  else
    if &b.espp_residual_type = 'R'
      let #RefundAmt      = &b.espp_contrib_amt
      let #RefundAmtTotal = #RefundAmtTotal + #RefundAmt
    end-if
  end-if

  print #CarryForwardAmt                                   (  ,130,022) edit 999,999,999,999.999999
  print #RefundAmt                                         (  ,153,022) edit 999,999,999,999.999999

from PS_ST_ESPP_PURCH   A,
     PS_ST_CONTRIB_RSDL B,
     PS_ST_PERSON_NAME  C
where A.STOCK_ID        = $PUR_StockID
  and A.STOCK_PLAN_TYPE = $PUR_StPlanType
  and A.STOCK_PLAN      = $PUR_StPlan
  and A.OFFERING_ID     = $PUR_Offering
  and A.PERIOD_END_DT   = $PUR_PurchDt
  and A.EMPLID          = B.EMPLID
  and A.STOCK_ID        = B.STOCK_ID
  and A.STOCK_PLAN_TYPE = B.STOCK_PLAN_TYPE
  and A.STOCK_PLAN      = B.STOCK_PLAN
  and A.OFFERING_ID     = B.OFFERING_ID
  and A.PERIOD_END_DT   = B.PERIOD_END_DT
  and A.PROCESS_GROUP   = B.PROCESS_GROUP
  and A.EMPLID          = C.EMPLID
[$WhereEmplid]
[$WherePrcsGrp]
order by A.PROCESS_GROUP

End-Select

End-Procedure

!----------------------------------------------------------------------
! print Pay Group Totals
!----------------------------------------------------------------------
Begin-Procedure Group-Totals

  print '-'                                                (+1,001,174) fill
  print $Total                                             (+1,001,005)
  print ':'                                                (  ,000,001)

  print #StkContribTotal                                   (  ,044,022) edit 999,999,999,999.999999
  print #PurchaseAmtTotal                                  (  ,067,022) edit 999,999,999,999.999999
  print #ResidualAmtTotal                                  (  ,090,022) edit 999,999,999,999.999999
  print #CarryFwdAmtTotal                                  (  ,130,022) edit 999,999,999,999.999999
  print #RefundAmtTotal                                    (  ,153,022) edit 999,999,999,999.999999
  print '-'                                                (+1,001,174) fill

  let #StkContribTotal  = 0
  let #PurchaseAmtTotal = 0
  let #ResidualAmtTotal = 0
  let #CarryFwdAmtTotal = 0
  let #RefundAmtTotal   = 0

End-Procedure

!------------------------------------------------------------------------
! Page-Eject2
!------------------------------------------------------------------------
Begin-Procedure Page-Eject2

  do Group-Totals
  let $Current = &a.process_group
  if $Prev_PrcsGrp <> $Current
    new-page
  end-if

End-Procedure

!------------------------------------------------------------------------
! SQC Files for called procedures
!------------------------------------------------------------------------
#include 'prcsapi.sqc'   !Update Process Request API
#include 'prcsdef.sqc'   !Update Process Request variable declare
#include 'askftd.sqc'    !Routines to accept from - thru dates
#include 'eoj.sqc'       !End of Job procedure
#include 'sqrtrans.sqc'  !Access Strings Table
#include 'readxlat.sqc'  !Read Translate Table
#include 'reset.sqc'     !End of Program
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date arithmetic
#include 'stescomn.sqc'
#include 'strunctl.sqc'  !Stock Admin controls
#include 'prcslng.sqc'   