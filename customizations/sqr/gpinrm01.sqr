!***********************************************************************
!  GPINRM01:  ESI Remittance Report                                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/08/26:08:22:17                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! Global Payroll       Release 8                                       *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#include 'rellang.sqc'

Begin-Setup
  #Include 'ptset02.sqc'   ! Printer and page-size initialization
  declare-variable
    date $regdt
  end-declare
End-Setup
!***********************************************************************
!  Heading
!***********************************************************************

Begin-Heading 4
  #Include 'stdhdgtr.sqc'
End-Heading

!***********************************************************************

begin-program

  do Init-Report
  do Stdapi-Term
end-program

!***********************************************************************
!  Init Report
!***********************************************************************
Begin-Procedure Init-Report

  move 'GPINRM01' to $ReportID
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Stdapi-Init
  do Init_Printer
  let $language_cd = $CURR_LANGUAGE_CD

  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)

  if $prcs_process_instance = ''
    ! no prompt
  else
    let #prcs_process_instance=To_number($prcs_process_instance)
  end-if


  do Get_Translat_Info
  do Get-Run_Cntl_Values
  do Process_Main

End-Procedure !Init-Report

!***********************************************************************
! Function:    Print_Header                                            *
!                                                                      *
! Description: Prints the Header of the report                         *
!                                                                      *
!***********************************************************************

begin-procedure   Print_Header



  alter-printer font=4 point-size=12
  print $xv_ESI_REM   (1,80,#xfw_ESI_REM) BOLD
  alter-printer font=4 point-size=8
  print $xv_ESTBLMNT  (5,10,#xfw_ESTBLMNT)
  print $estname (5,32,)
  print $xv_EST_ID    (5,120,#xfw_EST_ID)
  print $tmpestab  (5,138,)
  print $xv_REG_NO    (8,10,#xfw_REG_NO)
  print $regno (8,32,)
  print $xv_REG_DATE  (8,120,#xfw_REG_DATE)
  print $regdt (8,138,10) edit 'dd/mm/yyyy'
  print $xv_CON_PRD   (11,10,#xfw_CON_PRD)
  print $xv_FR_DT     (11,32,#xfw_FR_DT)
  print &tmp.prd_bgn_dt     (11,46,10) edit 'dd/mm/yyyy'
  print $xv_TO_DT     (11,120,#xfw_TO_DT)
  print &tmp.prd_end_dt     (11,138,11) edit 'dd/mm/yyyy'
  let #line = 15
  Do Print_Header2


End-procedure !Print_Header

!*********************************************************************

Begin-Procedure Print_Header2

  Let #hrline = #line - 1
  GRAPHIC (#hrline,10,160) HORZ-LINE

  let #col = 11

  let #line = #line + 1

  print $xv_ID            (#line,#col,#xfw_ID)
  add 11 to #col
  print $xv_PY_NAME       (#line,#col,#xfw_PY_NAME)

  add 31 to #col
  print $xv_PY_REG_NBR    (#line,#col,#xfw_PY_REG_NBR)  wrap 15 2

  add 20 to #col
  print $xv_ESI_FOR_MNTH  (#line,#col,#xfw_ESI_FOR_MNTH) wrap 15 2

  add 22 to #col
  print $xv_ESI_GRS_WGE   (#line,#col,#xfw_ESI_GRS_WGE) wrap 20 2

  add 26 to #col
  print $xv_ESI_CONT      (#line,#col,#xfw_ESI_CONT)  wrap 20 2

  add 26 to #col
  print $xv_EMP_CONT      (#line,#col,#xfw_EMP_CONT) wrap 20 2

  Let #hrline = #line + 2
  GRAPHIC (#hrline,10,160) HORZ-LINE
  add 3 to #line
End-procedure !Print_Header2

! *************************************************************************************
Begin-Procedure print_Report_flds

 Do Get_Payee_Name
 Do determine-break-logic

 If $enrolexists = 'Y'
  Do Get_Month
  add 1 to #line
  let #col = 10
    
   print $empid         (#line,#col,11)
   add 12 to #col
   print  $empname      (,#col,30)
   add 31 to #col
   print $esiregno      (,#col,)
   add 20 to #col
   print  $esimonth       (,#col,15)
   add 22 to #col
   print #esigrwg         (,#col,15)   edit 9,99,999.99
   add 26 to #col
   print  #esimcon      (,#col,15)     edit 9,99,999.99
   add 26 to #col
   print #esiecon       (,#col,15)     edit 9,99,999.99
End-If


End-Procedure  !print_Report_flds

!***********************************************************************
! Function:    Get-Values                                              *
!                                                                      *
! Description: Load parameters from report setup and run control       *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Run_Cntl_Values

! retrieves data from the run control

Begin-Select on-error=SQL-Error
GPINRC.GPIN_REPORT_ID
GPINRC.ESTABID
GPINRC.CAL_PRD_ID
GPINRC.END_DT
GPINRC.BGN_DT




     Move &gpinrc.gpin_report_id To $rptid
     Move &gpinrc.cal_prd_id To $calprd
     Move &gpinrc.estabid To $estid



FROM PS_GPIN_PR_RC GPINRC
WHERE OPRID = $prcs_oprid
AND RUN_CNTL_ID = $prcs_run_cntl_id
End-Select
End-Procedure !Get-Run_Cntl_Values


!***********************************************************************
Begin-Procedure Process_Main
  Let $tmpestab = ''
  Let #slno = 0
  Let #esigrwg = 0
  Let #esimcon = 0
  Let #esiecon = 0
  Let $empid = ' '
  let $est_break = 'N'

Begin-Select
TMP.JOBINSTANCE
TMP.EMPLID
TMP.CAL_RUN_ID
TMP.EMPL_RCD
TMP.GP_PAYGROUP
TMP.CAL_ID
TMP.ORIG_CAL_RUN_ID
TMP.RSLT_SEG_NUM
TMP.RSLT_VER_NUM
TMP.RSLT_REV_NUM
TMP.GP_GENRPT_BREAK1
TMP.PRD_BGN_DT
TMP.PRD_END_DT
    Move &tmp.prd_end_dt To $prdenddt 'mm-dd-yyyy'

  if rtrim($tmpestab,' ') <> ''
    If  ((&tmp.emplid <> $empid) and (rtrim($empid,' ') <> ''))
          Do print_Report_flds
          Let #esigrwg = 0
          Let #esimcon = 0
          Let #esiecon = 0
          Move &tmp.emplid To $empid
    Else
         Move &tmp.emplid To $empid
    End-If
  else
    Move &tmp.emplid To $empid
  End-if

    If rtrim($tmpestab,' ') = ''
       Move &tmp.gp_genrpt_break1 to $tmpestab
       Do Get-Estab-Details
       Do Print_Header
    Else
      If rtrim($tmpestab,' ') <> &TMP.GP_GENRPT_BREAK1
         let $est_break = 'Y'
         Move &tmp.gp_genrpt_break1 to $tmpestab
         Do Get-Estab-Details
         Do determine-break-logic

      End-If
   End-If


     Do Get-Rpt_Fields



From PS_GPIN_PR_TMP TMP
WHERE TMP.JOBINSTANCE = #prcs_job_instance
AND EXISTS (SELECT 'X' FROM PS_GPIN_ESI_ENROLL XX
               WHERE XX.EMPLID = TMP.EMPLID
               AND   XX.EFFDT = (SELECT MAX(EFFDT) FROM PS_GPIN_ESI_ENROLL
                                     WHERE EMPLID = XX.EMPLID
                                     AND   EFFDT <= TMP.PRD_END_DT)
               AND   XX.EFF_STATUS = 'A')
ORDER BY TMP.GP_GENRPT_BREAK1, TMP.EMPLID
End-Select

    Do print_Report_flds

  If #page-count = 1
     let #gline = 14
     let #gcol = 10
     Let #vdepth = #line - 14
  Else
     let #gline = 2
     let #gcol = 10
     Let #vdepth = #line - 2
  End-If

   if #line > 0
     GRAPHIC (#line,10,160) HORZ-LINE
   end-if

End-Procedure !Process_Main

!***********************************************************************!
Begin-Procedure Get-Rpt_Fields

Begin-Select
TMP3.EMPLID
TMP3.GPIN_FLD_NAME
   Move &tmp3.gpin_fld_name  To  $rptfldname
TMP3.CALC_RSLT_VAL
   Move &tmp3.calc_rslt_val To #repval

   let $rptfldname = rtrim($rptfldname,' ')
   let $rptfldname = ltrim($rptfldname,' ')


   Evaluate  $rptfldname
      when = 'RM01_ESI_GW'
          add #repval to #esigrwg
          break

      when = 'RM01_ESI_MCON'
          add #repval to #esimcon
          break

      when = 'RM01_ESI_ECON'
           add #repval to #esiecon
           break
   End-Evaluate
FROM PS_GPIN_PR_TMP3 TMP3
WHERE  TMP3.JOBINSTANCE =#prcs_job_instance
AND TMP3.EMPLID = &tmp.emplid
AND TMP3.CAL_RUN_ID = &tmp.cal_run_id
AND TMP3.EMPL_RCD = &tmp.empl_rcd
AND TMP3.GP_PAYGROUP = &tmp.gp_paygroup
AND TMP3.CAL_ID = &tmp.cal_id
AND TMP3.ORIG_CAL_RUN_ID = &tmp.orig_cal_run_id
AND TMP3.RSLT_SEG_NUM = &tmp.rslt_seg_num
AND TMP3.RSLT_VER_NUM = &tmp.rslt_ver_num
AND TMP3.RSLT_REV_NUM = &tmp.rslt_rev_num
ORDER BY TMP3.EMPLID
End-Select
End-Procedure !Get-Rpt_Fields

!*************************************************************************************   !
Begin-Procedure Get_Payee_Name

Let $empname = ''


Begin-Select
EMPNM.NAME
  Move &empnm.name To $empname
FROM PS_NAMES  EMPNM
WHERE EMPNM.EMPLID = $empid
AND EMPNM.EFFDT = (SELECT MAX(EFFDT)
FROM PS_NAMES
WHERE EMPLID = $empid AND EFFDT <= &tmp.prd_end_dt)
End-Select

Let $enrolexists = 'N'
Begin-Select
ENROL.GPIN_REG_NBR
   Move &ENROL.GPIN_REG_NBR To $esiregno
   Let $enrolexists = 'Y'
FROM PS_GPIN_ESI_ENROLL ENROL
WHERE ENROL.EMPLID = $empid
AND EFF_STATUS = 'A'
AND ENROL.EFFDT = (SELECT MAX(EFFDT) FROM
PS_GPIN_ESI_ENROLL WHERE EMPLID = $empid
AND EFFDT <= &tmp.prd_end_dt)
End-Select

End-Procedure !Get_Payee_Name
!***********************************************************************

Begin-Procedure Get_Month

Extract $month from $prdenddt 0  2
   Evaluate $month
      When = '01'
           Let $esimonth = 'Jan'
           break
      When = '02'
           Let $esimonth = 'Feb'
           break
      When ='03'
           Let $esimonth = 'March'
           break
      When = '04'
           Let $esimonth = 'April'
           break
      When = '05'
           Let $esimonth = 'May'
           break
      When = '06'
           Let $esimonth = 'June'
           break
      When = '07'
           Let $esimonth = 'July'
           break
      When = '08'
           Let $esimonth = 'Aug'
           break
      When = '09'
           Let $esimonth = 'Sept'
           break
      When = '10'
           Let $esimonth = 'Oct'
           break
      When = '11'
           Let $esimonth = 'Nov'
           break
      When = '12'
           Let $esimonth = 'Dec'
           break
  End-Evaluate
End-Procedure !Get_Month
!***********************************************************************!
!Procedure: Get-Estab-Details                                           !
!Descr:     To get the Establishment details                            !
!***********************************************************************!

Begin-procedure Get-Estab-Details
 let $tmpestab = rtrim($tmpestab,' ')
Begin-Select
ESTBL.GPIN_REG_NAME

    Move &ESTBL.GPIN_REG_NAME To $estname

From PS_ESTAB_TBL_GPIN ESTBL
Where ESTBL.ESTABID = $tmpestab
And ESTBL.EFFDT     = (SELECT MAX(EFFDT)
                        FROM  PS_ESTAB_TBL_GPIN
                        WHERE ESTABID = ESTBL.ESTABID
                        AND EFFDT <= &tmp.prd_end_dt)
End-Select

Begin-Select
ESTGPIN.GPIN_ESI_NBR
ESTGPIN.GPIN_ESI_DT
   Move &estgpin.gpin_esi_nbr To $regno
   Move &estgpin.gpin_esi_dt To $regdt
From PS_ESTAB_TBL_GPIN ESTGPIN
Where ESTGPIN.ESTABID = $tmpestab
And ESTGPIN.EFFDT <= (SELECT MAX(EFFDT)
FROM PS_ESTAB_TBL_GPIN WHERE
ESTABID = ESTGPIN.ESTABID
AND EFFDT <= &tmp.prd_end_dt)
End-Select
End-Procedure !Get-Estab-Details

!***********************************************************************
! Function:    Get_Tranlat_Info                                        *
!                                                                      *
! Description: Gets the strings printed in this report                 *
!                                                                      *
!***********************************************************************

begin-procedure Get_Translat_Info

   do Add_Report_Translation($ReportID, $rpt_language_cd)

   do Get_Field_Information('GPINRM01','ESI_REM',$xv_ESI_REM,
     #xfw_ESI_REM)
   do Get_Field_Information('GPINRM01','ESTBLMNT',$xv_ESTBLMNT ,#xfw_ESTBLMNT)
   do Get_Field_Information('GPINRM01','EST_ID',$xv_EST_ID,
     #xfw_EST_ID)
   do Get_Field_Information('GPINRM01','REG_NO',$xv_REG_NO,
     #xfw_REG_NO)
   do Get_Field_Information('GPINRM01','REG_DATE',$xv_REG_DATE,
     #xfw_REG_DATE)
   do Get_Field_Information('GPINRM01','CON_PRD',$xv_CON_PRD,
     #xfw_CON_PRD)
   do Get_Field_Information('GPINRM01','FR_DT',$xv_FR_DT,
     #xfw_FR_DT)
   do Get_Field_Information('GPINRM01','TO_DT',$xv_TO_DT,
     #xfw_TO_DT)
   do Get_Field_Information('GPINRM01','ID',$xv_ID,#xfw_ID)

   do Get_Field_Information('GPINRM01','PY_NAME',$xv_PY_NAME,
     #xfw_PY_NAME)

   do Get_Field_Information('GPINRM01','PY_REG_NBR',$xv_PY_REG_NBR,
     #xfw_PY_REG_NBR)
   do Get_Field_Information('GPINRM01','ESI_FOR_MNTH',$xv_ESI_FOR_MNTH,
     #xfw_ESI_FOR_MNTH)
   do Get_Field_Information('GPINRM01','ESI_GRS_WGE',$xv_ESI_GRS_WGE,
     #xfw_ESI_GRS_WGE)
   do Get_Field_Information('GPINRM01','ESI_CONT',$xv_ESI_CONT,
     #xfw_ESI_CONT)
   do Get_Field_Information('GPINRM01','EMP_CONT',$xv_EMP_CONT,
     #xfw_EMP_CONT)
end-procedure
!***********************************************************************
begin-procedure determine-break-logic

  If #line > 45
      if $est_break = 'N'
        let #gline = 2
        let #gcol = 10
        Let #vdepth = #line - 2
      else
        let #gline = 14
        let #gcol = 10
        Let #vdepth = #line - 14
        let $est_break = 'N'
     end-if

     if #line > 0
         GRAPHIC (#line,10,160) HORZ-LINE
     end-if

     GRAPHIC (#line,10,160) HORZ-LINE
     new-page
     Let #line = 3
     Do Print_Header2
     add 1 to #line

  else
           if $est_break  = 'Y'
             let #gline = 14
             let #gcol = 10
             Let #vdepth = #line - 14
             let $est_break = 'N'
             GRAPHIC (#line,10,160) HORZ-LINE
             new-page
             Let #line = 3
             Do Print_Header
             add 1 to #line
             let #gline = 2
             let #gcol = 10
             Let #vdepth = #line - 2
          end-if
  End-If


end-procedure

!***********************************************************************
#include 'gprnctl1.sqc'  !Get run control parameter values
#include 'stdapi.sqc'    !Routines to update run status
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#Include 'getprimj.sqc'  !Routines for selecting EE's primary job
#include 'readxlat.sqc'  ! Get shortname or longname from xlattable
!***********************************************************************