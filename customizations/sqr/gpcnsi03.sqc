!***********************************************************************
! GPCNSI03.SQR     GLOBAL PAYROLL CHINA                                *
!                  ANNUAL BASE REPORTS FOR PHF/SI                      *
!                                                                      *
! Description:                                                         *
!                This program will print the Annual Base Report        *
! for Public Housing Fund and Social Insurance (PHF/SI), and           *
! also generate the csv files for the same                             *
!                                                                      *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:04:37:50                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************



#DEFINE Col1   1
#DEFINE Col33  33
#DEFINE Col45  45
#DEFINE Col72  72
#DEFINE Col70  70
#DEFINE Col80  80
#DEFINE Col86  86
#DEFINE Col98  98
#DEFINE Col99  99
#DEFINE Col110 110
#DEFINE Col115 115
#DEFINE Col126 126
#DEFINE Col145 145
#DEFINE Col146 146
#DEFINE Col142 142
#DEFINE Col154 154
#DEFINE Col167 167
#DEFINE Col31  31
#DEFINE Col32  32
#DEFINE Col44  44
#DEFINE Col66  66
#define Col67  67
#DEFINE Col79  79
#DEFINE Col83  83
#DEFINE Col96  96
#DEFINE Col108 108
#DEFINE Col112 112
#DEFINE Col125 125
#DEFINE Col140 140
#DEFINE Col152 152
#DEFINE Col164 164


begin-procedure Init-Report-SI03
#IFDEF DEBUG
    Let $Prcs_OprID       = 'GPCNG'
    Let $Prcs_Run_Cntl_ID = 'RC'
#ENDIF

    if $RCTL_Contrib_Type <> ''
        let $Where_cond = ' AND   SIV03.GPCN_CONTRIB_TYPE = ' || '''' || $RCTL_Contrib_Type || ''''
    end-if
    Let $Report_ID = 'GPCNSI01'

    do Process-Main-SI03
end-procedure


!**************************************************************************
! Procedure: Process-Main
! Description: Main processing section
!**************************************************************************
begin-procedure Process-Main-SI03
   Let #Total_New_Empl    = 0
   Let #Total_Ter_Empl    = 0
   let $First_EE = 'Y'

#ifdef debug
    show 'Inside procedure Process-Main'
    show '&RC.GPCN_MONTHCD      : ' &RC.GPCN_MONTHCD
    show '&RC.GPCN_YEARCD       : ' &RC.GPCN_YEARCD
    show '&RC.GPCN_CONTRIB_AREA : ' &RC.GPCN_CONTRIB_AREA
    show '&RC.GPCN_CONTRIB_TYPE : ' &RC.GPCN_CONTRIB_TYPE
    show '$Where_cond : ' $Where_cond
#end-if

    let #RC_Month = 0
    let #RC_Year = 0
    move &RC.GPCN_MONTHCD  to #RC_Month
    move &RC.GPCN_YEARCD to #RC_Year
    let #RC_Month = #RC_Month - 1
    if #RC_Month <= 0
        let #RC_Month = 12
        let #RC_Year = #RC_Year - 1
    end-if
    move #RC_Month  to $RC_Month   '00'
    move #RC_Year   to $RC_Year    '0000'

    let $Where_cond = ''
    if $RCTL_Pay_Entity <> ''
        let $Where_cond = ' AND   PYD03.PAY_ENTITY = ' || '''' || $RCTL_Pay_Entity || ''''
    end-if
    if $RCTL_Contrib_Type <> ''
        let $Where_cond = $where_cond || 'AND   SIV03.GPCN_CONTRIB_TYPE = ''' || $RCTL_Contrib_Type || ''''
    end-if

begin-SELECT DISTINCT
SIV03.GPCN_CONTRIB_TYPE  (,) on-break print=never level=1 before=New_Report
DTL03.DESCR
PYE03.PAY_ENTITY
PYE03.DESCR
PYD03.CURRENCY_CD

    let $Pay_Ent        = rtrim(ltrim(&PYE03.PAY_ENTITY , ' '), ' ')
    let $Cont_Type      = rtrim(ltrim(&SIV03.GPCN_CONTRIB_TYPE, ' '), ' ')
    let $Cont_Type_descr_ENG = rtrim(ltrim(&DTL03.DESCR, ' '), ' ')

    If $curr_language_cd <> 'ENG'
       do Get-Trans-ContType
       do Get-Trans-PayEntity

       If rtrim(ltrim($Pay_Ent_Descr , ' '), ' ') = ''
          let $Pay_Ent_Descr  = rtrim(ltrim(&PYE03.DESCR      , ' '), ' ')
       End-if

       If rtrim(ltrim($Cont_Type_Descr , ' '), ' ') = ''
          let $Cont_Type_Descr  = rtrim(ltrim(&DTL03.DESCR, ' '), ' ')
       End-if
    Else
       let $Pay_Ent_Descr  = rtrim(ltrim(&PYE03.DESCR      , ' '), ' ')
       let $Cont_Type_Descr  = rtrim(ltrim(&DTL03.DESCR, ' '), ' ')
    End-if
#ifdef debug
    show '$GP_Paygroup    : ' $GP_Paygroup
    show '$Pay_Ent        : ' $Pay_Ent
    show '$Pay_Ent_Descr  : ' $Pay_Ent_Descr
    show '$Cont_Type      : ' $Cont_Type
#end-if

    let $Registration_num = ''

    do Get-Registration($RCTL_Contrib_Area, $Pay_Ent, $Cont_Type, $RCTL_End_Date, $Registration_num)

    do Print_Heading-SI03

    Let #Total_New_Empl    = 0
    Let #Total_Ter_Empl    = 0

    do Process-Payee-SI03

    do Print_Footer-SI03


    NEW-PAGE

FROM PS_GPCN_PHFSI_RPTG SIV03
  , PS_GP_PYENT PYE03
  , PS_GP_PYENT_DTL PYD03
  , PS_GP_PYGRP PYG03
  , PS_GPCN_CONT_TYPE DTL03
WHERE SIV03.GPCN_MONTHCD      = $RC_Month
AND   SIV03.GPCN_YEARCD       = $RC_Year
AND   SIV03.GPCN_CONTRIB_AREA = &RC.GPCN_CONTRIB_AREA
AND   PYG03.GP_PAYGROUP       = SIV03.GP_PAYGROUP
AND   PYG03.PAY_ENTITY        = PYE03.PAY_ENTITY
AND   PYD03.PAY_ENTITY        = PYE03.PAY_ENTITY
AND   PYD03.EFFDT             = (SELECT MAX(EFFDT)
                             FROM PS_GP_PYENT_DTL PD1
                             WHERE PD1.PAY_ENTITY = PYD03.PAY_ENTITY
                             AND PD1.EFFDT <= &RC.END_DT)
AND   DTL03.GPCN_CONTRIB_TYPE = SIV03.GPCN_CONTRIB_TYPE
[$Where_cond]
end-SELECT

    if #Total_New_Empl = 0 and #Total_Ter_Empl = 0
        show $WARNING_MSG_Lbl
    end-if

end-procedure
!
!**************************************************************************
! Procedure: Process-Payee
! Description: Payee processing section
!**************************************************************************
begin-procedure Process-Payee-SI03

    let $First_EE = 'Y'
    let #page-count = 1
    let #print-line_number = #current-line + 1
#ifdef debug
    show '$Order_by_cl : ' $Order_by_cl
#end-if

begin-SELECT on-error=SQL-Error DISTINCT
PERS03.NAME
PERS03.NAME_AC
SI03.EMPLID
SI03.GP_PAYGROUP
SI03.GPCN_ACOUNT_NUM
SI03.GPCN_ACNT_STATUS
SI03.GPCN_CHANGE_REASON
SI03.GPCN_HUKOU_TYPE
SI03.GPCN_MONTHLY_BASE
SI03.GPCN_PREV_AVG_SAL
SI03.GPCN_CONT_PCT_EE
SI03.GPCN_CONT_PCT_ER
SI03.GPCN_CONT_BASE_EE
SI03.GPCN_CONT_BASE_ER

    let #Total_New_Empl = #Total_New_Empl + 1

    let $VAL_Prn_Id             = ''
    let $VAL_Empl_ACCNT_NUM     = &SI03.GPCN_ACOUNT_NUM
    let #VAL_Monthly_Base       = &SI03.GPCN_MONTHLY_BASE
    let #VAL_Avg_pprev_sal      = &SI03.GPCN_PREV_AVG_SAL
    let #VAL_ee_base            = &SI03.GPCN_CONT_BASE_EE
    let #VAL_er_base            = &SI03.GPCN_CONT_BASE_ER
    let #VAL_er_percentage      = &SI03.GPCN_CONT_PCT_ER
    let #VAL_ee_percentage      = &SI03.GPCN_CONT_PCT_EE

    Let $Emplid             = rtrim(ltrim(&SI03.EMPLID   , ' '), ' ')
    Let $EmployeeName       = rtrim(ltrim(&PERS03.NAME   , ' '), ' ')
    Let $EmployeeACName     = rtrim(ltrim(&PERS03.NAME_AC, ' '), ' ')

    do Get-Empl-Nid !PERS_NID

    LET $Val_Prn_Id = $Empl_Nid

    LET #count = 1

    do Print_Empl_Details-SI03

FROM PS_GPCN_PHFSI_RPTG SI03
  , PS_PERSON_NAME PERS03
  , PS_GP_PYENT PYE103
  , PS_GP_PYGRP PYG103

WHERE SI03.EMPLID            = PERS03.EMPLID
AND   SI03.GPCN_MONTHCD      = $RC_Month
AND   SI03.GPCN_YEARCD       = $RC_Year
AND   SI03.GPCN_CONTRIB_AREA = $RCTL_Contrib_Area
AND   SI03.GPCN_CONTRIB_TYPE = $Cont_Type
AND   SI03.GP_PAYGROUP       = PYG103.GP_PAYGROUP
AND   PYE103.PAY_ENTITY      = $Pay_Ent
AND   PYG103.PAY_ENTITY      = PYE103.PAY_ENTITY
[$Order_by_cl]
end-SELECT
end-procedure


!
!**************************************************************************
! Procedure:  Print_Empl_Details
! Description: Print the headings
!**************************************************************************
begin-procedure Print_Empl_Details-SI03

    let #print-line-cnt = 0

    if #current-line <= 5 or #current-line >= 78
        let #print-line-cnt = #current-line
        new-page
        graphic                                        (7, {Col31} , 4) vert-line
        graphic                                        (7, {Col44} , 4) vert-line
        graphic                                        (7, 68      , 4) vert-line
        graphic                                        (7, 84      , 4) vert-line
        graphic                                        (7, 100     , 4) vert-line
        graphic                                        (7, 116     , 4) vert-line
        graphic                                        (7, 141     , 4) vert-line
        graphic                                        (7, 166     , 4) vert-line
        graphic                                        (7, 132     , 4) vert-line
        graphic                                        (7, 157     , 4) vert-line
        print $EmployeeName       (9, {Col1}) WRAP 27 2
        let $First_EE = 'N'
    else
        graphic                                        (+1, {Col31} , 3) vert-line
        graphic                                        (, {Col44} , 3) vert-line
        graphic                                        (, 68      , 3) vert-line
        graphic                                        (, 84      , 3) vert-line
        graphic                                        (, 100     , 3) vert-line
        graphic                                        (, 116     , 3) vert-line
        graphic                                        (, 141     , 3) vert-line
        graphic                                        (, 166     , 3) vert-line
        graphic                                        (, 132     , 3) vert-line
        graphic                                        (, 157     , 3) vert-line
        print $EmployeeName       (+1, {Col1}) WRAP 27 2
    end-if

    IF LENGTH($EmployeeName) > 27
        print $Emplid             (-1, {Col32})
    ELSE
        print $Emplid             (  , {Col32})
    END-IF

    print $VAL_Prn_Id               (  , {Col45}, 20)
    print $VAL_Empl_ACCNT_NUM       (  , 69)
    print #VAL_Monthly_Base         (  , 85 )      edit '999999999.99'
    print #VAL_Avg_pprev_sal        (  , 101)      edit '999999999.99'
    print #VAL_er_base              (  , 117)      edit '999999999.99'
    print #VAL_er_percentage        (  , 134)      edit '999.99'
    print #VAL_ee_base              (  , 142)      edit '999999999.99'
    print #VAL_ee_percentage        (  , 159)      edit '999.99'

    move #LineNum to $LineNum 000000000
    move #VAL_Monthly_Base   to $VAL_Monthly_Base    0000000000.00
    move #VAL_Avg_pprev_sal  to $VAL_Avg_pprev_sal   0000000000.00
    move #VAL_er_base        to $VAL_er_base         0000000000.00
    move #VAL_er_percentage  to $VAL_er_percentage   000.00
    move #VAL_ee_base        to $VAL_ee_base         0000000000.00
    move #VAL_ee_percentage  to $VAL_ee_percentage   000.00

    let $VAL_Monthly_Base  = '="' || rtrim(ltrim($VAL_Monthly_Base , ' '), ' ') || '"'
    let $VAL_Avg_pprev_sal = '="' || rtrim(ltrim($VAL_Avg_pprev_sal, ' '), ' ') || '"'
    let $VAL_er_base       = '="' || rtrim(ltrim($VAL_er_base      , ' '), ' ') || '"'
    let $VAL_er_percentage = '="' || rtrim(ltrim($VAL_er_percentage, ' '), ' ') || '"'
    let $VAL_ee_base       = '="' || rtrim(ltrim($VAL_ee_base      , ' '), ' ') || '"'
    let $VAL_ee_percentage = '="' || rtrim(ltrim($VAL_ee_percentage, ' '), ' ') || '"'

    let $REPORT_DATA = $EmployeeName
    let $REPORT_DATA = $REPORT_DATA || ',' || $Emplid
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_Prn_Id
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_Empl_ACCNT_NUM
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_Monthly_Base
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_Avg_pprev_sal
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_er_base
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_er_percentage
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_ee_base
    let $REPORT_DATA = $REPORT_DATA || ',' || $VAL_ee_percentage
    write 1 from $REPORT_DATA
end-procedure

!**************************************************************************
! Procedure: Print_Heading
! Description:  Print the headings breakup accross page
!**************************************************************************
!
begin-procedure Print_Heading-SI03

    LET $PrintVal2 = edit(&RC.BGN_DT,'YYYY/MM')||'-'||edit(&RC.END_DT,'YYYY/MM')
    LET $PrintVal4 = rtrim(ltrim(&RC.GPCN_ORG_CODE, ' '), ' ')
    LET $PrintVal6 = $Registration_num
    LET $PrintVal7 = rtrim(ltrim(&PYD03.CURRENCY_CD, ' '), ' ')

    print $Cont_Type_lbl            (+2, 20) Bold
    print $Cont_Type_Descr          (  , 70)
    print $Er_Name_lbl              (+2, 20) Bold
    print $Pay_Ent_Descr            (  , 70)
    print $Org_Code_lbl             (+2, 20) Bold
    print $PrintVal4                (  , 70)
    print $Org_Reg_Id_Lbl           (+2, 20) Bold
    print $PrintVal6                (  , 70)
    print $Cont_Period_yr_Lbl       (+2, 20) Bold
    print $PrintVal2                (  , 70)
    print $Currency_Lbl      (+2, 20) Bold
    print $PrintVal7         (  , 70)

    LET $TXT_STR3 = RTRIM(LTRIM($RC_Month     , ' '), ' ')
    LET $TXT_STR4 = RTRIM(LTRIM(&RC.GPCN_YEARCD      , ' '), ' ')
    LET $TXT_STR1 = RTRIM(LTRIM(&RC.GPCN_CONTRIB_AREA, ' '), ' ')
    LET $TXT_STR2 = $Cont_Type_Descr_ENG

    MOVE '{FILEPREFIX}' to $Filename
    let $Filename = $Filename || $Pay_Ent
    let $Filename = $Filename || '-'
    let $Filename = $Filename || $TXT_STR1
    let $Filename = $Filename || '-'
    let $Filename = $Filename || $TXT_STR2
    let $Filename = $Filename || '-'
    let $Filename = $Filename || $TXT_STR4
    let $Filename = $Filename || 'Annual'
    let $Filename = $Filename || '.csv{FILESUFFIX}'

#ifdef debug
    show '$Filename : ' $Filename
#end-if

    open $Filename as 1 for-writing record=9999:vary
    status = #filestat
    if #filestat != 0
        show 'Cannot open file ' $Filename
    end-if

    let $REPORT_HDR = $Cont_Type_Descr
    let $REPORT_HDR = $REPORT_HDR || ',' || $PrintVal2
    let $REPORT_HDR = $REPORT_HDR || ',' || $Pay_Ent_Descr
    let $REPORT_HDR = $REPORT_HDR || ',' || $PrintVal4
    let $REPORT_HDR = $REPORT_HDR || ',' || $PrintVal6
    write 1 from $REPORT_HDR

    let #LineNum = 1

    graphic                                         (14,1        ,190)  horz-line
    graphic                                         (14, {Col31} , 8)   vert-line
    graphic                                         (14, {Col44} , 8)   vert-line
    graphic                                         (14, 68      , 8)   vert-line
    graphic                                         (14, 84      , 8)   vert-line
    graphic                                         (14, 100     , 8)   vert-line
    graphic                                         (14, 116     , 8)   vert-line
    graphic                                         (14, 141     , 8)   vert-line
    graphic                                         (14, 166     , 8)   vert-line
    graphic                                         (17, 132     , 6)   vert-line
    graphic                                         (17, 157     , 6)   vert-line
    graphic                                         (17, 116     , 50)  horz-line

    print $Ee_Name_lbl                              (16, {Col1}     ) BOLD
    print $Emplid_Lbl                               (16, 32         ) BOLD WRAP 10 4
    print $Ee_Nid_No_Lbl                            (16, 45         ) BOLD WRAP 20 3
    PRINT $EE_CONT_ID_srt_LBL                       (16, 69         ) BOLD WRAP 12 3
    print $MONTHLY_BASE_lbl                         (16, 85         ) BOLD WRAP 12 3
    print $AVG_PREV_SAL_lbl                         (16, 101        ) BOLD WRAP 12 5
    print $CONT_ER_AMT_LBL                          (16, 117        ) BOLD
    print $CONT_Ee_AMT_LBL                          (16, 142        ) BOLD
    print $REMARK_LBL                               (16, 169        ) BOLD
    print $CONT_BASE_Lbl                            (19, 122        ) BOLD
    print $CONT_PERCENTAGE_Lbl                      (19, 136        ) BOLD
    print $CONT_BASE_Lbl                            (19, 147        ) BOLD
    print $CONT_PERCENTAGE_Lbl                      (19, 159        ) BOLD

    graphic                                        (21,{Col1},190) horz-line

end-procedure

!**************************************************************************
! Procedure: Print_Footer
! Description:  Print the Footer Details
!**************************************************************************
!
begin-procedure Print_Footer-SI03
    graphic                     (+2,{Col1},190)  horz-line
    print $TOTAL_EMPL_Lbl       (+2,20)         Bold
    print #Total_New_Empl       (  ,70)         edit '99999999999'
    graphic                     (+1,{Col1},190) horz-line
    move #Total_New_Empl    to $Total_Empl      000000000
    let $REPORT_FOOTER = ltrim(rtrim($Total_Empl,' '),' ')
    write 1 from $REPORT_FOOTER
    close 1
    let #LineNum = 1
end-procedure

