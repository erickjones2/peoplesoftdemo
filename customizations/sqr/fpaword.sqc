!                                                      Start NTI001.COD
!***********************************************************************
!Report Name: FPAWORD.SQC - HRMS Procedures Selection                  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2013/01/17:13:36:27                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! Program Descr: This program will extract the requested data from     *
!                PS_FPAEEFLAT_TBL, PS_PERSON_NAME to create WORD docs*
!***********************************************************************
!***********************************************************************
! Tables Referenced: all tables defined within PS_FPMDOCWORD_TBL1      *
!***********************************************************************

#include 'setenv.sqc'



!------------  Notifications to Edit Management -----------------------
begin-procedure Create-File-FPWORD

#Debugw Display 'Create-File-FPWORD'
let #current = 1

let $sql-statement = 'FPAWORD.SQC,Create-File-FPWORD,Select,PS_FPAEEFLAT_TBL'
Begin-Select On-Error=SQL-Error

FP_WORD () on-break print=never after=Close-file-FPWORD before=Open-file-FPWORD
EMPLID
FP_NOTIF_REF
EFFDT
  do Process-FPWORD(&FP_WORD,&EMPLID,&FP_NOTIF_REF,&EFFDT)
from PS_FPAEEFLAT_TBL
where [$Main_Where]
order by FP_WORD
end-select

end-procedure Create-File-FPWORD



!-------------- Close .NTI Files
begin-procedure Close-file-FPWORD

#Debugw Display 'Close-file-FPWORD'
close #current

end-procedure Close-file-FPWORD



!-------------- Open .NTI Files
begin-procedure Open-file-FPWORD

#Debugw Display 'Open-file-FPWORD'
EVALUATE &FP_WORD
!                                                           End NTI001.COD
!                                                           Start NTI002.COD
when = 'NOT001'
  let $filename = '{IMPORTPREFIX}NOT001.NTI{IMPORTSUFFIX} '
  open $filename as #current FOR-WRITING RECORD=2000
!                                                           End NTI002.COD
Let $Heading = 'action;D_action;date;matricule;statut;D_statut;nom'
!                                                           Start NTI003.COD
  if RTRIM($Heading,' ') <> ''
   Write #current from $Heading
  end-if
  break
!                                                           End NTI003.COD
!                                                           Start NTI002.COD
when = 'NOT002'
  let $filename = '{IMPORTPREFIX}NOT002.NTI{IMPORTSUFFIX} '
  open $filename as #current FOR-WRITING RECORD=2000
!                                                           End NTI002.COD
Let $Heading = 'action;D_action;date;matricule;indbrut;indmaj;grade;D_grade;echelon;salaire;nom'
!                                                           Start NTI003.COD
  if RTRIM($Heading,' ') <> ''
   Write #current from $Heading
  end-if
  break
!                                                           End NTI003.COD
!                                                           Start NTI002.COD
when = 'NOT003'
  let $filename = '{IMPORTPREFIX}NOT003.NTI{IMPORTSUFFIX} '
  open $filename as #current FOR-WRITING RECORD=2000
!                                                           End NTI002.COD
Let $Heading = 'action;D_action;service;D_service;matricule;pctavanc;positstat;D_positstat;grade;D_grade;echelon;precechelon;emploi;nom'
!                                                           Start NTI003.COD
  if RTRIM($Heading,' ') <> ''
   Write #current from $Heading
  end-if
  break
!                                                           End NTI003.COD
!                                                           Start NTI002.COD
when = 'NOT004'
  let $filename = '{IMPORTPREFIX}NOT004.NTI{IMPORTSUFFIX} '
  open $filename as #current FOR-WRITING RECORD=2000
!                                                           End NTI002.COD
Let $Heading = 'action;D_action;service;D_service;date;matricule;positstat;D_positstat;reinteg;detache;nom'
!                                                           Start NTI003.COD
  if RTRIM($Heading,' ') <> ''
   Write #current from $Heading
  end-if
  break
!                                                           End NTI003.COD
!                                                           Start NTI004.COD
END-EVALUATE

end-procedure Open-file-FPWORD
!                                                           End NTI004.COD
!                                                           Start NTI005.COD



! WORD documents processing
begin-procedure Process-FPWORD($FPWORD,$EMPLID,$FP_NOTICE,$EFFDT)

#Debugw Display 'Process-FPWORD'
evaluate $FPWORD
!                                                           End NTI005.COD
!                                                           Start NTI006.COD
when = 'NOT001'
  do Get-NOT001($EMPLID,$FP_NOTICE,$EFFDT)
  break
!                                                           End NTI006.COD
!                                                           Start NTI006.COD
when = 'NOT002'
  do Get-NOT002($EMPLID,$FP_NOTICE,$EFFDT)
  break
!                                                           End NTI006.COD
!                                                           Start NTI006.COD
when = 'NOT003'
  do Get-NOT003($EMPLID,$FP_NOTICE,$EFFDT)
  break
!                                                           End NTI006.COD
!                                                           Start NTI006.COD
when = 'NOT004'
  do Get-NOT004($EMPLID,$FP_NOTICE,$EFFDT)
  break
!                                                           End NTI006.COD
!                                                           Start NTI007.COD
END-EVALUATE

end-procedure Process-FPWORD
!                                                           End NTI007.COD
!                                                           Start NTI008.COD



begin-procedure Get-NOT001($EMPLID,$FP_NOTICE,$EFFDT)

#Debugw Display 'Get-NOT001'
!                                                           End NTI008.COD
let $_sql-statement = 'FPAWORD.SQC,Select,FPAEEFLAT_TBL,Get-NOT001'
Begin-Select On-Error=SQL-Error

FPAEEFLAT_TBL.ACTION
FPAEEFLAT_TBL.EFFDT
FPAEEFLAT_TBL.EMPLID
FPAEEFLAT_TBL.FP_STATUSEE_CD

From PS_FPAEEFLAT_TBL FPAEEFLAT_TBL
Where EMPLID = $Emplid
and   FP_NOTIF_REF = $Fp_notice
order by FPAEEFLAT_TBL.EMPLID

end-Select

let $_sql-statement = 'FPAWORD.SQC,Select,PERSON_NAME,Get-NOT001'
Begin-Select On-Error=SQL-Error

PERSON_NAME.EMPLID
PERSON_NAME.NAME

From PS_PERSON_NAME PERSON_NAME
Where EMPLID = $Emplid
order by PERSON_NAME.EMPLID

end-Select


  Let $Val0 = &FPAEEFLAT_TBL.ACTION
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.ACTION = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMACTION_TBL',$D_FPAEEFLAT_TBL.ACTION)

  Let $Val0 = &FPAEEFLAT_TBL.FP_STATUSEE_CD
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.FP_STATUSEE_CD = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMSTATUSEE_TBL',$D_FPAEEFLAT_TBL.FP_STATUSEE_CD)

Let $Detail= &FPAEEFLAT_TBL.ACTION
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.ACTION
   move '1' to $_Year4
   move '-' to $_DDelimiter
   do Format-DateTime(&FPAEEFLAT_TBL.EFFDT,$Wdate,{DEFMDY},'','')
Let $Detail= $Detail || ';' || $Wdate
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.EMPLID
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_STATUSEE_CD
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.FP_STATUSEE_CD
Let $Detail= $Detail || ';' || &PERSON_NAME.NAME
!                                                           Start NTI009.COD

if RTRIM($Detail,' ') <> ''
   write #_current from $Detail
end-if

end-procedure Get-NOT001
!                                                           End NTI009.COD
!                                                           Start NTI008.COD



begin-procedure Get-NOT002($EMPLID,$FP_NOTICE,$EFFDT)

#Debugw Display 'Get-NOT002'
!                                                           End NTI008.COD
let $_sql-statement = 'FPAWORD.SQC,Select,FPAEEFLAT_TBL,Get-NOT002'
Begin-Select On-Error=SQL-Error

FPAEEFLAT_TBL.ACTION
FPAEEFLAT_TBL.EFFDT
FPAEEFLAT_TBL.EMPLID
FPAEEFLAT_TBL.FP_GROSS_IND
FPAEEFLAT_TBL.FP_INCS_IND
FPAEEFLAT_TBL.FP_RANK_CD
FPAEEFLAT_TBL.FP_STEP_CD
FPAEEFLAT_TBL.MONTHLY_RT

From PS_FPAEEFLAT_TBL FPAEEFLAT_TBL
Where EMPLID = $Emplid
and   FP_NOTIF_REF = $Fp_notice
order by FPAEEFLAT_TBL.EMPLID

end-Select

let $_sql-statement = 'FPAWORD.SQC,Select,PERSON_NAME,Get-NOT002'
Begin-Select On-Error=SQL-Error

PERSON_NAME.EMPLID
PERSON_NAME.NAME

From PS_PERSON_NAME PERSON_NAME
Where EMPLID = $Emplid
order by PERSON_NAME.EMPLID

end-Select


  Let $Val0 = &FPAEEFLAT_TBL.ACTION
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.ACTION = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMACTION_TBL',$D_FPAEEFLAT_TBL.ACTION)

  Let $Val0 = &FPAEEFLAT_TBL.FP_RANK_CD
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.FP_RANK_CD = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMRANK_TBL',$D_FPAEEFLAT_TBL.FP_RANK_CD)

Let $Detail= &FPAEEFLAT_TBL.ACTION
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.ACTION
   move '1' to $_Year4
   move '-' to $_DDelimiter
   do Format-DateTime(&FPAEEFLAT_TBL.EFFDT,$Wdate,{DEFMDY},'','')
Let $Detail= $Detail || ';' || $Wdate
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.EMPLID
Let $Detail= $Detail || ';' || To_Char(&FPAEEFLAT_TBL.FP_GROSS_IND)
Let $Detail= $Detail || ';' || To_Char(&FPAEEFLAT_TBL.FP_INCS_IND)
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_RANK_CD
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.FP_RANK_CD
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_STEP_CD
Let $Detail= $Detail || ';' || To_Char(&FPAEEFLAT_TBL.MONTHLY_RT)
Let $Detail= $Detail || ';' || &PERSON_NAME.NAME
!                                                           Start NTI009.COD

if RTRIM($Detail,' ') <> ''
   write #_current from $Detail
end-if

end-procedure Get-NOT002
!                                                           End NTI009.COD
!                                                           Start NTI008.COD



begin-procedure Get-NOT003($EMPLID,$FP_NOTICE,$EFFDT)

#Debugw Display 'Get-NOT003'
!                                                           End NTI008.COD
let $_sql-statement = 'FPAWORD.SQC,Select,FPAEEFLAT_TBL,Get-NOT003'
Begin-Select On-Error=SQL-Error

FPAEEFLAT_TBL.ACTION
FPAEEFLAT_TBL.DEPTID
FPAEEFLAT_TBL.EMPLID
FPAEEFLAT_TBL.FP_CAREFRZPCT
FPAEEFLAT_TBL.FP_LEGALSTAT_CD
FPAEEFLAT_TBL.FP_RANK_CD
FPAEEFLAT_TBL.FP_STEP_CD
FPAEEFLAT_TBL.FP_STEP_CD_PRV
FPAEEFLAT_TBL.JOBCODE

From PS_FPAEEFLAT_TBL FPAEEFLAT_TBL
Where EMPLID = $Emplid
and   FP_NOTIF_REF = $Fp_notice
order by FPAEEFLAT_TBL.EMPLID

end-Select

let $_sql-statement = 'FPAWORD.SQC,Select,PERSON_NAME,Get-NOT003'
Begin-Select On-Error=SQL-Error

PERSON_NAME.EMPLID
PERSON_NAME.NAME

From PS_PERSON_NAME PERSON_NAME
Where EMPLID = $Emplid
order by PERSON_NAME.EMPLID

end-Select


  Let $Val0 = &FPAEEFLAT_TBL.ACTION
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.ACTION = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMACTION_TBL',$D_FPAEEFLAT_TBL.ACTION)

  Let $Val0 = &FPAEEFLAT_TBL.DEPTID
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.DEPTID = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_DEPT_TBL',$D_FPAEEFLAT_TBL.DEPTID)

  Let $Val0 = &FPAEEFLAT_TBL.FP_LEGALSTAT_CD
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.FP_LEGALSTAT_CD = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMLEGALSTA_TBL',$D_FPAEEFLAT_TBL.FP_LEGALSTAT_CD)

  Let $Val0 = &FPAEEFLAT_TBL.FP_RANK_CD
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.FP_RANK_CD = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMRANK_TBL',$D_FPAEEFLAT_TBL.FP_RANK_CD)

Let $Detail= &FPAEEFLAT_TBL.ACTION
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.ACTION
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.DEPTID
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.DEPTID
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.EMPLID
Let $Detail= $Detail || ';' || To_Char(&FPAEEFLAT_TBL.FP_CAREFRZPCT)
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_LEGALSTAT_CD
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.FP_LEGALSTAT_CD
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_RANK_CD
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.FP_RANK_CD
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_STEP_CD
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_STEP_CD_PRV
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.JOBCODE
Let $Detail= $Detail || ';' || &PERSON_NAME.NAME
!                                                           Start NTI009.COD

if RTRIM($Detail,' ') <> ''
   write #_current from $Detail
end-if

end-procedure Get-NOT003
!                                                           End NTI009.COD
!                                                           Start NTI008.COD



begin-procedure Get-NOT004($EMPLID,$FP_NOTICE,$EFFDT)

#Debugw Display 'Get-NOT004'
!                                                           End NTI008.COD
let $_sql-statement = 'FPAWORD.SQC,Select,FPAEEFLAT_TBL,Get-NOT004'
Begin-Select On-Error=SQL-Error

FPAEEFLAT_TBL.ACTION
FPAEEFLAT_TBL.DEPTID
FPAEEFLAT_TBL.EFFDT
FPAEEFLAT_TBL.EMPLID
FPAEEFLAT_TBL.FP_LEGALSTAT_CD
FPAEEFLAT_TBL.FP_RETURN_CD
FPAEEFLAT_TBL.FP_SCNDMT_CD

From PS_FPAEEFLAT_TBL FPAEEFLAT_TBL
Where EMPLID = $Emplid
and   FP_NOTIF_REF = $Fp_notice
order by FPAEEFLAT_TBL.EMPLID

end-Select

let $_sql-statement = 'FPAWORD.SQC,Select,PERSON_NAME,Get-NOT004'
Begin-Select On-Error=SQL-Error

PERSON_NAME.EMPLID
PERSON_NAME.NAME

From PS_PERSON_NAME PERSON_NAME
Where EMPLID = $Emplid
order by PERSON_NAME.EMPLID

end-Select


  Let $Val0 = &FPAEEFLAT_TBL.ACTION
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.ACTION = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMACTION_TBL',$D_FPAEEFLAT_TBL.ACTION)

  Let $Val0 = &FPAEEFLAT_TBL.DEPTID
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.DEPTID = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_DEPT_TBL',$D_FPAEEFLAT_TBL.DEPTID)

  Let $Val0 = &FPAEEFLAT_TBL.FP_LEGALSTAT_CD
  Let $Val1 = $EFFDT
  Let $WherePROMPT = 'ZZZ.FP_LEGALSTAT_CD = ''' || $Val0 || ''' and ZZZ.EFFDT <= {DATEIN-PREFIX}''' || $Val1 || '''{DYN-DateIn-Suffix}'
  Do Get-Descr-PROMPT($WherePROMPT,'PS_FPMLEGALSTA_TBL',$D_FPAEEFLAT_TBL.FP_LEGALSTAT_CD)

Let $Detail= &FPAEEFLAT_TBL.ACTION
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.ACTION
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.DEPTID
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.DEPTID
   move '1' to $_Year4
   move '-' to $_DDelimiter
   do Format-DateTime(&FPAEEFLAT_TBL.EFFDT,$Wdate,{DEFMDY},'','')
Let $Detail= $Detail || ';' || $Wdate
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.EMPLID
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_LEGALSTAT_CD
Let $Detail= $Detail || ';' || $D_FPAEEFLAT_TBL.FP_LEGALSTAT_CD
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_RETURN_CD
Let $Detail= $Detail || ';' || &FPAEEFLAT_TBL.FP_SCNDMT_CD
Let $Detail= $Detail || ';' || &PERSON_NAME.NAME
!                                                           Start NTI009.COD

if RTRIM($Detail,' ') <> ''
   write #_current from $Detail
end-if

end-procedure Get-NOT004
!                                                           End NTI009.COD
!                                                           Start NTI010.COD



!---- Fetch the XLATTABLE description ----!
Begin-Procedure Get-Descr-XLAT($WhereXLAT,$Fieldname,$Effdt,:$Wdescr)

#Debugw Display 'Get-Descr-XLAT'
#Debugw Display $WhereXLAT
#Debugw Display $Fieldname
#Debugw Display $Effdt


let $_sql-statement = 'FPAWORD.SQC,Get-Descr-XLAT ,Select,XLATTABLE WWW'
Begin-Select On-Error=SQL-Error

WWW.FIELDNAME
WWW.FIELDVALUE

   let $FieldName = &WWW.FIELDNAME
   let $FieldValue = &WWW.FIELDVALUE
   do Read-Translate-Table
   Let $WDescr = $XlatLongName
   #debugw display $Wdecsr

From  PSXLATITEM WWW
Where WWW.FIELDVALUE = $WhereXLAT
and   WWW.FIELDNAME = $Fieldname
and   WWW.EFF_STATUS ='A'
and   WWW.EFFDT = (select MAX(EFFDT) from PSXLATITEM
                  Where FIELDVALUE = WWW.FIELDVALUE
                  and   FIELDNAME = WWW.FIELDNAME
                  !and   EFF_STATUS = WWW.EFF_STATUS
                  and   EFFDT <= {DATEIN-PREFIX}$Effdt{DATEIN-SUFFIX})

End-Select

end-procedure Get-Descr-XLAT



!---- Fetch the PROMPT description ----!
Begin-Procedure Get-Descr-PROMPT($WherePROMPT,$PromptTable,:$Wdescr)

concat ' ZZZ' with $PromptTable


#Debugw Display 'Get-Descr-PROMPT'
#Debugw Display $WherePROMPT
#Debugw Display $Value
#Debugw Display $PromptTable

let $_sql-statement = 'FPAWORD.SQC,Get-Descr-PROMPT,Select,' || $PromptTable || 'ZZZ' || ''''
Begin-Select On-Error=SQL-Error

Distinct ZZZ.DESCR  &WDESCR

   Let $WDescr = &WDESCR
   #Debugw Display $WDescr

From  [PS_FPMSTATUSEE_TBL ZZZ:$PromptTable]
Where [$WherePROMPT]

End-Select

end-procedure Get-Descr-PROMPT
!                                                           End NTI010.COD
