!***********************************************************************
!   GPSGPY52:  Recipient Report                                        *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:04:03:08                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! 08/09/04 : SN : Total Contribution in Footer is calculated incorrectly
!
#include 'setenv.sqc'   !Set environment
#include 'setup31.sqc'  !Printer and page-size initialization, SETUP31 and
                        !  SETUP32 SQCs to support HTML, HP PCL, PostScript,
                        !  PDF and Window in addition to Line Printer as
                        !  the output type.


!***********************************************************************
! begin-report                                                         *                                                          *
!                                                                      *
! Called By: N/A                                                       *
! Calls:     Init-Processing                                           *
!            Get-Values                                                *
!            Process-Main                                              *
!            Reset                                                     *
!            End-Report                                                *
!***********************************************************************

begin-report

  do Init-Processing

  do Get-Values

  do Process-Main
 
  do Reset                        ! called from reset.sqc

  do Update-Prcs-Run-Status       ! called from prcsapi.sqc to update 
                                  ! the Process Monitor to Success
end-report

!***********************************************************************
! Select-Parameters                                                    *                                                          *
!                                                                      *
! Called By: Get-Values                                                *
!***********************************************************************

begin-procedure Select-Parameters

let $Quote = ''''

begin-SELECT

#ifdef debugy
    show 'BEGINNING RUNCONTROL SELECT'
#end-if

A.OPRID                     &OPRID
A.RUN_CNTL_ID               &RUN_CNTL_ID
A.LANGUAGE_CD               &LANGUAGE_CD
A.DEBIT_DT                  &DEBIT_DT
A.PAYMENT_DT                &PAYMENT_DT
A.GPSG_RCPNT_OPTN           &GPSG_RCPNT_OPTN
A.PIN_NUM                   &PIN_NUM

FROM PS_GPSG_RC_RCPT_FL A
WHERE A.OPRID     = $PRCS_OPRID
AND A.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
end-SELECT

end-procedure !Select-Parameters

!***************************
begin-heading 8
!***************************

#include 'stdhdg01.sqc'

!***********************************************************************
! Print column definitions.  Some fields are lined up vertically with  *
!   other fields on the report.  The first occurence of a column       *
!   location is defined.  After that, fields that occur in the same    *
!   column use the first field's column definition.                    *
!***********************************************************************

  #define Col_1        1
  #define Col_1a       15
  #define Col_1b       27
  #define Col_2        32
  #define Col_2f       39
  #define Col_2i       42
  #define Col_3        63
  #define Col_3h       63
  #define Col_3i       74
  #define Col_4        95
  #define Col_4h       93
  #define Col_4i       94
  #define Col_4h2      101

  Do Format-DateTime($PAYMENT_DT,$PAYMENT_DT_OUT, {DEFDATE},'','')

  print $RECIPIENT       (+2,{Col_1})
  print $Last_Rcp_ID    (,{Col_2})
  print $PAYMENT_DATE    (,{Col_3h})
  print $PAYMENT_DT_OUT  (,{Col_4h})
  print $PAY_ENTITY      (+1,{Col_1})
  print $GPSG_PYENT_DESCR     (,{Col_2})
  print $GROUP_NUMBER    (,{Col_3h})
  print $GPSG_RCP_GROUP_ID    (,{Col_4h})

  print $MEMBERSHIP_NO    (+2,{Col_1})
  print $EMPLOYEE_ID      (,{Col_1a})
  print $EMPLOYEE_RCD     (,{Col_1b})
  print $FIRST_NAME       (,{Col_2})
  print $LAST_NAME        (,{Col_3})
  print $AMOUNT           (,{Col_4h2})

  graphic (, {Col_1}, 13)   horz-line
  graphic (, {Col_1a},11)   horz-line
  graphic (, {Col_1b}, 3)   horz-line
  graphic (, {Col_2}, 30)   horz-line
  graphic (, {Col_3}, 30)   horz-line
  graphic (, {Col_4}, 12)   horz-line

end-heading

!***********************************************************************
! Init-Processing                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Define-Prcs-Vars        - prcsapi.sqc (prcsdef.sqc)    *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Init-Report                                            *
!               Init-Number             - number.sqc                   *
!               Get-Language-Codes      - prcslng.sqc                  *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!***********************************************************************

begin-procedure Init-Processing

  do Init-Datetime                ! called from datetime.sqc

  do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)

  do Define-Prcs-Vars             ! called from prcsapi.sqc (prcsdef.sqc)

  do Get-Run-Control-Parms        ! In prcsapi.sqc

  do Init-Report

  do Init-Number                  ! called from number.sqc

  do Get-Language-Codes           ! called from prcslng.sqc

  Let #FileCount = 1

end-procedure !Init-Processing

!***********************************************************************
! Init-Report                                                          *
!                                                                      *
! Called By: Init-Processing                                           *
! Calls:     Init_Report_Translation    -   sqrtrans.sqc               *
!            Append_Report_Translation  -   sqrtrans.sqc               *
!            Get_Field_Information                                     *
!            Format-DateTime                                           *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header, date formatting, time           *
!               formatting, translations & strings tables retrievals.  *
!***********************************************************************

begin-procedure Init-Report

! Translations procedures & Strings Table retrievals.             

  do Init_Report_Translation ($ReportID,$Language_Code)
  do Append_Report_Translation ('GPSGPY52')

  do Get_Field_Information ('GPSGPY52','RECIPIENT_REPORT', $REC_RPT,            #DW)
  do Get_Field_Information ('GPSGPY52','RECIPIENT',        $RECIPIENT,          #DW)
  do Get_Field_Information ('GPSGPY52','PAY_ENTITY',       $PAY_ENTITY,         #DW)
  do Get_Field_Information ('GPSGPY52','PAYMENT_DATE',     $PAYMENT_DATE,       #DW)
  do Get_Field_Information ('GPSGPY52','GROUP_NUMBER',     $GROUP_NUMBER,       #DW)
  do Get_Field_Information ('GPSGPY52','MEMBERSHIP_NO',    $MEMBERSHIP_NO,      #DW)
  do Get_Field_Information ('GPSGPY52','FIRST_NAME',       $FIRST_NAME,         #DW)
  do Get_Field_Information ('GPSGPY52','LAST_NAME',        $LAST_NAME,          #DW)
  do Get_Field_Information ('GPSGPY52','AMOUNT',           $AMOUNT,             #DW)
  do Get_Field_Information ('GPSGPY52','EMPLOYEE_ID',      $EMPLOYEE_ID,        #DW)
  do Get_Field_Information ('GPSGPY52','EMPLOYEE_RCD',     $EMPLOYEE_RCD,       #DW)

! Report variables. 

  let $ReportID       = 'GPSGPY52'
  let $ReportTitle    = $REC_RPT
  let $ReportDate     = $AsOfToday
  let $ReportTime     = $AsOfNow

! Dates:   All of Europe uses date format DD/MM/YYYY                  
!          The US uses date format of MM/DD/YYYY                       

! Numbers: The U.S. and the U.K. use NN,NNN.NN                        
!          The rest of Europe uses NN.NNN,NN                          

    if $Language_Code      = 'ENG'
        let $ReportDateType   = '0'             ! resolved in datetime.sqc
    else
        let $ReportDateType   = '1'
    end-if

    if $Language_Code = 'ENG' or $Language_Code = 'INE'
        let $ReportSDecimal   = '.'
        let $ReportSThousand  = ','
    else
        let $ReportSDecimal   = ','             ! resolved in number.sqc
        let $ReportSThousand  = '.'             ! resolved in number.sqc
    end-if

! Initialize date formatting.                                          *

    let $Date_Init = '1900-01-01 00:00:00.000'
    
    #ifdef ORACLE
           let $Date_Init = '01-NOV-1999'
    #end-if

    do Format-DateTime($Date_Init, $out999, {DEFDATE}, '', '')

end-procedure !Init-Report

!***********************************************************************
! Get-Values                                                           *
!                                                                      *
! Called By: begin-report                                              *
! Calls:     Ask-Values         -   this program                       *
!            Select-Parameters  -   tlrnctl1.sqc                       *
!                                                                      *
! Description:  If process instance blank, prompt user for input       *
!               If populated, get values from run control              *
!               Format dates to print in header                        *
!***********************************************************************

begin-procedure Get-Values

    if $prcs_process_instance = ''
        do Ask-Values
    else
        do Select-Parameters
    end-if

    do Format-DateTime($FromDate,$HdgFromDt,{DEFDATE}, '', '')
    do Format-DateTime($ThruDate,$HdgThruDt,{DEFDATE}, '', '')

end-procedure !Get-Values

!***********************************************************************
! Ask-Values                                                           *
!                                                                      *
! Called By: Get-Values                                                *
! Calls:     none                                                      *
!                                                                      *
! Description: Prompt user to input values                             *
!***********************************************************************

begin-procedure Ask-Values

    input $X          'This report cannot be run from the SQR icon.  Please launch it from online.' TYPE=CHAR  maxlen=1

end-procedure !Ask-Values

!***********************************************************************
! Process-Main                                                         *
!                                                                      *
! Called By: begin-report                                              *
! Calls:     Sel_Recipients                                            *
!            All_Recipients                                            *
!            Deduction                                                 *
!            Generate Footer                                           *
!***********************************************************************

begin-procedure Process-Main
  
  Let #TotalContrib = 0
  Let #TotalCommission = 0
  Let #NetContribution = 0

  If &GPSG_RCPNT_OPTN = '10'
     do Sel_Recipients
  else
     If &GPSG_RCPNT_OPTN = '20'
        do All_Recipients
     else
        If &GPSG_RCPNT_OPTN = '30'
           do Deduction
        end-if
     end-if
  end-if

  do Generate_Footer

end-procedure !Process-Main

!***********************************************************************
! Sel_Recipients                                                       *
!                                                                      *
! Called By: Process-Main                                              *
! Calls:     New_Report                                                *
!***********************************************************************

begin-procedure Sel_Recipients

begin-select
D.RECIPIENT_ID       (,) on-break print=never level=1 before=New_Report
C.GPSG_MEMBER_ID     (+1,{Col_1})
C.EMPLID             (,{Col_1a})
C.EMPL_RCD           (,{Col_1b})
C.FIRST_NAME         (,{Col_2})
C.LAST_NAME          (,{Col_3})
C.GP_PMT_AMT         (,{Col_4}) edit 9,999,999.99
D.GPSG_PYENT_DESCR
D.PAYMENT_DT
D.GPSG_RCP_GROUP_ID
D.PAY_ENTITY

  Let $Last_Rcp_ID        = $RECIPIENT_ID
  Let $RECIPIENT_ID      = &D.RECIPIENT_ID
  Let $GPSG_PYENT_DESCR       = &D.GPSG_PYENT_DESCR
  Let $PAYMENT_DT        = &D.PAYMENT_DT
  Let $GPSG_RCP_GROUP_ID = &D.GPSG_RCP_GROUP_ID
  Let $Pay_Entity2       = &D.PAY_ENTITY

from PS_GPSG_RCPPAY_DTL C,
     PS_GPSG_RCPPAY_HDR D,
     PS_GPSG_RC_RCP_LST E

Where C.RECIPIENT_ID      = D.RECIPIENT_ID
  and C.GPSG_RCP_GROUP_ID = D.GPSG_RCP_GROUP_ID
  and C.PAY_ENTITY        = D.PAY_ENTITY
  and C.PAYMENT_DT        = D.PAYMENT_DT
  and E.OPRID             = $PRCS_OPRID
  and E.RUN_CNTL_ID       = $PRCS_RUN_CNTL_ID
  and D.RECIPIENT_ID      = E.RECIPIENT_ID

order by D.RECIPIENT_ID,
         C.LAST_NAME,
         C.FIRST_NAME,
         C.EMPLID,
         C.EMPL_RCD
end-select

end-procedure !Sel_Recipients

!***********************************************************************
! All_Recipients                                                       *
!                                                                      *
! Called By: Process-Main                                              *
! Calls:     New_Report                                                *
!***********************************************************************

begin-procedure All_Recipients

begin-SELECT
B.RECIPIENT_ID       (,) on-break print=never level=1 before=New_Report
A.GPSG_MEMBER_ID     (+1,{Col_1})
A.EMPLID             (,{Col_1a})
A.EMPL_RCD           (,{Col_1b})
A.FIRST_NAME         (,{Col_2})
A.LAST_NAME          (,{Col_3})
A.GP_PMT_AMT         (,{Col_4}) edit 9,999,999.99
B.GPSG_PYENT_DESCR
B.PAYMENT_DT
B.GPSG_RCP_GROUP_ID
B.PAY_ENTITY

  Let $Last_Rcp_ID        = $RECIPIENT_ID
  Let $RECIPIENT_ID      = &B.RECIPIENT_ID
  Let $GPSG_PYENT_DESCR       = &B.GPSG_PYENT_DESCR
  Let $PAYMENT_DT        = &B.PAYMENT_DT
  Let $GPSG_RCP_GROUP_ID = &B.GPSG_RCP_GROUP_ID
  Let $Pay_Entity2       = &B.PAY_ENTITY

From PS_GPSG_RCPPAY_DTL A,
     PS_GPSG_RCPPAY_HDR B

Where A.RECIPIENT_ID = B.RECIPIENT_ID
  and A.GPSG_RCP_GROUP_ID = B.GPSG_RCP_GROUP_ID
  and A.PAY_ENTITY = B.PAY_ENTITY
  and A.PAYMENT_DT = B.PAYMENT_DT

order by B.RECIPIENT_ID,
         A.LAST_NAME,
         A.FIRST_NAME,
         A.EMPLID,
         A.EMPL_RCD
end-SELECT

end-procedure !All_Recipients

!***********************************************************************
! Deduction                                                            *
!                                                                      *
! Called By: Process-Main                                              *
! Calls:     New_Report                                                *
!***********************************************************************

Begin-procedure Deduction
begin-select
G.RECIPIENT_ID       (,) on-break print=never level=1 before=New_Report
F.GPSG_MEMBER_ID     (+1,{Col_1})
F.EMPLID             (,{Col_1a})
F.EMPL_RCD           (,{Col_1b})
F.FIRST_NAME         (,{Col_2})
F.LAST_NAME          (,{Col_3})
F.GP_PMT_AMT         (,{Col_4}) edit 9,999,999.99
G.GPSG_PYENT_DESCR
G.PAYMENT_DT
G.GPSG_RCP_GROUP_ID
G.PAY_ENTITY

  Let $Last_Rcp_ID        = $RECIPIENT_ID
  Let $RECIPIENT_ID      = &G.RECIPIENT_ID
  Let $GPSG_PYENT_DESCR       = &G.GPSG_PYENT_DESCR
  Let $PAYMENT_DT        = &G.PAYMENT_DT
  Let $GPSG_RCP_GROUP_ID = &G.GPSG_RCP_GROUP_ID  
  Let $Pay_Entity2       = &G.PAY_ENTITY

From PS_GPSG_RCPPAY_DTL F,
     PS_GPSG_RCPPAY_HDR G

Where F.RECIPIENT_ID      = G.RECIPIENT_ID
  and F.GPSG_RCP_GROUP_ID = G.GPSG_RCP_GROUP_ID
  and F.PAY_ENTITY        = G.PAY_ENTITY
  and F.PAYMENT_DT        = G.PAYMENT_DT
  and F.PIN_NUM           = &PIN_NUM

order by G.RECIPIENT_ID, 
         F.LAST_NAME, 
         F.FIRST_NAME,
         F.EMPLID,
         F.EMPL_RCD
end-select

end-procedure !Deduction

!***********************************************************************
! New_Report                                                           *
!                                                                      *
! Called By: Sel_Recipients                                            *
!            All_Recipients                                            *
!            Deduction                                                 *
! Calls:     Generate_Footer                                           *
!***********************************************************************

begin-procedure New_Report
  If #FileCount > 1
    do Generate_Footer
  end-if

  If &GPSG_RCPNT_OPTN = '10'
    Let $RECIPIENT_ID = &D.RECIPIENT_ID
  end-if

  If &GPSG_RCPNT_OPTN = '20'
    Let $RECIPIENT_ID = &B.RECIPIENT_ID
  end-if

  If &GPSG_RCPNT_OPTN = '30'
    Let $RECIPIENT_ID = &G.RECIPIENT_ID
  end-if

  Let $FileName = substr($RECIPIENT_ID,1,6)
  Let $FileCount = edit(#FileCount,'99')
  Let $FileCount = translate($FileCount,' ','0')
  Let $FileName = $FileName || $FileCount || '.pdf'
  Let $FileName = translate($FileName,' ','0')
  LET $FileName = '{FILEPREFIX}' || $FileName

  new-report $FileName

  Let #FileCount = #FileCount + 1

end-procedure !New_Report

!***********************************************************************
! New_Report                                                           *
!                                                                      *
! Called By: Process-Main                                              *
!            New_Report                                                *
!***********************************************************************

begin-procedure Generate_Footer
begin-select
SUM(H.GPSG_TT_PAY_AMT)  &TOT_CONTRIB
SUM(H.GPSG_TT_COMM_AMT) &TOT_COMM
SUM(H.GPSG_TT_NET)      &NET_AMT
  print 'Total Contribution:'  (+2,{Col_1}) 
!  print &H.GPSG_TT_PAY_AMT     (,{Col_2f}) edit 9,999,999.99
  print &TOT_CONTRIB     (,{Col_2f}) edit 9,999,999.99
  print 'Total Commission:'    (+1,{Col_1})
!  print &H.GPSG_TT_COMM_AMT    (,{Col_2f}) edit 9,999,999.99
  print &TOT_COMM    (,{Col_2f}) edit 9,999,999.99
  print 'Net Contribution:'    (+1,{Col_1})
!  print &H.GPSG_TT_NET         (,{Col_2f}) edit 9,999,999.99
  print &NET_AMT         (,{Col_2f}) edit 9,999,999.99

From PS_GPSG_RCPPAY_FTR H
Where H.RECIPIENT_ID=$RECIPIENT_ID
and H.PAYMENT_DT=$PAYMENT_DT
! and H.GPSG_RCP_GROUP_ID=$GPSG_RCP_GROUP_ID
! and H.PAY_ENTITY=$Pay_Entity2
end-select

end-procedure !Generate_Footer

!***********************************************************************
! Additional SQCs included in the report                               *
!***********************************************************************

#include 'datetime.sqc'     !Routines for date and time formatting
#include 'datemath.sqc'     !Date conversion procedures
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
#include 'prcsapi.sqc'      !Replaces stdapi.sqc
#include 'prcslng.sqc'      !Replaces getrplng.sqc
#include 'readxlat.sqc'     !Procedure to read values from xlattable
#include 'reset.sqc'        !Reset printer procedure
#include 'number.sqc'       !Routines to format numbers
