!***********************************************************************
!                   GPINPY02:  ESI Form 7                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!          $Date:  2013/01/18:04:00:00                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment

Begin-Setup

   declare-layout FORM_7
      paper-size   = (16.54,11.69) ! A3 size
      orientation  = LANDSCAPE
      line-height  = 8
   end-declare

   declare-report FORM_7_RPT
      layout = FORM_7
   end-declare

   declare-variable
       date $JobDate
       date $Emp_Begin_Dt
   end-declare

End-Setup

Begin-footing 1
    page-number (,148) 'Page '
End-footing

!***********************************************************************
begin-program

   do Init-Report
   do Process-Main
   do Stdapi-Term
end-program

!***********************************************************************
! Procedure:    Init_Val                                               *
!                                                                      *
! Description: Prints the Header of the report                         *
!                                                                      *
!***********************************************************************
begin-procedure   Init_Val
   let #Heading_Font      = 4
   let #HeadingPntSize    = 9
   let #HeadingPntSize1   = 14
   let #StdPntSize        = 6
   let #depth3     = 1
   let #Start_Line = 1
end-procedure

!***********************************************************************
!  Procedure: Init Report                                              *
!                                                                      *
!***********************************************************************
begin-procedure Init-Report
   move 'GPINPY02' to $ReportID
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Stdapi-Init

   if $proc__instance = ''
   else
      let #proc_instance=To_number($proc__instance)
   end-if

   do Get_Translat_Info
   do Get_Run_Cntrl_Dtls
   do Init_Val
end-procedure !Init-Report


!***************************************************************************************
!  Procedure: Get_Run_Cntrl_Dtls                                                       *
!  Purpose  : This procedure gets the run control values from the run control record   *
!                                                                                      *
!***************************************************************************************
Begin-Procedure Get_Run_Cntrl_Dtls
Begin-Select
RNCT.GPIN_CONTRIB_ID
!RNCT.GPIN_ESI_OFFICE
RNCT.GPIN_YEAR_CD
RNCT.BGN_DT
RNCT.END_DT
RNCT.ESTABID
RNCT.GPIN_FORM7_SORT

    move &RNCT.GPIN_CONTRIB_ID to #contrib_id

    let $Begin_Date = edit(&RNCT.BGN_DT,'dd/mm/yyyy')
    let $End_Date   = edit(&RNCT.END_DT,'dd/mm/yyyy')

FROM PS_GPIN_FORM7_RC RNCT
WHERE  RNCT.OPRID    = $prcs_oprid
AND RNCT.RUN_CNTL_ID = $prcs_run_cntl_id
End-Select
End-Procedure    ! Get_Run_Cntrl_Dtls

!**************************************************************************
! Procedure:   Process-Main                                               *
! Description: The main process                                           *
!                                                                         *
!**************************************************************************
begin-procedure Process-Main

    do Init_Variables
    do Print_Form7

End-Procedure

!***********************************************************************
! Procedure:    Init_Variables                                         *
!                                                                      *
! Description: Printing form 7                                         *
!                                                                      *
!***********************************************************************

begin-procedure  Init_Variables

    let $Prev_Emplid   = ''
    let $Prev_Reg_No   = ''
    let #Sl_No = 0
    let #Year1 = &RNCT.GPIN_YEAR_CD
    let $Year1 = edit(#Year1,'9999')
    let #Year2 = #Year1 + 1
    let $Year2 = edit(#Year2,'9999')
    if rtrim(ltrim(&RNCT.GPIN_FORM7_SORT, ' '), ' ') = '10'
       let $ORDERCL = 'ORDER BY E.NAME_DISPLAY,A.EMPLID,A.GPIN_YEAR,A.MONTH,B.DESCR'
    else
       let $ORDERCL = 'ORDER BY B.DESCR,E.NAME_DISPLAY,A.EMPLID,A.GPIN_YEAR,A.MONTH'

    end-if
    if rtrim(ltrim(&RNCT.GPIN_CONTRIB_ID, ' '), ' ') = '1'
       let $WHERECL = 'AND(A.GPIN_YEAR = ' || ''''||$Year1||'''' ||  ' AND A.MONTH in (4,5,6,7,8,9))'
       let #Month1 = 4
       let #Month2 = 5
       let #Month3 = 6
       let #Month4 = 7
       let #Month5 = 8
       let #Month6 = 9
    else
       let $WHERECL = 'AND( (A.GPIN_YEAR = ' || ''''||$Year1||'''' ||'  AND A.MONTH in (10,11,12)) OR (A.GPIN_YEAR = ' ||''''||$Year2||'''' ||' AND A.MONTH in (1,2,3)))'
       let #Month1 = 10
       let #Month2 = 11
       let #Month3 = 12
       let #Month4 = 1
       let #Month5 = 2
       let #Month6 = 3
    end-if
end-procedure


!***********************************************************************
! Procedure:    Print_Form7                                            *
!                                                                      *
! Description: Printing form 7                                         *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Form7

    do Print_Header
    do Print_Body
    do Get_ESI_Data
    do Print_Footer

end-procedure

!***********************************************************************
! Procedure:    Print_Header                                           *
!                                                                      *
! Description: Printing the form header                                *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Header

    do Get_Header_Data

    alter-printer font = #Heading_Font point-size = #HeadingPntSize1
    print $HEAD_MAIN1_LBL   (1,77)bold
    alter-printer font = #Heading_Font point-size = #StdPntSize
    alter-printer font = #Heading_Font point-size = #HeadingPntSize
    print $HEAD_MAIN_LBL    (+2,72)
    alter-printer font = #Heading_Font point-size = #StdPntSize
    alter-printer font = #Heading_Font point-size = #HeadingPntSize
    print $HEAD_MAIN2_LBL    (+2,66)
    print $HEAD_MAIN3_LBL    (+1,77)
    alter-printer font = #Heading_Font point-size = #StdPntSize
    print $CONTRIB_PRD_LBL   (+2,2)
    print $Contrib_Period     (,12)
end-procedure
! end of Print_Header

!***********************************************************************
! Procedure:    Print_Body                                             *
!                                                                      *
! Description: Printing the body of the form                           *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Body

    let #depth = 12
    let #Line_Num = #Current-line
    graphic (+2,2,153) box #depth
    alter-printer font = #Heading_Font point-size = #StdPntSize
    print $SL_NO_LBL    (,3)wrap 3 2
    graphic (-2, 5, #depth) vert-line 1
    print $INSURE_NO_LBL    (+1,6) wrap 9 3
    graphic (-2, 12, #depth) vert-line 1
    print $PERSON_NAME_LBL  (+1,13)wrap 12 3
    graphic (-3, 18, #depth) vert-line 1
    print $DISPENSARY_LBL  (+1,19) wrap 11 4
    graphic (-4, 24, #depth) vert-line 1
    print $OCCUPATION_LBL  (+1,25) wrap 11 3
    graphic (-1, 30, #depth) vert-line 1
    print $DEPT_LBL  (+1,31) wrap 14 3
    graphic (-2, 36,#depth) vert-line 1
    print $DATE_APPOINT_LBL  (+1,37) wrap 12 10
    graphic (-10, 43,#depth) vert-line 1
    let #depth2 = #depth - 1
    let #line_temp = #Current-line
    let #col_temp  = #Current-column

    if #contrib_id = 1
        do Print_Month_Label($APR_LBL,43,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($MAY_LBL,58,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($JUN_LBL,73,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($JUL_LBL,88,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($AUG_LBL,103,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($SEP_LBL,118,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Summary_Label($SUMMARY_LBL,133,#Line_Num)
    else

        do Print_Month_Label($OCT_LBL,43,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($NOV_LBL,58,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($DEC_LBL,73,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($JAN_LBL,88,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($FEB_LBL,103,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Month_Label($MAR_LBL,118,#Line_Num,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)
        do Print_Summary_Label($SUMMARY_LBL,133,#Line_Num)
    end-if

    let $Daily  = substr($DAILY_WAGES_LBL,1,5)
    let $Wages  = substr($DAILY_WAGES_LBL,7,6)
    let $Wages2 = substr($DAILY_WAGES_LBL,13,6)
    let $Wages3 = substr($DAILY_WAGES_LBL,21,5)
    Let #Dep= #depth - 1
    print $TOT_DAYS_LBL (+1,134) wrap 9 11
    graphic (-9, 138,#depth) vert-line 1
    print $TOT_WAGES2_LBL (+1,139) wrap 10 8
    graphic (-8, 144,#depth) vert-line 1
    print $TOT_EMP_SHRE_LBL (+1,145) wrap 10 8
    graphic (-8, 150,#depth) vert-line 1
    print $Daily  (+1,151)
    print $Wages  (,151)
    print $Wages2 (,151)
    print $Wages3 (,151)
    graphic (+6,2,153) box 1

    print '1' (,3) bold
    print '2' (,8)bold
    print '3' (,15)
    print '3(A)' (,20)bold
    print '4' (,27)bold
    print '5' (,33)bold
    print '6' (,39)bold
    print '7' (,45)bold
    print '8' (,50)bold
    print '9' (,55)bold
    print '10' (,60)bold
    print '11' (,65)bold
    print '12' (,70)bold
    print '13' (,75)bold
    print '14' (,80)bold
    print '15' (,85)bold
    print '16' (,90)bold
    print '17' (,95)bold
    print '18' (,100)bold
    print '19' (,105)bold
    print '20' (,110)bold
    print '21' (,115)bold
    print '22' (,120)bold
    print '23' (,125)bold
    print '24' (,130)bold
    print '25' (,135)bold
    print '26' (,141)bold
    print '27' (,147)bold
    print '28' (,152)bold

end-procedure
! end of Print_Body


!***********************************************************************
! Procedure:    Print_Data                                             *
!                                                                      *
! Description: Procedure to print the employee data                    *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Data

    alter-printer font = #Heading_Font point-size = #StdPntSize

    add 1 to #Sl_No
    let $Sl_No = edit(#Sl_No,'99999')
    let $Sl_No = ltrim(rtrim($Sl_No,' '),' ')
    let #low = #Current-Line !-1
    let #line_limit = #sqr-max-lines - 8
    if #current-line >= (#line_limit)
       new-page
       do Print_Body
       position (-2,)
    end-if
    print $Sl_No   (+#depth3,3)
    let #low = #Current-Line
    let #temp_line = #Current-line
    print $Prev_Reg_No  (,6)
    print $Prev_Empl_Name  (,13) wrap 8 4 !keep-top
    let #high1 =  #current-line
    position (#temp_line,)
    print $Prev_Dispensary (,19) wrap 11 4 !keep-top
    let #high2 =  #current-line
    position (#temp_line,)
    print $Prev_Occupation  (,25) wrap 11 4 !keep-top
    let #high3 =  #current-line
    position (#temp_line,)
    print $Prev_Department  (,31) wrap 11 4 !keep-top
    let #high4 =  #current-line
    position (#temp_line,)
    print $Prev_Date_Appointed (,37)
    print $No_Days1       (,44)
    print $Amt_Wages1     (,48)
    print $Empl_Share1    (,54)
    print $No_Days2       (,59)
    print $Amt_Wages2     (,63)
    print $Empl_Share2    (,69)
    print $No_Days3       (,74)
    print $Amt_Wages3     (,78)
    print $Empl_Share3    (,84)
    print $No_Days4       (,89)
    print $Amt_Wages4     (,93)
    print $Empl_Share4    (,99)
    print $No_Days5       (,104)
    print $Amt_Wages5     (,108)
    print $Empl_Share5    (,114)
    print $No_Days6       (,119)
    print $Amt_Wages6     (,123)
    print $Empl_Share6    (,129)
    print $Tot_Days        (,135)
    print $Tot_Wages_Paid  (,139)
    print $Tot_Emp_Contrib (,146)
    print $Daily_Wages     (,151)
    let #high = max(#high1,#high2,#high3,#high4)
    let #depth3     = #high - #low + 1

    graphic (-2, 5, #depth3) vert-line 1
    graphic (, 12,#depth3) vert-line 1
    graphic (, 18,#depth3) vert-line 1

    graphic (, 24,#depth3) vert-line 1
    graphic (, 30,#depth3) vert-line 1
    graphic (, 36,#depth3) vert-line 1
    graphic (, 43,#depth3) vert-line 1

    graphic (, 47,#depth3) vert-line 1
    graphic (, 53,#depth3) vert-line 1
    graphic (, 58,#depth3) vert-line 1
    graphic (, 62,#depth3) vert-line 1

    graphic (, 68,#depth3) vert-line 1
    graphic (, 73,#depth3) vert-line 1
    graphic (, 77,#depth3) vert-line 1
    graphic (, 83,#depth3) vert-line 1

    graphic (, 88,#depth3) vert-line 1
    graphic (, 92,#depth3) vert-line 1
    graphic (, 98,#depth3) vert-line 1
    graphic (, 103,#depth3) vert-line 1

    graphic (, 107,#depth3) vert-line 1
    graphic (, 113,#depth3) vert-line 1
    graphic (, 118,#depth3) vert-line 1
    graphic (, 122,#depth3) vert-line 1

    graphic (, 128,#depth3) vert-line 1
    graphic (, 133,#depth3) vert-line 1
    graphic (, 138,#depth3) vert-line 1

    graphic (, 144,#depth3) vert-line 1
    graphic (, 150,#depth3) vert-line 1

    graphic (+1,2,153) box #depth3

end-procedure


!***********************************************************************
! Procedure:    Print_Footer                                           *
!                                                                      *
! Description: Printing the form footer                                *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Footer

  Print 'Note: The Figures in Columns 7 to 24 shall be in respect of wage periods in a particular calendar month.' (+3,2)

end-procedure


! end of procedure Print_Footer

!***********************************************************************
! Procedure:    Get_Responsible_Person                                 *
!                                                                      *
! Description: Procedure to retreive Responsible Person's name         *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Responsible_Person

Begin-Select
J1.EMPLID
J1.JOBCODE
J2.DESCR
J4.FIRST_NAME
J4.LAST_NAME

    let $Resp_Person_Name = ltrim(rtrim(&J4.FIRST_NAME,' '),' ') ||' '|| ltrim(rtrim(&J4.LAST_NAME,' '),' ') ||':'||ltrim(rtrim(&J2.DESCR,' '),' ')

from PS_JOB J1, PS_JOBCODE_TBL J2,PS_ESTAB_TBL_GPIN J3,PS_NAMES J4
where J1.JOBCODE = J2.JOBCODE
and J1.SETID_JOBCODE = J2.SETID
and J1.EMPLID = J3.EMPLID
and J3.ESTABID = &RNCT.ESTABID
and J3.EFFDT = (select max(J31.EFFDT) from PS_ESTAB_TBL_GPIN J31
                       Where  J31.ESTABID = J3.ESTABID
                         and J31.EFFDT    <= &RNCT.END_DT)
and J4.EMPLID = J3.EMPLID
and J4.NAME_TYPE = 'PRI'
and J4.EFFDT = (select max(J41.EFFDT)from PS_NAMES J41
                       Where J41.EMPLID = J4.EMPLID
                         and J41.NAME_TYPE = 'PRI'
                         and J41.EFFDT    <= &RNCT.END_DT)

End-Select

end-procedure
! end of procedure Get_Responsible_Person

!***********************************************************************
! Procedure:    Get_Header_Data                                        *
!                                                                      *
! Description: Retrieving the form header data                         *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Header_Data

    do Init_Header_Variables

    let $Contrib_Period = ltrim(rtrim($Begin_Date,' '),' ') || ' to ' || ltrim(rtrim($End_Date,' '),' ')

end-procedure
!end of procedure Get_Header_Data


!***********************************************************************
! Procedure:    Init_Header_Variables                                  *
!                                                                      *
! Description: Retrieving the form header data                         *
!                                                                      *
!***********************************************************************

begin-procedure  Init_Header_Variables

    let $Estab_Name     = ''
    let $Address1       = ''
    let $Address2       = ''
    let $Address3       = ''
    let $City           = ''
    let $State          = ''
    let $ESI_Code       = ''
    !let $ESI_Office     = ''
    let $Contrib_Period = ''
end-procedure
! end of procedure Init_Header_Variables


!***********************************************************************
! Procedure:    Get_Estab_Info                                         *
!                                                                      *
! Description: Retrieving establishment data                           *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Estab_Info

Begin-Select
ESTAB.DESCR
ESTAB.ADDRESS1
ESTAB.ADDRESS2
ESTAB.ADDRESS3
ESTAB.ADDRESS4
ESTAB.CITY
ESTAB.POSTAL
ESTAB.STATE

    let $Estab_Name  = ltrim(rtrim(&ESTAB.DESCR,' '),' ')
    let $Address1    = ltrim(rtrim(&ESTAB.ADDRESS1,' '),' ')
    if (&ESTAB.ADDRESS2 <> '')
        let $Address1    = ltrim(rtrim($Address1,' '),' ') || ', ' || ltrim(rtrim(&ESTAB.ADDRESS2,' '),' ')
    end-if
    let $Address2    = ltrim(rtrim(&ESTAB.ADDRESS3,' '),' ')
    if (&ESTAB.ADDRESS4 <> '')
        let $Address2    = ltrim(rtrim($Address2,' '),' ') || ', ' || ltrim(rtrim(&ESTAB.ADDRESS4,' '),' ')
    end-if
    let $City        = ltrim(rtrim(&ESTAB.CITY,' '),' ')

    if (&ESTAB.POSTAL <> '')
        let $City        = ltrim(rtrim(&ESTAB.CITY,' '),' ') || '-' || &ESTAB.POSTAL
    end-if
    let $Estab_State       = ltrim(rtrim(&ESTAB.STATE,' '),' ')

From PS_ESTAB_TBL ESTAB
where ESTAB.ESTABID = &RNCT.ESTABID
and   ESTAB.EFFDT   = (select max(ESTAB1.EFFDT) from PS_ESTAB_TBL ESTAB1
                              where ESTAB1.ESTABID = &RNCT.ESTABID
                              and   ESTAB1.EFFDT  <= &RNCT.END_DT )
End-Select
end-procedure

! end of procedure Get_Estab_Info



!***********************************************************************
! Procedure:    Get_Estab_State                                        *
!                                                                      *
! Description: Retrieving the State of the establishment               *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Estab_State

Begin-Select
ETBSTATE.DESCR

    let $State = ltrim(rtrim(&ETBSTATE.DESCR,' '),' ')

From PS_STATE_TBL ETBSTATE
where ETBSTATE.COUNTRY = 'IND'
and ETBSTATE.STATE = $Estab_State
End-Select
end-procedure
! end of procedure Get_Estab_State


!***********************************************************************
! Procedure:    Get_ESI_Reg_Nbr                                        *
!                                                                      *
! Description: Retrieving establishment data                           *
!                                                                      *
!***********************************************************************

begin-procedure  Get_ESI_Reg_Nbr

Begin-Select
ESI.GPIN_ESI_NBR

    let $ESI_Code = ltrim(rtrim(&ESI.GPIN_ESI_NBR,' '),' ')

From PS_ESTAB_TBL_GPIN ESI
where ESI.ESTABID = &RNCT.ESTABID
and   ESI.EFFDT   = (select max(ESI1.EFFDT) from PS_ESTAB_TBL_GPIN ESI1
                              where ESI1.ESTABID = &RNCT.ESTABID
                              and   ESI1.EFFDT  <= &RNCT.END_DT )
End-Select

end-procedure
! end of procedure Get_ESI_Reg_Nbr

!***********************************************************************
! Procedure:    Get_ESI_Data                                           *
!                                                                      *
! Description: Retrieving employee ID, year and month                  *
!                                                                      *
!***********************************************************************

begin-procedure  Get_ESI_Data
    let $Prev_Date_Appointed = ''
Begin-select DISTINCT
A.EMPLID
A.GPIN_REG_NBR
A.GPIN_F7_ESIWAGES
A.CAL_RUN_ID
A.MONTH
A.GPIN_F7_ESIER
A.GPIN_F7_ESI
A.GPIN_F7_DAYS_WRK
A.GPIN_YEAR
A.EMPL_RCD
B.DESCR
B.DEPTID
C.DEPTID
C.EFFDT
D.BUSINESS_UNIT
D.DEFAULT_SETID
E.FIRST_NAME
E.LAST_NAME
E.NAME_DISPLAY
F.RUN_FINALIZED_IND

    let $Empl_Name = ltrim(rtrim(&E.FIRST_NAME,' '),' ') ||' ' || ltrim(rtrim(&E.LAST_NAME,' '),' ')

    do Get_Insurance_Nbr
    do Get_Dept_Shift
    do Get_Date_Appoint
    do Get_Data

from PS_GPIN_FORM7_RPT A, PS_DEPT_TBL B, PS_JOB C, PS_BUS_UNIT_TBL_HR D, PS_NAMES E, PS_GP_CAL_RUN F
Where A.EMPLID = C.EMPLID
and B.DEPTID   = C.DEPTID
and A.ESTABID  = &RNCT.ESTABID
and A.EMPL_RCD = C.EMPL_RCD
and D.BUSINESS_UNIT = C.BUSINESS_UNIT
and B.SETID = D.DEFAULT_SETID
and C.EFFDT = (Select Max(C1.EFFDT) from PS_JOB C1
                 Where C.DEPTID = C1.DEPTID
                   and C1.EMPLID = A.EMPLID
                   and C.EMPL_RCD = C1.EMPL_RCD
                   and C.EFFSEQ = C1.EFFSEQ
                   and C1.EFFDT <= &RNCT.END_DT)
and B.EFFDT = (Select Max(B1.EFFDT) from PS_DEPT_TBL B1
                 Where B.SETID = B1.SETID
                   and B.DEPTID = B1.DEPTID
                   and B.EFFDT <= &RNCT.END_DT)
and E.EMPLID    = A.EMPLID
and E.NAME_TYPE = 'PRI'
and E.EFFDT     <= (select max(E1.EFFDT) from PS_NAMES E1
                       Where E1.EMPLID    = E.EMPLID
                         and E1.NAME_TYPE = 'PRI'
                         and E1.EFFDT    <= &RNCT.END_DT)
and A.CAL_RUN_ID = F.CAL_RUN_ID
and F.RUN_FINALIZED_IND = 'Y'

[$WHERECL]
[$ORDERCL]
End-Select

    if #Tot_Wages_Paid <> 0 and #Tot_Days <> 0
        let #Daily_Wages     = #Tot_Wages_Paid/#Tot_Days
    else
        let #Tot_Wages_Paid = 0
    end-if

    do Get_Days_Val(#Tot_Days,$Tot_Days)
    let $Tot_Wages_Paid  = edit(#Tot_Wages_Paid,'9,99,999.99')
    let $Tot_Emp_Contrib = edit(#Tot_Emp_Contrib,'9,999.99')
    let $Daily_Wages     = edit(#Daily_Wages,'99,9999.99')

    add #Tot_Days        to #Grnd_Tot_Days
    add #Tot_Wages_Paid  to #Grnd_Tot_Wages
    add #Tot_Emp_Contrib to #Grnd_Tot_Emp
    add #Daily_Wages     to #Grnd_Daily_Wages

    do Print_Data
    do Print_Totals
    do Print_Empr_Totals
end-procedure


!***********************************************************************
! Procedure:    Get_Data                                               *
!                                                                      *
! Description: Retrieving employee data                                *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Data

   if (( ltrim(rtrim($Prev_Emplid,' '),' ') = ltrim(rtrim(&A.EMPLID,' '),' ') and ltrim(rtrim($Prev_Reg_No,' '),' ') = ltrim(rtrim(&A.GPIN_REG_NBR,' '),' ')) or
      ( $Prev_Emplid = '' and $Prev_Reg_No = ''))
        do Get_Month_Value
    else
        let #Daily_Wages     = #Tot_Wages_Paid/#Tot_Days
        let $Tot_Wages_Paid  = edit(#Tot_Wages_Paid,'9,99,999.99')
        let $Tot_Emp_Contrib = edit(#Tot_Emp_Contrib,'9,999.99')
        let $Daily_Wages     = edit(#Daily_Wages,'99,9999.99')

        do Get_Days_Val(#Tot_Days,$Tot_Days)

        let #Daily_Wages     = edit(#Daily_Wages,'99,9999.99')
        add #Tot_Days        to #Grnd_Tot_Days
        add #Tot_Wages_Paid  to #Grnd_Tot_Wages
        add #Tot_Emp_Contrib to #Grnd_Tot_Emp
        add #Daily_Wages     to #Grnd_Daily_Wages

        do Print_Data
        do Init_Body_variables
        do Get_Month_Value

    end-if
    let $Prev_Emplid     = ltrim(rtrim(&A.EMPLID,' '),' ')
    let $Prev_Reg_No     = ltrim(rtrim(&A.GPIN_REG_NBR,' '),' ')
    let $Prev_Empl_Name  = ltrim(rtrim($Empl_Name,' '),' ')
    let $Prev_Dispensary = ltrim(rtrim($Dispensary_Name,' '),' ')
    let $Prev_Department = ltrim(rtrim($Department,' '),' ')
    let $Prev_Occupation = ltrim(rtrim($Occupation,' '),' ')
    let $Prev_Date_Appointed = ltrim(rtrim($Date_Appointed,' '),' ')

end-procedure


!***********************************************************************
! Procedure:    Get_Days_Val                                           *
!                                                                      *
! Description: Procedure for printing the grand totals                 *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Days_Val(#Days,:$Days)
    let #Temp = 0
    let #Temp = #Days * 10
    let #Temp = mod(#Temp,10)

        if #Temp <> 0
            let $Days    = edit(#Days,'9999.9')
        else
            let $Days    = edit(#Days,'9999')
        end-if

end-procedure
! end of procedure Get_Days_Val



!***********************************************************************
! Procedure:    Print_Totals                                           *
!                                                                      *
! Description: Procedure for printing the grand totals                 *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Totals

    do Get_Days_Val(#M1_Tot_Days,$M1_Tot_Days)
    let $M1_Wages_Paid    = edit(#M1_Wages_Paid,'9,99,999.99')
    let $M1_Emp_Contrib   = edit(#M1_Emp_Contrib,'9,999.99')
    let $M1_Empr_Contrib   = edit(#M1_Empr_Contrib,'9,999.99')
    let $Tot1   = edit(#Tot1,'9,999.99')
    do Get_Days_Val(#M2_Tot_Days,$M2_Tot_Days)
    let $M2_Wages_Paid    = edit(#M2_Wages_Paid,'9,99,999.99')
    let $M2_Emp_Contrib   = edit(#M2_Emp_Contrib,'9,999.99')
    let $M2_Empr_Contrib   = edit(#M2_Empr_Contrib,'9,999.99')
    let $Tot2   = edit(#Tot2,'9,999.99')
    do Get_Days_Val(#M3_Tot_Days,$M3_Tot_Days)
    let $M3_Wages_Paid    = edit(#M3_Wages_Paid,'9,99,999.99')
    let $M3_Emp_Contrib   = edit(#M3_Emp_Contrib,'9,999.99')
    let $M3_Empr_Contrib   = edit(#M3_Empr_Contrib,'9,999.99')
    let $Tot3   = edit(#Tot3,'9,999.99')
    do Get_Days_Val(#M4_Tot_Days,$M4_Tot_Days)
    let $M4_Wages_Paid    = edit(#M4_Wages_Paid,'9,99,999.99')
    let $M4_Emp_Contrib   = edit(#M4_Emp_Contrib,'9,999.99')
    let $M4_Empr_Contrib   = edit(#M4_Empr_Contrib,'9,999.99')
    let $Tot4   = edit(#Tot4,'9,999.99')
    do Get_Days_Val(#M5_Tot_Days,$M5_Tot_Days)
    let $M5_Wages_Paid    = edit(#M5_Wages_Paid,'9,99,999.99')
    let $M5_Emp_Contrib   = edit(#M5_Emp_Contrib,'9,999.99')
    let $M5_Empr_Contrib   = edit(#M5_Empr_Contrib,'9,999.99')
    let $Tot5   = edit(#Tot5,'9,999.99')
    do Get_Days_Val(#M6_Tot_Days,$M6_Tot_Days)
    let $M6_Wages_Paid    = edit(#M6_Wages_Paid,'9,99,999.99')
    let $M6_Emp_Contrib   = edit(#M6_Emp_Contrib,'9,999.99')
    let $M6_Empr_Contrib   = edit(#M6_Empr_Contrib,'9,999.99')
    let $Tot6   = edit(#Tot6,'9,999.99')
    do Get_Days_Val(#Grnd_Tot_Days,$Grnd_Tot_Days)
    let $Grnd_Tot_Wages   = edit(#Grnd_Tot_Wages,'99,99,999.99')
    let $Grnd_Tot_Emp     = edit(#Grnd_Tot_Emp,'99,999.99')
    let $Grnd_Daily_Wages = edit(#Grnd_Daily_Wages,'99,999.99')

    print $TOTAL_LBL        (+3,6)  bold
    print $M1_Tot_Days      (,44)   bold
    print $M1_Wages_Paid    (,48)   bold
    print $M1_Emp_Contrib   (,54)   bold

    print $M2_Tot_Days      (,59)   bold
    print $M2_Wages_Paid    (,63)   bold
    print $M2_Emp_Contrib   (,69)   bold

    print $M3_Tot_Days      (,74)   bold
    print $M3_Wages_Paid    (,78)   bold
    print $M3_Emp_Contrib   (,84)   bold

    print $M4_Tot_Days      (,89)   bold
    print $M4_Wages_Paid    (,93)   bold
    print $M4_Emp_Contrib   (,99)   bold

    print $M5_Tot_Days      (,104)  bold
    print $M5_Wages_Paid    (,108)  bold
    print $M5_Emp_Contrib   (,114)  bold

    print $M6_Tot_Days      (,119)  bold
    print $M6_Wages_Paid    (,123)  bold
    print $M6_Emp_Contrib   (,129)  bold

    print $Grnd_Tot_Days    (,135)  bold
    print $Grnd_Tot_Wages   (,139)  bold
    print $Grnd_Tot_Emp     (,146)  bold
    print $Grnd_Daily_Wages (,151)  bold

    graphic (-1,2,153) box 1
    graphic (-1, 43,1) vert-line 1
    graphic (, 47,1) vert-line 1
    graphic (, 53,1) vert-line 1
    graphic (, 58,1) vert-line 1

    graphic (, 62,1) vert-line 1
    graphic (, 68,1) vert-line 1
    graphic (, 73,1) vert-line 1
    graphic (, 77,1) vert-line 1

    graphic (, 83,1) vert-line 1
    graphic (, 88,1) vert-line 1
    graphic (, 92,1) vert-line 1
    graphic (, 98,1) vert-line 1

    graphic (, 103,1) vert-line 1
    graphic (, 107,1) vert-line 1
    graphic (, 113,1) vert-line 1
    graphic (, 118,1) vert-line 1

    graphic (, 122,1) vert-line 1
    graphic (, 128,1) vert-line 1
    graphic (, 133,1) vert-line 1
    graphic (, 138,1) vert-line 1

    graphic (, 144,1) vert-line 1
    graphic (, 150,1) vert-line 1


end-procedure
! end of procedure Print_Totals



!***********************************************************************
! Procedure:    Print_Empr_Totals                                      *
!                                                                      *
! Description: Procedure for printing the grand totals                 *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Empr_Totals

    print $EMPR_SHARE_LBL        (+2,6)  bold
    print $M1_Empr_Contrib    (,54)   bold
    print $M2_Empr_Contrib    (,69)   bold
    print $M3_Empr_Contrib   (,84)   bold
    print $M4_Empr_Contrib   (,99)   bold
    print $M5_Empr_Contrib   (,114)  bold
    print $M6_Empr_Contrib   (,129)  bold
    graphic (-1, 53,1) vert-line 1
    graphic (, 58,1) vert-line 1
    graphic (, 68,1) vert-line 1
    graphic (, 73,1) vert-line 1
    graphic (, 83,1) vert-line 1
    graphic (, 88,1) vert-line 1
    graphic (, 98,1) vert-line 1
    graphic (, 103,1) vert-line 1
    graphic (, 113,1) vert-line 1
    graphic (, 118,1) vert-line 1
    graphic (, 128,1) vert-line 1
    graphic (, 133,1) vert-line 1
    graphic (+1,2,153) box 1

    print $GRAND_TOTAL_LBL        (+1,6)  bold
    print $Tot1    (,54)   bold
    print $Tot2   (,69)   bold
    print $Tot3  (,84)   bold
    print $Tot4 (,99)   bold
    print $Tot5   (,114)  bold
    print $Tot6  (,129)  bold
    graphic (-1, 53,1) vert-line 1
    graphic (, 58,1) vert-line 1
    graphic (, 68,1) vert-line 1
    graphic (, 73,1) vert-line 1
    graphic (, 83,1) vert-line 1
    graphic (, 88,1) vert-line 1
    graphic (, 98,1) vert-line 1
    graphic (, 103,1) vert-line 1
    graphic (, 113,1) vert-line 1
    graphic (, 118,1) vert-line 1
    graphic (, 128,1) vert-line 1
    graphic (, 133,1) vert-line 1
    graphic (+1,2,153) box 1

    print $PAID_ON_LBL        (+1,6)  bold
    print $M1Month    (,53)   bold
    print $M2Month    (,68)   bold
    print $M3Month    (,83)   bold
    print $M4Month    (,98)   bold
    print $M4Month    (,113)  bold
    print $M6Month    (,128)  bold
    graphic (-1, 53,1) vert-line 1
    graphic (, 58,1) vert-line 1
    graphic (, 68,1) vert-line 1
    graphic (, 73,1) vert-line 1
    graphic (, 83,1) vert-line 1
    graphic (, 88,1) vert-line 1
    graphic (, 98,1) vert-line 1
    graphic (, 103,1) vert-line 1
    graphic (, 113,1) vert-line 1
    graphic (, 118,1) vert-line 1
    graphic (, 128,1) vert-line 1
    graphic (, 133,1) vert-line 1
    graphic (+1,2,153) box 1
end-procedure
! end of procedure Print_Empr_Totals




!***********************************************************************
! Procedure:    Get_Month_Value                                        *
!                                                                      *
! Description: Retrieving employee data                                *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Month_Value

    evaluate &A.MONTH
        when = #Month1
           do Get_Days_Val(&A.GPIN_F7_DAYS_WRK,$No_Days1)
           let $Amt_Wages1  = edit (&A.GPIN_F7_ESIWAGES, '9,99,999.99')
           let $Empl_Share1 = edit (&A.GPIN_F7_ESI,  '9,999.99')
           add &A.GPIN_F7_DAYS_WRK to #Tot_Days
           add &A.GPIN_F7_ESIWAGES to #Tot_Wages_Paid
           add &A.GPIN_F7_ESI      to #Tot_Emp_Contrib
           add &A.GPIN_F7_DAYS_WRK to #M1_Tot_Days
           add &A.GPIN_F7_ESIWAGES to #M1_Wages_Paid
           add &A.GPIN_F7_ESI      to #M1_Emp_Contrib
           add &A.GPIN_F7_ESIER    to #Tot_Empr_Contrib
           add &A.GPIN_F7_ESIER    to #M1_Empr_Contrib
           Let #Tot1 = #M1_Emp_Contrib + #M1_Empr_Contrib

        break
        when = #Month2
           do Get_Days_Val(&A.GPIN_F7_DAYS_WRK,$No_Days2)
           let $Amt_Wages2  = edit (&A.GPIN_F7_ESIWAGES,  '9,99,999.99')
           let $Empl_Share2 = edit (&A.GPIN_F7_ESI,  '9,999.99')

           add &A.GPIN_F7_DAYS_WRK to #Tot_Days
           add &A.GPIN_F7_ESIWAGES to #Tot_Wages_Paid
           add &A.GPIN_F7_ESI      to #Tot_Emp_Contrib

           add &A.GPIN_F7_DAYS_WRK to #M2_Tot_Days
           add &A.GPIN_F7_ESIWAGES to #M2_Wages_Paid
           add &A.GPIN_F7_ESI      to #M2_Emp_Contrib
           add &A.GPIN_F7_ESIER    to #Tot_Empr_Contrib
           add &A.GPIN_F7_ESIER    to #M2_Empr_Contrib
           Let #Tot2 = #M2_Emp_Contrib + #M2_Empr_Contrib
        break
        when = #Month3
           do Get_Days_Val(&A.GPIN_F7_DAYS_WRK,$No_Days3)
           let $Amt_Wages3  = edit (&A.GPIN_F7_ESIWAGES,  '9,99,999.99')
           let $Empl_Share3 = edit (&A.GPIN_F7_ESI,  '9,999.99')

           add &A.GPIN_F7_DAYS_WRK to #Tot_Days
           add &A.GPIN_F7_ESIWAGES to #Tot_Wages_Paid
           add &A.GPIN_F7_ESI      to #Tot_Emp_Contrib

           add &A.GPIN_F7_DAYS_WRK to #M3_Tot_Days
           add &A.GPIN_F7_ESIWAGES to #M3_Wages_Paid
           add &A.GPIN_F7_ESI      to #M3_Emp_Contrib
           add &A.GPIN_F7_ESIER    to #Tot_Empr_Contrib
           add &A.GPIN_F7_ESIER    to #M3_Empr_Contrib
           Let #Tot3 = #M3_Emp_Contrib + #M3_Empr_Contrib

        break
        when  = #Month4
           do Get_Days_Val(&A.GPIN_F7_DAYS_WRK,$No_Days4)
           let $Amt_Wages4  = edit (&A.GPIN_F7_ESIWAGES,  '9,99,999.99')
           let $Empl_Share4 = edit (&A.GPIN_F7_ESI,  '9,999.99')

           add &A.GPIN_F7_DAYS_WRK to #Tot_Days
           add &A.GPIN_F7_ESIWAGES to #Tot_Wages_Paid
           add &A.GPIN_F7_ESI      to #Tot_Emp_Contrib

           add &A.GPIN_F7_DAYS_WRK to #M4_Tot_Days
           add &A.GPIN_F7_ESIWAGES to #M4_Wages_Paid
           add &A.GPIN_F7_ESI      to #M4_Emp_Contrib
           add &A.GPIN_F7_ESIER    to #Tot_Empr_Contrib
           add &A.GPIN_F7_ESIER    to #M4_Empr_Contrib
           Let #Tot4 = #M4_Emp_Contrib + #M4_Empr_Contrib
        break
        when = #Month5
           do Get_Days_Val(&A.GPIN_F7_DAYS_WRK,$No_Days5)
           let $Amt_Wages5  = edit (&A.GPIN_F7_ESIWAGES,  '9,99,999.99')
           let $Empl_Share5 = edit (&A.GPIN_F7_ESI,  '9,999.99')

           add &A.GPIN_F7_DAYS_WRK to #Tot_Days
           add &A.GPIN_F7_ESIWAGES to #Tot_Wages_Paid
           add &A.GPIN_F7_ESI      to #Tot_Emp_Contrib

           add &A.GPIN_F7_DAYS_WRK to #M5_Tot_Days
           add &A.GPIN_F7_ESIWAGES to #M5_Wages_Paid
           add &A.GPIN_F7_ESI      to #M5_Emp_Contrib
           add &A.GPIN_F7_ESIER    to #Tot_Empr_Contrib
           add &A.GPIN_F7_ESIER    to #M5_Empr_Contrib
           Let #Tot5 = #M5_Emp_Contrib + #M5_Empr_Contrib
        break
        when = #Month6
           do Get_Days_Val(&A.GPIN_F7_DAYS_WRK,$No_Days6)
           let $Amt_Wages6  = edit (&A.GPIN_F7_ESIWAGES,  '9,99,999.99')
           let $Empl_Share6 = edit (&A.GPIN_F7_ESI,  '9,999.99')

           add &A.GPIN_F7_DAYS_WRK to #Tot_Days
           add &A.GPIN_F7_ESIWAGES to #Tot_Wages_Paid
           add &A.GPIN_F7_ESI      to #Tot_Emp_Contrib

           add &A.GPIN_F7_DAYS_WRK to #M6_Tot_Days
           add &A.GPIN_F7_ESIWAGES to #M6_Wages_Paid
           add &A.GPIN_F7_ESI      to #M6_Emp_Contrib
           add &A.GPIN_F7_ESIER    to #Tot_Empr_Contrib
           add &A.GPIN_F7_ESIER    to #M6_Empr_Contrib
           Let #Tot6 = #M6_Emp_Contrib + #M6_Empr_Contrib

        break
     end-evaluate

     do Get_Challan_Month

end-procedure
! end of procedure Get_Month_Value



!***********************************************************************
! Procedure:    Print_Month_Label                                      *
!                                                                      *
! Description: Procedure to print the 6 months labels                  *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Month_Label($Month_Lbl,#Start_Col,#Start_Line,$DAYS_WAGES_LBL,$TOT_WAGES_LBL,$EMPL_SHARE_LBL)

    let #depth2 = 11

    add 2 to #Start_Line

    graphic (#Start_Line,#Start_Col,15) box 1
    print $Month_Lbl  (,+6)
    let #col1 = #Start_Col + 1
    print $DAYS_WAGES_LBL  (+1,#Col1) wrap 6 9
    graphic (-7,-3 ,#depth2) vert-line 1
    print $TOT_WAGES_LBL (+1,+1) wrap 9 9
    graphic (-5,+2,#depth2) vert-line 1
    print $EMPL_SHARE_LBL  (+1,+1) wrap 8 6
    graphic (-6,,12) vert-line 1

end-procedure
! end of procedure Print_Month_Label

!***********************************************************************
! Procedure:    Print_Summary_Label                                    *
!                                                                      *
! Description: Procedure to print the Summary label                    *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Summary_Label($SUMMARY_LBL,#Start_Col,#Start_Line)

    let #depth2 = 11
    add 2 to #Start_Line
    graphic (#Start_Line,#Start_Col,22) box 1
    print $SUMMARY_LBL  (,+6)


end-procedure
! end of procedure Print_Summary_Label



!***********************************************************************
! Procedure:    Get_Insurance_Nbr                                      *
!                                                                      *
! Description: Procedure to get employees Insurance Number             *
!              and Name of Dispensary                                  *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Insurance_Nbr

Begin-Select
INSURE.GPIN_REG_NBR
INSURE.GPIN_HOSP_NAME
INSURE.EFFDT

    let $Dispensary_Name = ltrim(rtrim(&INSURE.GPIN_HOSP_NAME,' '),' ')
    let $Emp_Begin_Dt    = ltrim(rtrim(&INSURE.EFFDT,' '),' ')

from PS_GPIN_ESI_ENROLL INSURE
Where INSURE.EMPLID = &A.EMPLID
and INSURE.GPIN_REG_NBR = &A.GPIN_REG_NBR
and INSURE.EFFDT <= (select max(INSURE1.EFFDT) from PS_GPIN_ESI_ENROLL INSURE1
                    Where INSURE1.EMPLID = INSURE.EMPLID
                    and INSURE1.EFFDT <= &RNCT.END_DT)
End-Select
end-procedure
! end of procedure Get_Insurance_Nbr

!***********************************************************************
! Procedure:    Get_Empl_Name                                          *
!                                                                      *
! Description: Procedure to get employees Name                         *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Empl_Name
Begin-Select
ENAME.FIRST_NAME
ENAME.LAST_NAME

    let $Empl_Name = ltrim(rtrim(&ENAME.FIRST_NAME,' '),' ') ||' ' || ltrim(rtrim(&ENAME.LAST_NAME,' '),' ')

from PS_NAMES ENAME
Where ENAME.EMPLID = &A.EMPLID
and ENAME.NAME_TYPE = 'PRI'
and ENAME.EFFDT <= (select max(ENAME1.EFFDT) from PS_NAMES ENAME1
                    Where ENAME1.EMPLID  = ENAME.EMPLID
                    and ENAME1.NAME_TYPE = 'PRI'
                    and ENAME1.EFFDT    <= &RNCT.END_DT)
End-select

end-procedure
! end of procedure Get_Empl_Name


!***********************************************************************
! Procedure:    Get_Dept_Shift                                         *
!                                                                      *
! Description: Procedure to get employee's Occupation and Department   *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Dept_Shift
Begin-Select
ESHIFT.XLATSHORTNAME
EJOB.SHIFT
EJOB.EFFDT
EJOB.JOBCODE
EJOBCODE.DESCR

    let $Department = ltrim(rtrim(&B.DESCR,' '),' ') ||':'|| ltrim(rtrim(&ESHIFT.XLATSHORTNAME,' '),' ')
    let $Occupation = ltrim(rtrim(&EJOBCODE.DESCR,' '),' ')
    move &EJOB.EFFDT to $JobDate

From PSXLATITEM ESHIFT, PS_JOB EJOB, PS_JOBCODE_TBL EJOBCODE
Where EJOB.EMPLID = &A.EMPLID
and EJOB.EMPL_RCD = &A.EMPL_RCD
and EJOB.EFFDT <= (select max(EJOB1.EFFDT) from PS_JOB EJOB1
                    Where EJOB1.EMPLID  = EJOB.EMPLID
                    and EJOB1.EMPL_RCD  = EJOB.EMPL_RCD
                    and EJOB1.EFFDT    <= &RNCT.END_DT)
and ESHIFT.FIELDNAME  = 'SHIFT'
and ESHIFT.FIELDVALUE = EJOB.SHIFT
and ESHIFT.EFFDT      <= EJOB.EFFDT
and EJOBCODE.JOBCODE  = EJOB.JOBCODE
and EJOBCODE.EFFDT    <= EJOB.EFFDT

End-Select

end-procedure
! end of procedure Get_Dept_Shift


!*************************************************************************
! Procedure:    Get_Date_Appoint                                         *
!                                                                        *
! Description: Procedure to to check if the employee was employed during *
!              the Contribution Period                                   *
!                                                                        *
!*************************************************************************

begin-procedure  Get_Date_Appoint

    let $Date_Appointed = ''

    if ($Emp_Begin_Dt >= &RNCT.BGN_DT and $Emp_Begin_Dt <= &RNCT.END_DT )
        let $Date_Appointed = edit(&C.EFFDT,'dd/mm/yyyy')
    end-if

end-procedure
!end of procedure Get_Date_Appoint

!***********************************************************************
! Procedure:    Print_Challan_Nbr                                      *
!                                                                      *
! Description: To print the challan numbers                            *
!                                                                      *
!***********************************************************************

begin-procedure  Print_Challan_Nbr

    let #index1 = 0
    let #line_limit = 0
    let #flag = 0

    let #line_limit = #sqr-max-lines - 8

    if #current-line >= (#line_limit)
       new-page
    end-if

    graphic (+1,2,20) box 1
    graphic (-1,14,1) vert-line 1
    print $CHLN_NBR_LBL (+1,5)
    print $DATE_LBL (,17)
    do Get_Challan_Month

end-procedure
! end of procedure Print_Challan_Nbr

!***********************************************************************
! Procedure:    Get_Challan_Month                                      *
!                                                                      *
! Description: To print the challan numbers                            *
!                                                                      *
!***********************************************************************

begin-procedure  Get_Challan_Month

begin-select
CHLN.GPIN_MONTH
CHLN.GPIN_DATE

    let $Challan_Dt = edit(&CHLN.GPIN_DATE,'dd/mm/yyyy')
    let $Challan_Mnth = ltrim(rtrim(&CHLN.GPIN_MONTH,' '),' ')

    if ( $Challan_Mnth = 'APR' or $Challan_Mnth = 'OCT' )
     Let $M1Month = $Challan_Dt
     end-if
        if ( $Challan_Mnth = 'MAY' or $Challan_Mnth = 'NOV')
     Let $M2Month = $Challan_Dt
     end-if
      if ($Challan_Mnth = 'JUN' or $Challan_Mnth = 'DEC')
     Let $M3Month = $Challan_Dt
     end-if
          if ($Challan_Mnth = 'JUL' or $Challan_Mnth = 'JAN')
     Let $M4Month = $Challan_Dt
     end-if
     if ($Challan_Mnth = 'AUG' or $Challan_Mnth = 'FEB')
     Let $M5Month = $Challan_Dtr
     end-if
     if ($Challan_Mnth = 'SEP' or $Challan_Mnth = 'MAR')
     Let $M6Month = $Challan_Dt
     end-if
    let #flag = 1

from PS_GPIN_F7_CHLN_RC CHLN
Where  RUN_CNTL_ID = $prcs_run_cntl_id
and    OPRID       = $prcs_oprid
order by CHLN.GPIN_DATE
end-select


end-procedure
! end of procedure Get_Challan_Month


!***********************************************************************
! Procedure:    Init_Body_variables                                    *
!                                                                      *
! Description: Procedure to initilize the variables used in the body   *
!              of the report                                           *
!                                                                      *
!***********************************************************************

begin-procedure  Init_Body_variables

    let $Sl_No           = ''
    let $Insurance_No    = ''
    let $Prev_Dispensary = ''
    let $Prev_Occupation = ''
    let $Prev_Department = ''
    let $No_Days1        = ''
    let $Amt_Wages1      = ''
    let $Empl_Share1     = ''
    let $No_Days2        = ''
    let $Amt_Wages2      = ''
    let $Empl_Share2     = ''
    let $No_Days3        = ''
    let $Amt_Wages3      = ''
    let $Empl_Share3     = ''
    let $No_Days4        = ''
    let $Amt_Wages4      = ''
    let $Empl_Share4     = ''
    let $No_Days5        = ''
    let $Amt_Wages5      = ''
    let $Empl_Share5     = ''
    let $No_Days6        = ''
    let $Amt_Wages6      = ''
    let $Empl_Share6     = ''
    let $Tot_Days        = ''
    let $Tot_Wages_Paid   = ''
    let $Tot_Emp_Contrib  = ''
    let $Daily_Wages      = ''
    let #Tot_Days        = 0
    let #Tot_Wages_Paid  = 0
    let #Tot_Emp_Contrib = 0
end-procedure
! end of procedure Init_Body_variables


!***********************************************************************
! Procedure:    Get_Translat_Info                                      *
!                                                                      *
! Description: Gets the strings printed in this report                 *
!                                                                      *
!***********************************************************************

begin-procedure Get_Translat_Info

   do Add_Report_Translation($ReportID, $rpt_language_cd)
   do Get_Field_Information ('GPINPY02', 'APRIL',               $APR_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'AUGUST',              $AUG_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'CHALLAN_NBR',         $CHLN_NBR_LBL,        #DW)
   do Get_Field_Information ('GPINPY02', 'CONTRIB_PERIOD',      $CONTRIB_PRD_LBL,     #DW)
   do Get_Field_Information ('GPINPY02', 'DAILY_WAGES',         $DAILY_WAGES_LBL,     #DW)
   do Get_Field_Information ('GPINPY02', 'DATE',                $DATE_LBL,            #DW)
   do Get_Field_Information ('GPINPY02', 'DATE_OF_APPOINT',     $DATE_APPOINT_LBL,    #DW)
   do Get_Field_Information ('GPINPY02', 'DAYS_WAGES_PAID',     $DAYS_WAGES_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'DECEMBER',            $DEC_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'DEPARTMENT',          $DEPT_LBL,            #DW)
   do Get_Field_Information ('GPINPY02', 'EMPLOYEES_SHARE',     $EMPL_SHARE_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'EMP_REP',             $EMP_REP_LBL,         #DW)
   do Get_Field_Information ('GPINPY02', 'ESI_CODE',            $ESI_CODE_LBL,        #DW)
   do Get_Field_Information ('GPINPY02', 'ESI_OFFICE',          $ESI_OFF_LBL,         #DW)
   do Get_Field_Information ('GPINPY02', 'ESTAB_NAME',          $ESTAB_NAME_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'FEBRUARY',            $FEB_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'HEADING_MAIN',        $HEAD_MAIN_LBL,       #DW)
   do Get_Field_Information ('GPINPY02', 'HEADING_MAIN_1',      $HEAD_MAIN1_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'HEADING_MAIN_2',      $HEAD_MAIN2_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'HEADING_MAIN_3',      $HEAD_MAIN3_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'INSURANCE_NO',        $INSURE_NO_LBL,       #DW)
   do Get_Field_Information ('GPINPY02', 'JANUARY',             $JAN_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'JULY',                $JUL_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'JUNE',                $JUN_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'MARCH',               $MAR_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'MAY',                 $MAY_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'NAME_OF_DISPENSARY',  $DISPENSARY_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'NAME_OF_PERSON',      $PERSON_NAME_LBL,     #DW)
   do Get_Field_Information ('GPINPY02', 'NOVEMBER',            $NOV_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'OCCUPATION',          $OCCUPATION_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'OCTOBER',             $OCT_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'SEPTEMBER',           $SEP_LBL,             #DW)
   do Get_Field_Information ('GPINPY02', 'SUMMARY',             $SUMMARY_LBL,         #DW)
   do Get_Field_Information ('GPINPY02', 'SL_NO',               $SL_NO_LBL,           #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL',               $TOTAL_LBL,           #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL_CONTRIB_PAID',  $TOT_CONTRIB_LBL,     #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL_EMP_SHARE',     $TOT_EMP_SHRE_LBL,    #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL_EMP_SHARE2',    $TOT_EMP_SHRE2_LBL,   #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL_EMP_SHARE3',    $TOT_EMP_SHRE3_LBL,   #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL_NO_OF_DAYS',    $TOT_DAYS_LBL,        #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL_WAGES',         $TOT_WAGES_LBL,       #DW)
   do Get_Field_Information ('GPINPY02', 'TOTAL_WAGES_PERIOD',  $TOT_WAGES2_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'VIDE',                $VIDE_LBL,            #DW)
   do Get_Field_Information ('GPINPY02', 'EMPR_SHARE',          $EMPR_SHARE_LBL,      #DW)
   do Get_Field_Information ('GPINPY02', 'GRAND_TOTAL',         $GRAND_TOTAL_LBL,     #DW)
   do Get_Field_Information ('GPINPY02', 'PAID_ON',             $PAID_ON_LBL,         #DW)

end-procedure !Get_Translat_Info

!#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for Date Arithmetic
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'address.sqc'   !global address formating
#include 'readxlat.sqc'  ! Get shortname or longname from xlattable
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'