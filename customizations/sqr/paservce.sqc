
!***********************************************************************
!  Calculation Worksheet Service Sqc
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!***********************************************************************
!                                                                      *
! CHANGE LOG                                                           *
!                                                                      *
!  2/19/2006  PY - Fix for Calculations with All Plans checked         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:14:59:44                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!   $functn_result_nm_svc

begin-procedure get-service
let $functn_result_nm = $functn_result_nm_svc
let $fld_name = 'SERVICE_AMOUNT'
do get-decimal-value
let #service_amt = #return_value
let $service_amt_str =  LTRIM(edit (#SERVICE_AMT,'999,999,999.999999'),' ')
do retrieve-service-units
do retrieve-service-date-attained
let $service_stmnt = $service_amt_str || ' ' || $units ||
                        ' as of Event Date (' || $service_date || ')'
print $service_stmnt              (+1,{ColTitle}) center

let $sql-statement = 'PASERVCE.SQC - Service Function Result select'
BEGIN-SELECT ON-ERROR=SQL-ERROR DISTINCT
CLC_SVC_A.FUNCTN_RESULT_NM
    do print-service-heading
FROM PS_PA_CLC_SVC_AY CLC_SVC_A
WHERE CLC_SVC_A.CALC_NAME        = $calc_name
  AND CLC_SVC_A.EMPLID           = $emplid
  AND CLC_SVC_A.BENEFIT_PLAN     = &pa_plan.benefit_plan
  AND CLC_SVC_A.FUNCTN_RESULT_NM = $functn_result_nm
END-SELECT

let $sql-statement = 'PASERVCE.SQC - Service Result Array select'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CLC_SVC_AY.PRD_FR_DT
  move '1' to $Year4
  do Format-DateTime(&clc_svc_ay.prd_fr_dt, $clc_svc_ay.prd_fr_dt, {DEFDATE}, '', '',)
  print $clc_svc_ay.prd_fr_dt      (+1,{col1a9})
CLC_SVC_AY.PRCS_THRU_DT
  move '1' to $Year4
  do Format-DateTime(&clc_svc_ay.prcs_thru_dt, $clc_svc_ay.prcs_thru_dt, {DEFDATE}, '', '',)
  print $clc_svc_ay.prcs_thru_dt   (,{col2a9})
CLC_SVC_AY.PRD_END_DT
  move '1' to $Year4
  do Format-DateTime(&clc_svc_ay.prd_end_dt, $clc_svc_ay.prd_end_dt, {DEFDATE}, '', '',)
  print $clc_svc_ay.prd_end_dt       (,{col3a9})
CLC_SVC_AY.HRS_FOR_PRD               (,{col4a9})
CLC_SVC_AY.BRKS_PRD                  (,{col5a9}) edit 999.999999
CLC_SVC_AY.ACCUM_BRKS                (,{col6a9}) edit 999.999999
CLC_SVC_AY.SVC_AMT_W_BRK             (,{col7a9}) edit 999.999999
CLC_SVC_AY.SVC_AMT_WO_BRK            (,{col8a9}) edit 999.999999
CLC_SVC_AY.SVC_ADJ_AMT               (,{col9a9}) edit 999.999999
CLC_SVC_AY.ACCUM_SVC_W_BRKS          (,{col10a9}) edit 999.999999
FROM PS_PA_CLC_SVC_AY CLC_SVC_AY
WHERE CLC_SVC_AY.CALC_NAME        = $calc_name
  AND CLC_SVC_AY.EMPLID           = $emplid
  AND CLC_SVC_AY.BENEFIT_PLAN     = &pa_plan.benefit_plan
  AND CLC_SVC_AY.FUNCTN_RESULT_NM = $functn_result_nm
ORDER BY CLC_SVC_AY.PRD_FR_DT
END-SELECT
end-procedure

begin-procedure print-service-heading
IF $PAT03A_FLAG != 'Y'
print 'Period'                         (+1,{col1a9})
print 'Process'                        (,{col2a9})
print 'Period End'                     (,{col3a9})
print 'Hours'                          (,{col4a9})
print 'Breaks'                         (,{col5a9})
print 'Accumulated'                    (,{col6a9})
print 'Service'                        (,{col7a9})
print 'Service'                        (,{col8a9})
print 'Service'                        (,{col9a9})
print 'Accumulated'                    (,{col10a9})

print 'Start'                          (+1,{col1a9})
print 'Through'                        (,{col2a9})
print 'for Period'                     (,{col5a9})
print 'Breaks'                         (,{col6a9})
print 'w/ Breaks'                      (,{col7a9})
print 'w/o Breaks'                     (,{col8a9})
print 'Adjustment'                     (,{col9a9})
print 'Service'                        (,{col10a9})

print '~~~~~~~~~~'                     (+1,{col1a9})
print '~~~~~~~~~~'                     (,{col2a9})
print '~~~~~~~~~~'                     (,{col3a9})
print '~~~~~'                          (,{col4a9})
print '~~~~~~~~~~'                     (,{col5a9})
print '~~~~~~~~~~~'                    (,{col6a9})
print '~~~~~~~~~'                      (,{col7a9})
print '~~~~~~~~~~'                     (,{col8a9})
print '~~~~~~~~~~~'                    (,{col9a9})
print '~~~~~~~~~~~'                    (,{col10a9})
END-IF
end-procedure


begin-procedure retrieve-service-date-attained
let $functn_result_nm = $functn_result_nm_svc
let $fld_name = 'DATE_ATTAINED'
do get-date-value
let $service_date = $return_value
end-procedure

begin-procedure retrieve-service-units
let $functn_result_nm = $functn_result_nm_svc
let $fld_name = 'UNITS'
do get-character-value
let $units = $return_value
let $fieldname = 'UNITS'
let $fieldvalue = $units
do read-translate-table
let $units = rtrim($xlatlongname,' ')
end-procedure

