!***********************************************************************
!GPMXPR02. Loans by Payee                                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  31241710                                            *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Report-Translation
  do Init-Report
  do Select-Parameters
  do Delete-Temp-Tables
  do Select-Elements
  do Get-Print-Data
  if $Finalized_Cal = 'N'
     Let $error = 'There must be a payroll with calculation status finalized within the period selected.'
     display $error
  end-if
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
  do Reset
end-report

begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'GPMXPR02' to $ReportID
  let $ReportTitle = $Rep_Title
  display $ReportTitle
  move 'Ver. PUM-35.01'  to $ReportVersion 
  display $ReportVersion 
end-procedure Init-Report


begin-heading 09
  print 'PeopleSoft'           (1,1) center
  uppercase $ReportTitle
  print $ReportTitle           (+1,1) center 
  print $Page                  (3,159)
  page-number                  ( ,168)
  print $Date                  (4,159)
  print $ReportDate            (,168)
  print $Time                  (5,159)
  print $ReportTime            (,168) 
  print $Report                (3,1)
  print $ReportID              (,20)
  Print $H_Emplid              (4,1)
  Print $Emplid_p              (,20)
  Print $Empl_Name             (,+1)
  
  if #ban = 1
   print $From                 (5,1)
   do Format-DateTime($Bgn_Dt_p, $Out,{DEFDATE}, '','')
   print $out                  ( ,20)
   print $To                   ( ,+1)
   do Format-DateTime($End_Dt_p, $out, {DEFDATE}, '', '')
   print $out                  ( ,+1)
  else
    print $To                  (5,1)
    do Format-DateTime($max_date, $Out,{DEFDATE}, '','')
    print $out                 (,20)
  end-if

  Print '='                    (+1,1,177) fill
  let $H_Deduction2 = $H_Deduction || ', ' || $H_Descr
  print $H_Deduction2          (+1,1)
  print $H_Loan_Num            ( ,58)
  print $H_Loan_Date           ( ,90)
  print $H_Total_Amt           ( ,121)
  print $H_Pay_Amt             ( ,140)
  print $H_Balance             ( ,160)
  Print '='                    (+1,1,177) fill
end-heading

!**********************************
begin-procedure Select-Parameters
!**********************************
BEGIN-SELECT
EEE.EMPLID
EEE.BGN_DT
EEE.END_DT
  let $Emplid_p = &EEE.EMPLID
  let $Bgn_Dt_p = &EEE.BGN_DT
  let $End_Dt_p = &EEE.END_DT
  let #null1 = isnull($Bgn_Dt_p)
  let #null2 = isnull($End_Dt_p)
  
  if #null1 <> 1 and #null2 <> 1
     !Do convert-from-dtu-date($Bgn_Dt_p, $Bgn_dt_p)
     !Do convert-from-dtu-date($End_dt_p, $End_dt_p)
     let $WhereClause = ' AND CRD.PRD_BGN_DT  >= ''' || $Bgn_Dt_p || ''' AND CRD.PRD_END_DT <= ''' || $End_Dt_p || ''''
     let #ban = 1
  else
     let $max_date  = datenow()
     !Do convert-from-dtu-date($max_date, $max_date)
     let $WhereClause = ' AND CRD.PRD_END_DT <= ''' || $max_date || ''''
     let #ban = 2
  end-if
  
FROM PS_GPMX_RC_LNPYE  EEE
WHERE EEE.OPRID       = $Prcs_OprID
AND   EEE.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SELECT

end-procedure Select-Parameters

!**********************************
begin-procedure Select-Elements
!**********************************
BEGIN-SELECT
EE.PIN_NUM

   Let #ePinNum = &EE.PIN_NUM
   do Select-Run
   
FROM PS_GP_PIN EE 
WHERE EE.PIN_CATEGORY = 'PR' 
AND EE.PIN_TYPE = 'DD'
END-SELECT
end-procedure Select-Elements

!**********************************
begin-procedure Select-Run
!**********************************
let $Finalized_Cal = 'N'
let #Payment_Val = 0
let #Arrear_Val = 0
BEGIN-SELECT
DED.EMPLID
DED.EMPL_RCD
DED.CAL_RUN_ID
DED.GP_PAYGROUP
DED.CAL_ID
DED.RSLT_SEG_NUM
DED.CALC_RSLT_VAL
DED.CALC_ADJ_VAL
DED.PIN_NUM
DED.SLICE_BGN_DT
DED.SLICE_END_DT
DED.USER_FLD1 

  let $Emplid       = &DED.EMPLID
  let #EmplRcd      = &DED.EMPL_RCD
  let $Paygroup     = &DED.GP_PAYGROUP
  let $Cal_ID       = &DED.CAL_ID
  let $Cal_run_id   = &DED.CAL_RUN_ID
  let #Rslt_Seg_Num = &DED.RSLT_SEG_NUM
  let #Payment_Val  = &DED.CALC_RSLT_VAL + &DED.CALC_ADJ_VAL
  let #Payment_Val  = round(#Payment_Val,2)
  let $Prd_Beg_Dt   = &DED.SLICE_BGN_DT
  let $Prd_End_Dt   = &DED.SLICE_END_DT
  LET $USER_FLD1    = &DED.USER_FLD1 
  Let $Finalized_Cal = 'Y'
  
  do Get-Acm-Mbr
  do Select-Descr
  do Get-Empl-Name
  do Get-Accum-Data
  
  do Get-Loan-Total
  
  Let #Balance_Amt = round(#Loan_Tot_Amt - #Payment_Val,2)

  if $Found_Loan_Ac = 'Y'
     do Insert-Loan-Data
  end-if

FROM PS_GP_RSLT_ERN_DED DED
     ,PS_GP_CAL_RUN_DTL CRD
     ,PS_GP_CAL_RUN CR
WHERE DED.EMPLID         = $Emplid_P
AND DED.CAL_RUN_ID       = CRD.CAL_RUN_ID
AND DED.ORIG_CAL_RUN_ID  = CRD.CAL_RUN_ID
AND CRD.CAL_RUN_ID       = CR.CAL_RUN_ID
AND CR.RUN_FINALIZED_IND = 'Y'
AND CRD.CALC_TYPE        = 'P'
[$WhereClause]
AND DED.PIN_NUM          = #ePinNum
AND CRD.CAL_SEQ_NUM      = (SELECT MAX(CAL_SEQ_NUM) FROM PS_GP_CAL_RUN_DTL
                            WHERE CAL_RUN_ID = DED.CAL_RUN_ID)
END-SELECT
end-procedure Select-Run

!**********************************
begin-procedure Get-Acm-Mbr
!**********************************
BEGIN-SELECT 
MBR.PIN_NUM
   
   Let #Acum_Num = &MBR.PIN_NUM
   
FROM PS_GP_ACM_MBR MBR,
PS_GP_PIN PINM
WHERE MBR.PIN_MBR_NUM   = #ePinNum
AND MBR.PIN_NUM         = PINM.PIN_NUM
AND PINM.PIN_CATEGORY   = 'PR'
AND PINM.PIN_PARENT_NUM = 0
END-SELECT
end-procedure Get-Acm-Mbr

!**********************************
begin-procedure Select-Descr
!**********************************
begin-select
PDD.DESCR
PDD.PIN_NM

  Let $Pin_Descr = rtrim(&PDD.DESCR, ' ')
  Let $Pin_Name = rtrim(&PDD.PIN_NM, ' ')

FROM PS_GP_PIN PDD
WHERE PDD.PIN_NUM= #ePinNum
end-select
begin-select
PDL.DESCR

  Let $Pin_Descr = rtrim(&PDL.DESCR, ' ')

FROM PS_GP_PIN_LANG PDL
WHERE PDL.PIN_NUM = #ePinNum
AND   PDL.LANGUAGE_CD = $curr_language_cd
end-select
Let $Description  = substr(($Pin_Name || ', ' || $Pin_Descr), 1, 40)
end-procedure Select-Descr

!**********************************
begin-procedure Get-Empl-Name
!**********************************
BEGIN-SELECT
EN.NAME_PSFORMAT
  let $Empl_Name = rtrim(&EN.NAME_PSFORMAT,' ')

FROM PS_PERSON_NAME EN
WHERE EN.EMPLID = $Emplid
AND EN.NAME_TYPE = 'PRI'
END-SELECT
end-procedure Get-Empl-Name

!**********************************
begin-procedure Get-Accum-Data
!**********************************
let #Accum_Value = 0
let $Loan_Num = ''
let $Found_Loan_Ac = 'N'
BEGIN-SELECT
D.CALC_RSLT_VAL
D.USER_KEY1
D.SLICE_END_DT

  let #Accum_Value = &D.CALC_RSLT_VAL
  let $Loan_Num = rtrim(&D.USER_KEY1, ' ')
  let $Found_Loan_Ac = 'Y'
  let $Loan_Date    = &D.SLICE_END_DT
 
FROM PS_GP_RSLT_ACUM D
,PS_GP_CAL_RUN_DTL C
WHERE D.EMPLID        = $Emplid
AND   D.GP_PAYGROUP   = $Paygroup
AND   D.CAL_RUN_ID    = $Cal_run_id
AND   D.CAL_RUN_ID    = D.ORIG_CAL_RUN_ID
AND   D.CAL_RUN_ID    = C.CAL_RUN_ID
AND   D.CAL_ID        = C.CAL_ID
AND   C.CALC_TYPE     = 'P'
AND   D.RSLT_SEG_NUM  = #Rslt_Seg_num
AND   D.PIN_NUM       = #Acum_Num
AND   D.SLICE_BGN_DT >= $Prd_Beg_Dt
AND   D.SLICE_END_DT <= $Prd_End_Dt
AND   D.CALC_RSLT_VAL <> 0
AND   C.CAL_SEQ_NUM   = (SELECT MAX(CAL_SEQ_NUM) FROM PS_GP_CAL_RUN_DTL
                         WHERE CAL_RUN_ID = C.CAL_RUN_ID)
AND D.USER_KEY1 = $USER_FLD1 
END-SELECT
end-procedure Get-Accum-Data

!**********************************
begin-procedure Get-Loan-Total
!**********************************
Let #Loan_Total = 0
Let #Loan_Tot_Amt = 0

begin-select
GL.GPMX_TOT_AMT

  Let #Loan_Total = &GL.GPMX_TOT_AMT
  Let #Loan_Tot_Amt =  #Loan_Total - #Accum_Value + #Payment_Val

FROM PS_GPMX_LOAN GL
WHERE GL.EMPLID = $Emplid
AND GL.EMPL_RCD = #EmplRcd
AND GL.PIN_NUM  = #ePinNum
AND UPPER(GL.GPMX_LOAN_NUM) = UPPER($Loan_Num)
end-select

end-procedure Get-Loan-Total

!**********************************
begin-procedure Insert-Loan-Data
!**********************************

begin-sql
INSERT INTO PS_GPMX_R_LOANS
(EMPLID
,NAME
,DESCR40
,GPMX_LOAN_NUM
,GPMX_DATE
,GPMX_TOT_AMT
,PAYMENT_AMOUNT
,BAL_ADJ
,RSLT_ADD_ARR)
values($Emplid
,$Empl_Name
,$Description
,$Loan_Num 
,$Loan_Date
,#Loan_Tot_Amt
,#Payment_Val
,#Balance_Amt
,#Arrear_Val)
end-sql
end-procedure Insert-Loan-Data

!**********************************
begin-procedure Get-Print-Data
!**********************************
BEGIN-SELECT
R.EMPLID
R.NAME
R.DESCR40
R.GPMX_LOAN_NUM
R.GPMX_DATE
R.GPMX_TOT_AMT
R.PAYMENT_AMOUNT
R.BAL_ADJ
R.RSLT_ADD_ARR
  
  let $Emplid       = &R.EMPLID
  let $Empl_Name    = substr(&R.NAME,1,40)
  let $Pin_Name     = &R.DESCR40
  let $Loan_Num     = &R.GPMX_LOAN_NUM
  let $Loan_Date    = &R.GPMX_DATE
  let #Loan_Tot_Amt = &R.GPMX_TOT_AMT
  let #Payment      = &R.PAYMENT_AMOUNT
  let #Balance_Amt  = &R.BAL_ADJ
   
  do Print-Data
   
FROM PS_GPMX_R_LOANS R
ORDER BY R.EMPLID, R.GPMX_LOAN_NUM, R.GPMX_DATE, R.RSLT_ADD_ARR DESC
END-SELECT
end-procedure Get-Print-Data

!**********************************
begin-procedure Print-Data
!**********************************
print ''                      (+1,1)   
print $Pin_Name               ( ,1,50) ON-BREAK SKIPLINES=1
print $Loan_Num               ( ,58) ON-BREAK
Do Format-DateTime($Loan_Date, $Loan_DateOut,{DEFDATE}, '','')
print $Loan_DateOut           ( ,90) ON-BREAK
print #Loan_Tot_Amt           ( ,118) edit 999,999,999.99 
print #Payment                ( ,138) edit 999,999,999.99
print #Balance_Amt            ( ,158) edit 999,999,999.99

move 0 to #Loan_Tot_Amt
move 0 to #Accum_Value
move 0 to #Balance_Amt
move 0 to #ArrearAmt
end-procedure

!**********************************
begin-procedure Delete-Temp-Tables
!**********************************
begin-sql
  DELETE FROM PS_GPMX_R_LOANS
end-sql
end-procedure Delete-Temp-Tables

!**********************************
!Procedure Report-Translation
!**********************************
begin-Procedure Report-Translation
 let $language_cd = $prcs_language_cd
 do Init_Report_Translation ('GPMXPR02', $language_cd)
 do Append_Report_Translation ('GPMXPR02')
 do Get_Field_Information ('GPMXPR02', 'HEAD1',  $Date,         #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD2',  $Page,         #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD3',  $Report,       #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD4',  $Time,         #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD5',  $H_Emplid,     #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD6',  $From,         #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD7',  $To,           #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD8',  $H_Deduction,  #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD9',  $H_Loan_Num,   #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD10', $H_Loan_Date,  #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD11', $H_Total_Amt,  #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD12', $H_Pay_Amt,    #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD13', $H_Balance,    #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD14', $Rep_Title,    #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD15', $H_Arrear,     #DW)
 do Get_Field_Information ('GPMXPR02', 'HEAD16', $H_Descr,      #DW)
End-Procedure Report-Translation


#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
#include 'getpgdta.sqc'  !Get-Paygroup-Data
#include 'getcodta.sqc'  !Get-Company-Data
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
