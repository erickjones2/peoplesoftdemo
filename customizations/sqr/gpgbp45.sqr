!***********************************************************************
!  GPGBP45.SQR - EMPLOYEE LEAVING WORK P45                             *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
!                                                                      *
!
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!       $Release:  HR92                                                !
!           $Bug:  30658589                                            !
!                                                                      *
!***********************************************************************
!  Date         Modification
!  ----         ------------
!  06/2001      8.8 Enhancements + adjustments
!  08/2001      Change P45 Reporting values
!  08/2002      Adjustments: SL continuity, Print Tax Basis
!  03/2003      Date Format in Oracle + Date of Decease
!  09/2003      Revision of Result selection / mutiple employment
!  11/2003      Change report stucture
!  03/2004      NINO Temporay numbers
!  07/2004      8.9 New Dev - Changed to read file generated by
!               GPGB_P45 Application Engine Program
!
!*=================================================================
!******************************************************************
!*** Setting up the environment
!******************************************************************
! #define debug_x
! #define debug_y

#include 'setenv.sqc'   ! Set environment
#include 'gpgbp45.sqc'  ! Set P45 file path
#include 'setup31.sqc'  ! Printer and page-size initialization

!******************************************************************
!*** Constants definitions
!******************************************************************
!Define Column Location Variables

#define PageLength              177
#define PosNumPage              160
#define PosStart                 1
#define Pos1                    35
#define PosOfficeRef            47
#define PosName                 37
#define Pos1B                   38
#define Pos1G                   43
#define Pos1C                   52
#define PosMName                60
#define Pos1D                   66
#define PosSex                  70
#define Pos1E                   80
#define Pos1F                   94
#define PosScheme               108
#define Pos1H                   122
#define Pos1I                   136
#define Pos1J                   88
#define Pos1K                   164

!******************************************************************
!*** Heading section - Title
!******************************************************************
begin-heading 11 !This number must be changed to match the number

!of lines in the header (including column headings)

print $ReportTitle                      ()   bold center
print 'Report ID:  '                    (+1,1)
print $ReportID                         (,{Pos1})
print 'PAYE Reference:'                 (+3,{PosStart})    Bold
print #PYENT_TAXNUM                     (,{Pos1})          edit 009
print $PYENT_PAYE_REF                   (,{PosOfficeRef})
print 'National Insurance number:'      (+2,{PosStart})    Bold
print $NI                               (,{Pos1})
print 'Surname:'                        (+1,{PosStart})    Bold
PRINT $PERS_DT_nameprefix               (,{Pos1})
print $PERS_DT_surname                  (,+1)
print 'First name(s):'                  (+1,{PosStart})    Bold
print $PERS_DT_forenames                (,{Pos1})
print 'Leaving Date:'                   (+2,{PosStart})    Bold
print $TERM_DT                          (,{Pos1})
end-heading

!******************************************************************
!***    Begin Report Section
!******************************************************************


begin-report
        #ifdef debug_x
        display ' '
        display 'GPGBP45.SQR: BEGIN-report'
        #end-if

      SHOW 'P45'

        !----------------------------------------------------------
        !***    ! SHOW timedate of the beginning
        !----------------------------------------------------------

        let $Time_Begin = edit(datenow(), 'DD/MM/YYYY HH24:MI:SS')

      show 'Time Program Began = ' $Time_Begin

        !----------------------------------------------------------
        !***    Call the main procedures
        !----------------------------------------------------------

        do INIT-REPORT
        do MAIN-REPORT

        !----------------------------------------------------------
        !***    SHOW informations
        !----------------------------------------------------------
        move #CountError to $CountError 99999

      SHOW 'CountError  ==> ' noline
      SHOW $CountError
      SHOW ' '

        !----------------------------------------------------------
        !***    SHOW timedate of the end
        !----------------------------------------------------------
        !let $Time_Ended = edit(datenow(), 'DD/MM/YYYY HH24:MI:SS')
        !show 'Time Program Ended = ' $Time_Ended
        #ifdef debug_x
        display 'GPGBP45.SQR: END-report'
        #end-if
end-report



!******************************************************************
! I N I T I A L I Z E   A N D / O R   G E T    V A R I A B L E S
!******************************************************************
!*=================================================================
! Procedure     :INIT-REPORT
! Comment       :This procedure performs the application
!                initializations formats variables for use, and
!                calls the procedures to get input parameters.
!*=================================================================


begin-procedure INIT-REPORT
        #ifdef debug_x
        display ' '
        display 'Entering GPGBP45.SQR: INIT-report'
        #end-if

        let $ProcedureName      = 'INIT-REPORT'

      SHOW 'PROCEDURE->' $ProcedureName

        do INIT-DATETIME
        do INIT-NUMBER
        do INIT-VARIABLES
        do DEFINE-PRCS-VARS
        do GET-RUN-CONTROL-PARMS
        do GET-CURRENT-DATETIME

        if isnull($prcs_process_instance)

              SHOW 'Running P45 SQR'

                do ASK-VALUES !SQR not run through process scheduler
        else

              SHOW 'Running P45.SQR in the Process Scheduler'

                do GET-VALUES !SQR run through process scheduler
        end-if


        let $ReportID    = 'P45'
        let $ReportTitle = 'Employee Leaving Work'

      SHOW  ' '
      show $ReportID  ' '      $ReportTitle
      SHOW ' '
      show    'Operator ID: ' $Prcs_OprID  ' ' $Prcs_Run_Cntl_ID
      SHOW ' '
        #ifdef debug_x
        display 'Exiting GPGBP45.SQR: Init-Report'
        #end-if
end-procedure INIT-REPORT



!*=================================================================
! Procedure    :INIT-VARIABLES
! Comment      :Initializations of all varaibles used by the report
!*=================================================================


begin-procedure INIT-VARIABLES
        #ifdef debug_x
        display 'Entering GPGBP45.SQR: Init-Variables'
        #end-if

        let $ProcedureName      = 'INIT-VARIABLES'
        LET #CountError         = 0
        #ifdef debug_x
        display 'Exiting GPGBP45.SQR: Init-Variables'
        #end-if
end-procedure INIT-VARIABLES



!*=================================================================
! Procedure   :ASK-VALUES
! Comment     :This procedure prompts the user for those variable
!              values that will be used throughout the report.
!              ASK-VALUES is called when the user is not using
!              the process scheduler. This procedure calls whatever
!              procedures are needed. (eg. do ASK-FROM-THRU-DATE).
!*=================================================================


begin-procedure ASK-VALUES

        let $ProcedureName      = 'ASK-VALUES'

        !*---------------------------------------------------------
        !***    Enter P45 File Name and File Path output by AE Program
        !*---------------------------------------------------------
        !input $PNL_P45_FILENAME 'Enter P45 File Name'
        !input $PNL_P45_FILEPATH 'Enter P45 File Path'
end-procedure ASK-VALUES



!*=================================================================
! Procedure     :GET-VALUES
! Comment       :This procedure gets the variable name (beginning
!                with a $) that will be used throughout the report
!                using the run control parameters called in
!                GET-RUN-CONTROL-PARMS.
!*=================================================================


begin-procedure GET-VALUES
        #ifdef debug_x
        display 'Entering GPGBP45.SQR: GET-VALUES'
        #end-if

        let $ProcedureName      = 'GET-VALUES'

begin-SELECT on-error=SQL-ERROR   !SELECTS THE DATA FROM THE PANEL
RUNDB.GPGB_FILE_PATH
RUNDB.GPGB_FILE_NAME

          LET $PNL_P45_FILEPATH       = RTRIM(&RUNDB.GPGB_FILE_PATH,' ')
          LET $PNL_P45_FILENAME       = RTRIM(&RUNDB.GPGB_FILE_NAME,' ')

          FROM  PS_GPGB_RUNCTL_P45 RUNDB

          WHERE RUNDB.OPRID         = $Prcs_OprID
          AND RUNDB.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

        #ifdef debug_x
        display 'Exiting GPGBP45.SQR: GET-VALUES'
        #end-if
end-procedure GET-VALUES



!******************************************************************
!           S T A R T   O F   T H E   R E P O R T
!******************************************************************
!*=================================================================
! Procedure     : MAIN REPORT                                     !
! Descr         : This procedure is the main procedure of the     !
!                 report and calls other procedures               !
!                                                                 !
!*=================================================================


begin-procedure MAIN-REPORT

        let $ProcedureName      = 'MAIN-REPORT'

      SHOW 'PROCEDURE->' $ProcedureName

        if $PNL_P45_FILEPATH <= ' '

                LET $FileID = '{GPGBIMPORTPREFIX}' || $PNL_P45_FILENAME
        else

                LET $FileID = $PNL_P45_FILEPATH || $PNL_P45_FILENAME
        end-if 

        if $PNL_P45_FILENAME <> ''
        ! open $FileID as 1 for-reading record=804 status=#filestat
        open $FileID as 1 for-reading record=824 status=#filestat

        if #filestat != 0
                display $PNL_P45_FILEPATH noline
                display $PNL_P45_FILENAME noline
                display ' not found '
                display ' '
        else

                DO PROCESS-FILE
        end-if
        end-if


        DO UPDATE-PRCS-RUN-STATUS
end-procedure MAIN-REPORT



!*=================================================================
! Procedure:  DO-PROCESS-FILE                                     !
! Descr:      Reads file and Prints P45 Report per Employee       !
!*=================================================================


begin-procedure PROCESS-FILE

        let $ProcedureName      = 'DO-PROCESS-FILE'

      SHOW 'PROCEDURE->' $ProcedureName
        while 1
        read 1 into
        $PYENT_TAXNUM:3
        $PYENT_PAYE_REF:10
        $NI_NUMBER:20
        $PERS_DT_nameprefix:4
        $PERS_DT_surname:30
        $PERS_DT_FORENAME:30
        $PERS_DT_MIDDLENAME:30
        $TERMINATION_DT:10
        $EE_STLOAN_IND:1
        $TAXCODE:6
        $TAX_BASIS:1
        $FREQUENCY_P45:5
        $TAX_PERIOD:3
        $VALP45_PAY:10
        $VALP45_TAX:10
        $VAL3:10
        $VAL7Y:10
        $EMPLID:11
        $ST_EMPL_RCD:3
        $DEPTID_P45:10
        $EE_ADDRESS1:55
        $EE_ADDRESS2:55
        $EE_ADDRESS3:55
        $EE_CITY:30
        $EE_COUNTY:6
        $EE_POSTAL:12
        $EE_Country:3
        $EE_COUNTRY_Descr:30
        $PYENT_NAME:36
        $PYENT_Descr:30
        $PYENT_Addr1:55
        $PYENT_Addr2:55
        $PYENT_Addr3:55
        $PYENT_City:30
        $PYENT_County:6
        $PYENT_PostCode:12
        $PYENT_Country:3
        $PYENT_Country_DESCR:30
        $Date:10
        $EE_DIED_IND:1
        $P45_PRINTED:1
        $CAL_RUN_ID:18
        $BIRTHDATE:10  
        $SEX:1

        
        LET $PYENT_PAYE_REF = RTRIM($PYENT_PAYE_REF, ' ')
        LET $PERS_DT_nameprefix = RTRIM($PERS_DT_nameprefix, ' ')
        LET $PERS_DT_surname = RTRIM($PERS_DT_surname, ' ')
        LET $PERS_DT_FORENAME = RTRIM($PERS_DT_FORENAME, ' ')
        LET $PERS_DT_MIDDLENAME = RTRIM($PERS_DT_MIDDLENAME, ' ')
        LET $PERS_DT_forenames = $PERS_DT_FORENAME || ' ' || $PERS_DT_MIDDLENAME
        LET $TAXCODE = RTRIM($TAXCODE, ' ')
        IF $FREQUENCY_P45 = 'W' OR $FREQUENCY_P45 = 'B' OR $FREQUENCY_P45 = 'F'
        LET  $FREQUENCY_P45 = 'W' 
        END-IF
        LET $FREQUENCY_P45 = RTRIM($FREQUENCY_P45, ' ')
        LET $TAX_PERIOD = RTRIM($TAX_PERIOD, ' ')
        LET $EMPLID = RTRIM($EMPLID, ' ')
        LET $DEPTID_P45 = RTRIM($DEPTID_P45, ' ')
        LET $EE_ADDRESS1 = RTRIM($EE_ADDRESS1, ' ')
        LET $EE_ADDRESS2 = RTRIM($EE_ADDRESS2, ' ')
        LET $EE_ADDRESS3 = RTRIM($EE_ADDRESS3, ' ')
        LET $EE_CITY = RTRIM($EE_CITY, ' ')
        LET $EE_COUNTY = RTRIM($EE_COUNTY, ' ')
        LET $EE_POSTAL = RTRIM($EE_POSTAL, ' ')
        LET $EE_COUNTRY_Descr = RTRIM($EE_COUNTRY_Descr, ' ')
        LET $PYENT_NAME = RTRIM($PYENT_NAME, ' ')
        LET $PYENT_Descr = RTRIM($PYENT_Descr, ' ')
        LET $PYENT_Addr1 = RTRIM($PYENT_Addr1, ' ')
        LET $PYENT_Addr2 = RTRIM($PYENT_Addr2, ' ')
        LET $PYENT_Addr3 = RTRIM($PYENT_Addr3, ' ')
        LET $PYENT_City = RTRIM($PYENT_City, ' ')
        LET $PYENT_County = RTRIM($PYENT_County, ' ')
        LET $PYENT_PostCode = RTRIM($PYENT_PostCode, ' ')
        LET $PYENT_Country_DESCR = RTRIM($PYENT_Country_DESCR, ' ')
        LET $CAL_RUN_ID = RTRIM($CAL_RUN_ID, ' ')
        LET $BIRTHDATE = RTRIM($BIRTHDATE,' ')
        LET #PYENT_TAXNUM = to_number($PYENT_TAXNUM)
        LET #VALP45_PAY   = to_number($VALP45_PAY)/100
        LET #VALP45_TAX   = to_number($VALP45_TAX)/100
        LET #VAL3         = to_number($VAL3)/100
        LET #VAL7Y        = to_number($VAL7Y)/100
        LET #ST_EMPL_RCD  = to_number($ST_EMPL_RCD)

        if #end-file
                break
        end-if
        
        IF Substr($NI_NUMBER,1,2) <> 'TN'

                LET $NI = $NI_NUMBER
        ELSE

                LET $NI = ' '
        END-IF


        LET $TERM_DT = RTRIM($TERMINATION_DT, ' ')    
        LET $DT_ISSUED = RTRIM($Date, ' ')

        DO EMPL-REF-NBR
        
        LET #EMPL_REF_NBR  = &empl_ref_nbr
        
        DO PRINT-REPORT
        DO PRINT-SUMMARY
        NEW-PAGE
        end-while
        close 1
end-procedure DO PROCESS-FILE

!*=================================================================
! Procedure: EMPL-REF-NBR                                         !
! Descr:     Get Employement Reference Number                     !
!                                                                 !
!*=================================================================

begin-procedure EMPL-REF-NBR
#debug show ' Procedure Name -> EMPL-REF-NBR'

do Format-Datetime($TERM_DT, $TERM_DT_NEW, {DEFDMY}, '', 'native')

BEGIN-SELECT
GPGB_RTI_EMPMT_NBR         &empl_ref_nbr

FROM PS_GPGB_RTI_EMPMAP EMAP 
WHERE EMAP.EMPLID = $EMPLID
   AND EMAP.EMPL_RCD = #ST_EMPL_RCD
   AND EMAP.EFFDT = (SELECT Max(EFFDT) FROM PS_GPGB_RTI_EMPMAP E_EMAP 
                     WHERE E_EMAP.EMPLID = EMAP.EMPLID
                     AND E_EMAP.EMPL_RCD = EMAP.EMPL_RCD
                     AND E_EMAP.EFFDT <= $TERM_DT_NEW)
   AND EMAP.EFFSEQ = (SELECT Max(EFFSEQ) FROM PS_GPGB_RTI_EMPMAP ES_EMAP 
                     WHERE ES_EMAP.EMPLID = EMAP.EMPLID
                     AND ES_EMAP.EMPL_RCD = EMAP.EMPL_RCD
                     AND ES_EMAP.EFFDT <= EMAP.EFFDT)
                  
END-SELECT

#debug show ' Procedure Name <- EMPL-REF-NBR'
end-procedure EMPL-REF-NBR


!*=================================================================
! Procedure: PRINT-REPORT                                          !
! Descr:     Prints P45 Employee information                      !
!                                                                 !
!*=================================================================


begin-procedure PRINT-REPORT

        LET $ProcedureName = 'PRINT-REPORT'

      SHOW 'PROCEDURE->' $ProcedureName

        print 'Continue SLD:'                    (+1,{PosStart})    Bold
        print $EE_STLOAN_IND                     (,{Pos1})
        print 'Tax Code:'                        (+1,{PosStart})    Bold
        print $TAXCODE                           (,{Pos1})
        print 'Frequency/Period:'                (+1,{PosStart})    Bold
        print $FREQUENCY_P45                     (,{Pos1})
        print $TAX_PERIOD                        (,+1)              EDIT 999

        ! Tax Basis Cumulative = 0 / Week1/Month1 = 1

        Print 'Month1/Week1:'                    (+1,{PosStart})    Bold

        IF $TAX_BASIS = '0'

                print 'Total Pay to Date:'                (+1,{PosStart})     Bold
                print #VALP45_PAY                         (,{Pos1})           
                print 'Total Tax to Date:'                (+1,{PosStart})     Bold
                print #VALP45_TAX                         (,{Pos1})           
            

                print 'Total Pay in this Employment:'     (+1,{PosStart})     Bold
                print #VAL3                               (,{Pos1})    
                print 'Total Tax in this Employment:'     (+1,{PosStart})     Bold
                print #VAL7Y                              (,{Pos1})    
    

ELSE

        Print 'X'                                 (,{Pos1})
        print 'Total Pay in this Employment:'     (+1,{PosStart})     Bold
        print #VAL3                               (,{Pos1})           
        print 'Total Tax in this Employment:'     (+1,{PosStart})     Bold
        print #VAL7Y                              (,{Pos1})           
END-IF


print 'Work/Payroll number:'           (+2,{PosStart}) Bold

if length($EMPLID) < 11

        print $EMPLID                          (,{Pos1})
        print ','                              (,)
        print #ST_EMPL_RCD                     (,)             EDIT 009

else

        print $EMPLID                          (,{Pos1})
        print #ST_EMPL_RCD                     (,)             EDIT 009
end-if

Let #ref_nbr_chk = isnull(&empl_ref_nbr) 

If #ref_nbr_chk = 0
    print ','                              (,)
    print #EMPL_REF_NBR                     (,)             EDIT 009
end-if

print 'Sex:'         (+1,{PosStart}) Bold
print $SEX             (,{Pos1})
print 'Birth Date:'         (+1,{PosStart}) Bold
print $BIRTHDATE             (,{Pos1})        
print 'Department:'                    (+1,{PosStart}) Bold
print $DEPTID_P45                      (,{Pos1})
graphic                                (+1,1,76) horz-line

print 'Employee''s Address:'           (+2,{PosStart}) Bold
print $EE_ADDRESS1                     (,{Pos1})
print $EE_ADDRESS2                     (+1,{Pos1})
print $EE_ADDRESS3                     (+1,{Pos1})
print $EE_CITY                         (+1,{Pos1})
print $EE_COUNTY                       (+1,{Pos1})
print $EE_POSTAL                       (+1,{Pos1})

If $EE_Country <> 'GBR'

        PRINT $EE_COUNTRY_Descr            (+1,{Pos1})
else

        PRINT ' '                          (+1,{Pos1})
end-if

graphic                                (+2,1,76) horz-line

print 'Employer''s Name and Address:'  (+2,{PosStart})  Bold
print $PYENT_NAME                      (,{Pos1})
print $PYENT_Addr1                     (+1,{Pos1})
print $PYENT_Addr2                     (+1,{Pos1})
print $PYENT_Addr3                     (+1,{Pos1})
print $PYENT_City                      (+1,{Pos1})
print $PYENT_County                    (+1,{Pos1})
print $PYENT_PostCode                  (+1,{Pos1})

If $PYENT_Country <> 'GBR'

        PRINT $PYENT_Country_DESCR         (+1,{Pos1})
else

        PRINT ' '                          (+1,{Pos1})
end-if


print 'Date:'                          (+2,{PosStart}) Bold
print $DT_ISSUED                       (,{Pos1})
graphic                                (+2,1,76) horz-line

print 'Employee has died:'             (+2,{PosStart})    Bold
print $EE_DIED_IND                     (,{Pos1})
graphic                                (+4,1,76) horz-line

! Set values to zero

LET #VALP45_PAY = 0
LET #VALP45_TAX = 0
LET #VAL3       = 0
LET #VAL7Y      = 0
end-procedure PRINT-REPORT



!*=================================================================
! Procedure: PRINT-SUMMARY                                        !
! Descr:     Prints P45 FOOTER                                    !
!                                                                 !
!*=================================================================


begin-procedure PRINT-SUMMARY

        LET $ProcedureName = 'PRINT-SUMMARY'

      SHOW 'PROCEDURE->' $ProcedureName

        if $P45_PRINTED = 'Y'

                print '***** Final Report *****'  (+2,{Pos1})  Bold
        else

                print '***** Draft Report *****'  (+2,{Pos1})
        end-if


        print '* P45 Reference *'              (,{PosStart})   Bold
        print 'Calendar Group Id:'             (+1,{PosStart})
        print $CAL_RUN_ID                      (,{Pos1})
        graphic                (+1,1,76) horz-line
end-procedure PRINT-SUMMARY



!******************************************************************
!                  G E N E R A L   F U N C T I O N S
!******************************************************************
!******************************************************************
!***    Common SQC Modules Copied In For Program Usage
!******************************************************************

#include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#include 'datetime.sqc'  ! Routines for date and time formatting
#include 'number.sqc'    ! Routines to format numbers
#include 'prcsapi.sqc'   ! Update Process Request API
#include 'prcsdef.sqc'   ! Update Process Request variable declaration
#include 'tranctrl.sqc'  ! Handle Commit/Rollback per platform
#include 'useprntr.sqc'  ! Init Printer
#include 'datemath.sqc'  ! Routines for date and time operations

!******************************* End Of Program *******************

