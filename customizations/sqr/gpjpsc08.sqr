!***********************************************************************
!   GPJPSC08:  Social Insurance Summary Report                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  25810299                                            !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !Printer and page-size initialization, SETUP31 and
                        !  SETUP32 SQCs to support HTML, HP PCL, PostScript,
                        !  PDF and Window in addition to Line Printer as
                        !  the output type.


!***********************************************************************
! begin-report                                                         *                                                          *
!                                                                      *
! Called By: N/A                                                       *
! Calls:     Init-Processing                                           *
!            Get-Values                                                *
!            Process-Main                                              *
!            Reset                                                     *
!            Delete-From-AE-Tables                                     *
!            End-Report                                                *
!***********************************************************************

begin-report

  do Init-Processing

  do Get-Values

  do Process-Main

  do Reset                        ! called from reset.sqc


  do Update-Prcs-Run-Status       ! called from prcsapi.sqc to update
                                  ! the Process Monitor to Success
end-report

begin-procedure Select-Parameters
let $Quote = ''''

begin-SELECT

#ifdef debugy

#end-if

P.DATE_YEAR_VAL
P.GPJP_END_DT_MM
P.GPJP_BEG_DT_MM
P.GPJP_BEG_DT_NX_MM
P.GPJP_END_DT_NX_MM
P.GPJP_TAX_ESTAB
P.MONTHCD

 let #Last_Grade = 0
 let $DATE_YEAR_VAL= &P.DATE_YEAR_VAL
 let $MONTHCD=&P.MONTHCD
 let $GPJP_END_DT_MM= &P.GPJP_END_DT_MM
 let $GPJP_BEG_DT_MM = &P.GPJP_BEG_DT_MM
 let $GPJP_BEG_DT_NX_MM= &P.GPJP_BEG_DT_NX_MM
 let $GPJP_END_DT_NX_MM =&P.GPJP_END_DT_NX_MM
 let $YEAR = edit ($DATE_YEAR_VAL ,'9999')

  CONCAT '/'  with $YEAR
  CONCAT $MONTHCD  with $YEAR

FROM PS_GPJP_RC_SC_GRD P
WHERE P.OPRID = $PRCS_OPRID
AND P.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID

end-select
end-procedure !Select-Parameters

begin-procedure Init-Processing

  do Init-Datetime                ! called from datetime.sqc

  do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)

  do Define-Prcs-Vars             ! called from prcsapi.sqc (prcsdef.sqc)

  do Get-Run-Control-Parms        ! In prcsapi.sqc

  do Init-Report

  do Init-Number                  ! called from number.sqc

  do Get-Language-Codes           ! called from prcslng.sqc

  !do Security-Param

end-procedure !Init-Processing

begin-procedure Init-Report


! Column definitons
!Transaction Columns
  #define Col_1         1
  #define Col_2         5
  #define Col_3         4
  #define Col_4         12
  #define Col_5         35
  #define Col_6         55
  #define Col_7         75
  #define Col_7a        100
  #define Col_8         110
  #define Col_8a        117
  #define Col_9         135
  #define Col_10        140
  #define Col_10a       93
  #define Col_11        160
  #define Col_12a       180
  #define Col_12        35
  #define Col_12b       40
  #define Col_13        45
  #define Col_13a       50
  #define Col_14        55
  #define Col_14a       60
  #define Col_15        65
  #define Col_15b       70
  #define Col_15a       75
  #define Col_16        80
  #define Col_16a       85
  #define Col_17        90
  #define Col_17a       95
  #define col_18       100
  #define col_18a      105
  #define col_19       110
  #define col_19a      115
  #define col_20       28
  #define col_20a      33

! Header Columns
  #define Col_2h        18
  #define Col_3h        43
  #define Col_4h        67
  #define Col_5h        81
  #define Col_6h        108
  #define Col_6h_1      120
  #define Col_7h        128
  #define Col_8h_1      150
  #define Col_8h        139
  #define Col_9h        166

! Translations procedures & Strings Table retrievals.

  do Init_Report_Translation ($ReportID,$curr_Language_Cd)
  do Append_Report_Translation ('GPJPSC08')


  do Get_Field_Information ('GPJPSC08','EMPLID',             $EMPLID_lbl,             #DW)
  do Get_Field_Information ('GPJPSC08','EMPL_RCD',           $EMPL_RCD_lbl,           #DW)
  do Get_Field_Information ('GPJPSC08','NAME',               $NAME_lbl,               #DW)
  do Get_Field_Information ('GPJPSC08','AC_NAME',            $AC_NAME_lbl,            #DW)
  do Get_Field_Information ('GPJPSC08','INSURANCE_TYPE',     $INSURANCE_TYPE_lbl,     #DW)

  do Get_Field_Information ('GPJPSC08','HEALTH_INS',          $HELTH_INSURANCE_lbl,    #DW)
  do Get_Field_Information ('GPJPSC08','NURSING_CARE_INS',   $NURSING_CARE_INSURANCE_lbl,   #DW)
  do Get_Field_Information ('GPJPSC08','PENSION_INS',        $EMPLOYEE_P_INSURANCE_lbl, #DW)
  do Get_Field_Information ('GPJPSC08','PENSION_FOUND'      ,$INSURANCE_PENSION_FOUND_lbl,      #DW)
  do Get_Field_Information ('GPJPSC08','EMPLOYEE_INS_PENSI', $EMPLOYEE_INS_PENSION_FOUND_lbl,      #DW)
  do Get_Field_Information ('GPJPSC08','SUM',                $SUM_lbl,                 #DW)
  do Get_Field_Information ('GPJPSC08','SALARY',             $SALARY_lbl,              #DW)
  do Get_Field_Information ('GPJPSC08','BONUS',               $BONUS_lbl,              #DW)

  do Get_Field_Information ('GPJPSC08','HI_GRADE',           $HI_GRADE_lbl,           #DW)
  do Get_Field_Information ('GPJPSC08','PI_GRADE',           $PI_GRADE_lbl,           #DW)
  do Get_Field_Information ('GPJPSC08','NUM_OF_EMPLOYES',$NUMBER_OF_EMPLOYESS_lbl,    #DW)
  do Get_Field_Information ('GPJPSC08','MALE',                 $MALE_lbl,               #DW)
  do Get_Field_Information ('GPJPSC08','FEMALE',                 $FEMALE_lbl,               #DW)
  do Get_Field_Information ('GPJPSC08','CHILD_ALLOWANCE',                 $CHILD_ALLOWANCE_lbl,               #DW)
  do Get_Field_Information ('GPJPSC08','SI_ESTABLISHMENT',                 $SI_ESTABLISHMENT_lbl,               #DW)
  do Get_Field_Information ('GPJPSC08','SI_ESTABLIS_NAME',                 $SI_ESTABLIS_NAME_lbl,               #DW)
  do Get_Field_Information ('GPJPSC08','YEAR/MONTH',                 $YEAR/MONTH_lbl,               #DW)
  do Get_Field_Information ('GPJPSC08','EMPLOYEE_CONT', $EMPLOYEE_CONT_lbl,      #DW)
  do Get_Field_Information ('GPJPSC08','PAYERS_CONTRI', $PAYERS_CONTRI_lbl,      #DW)
  do Get_Field_Information ('GPJPSC08','INSURANT_NUMBER', $INSURANT_NUMBER_lbl,      #DW)
  do Get_Field_Information ('GPJPSC08','GRAND_TOTAL', $GRAND_TOTAL_lbl,      #DW)


   do Get_Field_Information ('GPJPSC08','RPT_TITLE',             $RPT_TITLE_lbl,      #DW)
   do Get_Field_Information ('GPJPSC08','INDEX_A',               $INDEX_A,            #DW)
   do Get_Field_Information ('GPJPSC08','INDEX_B',               $INDEX_B,            #DW)
   do Get_Field_Information ('GPJPSC08','INDEX_C',               $INDEX_C,            #DW)
   do Get_Field_Information ('GPJPSC08','INDEX_A_LBL',           $INDEX_A_LBL,        #DW)
   do Get_Field_Information ('GPJPSC08','INDEX_B_LBL',           $INDEX_B_LBL,        #DW)
   do Get_Field_Information ('GPJPSC08','INDEX_C_LBL',           $INDEX_C_LBL,        #DW)
   do Get_Field_Information ('GPJPSC08','HI_NI_LBL',             $HI_NI_LBL,          #DW)

! Report variables.

  let $ReportID       = 'GPJPSC08'
  let $ReportTitle    = $RPT_TITLE_lbl


! Initialize date formatting.                                          *

    let $Date_Init = '1900-01-01 00:00:00.000'

        #ifdef ORACLE
           let $Date_Init = '01-NOV-1999'
    #end-if

    do Format-DateTime($Date_Init, $out999, {DEFDATE}, '', '')

end-procedure !Init-Report

begin-procedure Get-Values

    if $prcs_process_instance = ''
        do Ask-Values
    else
        do Select-Parameters
    end-if

    do Format-DateTime($FromDate,$HdgFromDt,{DEFDATE}, '', '')
    do Format-DateTime($ThruDate,$HdgThruDt,{DEFDATE}, '', '')

    if strtodate(datetostr(&P.GPJP_BEG_DT_MM,'dd/mm/yyyy'),'dd/mm/yyyy') < strtodate('1/5/2007','dd/mm/yyyy')
      let #Premium_Rate=0.0009
    else
      if strtodate(datetostr(&P.GPJP_BEG_DT_MM,'dd/mm/yyyy'),'dd/mm/yyyy') < strtodate('01/05/2012','dd/mm/yyyy')
        let #Premium_Rate=0.0013
      else
        let #Premium_Rate=0.0015
      end-if
           if strtodate(datetostr(&P.GPJP_BEG_DT_MM,'dd/mm/yyyy'),'dd/mm/yyyy') >= strtodate('01/04/2016','dd/mm/yyyy')
             let #Premium_Rate=0.0020
           end-if
           if strtodate(datetostr(&P.GPJP_BEG_DT_MM,'dd/mm/yyyy'),'dd/mm/yyyy') >= strtodate('01/04/2017','dd/mm/yyyy')
      let #Premium_Rate=0.0023
      end-if
    end-if

end-procedure !Get-Values



begin-procedure Ask-Values

  !input $IncludeDetail 'Include Detail?  Y/N' TYPE=char maxlen=1

end-procedure !Ask-Values

!***************************
begin-heading 5
!***************************

#include 'stdhdg01.sqc'

!***********************************************************************
! Print column definitions.  Some fields are lined up vertically with  *
!   other fields on the report.  The first occurence of a column       *
!   location is defined.  After that, fields that occur in the same    *
!   column use the first field's column definition.  Field labels end  *
!   in _lbl.  Other column definitions are for the field values.       *
!***********************************************************************

print $SI_ESTABLISHMENT_lbl (,{Col_3})
print  &P.GPJP_TAX_ESTAB (,{Col_5})
print  $SI_ESTABLIS_NAME_lbl (,{Col_6})
print  $EstabName (,{Col_7a})
print  $YEAR/MONTH_lbl (+1,{Col_3})
print  $YEAR (,{Col_5})

end-heading

!***************************
! begin-procedure Get-Heading
!***************************
begin-procedure Get-Heading

!Line 1
!Transaction Header Line

print $HELTH_INSURANCE_lbl (+2,{Col_2h})
print $NURSING_CARE_INSURANCE_lbl (,{Col_5h})

print $EMPLOYEE_CONT_lbl (+1,{Col_2h})
print $PAYERS_CONTRI_lbl (,{Col_3h})
print $SUM_lbl (,{Col_4h})

print $EMPLOYEE_CONT_lbl (,{Col_5h})
print $PAYERS_CONTRI_lbl (,{Col_6h})
print $SUM_lbl (,{Col_7h})

print $HI_NI_LBL         (,{Col_8h_1})



print '-' (+1,1,176) fill

end-procedure

!***************************
! begin-procedure Get-Heading2
!***************************
begin-procedure Get-Heading2

print $EMPLOYEE_P_INSURANCE_lbl (+2,{Col_2h})
print $INSURANCE_PENSION_FOUND_lbl (,{Col_5h})

print $EMPLOYEE_CONT_lbl (+1,{Col_2h})
print $PAYERS_CONTRI_lbl (,{Col_3h})
print $SUM_lbl (,{Col_4h})

print $EMPLOYEE_CONT_lbl (,{Col_5h})
print $PAYERS_CONTRI_lbl (,{Col_6h})
print $SUM_lbl (,{Col_7h})
print $CHILD_ALLOWANCE_lbl (,{Col_8h})
print $GRAND_TOTAL_lbl (,{Col_9h})

print '-' (+1,1,176) fill

end-procedure


!***********************************************************************
! Process-Main                                                         *
!                                                                      *
! Called By: begin-report                                              *
!***********************************************************************

begin-procedure Process-Main
 do Get-Heading
 do Get-Salary
 do Get-Bonus
 do Print-SALARY-details
 do Print-BONUS-details

 print $INDEX_A_LBL (+3,{Col_3})
 print $INDEX_B_LBL (+1,{Col_3})
 print $INDEX_C_LBL (+1,{Col_3})

 new-page

 do Get_ASOFDATE
 IF $GPJP_BEG_DT_MM <= $Apr_1st
 let #Last_Grade = 38
 else
 let #Last_Grade = 46
 end-if

  do Get-Grade-Heading2
  do Get-PENSION-GRADE-0-1
  do Get-PENSION-GRADE-2-29
  do Get-PENSION-GRADE-30-31
  do Print-PIGRADE-Total-details
  do Get-Grade-Heading
  do Get-HELTH-GRADE-0-1
  do Get-HELTH-GRADE-02-46
  if $GPJP_BEG_DT_MM <= $Apr_1st
  do Get-HELTH-GRADE-39-40
  else
  do Get-HELTH-GRADE-47-48
  end-if
  do Print-HIGRADE-Total-details



end-procedure !Process-Main

!***********************************************************************
! Get-Name                                                             *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-Name

!Select NAME Information
let $ESTAB =&P.GPJP_TAX_ESTAB
let $EstabType='SC'
do Get-Estab-Name

end-procedure !Get-Name

!***********************************************************************
! Get_ASOFDATE                                                         *
! Called By:    Process-Main                                           *
! Description:  Get_ASOFDATE from YEA setup                            *
!***********************************************************************
begin-procedure Get_ASOFDATE

! -----  Calculate the Dates  04/01/2007   *

    let #first_day = 01
    let #april   = 04

    do dtu-format-date(2007, #april, #first_day, $Date_apr)
    do Convert-From-DTU-Date($Date_apr,$Apr_1st)

 end-procedure ! Get_ASOFDATE

!***********************************************************************
! Get-Bonus                                                            *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-Bonus

!select Bonus data Information

begin-select DISTINCT
D.EMPLID                &DUMMY_EMPLID
D.EMPL_RCD              &DUMMY_EMPL_RCD
D.GPJP_EMPLHEL_PREM     &GPJP_EMPLHEL_PREM_BON
D.GPJP_COHEL_PREM       &GPJP_COHEL_PREM_BON
D.GPJP_EMPNUR_PREM      &GPJP_EMPNUR_PREM_BON
D.GPJP_CONUR_PREM       &GPJP_CONUR_PREM_BON
D.GPJP_EMPPEN_PREM      &GPJP_EMPPEN_PREM_BON
D.GPJP_COPEN_PREM       &GPJP_COPEN_PREM_BON
D.GPJP_EMP_PF_PREM      &GPJP_EMP_PF_PREM_BON
D.GPJP_CO_PF_PREM       &GPJP_CO_PF_PREM_BON
D.GPJP_PEN_REMUN        &GPJP_PEN_REMUN_BON


 let #TOTAL_EMPLHEL_PREM_BON = &GPJP_EMPLHEL_PREM_BON + #TOTAL_EMPLHEL_PREM_BON
 let #TOTAL_COHEL_PREM_BON  = &GPJP_COHEL_PREM_BON + #TOTAL_COHEL_PREM_BON
 let #TOTAL_EMPNUR_PREM_BON  = &GPJP_EMPNUR_PREM_BON + #TOTAL_EMPNUR_PREM_BON
 let #TOTAL_CONUR_PREM_BON  =  &GPJP_CONUR_PREM_BON +  #TOTAL_CONUR_PREM_BON
 let #TOTAL_EMPPEN_PREM_BON  = &GPJP_EMPPEN_PREM_BON + #TOTAL_EMPPEN_PREM_BON
 let #TOTAL_COPEN_PREM_BON  =  &GPJP_COPEN_PREM_BON + #TOTAL_COPEN_PREM_BON
 let #TOTAL_EMP_PF_PREM_BON  =  &GPJP_EMP_PF_PREM_BON + #TOTAL_EMP_PF_PREM_BON
 let #TOTAL_CO_PF_PREM_BON  = &GPJP_CO_PF_PREM_BON + #TOTAL_CO_PF_PREM_BON
 let #TOTAL_GPJP_PEN_REMUN_BON  = &GPJP_PEN_REMUN_BON + #TOTAL_GPJP_PEN_REMUN_BON

 let #TOTAL_HEL_BON = #TOTAL_EMPLHEL_PREM_BON  + #TOTAL_COHEL_PREM_BON
 let #TOTAL_NUR_BON  = #TOTAL_EMPNUR_PREM_BON  + #TOTAL_CONUR_PREM_BON
 let #TOTAL_HI_NI_BON = #TOTAL_HEL_BON + #TOTAL_NUR_BON
 let #TOT_PEN_BON  =   #TOTAL_EMPPEN_PREM_BON  + #TOTAL_COPEN_PREM_BON
 let #TOTAL_PF_BON  = #TOTAL_EMP_PF_PREM_BON  + #TOTAL_CO_PF_PREM_BON
 let #TOTAL_PI_BON  = #TOTAL_GPJP_PEN_REMUN_BON * #Premium_Rate
 let #TOTAL_SI_BON  = #TOTAL_HEL_BON + #TOTAL_NUR_BON + #TOT_PEN_BON +  #TOTAL_PF_BON + #TOTAL_PI_BON


 do Get-Name

FROM PS_GPJP_WA_SCRPT D, PS_GP_PYE_PRC_STAT B
WHERE D.GPJP_TAX_ESTAB = &P.GPJP_TAX_ESTAB
And B.EMPLID = D.EMPLID
And B.EMPL_RCD = D.EMPL_RCD
And B.CAL_RUN_ID = D.CAL_RUN_ID
AND B.GP_PAYGROUP = D.GP_PAYGROUP
AND B.ORIG_CAL_RUN_ID = D.ORIG_CAL_RUN_ID
AND B.CAL_ID = D.CAL_ID
And B.SEL_ACTION in ('A','C','R')
AND B.PYMT_DT >= $GPJP_BEG_DT_MM
AND B.PYMT_DT < $GPJP_END_DT_MM
AND D.GPJP_RUN_TYPE_FLAG = 'BON'

end-select

End-procedure !Get-Bonus

!***********************************************************************
! Get-Salary                                                           *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-Salary

!select Salary data Information

begin-select DISTINCT
A.EMPLID                &DUMMYA_EMPLID
A.EMPL_RCD              &DUMMYA_EMPL_RCD
A.GPJP_EMPLHEL_PREM     &GPJP_EMPLHEL_PREM_SAL
A.GPJP_COHEL_PREM       &GPJP_COHEL_PREM_SAL
A.GPJP_EMPNUR_PREM      &GPJP_EMPNUR_PREM_SAL
A.GPJP_CONUR_PREM       &GPJP_CONUR_PREM_SAL
A.GPJP_EMPPEN_PREM      &GPJP_EMPPEN_PREM_SAL
A.GPJP_COPEN_PREM       &GPJP_COPEN_PREM_SAL
A.GPJP_EMP_PF_PREM      &GPJP_EMP_PF_PREM_SAL
A.GPJP_CO_PF_PREM       &GPJP_CO_PF_PREM_SAL
A.GPJP_PEN_REMUN        &GPJP_PEN_REMUN_SAL



  let #TOTAL_EMPLHEL_PREM_SAL = &GPJP_EMPLHEL_PREM_SAL + #TOTAL_EMPLHEL_PREM_SAL


  let #TOTAL_COHEL_PREM_SAL = &GPJP_COHEL_PREM_SAL + #TOTAL_COHEL_PREM_SAL
  let #TOTAL_EMPNUR_PREM_SAL = &GPJP_EMPNUR_PREM_SAL + #TOTAL_EMPNUR_PREM_SAL
  let #TOTAL_CONUR_PREM_SAL =  &GPJP_CONUR_PREM_SAL +  #TOTAL_CONUR_PREM_SAL
  let #TOTAL_EMPPEN_PREM_SAL = &GPJP_EMPPEN_PREM_SAL + #TOTAL_EMPPEN_PREM_SAL
  let #TOTAL_COPEN_PREM_SAL =  &GPJP_COPEN_PREM_SAL + #TOTAL_COPEN_PREM_SAL
  let #TOTAL_EMP_PF_PREM_SAL =  &GPJP_EMP_PF_PREM_SAL + #TOTAL_EMP_PF_PREM_SAL
  let #TOTAL_CO_PF_PREM_SAL = &GPJP_CO_PF_PREM_SAL + #TOTAL_CO_PF_PREM_SAL
  let #TOTAL_GPJP_PEN_REMUN_SAL = &GPJP_PEN_REMUN_SAL + #TOTAL_GPJP_PEN_REMUN_SAL

  let #TOTAL_HEL_SAL =  #TOTAL_EMPLHEL_PREM_SAL + #TOTAL_COHEL_PREM_SAL
  let #TOTAL_NUR_SAL = #TOTAL_EMPNUR_PREM_SAL + #TOTAL_CONUR_PREM_SAL
  let #TOTAL_HI_NI_SAL = #TOTAL_HEL_SAL + #TOTAL_NUR_SAL
  let #TOTAL_PEN_SAL = #TOTAL_EMPPEN_PREM_SAL + #TOTAL_COPEN_PREM_SAL
  let #TOTAL_PF_SAL = #TOTAL_EMP_PF_PREM_SAL +  #TOTAL_CO_PF_PREM_SAL
  let #TOTAL_PI_SAL = #TOTAL_GPJP_PEN_REMUN_SAL  * #Premium_Rate
  let #TOTAL_SI_SAL = #TOTAL_HEL_SAL + #TOTAL_NUR_SAL + #TOTAL_PEN_SAL +  #TOTAL_PF_SAL + #TOTAL_PI_SAL


FROM PS_GPJP_WA_SCRPT A, PS_GP_PYE_PRC_STAT B
WHERE B.EMPLID = A.EMPLID
AND A.GPJP_TAX_ESTAB = &P.GPJP_TAX_ESTAB
And B.EMPL_RCD = A.EMPL_RCD
And B.CAL_RUN_ID = A.CAL_RUN_ID
AND B.GP_PAYGROUP = A.GP_PAYGROUP
AND B.ORIG_CAL_RUN_ID = A.ORIG_CAL_RUN_ID
AND B.CAL_ID = A.CAL_ID
And B.SEL_ACTION in ('A','C','R')
AND B.PYMT_DT >= $GPJP_BEG_DT_MM
AND B.PYMT_DT < $GPJP_END_DT_MM
AND A.GPJP_RUN_TYPE_FLAG = 'SAL'


end-select
End-procedure !Get-Salary

!***************************
 begin-procedure Get-Grade-Heading
!***************************

!Transaction Header Line

print  $HI_GRADE_lbl (#row_num,{Col_12b})
print  $MALE_lbl (,{Col_13a})
print $FEMALE_lbl (,{Col_14a})
print  $SUM_lbl (,{Col_15b})
print '-' (+1,40,35) fill
print ' '(+1,{Col_4})
end-procedure

!***************************
 begin-procedure Get-Grade-Heading2
!***************************

!Transaction Header Line
let #row_num=#current-line - 3

print $INSURANT_NUMBER_lbl (#row_num,{Col_3})
print  $PI_GRADE_lbl (,{Col_16a})
print  $MALE_lbl     (,{Col_17a}
print  $FEMALE_lbl   (,{Col_18a})
print  $SUM_lbl      (,{Col_19a})
print '-' (+1,85,35) fill
print ' '(+1,{Col_4})

end-procedure


!***********************************************************************
! Get-Get-HELTH-GRADE-0-1                                              *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-HELTH-GRADE-0-1

!select Number of employee haveing helth grade between 0 to 1

begin-select
AB.GPJP_HEL_GRADE  !() on-break level = 1 print=never after = get-sex-count-hel
C.SEX



   let #HEL_GRADE = '1'
   let $SEX = &C.SEX
   if $SEX='M'
          let #Male_Count=#Male_Count+1

         Else
          let #Female_Count=#Female_Count+1
    end-if
    let #check_count =#Female_Count +#Male_Count


From PS_GPJP_SC_PYE_DTA A, PS_GPJP_SC_STDRMUN AB, PS_PERS_DATA_EFFDT C
Where A.EMPLID = C.EMPLID
and A.GPJP_TAX_ESTAB =&P.GPJP_TAX_ESTAB
and A.GPJP_CHG_FLG NOT IN ('09','03','04','05')
and A.GPJP_MAT_LEAVE_FLG <>'Y'
and A.GPJP_MTH_RMN_AMT >= AB.GPJP_MTH_RMN_LL
and A.GPJP_MTH_RMN_AMT < AB.GPJP_MTH_RMN_HL
and AB.GPJP_HEL_GRADE between 0 and 1
and A.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_PYE_DTA
 Where EMPLID = A.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
and AB.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_STDRMUN
 Where EFFDT <= $GPJP_BEG_DT_MM)
and C.EFFDT = (Select max(EFFDT)
 from PS_PERS_DATA_EFFDT
 Where EMPLID = C.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
 order by AB.GPJP_HEL_GRADE,C.SEX

end-select

if #check_count <> 0
do  get-sex-count-hel
let #check_count =0
end-if

End-procedure !Get-HELTH-GRADE-0-1

!***********************************************************************
! Get-Get-HELTH-GRADE-02-47                                            *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-HELTH-GRADE-02-46

!select Number of employee haveing helth grade between 02 to 38
begin-SELECT

E.GPJP_HEL_GRADE () on-break level = 1 print=never after = get-sex-count-hel
O.SEX
D.EMPLID

   LET #HEL_GRADE = &E.GPJP_HEL_GRADE
   let $SEX = &O.SEX

     if $SEX='M'
       let #Male_Count=#Male_Count+1

      Else
        let #Female_Count=#Female_Count+1

     end-if

From PS_GPJP_SC_PYE_DTA D,
PS_GPJP_SC_STDRMUN E,
PS_PERS_DATA_EFFDT O

Where D.EMPLID = O.EMPLID
and D.GPJP_TAX_ESTAB =&P.GPJP_TAX_ESTAB
and D.GPJP_CHG_FLG NOT IN ('09','03','04','05')
and D.GPJP_MAT_LEAVE_FLG <>'Y'
and (D.GPJP_MTH_RMN_AMT >= E.GPJP_MTH_RMN_LL
and D.GPJP_MTH_RMN_AMT < E.GPJP_MTH_RMN_HL)
and E. GPJP_HEL_GRADE between 2 and #Last_Grade
and D.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_PYE_DTA
 Where EMPLID = D.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
and E.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_STDRMUN
 Where EFFDT <= $GPJP_BEG_DT_MM)
and O.EFFDT = (Select max(EFFDT)
 from PS_PERS_DATA_EFFDT
 Where EMPLID = O.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
 order by E.GPJP_HEL_GRADE, O.SEX, D.EMPLID

end-select

End-procedure !Get-HELTH-GRADE-02-47

!***********************************************************************
! Get-Get-HELTH-GRADE-39-40                                            *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-HELTH-GRADE-39-40

!select Number of employee haveing helth grade between 39 to 40

begin-select
H1.GPJP_HEL_GRADE !() on-break level = 1 print=never after = get-sex-count-hel
K1.SEX
G1.EMPLID

   let #HEL_GRADE = '39'
   let $SEX = &K1.SEX
   if $SEX='M'
          let #Male_Count=#Male_Count+1
         Else
           let #Female_Count=#Female_Count+1
     end-if
     let #check_count =#Female_Count +#Male_Count

From PS_GPJP_SC_PYE_DTA G1, PS_GPJP_SC_STDRMUN H1, PS_PERS_DATA_EFFDT K1
Where G1.EMPLID = K1.EMPLID
and G1.GPJP_TAX_ESTAB =&P.GPJP_TAX_ESTAB
and G1.GPJP_CHG_FLG NOT IN ('09','03','04','05')
and G1.GPJP_MAT_LEAVE_FLG <>'Y'
and G1.GPJP_MTH_RMN_AMT >= H1.GPJP_MTH_RMN_LL
and G1.GPJP_MTH_RMN_AMT < H1.GPJP_MTH_RMN_HL
and H1. GPJP_HEL_GRADE between 39 and 40
and G1.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_PYE_DTA
 Where EMPLID = G1.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
and H1.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_STDRMUN
 Where EFFDT <= $GPJP_BEG_DT_MM)
and K1.EFFDT = (Select max(EFFDT)
 from PS_PERS_DATA_EFFDT
 Where EMPLID = K1.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
 order by H1.GPJP_HEL_GRADE, K1.SEX, G1.EMPLID

end-select
if #check_count <> 0
do  get-sex-count-hel
let #check_count =0
end-if

End-procedure !Get-HELTH-GRADE-39-40

!***********************************************************************
! Get-Get-HELTH-GRADE-47-48                                            *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-HELTH-GRADE-47-48

!select Number of employee haveing helth grade between 39 to 40

begin-select
H.GPJP_HEL_GRADE !() on-break level = 1 print=never after = get-sex-count-hel
K.SEX
G.EMPLID

   let #HEL_GRADE = '47'
   let $SEX = &K.SEX
   if $SEX='M'
          let #Male_Count=#Male_Count+1
         Else
           let #Female_Count=#Female_Count+1
     end-if
     let #check_count =#Female_Count +#Male_Count

From PS_GPJP_SC_PYE_DTA G, PS_GPJP_SC_STDRMUN H, PS_PERS_DATA_EFFDT K
Where G.EMPLID = K.EMPLID
and G.GPJP_TAX_ESTAB =&P.GPJP_TAX_ESTAB
and G.GPJP_CHG_FLG NOT IN ('09','03','04','05')
and G.GPJP_MAT_LEAVE_FLG <>'Y'
and G.GPJP_MTH_RMN_AMT >= H.GPJP_MTH_RMN_LL
and G.GPJP_MTH_RMN_AMT < H.GPJP_MTH_RMN_HL
and H. GPJP_HEL_GRADE between 47 and 48
and G.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_PYE_DTA
 Where EMPLID = G.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
and H.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_STDRMUN
 Where EFFDT <= $GPJP_BEG_DT_MM)
and K.EFFDT = (Select max(EFFDT)
 from PS_PERS_DATA_EFFDT
 Where EMPLID = K.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
 order by H.GPJP_HEL_GRADE, K.SEX, G.EMPLID

end-select
if #check_count <> 0
do  get-sex-count-hel
let #check_count =0
end-if

End-procedure !Get-HELTH-GRADE-47-48

!***********************************************************************
! Get-PENSION-GRADE-0-1                                                *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-PENSION-GRADE-0-1

!select Number of employee haveing pension grade between 0 to 1

begin-select
BC.GPJP_PEN_GRADE   !() on-break level = 1 print=never after = get-sex-count-pen
I.SEX
Q.EMPLID

   let #PIGRADE = '1'
   let $SEX = &I.SEX
 if $SEX='M'
 let #Male_Count=#Male_Count+1
 Else
 let #Female_Count=#Female_Count+1
 end-if
 let #check_count =#Female_Count +#Male_Count


From PS_GPJP_SC_PYE_DTA Q, PS_GPJP_SC_STDRMUN BC, PS_PERS_DATA_EFFDT I
Where Q.EMPLID = I.EMPLID
and Q.GPJP_TAX_ESTAB =&P.GPJP_TAX_ESTAB
and Q.GPJP_CHG_FLG NOT IN ('09','03','04','05')
and Q.GPJP_MAT_LEAVE_FLG <>'Y'
and Q.GPJP_MTH_RMN_AMT >= BC.GPJP_MTH_RMN_LL
and Q.GPJP_MTH_RMN_AMT < BC.GPJP_MTH_RMN_HL
and  BC. GPJP_PEN_GRADE between 0 and 1
and Q.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_PYE_DTA
 Where EMPLID = Q.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
and BC.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_STDRMUN
 Where EFFDT <= $GPJP_BEG_DT_MM)
and I.EFFDT = (Select max(EFFDT)
 from PS_PERS_DATA_EFFDT
 Where EMPLID = I.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
 order by BC.GPJP_PEN_GRADE, I.SEX,Q.EMPLID


end-select
if #check_count <> 0

do get-sex-count-pen
let #check_count =0
end-if
End-procedure !Get-PENSION-GRADE-0-1

!***********************************************************************
! Get-Get-PENSION-GRADE-2-29                                           *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-PENSION-GRADE-2-29

!select Number of employee haveing helth grade between 2 to 29

begin-select
M.GPJP_PEN_GRADE () on-break level = 1 print=never after = get-sex-count-pen
L.SEX,
R.EMPLID

     Let #PIGRADE = &M.GPJP_PEN_GRADE
     let $SEX = &L.SEX
       if $SEX='M'
      let #Male_Count=#Male_Count+1
      Else
      let #Female_Count=#Female_Count+1
 end-if

From PS_GPJP_SC_PYE_DTA R, PS_GPJP_SC_STDRMUN M, PS_PERS_DATA_EFFDT L
Where R.EMPLID = L.EMPLID
and R.GPJP_CHG_FLG NOT IN ('09','03','04','05')
and R.GPJP_MAT_LEAVE_FLG <>'Y'
and R.GPJP_TAX_ESTAB =&P.GPJP_TAX_ESTAB
and R.GPJP_MTH_RMN_AMT >= M.GPJP_MTH_RMN_LL
and R.GPJP_MTH_RMN_AMT < M.GPJP_MTH_RMN_HL
and  M. GPJP_PEN_GRADE between 2 and 29
and R.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_PYE_DTA
 Where EMPLID = R.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
and M.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_STDRMUN
 Where EFFDT <= $GPJP_BEG_DT_MM)
and L.EFFDT = (Select max(EFFDT)
 from PS_PERS_DATA_EFFDT
 Where EMPLID = R.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
order by M.GPJP_PEN_GRADE, L.SEX,R.EMPLID


end-select

End-procedure !Get-PENSION-GRADE-2-29
!***********************************************************************
! Get-Get-PENSION-GRADE-30-31                                          *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Get-PENSION-GRADE-30-31

!select Number of employee haveing helth grade between 30 to 31

begin-select
HM.GPJP_PEN_GRADE     !() on-break level = 1 print=never after = get-sex-count-pen
N.SEX
S.EMPLID


     let #PIGRADE = '30'
     let $SEX = &N.SEX
     if $SEX='M'
      let #Male_Count=#Male_Count+1
       Else
       let #Female_Count=#Female_Count+1
     end-if
    let #check_count =#Female_Count +#Male_Count


From PS_GPJP_SC_PYE_DTA S, PS_GPJP_SC_STDRMUN HM, PS_PERS_DATA_EFFDT N
Where S.EMPLID = N.EMPLID
and S.GPJP_TAX_ESTAB =&P.GPJP_TAX_ESTAB
and S.GPJP_CHG_FLG NOT IN ('09','03','04','05')
and S.GPJP_MAT_LEAVE_FLG <>'Y'
and S.GPJP_MTH_RMN_AMT >= HM.GPJP_MTH_RMN_LL
and S.GPJP_MTH_RMN_AMT < HM.GPJP_MTH_RMN_HL
and  HM.GPJP_PEN_GRADE between 30 and 31
and S.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_PYE_DTA
 Where EMPLID = S.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
and HM.EFFDT = (Select max(EFFDT)
 from PS_GPJP_SC_STDRMUN
 Where EFFDT <= $GPJP_BEG_DT_MM)
and N.EFFDT = (Select max(EFFDT)
 from PS_PERS_DATA_EFFDT
 Where EMPLID = S.EMPLID
 and EFFDT <= $GPJP_BEG_DT_MM)
order by HM.GPJP_PEN_GRADE, N.SEX,S.EMPLID

end-select
if #check_count <> 0
do get-sex-count-pen
let #check_count =0
end-if
End-procedure !Get-PENSION-GRADE-30-31

!***********************************************************************
! Print-SALARY-details                                                 *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-SALARY-details




print $SALARY_lbl  (+1,{Col_3})

print #TOTAL_EMPLHEL_PREM_SAL (,{Col_4}) edit 999,999,999,999
print #TOTAL_COHEL_PREM_SAL  (,{Col_5})  edit 999,999,999,999.99
print #TOTAL_HEL_SAL (,{Col_6})          edit 999,999,999,999.99

print #TOTAL_EMPNUR_PREM_SAL (,{Col_7})  edit 999,999,999,999
print #TOTAL_CONUR_PREM_SAL (,{Col_7a})  edit 999,999,999,999.99
print #TOTAL_NUR_SAL (,{Col_8a})         edit 999,999,999,999.99
print #TOTAL_HI_NI_SAL (,{Col_10})      edit 999,999,999,999.99
print $BONUS_lbl  (+1,{Col_3})

print #TOTAL_EMPLHEL_PREM_BON (,{Col_4}) edit 999,999,999,999
print #TOTAL_COHEL_PREM_BON  (,{Col_5})  edit 999,999,999,999.99
print #TOTAL_HEL_BON (,{Col_6})         edit 999,999,999,999.99

print #TOTAL_EMPNUR_PREM_BON (,{Col_7})  edit 999,999,999,999
print #TOTAL_CONUR_PREM_BON  (,{Col_7a})  edit 999,999,999,999.99
print #TOTAL_NUR_BON (,{Col_8a})         edit 999,999,999,999.99
print #TOTAL_HI_NI_BON (,{Col_10})       edit 999,999,999,999.99


do Print-Total-details
do Get-Heading2


end-procedure !Print-SALARY-details

!***********************************************************************
! Print-BONUS-details                                                  *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-BONUS-details

print $SALARY_lbl  (+1,{Col_3})

print #TOTAL_EMPPEN_PREM_SAL (,{Col_4},15)  edit 999,999,999,999
print #TOTAL_COPEN_PREM_SAL (,{Col_5})   edit 999,999,999,999.99
print #TOTAL_PEN_SAL        (,{Col_6})  edit 999,999,999,999.99

print #TOTAL_EMP_PF_PREM_SAL  (,{Col_7}) edit 999,999,999,999
print #TOTAL_CO_PF_PREM_SAL  (,{Col_7a}) edit 999,999,999,999.99
print #TOTAL_PF_SAL         (,{Col_8a})  edit 999,999,999,999.99

print #TOTAL_PI_SAL          (,{Col_10}) edit 999,999,999,999.99
print #TOTAL_SI_SAL         (,{Col_11})  edit 999,999,999,999.99
print $BONUS_lbl  (+1,{Col_3})

print #TOTAL_EMPPEN_PREM_BON (,{Col_4})   edit 999,999,999,999
print #TOTAL_COPEN_PREM_BON (,{Col_5})    edit 999,999,999,999.99
print #TOT_PEN_BON        (,{Col_6})     edit 999,999,999,999.99

print #TOTAL_EMP_PF_PREM_BON  (,{Col_7})  edit 999,999,999,999
print #TOTAL_CO_PF_PREM_BON  (,{Col_7a}) edit 999,999,999,999.99
print #TOTAL_PF_BON         (,{Col_8a})  edit 999,999,999,999.99
print #TOTAL_PI_BON    (,{Col_10})       edit 999,999,999,999.99
print #TOTAL_SI_BON         (,{Col_11})  edit 999,999,999,999.99



do Print-Total2-details
end-procedure !Print-BONUS-details

!***********************************************************************
! Print-Total-details                                       *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-Total-details


print $SUM_lbl  (+1,{Col_3})
let #HEL_EMPL = #TOTAL_EMPLHEL_PREM_BON + #TOTAL_EMPLHEL_PREM_SAL
print #HEL_EMPL (,{Col_4}) edit 999,999,999,999
let #HEL_CO = #TOTAL_COHEL_PREM_BON + #TOTAL_COHEL_PREM_SAL
print #HEL_CO (,{Col_5})  edit 999,999,999,999.99
let #TOTAL_H = #TOTAL_HEL_SAL + #TOTAL_HEL_BON
print #TOTAL_H (,{Col_6}) edit 999,999,999,999.99
let #TOTAL_HI_NI = trunc(#TOTAL_HI_NI_SAL + #TOTAL_HI_NI_BON , 0)
print #TOTAL_HI_NI (,{Col_10}) edit 999,999,999,999
print $INDEX_A (,157)

let #NUR_EMPL = #TOTAL_EMPNUR_PREM_BON + #TOTAL_EMPNUR_PREM_SAL
print #NUR_EMPL (,{Col_7}) edit 999,999,999,999
let #NUR_CO = #TOTAL_CONUR_PREM_BON + #TOTAL_CONUR_PREM_SAL
print #NUR_CO (,{Col_7a})  edit 999,999,999,999.99
let #TOTAL_NUR = #TOTAL_NUR_SAL + #TOTAL_NUR_BON
print #TOTAL_NUR (,{Col_8a}) edit 999,999,999,999.99

end-procedure !Print-Total-details


!***********************************************************************
! Print-Total2-details                                       *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-Total2-details

print $SUM_lbl  (+1,{Col_3})

let #PEN_EMPL = #TOTAL_EMPPEN_PREM_BON + #TOTAL_EMPPEN_PREM_SAL
print #PEN_EMPL (,{Col_4}) edit 999,999,999,999

Let #PEN_CO = #TOTAL_COPEN_PREM_BON + #TOTAL_COPEN_PREM_SAL
print #PEN_CO (,{Col_5}) edit 999,999,999,999.99
let #TOT_PEN = trunc(#TOTAL_PEN_SAL + #TOT_PEN_BON , 0)
print #TOT_PEN (,{Col_6}) edit 999,999,999,999
print $INDEX_B (,72)

let #PF_EMPL = #TOTAL_EMP_PF_PREM_SAL + #TOTAL_EMP_PF_PREM_BON
print #PF_EMPL (,{Col_7}) edit 999,999,999,999
let #PF_CO = #TOTAL_CO_PF_PREM_SAL + #TOTAL_CO_PF_PREM_BON
print #PF_CO (,{Col_7a})  edit 999,999,999,999.99
let #TOTAL_PF = trunc(#TOTAL_PF_SAL + #TOTAL_PF_BON , 0)
print #TOTAL_PF (,{Col_8a}) edit 999,999,999,999

let #PI = trunc(#TOTAL_PI_SAL + #TOTAL_PI_BON , 0)
print #PI (,{Col_10}) edit 999,999,999,999
print $INDEX_C (,157)

let #SI = #TOTAL_HI_NI + #TOT_PEN + #TOTAL_PF + #PI


print #SI (,{Col_11}) edit 999,999,999,999


end-procedure !Print-Total2-details

!***********************************************************************
! Print-HIGRADE-details                                                *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-HIGRADE-details
if #HEL_GRADE = 0
let #HEL_GRADE = 1
end-if
if $GPJP_BEG_DT_MM <= $Apr_1st
if #HEL_GRADE = 40
let #HEL_GRADE = 39
end-if
else
if #HEL_GRADE = 48
let #HEL_GRADE = 47
end-if
end-if
print #HEL_GRADE (,{Col_12b}) Edit 999
print #Male_Count (,{Col_13}) Edit 9,999,999
print #Female_Count (,{Col_14})     Edit 9,999,999
let #Tot_sex = #Male_Count+#Female_Count
print #Tot_sex (,{Col_15})     Edit 9,999,999
print ' ' (+1,{Col_4})

let #Tot_Male_Count  = #Tot_Male_Count   + #Male_Count
let #Tot_Female_Count= #Tot_Female_Count + #Female_Count

let #Grand_Tot_sex=#Grand_Tot_sex+#Tot_sex
end-procedure !Print-HIGRADE-details

!***********************************************************************
! Print-PIGRADE-details                                                *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-PIGRADE-details
if #PIGRADE = 0
let #PIGRADE = 1
end-if
if #PIGRADE = 31
let #PIGRADE = 30
end-if
print #PIGRADE (,{Col_16a}) Edit 999
print #Male_Count (,{Col_17}) Edit 9,999,999
print #Female_Count (,{Col_18})     Edit 9,999,999
let #Tot_sex= #Male_Count+#Female_Count
print #Tot_sex (,{Col_19})     Edit 9,999,999
print '' (+1,{Col_4})

let #Tot_Male_Count1   = #Tot_Male_Count1   + #Male_Count
let #Tot_Female_Count1 = #Tot_Female_Count1 + #Female_Count

let #Grand_Tot_sex1=#Grand_Tot_sex1+#Tot_sex

end-procedure !Print-PIGRADE-details

!***********************************************************************
! Print-PIGRADE-Total-details                                          *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-HIGRADE-Total-details
print $SUM_lbl  (,{Col_20a})

print #Tot_Male_Count (,{Col_13})    Edit 9,999,999
print #Tot_Female_Count (,{Col_14})  Edit 9,999,999

print #Grand_Tot_sex (,{Col_15}) Edit 9,999,999
end-procedure !Print-HIGRADE-Total-details

!***********************************************************************
! Print-PIGRADE-Total-details                                               *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Print-PIGRADE-Total-details
print $SUM_lbl  (,{Col_16})

print #Tot_Male_Count1 (,{Col_17})   Edit 9,999,999
print #Tot_Female_Count1 (,{Col_18}) Edit 9,999,999

print #Grand_Tot_sex1 (,{Col_19}) Edit 9,999,999

end-procedure !Print-PIGRADE-Total-details


!***********************************************************************
! get-sex-count-pen                                               *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure get-sex-count-pen

   do  Print-PIGRADE-details

     let #Male_Count = 0
     let #Female_Count = 0

end-procedure !get_sex_count_pen


!***********************************************************************
! get-sex-count-pen                                               *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure get-sex-count-hel

   do  Print-HIGRADE-details
    let #col_num_HEL=#current-line - 4
     let #Male_Count = 0
     let #Female_Count = 0

end-procedure !get_sex_count_hel

!***********************************************************************
! Additional SQCs included in the report                               *
!***********************************************************************

#include 'datetime.sqc'     !Routines for date and time formatting
#include 'datemath.sqc'     !Date conversion procedures
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
#include 'prcsapi.sqc'      !Replaces stdapi.sqc
#include 'prcslng.sqc'      !Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        !Reset printer procedure
#include 'number.sqc'       !Routines to format numbers
#include 'getestab.sqc'     !Get Establishment Name from the ESTAB_TBL
