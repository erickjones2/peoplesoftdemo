!************************************************************************
!  STSU009:  STOCK REPRICE
!************************************************************************                                                                      !
!
!                                                                 
!   This software and related documentation are provided under a  
!   license agreement containing restrictions on use and          
!   disclosure and are protected by intellectual property         
!   laws. Except as expressly permitted in your license agreement 
!   or allowed by law, you may not use, copy, reproduce,          
!   translate, broadcast, modify, license, transmit, distribute,  
!   exhibit, perform, publish or display any part, in any form or 
!   by any means. Reverse engineering, disassembly, or            
!   decompilation of this software, unless required by law for    
!   interoperability, is prohibited.                              
!   The information contained herein is subject to change without 
!   notice and is not warranted to be error-free. If you find any 
!   errors, please report them to us in writing.                  
!                                                                 
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.       
!   All Rights Reserved.                                          
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2013/01/18:02:56:24                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!
!************************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
  #include 'ptpsp125.sqc'  !Printer and page-size init
end-setup

#define  col2    05
#define  col3    01
#define  col4    54
#define  col5    73
#define  col6    86
#define  col7    103
#define  col8    121
#define  col9    140
#define  col10   159

!************************************************************************
begin-program
!************************************************************************

  do Init-DateTime         !procedure in datetime.sqc
  do Init-Number           !procedure in number.sqc
  do Get-Current-DateTime  !procedure in currdttm.sqc
  do Init-Report           !procedure in SQR

  let $timebegan =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Began: '  $timebegan  ' '

  do Process-Main          !does all report processing in SQR
  do Reset                 !procedure in reset.sqc
  do Stdapi-term           !procedure in stdapi.sqc

  let $timeEnded =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Ended: '  $timeEnded  ' '

end-program

!************************************************************************
begin-procedure Init-Report
!************************************************************************

  do Stdapi-Init

  let     $ReportID     =   'STSU009'

  do Get-Report-Language

  if $prcs_process_instance = ''
     do Prompts             !Prompt user

  else
     do Get-SQR-Parms
     do Get-Values
  end-if

  show    'FLOW: Init-Report'
  show    'Report Title: ' $REPORTTITLE

end-procedure

!******************************************************************************
begin-procedure Prompts
!******************************************************************************

!-----------------------------------------------------------------------------!
! Procedure: Prompts                                                          !
! Descr:     Prompts for all input parameters in the event the program is run !
!            directly from SQR.  In normal use, this should not happen.       !
!-----------------------------------------------------------------------------!

end-procedure

!************************************************************************
begin-procedure Get-Values
!************************************************************************

end-procedure

!************************************************************************
begin-procedure Report-Translation
!************************************************************************

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!

  do Init_Report_Translation ('STOCK',$language_cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK',   'GRANT_DT',         $GrantDtLbl,         #DW)
  do Get_Field_Information ('STOCK',   'STOCK_ID',         $STOCK_ID,           #DW)
  do Get_Field_Information ('STOCK',   'STOCK_PLAN_DESC',  $STOCK_PLAN,         #DW)
  do Get_Field_Information ('STOCK',   'GRANT',            $GRANTLBL,           #DW)
  do Get_Field_Information ('STOCK',   'COMPANY',          $COMPANYLBL,         #DW)
  do Get_Field_Information ('STOCK',   'COMPANY_INSIDER',  $InsLbl,             #DW)

  do Get_Field_Information ('STSU009', 'HEADING_1',        $HEADING_1,          #DW)
  do Get_Field_Information ('STSU009', 'REPORT_TITLE',     $REPORTTITLE,        #DW)
  do Get_Field_Information ('STSU009', 'TYPE',             $STOCK_PLAN_TYPE,    #DW)
  do Get_Field_Information ('STSU009', 'REPRICE_BREAK_PRC',$REPRICE_BREAK_PRC,  #DW)
  do Get_Field_Information ('STSU009', 'REPRICE_DT',       $REPRICE_DT,         #DW)
  do Get_Field_Information ('STSU009', 'REPRICE_ID',       $REPRICE_ID,         #DW)
  do Get_Field_Information ('STSU009', 'STATUS_DT',        $STATDT,             #DW)
  do Get_Field_Information ('STSU009', 'ST_OPTN_CNV_ISAR', $ST_OPTN_CNV_ISAR,   #DW)
  do Get_Field_Information ('STSU009', 'ST_OPTN_CNV_ISO',  $ST_OPTN_CNV_ISO,    #DW)
  do Get_Field_Information ('STSU009', 'ST_OPTN_CNV_NQ',   $ST_OPTN_CNV_NQ,     #DW)
  do Get_Field_Information ('STSU009', 'ST_OPTN_CNV_NSAR', $ST_OPTN_CNV_NSAR,   #DW)
  do Get_Field_Information ('STSU009', 'ST_REPRICE_STATUS',$ST_REPRICE_STATUS,  #DW)
  do Get_Field_Information ('STSU009', 'VEST_SCHED_ID',    $SchdIdLbl,          #DW)
  do Get_Field_Information ('STSU009', 'REASON',           $ReasonLbl,          #DW)
  do Get_Field_Information ('STSU009', 'PLAN_RULE',        $PlanRuleLbl,        #DW)
  do Get_Field_Information ('STSU009', 'VEST_RULE',        $VestRuleLbl,        #DW)
  do Get_Field_Information ('STSU009', 'AGREEMENT_ID',     $AgreeLbl,           #DW)
  do Get_Field_Information ('STSU009', 'VESTING',          $VestLbl,            #DW)
  do Get_Field_Information ('STSU009', 'VESTING_RULE',     $VestRuleLbl,        #DW)
  do Get_Field_Information ('STSU009', 'EXPIRE_BASIS',     $ExpireLbl,          #DW)
  do Get_Field_Information ('STSU009', 'EXER_VEST_RULE',   $ExerRuleLbl,        #DW)
  do Get_Field_Information ('STSU009', 'EXER_VEST',        $ExerLbl,            #DW)
  do Get_Field_Information ('STSU009', 'TRANSFER_RULE',    $XferRuleLbl,        #DW)
  do Get_Field_Information ('STSU009', 'TRANSFER',         $XferLbl,            #DW)
  do Get_Field_Information ('STSU009', 'EXCLUDE',          $ExcLbl,             #DW)
  do Get_Field_Information ('STSU009', 'DIRECTOR',         $DirectLbl,          #DW)
  do Get_Field_Information ('STSU009', 'OFFICER',          $OfficerLbl,         #DW)
  do Get_Field_Information ('STSU009', 'REPORTING_PERSON', $ReportLbl,          #DW)
  do Get_Field_Information ('STSU009', 'BEN_OWNER',        $BenLbl,             #DW)
  do Get_Field_Information ('STSU009', 'COUNTRY',          $CountryLbl,         #DW)
  do Get_Field_Information ('STSU009', 'INCLUDE',          $IncLbl,             #DW)
  do Get_Field_Information ('STSU009', 'VEST_DEFER_MM',    $DeferMMLbl,         #DW)
  do Get_Field_Information ('STSU009', 'VEST_DEFER_DD',    $DeferDDLbl,         #DW)
  do Get_Field_Information ('STSU009', 'EXERCISE_HOLD_DT', $HoldDtLbl,          #DW)
  do Get_Field_Information ('STSU009', 'LIFE_LIMIT',       $LifeLimLbl,         #DW)

end-procedure

!************************************************************************
begin-heading 3
!************************************************************************

#include 'stdhdgtr.sqc'

end-heading

!************************************************************************
begin-procedure Process-Main
!************************************************************************

!----------------------------------------------------------------------!
! Procedure:  Process-Main                                             !
! Descr:      This is where all required data is selected              !
!----------------------------------------------------------------------!

  display 'FLOW: Process-Main'

begin-Select

A.STOCK_ID         
A.REPRICE_ID
A.DESCR
A.RECORD_DT
A.BREAK_PRICE
A.GRANT_DT
A.GRANT_REASON
A.AGREEMENT_ID
A.COMPANY_INSIDER
A.REPORTING_PERSON
A.ST_DIRECTOR
A.ST_OFFICER
A.ST_BEN_OWNER
A.REPRICE_PLAN_RULE
A.STOCK_PLAN
A.REPRICE_VEST_RULE
A.VEST_SCHED_ID
A.EXERCISE_HOLD_DT
A.VEST_DEFER_MM
A.VEST_DEFER_DD
A.EXPIRE_BASIS_CD
A.OPTION_LIFE_MM
A.REPRICE_EXER_RULE
A.EXER_BFR_VEST
A.REPRICE_XFER_RULE
A.TRANSFER_ALLOW
A.ST_OPTN_CNV_ISO
A.ST_OPTN_CNV_NQ
A.ST_OPTN_CNV_ISAR
A.ST_OPTN_CNV_NSAR
A.REPRICE_STATUS
A.STATUS_DT
B.DESCR

  do Print-data
  do Process-Country
  do Process-Company
  do Process-Plan
  do Process-Emp
  
  new-page

from PS_ST_REPRC_TBL  A,
     PS_STOCK_TBL     B
where A.STOCK_ID = B.STOCK_ID
order by  1,2

end-Select

end-procedure

!***********************************************************************
begin-procedure Print-Data
!***********************************************************************

  print $STOCK_ID             (+2,1,08)
  print ':'                   (,,1)
  print &A.STOCK_ID           (0,+3,10)
  print &B.DESCR              (0,+3,30)

  print $REPRICE_ID           (+1,01,10)
  print ':'                   (,,1)
  print &A.REPRICE_ID         (0,+1,10)
  print &A.DESCR              (0,+3,30)

  do Format-DateTime(&A.RECORD_DT, $DATE, {DEFYMD}, '', '')

  print $REPRICE_DT           (+2,{col3},11)
  print ':'                   (,,1)
  print $DATE                 (0,+4,10)

  print $REPRICE_BREAK_PRC    (+1,{col3},12)

  do Format-Number(&A.BREAK_PRICE, $BREAK_PRC, '999,999,990.099999')
  let $Break_Prc = ltrim($Break_Prc,' ')
  
  print $BREAK_PRC            (0,+4,18)


  let $FieldName = 'REPRICE_STATUS'
  let $FieldValue = &a.reprice_status

  do Read-Translate-Table

  let $Status = RTRIM($XlatShortName,' ')

  print $ST_REPRICE_STATUS    (+1,{col3},14)
  print ':'                   (,,1)
  print $Status               (,+1,10)
  
  do Format-DateTime(&A.STATUS_DT, $DATE, {DEFYMD}, '', '')

  print $StatDt               (+1,{col3},11)
  print ':'                   (,,1)
  print $Date                 (,+4,10)
  
  
  print $GrantLbl             (+3,{col3},20)
  

  do Format-DateTime(&A.GRANT_DT, $DATE, {DEFYMD}, '', '')
  
  print $GrantDtLbl           (+2,{col2},10)
  print ':'                   (,,1)
  print $Date                 (,+3,10)
  

  let $FieldName = 'REPRICE_PLAN_RULE'
  let $FieldValue = &a.reprice_plan_rule

  do Read-Translate-Table

  let $Rule = RTRIM($XlatShortName,' ')

  print $PlanRuleLbl          (,{col4},15)
  print ':'                   (,,1)
  print $Rule                 (,+1,10)

  print $ReasonLbl            (+1,{col2},12)
  print ':'                   (,,1)
  print &a.grant_reason       (,+1,04)

  print $Stock_Plan           (,{col4},10)
  print ':'                   (,,1)
  print &a.stock_plan         (,+7,10)

  print $AgreeLbl             (+1,{col2},12)
  print ':'                   (,,1)
  print &a.agreement_id       (,+1,10)

  let $FieldName = 'REPRICE_EXER_RULE'
  let $FieldValue = &a.reprice_exer_rule

  do Read-Translate-Table

  let $Rule = RTRIM($XlatShortName,' ')

  print $ExerRuleLbl          (+2,{col2},21)
  print ':'                   (,,1)
  print $Rule                 (,+1,10)

  print $ExerLbl              (,{col4},16)
  print ':'                   (,,1)
  print &a.exer_bfr_vest      (,+1,01)
  

  let $FieldName = 'REPRICE_XFER_RULE'
  let $FieldValue = &a.reprice_xfer_rule

  do Read-Translate-Table

  let $Rule = RTRIM($XlatShortName,' ')

  print $XferRuleLbl          (+1,{col2},21)
  print ':'                   (,,1)
  print $Rule                 (,+1,10)

  print $XferLbl              (,{col4},16)
  print ':'                   (,,1)
  print &a.transfer_allow     (,+1,01)

  
  print $HEADING_1            (+3,{col3},23)

  do Get-Data

  print $ST_OPTN_CNV_NQ       (+2,{col2},03)
  print $CnvNQ                (0,+5,10)

  print $ST_OPTN_CNV_ISO      (0,{col4},04)
  print $CnvISO               (0,+5,10)

  print $ST_OPTN_CNV_NSAR     (+1,{col2},07)
  print $CnvNSAR              (0,+1,10)

  print $ST_OPTN_CNV_ISAR     (0,{col4},08)
  print $CnvISAR              (0,+1,10)


  print $VestLbl              (+3,{col3},20)
  

  let $FieldName = 'REPRICE_VEST_RULE'
  let $FieldValue = &a.reprice_vest_rule

  do Read-Translate-Table

  let $Rule = RTRIM($XlatShortName,' ')

  print $VestRuleLbl          (+2,{col2},13)
  print ':'                   (,,1)
  print $Rule                 (,+5,10)
  
  print $SchdIdLbl            (+1,{col2},11)
  print ':'                   (,,1)
  print &a.vest_sched_id      (,+7,10)
  
  do Format-DateTime(&A.EXERCISE_HOLD_DT, $DATE, {DEFYMD}, '', '')

  print $HoldDtLbl            (+1,{col2},14)
  print ':'                   (,,1)
  print $Date                 (,+4,10)

  print $DeferMMLbl           (+1,{col2},15)
  print ':'                   (,,1)
  print &a.vest_defer_mm      (,+3,2)

  print $DeferDDLbl           (+1,{col2},13)
  print ':'                   (,,1)
  print &a.vest_defer_dd      (,+5,3)
  

  let $FieldName = 'EXPIRE_BASIS_CD'
  let $FieldValue = &a.expire_basis_cd

  do Read-Translate-Table

  let $Basis = RTRIM($XlatShortName,' ')

  print $ExpireLbl            (+1,{col2},16)
  print ':'                   (,,1)
  print $Basis                (,+2,10)
  
  print $LifeLimLbl           (+1,{col2},17)
  print ':'                   (,,1)
  print &a.option_life_mm     (,+1,4)
  
  print $ExcLbl               (+3,{col3},20)
  
  print $InsLbl               (+2,{col2},15)
  print ':'                   (,,1)
  print &a.company_insider    (,+2,1)

  print $OfficerLbl           (,{col4},07)
  print ':'                   (,,1)
  print &a.st_officer         (,+2,1)

  print $ReportLbl            (+1,{col2},16)
  print ':'                   (,,1)
  print &a.reporting_person   (,+1,1)

  print $DirectLbl            (,{col4},08)
  print ':'                   (,,1)
  print &a.st_director        (,+1,1)

  print $BenLbl               (+1,{col2},16)
  print ':'                   (,,1)
  print &a.st_ben_owner       (,+1,1)
  
end-procedure

!***********************************************************************
begin-procedure Process-Country
!***********************************************************************

 let $Print = 'N'

begin-select
COUNTRY

 if $Print = 'N'
    print $CountryLbl           (+2,{col2},10) underline
    print ' '                   (+1,1,1)
 end-if
 
 print &country                 (+1,{col2},03)
 
 let $Print = 'Y'

From PS_ST_REPRC_CNTRY
Where STOCK_ID   = &a.stock_id
  And REPRICE_ID = &a.reprice_id
order by 1
end-select

end-procedure

!***********************************************************************
begin-procedure Process-Plan
!***********************************************************************

 let $Print = 'N'

begin-select
STOCK_PLAN_TYPE
STOCK_PLAN

 if $Print = 'N'
    print $STOCK_PLAN           (+2,{col2},10) underline
    print ' '                   (+1,1,1)
 end-if
 
 print &stock_plan              (+1,{col2},10)
 print $STOCK_PLAN_TYPE         (,+5,04)
 print ':'                      (,,1)
 print &stock_plan_type         (,+1,1)
 
 let $Print = 'Y'

From PS_ST_REPRC_PLAN
Where STOCK_ID   = &a.stock_id
  And REPRICE_ID = &a.reprice_id
order by 1
end-select

end-procedure

!***********************************************************************
begin-procedure Process-Company
!***********************************************************************

 let $Print = 'N'

begin-select
COMPANY

 if $Print = 'N'
    print $CompanyLbl           (+2,{col2},07) underline
    print ' '                   (+1,1,1)
 end-if
 
 print &country                 (+1,{col2},03)
 
 let $Print = 'Y'

From PS_ST_REPRC_CO
Where STOCK_ID   = &a.stock_id
  And REPRICE_ID = &a.reprice_id
order by 1
end-select

end-procedure

!***********************************************************************
begin-procedure Process-Emp
!***********************************************************************

 let $Print = 'N'

begin-select
EMPLID

 if $Print = 'N'
    print $IncLbl               (+2,{col3},20)
    print ' '                   (+1,1,1)
 end-if
 
 print &emplid                  (+1,{col2},11)
 
 let $Print = 'Y'

From PS_ST_REPRC_EMPL
Where STOCK_ID   = &a.stock_id
  And REPRICE_ID = &a.reprice_id
order by 1
end-select

end-procedure

!************************************************************************
begin-procedure Get-Data
!************************************************************************

!-------------------------------------------------------------------!
! Procedure:  Get-Data                                              !
! Descr:      This procedure gets the value of the specific field   !
!             from the Translate Table                              !
!-------------------------------------------------------------------!

  let $FieldName = 'ST_OPTN_CNV_NQ'
  let $FieldValue = &A.ST_OPTN_CNV_NQ

  do Read-Translate-Table

  let $CnvNQ = RTRIM($XlatShortName,' ')



  let $FieldName = 'ST_OPTN_CNV_ISO'
  let $FieldValue = &A.ST_OPTN_CNV_ISO

  do Read-Translate-Table

  let $CnvISO = RTRIM($XlatShortName,' ')



  let $FieldName = 'ST_OPTN_CNV_ISAR'
  let $FieldValue = &A.ST_OPTN_CNV_ISAR

  do Read-Translate-Table

  let $CnvISAR = RTRIM($XlatShortName,' ')



  let $FieldName = 'ST_OPTN_CNV_NSAR'
  let $FieldValue = &A.ST_OPTN_CNV_NSAR

  do Read-Translate-Table

  let $CnvNSAR = RTRIM($XlatShortName,' ')

end-procedure

!************************************************************************
!  SQC Include Files
!************************************************************************

#include 'stdapi.sqc'
#include 'curdttim.sqc'  !Get-Current-Date-Time
#include 'datetime.sqc'  !Get-Date-Time
#include 'datemath.sqc'  !Date Math Routines
#include 'reset.sqc'     !Reset printer procedure
#include 'number.sqc'    !Routines to format numbers
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read the Translate Table for the desired values.
#include 'strunctl.sqc'  !Get run control parameter values
