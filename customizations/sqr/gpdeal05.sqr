!***********************************************************************
!  GPDEAL05:  Pay Element Summary Per Year                             *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:03:34:49                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !set environment

#define col0        5
#define col00       1
#define col1        39
#define col4        90

begin-REPORT
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Get-Data
  do Process-Main
  do Stdapi-Term
end-REPORT

#include 'setup31.sqc'

!****************************************************************************
begin-heading 11
uppercase $ReportTitle
#include 'stdhdgtr.sqc'
print $PRINTCLASS  (+1,#RptCol)
print $Ctl_Print       (0,+1)
let $TITLE3 = ''
let $TITLE3  = $TITLE2  || '  ' || $Ctl_Year
print $TITLE3                     (+1) center
position (-2,1)
print $PyentDescr          (, {col00})
print $PyentAddr           (+1, {col00})
print $PyentZip            (+1, {col00})
print $PyentCity           (, +1)
print $PyentState          (+1, {col00})
print $AMOUNT_SPEC1     (,1)  center
print '_' (+1,1,125)fill

   print $ELEMENT       (+1, {col0}  )
   print $DESCR11        ( 0, {col1}  )
   print $CUMULATIVE    ( 0, {col4}  )

print '_' (+1,1,125)fill

end-heading
!****************************************************************************
begin-procedure Init-Report

  do Stdapi-Init

  if $prcs_process_instance = ''
     do ask-input
  else
     do Get-Report-Parameters                !in GPDEUT06.SQC
     do Get-Values
  end-if
  let $Ctl_Comp_Report = 'Y'
  move 'GPDEAL05' to $ReportID
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('GPDEAL04')
  do Append_Report_Translation ('GPDEGLOB')
  do Report-Translation
  let $ReportTitle = $TITLE1
  #debug show ' Report ID : ' $ReportID  ' ReportTitle : '  $ReportTitle

end-procedure Init-Report
!****************************************************************************
Begin-Procedure Report-Translation

  do Get_Field_Information ('GPDEAL05', 'TITLE1',        $TITLE1,     #CW)
  do Get_Field_Information ('GPDEAL05', 'TITLE2',        $TITLE2,     #CW)
  do Get_Field_Information ('GPDEAL05', 'PRINT_CLASS_STR', $PRINT_CLASS_STR,#CW)
  do Get_Field_Information ('GPDEAL04', 'ELEMENT',       $ELEMENT,    #CW)
  do Get_Field_Information ('GPDEAL04', 'DESCR1',        $DESCR11,    #CW)
  do Get_Field_Information ('GPDEAL04', 'CUMULATIVE',    $CUMULATIVE, #CW)
  do Get_Field_Information ('GPDEGLOB', 'PRINTCLASS',    $PRINTCLASS, #CW)
  do Get_Field_Information ('GPDEGLOB', 'AMOUNT_SPEC',         $AMOUNT_SPEC,#CW)
end-Procedure Report-Translation

!****************************************************************************
begin-procedure Get-Values
    let $language_cd = $PRCS_LANGUAGE_CD
end-procedure Get-Values
!****************************************************************************
begin-procedure Ask-Input


input $Ctl_Print      'Print Order       : ' type=char      maxlen=8
input $Ctl_Year       'For Year          : ' type=char      maxlen=4
input $Ctl_PayEntity  'Pay Entity        : ' type=char      maxlen=10


end-procedure Ask-Input

!*************************************************************************
begin-procedure Process-Main
      let $Pay_Entity=$Ctl_PayEntity
   if $LastD >= $Stichtag
        let $AMOUNT_SPEC1 = $AMOUNT_SPEC || ' EURO'
      else
        let $AMOUNT_SPEC1 = $AMOUNT_SPEC || ' DM'
      end-if
      do Get-PayEntity-Address
      do Get-Pin-Info
end-procedure Process-Main
!*************************************************************************
begin-procedure init-sum
let #jan = 0
let #feb = 0
let #mar = 0
let #apr = 0
let #may = 0
let #jun = 0
let #jul = 0
let #aug = 0
let #sep = 0
let #oct = 0
let #nov = 0
let #dec = 0
let #annual-sum = 0
let #YTD-sum = 0

end-procedure init-sum
!**********************************************

begin-procedure Get-Pin-Info
Begin-Select DISTINCT
A.PIN_NUM
B.GPDE_BL_PR_GROUP       ()   on-break print=never procedure=Print-Blank-Line
B.GPDE_BL_PR_ORDER
B.GPDE_BL_PR_BASE               &B.GPDE_BL_PR_BASE
A.PIN_NM                        &A.PIN_NM
A.ACM_PRD_OPTN                  &A.ACM_PRD_OPTN
A.DESCR                         &J.DESCR
!A.SLICE_END_DT                  &A.SLICE_END_DT
    let $GPDE_BL_PR_BASE = &B.GPDE_BL_PR_BASE
    let $PIN_NM = RTRIM(&A.PIN_NM, ' ')
    let $YTD_AMT_IND = &A.ACM_PRD_OPTN
    let  #Main_Pin=&A.PIN_NUM

    !let $Descr2 = substr(&J.DESCR,1,35)
 do Get-Description-List(#Main_Pin,$Language_cd,$Descr2,$Descr3)
 let $Descr2 = substr($Descr2,1,35)
    let $PIN_NM = substr($PIN_NM,4,25)
    let $Descr1 = $PIN_NM

        do Get-Balance-Info-PayEntity

FROM PS_GPDE_RP_AL05 A , PS_GPDE_BL_PRINT B
WHERE A.PIN_NUM=B.PIN_NUM
AND   B.GPDE_RC_REPORTNAME= $Ctl_Print
ORDER BY B.GPDE_BL_PR_GROUP ,B.GPDE_BL_PR_ORDER,B.GPDE_BL_PR_BASE,A.PIN_NM,A.ACM_PRD_OPTN,A.DESCR
End-Select

end-procedure Get-Pin-Info
!****************************************
begin-procedure Get-Balance-Info-PayEntity

let $Retro = 'N'              ! To print sum column if there are no retros
let $Norm-Bal = 'N'

begin-SELECT
SUM(JP.CALC_RSLT_VAL)     &JP.GPDE_BL_AMT = NUMBER
SUM(JP.BASE_RSLT_VAL)     &JP.GPDE_BASE_AMT = NUMBER
JP.PRD_END_DT             &JP.PRD_END_DT2
KP.GPDE_AL_SIGNVALUE      &KP.GPDE_AL_SIGNVALUE
!JP.SLICE_END_DT           &JP.SLICE_END_DT
  let $Norm-Bal = 'Y'

  if $GPDE_BL_PR_BASE = 'Y'
     let #Bal_Amount_T = &JP.GPDE_BASE_AMT
  else
     let #Bal_Amount_T = &JP.GPDE_BL_AMT * &KP.GPDE_AL_SIGNVALUE
  end-if

  let $PRD_END_DT = &JP.PRD_END_DT2

  do ConvertToComponents(&JP.PRD_END_DT2,$yy,$mm,$dd)


  evaluate $mm

  when = '01'

     let #jan = #Bal_Amount_T
     let #jan-sam =  #Bal_Amount_T
     let #jan-sum =  #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '02'

     let #feb = #Bal_Amount_T
     let #feb-sam =  #Bal_Amount_T
     let #feb-sum =  #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '03'

     let #mar = #Bal_Amount_T
     let #mar-sam =  #Bal_Amount_T
     let #mar-sum =  #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '04'
     let #apr = #Bal_Amount_T
     let #apr-sam =  #Bal_Amount_T
     let #apr-sum =  #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '05'

     let #may = #Bal_Amount_T
     let #may-sam =  #Bal_Amount_T
     let #may-sum =  #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '06'
     let #jun = #Bal_Amount_T
     let #jun-sam =  #Bal_Amount_T
     let #jun-sum =  #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '07'
     let #jul = #Bal_Amount_T
     let #jul-sam = #Bal_Amount_T
     let #jul-sum = #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '08'

     let #aug = #Bal_Amount_T
     let #aug-sam = #Bal_Amount_T
     let #aug-sum = #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '09'

     let #sep = #Bal_Amount_T
     let #sep-sam = #Bal_Amount_T
     let #sep-sum = #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '10'

     let #oct = #Bal_Amount_T
     let #oct-sam = #Bal_Amount_T
     let #oct-sum = #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '11'

     let #nov = #Bal_Amount_T
     let #nov-sam = #Bal_Amount_T
     let #nov-sum = #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when = '12'

     let #dec = #Bal_Amount_T
     let #dec-sam = #Bal_Amount_T
     let #dec-sum = #Bal_Amount_T
     let #annual-sum = #annual-sum + #Bal_Amount_T
     let #YTD-sum = #Bal_Amount_T
     break

  when-other

     break

  end-evaluate

        let #annual-month-sum = #annual-month-sum + #annual-sum

FROM PS_GPDE_RP_AL05 JP, PS_GPDE_BL_PRINT KP
WHERE JP.PIN_NUM            = KP.PIN_NUM
AND   JP.PAY_ENTITY         = $Pay_Entity
AND   JP.PIN_NUM            = #Main_Pin
AND   KP.GPDE_RC_REPORTNAME = $Ctl_Print
!AND   JP.SLICE_END_DT = &A.SLICE_END_DT
AND   KP.EFF_STATUS         = 'A'
AND   JP.GPDE_AL_CPAY_ENDDT = ( SELECT MAX(JB.GPDE_AL_CPAY_ENDDT) FROM PS_GPDE_RP_AL05 JB
                               WHERE JP.EMPLID=JB.EMPLID
                              AND JP.PRD_END_DT=JB.PRD_END_DT
                                                          !AND JP.SLICE_END_DT = JB.SLICE_END_DT
                              AND JB.PIN_NUM=#Main_Pin)
GROUP BY JP.PRD_END_DT,KP.GPDE_AL_SIGNVALUE
ORDER BY JP.PRD_END_DT,KP.GPDE_AL_SIGNVALUE
!GROUP BY JP.PRD_END_DT,JP.SLICE_END_DT,KP.GPDE_AL_SIGNVALUE
!ORDER BY JP.PRD_END_DT,JP.SLICE_END_DT,KP.GPDE_AL_SIGNVALUE
end-SELECT
   let $Same_Value = 'N'      ! To print Current Period Values
   if  $Norm-Bal   = 'Y'      ! To Print only if Current Values Present
      do Print-Sum
   end-if


end-procedure Get-Balance-Info-PayEntity

!*********************************************************************************
begin-procedure Print-Sum

if (    #jan = 0 and #feb = 0 and #mar = 0 and #apr = 0 and #may = 0 and #jun = 0
    and #jul = 0 and #aug = 0 and #sep = 0 and #oct = 0 and #nov = 0 and #dec = 0 and $Norm-Bal = 'Y' )

    let $Descr = ''

else

    Print $Descr1       (0,{col0}) !WRAP 25 1
    Print $Descr2       (0,{col1})


    if  $YTD_AMT_IND = '5'
        do Format-Number(#YTD-sum,$number,'B9999999.99')
        print $number    (0,{col4})
        position (+1,0)
    else
        do Format-Number(#annual-sum,$number,'B9999999.99')
        print $number    (0,{col4})
        position (+1,0)
    end-if

end-if

do Init-Sum

end-procedure Print-Sum
!**********************************************
begin-procedure Print-Blank-Line

print ''                                        (+1,0)

end-procedure

!**********************************************
#include 'gpdeut01.sqc'  !sqr strings table procedures
#include 'gpdeut02.sqc'  !get ask report parameters
#include 'gpdeut04.sqc'  !get pay entity data
#include 'gpdeut06.sqc'  !get run control parameter values
#include 'gpdeal05.sqc'  !get run control parameter values
#include 'curdttim.sqc'  !get-current-datetime procedure
#include 'datemath.sqc'  !function for date-calculation
#include 'validdt.sqc'   !validate date routine
#include 'readxlat.sqc'  !read-translate-table procedure
#include 'datetime.sqc'  !routines for date and time formatting
#include 'number.sqc'    !routines to format numbers
#include 'stdapi.sqc'    !routines to update run status
#include 'sqrtrans.sqc'  !sqr strings table procedures



