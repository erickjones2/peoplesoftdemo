!***********************************************************************
!  GPBRDI01:  Monthly DIRF Report                                     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/06/30:21:36:21                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

#define cad   18
#define cah   25
#define caq   58
#define cau  105
#define cas  126

#define d1    1
#define d2   22
#define d2a  68
#define d2b  72
#define d3   78
#define d3a  71
#define d4   101
#define d4a  94
#define d5   126
#define d5a  119
#define d6   80

#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer     THIS_REPORT
   Type=HPLASERJET
   Font=3
   Point-Size=1
   Symbol-Set=0U     ! ASCII symbol set
 End-Declare

 Declare-Layout THIS_REPORT
   Orientation   = Portrait
   Top-margin    = 0.3
   Left-margin   = 0.5
   Right-margin  = 0.5
   Char-Width= 4
   Line-Height=6
 End-Declare

 Declare-Report THIS_REPORT
   Printer-Type=HPLASERJET
   LayOut=THIS_REPORT
 End-Declare
End-Setup

begin-report
 Alter-Report
    HEADING = 'One'
 let #FontStd  =  4
 let #SizeExG  = 11
 let #SizeStd  =  9
 let #SizeSml  =  7
 do Init-Report
 do Process-Main
 do Stdapi-Term
 do Reset
 date-time () hh:mi:ss &timeEnded
 display 'Report Ended: ' noline
 display &timeEnded
end-report

!**************************************
begin-procedure Init-Report
#debug show '** Init Report **'
!**************************************
 do Init-DateTime
 do Init-Number
 do Stdapi-Init
 do Get-Current-DateTime
 move 'GPBRDI01' to $ReportID
 move 'Monthly DIRF' to $ReportTitle
 move 'V.P2013-03' to $ReportVersion
 display $ReportID
 display $ReportTitle
 display $ReportVersion
 date-time () hh:mi:ss &timeBegan
 display 'Report Began: ' noline
 display &timeBegan
 Let $ReportDT = Rtrim($ReportDate, '')

 move '.'                To $ReportSThousand
 move ','                To $ReportSDecimal

 Alter-Locale MONEY-SIGN = 'R$'

 Let $File_Name = $ReportID || '_'|| $prcs_process_instance ||'.PDF'
end-procedure Init-Report

begin-heading 8 name = 'One'
graphic (1, 1, 135) box 7 4 12
Alter-Printer Point-size=#SizeSml Font=#FontStd
Print 'Empresa:'    (2,{d1}) Bold
Print $Company      (,{cad})
Print $CompanyNm    (,{cah})
Print 'Data'        (,{cau})  Bold
Print 'Hora'        (,{cas})  Bold

Print 'Periodo:'    (+2,{d1}) Bold
Print $Periodo      (,{cad})
Print $ReportDtF    (,{cau})
Print &timeBegan    (,{cas})
Print 'Estabelecimento:' (+2,{d1}) Bold
Print $EmpEstab      (,{cad})
Print $EmpEstabDESCR    (,{cah})
Page-number         (,{cas})
last-page           () ' /'
Print 'Página:'     (,{cau}) Bold
Alter-Printer Point-size=#SizeExG Font=#FontStd
Print 'DIRF MENSAL' (-1,{caq}) Bold
Alter-Printer Point-size=#SizeSml Font=#FontStd
end-heading 8

begin-heading 8 name = 'Two'
graphic (1, 1, 135) box 7 4 12
Alter-Printer Point-size=#SizeSml Font=#FontStd
Print 'Empresa:'    (2,{d1}) Bold
Print $Company      (,{cad})
Print $CompanyNm    (,{cah})
Print 'Data'        (,{cau})  Bold
Print 'Hora'        (,{cas})  Bold

Print 'Periodo:'    (+2,{d1}) Bold
Print $Periodo      (,{cad})
Print $ReportDtF    (,{cau})
Print &timeBegan    (,{cas})
Page-number         (+2,{cas})
last-page           () ' /'
Print 'Página:'     (,{cau}) Bold
Alter-Printer Point-size=#SizeExG Font=#FontStd
Print 'DIRF MENSAL' (-1,{caq}) Bold
Alter-Printer Point-size=#SizeSml Font=#FontStd
end-heading 8


!**************************************
begin-procedure Process-Main
#debug show '** Process-Main **'
!**************************************
Let #amount_rt_dpto  = 0
Let #amount_ded_dpto = 0
Let #amount_ir_dpto  = 0

Let #amount_rt_estab  = 0
Let #amount_ded_estab = 0
Let #amount_ir_estab  = 0

Let #amount_rt_cia   = 0
Let #amount_ded_cia  = 0
Let #amount_ir_cia   = 0
Do Select-Parameters
Do Select-Data
Do Create-Arrays
Do GetArrays

Let $SecurityClausewithERN = ''
Let $_TableAlias = 'A'
Do Security-Param

Do Select-Employee-Data
End-Procedure Process-Main

!**************************************
begin-procedure Select-Parameters
#debug show '** Select-Parameters **'
!**************************************
Let $WhereClause = ''
Let $WherePayGroup = ''
Let $WhereRunTypeC = ''
Let $WhereRunTypeD = ''
Let $WhereRunTypeE = ''
Let $TableRunType = ''
begin-select
RC.ESTABID
RC.COMPANY
RC.FROM_DATE
RC.THRU_DATE
RC.PER_ORG
RC.GPBR_SORTID
RC.GPBR_RC_SELECT
RC.COMBINE_DATE_OPT

  Let $Estabid    = Rtrim(&RC.ESTABID, ' ')
  Let $Company    = Rtrim(&RC.COMPANY, ' ')
  !Let $Year       = Rtrim(&RC.YEARCD, ' ')
  !Let $Month      = Rtrim(&RC.MONTHCD, ' ')
  Let $From_date  = Rtrim(&RC.FROM_DATE, ' ')
  Let $Thru_date  = Rtrim(&RC.THRU_DATE, ' ')
  Let $Per_Org    = Rtrim(&RC.PER_ORG, ' ')
  Let $Sort_Id    = Rtrim(&RC.GPBR_SORTID, ' ')
  Let $Cntl_Type  = Rtrim(&RC.GPBR_RC_SELECT, ' ')
  Let $SelOption  = Rtrim(&RC.COMBINE_DATE_OPT, ' ')

  !Get Begin and End Date
    Do Convert-To-DTU-Date ($From_date, $From_date)
    Do Convert-To-DTU-Date ($Thru_date, $Thru_date)

    Do dtu-month-begin ($From_date, $From_date)
    Do dtu-month-end ($Thru_date, $Thru_date)

    Do convert-from-dtu-date($From_date,$BgnDt)
    Do convert-from-dtu-date($Thru_date,$EndDt)

    do Format-DateTime($BgnDt, $OutB,{DEFDMY}, '','')
    do Format-DateTime($EndDt, $OutE,{DEFDMY}, '', '')
    Let $Periodo = $outB || '  al  '|| $outE

    Let $ReportDTM = Substr($ReportDt, 1,2)
    Let $ReportDTD = Substr($ReportDt, 4,2)
    Let $ReportDTY = Substr($ReportDt, 7,4)
    Let $ReportDTF = $ReportDTD || '/'|| $ReportDTM || '/'|| $ReportDTY

  !Do Calc-EndDt
  Do Get-Company-Descr

  Let $WhereRunC = 'WHERE OP.OPRID = ' || '''' || $prcs_oprid || '''' || ' AND OP.RUN_CNTL_ID = '
  Let $WhereRunC = $WhereRunC  || '''' || $prcs_run_cntl_id || '''' || ')'

  If $Estabid <> ''
      Let $WhereClause = $WhereClause || ' AND A.ESTABID = ' || '''' || $Estabid || ''''
  End-If

  If $Per_Org <> ''
      Let $WhereClause = $WhereClause || ' AND A.PER_ORG = ' || '''' || $Per_Org || ''''
  End-If

FROM  PS_GPBR_RC_DIRF_A RC
WHERE RC.OPRID = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

if $Cntl_Type = 'P'
  Do ByPayGroup
else
  Do ByRunType
end-if

end-procedure Select-Parameters

!**************************************
begin-procedure ByPayGroup
!**************************************
Let $TableRunType = ''
Let $WhereRunTypeC = 'AND ('
Let $WhereRunTypeD = 'AND ('
Let $WhereRunTypeE = 'AND ('
Let $WherePayGroup = ' AND A.GP_PAYGROUP IN ('
Let $Found = 'N'
begin-select
PG.GP_PAYGROUP
PG.RUN_TYPE
   Let $Found = 'Y'
   Let $PayGrp = Rtrim(&PG.GP_PAYGROUP, ' ')
   Let $RunType = Rtrim (&PG.RUN_TYPE, ' ')

   if $PayGrp <> ''
        Let $WherePayGroup = $WherePayGroup || '''' || $PayGrp || '''' || ','
   end-if

   if $RunType <> '' and $PayGrp <> ''
        Let $TableRunType = ', PS_GP_CALENDAR GPC'
        Let $WhereRunTypeC = $WhereRunTypeC  || ' ( GPC.CAL_ID = AT.CAL_ID AND GPC.GP_PAYGROUP = AT.GP_PAYGROUP AND GPC.RUN_TYPE = ' || '''' || $RunType || ''' AND GPC.GP_PAYGROUP  = ''' || $PayGrp || ''') OR'
        Let $WhereRunTypeD = $WhereRunTypeD  || ' ( GPC.CAL_ID = AT.CAL_ID AND GPC.GP_PAYGROUP = AT.GP_PAYGROUP AND GPC.RUN_TYPE = ' || '''' || $RunType || ''' AND GPC.GP_PAYGROUP  = ''' || $PayGrp || ''') OR'
        Let $WhereRunTypeE = $WhereRunTypeE  || ' ( GPC.CAL_ID = AT.CAL_ID AND GPC.GP_PAYGROUP = AT.GP_PAYGROUP AND GPC.RUN_TYPE = ' || '''' || $RunType || ''' AND GPC.GP_PAYGROUP  = ''' || $PayGrp || ''') OR'
   else
        if $PayGrp <> '' and $RunType = ''
           Let $TableRunType = ', PS_GP_CALENDAR GPC'
           Let $WhereRunTypeC = $WhereRunTypeC  || ' ( GPC.CAL_ID = AT.CAL_ID AND GPC.GP_PAYGROUP = AT.GP_PAYGROUP AND GPC.GP_PAYGROUP  = ''' || $PayGrp || ''') OR'
           Let $WhereRunTypeD = $WhereRunTypeD  || ' ( GPC.CAL_ID = AT.CAL_ID AND GPC.GP_PAYGROUP = AT.GP_PAYGROUP AND GPC.GP_PAYGROUP  = ''' || $PayGrp || ''') OR'
           Let $WhereRunTypeE = $WhereRunTypeE  || ' ( GPC.CAL_ID = AT.CAL_ID AND GPC.GP_PAYGROUP = AT.GP_PAYGROUP AND GPC.GP_PAYGROUP  = ''' || $PayGrp || ''') OR'
        end-if
   end-if

FROM PS_GPBR_RC_DIRF_PG PG
WHERE PG.OPRID = $prcs_oprid
AND   PG.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

If $Found = 'Y'
   Let $WherePayGroup = substr($WherePayGroup,1,(length($WherePayGroup) - 1)) ||  ')'
   Let $WhereRunTypeC = substr($WhereRunTypeC,1,(length($WhereRunTypeC) - 3)) ||  ')'
   Let $WhereRunTypeD = substr($WhereRunTypeD,1,(length($WhereRunTypeD) - 3)) ||  ')'
   Let $WhereRunTypeE = substr($WhereRunTypeE,1,(length($WhereRunTypeE) - 3)) ||  ')'

else
   Let $WherePayGroup = ''
   Let $WhereRunTypeC = ''
   Let $WhereRunTypeD = ''
   Let $WhereRunTypeE = ''

end-if
end-procedure ByPayGroup

!**************************************
begin-procedure ByRunType
#debug show 'Procedure : ByRunType'
!**************************************
Let $TableRunType = ''
Let $WhereRunTypeA = ''
Let $WhereRunTypeB = ''
Let $WhereRunTypeC = ''
Let $WhereRunTypeD = ''
Let $WhereRunTypeE = ''

Let $RunTypeList = ''
begin-select
RT.RUN_TYPE
   Let $RunType = Rtrim (&RT.RUN_TYPE, ' ')

   Let $RunTypeList = $RunTypeList || '''' || $RunType  || ''', '

FROM PS_GPBR_RC_DIRF_RT RT
WHERE RT.OPRID = $prcs_oprid
AND   RT.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

#debug show '    $RunTypeList : ' $RunTypeList

If $RunTypeList <> ''
    Let $RunTypeList = Rtrim($RunTypeList, ', ')
    Let $WhereRunTypeA = ' AND SEG.RUN_TYPE IN (' || $RunTypeList || ')'
    Let $WhereRunTypeB = ' AND SEG2.RUN_TYPE IN (' || $RunTypeList || ')'
End-If

#debug show '    $WhereRunTypeA : ' $WhereRunTypeA
#debug show '    $WhereRunTypeB : ' $WhereRunTypeB
#debug show '    $WhereRunTypeC : ' $WhereRunTypeC

end-procedure ByRunType


!**************************************
Begin-Procedure Create-Arrays
#debug show '** Create Arrays **'
!**************************************

CREATE-ARRAY NAME = arr_tri SIZE = 100
     FIELD = t_type:char
     FIELD = t_pinnum:number

CREATE-ARRAY NAME = arr_ded SIZE = 100
     FIELD = d_type:char
     FIELD = d_pinnum:number

CREATE-ARRAY NAME = arr_irrf SIZE = 100
     FIELD = i_type:char
     FIELD = i_pinnum:number

End-Procedure Create-Arrays

!**************************************
Begin-Procedure Select-Data
#debug show '** Select-Data **'
!**************************************
Let $EntryTable = ''
clear-array name = arr_tri
clear-array name = arr_ded
clear-array name = arr_irrf
Let #contt = 0
Let #contd = 0
Let #conti = 0
Begin-Select
PM.GPBR_PAYROLL_TYPE
PM.GPBR_DIRF_PARM
PM.GPBR_ENTRY_DIRF
PM.PIN_NUM

  Let $DPay_Type    = Rtrim(&PM.GPBR_PAYROLL_TYPE, ' ')
  Let $Parm_Dirf    = Rtrim(&PM.GPBR_DIRF_PARM, ' ')
  Let $Entry_Dirf   = Rtrim(&PM.GPBR_ENTRY_DIRF, ' ')
  Let #Pin_num      = &PM.PIN_NUM

  Evaluate  $Parm_Dirf
   when = '10' !Taxable Income
   when = '40' !Compensated tax previous years
   when = '50' !Compensated tax current year
   when = '60' !Income tax suspended liability
   when = '90' !Income tax in court deposit
        Do Fillarr_tri
   when = '20' !Deductions
   when = '70' !Deduction suspended liability
        Do Fillarr_ded
   when = '30' !Withholding tax
   when = '80' !Withholding tax susliability
        Do Fillarr_irrf
   End-Evaluate

FROM PS_GPBR_RC_DIRF_PM PM
WHERE PM.OPRID = $prcs_oprid
AND   PM.RUN_CNTL_ID = $prcs_run_cntl_id
ORDER BY PM.GPBR_PAYROLL_TYPE,PM.GPBR_ENTRY_DIRF
End-Select
End-Procedure Select-Data

!**************************************
Begin-Procedure Fillarr_tri
!**************************************
put $Entry_Dirf #Pin_num into arr_tri(#contt) t_type t_pinnum
ADD 1 TO #contt
End-Procedure Fillarr_tri

!**************************************
Begin-Procedure Fillarr_ded
!**************************************
put $Entry_Dirf #Pin_num into arr_ded(#contd) d_type d_pinnum
ADD 1 TO #contd
End-Procedure Fillarr_ded

!**************************************
Begin-Procedure Fillarr_irrf
!**************************************
put $Entry_Dirf #Pin_num into arr_irrf(#conti) i_type i_pinnum
ADD 1 TO #conti
End-Procedure Fillarr_irrf

Begin-Procedure GetArrays
Let #a = 0
Let #b = 0
Let #c = 0
While #a < #contt
    get $type #num from arr_tri (#a) t_type t_pinnum
    Add 1 to #a
End-while

While #b < #contd
    get $type #num from arr_ded (#b) d_type d_pinnum
    Add 1 to #b
End-while

While #c < #conti
    get $type #num from arr_irrf (#c) i_type i_pinnum
    Add 1 to #c
End-while

End-Procedure GetArrays

!**************************************
Begin-Procedure Get-Values
#Debug Show 'Procedure: Get-Values'
#Debug Show '   $Emplid         :' $Emplid
#Debug Show '   #Empl_Rcd       :' #Empl_Rcd
#Debug Show '   #pinnum         :' #pinnum
#Debug Show '   #amount_emp     :' #amount_emp
#Debug Show '   $EntryTable     :' $EntryTable
#Debug Show '   $TableRunType   :' $TableRunType
#Debug Show '   $WhereRslt      :' $WhereRslt
#Debug Show '   $WhereRunTypeA  :' $WhereRunTypeA
#Debug Show '   $WhereRunTypeB  :' $WhereRunTypeB
#Debug Show '   $WhereRunTypeC  :' $WhereRunTypeC
#Debug Show '   $WhereSelType   :' $WhereSelType
#Debug Show '   $WhereSelAcum   :' $WhereSelAcum
!**************************************
Let #amount = 0
Begin-Select
AT.CALC_RSLT_VAL

   LET #amount = &AT.CALC_RSLT_VAL
   if #amount <> 0
     Let #amount_emp = #amount_emp + #amount
   end-if
FROM
[$EntryTable]
[$TableRunType]
, PS_GP_RSLT_SEG_VW SEG
WHERE AT.EMPLID       = $Emplid
AND   AT.EMPL_RCD     = #Empl_Rcd
AND   AT.PIN_NUM      = #pinnum
[$WhereRslt]
[$WhereRunTypeA]
[$WhereRunTypeC]
AND AT.CAL_RUN_ID       = AT.ORIG_CAL_RUN_ID
AND SEG.EMPLID          = AT.EMPLID
AND SEG.CAL_RUN_ID      = AT.CAL_RUN_ID
AND SEG.EMPL_RCD        = AT.EMPL_RCD
AND SEG.GP_PAYGROUP     = AT.GP_PAYGROUP
AND SEG.CAL_ID          = AT.CAL_ID
AND SEG.ORIG_CAL_RUN_ID = AT.ORIG_CAL_RUN_ID
AND SEG.RSLT_SEG_NUM    = AT.RSLT_SEG_NUM
AND SEG.CALC_TYPE       = 'P'
[$WhereSelType]
[$WhereSelAcum]
End-Select
#Debug Show '   #amount_emp  :' #amount_emp
End-procedure Get-Values

!**************************************
Begin-Procedure Get-Rend-Trib
#debug show 'Procedure: Get-Rend-Trib'
!**************************************
Let $EntryTable = ''
Let $WhereRslt = ''
Let #amount_emp = 0
Let #t = 0
While #t < #contt
    get $type #pinnum from arr_tri (#t) t_type t_pinnum
    Add 1 to #t
    #debug show '   $type :' $type
    Evaluate $type
      when = 'AC'
        Let $EntryTable   = 'PS_GP_RSLT_ACUM_VW AT'
        Let $WhereSelAcum = ' AND SEG.PRC_ORD_TS = (SELECT MAX(SEG2.PRC_ORD_TS) '
        Let $WhereSelAcum = $WhereSelAcum  || ' FROM PS_GP_RSLT_SEG_VW SEG2'
        Let $WhereSelAcum = $WhereSelAcum  || ' WHERE SEG2.EMPLID = SEG.EMPLID'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.EMPL_RCD  = SEG.EMPL_RCD'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.GP_PAYGROUP = SEG.GP_PAYGROUP'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.CAL_RUN_ID = SEG2.ORIG_CAL_RUN_ID'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.CALC_TYPE = ' || '''' || 'P' || ''''
        Let $WhereSelAcum = $WhereSelAcum  || $WhereRunTypeB
        Let $WhereSelAcum = $WhereSelAcum  || ' AND EXISTS (SELECT ' || '''' || 'X' || '''' || ' FROM PS_GP_RSLT_ACUM_VW AC'
        Let $WhereSelAcum = $WhereSelAcum  || '             WHERE AC.PIN_NUM = AT.PIN_NUM'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.EMPLID = AT.EMPLID'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.EMPL_RCD = AT.EMPL_RCD'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.ACM_FROM_DT BETWEEN '|| '''' || $Date01 || ''''
        Let $WhereSelAcum = $WhereSelAcum  || '             AND ' || '''' || $Date02 || ''''
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.GP_PAYGROUP = SEG2.GP_PAYGROUP'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.CAL_ID = SEG2.CAL_ID AND AC.CAL_RUN_ID = SEG2.CAL_RUN_ID'
        Let $WhereSelAcum = $WhereSelAcum  || '             ))'
        ! This Condition is fixed fo Acummulators and discard $WhereSelType condition
        Let $WhereSelAcum = $WhereSelAcum  || ' AND AT.ACM_FROM_DT BETWEEN '|| '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        Let $WhereSelType = ''

        !Let $WhereRslt  = ' AND AT.ACM_FROM_DT = ' || '''' || $Date01 || ''''
        !Let $WhereRslt  = $WhereRslt || ' AND AT.ACM_THRU_DT = ' || '''' || $Date02 || ''''

      when = 'DD'
      when = 'ER'

        If $SelOption = 'B'
            Let $WhereSelType = ' AND SEG.PYMT_DT BETWEEN ' || '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        Else
            Let $WhereSelType = ' AND SEG.SEG_END_DT BETWEEN ' || '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        End-if

        Let $EntryTable   = 'PS_GP_RSLT_ED_VW AT'
        Let $WhereSelAcum = ''
        !Let $WhereRslt  = ' AND AT.SLICE_BGN_DT >= ' || '''' || $Date01 || ''''
        !Let $WhereRslt  = $WhereRslt || ' AND AT.SLICE_END_DT <= ' || '''' || $Date02 || ''''
    End-Evaluate
    Do Get-Values
End-while
Let #amount_rt_emp = #amount_emp
End-Procedure Get-Rend-Trib

!**************************************
Begin-Procedure Get-Deductions
#debug show 'Procedure: Get-Deductions'
!**************************************
Let $EntryTable = ''
Let $WhereRslt = ''
Let #amount_emp = 0
Let #d = 0
While #d < #contd
    get $type #pinnum from arr_ded (#d) d_type d_pinnum
    Add 1 to #d
    #debug show '   $type :' $type
    Evaluate $type
      when = 'AC'
        Let $EntryTable = 'PS_GP_RSLT_ACUM_VW AT'
        Let $WhereSelAcum = ' AND SEG.PRC_ORD_TS = (SELECT MAX(SEG2.PRC_ORD_TS) '
        Let $WhereSelAcum = $WhereSelAcum  || ' FROM PS_GP_RSLT_SEG_VW SEG2'
        Let $WhereSelAcum = $WhereSelAcum  || ' WHERE SEG2.EMPLID = SEG.EMPLID'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.EMPL_RCD  = SEG.EMPL_RCD'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.GP_PAYGROUP = SEG.GP_PAYGROUP'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.CAL_RUN_ID = SEG2.ORIG_CAL_RUN_ID'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.CALC_TYPE = ' || '''' || 'P' || ''''
        Let $WhereSelAcum = $WhereSelAcum  || $WhereRunTypeB
        Let $WhereSelAcum = $WhereSelAcum  || ' AND EXISTS (SELECT ' || '''' || 'X' || '''' || ' FROM PS_GP_RSLT_ACUM_VW AC'
        Let $WhereSelAcum = $WhereSelAcum  || '             WHERE AC.PIN_NUM = AT.PIN_NUM'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.EMPLID = AT.EMPLID'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.EMPL_RCD = AT.EMPL_RCD'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.ACM_FROM_DT BETWEEN '|| '''' || $Date01 || ''''
        Let $WhereSelAcum = $WhereSelAcum  || '             AND ' || '''' || $Date02 || ''''
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.GP_PAYGROUP = SEG2.GP_PAYGROUP'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.CAL_ID = SEG2.CAL_ID AND AC.CAL_RUN_ID = SEG2.CAL_RUN_ID'
        Let $WhereSelAcum = $WhereSelAcum  || '             ))'
        ! This Condition is fixed fo Acummulators and discard $WhereSelType condition
        Let $WhereSelAcum = $WhereSelAcum  || ' AND AT.ACM_FROM_DT BETWEEN '|| '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        Let $WhereSelType = ''

        !Let $WhereRslt  = 'AND AT.ACM_FROM_DT = ' || '''' || $Date01 || ''''
        !Let $WhereRslt  = $WhereRslt || ' AND AT.ACM_THRU_DT = ' || '''' || $Date02 || ''''
      when = 'DD'
      when = 'ER'

        If $SelOption = 'B'
            Let $WhereSelType = ' AND SEG.PYMT_DT BETWEEN ' || '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        Else
            Let $WhereSelType = ' AND SEG.SEG_END_DT BETWEEN ' || '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        End-if

        Let $EntryTable = 'PS_GP_RSLT_ED_VW AT'
        Let $WhereSelAcum = ''
        !Let $WhereRslt  = 'AND AT.SLICE_BGN_DT >= ' || '''' || $Date01 || ''''
        !Let $WhereRslt  = $WhereRslt || ' AND AT.SLICE_END_DT <= ' || '''' || $Date02 || ''''
    End-Evaluate
    Do Get-Values
End-while
Let #amount_ded_emp = #amount_emp
End-Procedure Get-Deductions

!**************************************
Begin-Procedure Get-Irrf
#debug show 'Procedure: Get-Irrf'
!**************************************
Let $EntryTable = ''
Let $WhereRslt = ''
Let #amount_emp = 0
Let #i = 0
While #i < #conti
    get $type #pinnum from arr_irrf (#i) i_type i_pinnum
    Add 1 to #i
    #debug show '   $type :' $type
    Evaluate $type
      when = 'AC'
        Let $EntryTable = 'PS_GP_RSLT_ACUM_VW AT'
        Let $WhereSelAcum = ' AND SEG.PRC_ORD_TS = (SELECT MAX(SEG2.PRC_ORD_TS) '
        Let $WhereSelAcum = $WhereSelAcum  || ' FROM PS_GP_RSLT_SEG_VW SEG2'
        Let $WhereSelAcum = $WhereSelAcum  || ' WHERE SEG2.EMPLID = SEG.EMPLID'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.EMPL_RCD  = SEG.EMPL_RCD'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.GP_PAYGROUP = SEG.GP_PAYGROUP'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.CAL_RUN_ID = SEG2.ORIG_CAL_RUN_ID'
        Let $WhereSelAcum = $WhereSelAcum  || ' AND SEG2.CALC_TYPE = ' || '''' || 'P' || ''''
        Let $WhereSelAcum = $WhereSelAcum  || $WhereRunTypeB
        Let $WhereSelAcum = $WhereSelAcum  || ' AND EXISTS (SELECT ' || '''' || 'X' || '''' || ' FROM PS_GP_RSLT_ACUM_VW AC'
        Let $WhereSelAcum = $WhereSelAcum  || '             WHERE AC.PIN_NUM = AT.PIN_NUM'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.EMPLID = AT.EMPLID'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.EMPL_RCD = AT.EMPL_RCD'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.ACM_FROM_DT BETWEEN '|| '''' || $Date01 || ''''
        Let $WhereSelAcum = $WhereSelAcum  || '             AND ' || '''' || $Date02 || ''''
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.GP_PAYGROUP = SEG2.GP_PAYGROUP'
        Let $WhereSelAcum = $WhereSelAcum  || '             AND AC.CAL_ID = SEG2.CAL_ID AND AC.CAL_RUN_ID = SEG2.CAL_RUN_ID'
        Let $WhereSelAcum = $WhereSelAcum  || '             ))'
        ! This Condition is fixed fo Acummulators and discard $WhereSelType condition
        Let $WhereSelAcum = $WhereSelAcum  || ' AND AT.ACM_FROM_DT BETWEEN '|| '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        Let $WhereSelType = ''

        !Let $WhereRslt  = ' AND AT.ACM_FROM_DT = ' || '''' || $Date01 || ''''
        !Let $WhereRslt  = $WhereRslt || ' AND AT.ACM_THRU_DT = ' || '''' || $Date02 || ''''
      when = 'DD'
      when = 'ER'

        If $SelOption = 'B'
            Let $WhereSelType = ' AND SEG.PYMT_DT BETWEEN ' || '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        Else
            Let $WhereSelType = ' AND SEG.SEG_END_DT BETWEEN ' || '''' || $Date01 || '''' || ' AND ' || '''' || $Date02 || ''''
        End-if

        Let $EntryTable = 'PS_GP_RSLT_ED_VW AT'
        Let $WhereSelAcum = ''
        !Let $WhereRslt  = ' AND AT.SLICE_BGN_DT >= ' || '''' || $Date01 || ''''
        !Let $WhereRslt  = $WhereRslt || ' AND AT.SLICE_END_DT <= ' || '''' || $Date02 || ''''
    End-Evaluate
    Do Get-Values
End-while
Let #amount_ir_emp = #amount_emp
End-Procedure Get-Irrf

!**************************************
begin-procedure  Get-Company-Descr
#debug show 'Procedure: Get-Company-Descr'
!**************************************
Let $CompanyNm = ''
Begin-Select
CO.DESCR

  Let $CompanyNm  = Rtrim(&CO.DESCR, ' ')

FROM PS_COMPANY_TBL CO
WHERE CO.COMPANY = $Company
AND   CO.EFFDT = (SELECT MAX(C.EFFDT)
                  FROM PS_COMPANY_TBL C
                  WHERE C.COMPANY = CO.COMPANY
                  AND C.EFFDT <= $EndDt)
End-Select
End-Procedure   Get-Company-Descr

!**************************************
Begin-Procedure Select-Employee-Data
#debug show 'Begin-Procedure Select-Employee-Data'
#debug show '   $Company               :' $Company
#debug show '   $EndDt                 :' $EndDt
#debug show '   $WhereClause           :' $WhereClause
#debug show '   $WherePayGroup         :' $WherePayGroup
#debug show '   $SecurityClausewithERN :' $SecurityClausewithERN
!**************************************
Let #TotalEmpl=0
Begin-Select
A.EMPLID
A.EFFDT
A.COMPANY
A.ESTABID       () On-Break Before=Print-EstabBefore After=Print-EstabAfter print=never level=1
ED.DESCR
A.GP_PAYGROUP
A.DEPTID        () On-Break Before=Print-PageE After=Print-PageS print=never level=2
A.SETID_DEPT
A.EMPL_RCD
A.PER_ORG
B.NAME_DISPLAY
DD.DESCR

  Let #Empl_Rcd      = &A.EMPL_RCD
  Let $Emplid        = Rtrim(&A.EMPLID, ' ')
  Let $Name          = Rtrim(&B.NAME_DISPLAY, ' ')
  Let $EmpEstab      = Rtrim(&A.ESTABID, ' ')
  Let $EmpEstabDESCR = Rtrim(&ED.DESCR, ' ')
  Do Select-Payee-Parm


    #debug show '$Emplid:   '  $Emplid
    #debug show '#Empl_Rcd: '  #Empl_Rcd
    #debug show '$Name:     '  $Name
    #debug show '$EmpEstab: '  $EmpEstab


  Let $DeptId     = Rtrim(&A.DEPTID, ' ')
  Let $SetID_Dept = Rtrim(&A.SETID_DEPT, ' ')
  Let $Dept_Descr = Rtrim(&DD.DESCR, ' ')

  Print $Chapa                   (+1,{d1})
  Print $Name                    (,{d2},45)
  Let #amountS_rt_emp = 0
  Let #amountS_de_emp = 0
  Let #amountS_ir_emp = 0

  !Cycle Dates
  Let $Init_Date = $From_date
  Do dtu-month-end($Init_Date, $End_Date)
  While $End_Date <= $Thru_date
      #Debug Show '    $Init_Date  :' $Init_Date
      #Debug Show '    $End_Date   :' $End_Date

      !Get Dates in Native Format
      Do convert-from-dtu-date($Init_Date, $Date01)
      Do convert-from-dtu-date($End_Date, $Date02)

      Do dtu-parse-date ($Init_Date, #MyYear, #MyMonth, #MyDay)
      Move #MyYear  to $MyYear '0000'
      Let $MyYear = substr($MyYear, 3, 2)
      Move #MyMonth to $MyMonth '00'

      !Months
      !Janeiro     - Jan
      !Fevereiro   - Fev
      !Março       - Mar
      !Abril       - Abr
      !Maio        - Mai
      !Junho       - Jun
      !Julho       - Jul
      !Agosto      - Ago
      !Setembro    - Set
      !Outubro     - Out
      !Novembro    - Nov
      !Dezembro    - Dez

      Evaluate $MyMonth
          When = '01'
            Let $MonthDescr = 'Jan'
          When = '02'
            Let $MonthDescr = 'Fev'
          When = '03'
            Let $MonthDescr = 'Mar'
          When = '04'
            Let $MonthDescr = 'Abr'
          When = '05'
            Let $MonthDescr = 'Mai'
          When = '06'
            Let $MonthDescr = 'Jun'
          When = '07'
            Let $MonthDescr = 'Jul'
          When = '08'
            Let $MonthDescr = 'Ago'
          When = '09'
            Let $MonthDescr = 'Set'
          When = '10'
            Let $MonthDescr = 'Out'
          When = '11'
            Let $MonthDescr = 'Nov'
          When = '12'
            Let $MonthDescr = 'Dez'
      End-Evaluate

      !Get RunControl selection Type
      #Debug show '     $Date01    :' $Date01
      #Debug show '     $Date02    :' $Date02
      #Debug show '     $SelOption :' $SelOption

      Do Get-Rend-Trib
      Do Get-Deductions
      Do Get-Irrf

      Let #amount_rt_dpto  = #amount_rt_dpto  + #amount_rt_emp
      Let #amount_ded_dpto = #amount_ded_dpto + #amount_ded_emp
      Let #amount_ir_dpto  = #amount_ir_dpto  + #amount_ir_emp

      Let #amountS_rt_emp = #amountS_rt_emp +  #amount_rt_emp
      Let #amountS_de_emp = #amountS_de_emp +  #amount_ded_emp
      Let #amountS_ir_emp = #amountS_ir_emp +  #amount_ir_emp

      Do Format-Number(#amount_rt_emp, $amount_rt_emp2,'9,999,999,999,999.99')
      Do Format-Number(#amount_ded_emp, $amount_ded_emp2,'9,999,999,999,999.99')
      Do Format-Number(#amount_ir_emp, $amount_ir_emp2,'9,999,999,999,999.99')

      Alter-Printer Point-size=#SizeSml Font=#FontStd

      Print $MonthDescr              (,{d2a})
      Print $MyYear                  (,{d2b})
      Print #amount_rt_emp           (,{d3a}) edit 9,999,999,999,999.99c
      Print #amount_ded_emp          (,{d4a}) edit 9,999,999,999,999.99c
      Print #amount_ir_emp           (,{d5a}) edit 9,999,999,999,999.99c

      !Calculate Next Begin/End Month
      Do dtu-add-months($Init_Date, 1, $Init_Date)
      Do dtu-month-end($Init_Date, $End_Date)

      if $verify = 'Y' AND $MyYear <> $MyYear2
          Do Print-Employee
      End-If

      Let $verify = 'Y'
      Let $MyYear2 = $MyYear
  End-While


  !Print sum of Employee

  Do Print-Employee



  Add 1 to #TotalEmpl

FROM PS_JOB A
    ,PS_PERSON_NAME B
    ,PS_DEPT_TBL DD
    ,PS_ESTAB_TBL ED
!    ,PS_FAST_SQR_SEC_VW SCRTY
WHERE A.COMPANY   = $Company
AND A.EMPLID      = B.EMPLID
AND A.EFFDT       = (SELECT MAX(AA.EFFDT)
                    FROM PS_JOB AA
                    WHERE AA.EMPLID = A.EMPLID
                    AND AA.EMPL_RCD = A.EMPL_RCD
                    AND AA.EFFDT   <= $EndDt)
AND A.EFFSEQ      = (SELECT MAX(AA.EFFSEQ)
                    FROM PS_JOB AA
                    WHERE AA.EMPLID = A.EMPLID
                    AND AA.EMPL_RCD = A.EMPL_RCD
                    AND AA.EFFDT   <= $EndDt)
AND DD.SETID      = A.SETID_DEPT
AND DD.DEPTID     = A.DEPTID
AND DD.EFFDT      = (SELECT MAX(DDD.EFFDT) FROM PS_DEPT_TBL DDD
                    WHERE DDD.SETID    = DD.SETID
                    AND   DDD.DEPTID   = DD.DEPTID
                    AND   DDD.EFFDT   <= $EndDt)
AND DD.EFF_STATUS = 'A'
AND ED.ESTABID = A.ESTABID
AND ED.EFFDT = (SELECT MAX(ED2.EFFDT)
                FROM PS_ESTAB_TBL ED2
                WHERE ED2.ESTABID = ED.ESTABID
                AND ED2.EFF_STATUS = 'A'
                AND ED2.EFFDT <= $EndDt)
AND ED.EFF_STATUS = 'A'
AND NOT (A.ACTION IN (SELECT ACTION FROM PS_ACTION_STAT_TBL WHERE EMPL_STATUS IN ('T','U')) AND A.EFFDT <= $BgnDt)
!AND A.EMPLID = SCRTY.EMPLID
[$WhereClause]
[$WherePayGroup]
![$SecurityClause]
[$SecurityClausewithERN]
ORDER BY A.ESTABID, A.DEPTID, A.EMPLID
End-Select
Do Print-PageT
show 'Empregados Procesados: ' #TotalEmpl
End-Procedure Select-Employee-Data

!**************************************
Begin-Procedure Select-Payee-Parm
#debug show 'Procedure: Select-Payee-Parm'
#debug show '   $Emplid   :' $Emplid
#debug show '   #Empl_Rcd :' #Empl_Rcd
#debug show '   $EndDt    :' $EndDt
!**************************************
Let $Chapa = $Emplid
Begin-Select
NN.REG_NUMBER_BRA       &NN.REG_NUMBER_BRA

  Let $RegNum = Rtrim(&NN.REG_NUMBER_BRA, ' ')
  If $RegNum <> ''
     Let $Chapa = $Emplid || ' - ' || $RegNum
  End-If

FROM PS_ADDL_INFO_BRA NN
WHERE NN.EMPLID = $Emplid
AND NN.EMPL_RCD = #Empl_Rcd
AND NN.EFFDT = (SELECT MAX(NNA.EFFDT)
                FROM PS_ADDL_INFO_BRA NNA
                WHERE NNA.EMPLID = NN.EMPLID
                AND NNA.EMPL_RCD = NN.EMPL_RCD
                AND NNA.EFFDT <= $EndDt)
End-Select
End-Procedure Select-Payee-Parm


!**************************************
Begin-Procedure Calc-EndDt
#debug show '** Calc-Dt **'
!**************************************
  let #AsofYear =  to_number($Year)
  if mod(#AsofYear, 4) = 0
    let #bis = 1
  else
    let #bis = 0
  end-if

  if  $Month = '01' OR $Month = '03' OR $Month = '05' OR $Month = '07' OR $Month = '08' OR $Month = '10' OR $Month = '12'
      let $EndDt =  $Year || '-' || $Month || '-' || '31'
  end-if

  if  $Month ='02'
      if #bis = 1
         let $EndDt = $Year || '-' || $Month || '-' || '29'
      else
         let $EndDt = $Year || '-' || $Month || '-' || '28'
      end-if
  end-if

  if  $Month = '04' OR $Month = '06' OR $Month = '09' OR $Month = '11'
        let $EndDt =  $Year || '-' || $Month || '-' || '30'
  end-if

  Do Convert-from-dtu-date($EndDt, $outE)
  Let $EndDt = $outE
  do Format-DateTime($BgnDt, $OutB,{DEFDMY}, '','')
  do Format-DateTime($EndDt, $OutE,{DEFDMY}, '', '')
  Let $Periodo = $outB || '  al  '|| $outE


  Let $ReportDTM = Substr($ReportDt, 1,2)
  Let $ReportDTD = Substr($ReportDt, 4,2)
  Let $ReportDTY = Substr($ReportDt, 7,4)
  Let $ReportDTF = $ReportDTD || '/'|| $ReportDTM || '/'|| $ReportDTY

End-Procedure Calc-EndDt


!**************************************
Begin-Procedure Print-PageE
#debug show '** Print-PageE **'
!**************************************
Alter-Printer Point-size=#SizeSml Font=#FontStd
Print 'UNIDADE:'                      (+2,{d1}) Bold
Print &A.DEPTID                       (,+1) Bold
Print &DD.DESCR                       (,+1) Bold
Print 'IDEmp - #Reg'                  (+2,{d1}) Bold
Print 'Nome'                          (,{d2}) Bold
Print 'Mês/Ano'                       (,{d2a}) Bold
Print 'REND. TRIB.'                   (,{d3}) Bold
Print 'DEDUÇÕES'                      (,{d4}) Bold
Print 'VALOR IRRF'                    (,{d5}) Bold
End-Procedure Print-PageE


!**************************************
Begin-Procedure Print-EstabBefore
#debug show '** Print-EstabBefore **'
!**************************************
    !Alter-Printer Point-size=#SizeStd Font=#FontStd
    !Print 'Estabelecimiento:'                (+3, {d1}) Bold
    !Print $EmpEstab                          (  ,  +1 ) Bold
    !Print $EmpEstabDESCR                     (  ,  +1 ) Bold
End-Procedure Print-EstabBefore


!**************************************
Begin-Procedure Print-EstabAfter
#debug show '** Print-EstabAfter **'
!**************************************
    Alter-Printer Point-size=#SizeSml Font=#FontStd
    graphic (+1, 1, 135) horz-line 20
    Print ' Soma Estabelecimiento'      (+2, {d1}) Bold
    Print #amount_rt_estab              (,{d3a}) edit 9,999,999,999,999.99c
    Print #amount_ded_estab             (,{d4a}) edit 9,999,999,999,999.99c
    Print #amount_ir_estab              (,{d5a}) edit 9,999,999,999,999.99c

    Let #amount_rt_estab  = 0
    Let #amount_ded_estab = 0
    Let #amount_ir_estab  = 0

    new-page
End-Procedure Print-EstabAfter

!**************************************
Begin-Procedure Print-PageS
#debug show '** Print-PageS **'
!**************************************
    Alter-Printer Point-size=#SizeSml Font=#FontStd
    graphic (+1, 1, 135) horz-line 5

    Print 'Soma Unidade'                  (+2, {d1}) Bold
    Print #amount_rt_dpto                 (,{d3a}) edit 9,999,999,999,999.99c
    Print #amount_ded_dpto                (,{d4a}) edit 9,999,999,999,999.99c
    Print #amount_ir_dpto                 (,{d5a}) edit 9,999,999,999,999.99c

    Let #amount_rt_cia  = #amount_rt_cia  + #amount_rt_dpto
    Let #amount_ded_cia = #amount_ded_cia + #amount_ded_dpto
    Let #amount_ir_cia  = #amount_ir_cia  + #amount_ir_dpto

    Let #amount_rt_estab  = #amount_rt_estab  + #amount_rt_dpto
    Let #amount_ded_estab = #amount_ded_estab + #amount_ded_dpto
    Let #amount_ir_estab  = #amount_ir_estab  + #amount_ded_dpto

    Let #amount_rt_dpto = 0
    Let #amount_ded_dpto= 0
    Let #amount_ir_dpto = 0
End-Procedure Print-PageS

!**************************************
Begin-Procedure Print-PageT
#debug show '** Print-PageT **'
!**************************************
 Alter-Report
    HEADING = 'Two'

Alter-Printer Point-size = #SizeStd Font = #FontStd
Print 'TOTAL GERAL DE RENDIMIENTO TRIBUTAVEL'   (+3,{d1}) Bold
Print #amount_rt_cia                            (,{d6}) edit 9,999,999,999,999.99c
Print 'TOTAL GERAL DEDUÇÕES'                    (+2,{d1}) Bold
Print #amount_ded_cia                           (,{d6}) edit 9,999,999,999,999.99c
Print 'TOTAL GERAL DE IRRF'                     (+2,{d1}) Bold
Print #amount_ir_cia                            (,{d6}) edit 9,999,999,999,999.99c
Alter-Printer Point-size=#SizeSml Font=#FontStd

End-Procedure Print-PageT

!**************************************
Begin-Procedure Print-Employee
#debug show '** Print-Employee **'
!**************************************
    Print ' '                             (+1,)
    Print 'Soma do empregado'             (+1, {d2}) Bold
    Print #amountS_rt_emp                 (,{d3a}) edit 9,999,999,999,999.99c Bold
    Print #amountS_de_emp                 (,{d4a}) edit 9,999,999,999,999.99c Bold
    Print #amountS_ir_emp                 (,{d5a}) edit 9,999,999,999,999.99c Bold
    Print ' '                             (+2,)


    Let #amountS_rt_emp = 0
    Let #amountS_de_emp = 0
    Let #amountS_ir_emp = 0
End-Procedure Print-Employee

!**************************************
#Include 'reset.sqc'     !Reset Printer procedure
#Include 'number.sqc'    !Routines to format numbers
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'useprntr.sqc'  !Indicate which Printer to use for reports
#include 'hrsecty.sqc'   !Get SQR Security parameters
#include 'getcombr.sqc'  !Get selected fields from Company Table and Brazil Fields