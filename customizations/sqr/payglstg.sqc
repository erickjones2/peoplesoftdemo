!***********************************************************************
!  PAYGLSTG:  Common procedures used by GL Interface Process           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:15:43:40                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

!***********************************************************************
! Procedure:   GET-SEQNUM
! Descr:
!***********************************************************************
begin-procedure Get-Seqnum (#max_line, :#seq_no, :#line_no)

  let #line_no = #line_no + 1
  if #line_no > #max_line
      let #seq_no  = #seq_no + 1
      let #line_no = 1
  end-if

end-procedure

!***********************************************************************
! Procedure:   GET-MAX-SEQ-NUM
! Descr:
!***********************************************************************
begin-procedure Get-Max-Seq-Num ($dt, :#seq_no)

Begin-Select

Max(SEQNUM)     &SeqNum

  let #seq_no       = &SeqNum

FROM PS_GL_GEN_HISTORY
WHERE RUN_DT = $dt
End-Select

end-procedure

!***********************************************************************
! Procedure:   GET-MAX-CNTRL-NUM
! Descr:
!***********************************************************************
begin-procedure Get-Max-Cntrl-Num ($dt, :#run_cntrl_no, :#seq_no)

  let #run_cntrl_no = 0
  let #seq_no       = 0

Begin-Select

Max(GL_RUN_NUM) &GL_Run_Num
Max(SEQNUM)     &SeqNum

  let #run_cntrl_no = &GL_Run_Num
  let #seq_no       = &SeqNum

FROM PS_GL_GEN_HISTORY
WHERE RUN_DT = $dt
End-Select

  let #run_cntrl_no = #run_cntrl_no + 1

end-procedure

!***********************************************************************
! Procedure:   ADD-TO-GL-RUN-HISTORY
! Descr:
!***********************************************************************
begin-procedure Add-to-GL-Run-History  ($prgm_name, $dt, #run_cntrl_num, #seq_no, $runid,
                                        $company, $paygroup, $period_dt)

  let $_err-statement1 = $prgm_name || ', Insert Error - ADD-TO-GL-RUN-HISTORY'
  let $_err-statement2 = 'Bind Variables: Run_Dt: '||$dt ||
                        ', Acctg Dt: '||$period_dt

begin-SQL On-Error=SQL-Statement-Error
INSERT INTO PS_GL_GEN_HISTORY
(RUN_DT,
 SEQNUM,
 GL_RUN_NUM,
 RUN_ID,
 COMPANY,
 PAYGROUP,
 PAY_END_DT,
 GL_GEN_STATUS,
 PROGRAM_ID,
 RECEIVED_FLAG)
VALUES
($dt,
 #seq_no,
 #run_cntrl_num,
 $runid,
 $company,
 $paygroup,
 $period_dt,
 'N',
 $prgm_name,
 'N')
end-SQL
end-procedure

!***********************************************************************
! Procedure:   UPDATE-ACCTG-LN-SEQ-NUM
! Descr:
!***********************************************************************
begin-procedure Update-Acctg-Ln-Seq-Num ($prgm_name, $dt, $proc_instance, $continue, #seq_no)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Update-Error - UPDATE-ACCTG_LN-SEQ-NUM'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance
  if $continue = 'Y'
      let $WhereSeqNum = 'AND SEQNUM = 0'
  else
      let $WhereSeqNum = ''
  end-if

Begin-SQL On-Error=SQL-Statement-Error

UPDATE PS_HR_ACCTG_LN_STG
SET SEQNUM  = SEQNUM + #seq_no
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
  [$WhereSeqNum]
End-SQL

end-procedure

!***********************************************************************
! Procedure:   UPDATE-ACCTG-LN-SEQ-NUM-KK
! Descr:
!***********************************************************************
begin-procedure Update-Acctg-Ln-Seq-Num-KK ($prgm_name, $dt, $proc_instance, $continue, #seq_no)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Update-Error - UPDATE-ACCTG_LN-SEQ-NUM-KK'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance
  if $continue = 'Y'
      let $WhereSeqNum = 'AND SEQNUM = 0'
  else
      let $WhereSeqNum = ''
  end-if

Begin-SQL On-Error=SQL-Statement-Error

UPDATE PS_HP_KK_EXP_STG
SET SEQNUM  = SEQNUM + #seq_no
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
  [$WhereSeqNum]
End-SQL

end-procedure

!***********************************************************************
! Procedure:   UPDATE-ACCTG-LN-SEQ-NUM-KK-ENC
! Descr:
!***********************************************************************
begin-procedure Update-Acctg-Ln-Seq-Num-KK-ENC ($prgm_name, $dt, $proc_instance, $continue, #seq_no)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Update-Error - UPDATE-ACCTG_LN-SEQ-NUM-KK-ENC'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance
  if $continue = 'Y'
      let $WhereSeqNum = 'AND SEQNUM = 0'
  else
      let $WhereSeqNum = ''
  end-if

Begin-SQL On-Error=SQL-Statement-Error

UPDATE PS_HP_KK_ENC_STG
SET SEQNUM  = SEQNUM + #seq_no
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
  [$WhereSeqNum]
End-SQL

end-procedure

!***********************************************************************
! Procedure:   CLEAR-ACCTG-LN-STG
! Descr:
!***********************************************************************
begin-procedure Clear-Acctg-Ln-Stg ($prgm_name, $dt, $proc_instance)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Update-Error - CLEAR-ACCTG-LN-STG'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance

Begin-SQL On-Error=SQL-Statement-Error

DELETE FROM PS_HR_ACCTG_LN_STG
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
End-SQL


end-procedure

!***********************************************************************
! Procedure:   CLEAR-ACCTG-LN-STG-KK
! Descr:
!***********************************************************************
begin-procedure Clear-Acctg-Ln-Stg-KK ($prgm_name, $dt, $proc_instance)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Update-Error - CLEAR-ACCTG-LN-STG-KK'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance

Begin-SQL On-Error=SQL-Statement-Error

DELETE FROM PS_HP_KK_EXP_STG
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
End-SQL

end-procedure

!***********************************************************************
! Procedure:   CLEAR-ACCTG-LN-STG-KK-ENC
! Descr:
!***********************************************************************
begin-procedure Clear-Acctg-Ln-Stg-KK-ENC ($prgm_name, $dt, $proc_instance)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Update-Error - CLEAR-ACCTG-LN-STG-KK-ENC'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance

Begin-SQL On-Error=SQL-Statement-Error

DELETE FROM PS_HP_KK_ENC_STG
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
End-SQL

end-procedure

!***********************************************************************
! Procedure:   COPY-FROM-ACCTG-LN-STG
! Descr:
!***********************************************************************
begin-procedure Copy-From-Acctg-Ln-Stg ($prgm_name, $dt, $proc_instance)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Insert-Error - COPY-FROM-ACCTG-LN-STG'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance

begin-SQL On-Error=SQL-Statement-Error
INSERT INTO PS_HR_ACCTG_LINE
(RUN_DT,
 SEQNUM,
 LINE_NBR,
 KK_AMOUNT_TYPE,
 AUDIT_ACTN,
 IN_PROCESS_FLG,
 BUDGET_LINE_STATUS,
 BUDGET_DT,
 BUSINESS_UNIT_GL,
 JOURNAL_ID,
 JOURNAL_DATE,
 JOURNAL_LINE,
 ACCOUNT,
 DEPTID,
 PROJECT_ID,
 PRODUCT,
 FUND_CODE,
 PROGRAM_CODE,
 CLASS_FLD,
 AFFILIATE,
 OPERATING_UNIT,
 ALTACCT,
 BUDGET_REF,
 CHARTFIELD1,
 CHARTFIELD2,
 CHARTFIELD3,
 AFFILIATE_INTRA1,
 AFFILIATE_INTRA2,
 BUSINESS_UNIT_PC,
 ACTIVITY_ID,
 RESOURCE_TYPE,
 RESOURCE_CATEGORY,
 RESOURCE_SUB_CAT,
 STATISTICS_CODE,
 MONETARY_AMOUNT,
 FOREIGN_AMOUNT,
 FOREIGN_CURRENCY,
 RT_TYPE,
 RATE_MULT,
 RATE_DIV,
 STATISTIC_AMOUNT,
 JRNL_LN_REF,
 OPEN_ITEM_STATUS,
 LINE_DESCR,
 JRNL_LINE_STATUS,
 JOURNAL_LINE_DATE,
 BUSINESS_UNIT,
 APPL_JRNL_ID,
 ACCOUNTING_DT,
 GL_DISTRIB_STATUS,
 PROCESS_INSTANCE,
 CURRENCY_CD,
 ACCOUNTING_PERIOD,
 FISCAL_YEAR,
 LEDGER,
 LEDGER_GROUP,
 USE_DISTRIBUTION)

SELECT
 RUN_DT,
 SEQNUM,
 LINE_NBR,
 KK_AMOUNT_TYPE,
 AUDIT_ACTN,
 IN_PROCESS_FLG,
 BUDGET_LINE_STATUS,
 BUDGET_DT,
 BUSINESS_UNIT_GL,
 JOURNAL_ID,
 JOURNAL_DATE,
 JOURNAL_LINE,
 ACCOUNT,
 DEPTID,
 PROJECT_ID,
 PRODUCT,
 FUND_CODE,
 PROGRAM_CODE,
 CLASS_FLD,
 AFFILIATE,
 OPERATING_UNIT,
 ALTACCT,
 BUDGET_REF,
 CHARTFIELD1,
 CHARTFIELD2,
 CHARTFIELD3,
 AFFILIATE_INTRA1,
 AFFILIATE_INTRA2,
 BUSINESS_UNIT_PC,
 ACTIVITY_ID,
 RESOURCE_TYPE,
 RESOURCE_CATEGORY,
 RESOURCE_SUB_CAT,
 STATISTICS_CODE,
 MONETARY_AMOUNT,
 FOREIGN_AMOUNT,
 FOREIGN_CURRENCY,
 RT_TYPE,
 RATE_MULT,
 RATE_DIV,
 STATISTIC_AMOUNT,
 JRNL_LN_REF,
 OPEN_ITEM_STATUS,
 LINE_DESCR,
 JRNL_LINE_STATUS,
 JOURNAL_LINE_DATE,
 BUSINESS_UNIT,
 APPL_JRNL_ID,
 ACCOUNTING_DT,
 GL_DISTRIB_STATUS,
 PROCESS_INSTANCE,
 CURRENCY_CD,
 ACCOUNTING_PERIOD,
 FISCAL_YEAR,
 LEDGER,
 LEDGER_GROUP,
 USE_DISTRIBUTION

FROM PS_HR_ACCTG_LN_STG
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
End-SQL

end-procedure

!***********************************************************************
! Procedure:   COPY-FROM-ACCTG-LN-STG-KK
! Descr:
!***********************************************************************
begin-procedure Copy-From-Acctg-Ln-Stg-KK ($prgm_name, $dt, $proc_instance)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Insert-Error - COPY-FROM-ACCTG-LN-STG-KK'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance

begin-SQL On-Error=SQL-Statement-Error
INSERT INTO PS_HP_KK_EXP_LN
(RUN_DT,
 SEQNUM,
 LINE_NBR,
 KK_AMOUNT_TYPE,
 AUDIT_ACTN,
 IN_PROCESS_FLG,
 BUDGET_LINE_STATUS,
 BUDGET_DT,
 BUSINESS_UNIT_GL,
 JOURNAL_ID,
 JOURNAL_DATE,
 JOURNAL_LINE,
 ACCOUNT,
 DEPTID,
 PROJECT_ID,
 PRODUCT,
 FUND_CODE,
 PROGRAM_CODE,
 CLASS_FLD,
 AFFILIATE,
 OPERATING_UNIT,
 ALTACCT,
 BUDGET_REF,
 CHARTFIELD1,
 CHARTFIELD2,
 CHARTFIELD3,
 AFFILIATE_INTRA1,
 AFFILIATE_INTRA2,
 BUSINESS_UNIT_PC,
 ACTIVITY_ID,
 RESOURCE_TYPE,
 RESOURCE_CATEGORY,
 RESOURCE_SUB_CAT,
 STATISTICS_CODE,
 MONETARY_AMOUNT,
 FOREIGN_AMOUNT,
 FOREIGN_CURRENCY,
 RT_TYPE,
 RATE_MULT,
 RATE_DIV,
 STATISTIC_AMOUNT,
 JRNL_LN_REF,
 OPEN_ITEM_STATUS,
 LINE_DESCR,
 JRNL_LINE_STATUS,
 JOURNAL_LINE_DATE,
 BUSINESS_UNIT,
 APPL_JRNL_ID,
 ACCOUNTING_DT,
 GL_DISTRIB_STATUS,
 PROCESS_INSTANCE,
 CURRENCY_CD,
 ACCOUNTING_PERIOD,
 FISCAL_YEAR,
 LEDGER,
 LEDGER_GROUP,
 USE_DISTRIBUTION,
 HP_KK_DOC_ID,
 HP_FISCAL_YEAR,
 HP_BUDGET_YEAR,
 HP_KK_DOC_LINE_NBR,
 KK_PROCESS_PRIOR
 )

SELECT
 RUN_DT,
 SEQNUM,
 LINE_NBR,
 KK_AMOUNT_TYPE,
 AUDIT_ACTN,
 IN_PROCESS_FLG,
 BUDGET_LINE_STATUS,
 BUDGET_DT,
 BUSINESS_UNIT_GL,
 JOURNAL_ID,
 JOURNAL_DATE,
 JOURNAL_LINE,
 ACCOUNT,
 DEPTID,
 PROJECT_ID,
 PRODUCT,
 FUND_CODE,
 PROGRAM_CODE,
 CLASS_FLD,
 AFFILIATE,
 OPERATING_UNIT,
 ALTACCT,
 BUDGET_REF,
 CHARTFIELD1,
 CHARTFIELD2,
 CHARTFIELD3,
 AFFILIATE_INTRA1,
 AFFILIATE_INTRA2,
 BUSINESS_UNIT_PC,
 ACTIVITY_ID,
 RESOURCE_TYPE,
 RESOURCE_CATEGORY,
 RESOURCE_SUB_CAT,
 STATISTICS_CODE,
 MONETARY_AMOUNT,
 FOREIGN_AMOUNT,
 FOREIGN_CURRENCY,
 RT_TYPE,
 RATE_MULT,
 RATE_DIV,
 STATISTIC_AMOUNT,
 JRNL_LN_REF,
 OPEN_ITEM_STATUS,
 LINE_DESCR,
 JRNL_LINE_STATUS,
 JOURNAL_LINE_DATE,
 BUSINESS_UNIT,
 APPL_JRNL_ID,
 ACCOUNTING_DT,
 GL_DISTRIB_STATUS,
 PROCESS_INSTANCE,
 CURRENCY_CD,
 ACCOUNTING_PERIOD,
 FISCAL_YEAR,
 LEDGER,
 LEDGER_GROUP,
 USE_DISTRIBUTION,
 HP_KK_DOC_ID,
 HP_FISCAL_YEAR,
 HP_BUDGET_YEAR,
 HP_KK_DOC_LINE_NBR,
 KK_PROCESS_PRIOR

FROM PS_HP_KK_EXP_STG
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
End-SQL

end-procedure

!***********************************************************************
! Procedure:   COPY-FROM-ACCTG-LN-STG-KK-ENC
! Descr:
!***********************************************************************
begin-procedure Copy-From-Acctg-Ln-Stg-KK-ENC ($prgm_name, $dt, $proc_instance)

  let #proc_instance  = $proc_instance

  let $_err-statement1 = $prgm_name || ', Insert-Error - COPY-FROM-ACCTG-LN-STG-KK-ENC'
  let $_err-statement2 = 'Bind Varables: PROGRAM NAME '||$prgm_name||
                        ', RUN DATE '||$dt||
                        ', PROCESS INSTANCE '||$proc_instance

begin-SQL On-Error=SQL-Statement-Error
INSERT INTO PS_HP_KK_ENC_LN
(RUN_DT,
 SEQNUM,
 LINE_NBR,
 KK_AMOUNT_TYPE,
 AUDIT_ACTN,
 IN_PROCESS_FLG,
 BUDGET_LINE_STATUS,
 BUDGET_DT,
 BUSINESS_UNIT_GL,
 JOURNAL_ID,
 JOURNAL_DATE,
 JOURNAL_LINE,
 ACCOUNT,
 DEPTID,
 PROJECT_ID,
 PRODUCT,
 FUND_CODE,
 PROGRAM_CODE,
 CLASS_FLD,
 AFFILIATE,
 OPERATING_UNIT,
 ALTACCT,
 BUDGET_REF,
 CHARTFIELD1,
 CHARTFIELD2,
 CHARTFIELD3,
 AFFILIATE_INTRA1,
 AFFILIATE_INTRA2,
 BUSINESS_UNIT_PC,
 ACTIVITY_ID,
 RESOURCE_TYPE,
 RESOURCE_CATEGORY,
 RESOURCE_SUB_CAT,
 STATISTICS_CODE,
 MONETARY_AMOUNT,
 FOREIGN_AMOUNT,
 FOREIGN_CURRENCY,
 RT_TYPE,
 RATE_MULT,
 RATE_DIV,
 STATISTIC_AMOUNT,
 JRNL_LN_REF,
 OPEN_ITEM_STATUS,
 LINE_DESCR,
 JRNL_LINE_STATUS,
 JOURNAL_LINE_DATE,
 BUSINESS_UNIT,
 APPL_JRNL_ID,
 ACCOUNTING_DT,
 GL_DISTRIB_STATUS,
 PROCESS_INSTANCE,
 CURRENCY_CD,
 ACCOUNTING_PERIOD,
 FISCAL_YEAR,
 LEDGER,
 LEDGER_GROUP,
 USE_DISTRIBUTION,
 HP_KK_DOC_ID,
 HP_FISCAL_YEAR,
 HP_BUDGET_YEAR,
 HP_KK_DOC_LINE_NBR
  )

SELECT
 RUN_DT,
 SEQNUM,
 LINE_NBR,
 KK_AMOUNT_TYPE,
 AUDIT_ACTN,
 IN_PROCESS_FLG,
 BUDGET_LINE_STATUS,
 BUDGET_DT,
 BUSINESS_UNIT_GL,
 JOURNAL_ID,
 JOURNAL_DATE,
 JOURNAL_LINE,
 ACCOUNT,
 DEPTID,
 PROJECT_ID,
 PRODUCT,
 FUND_CODE,
 PROGRAM_CODE,
 CLASS_FLD,
 AFFILIATE,
 OPERATING_UNIT,
 ALTACCT,
 BUDGET_REF,
 CHARTFIELD1,
 CHARTFIELD2,
 CHARTFIELD3,
 AFFILIATE_INTRA1,
 AFFILIATE_INTRA2,
 BUSINESS_UNIT_PC,
 ACTIVITY_ID,
 RESOURCE_TYPE,
 RESOURCE_CATEGORY,
 RESOURCE_SUB_CAT,
 STATISTICS_CODE,
 MONETARY_AMOUNT,
 FOREIGN_AMOUNT,
 FOREIGN_CURRENCY,
 RT_TYPE,
 RATE_MULT,
 RATE_DIV,
 STATISTIC_AMOUNT,
 JRNL_LN_REF,
 OPEN_ITEM_STATUS,
 LINE_DESCR,
 JRNL_LINE_STATUS,
 JOURNAL_LINE_DATE,
 BUSINESS_UNIT,
 APPL_JRNL_ID,
 ACCOUNTING_DT,
 GL_DISTRIB_STATUS,
 PROCESS_INSTANCE,
 CURRENCY_CD,
 ACCOUNTING_PERIOD,
 FISCAL_YEAR,
 LEDGER,
 LEDGER_GROUP,
 USE_DISTRIBUTION,
 HP_KK_DOC_ID,
 HP_FISCAL_YEAR,
 HP_BUDGET_YEAR,
 HP_KK_DOC_LINE_NBR

FROM PS_HP_KK_ENC_STG
WHERE RUN_DT           = $dt
  AND PROCESS_INSTANCE = #proc_instance
End-SQL

end-procedure
