!***********************************************************************
!  GPINYE05: Form 6A                                                   *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/12/30:13:52:19                                 !
!       $Release:  HR92                                                !
!      $Revision:  105                                                 !
!***********************************************************************
!  Modification History:                                               *
!                                                                      *
!  Date         Incident                                               *
! ----------    -----------                                            *
! DD/MM/YYYY                                                           *
! 23/11/2003    143428   The SQR has been updated to change the        *
!                        values and format for Form 6A as described    *
!                        in ice attachment.                            *
!           1164863000   Spelling correction on period                 *
!***********************************************************************
#include 'setenv.sqc'           !Set environment
#include 'gprnctl1.sqc'         !Get run control parameter values
#define Col_1                   1
#define Col_2                   120
#define Col_4                   90
#define Col_5                   100
#define Col_6                   5
#define Col_1                   1
#define Col_2                   120
#define Col_3                   70
#define Col_4                   90
#define Col_5                   5
#define Col_6                   5
#define Col_10                  10
#define Col_20                  20
#define Col_30                  30
#define Col_40                  40
#define Col_50                  50
#define Col_60                  60
#define Col_70                  80
#define Col_70A                 69
#define Col_80                  80
#define Col_90                  90
#define Col_100                 100
#define Col_110                 110
#define Col_120                 120
#define Col_130                 130
#define Col_140                 140
#define Col_150                 150
#define Col_160                 160
#define Col_170                 170
#define Col_03                  03
#define Col_15                  15
#define Col_25                  33
#define Col_35                  35
#define Col_45                  45
#define Col_52                  56
#define Col_58                  56
#define Col_55                  63
#define Col_65                  65
#define Col_74                  74
#define Col_75                  75
#define Col_85                  85
#define Col_95                  103
#define Col_95a                 90
#define Col_105                 105
#define Col_115                 115
#define Col_125                 134
#define Col_135                 135
#define Col_145                 154
#define Col_155                 155
#define Col_165                 156
#define col_123                 123
#define Col_92                  98
#define Col_91                  95
#define Col_107                 117
!***********************************************************************
Begin-Setup
!***********************************************************************
#Include 'ptset02.sqc'
Create-Array name=F6A_Mthly_Val size=13
Field = month:char
Field = wgs:decimal
Field = pf:decimal
Field = er:decimal
Field = erpen:decimal
Field = rem:decimal
Field = dli:decimal
Field = admin:decimal
Field = edli:decimal
Field = col567:decimal
End-Setup
!***********************************************************************
Begin-Heading 4
!***********************************************************************
!#Include 'stdhdg01.sqc'
End-Heading
!***********************************************************************
Begin-Report
!***********************************************************************
   show 'Begin'
Do Intialize-Variables
Do Init-Report
End-Report
!***********************************************************************
Begin-Procedure Init-Report
!***********************************************************************
Let #counter =  0
Let #rowcnt  =  1
Let #rowno   =  1
Let #Line    = 30
Let #col     = 10
Let #val     = 50
Let #Printcounter = 1
Let #i = 0
Create-Array name=pfemp size=5000
Field = emplid:char
Do Init-Datetime                ! called from datetime.sqc
Do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)
Do Init-Number                  ! called from number.sqc
Do Get-Language-Codes           ! called from prcslng.sqc
Do Stdapi-Init
Do Stdapi-Term
Do Get_Run_Cntrl_Dtls
Do Get-Strings-Table
Do Rep_Header
Let #Linecntr = #Line
Do Get-Emplid-Tmp
End-Procedure !Init-Report
!***********************************************************************
Begin-Procedure Intialize-Variables
!***********************************************************************
Let $ReportID       = 'GPINYE05'
Let $ReportTitle    = $REC_RPT
Move 0 To #count
End-Procedure ! Intialize-Variables
!***********************************************************************
Begin-Procedure Rep_Header
!***********************************************************************
Let #Line = 1
PRINT '(FOR UNEXEMPTED ESTABLISHMENTS'' ONLY)'                   (#LINE,) CENTER  font=4  point-size=8
ADD 1 TO #LINE
PRINT 'FORM 6A'                                                (#LINE,) CENTER  BOLD font=4  point-size=10
ADD 1 TO #LINE
PRINT 'THE EMPLOYEES'' PROVIDENT FUND SCHEME,1952' (#LINE,63)  BOLD font=4 point-size=10
ADD 1 TO #LINE
PRINT '(PARAGRAPH 43)'(#LINE,) CENTER BOLD font=4 point-size=8
ADD 1 TO #LINE
PRINT 'AND'                                                    (#LINE,1) CENTER BOLD font=4
ADD 1 TO #LINE
PRINT 'THE EMPLOYEES PENSION SCHEME,1995'  (#LINE,68)  BOLD font=4 point-size=10
ADD 1 TO #LINE
PRINT '[PARAGRAPH 20(4)]' (#LINE,) CENTER BOLD font=4 point-size=8
End-Procedure ! Rep_Header
!***********************************************************************
Begin-Procedure Get_Run_Cntrl_Dtls
!***********************************************************************
Begin-Select
RNCT.OPRID
RNCT.RUN_CNTL_ID
RNCT.LANGUAGE_CD
RNCT.LANGUAGE_OPTION
RNCT.ESTABID
RNCT.ENTRY_TYPE_ID
RNCT.PIN_NUM
RNCT.CAL_RUN_ID
RNCT.CAL_PRD_ID
RNCT.GP_GENRPT_SORT_OPT
RNCT.CURRENCY_CD
RNCT.GB_GROUP_ID
RNCT.GB_EFFDT
RNCT.GB_REFINE_DATE
RNCT.VERSIONGBQDM
RNCT.GP_GENRPT_BLD_GRP
RNCT.GPIN_REPORT_ID
RNCT.BGN_DT
RNCT.END_DT
     !Inserted
     Move &RNCT.BGN_DT To $bgn_dt 'mm-dd-yyyy'
     Extract $year from $bgn_dt 6 4
     Move &RNCT.END_DT To $end_dt 'mm-dd-yyyy'
     Extract $year2 from $end_dt 6 4
     Extract $mth2 from $end_dt 0 2
     move $mth2 to #mth
     move $year2 to #year2
     If ( #mth > 3 )
        let #year = #year2
        let #year2 = #year2 + 1
     else
        let #year = #year2 - 1
        let #year2 = #year2
     end-if
     move #year2 to $year2
     move #year to $year1
FROM PS_GPIN_PR_RC RNCT
WHERE  RNCT.OPRID = $prcs_oprid    AND
RNCT.RUN_CNTL_ID =  $prcs_run_cntl_id
End-Select
End-Procedure Get_Run_Cntrl_Dtls
!***********************************************************************
Begin-Procedure Get-Emplid-Tmp
!***********************************************************************
Let $SAV_EMPLID = ''
Let $SAV_ESTABID = ''
let #Printcounter=1
!Inserted
let $wherecond = ''
if rtrim(ltrim(&RNCT.ESTABID, ' '), ' ') <> ''
let $wherecond = 'AND A.GP_GENRPT_BREAK1 = ''' || &RNCT.ESTABID || ''' '
end-if
LET #EST_amtwgs  = 0
LET #EST_amtpf   = 0
LET #EST_amter   = 0
LET #EST_amterpe = 0
LET #EST_adv_amt = 0
Begin-Select
A.EMPLID
A.CAL_RUN_ID
  Move &A.CaL_RUN_ID To $cal_run_id
A.EMPL_RCD
  Move &A.EMPL_RCD To #empl_rcd
A.GP_PAYGROUP
  Move &A.GP_PAYGROUP To $gp_paygroup
A.CAL_ID
  Move &A.CAL_ID To $cal_id
A.ORIG_CAL_RUN_ID
A.RSLT_SEG_NUM
  Move  &A.RSLT_SEG_NUM  To #rslt_seg_num
A.RSLT_VER_NUM
  Move  &A.RSLT_VER_NUM To  #rslt_ver_num
A.RSLT_REV_NUM
  Move &A.RSLT_REV_NUM To #rslt_rev_num
A.GP_GENRPT_BREAK1
A.PRD_END_DT
  !Inserted
A.PRD_BGN_DT
   Move &A.PRD_END_DT To $prd_end_dt 'mm-dd-yyyy'
   If $SAV_ESTABID = ''
     do estab-tot
     Let $SAV_ESTABID = &A.GP_GENRPT_BREAK1
     Do Get-Estab-Info
     Do Print-Page1-Header
   else
      If $SAV_ESTABID <> &A.GP_GENRPT_BREAK1
        Do Print-Empl
        Do Print-Page2-Header
        Do Print-array
        NEW-PAGE
        do estab-tot
        Do Rep_Header
        Let $SAV_ESTABID = &A.GP_GENRPT_BREAK1
        Do Get-Estab-Info
        Do Print-Page1-Header
      End-if
      End-if
    If $SAV_EMPLID = ''
      Do Empl-Tot-Init
      Let $SAV_EMPLID = &A.EMPLID
      Do Get-Estab-Info
    End-If
    If $SAV_EMPLID <> &A.EMPLID
      Do Print-Empl
      Do Empl-Tot-Init
      Let $SAV_EMPLID = &A.EMPLID
    End-If
    Do Get-Report-Employees
FROM PS_GPIN_PR_TMP A, PS_GPIN_PF_ENROLL B
WHERE A.JOBINSTANCE = #prcs_job_instance
AND A.EMPLID           = B.EMPLID
AND B.EFFDT            = (SELECT MAX(C.EFFDT)
FROM PS_GPIN_PF_ENROLL C
WHERE C.EMPLID = B.EMPLID
AND   C.EFFDT <= &RNCT.END_DT)
AND B.EFF_STATUS      = 'A'
[$wherecond]    !Inserted
ORDER BY A.GP_GENRPT_BREAK1, A.EMPLID
End-Select
Do Print-Empl   !Inserted
Do Print-Page2-Header
Do Print-array
NEW-PAGE
End-Procedure  ! Get-Emplid-Tmp
!***********************************************************************
Begin-Procedure Get-Report-Employees
!***********************************************************************
Begin-Select
TMP3.JOBINSTANCE
TMP3.GP_PAYGROUP
TMP3.EMPLID
TMP3.GPIN_FLD_NAME
TMP3.CALC_RSLT_VAL
   Move &TMP3.GPIN_FLD_NAME To $gpin_fld_name
   Move &TMP3.CALC_RSLT_VAL To #calc_rslt_val
   Let $gpin_fld_name = rtrim(ltrim($gpin_fld_name, ' '), ' ')
   Do Get-Acc-Nbr
   Do Get-Name
   Do Get-PF-Cap-Lmt
   Do Load-Array
FROM PS_GPIN_PR_TMP3 TMP3
WHERE TMP3.JOBINSTANCE = #prcs_job_instance
and    TMP3.EMPLID = $SAV_EMPLID
AND TMP3.CAL_RUN_ID = &a.cal_run_id
AND TMP3.EMPL_RCD = &a.empl_rcd
AND TMP3.GP_PAYGROUP = &a.gp_paygroup
AND TMP3.CAL_ID = &a.cal_id
AND TMP3.ORIG_CAL_RUN_ID=&A.ORIG_CAL_RUN_ID
AND TMP3.RSLT_SEG_NUM = &a.rslt_seg_num
AND TMP3.RSLT_VER_NUM = &a.rslt_ver_num
AND TMP3.RSLT_REV_NUM = &a.rslt_rev_num
AND TMP3.GPIN_FLD_NAME  LIKE  'F6A%'
End-Select
End-Procedure ! Get-Report-Employees
Begin-Procedure Empl-Tot-Init
Let #amtwgs   = 0
Let #amtpf    = 0
Let #amter    = 0
Let #amterpen = 0
Let #amtpfvol = 0
End-Procedure ! Empl-Tot-Init
Begin-Procedure Estab-Tot
let #rem_tot   = 0
let #erpen_tot = 0
let #dli_tot   = 0
let #admin_tot = 0
let #edli_tot  = 0
let #COL567_tot  = 0   !Inserted
Let #counter =  0
While #counter < 12
!Put ' ' 0 0 0 0 0 0 0 0 into F6A_Mthly_Val(#counter) month wgs pf er erpen rem dli admin edli
Put ' ' 0 0 0 0 0 0 0 0 0 into F6A_Mthly_Val(#counter) month wgs pf er erpen rem dli admin edli col567  !Inserted
Add 1 To #counter
End-While
!Inserted
Put 'Mar. Paid in Apr.'     into F6A_Mthly_Val( 0 )  month
Put 'May'       into F6A_Mthly_Val( 1 )  month
Put 'June'      into F6A_Mthly_Val( 2 )  month
Put 'July'      into F6A_Mthly_Val( 3 )  month
Put 'August'    into F6A_Mthly_Val( 4 )  month
Put 'September' into F6A_Mthly_Val( 5 )  month
Put 'October'   into F6A_Mthly_Val( 6 )  month
Put 'November'  into F6A_Mthly_Val( 7 )  month
Put 'December'  into F6A_Mthly_Val( 8 )  month
Put 'January'   into F6A_Mthly_Val( 9 )  month
Put 'February'  into F6A_Mthly_Val( 10)  month
Put 'Feb. Paid in Mar.'     into F6A_Mthly_Val( 11)  month
Let #amount  = 0
Let #rem     = 0
Let #erpen   = 0
Let #dli     = 0
Let #admin   = 0
Let #edli    = 0
End-Procedure ! Estab-Tot
!***********************************************************************
Begin-Procedure Get-Estab-Info
!***********************************************************************
Let $ESTDESCR    = ' '
Let $ESTADDRESS1 = ' '
Let $ESTADDRESS2 = ' '
Let $ESTADDRESS3 = ' '
Let $ESTADDRESS4 = ' '
Begin-Select
EST.ESTABID
EST.DESCR
EST.ADDRESS1
EST.ADDRESS2
EST.ADDRESS3
EST.ADDRESS4
GPIN.GPIN_PF_NBR
GPIN.GPIN_REG_NAME
   Move  &GPIN.GPIN_PF_NBR   To  $ESTABNBR
   Move  &EST.ESTABID        To  $ESTABIDCH
   Move  &GPIN.GPIN_REG_NAME To  $ESTDESCR
   Move  &EST.ADDRESS1       To  $ESTADDRESS1
   Move  &EST.ADDRESS2       To  $ESTADDRESS2
   Move  &EST.ADDRESS3       To  $ESTADDRESS3
   Move  &EST.ADDRESS4       To  $ESTADDRESS4
FROM PS_ESTAB_TBL EST,PS_ESTAB_TBL_GPIN GPIN
WHERE EST.ESTABID = GPIN.ESTABID
AND EST.EFFDT = (Select MAX(EFFDT)
FROM PS_ESTAB_TBL
WHERE ESTABID = EST.ESTABID
AND GPIN.ESTABID = EST.ESTABID
AND EFFDT <= &RNCT.END_DT)
AND   GPIN.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
WHERE ESTABID = GPIN.ESTABID
AND   EFFDT <= &RNCT.END_DT)
AND    EST.ESTABID = &A.GP_GENRPT_BREAK1
End-Select
End-Procedure Get-Estab-Info
!***********************************************************************
Begin-Procedure Get-Name
!***********************************************************************
Let $NAME=''
Begin-Select
C.FIRST_NAME
C.MIDDLE_NAME
C.LAST_NAME
C.NAME_DISPLAY
   Move &c.FIRST_NAME To $FIRST_NAME
   Move &c.MIDDLE_NAME To $MID_NAME
   Move &c.LAST_NAME To $LAST_NAME
   Move &c.NAME_DISPLAY To $NAME
   extract $FIRST_NAME1 from $FIRST_NAME 0 30
   extract $MID_NAME1   from $MID_NAME   0 30
   extract $LAST_NAME1  from $LAST_NAME  0 30
   LET $FIRST_NAME = LTRIM(RTRIM($FIRST_NAME1,' '),' ')
   LET $MID_NAME   = LTRIM(RTRIM($MID_NAME1,' '),' ')
   LET $LAST_NAME  = LTRIM(RTRIM($LAST_NAME1,' '),' ')
FROM PS_NAMES C
WHERE C.EMPLID = $SAV_EMPLID
AND C.NAME_TYPE = 'PRI'
AND C.EFFDT        = (Select MAX(C1.EFFDT) FROM PS_NAMES C1
WHERE C1.EMPLID = C.EMPLID
AND  C1.NAME_TYPE = C.NAME_TYPE
AND  C1.EFFDT <= &RNCT.END_DT)
End-Select
End-Procedure ! Get-Name
!***********************************************************************
Begin-Procedure Get-Acc-Nbr
!***********************************************************************
Let $GPIN_REG_NBR = ' '
Begin-Select
Y.GPIN_REG_NBR
Y.GPIN_PF_CAPPING
  Move &Y.GPIN_REG_NBR To $GPIN_REG_NBR
  Move &Y.GPIN_PF_CAPPING  To $PF_CAP
FROM PS_GPIN_PF_ENROLL Y
WHERE Y.EMPLID  = $SAV_EMPLID
AND   Y.EFFDT   = (Select MAX(Y1.EFFDT) FROM PS_GPIN_PF_ENROLL Y1
WHERE Y1.EMPLID = Y.EMPLID
AND  Y1.EFFDT <= &RNCT.END_DT)
AND   Y.EFF_STATUS = 'A'
End-Select
End-Procedure ! Get-Acc-Nbr
!***********************************************************************
!************************************************************************
Begin-Procedure Get-PF-Cap-Lmt
Begin-select
V.DECIMAL_VALUE
   Move &V.DECIMAL_VALUE to #PF_CAP_LMT
FROM  PS_GP_VARIABLE  V
WHERE
V.PIN_NUM=(SELECT PIN_NUM
FROM  PS_GP_PIN
WHERE PIN_CODE='PF VR CAPPING LIM IND' )
AND V.EFFDT=(SELECT MAX(EFFDT) FROM PS_GP_VARIABLE WHERE PIN_NUM=V.PIN_NUM)
End-Select
End-Procedure
!************************************************************************
!************************************************************************
Begin-Procedure PF-Cap-Chk
if ( $PF_CAP='Y'  AND #calc_rslt_val> #PF_CAP_LMT )
let #amtwgs = #amtwgs+#PF_CAP_LMT
else
let #amtwgs = #amtwgs + #calc_rslt_val
end-if
End-Procedure
!************************************************************************
Begin-Procedure Print-Page1-Header
!***********************************************************************
Add 2 To #Line
LET $BGN_dT = DATETOSTR(&RNCT.BGN_DT, 'DD Month, YYYY')
LET $END_dT = DATETOSTR(&RNCT.END_DT, 'DD Month, YYYY')
let $PERIOD_LBL = 'Annual Statement of contribution for the currency period from 1st April .... to 31st March .... '
Print $PERIOD_LBL (+3,{Col_1})
print $year1     (,73) edit 9999 underline
print $year2     (,92) edit 9999 underline
Print $NAME_lbl                        (+2,{Col_1})
Print $ESTDESCR                        (+1,5)
Print $STATUTORY_lbl                   (,{Col_90})
Print $ESTADDRESS1                     (+1,5)
Print $ESTADDRESS2                     (+1,5)
Print $ESTADDRESS3                     (+1,5)
Print $ESTADDRESS4                     (+1,5)
Print $CODE_lbl                        (+2,{Col_1})
Print $ESTABIDCH                       (,{Col_40})      !Inserted
Print $NUMBER_lbl                      (,{Col_95a})
Graphic                                (+2,1,180)       Box 12
!  graphic                                (-1,1,6)         Vert-line
Graphic                                (  ,115,11)         Vert-Line
Graphic                                (  ,115,11)         Vert-Line
Graphic                                (  ,89,44)         HORZ-Line
Graphic                                (-1,  7,12)          Vert-Line
Graphic                                (  , 31,12)          Vert-Line
Graphic                                (  , 55,12)          Vert-Line
Graphic                                (  , 73,12)          Vert-Line
Graphic                                (  , 89,12)          Vert-Line
Graphic                                (  ,133,12)         Vert-Line
Graphic                                (  ,152,12)         Vert-Line
Graphic                                (  ,168,12)         Vert-Line
!Print $WAGES_lbl                       (+2,{Col_55})
Print $SLNO_lbl                        (+1,{Col_1}) bold
Print $ACCOUNT_lbl                     (,{Col_10}) bold
Print $NAME1_lbl                       (,{Col_25})  bold  ! Inserted (21st Nov 2005)
Print $WAGES_lbl                       (,{Col_52}) bold
Print $AMOUNT_lbl                      (,74) bold
Print $EMPLOYERS_lbl                    (,90) bold
Print $REFUND_lbl                      (,{Col_125}) bold
Print $RATE_lbl                        (,{Col_145}) bold
Print $REMARKS_lbl                     (,{Col_170}) bold
Print $NAME2_lbl                       (+1,{Col_25}) bold
Print $WAGES1_lbl                      (,{Col_52}) bold
Print $AMOUNT4_lbl                     (,74)       bold
Print $RATE1_lbl                        (,{Col_145}) bold
Print $WAGES2_lbl                      (+1,{Col_52}) bold
Print $AMOUNT3_lbl                     (,74) bold
Print $EPF_lbl                          (,{Col_91}) bold
print $PENSION10_lbl                    (,{Col_107}) bold
Print $RATE2_lbl                        (,{Col_145}) bold ! Inserted (21st Nov 2005)
Print $WAGES4_lbl                      (+1,{Col_52}) bold
Print $AMONT1_lbl                      (,74)     bold
Print 'between'                        (,{Col_91}) bold
Print $PENSION_lbl                     (,{Col_107}) bold
Print $RATE3_lbl                       (,{Col_145}) bold
Print $WAGES3_lbl                      (+1,{Col_52}) bold
Print $AMOUNT5_lbl                     (,74) bold
Print $EPF1_lbl                        (,{Col_91}) bold   ! Inserted (21st Nov 2005)
Print $WAGES5_lbl                      (+1,{Col_52}) bold
Print $AMOUNT6_lbl                     (+1,79) bold
Print $WAGES7_lbl                      (,{Col_52}) bold
Print $WAGES8_lbl                      (+1,{Col_52}) bold! Inserted and changed (21st Nov 2005)
!Print $RATE2_lbl                        (,{Col_145})
!Print $AMONT1_lbl                      (,72)
!Print $AMOUNT5_lbl                     (+1,72)
!************************************************************
!Print $WAGES9_lbl                      (+1,{Col_55})  bold! Changed (21st Nov 2005)
!************************************************************
Print $AMONT2_lbl                      (,{Col_70}) bold
!Print $EPF1_lbl                        (,{Col_92}) bold
Print '(1)'                     (+1,2)
Print '(2)'                     (,14)
Print '(3)'                     (,40)
Print '(4)'                     (,65)
Print '(5)'                     (,80)
Print '(6)'                     (,100)
Print '(7)'                     (,122)
Print '(8)'                     (,140)
Print '(9)'                     (,160)
Print '(10)'                    (,170)
Print '    ' (+1,1)
LET #EST_amtwgs  = 0
LET #EST_amtpf   = 0
LET #EST_amter   = 0
LET #EST_amterpe = 0
LET #EST_adv_amt = 0
LET #EST_amtpfvol = 0
End-Procedure !Print-Page1-Header
!***********************************************************************
Begin-Procedure Adv_Ref
!***********************************************************************
Let #adv_amt = 0
Let #days = 0
Begin-Select
P.GPIN_DT_FILED
P.AMOUNT
   Move &P.AMOUNT To #adv_amt
P.DAYS
   Move &P.DAYS To #days
from PS_GPIN_YE_F3A P
where P.EMPLID = $SAV_EMPLID
AND P.EFFDT = (SELECT MAX(EFFDT)                !Inserted
FROM PS_GPIN_YE_F3A
WHERE EMPLID = P.EMPLID
AND EFFDT <= &RNCT.END_DT)
End-Select
End-Procedure  ! Adv_Ref
!***********************************************************************
Begin-Procedure Print-Page2-Header
!***********************************************************************
DO Print_Est-Total
new-page
Graphic                                (1,7,7)            Vert-Line
Graphic                                (+2,46,7)           Vert-Line
Graphic                                (,84,7)           Vert-Line
Graphic                                (,117,7)          Vert-Line
Graphic                                (2,1,134)        Box 8
!        Print 'Amount Remitted '               (,7) BOLD font=4  point-size=8
Print '(Admn. Charges Rs. at 0.65% '       (,70) bold
Print 'Cols. 5,6,7 Rs.'                (,119) bold
Graphic                                     (-1,102,2) Vert-Line
Print 'of wages)'                          (+2,75) bold
!        Print 'Aggregate ()'                   (,91) bold
!        Print ' '                             (+1,90)
Graphic                                (,26,76)         Horz-Line
Graphic                                (-2,26,7)           Vert-Line
Graphic                                (+2,66,7)           Vert-Line
Graphic                                (,102,7)          Vert-Line
!  Print 'Aggregate ()'                   (,121) bold
!  Print 'contributions()'                (+1,119) bold
Print $AMOUNT10_lbl                     (,35) bold
!Graphic                                (,26,20)         Horz-Line
!        Graphic                                (,135,6)          Vert-Line
Print 'I. Total number of contribution cards'    (,136)
Print $AMOUNT11_lbl                    (+1,27) bold
Print 'enclosed [Form 3A___________________]'(,136)
Print $PENSION10_lbl                   (,{Col_50}) bold
Print $EDLI_lbl                        (,103) bold
Graphic                                (-3,117,2) Vert-Line
Print 'Aggregate ()'                   (+3,121) bold
Print $AMOUNT13_lbl                    (+1,27) bold
Print $DL1_lbl                         (,67) bold
Print $PENSION12_lbl                   (,{Col_50}) bold
Print $ADMIN_lbl                       (,85) bold
Print 'Charges 0.01%'                  (,103) bold
Print 'contributions()'                (,119) bold
Print $SLNO_lbl                          (+1,{Col_1}) bold
Print 'Month/Year'                          (  ,{Col_10}) bold
Print $AMOUNT12_lbl                    (  ,27) bold
Print $PENSION11_lbl                   (  ,{Col_50}) bold
Print $DL2_lbl                         (  ,67) bold
print $ADMIN2_lbl                         (,85) bold
Print $ADMIN1_lbl                      (  ,103) bold
Print '(Rs.)'                          (+1,27) bold
Print '(Rs.)'                          (  ,{Col_50}) bold
Print '(Rs.)'                          (  ,67) bold
Print '(Rs.)'                          (  ,85) bold
Print '(Rs.)'                          (  ,103) bold
Print '(Rs.)'                          (  ,122) bold
let $StrCertified = 'II. Certified that form 3A duly'
let $StrCertified = $StrCertified || ' completed, of all the members listed'
let $StrCertified = $StrCertified || ' in this statement are enclosed. The '
let $StrCertified = $StrCertified || ' F3A already sent during the course'
let $StrCertified = $StrCertified || ' of the currency period for the final'
let $StrCertified = $StrCertified || ' settlement of the concerned'
let $StrCertified = $StrCertified || ' member''s account vide ''Remarks'''
let $StrCertified = $StrCertified || ' furnished against the names of the'
let $StrCertified = $StrCertified || ' respective members above, are also '
let $StrCertified = $StrCertified || ' enclosed. '
Print $StrCertified    (,136)   wrap 40 10
Print 'Reconcilliation of Remittances' (28,10)
Print 'Signature of Employer'    (28,134)
print '(with office seal) '     (29,136)
! Print 'Reconciliation of Remittances'               (29,5) BOLD font=4  point-size=10
print 'NOTE:-'     (31,10)
let $StrCertified = '(1) The names of all members, including those who had left service during'
let $StrCertified = $StrCertified || ' the currency period, should be included in this statement.'
let $StrCertified = $StrCertified || ' Where the Form 3-A in respect of such members had left service,'
!let $StrCertified = $StrCertified || ' were already sent to the Regional Office for '
!let $StrCertified = $StrCertified || ' the purpose of final settlement of their accounts,'
let $StrCertified = $StrCertified || ' the fact should be stated against the members '
let $StrCertified = $StrCertified || 'in the ''Remarks'' column '
!let $StrCertified = $StrCertified ||'Form 3A already sent in the month of........200....'
Print $StrCertified    (+3,10)   wrap 160 2
let $StrCertified = '(2) In case of substantial variation in the wages/contribution of'
let $StrCertified = $StrCertified || ' any members as compared to those shown in previous months'
let $StrCertified = $StrCertified || ' statement, the reason should be explained adequately in the'
let $StrCertified = $StrCertified || ' ''Remarks'' column.'
Print $StrCertified    (+2,10)   wrap 160 3
let $StrCertified = '(3) In respect of those members who have not opted for Pension Fund'
let $StrCertified = $StrCertified || ' their entire employers contribution @ 8 1/3% or 10% '
let $StrCertified = $StrCertified || ' as the case may be shown under column No. 6.'
Print $StrCertified    (+2,10)   wrap 160 3
End-Procedure Print-Page2-Header
!***********************************************************************
Begin-Procedure Get-Strings-Table
!***********************************************************************
Do Init_Report_Translation ($ReportID,$Language_Code)
Do Append_Report_Translation ('GPINYE05 ')
Do Get_Field_Information ('GPINYE05 ','REPORT_TITLE',      $REPORT_TITLE_lbl,              #DW)
Do Get_Field_Information ('GPINYE05 ','NAME',              $NAME_lbl,                      #DW)
Do Get_Field_Information ('GPINYE05 ','STATUTORY',         $STATUTORY_lbl,                 #DW)
Do Get_Field_Information ('GPINYE05 ','CODE',              $CODE_lbl,                      #DW)
Do Get_Field_Information ('GPINYE05 ','NUMBER',            $NUMBER_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','SLNO',              $SLNO_lbl,                      #DW)
Do Get_Field_Information ('GPINYE05 ','ACCOUNT',           $ACCOUNT_lbl,                   #DW)
Do Get_Field_Information ('GPINYE05 ','NAME1',             $NAME1_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES',             $WAGES_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES1',            $WAGES1_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES2',            $WAGES2_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES3',            $WAGES3_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT',            $AMOUNT_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT1',           $AMONT1_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT2',           $AMONT2_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT4',           $AMOUNT4_lbl,                   #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT5',           $AMOUNT5_lbl,                   #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT6',           $AMOUNT6_lbl,                   #DW)
Do Get_Field_Information ('GPINYE05 ','EPF',               $EPF_lbl,                       #DW)
Do Get_Field_Information ('GPINYE05 ','EPF1',              $EPF1_lbl,                      #DW)
Do Get_Field_Information ('GPINYE05 ','PENSION',           $PENSION_lbl,                   #DW)
Do Get_Field_Information ('GPINYE05 ','REFUND',            $REFUND_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','RATE',              $RATE_lbl,                      #DW)
Do Get_Field_Information ('GPINYE05 ','RATE1',             $RATE1_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','RATE2',             $RATE2_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','RATE3',             $RATE3_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','REMARKS',           $REMARKS_lbl,                   #DW)
Do Get_Field_Information ('GPINYE05 ','RECONCILLATION',    $RECONCILLATION_lbl,            #DW)
Do Get_Field_Information ('GPINYE05 ','NO',                $NO_lbl,                        #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT10',          $AMOUNT10_lbl,                  #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT11',          $AMOUNT11_lbl,                  #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT12',          $AMOUNT12_lbl,                  #DW)
Do Get_Field_Information ('GPINYE05 ','PENSION10',         $PENSION10_lbl,                 #DW)
Do Get_Field_Information ('GPINYE05 ','PENSION11',         $PENSION11_lbl,                 #DW)
Do Get_Field_Information ('GPINYE05 ','DL1',               $DL1_lbl,                       #DW)
Do Get_Field_Information ('GPINYE05 ','DL2',               $DL2_lbl,                       #DW)
Do Get_Field_Information ('GPINYE05 ','ADMIN',             $ADMIN_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','ADMIN1',            $ADMIN1_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','ADMIN2',            $ADMIN2_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','EDLI',              $EDLI_lbl,                      #DW)
Do Get_Field_Information ('GPINYE05 ','EDLI1',             $EDLI1_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','RS',                $RS_lbl,                        #DW)
Do Get_Field_Information ('GPINYE05 ','EMPLOYERS',         $EMPLOYERS_lbl,                 #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES4',            $WAGES4_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES5',            $WAGES5_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES7',            $WAGES7_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','WAGES8',            $WAGES8_lbl,                    #DW)
!Do Get_Field_Information ('GPINYE05 ','WAGES9',            $WAGES9_lbl,                    #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT3',           $AMOUNT3_lbl,                   #DW)
Do Get_Field_Information ('GPINYE05 ','NAME2',             $NAME2_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','MONTH',             $MONTH_lbl,                     #DW)
Do Get_Field_Information ('GPINYE05 ','AMOUNT13',          $AMOUNT13_lbl,                  #DW)
Do Get_Field_Information ('GPINYE05 ','PENSION12',         $PENSION12_lbl,                 #DW)
Do Get_Field_Information ('GPINYE05 ','EDLI1',             $EDLI1_lbl,                     #DW)
End-Procedure
!***********************************************************************
Begin-Procedure Load-Array
!***********************************************************************
!Move &A.PRD_END_DT To $prd_end_dt 'mm-dd-yyyy'
Extract $month from $prd_end_dt 0 2
let #month = $month
let #fy_month = #month - 4 + 1
if (#fy_month < 0)
let #fy_month = #fy_month + 12
end-if
Evaluate $gpin_fld_name
When = 'F6A_WAGES'
Do PF-Cap-Chk
Break
When = 'F6A_PF'
let #amtpf = #amtpf + #calc_rslt_val
Get #amount from F6A_Mthly_Val(#fy_month) col567        !Inserted
LET #amount = #amount + #calc_rslt_val
Put #amount into F6A_Mthly_Val(#fy_month)  col567
Break
When = 'F6A_PF_VOL'
let #amtpfvol = #amtpfvol + #calc_rslt_val
Break
When = 'F6A_ER'
let #amter = #amter + #calc_rslt_val
Get #amount from F6A_Mthly_Val(#fy_month) col567
LET #amount = #amount + #calc_rslt_val
Put #amount into F6A_Mthly_Val(#fy_month)  col567
Break
When = 'F6A_ERPEN'
let #amterpen = #amterpen + #calc_rslt_val
Get #amount from F6A_Mthly_Val(#fy_month) erpen
Let #amount = #calc_rslt_val + #amount
Put #amount into F6A_Mthly_Val(#fy_month)  erpen
Get #amount from F6A_Mthly_Val(#fy_month) col567
LET #amount = #amount + #calc_rslt_val
Put #amount into F6A_Mthly_Val(#fy_month)  col567
Break
When = 'F6A_AMT_REM'
Get #amount from F6A_Mthly_Val(#fy_month) rem
Let #amount = #calc_rslt_val + #amount
Put #amount into F6A_Mthly_Val(#fy_month)  rem      !Inserted
Break
When = 'F6A_DLI'
Get #amount from F6A_Mthly_Val(#fy_month) dli
Let #amount = #calc_rslt_val + #amount
Put #amount into F6A_Mthly_Val(#fy_month)  dli
Break
When = 'F6A_ADM_CHAR'
Get #amount from F6A_Mthly_Val(#fy_month) admin
Let #amount = #calc_rslt_val + #amount
Put #amount into F6A_Mthly_Val(#fy_month)  admin
Break
When = 'F6A_EDLI'
Get #amount from F6A_Mthly_Val(#fy_month) edli
Let #amount = #calc_rslt_val + #amount
Put #amount into F6A_Mthly_Val(#fy_month)  edli
Break
End-Evaluate
End-Procedure !Load-Array
!***********************************************************************
Begin-Procedure Print-Array
!***********************************************************************
let #counter = 0
let #line = 9
LET #line1 = 6
While #counter < 12
Get $month #rem #erpen #dli #admin #edli #col567 from F6A_Mthly_Val(#counter) month rem erpen dli admin edli col567
Graphic                                (#line1,46 ,3)           Vert-Line
Graphic                                (#line1,84 ,3)           Vert-Line
Graphic                                (#line1,7  ,3)          Vert-Line
Graphic                                (#line1,26 ,3)           Vert-Line
Graphic                                (#line1,66 ,3)           Vert-Line
Graphic                                (#line1,102,3)          Vert-Line
Graphic                                (#line1,117,3)          Vert-Line
Graphic                                (#line,1,134)        Box 1
Graphic                                (+1,1,134)           Box 1
Graphic                                (,1,134)           Box 1
Graphic                                (#line1,46 ,1)           Vert-Line
Graphic                                (#line1,84 ,1)           Vert-Line
Graphic                                (#line1,7  ,1)          Vert-Line
Graphic                                (#line1,26 ,1)           Vert-Line
Graphic                                (#line1,66 ,1)           Vert-Line
Graphic                                (#line1,102,1)          Vert-Line
Graphic                                (#line1,117,1)          Vert-Line
Graphic                                (#line,1,134)       Box 1
Print $month                           (#line, 8)
Print #rem                             (#line, 26)    edit 9999999999.99
Print #erpen                           (#line, 46)    edit 9999999999999.99
Print #dli                             (#line, 66)    edit 9999999999.99
Print #admin                           (#line, 84)    edit 9999999999999.99
Print #edli                            (#line, 102)   edit 9999999999.99
Let #col567 = #dli + #admin + #edli
Print #col567                          (#line, 119)   edit 99999999999.99
Add #rem   To #rem_tot
Add #erpen To #erpen_tot
Add #dli   To #dli_tot
Add #admin To #admin_tot
Add #edli  To #edli_tot
ADD #COL567 TO #COL567_tot
Add 1 To #counter
Print #counter                         (#line, 2) edit 99
add 1 to #line
add 1 to #line1
End-While
Graphic                                (#line1,46 ,5)           Vert-Line
Graphic                                (#line1,84 ,5)           Vert-Line
Graphic                                (#line1,7  ,5)           Vert-Line
Graphic                                (#line1,26 ,5)           Vert-Line
Graphic                                (1,66,22)                Vert-Line
Graphic                                (#line1,102,5)          Vert-Line
Graphic                                (#line1,117,5)          Vert-Line
Graphic                                (#line,1,134)        Box 1
Print 'Arrear if Any'                  (, 8)
Print '13'                             (, 2)
Graphic                                (+1,1,134)           Box 1
Print '14'                             (, 2)
Print 'Total'                          (+1, 8) bold
Graphic                                (,1,134)           Box 1
Print #rem_tot                         (  , 26)    edit 9999999999.99
Print #erpen_tot                       (  , 46)    edit 9999999999999.99
Print #dli_tot                         (  , 66)    edit 9999999999.99
Print #admin_tot                       (  , 84)    edit 9999999999999.99
Print #edli_tot                        (  , 102)   edit 9999999999.99
Print #col567_TOT                      (  , 119)   edit 99999999999.99
!         Graphic                                (+1,1,175)        Horz-Line
End-Procedure Print-Array
Begin-Procedure Print_Est-Total
Print  'Total' (+1,10)  bold
let #days = 0
Print #Est_amtwgs                 (,{Col_58})  edit 99999999999.99
Print #Est_amtpf                  (,{Col_74})  edit 99999999999.99
Print #Est_amter                  (,{Col_92})  edit 9999999999.99
Print #Est_amterpe               (,{Col_107}) edit 999999999999.99
Print #Est_adv_amt                (,{Col_125}) edit 9999999999999.99
!Print #days                  (,{Col_145}) edit 999999.99
Print #EST_amtpfvol               (,{Col_145}) edit 9999999999.99
Graphic                                (-1,115,1)         Vert-Line
!    Graphic                                (  ,  1,1)          Vert-Line
!    Graphic                                (  ,181,1)          Vert-Line
Graphic                                (  ,  7,1)          Vert-Line
Graphic                                (  , 31,1)          Vert-Line
Graphic                                (  , 55,1)          Vert-Line
Graphic                                (  , 73,1)          Vert-Line
Graphic                                (  , 89,1)          Vert-Line
Graphic                                (  ,133,1)         Vert-Line
Graphic                                (  ,152,1)         Vert-Line
Graphic                                (  ,168,1)         Vert-Line
Print ' ' (+1,1)
Graphic                                (,1,180)       Box 1
Add 1 To #rowno
let #Printcounter=1
End-Procedure Print_Est-Total
Begin-Procedure Print-Empl
Print #Printcounter (+1,1) edit '99,999'
Print  $GPIN_REG_NBR (,9)
let $UName = upper($NAME)
Print $UName (,32,30)
Print #amtwgs                 (,{Col_58})  edit 99999999999.99
Print #amtpf                  (,{Col_74})  edit 99999999999.99
Print #amter                  (,{Col_92})  edit 9999999999.99
Print #amterpen               (,{Col_107}) edit 999999999999.99
Do Adv_Ref
LET #days = 0
Print #adv_amt                (,{Col_125}) edit 9999999999999.99
!Print  #days                  (,{Col_145}) edit 999999.99
Print  #amtpfvol               (,{Col_145}) edit 9999999999.99
LET #EST_amtwgs  = #EST_amtwgs  + #amtwgs
LET #EST_amtpf   = #EST_amtpf   + #amtpf
LET #EST_amter   = #EST_amter   + #amter
LET #EST_amterpe = #EST_amterpe + #amterpen
LET #EST_adv_amt = #EST_adv_amt + #adv_amt
LET #EST_amtpfvol = #EST_amtpfvol + #amtpfvol
Graphic                                (-1,115,1)         Vert-Line
!    Graphic                                (  ,  1,1)          Vert-Line
!    Graphic                                (  ,181,1)          Vert-Line
Graphic                                (  ,  7,1)          Vert-Line
Graphic                                (  , 31,1)          Vert-Line
Graphic                                (  , 55,1)          Vert-Line
Graphic                                (  , 73,1)          Vert-Line
Graphic                                (  , 89,1)          Vert-Line
Graphic                                (  ,133,1)         Vert-Line
Graphic                                (  ,152,1)         Vert-Line
Graphic                                (  ,168,1)         Vert-Line
Print ' ' (+1,1)
Graphic                                (,1,180)       Box 1
Add 1 To #rowno
Add 1 To #Printcounter
End-Procedure Print-Empl
!***********************************************************************
! Additional SQCs included in the report                               *
!***********************************************************************
#include 'datetime.sqc'     !Routines for date and time formatting
#include 'datemath.sqc'     !Date conversion procedures
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
!#include 'prcsapi.sqc'      !Replaces stdapi.sqc
#include 'stdapi.sqc'       !Routines to update run status
#include 'prcslng.sqc'      !Replaces getrplng.sqc
#include 'readxlat.sqc'     !Procedure to read values from xlattable
#include 'reset.sqc'        !Reset Printer procedure
#include 'number.sqc'       !Routines to format numbers