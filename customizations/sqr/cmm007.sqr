!********************************************************
!  CMM007:  Licences and Certification Due for Renewal  * 
!********************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2019, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                
!           $Bug:  30310827                                            
!                                                                      *
!***********************************************************************
#include 'setenv.sqc' !Set environment
Begin-Setup
   #Include 'ptset02.sqc'   !Printer and page-size initialization
End-Setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 10
  #Include 'stdhdgcm.sqc'
  print ' '                    (+6,1,15)
  print '<----------Licenses, Certificates---------->' (0,+1,44)
  print ' '  (0,+0,1)
  print ' '  (0,+0,1)
  print 'Expiration Date'      (0,+1,16)
  print 'Employee Name'        (0,+1,30)
  print 'ID'                   (0,+1,11)
  print 'Department'           (0,+1,12)
  print 'Location'             (0,+1,8)
  print 'Code'                 (+1,18,8)
  print 'Description'          (0,+1,11)


end-heading

begin-procedure Init-Report

  move 'CMM007' to $ReportID
  move 'Licenses and Certification Due for Renewal' to $ReportTitle

  display $ReportID
  display $ReportTitle

  do Stdapi-Init

  do select-parameters
  
end-procedure

begin-procedure Get-Values

  do Get-CM-Parameters

end-procedure

begin-procedure Process-Main
  if $accomplishment = ''
    do WhatLicCer1
    do Licence-Certificate1
  else
    do WhatLicCer2
    do Licence-Certificate2
  end-if
end-procedure


begin-procedure WhatLicCer1
  print ' '                            (-4,1,55)
  print 'License, Certificate Code/Descr'   (0,+1,31)
  print 'ALL         ALL'              (0,+1,15)

  if $fromdate = ''
    print ' '                          (+1,1,55)
    print 'From  All'                  (0,+1,10)
  else
    print ' '                          (+1,1,55)
    print 'From'                       (0,+1,5)
    do Format-DateTime($fromdate,$fromdate, {DEFDATE}, '', '')
    print $fromdate                    (0,+1,10)
    do Format-DateTime($FromDate,$FromDate,{DEFDATE},'','native')
  end-if

  if $todate = ''
    print 'To  All'                    (0,+1,8)
  else
    print 'To'                         (0,+1,5)
    do Format-DateTime($Todate,$Todate, {DEFDATE}, '', '')
    print $Todate                      (0,+1,10)
    do Format-DateTime($ToDate,$ToDate,{DEFDATE},'','native')
  end-if
end-procedure WhatLicCer1

begin-procedure WhatLicCer2
begin-select distinct
  print ' '                          (-4,1,55)
  print 'License, Certificate Code/Descr'   (0,+1,31)
F.ACCOMPLISHMENT                    (0,+1,8)
G.DESCR                                (0,+1,35)
  if $fromdate = ''
    print ' '                          (+1,1,55)
    print 'From  All'                  (0,+1,10)
  else
    print ' '                          (+1,1,55)
    print 'From'                       (0,+1,5)
    do Format-DateTime($fromdate,$fromdate, {DEFDATE}, '', '')
    print $fromdate                    (0,+1,10)
    do Format-DateTime($FromDate,$FromDate,{DEFDATE},'','native')
  end-if

  if $todate = ''
    print 'To  All'                    (0,+1,8)
  else
    print 'To'                         (0,+1,5)
    do Format-DateTime($Todate,$Todate, {DEFDATE}, '', '')
    print $Todate                      (0,+1,10)
    do Format-DateTime($ToDate,$ToDate,{DEFDATE},'','native')
  end-if

from PS_ACCOMPLISHMENTS F,
     PS_ACCOMP_TBL G
where F.ACCOMPLISHMENT = $accomplishment
  and F.ACCOMPLISHMENT = G.ACCOMPLISHMENT
  and G.ACCOMP_CATEGORY = 'LIC'
end-select
end-procedure WhatLicCer2

begin-procedure Licence-Certificate1
  print ' '             (+3,1,0)
begin-select distinct
  print ' '             (+1,1,16)
B.ACCOMPLISHMENT     (0,+1,8)
B.DESCR                 (0,+1,32)
  move &b.accomplishment to $accomplishment
  if $FromDate = '' and $ToDate = ''
    do List-LicCer1
    print ' '                          (+1,0,0)
  else
    do List-LicCer2
    print ' '                          (+1,0,0)
  end-if
from PS_ACCOMPLISHMENTS A,
     PS_ACCOMP_TBL B,
     PS_PERSON C,
     PS_JOB D,
     PS_LOCATION_TBL E
where A.ACCOMPLISHMENT = B.ACCOMPLISHMENT
  and A.EMPLID = C.EMPLID
  and C.EMPLID = D.EMPLID
  and D.LOCATION = E.LOCATION
  and B.ACCOMP_CATEGORY = 'LIC'
order by B.ACCOMPLISHMENT
end-select
end-procedure licence-certificate1

begin-procedure Licence-Certificate2
  print ' '             (+3,1,0)
begin-select distinct
  print ' '             (+1,1,16)
I.ACCOMPLISHMENT     (0,+1,8)
I.DESCR                 (0,+1,32)
  if $FromDate = '' and $ToDate = ''
    do List-LicCer1
    print ' '                          (+1,0,0)
  else
    do List-LicCer2
    print ' '                          (+1,0,0)
  end-if
from PS_ACCOMPLISHMENTS H,
     PS_ACCOMP_TBL I,
     PS_PERSON J,
     PS_JOB K,
     PS_LOCATION_TBL L
where H.ACCOMPLISHMENT = $accomplishment
  and H.ACCOMPLISHMENT = I.ACCOMPLISHMENT
  and H.EMPLID = J.EMPLID
  and J.EMPLID = K.EMPLID
  and K.LOCATION = L.LOCATION
  and I.ACCOMP_CATEGORY = 'LIC'
order by I.ACCOMPLISHMENT
end-select
end-procedure licence-certificate2

begin-procedure List-LicCer1
print ' '             (-1,1,0)
begin-select distinct
  print ' '             (+1,56,0)
H.EXPIRATN_DT
  do Format-DateTime(&H.Expiratn_dt,$Expiratn_dt, {DEFDATE}, '', '')
    print $Expiratn_dt                 (0,+8,10)
J.NAME                  (0,+6,30)
J.EMPLID                (0,+1,11)
  move &j.emplid to $emplid
K.DEPTID                (0,+1,12)
L.DESCR                 (0,+1,25)       !Location Description
from PS_ACCOMPLISHMENTS H,
     PS_ACCOMP_TBL I,
     PS_PERSON_NAME J,
     PS_JOB K,
     PS_LOCATION_TBL L
where H.ACCOMPLISHMENT = $accomplishment
  and H.ACCOMPLISHMENT = I.ACCOMPLISHMENT
  and H.EMPLID = J.EMPLID
  and J.EMPLID = K.EMPLID
  and K.EFFDT = (SELECT MAX(I1.EFFDT)
                 from PS_JOB I1 where K.EMPLID = I1.EMPLID)
!***************Begin Bug 30310827********
  and L.SETID = K.SETID_LOCATION
  and L.LOCATION = K.LOCATION    
  and L.EFFDT=(SELECT MAX(L1.EFFDT) 
   FROM PS_LOCATION_TBL L1
   WHERE L1.SETID=L.SETID 
   AND L1.LOCATION=L.LOCATION
                AND L1.EFFDT<=K.EFFDT )
!***************End Bug 30310827********
  and I.ACCOMP_CATEGORY = 'LIC'
order by H.EXPIRATN_DT,J.EMPLID
end-select
end-procedure list-liccer1

begin-procedure list-liccer2      
  print ' '             (-1,1,0)
begin-select distinct
  print ' '             (+1,56,0)
M.EXPIRATN_DT
  do Format-DateTime(&M.Expiratn_dt,$Expiratn_dt, {DEFDATE}, '', '')
    print $Expiratn_dt                 (0,+8,10)
O.NAME                  (0,+6,30)
O.EMPLID                (0,+1,11)
P.DEPTID                (0,+1,12)
Q.DESCR                 (0,+1,25)       !Location Description
from PS_ACCOMPLISHMENTS M,
     PS_ACCOMP_TBL N,
     PS_PERSON_NAME O,
     PS_JOB P,
     PS_LOCATION_TBL Q
where M.ACCOMPLISHMENT = $accomplishment
  and M.ACCOMPLISHMENT = N.ACCOMPLISHMENT
  and M.EMPLID = O.EMPLID
  and O.EMPLID = P.EMPLID
!***************Begin Resolution 306010********  
  ! and P.EFFDT = (SELECT MAX(I2.EFFDT)
  !               from PS_JOB I2 where P.EMPLID = I2.EMPLID)
   and P.EFFDT = (SELECT MAX(I2.EFFDT)
                 from PS_JOB I2 where P.EMPLID = I2.EMPLID
                 and I2.EFFDT<=$todate)
!***************Begin Bug 30310827********  
   and Q.SETID = P.SETID_LOCATION
!***************End Bug 30310827********  
   and Q.LOCATION=P.LOCATION
  ! and P.LOCATION = Q.LOCATION
   and Q.EFFDT=(SELECT MAX(Q_ED.EFFDT) 
   FROM PS_LOCATION_TBL Q_ED  
   WHERE Q_ED.SETID=Q.SETID 
   AND Q_ED.LOCATION=Q.LOCATION
                AND Q_ED.EFFDT<=$todate)
  
!***************End Resolution 306010********** 
  and N.ACCOMP_CATEGORY = 'LIC'
  and M.EXPIRATN_DT BETWEEN $fromdate and $todate
order by M.EXPIRATN_DT,O.EMPLID
end-select
end-procedure list-liccer2


#include 'stdapi.sqc'    !Update Process Request API
 ! #include 'askpar.sqc'    !Get Parameters
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines

#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
