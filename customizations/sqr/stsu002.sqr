!************************************************************************
!  STSU002:  Exchange Information
!************************************************************************                                                                      !
!
!                                                                 
!   This software and related documentation are provided under a  
!   license agreement containing restrictions on use and          
!   disclosure and are protected by intellectual property         
!   laws. Except as expressly permitted in your license agreement 
!   or allowed by law, you may not use, copy, reproduce,          
!   translate, broadcast, modify, license, transmit, distribute,  
!   exhibit, perform, publish or display any part, in any form or 
!   by any means. Reverse engineering, disassembly, or            
!   decompilation of this software, unless required by law for    
!   interoperability, is prohibited.                              
!   The information contained herein is subject to change without 
!   notice and is not warranted to be error-free. If you find any 
!   errors, please report them to us in writing.                  
!                                                                 
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.       
!   All Rights Reserved.                                          
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2013/01/18:02:55:50                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!
!************************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
  #include 'ptpsp125.sqc'  !Printer and page-size init
end-setup

#define  col2    37
#define  col3    52
#define  col4    64
#define  col5    82
#define  col6    96

!************************************************************************
begin-program
!************************************************************************

  do Init-DateTime         !procedure in datetime.sqc
  do Init-Number           !procedure in number.sqc
  do Get-Current-DateTime  !procedure in currdttm.sqc
  do Init-Report           !procedure in SQR

  let $timebegan =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Began: '  $timebegan  ' '

  do Process-Main          !does all report processing in SQR
  do Reset                 !procedure in reset.sqc
  do Stdapi-term           !procedure in stdapi.sqc

  let $timeEnded =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Ended: '  $timeEnded

end-program

!************************************************************************
begin-procedure Init-Report
!************************************************************************

  do Stdapi-Init

  let   $ReportID    = 'STSU002'

  do Get-Report-Language

  show  'FLOW: Init-Report'
  show 'Report Title: ' $REPORTTITLE

end-procedure

!************************************************************************
begin-procedure Report-Translation
!************************************************************************

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!

  do Init_Report_Translation ('STOCK',$language_cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK','CURRENCY_CD',     $CURRENCY_CD,     #DW)
  do Get_Field_Information ('STOCK','EFFDT',           $EFFDT,           #DW)

  do Get_Field_Information ('STSU002','STSU002',         $REPORTTITLE,     #DW)
  do Get_Field_Information ('STSU002','EFF_STATUS',      $EFF_STATUS,      #DW)
  do Get_Field_Information ('STSU002','EXCHANGE',        $EXCHANGE,        #DW)
  do Get_Field_Information ('STSU002','HOLIDAY_SCHEDULE',$HOLIDAY_SCHEDULE,#DW)

end-procedure

!************************************************************************
begin-heading 6
!************************************************************************

#include 'stdhdgtr.sqc'

  print $EXCHANGE            (+3, 1,08)
  print $EFFDT               (0,+28,08)
  print $EFF_STATUS          (0,+7,06)
  print $HOLIDAY_SCHEDULE    (0,+6,12)
  print $CURRENCY_CD         (0,+6,08)
  print ' '                  (+1,1,1)

end-heading

!************************************************************************
begin-procedure Process-Main
!************************************************************************

!----------------------------------------------------------------------!
! Procedure:  Process-Main                                             !
! Descr:      This is where all required data is selected              !
!----------------------------------------------------------------------!

  display 'FLOW: Process-Main'

begin-Select

A.EXCHANGE_ID
A.EFFDT
A.EFF_STATUS
A.DESCR
A.CURRENCY_CD
A.HOLIDAY_SCHEDULE
A.HOUSE_TYPE
A.COUNTY
A.GEO_CODE
A.COUNTRY_CODE
A.COUNTRY
A.ADDRESS1
A.CITY
A.STATE
A.POSTAL
A.PHONE

  do Print-Data

from      PS_ST_EXCHANGE_TBL  A
order by  A.EFFDT             desc

end-Select

end-procedure

!************************************************************************
begin-procedure Print-Data
!************************************************************************

  print &A.DESCR              (+1,1,30)

  do Format-DateTime(&A.EFFDT, $EFFDT1, {DEFYMD}, '', '')

  print $EFFDT1               (0,{col2},10)

  do Get-Value

  print $STATUS               (0,{col3},30)

  do Get-Descr

  print &A.HOLIDAY_SCHEDULE   (0,{col4},10)
  print $CurrencyDescr        (0,{col5},30)

  print &A.ADDRESS1           (+1,1,35)

  let $tempCity = rtrim(&A.CITY,' ') || ', ' || rtrim(&A.STATE,' ') || ' ' || &A.POSTAL

  print $tempCity             (+1,1,51)

  print &A.COUNTRY            (+1,1,34)

  print &A.PHONE              (+1,1,24)
  print ' '                   (+1,1,1)

end-procedure

!************************************************************************
begin-procedure Get-Value
!************************************************************************

!-------------------------------------------------------------------!
! Procedure:  Get-Value                                             !
! Descr:      This procedure gets the value of the specific field   !
!             from the Translate Table                              !
!-------------------------------------------------------------------!

  let $FieldName = 'EFF_STATUS'
  let $FieldValue = &A.EFF_STATUS

  do Read-Translate-Table

  let $STATUS = RTRIM($XlatLongName,' ')

end-procedure

!************************************************************************
begin-procedure Get-Descr
!************************************************************************

!-------------------------------------------------------------------!
! Procedure:  Get-Descr                                             !
! Descr:      This procedure gets the description of the specific   !
!             field from the prompt tables                          !
!-------------------------------------------------------------------!

let $CurrencyDescr = ''
begin-Select

B.DESCR


from   PS_CURRENCY_CD_TBL B

where  EFF_STATUS     =  'A'
  and  B.CURRENCY_CD  =  &A.CURRENCY_CD
  and  EFFDT =           (Select MAX(EFFDT)
                          from   PS_CURRENCY_CD_TBL
                         where   CURRENCY_CD  =  B.CURRENCY_CD
                           and   EFF_STATUS   =  'A'
                           and   EFFDT       <=  &A.EFFDT)


end-Select

let  $CurrencyDescr = &B.DESCR
let  $HolidayDescr  = ''

begin-Select

D.DESCRSHORT

from   PS_HOLIDAY_TBL D
where  D.HOLIDAY_SCHEDULE  =  &A.HOLIDAY_SCHEDULE

end-SELECT

let  $HolidayDescr  = &D.DESCRSHORT

end-procedure

!************************************************************************
!  SQC Include Files
!************************************************************************
#include 'stdapi.sqc'
#include 'curdttim.sqc'  !Get-Current-Date-Time
#include 'datetime.sqc'  !Get-Date-Time
#include 'datemath.sqc'  !Date Math Routines
#include 'reset.sqc'     !Reset printer procedure
#include 'number.sqc'    !Routines to format numbers
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read the Translate Table for the desired values.
