!***********************************************************************
!  GPMXAA05: MULTIPLE INFORMATION REPORT                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2015/05/18:12:31:58                                 *
!       $Release:  HR92                                                *
!      $Revision:  104                                                 *
!                                                                      *
!***********************************************************************
!***********************************************************************
!  1. $S101 > SI EL PATRÓN REALIZO...                                  *
!  2. $S102 > TARIFA UTILIZADA                                         *
!  3. $S103 > ..trabajador sindicalizado..                             *
!  4. $S104 > Area geografica del salario minimo                       *
!  5. $S105 > Clave de la entidad federativa dónde presta sus servicios*
!  6.  S106 > Proporcion del subsidio: Vigente                         *
!  7.  S107 > 1991                                                     *
!  8. $S108 > Fraccion I                                               *
!  9. $S109 > Fraccion II                                              *
! 10. $S110 > Aplicada                                                 *
! 11. $S111 > Otros Patrones 1                                         *
! 12. $S112 > Otros Patrones 2                                         *
! 13. $S113 > Otros Patrones 3                                         *
!  A. #S2A  > TOTAL DE SUELDOS, SALARIOS Y                             *
!  B. #S2B  > IMPUESTO LOCAL                                           *
!  C. #S2C  > INGRESOS EXENTOS                                         *
!  D. #S2D  > INGRESOS NO ACUMULABLES                                  *
!  E. #S2E  > INGRESOS ACUMULABLES                                     *
!  F. #S2F  > IMPUESTO CONFORME A LA ??                                *
!  G. #S2G  > MONTO DEL SUBSIDIO A                                     *
!  H. #S2H  > MONTO DEL SUBSIDIO NO ACREDITABLE                        *
!  I. #S2I  > MONTO DEL SUBSIDIO ACREDITABLE FRACCIÓN III              *
!  J. #S2J  > MONTO DEL SUBSIDIO ACREDITABLE FRACCIÓN IV               *
!  K. #S2K  > IMPUESTO SOBRE INGRESOS ACUMULABLES     ??               *
!  L. #S2L  > IMPUESTO SOBRE INGRESOS NO ACUMULABLES  ??               *
!  M. #S2M  > IMPUESTO SOBRE LA RENTA                                  *
!  N. #S2N  > IMPUESTO RETENIDO DURANTE                                *
!---------------------- PAGOS POR SEPARACION --------------------------*
!  O. #S3O  > MONTO TOTAL DE PAGO EN                                   *
!  P. #S3P  > INGRESOS TOTALES POR                                     *
!  Q. #S3Q  > MONTO DIARIO PERCIBIDO                                   *
!  R. #S3R  > CANTIDAD QUE SE HUBIERA                                  *
!  S. #S3S  > NUMERO DE DIAS                                           *
!  T. #S3T  > INGRESOS EXENTOS                                         *
!  U. #S3U  > INGRESOS GRAVABLES                       0               *
!  V. #S3V  > INGRESOS ACUMULABLES                                     *
!  W. #S3W  > INGRESOS NO ACUMULABLES                                  *
!  X. #S3X  > IMPUESTO RETENIDO                                        *
!  a. #S3a  > MONTO TOTAL PAGADO                                       *
!  b. #S3b  > NUMERO DE AÑOS DE SERVICIO DEL TRABAJADOR                *
!  c. #S3c  > INGRESOS EXENTOS                                         *
!  d. #S3d  > INGRESOS GRAVADOS                                        *
!  e. #S3e  > INGRESOS ACUMULABLES                                     *
!  f. #S3f  > IMPUESTO CORRESPONDIENTE AL ULTIMO SUELDO MENSUAL ORDINA *
!  g. #S3g  > INGRESOS NO ACUMULABLES                                  *
!  h. #S3h  > IMPUESTO RETENIDO                                        *
!--------------------- INGRESOS ASIMILADOS A SALARIOS -----------------*
!  i. #S4i  > INGRESOS ASIMILADOS                      0               *
!  j. #S4j  > IMPUESTO RETENIDO DURANTE EL EJERCICIO   0               *
!--------------------- INGRESOS EN ACCIONES ---------------------------*
!  k. #S4k  > VALOR DE MERCADO DE LAS ACCIONES                         *
!  l. #S4l  > PRECIO ESTABLECIDO AL OTORGARSE                          *
!  m. #S4m  > INGRESO ACUMULABLE                                       *
!  n. #S4n  > IMPUESTO RETENIDO                                        *
!--------------------- IMPUESTO SOBRE LA RENTA POR SUELDOS Y SALARIOS--*
!  Q1 #S6Q1  > SUMA DEL INGRESO GRAVADO                                *
!  R1 #S6P1  > SUMA DEL INGRESO EXCENTO                                *
!  S1 #S6R1  > SUMA DE INGRESOS POR SUELDOS Y SALARIOS                 *
!  T1 #S6S1  > MONTO DEL IMPUESTO LOCAL                                *
!  U1 #S6U1  > IMPUESTO RETENIDO DURANTE EL EJERCICIO                  *
!  V1 #S6V1  > IMPUESTO RETENIDO POR OTROS PATRONES                    *
!  W1 #S6W1  > SALDO A FAVOR .. QUE EL PATRON COMPENSARA               *
!  X1 #S6X1  > SALDO A FAVOR DEL EJERCICIO ANTERIOR                    *
!  Y1 #S6Y1  > SUMA DE LAS CANTIDADES POR CONCEPTO DE CREDITO          *
!  Z1 #S6Z1  > CREDITO AL SALARIO ENTREGADO EN EFECTIVO                *
!  a1 #S6a1  > MONTO TOTAL DE INGRESOS ... PREVISION SOCIAL            *
!  b1 #S6b1  > SUMA DE INGRESOS EXENTOS ...                            *
!***********************************************************************
#include 'setenv.sqc'    !Set environment

#define Sep_Char   '|'

begin-setup
  #include 'setupdb.sqc'
end-setup


begin-program

  do Init-Report

  do Select-Parameters

  do Open-Files
  do Select-Values
  do Stdapi-Term

  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  display ' '

end-program

begin-procedure Init-Report
  move 'GPMXAA05' to $ReportID
  move 'Declaracion Informativa Multiple ' to $ReportTitle
  move 'Ver. 2015-C.02' to $ReportVersion
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  display ' '
end-procedure Init-Report

!**************************************
begin-procedure Select-Parameters
#debug show '> Select-Parameters '
!**************************************
begin-select
P.COMPANY
P.YEARCD

  Let $Company = rtrim(&P.COMPANY,' ')
  Let #Bal_Year = &P.YEARCD

   
  Let $BgnDtDTU = TO_CHAR(#Bal_Year) || '-01-01'
  Do Convert-From-DTU-Date($BgnDtDTU,$BgnDt)
  Let $EndDtDTU = TO_CHAR(#Bal_Year) || '-12-31'
  Do Convert-From-DTU-Date($EndDtDTU,$EndDt)

FROM PS_GPMX_RC_ANNL P
WHERE P.OPRID = $prcs_oprid
AND   P.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
  Do Convert-To-DTU-Date($BgnDt,$BgnDtDTU)
  Do Convert-To-DTU-Date($EndDt,$EndDtDTU)
 show 'Company   :' $Company
 show 'Bal_Year  :' #Bal_Year EDIT 9999
 show 'BgnDt     :' $BgnDt
 show 'EndDt     :' $EndDt
 #debug show 'BgnDtDTU: ' $BgnDtDTU ', $EndDtDTU: ' $EndDtDTU
 SHOW ' '
end-procedure Select-Parameters


begin-procedure Open-Files
  open '{FILEPREFIX}IDENT90B.txt{FILESUFFIX}' as 1 for-writing record=1000:vary
end-procedure Open-Files


!***********************************************************************
begin-procedure Select-Values
#debug SHOW ' '
#debug show '> Select-Values'
!***********************************************************************
Create-Array name = Empleados Size = 7
  Field=Emplid:Char
  Field=Empl_Rcd:Number
  Field=Effdt:Date
  Field=EffSeq:Number
  Field=Action:Char
  Field=RangeIni:Date
  Field=RangeFin:Date
  Field=TerDate:Date
Begin-Select Distinct
A.EMPLID                        &Ini_Emplid
A.EMPL_RCD                      &Ini_Empl_Rcd

  LET $Emplid   = RTRIM(LTRIM(&Ini_Emplid, ' '), ' ')
  LET #Empl_Rcd = &Ini_Empl_Rcd
  #debug SHOW '  Emplid: ' $Emplid ', Empl_Rcd: ' #Empl_Rcd
  DO GetSegments
  LET #ii = 1
  While #ii <= #CountMov
    GET $EmplidArr  #Empl_RcdArr  $EffdtOk #EffseqOk $Action  $RangeIni $RangeFin  $TerDate FROM  Empleados(#ii)
    Do Convert-To-DTU-Date($RangeIni, $RangeIniDTU)
    Do Convert-To-DTU-Date($RangeFin, $RangeFinDTU)

    IF $TerDate <> ''
       !DO GetNewDates
    END-IF

    IF $RangeIniDTU <= $RangeFinDTU
       LET $calc_PTU = 'N'
       DO GetInfoMult
    ELSE
       LET $ExistPer = 'N'
    END-IF
    ADD 1 TO #ii
  End-While
  IF $ExistPer = 'N'
    #debug SHOW '  No Periods in Job For the Company ' $Company ' Period: ' $BgnDt ' - ' $EndDt
  END-IF
  #debug SHOW ' ' 

 FROM PS_GP_SEG_GUIDE_WA A
    , PS_GP_PYE_PRC_STAT B
    , PS_GP_PYE_SEG_STAT C
WHERE A.COMPANY         = $Company 
  AND A.EMPLID          = B.EMPLID 
  AND A.EMPL_RCD        = B.EMPL_RCD 
  AND B.GP_PAYGROUP     = A.GP_PAYGROUP 
  AND B.EMPLID          = C.EMPLID 
  AND B.CAL_RUN_ID      = C.CAL_RUN_ID 
  AND B.EMPL_RCD        = C.EMPL_RCD 
  AND B.GP_PAYGROUP     = C.GP_PAYGROUP 
  AND B.CAL_ID          = C.CAL_ID 
  AND B.ORIG_CAL_RUN_ID = C.ORIG_CAL_RUN_ID 
  AND B.ORIG_CAL_RUN_ID = B.CAL_RUN_ID 
  AND B.CALC_TYPE       = 'P' 
  AND C.PYE_CALC_STAT  >= '50' 
  AND C.CALC_ACTION    IN ('C','R','W')
end-select
end-procedure Select-Values

!***********************************************************************
begin-procedure GetNewDates
#debug SHOW ' '
#debug show '> GetNewDates'
!***********************************************************************
Begin-Select Distinct
MIN(B.PRD_BGN_DT)                &NewDtsIni
MAX(B.PRD_END_DT)                &NewDtsFin

  LET $RangeIni = RTRIM(LTRIM(&NewDtsIni, ' '), ' ')
  LET $RangeFin = RTRIM(LTRIM(&NewDtsFin, ' '), ' ')
  
  #debug SHOW '  Ovrrd RangeIni: ' $RangeIni ', RangeFin: ' $RangeFin

 FROM PS_GP_SEG_GUIDE_WA A
    , PS_GP_PYE_PRC_STAT B
    , PS_GP_PYE_SEG_STAT C
WHERE A.COMPANY         = $Company 
  AND A.EMPLID          = $Emplid
  AND A.EMPLID          = B.EMPLID 
  AND A.EMPL_RCD        = B.EMPL_RCD 
  AND B.GP_PAYGROUP     = A.GP_PAYGROUP 
  AND B.EMPLID          = C.EMPLID 
  AND B.CAL_RUN_ID      = C.CAL_RUN_ID 
  AND B.EMPL_RCD        = C.EMPL_RCD 
  AND B.GP_PAYGROUP     = C.GP_PAYGROUP 
  AND B.CAL_ID          = C.CAL_ID 
  AND B.ORIG_CAL_RUN_ID = C.ORIG_CAL_RUN_ID 
  AND B.ORIG_CAL_RUN_ID = B.CAL_RUN_ID 
  AND B.PRD_BGN_DT     >= $BgnDt
  AND B.PRD_END_DT     <= $EndDt
  AND B.CALC_TYPE       = 'P' 
  AND C.PYE_CALC_STAT  >= '50' 
  AND C.CALC_ACTION    IN ('C','R','W')
end-select
end-procedure GetNewDates

!******************************************************************************
Begin-Procedure Get-PTU
#debug show '  >Get-PTU'
#debug show '  $Emplid ' $Emplid
#debug show '  $Company ' $Company
#debug show '  $EndDt ' $EndDt
!******************************************************************************
Let $calc_PTU = 'Y'
Let $PTU-Payment-DtDTU = ''
Let $Cals_include = ''
Let $Cals_exclude = ''
Begin-select
AC.GPMX_ANNL_FLD &ANNLFLD
AC.GPMX_PIN_ANNL_NUM &PINNUMANNL
PIN.PIN_TYPE &PINTYPE

  Let $AnnlFld = Rtrim(&ANNLFLD, ' ')
  Let #Pin_Num = &PINNUMANNL
  Let $PinCode = ''

  ! show '    $AnnlFld ' $AnnlFld  '#Pin_Num  ' #Pin_Num '&PINTYPE ' &PINTYPE

  If Rtrim(&PINTYPE,' ') = 'AC'
        Let #SumAcum = 0
        Do Get-Sum-Acum
        Let #CalcRsltVal = #SumAcum
        Let $PTU-Payment-DtDTU = $PaymentDt
  Else
        Do GetCalsByERDD
        Let #Result = 0
        Do Get-PTU-Earning
        If Rtrim(&PINTYPE, ' ') = 'DD0'
          Let #Result = #Result * -1
        End-If
        Let #CalcRsltVal = #Result
  End-If

  Evaluate $AnnlFld
  when = '070'
    Let #S5ug = #S5ug + #CalcRsltVal
    Break
  when = '071'
    Let #S5ue = #S5ue + #CalcRsltVal
    Break
  End-Evaluate

FROM PS_GPMX_ANNL_DTL AC
    ,PS_GP_PIN        PIN
WHERE AC.COMPANY        = $Company
  AND AC.GPMX_ANNL_FLD IN ('070','071')
  AND AC.EFFDT          = (SELECT MAX(BB.EFFDT)
                             FROM PS_GPMX_ANNL_DTL BB
                            WHERE BB.COMPANY = AC.COMPANY
                              AND BB.EFFDT  <= $EndDt)
  AND PIN.PIN_NUM       = AC.GPMX_PIN_ANNL_NUM
End-select
Do CleanQuery($Cals_include, $Cals_include)
Do CleanQuery($Cals_exclude, $Cals_exclude)

#debug show '    $Cals_include   [' $Cals_include ']'
#debug show '    $Cals_exclude   [' $Cals_exclude ']'

if $Cals_exclude <> ''
    Let $QueryExclude = 'AND (A.CAL_RUN_ID NOT IN ('|| $Cals_exclude ||'))'
End-If

if $Cals_include <> ''
    Let $QueryInclude = 'OR (A.CAL_RUN_ID IN ('|| $Cals_include ||'))'
End-If
#debug show '    $QueryInclude       [' $QueryInclude ']'
#debug show '    $QueryExclude       [' $QueryExclude ']'
!#debug show '$PTU-Payment-DtDTU: ' $PTU-Payment-DtDTU
End-Procedure Get-PTU

!******************************************************************************
Begin-Procedure Get-PTU-Earning
#debug show '  >Get-PTU-Earning'
#debug show '   $Emplid '  $Emplid
#debug show '   $Company ' $Company
#debug show '   #Pin_Num '  #Pin_Num EDIT 999999
#debug show '   $BgnDt ' $BgnDt
#debug show '   $EndDt ' $EndDt
!*************************************************************************
Begin-Select
C.SLICE_BGN_DT &PTUPAYMENTDT
SUM(C.CALC_RSLT_VAL + C.CALC_ADJ_VAL) &SUM-EARN
        Do Convert-To-DTU-Date(&PTUPAYMENTDT, $PTU-Payment-DtDTU)
        Let #Result = #Result + &SUM-EARN

FROM PS_GP_RSLT_PI_SOVR A
   , PS_GP_RSLT_ERN_DED C
   , PS_GP_PIN D
WHERE A.EMPLID        = $Emplid
  AND A.SOVR_VAL_CHAR = $Company
  AND A.INSTANCE      = (SELECT MIN(A2.INSTANCE)
                           FROM PS_GP_RSLT_PI_SOVR A2
                          WHERE A.ORIG_CAL_RUN_ID   = A2.ORIG_CAL_RUN_ID
                            AND A2.RSLT_SEG_NUM     = 1
                            AND A.PIN_NUM           = A2.PIN_NUM
                            AND A2.EMPLID           = A.EMPLID
                            AND A2.EMPL_RCD         = A.EMPL_RCD
                            AND A2.GP_PAYGROUP      = A.GP_PAYGROUP
                            AND A2.CAL_ID           = A.CAL_ID
                            AND A2.ORIG_CAL_RUN_ID  = A.ORIG_CAL_RUN_ID
                            AND A2.SOVR_VAL_CHAR    = A.SOVR_VAL_CHAR)
  AND A.CAL_RUN_ID      = A.ORIG_CAL_RUN_ID
  AND A.RSLT_SEG_NUM    = 1
  AND A.PIN_NUM         = D.PIN_NUM
  AND C.PIN_NUM         = #Pin_Num
  AND D.PIN_CODE        = 'PTU IMP DIAS MEX'
  AND C.EMPLID          = A.EMPLID
  AND C.EMPL_RCD        = A.EMPL_RCD
  AND C.CAL_RUN_ID      = A.CAL_RUN_ID
  AND C.GP_PAYGROUP     = A.GP_PAYGROUP
  AND C.CAL_ID          = A.CAL_ID
  AND C.ORIG_CAL_RUN_ID = A.ORIG_CAL_RUN_ID
  AND C.RSLT_SEG_NUM    = A.RSLT_SEG_NUM
  AND C.SLICE_END_DT   >= $BgnDt !SG
  AND C.SLICE_END_DT   <= $EndDt !SG
GROUP BY C.SLICE_BGN_DT
End-Select
 #debug show '    #Result ' #Result
End-Procedure Get-PTU-Earning

!******************************************************************************
Begin-Procedure Get-Earns-Ded

#debug show '    #Pin_Num: ' #Pin_Num EDIT 999999 ', $Type_Elem: ' $ArrENTRY_TYPE_ELEM ', $PinCode: ' $PinCode

IF  $ArrENTRY_TYPE_ELEM = 'AC0'
   DO Get-Acum-Mbrs
ELSE
   Do Get-Acum-ErnDed
END-IF
End-Procedure Get-Earns-Ded

!******************************************************************************
begin-procedure Get-Tax-Last-MSalary
#debug show '  >Get-Tax-Last-MSalary'
#debug show '   $Emplid ' $Emplid
#debug show '   $RangeIni ' $RangeIni
#debug show '   $RangeFin ' $RangeFin
#debug show '   $BgnDt ' $BgnDt
#debug show '   $EndDt ' $EndDt

!******************************************************************************
Let #Result = 0
begin-SELECT
X.CALC_RSLT_VAL

   Let #Result = &X.CALC_RSLT_VAL

FROM PS_GP_RSLT_PIN_VW X
   , PS_GP_PIN Y
   , PS_GP_PYE_PRC_STAT A1
   , PS_GP_PYE_SEG_STAT B1
   , PS_PER_ORG_ASGN   ASG
WHERE A1.CAL_RUN_ID       = B1.CAL_RUN_ID 
  AND A1.EMPLID           = B1.EMPLID 
  AND A1.EMPL_RCD         = B1.EMPL_RCD 
  AND A1.EMPLID           = ASG.EMPLID 
  AND A1.EMPL_RCD         = ASG.EMPL_RCD 
  AND A1.GP_PAYGROUP      = B1.GP_PAYGROUP 
  AND A1.CAL_ID           = B1.CAL_ID 
  AND A1.ORIG_CAL_RUN_ID  = B1.ORIG_CAL_RUN_ID
  AND X.PIN_NUM           = Y.PIN_NUM
  AND X.EMPLID            = $Emplid
  AND X.EMPL_RCD          = #Empl_Rcd
  AND Y.PIN_CODE          = 'FD FM TOT ISR SDO MEX'
  AND X.SLICE_END_DT     >= $RangeIni
  AND X.SLICE_END_DT     <= $RangeFin
  AND A1.CALC_TYPE        = 'P'
  AND B1.RSLT_VER_NUM     = (SELECT MAX(BA.RSLT_VER_NUM) 
                               FROM PS_GP_PYE_SEG_STAT  BA 
                              WHERE B1.EMPLID      = BA.EMPLID 
                                AND B1.EMPL_RCD    = BA.EMPL_RCD 
                                AND B1.CAL_ID      = BA.CAL_ID 
                                AND B1.GP_PAYGROUP = BA.GP_PAYGROUP
                                AND B1.CAL_RUN_ID  = BA.CAL_RUN_ID)
AND B1.RSLT_REV_NUM        = 1
AND B1.CALC_ACTION        IN ('C','R','W')
AND B1.PYE_CALC_STAT      >= '50'
  AND B1.SEG_END_DT      >= $RangeIni
  AND B1.SEG_END_DT      <= $RangeFin
AND A1.EMPLID              = X.EMPLID
AND A1.EMPL_RCD            = X.EMPL_RCD
AND A1.CAL_RUN_ID          = X.CAL_RUN_ID
AND A1.GP_PAYGROUP         = X.GP_PAYGROUP
AND A1.CAL_ID              = X.CAL_ID
AND A1.ORIG_CAL_RUN_ID     = X.ORIG_CAL_RUN_ID
AND B1.RSLT_SEG_NUM        = X.RSLT_SEG_NUM
end-Select
#debug show '#Result ' #Result
end-procedure Get-Tax-Last-MSalary

!******************************************************************************
begin-procedure Find-Emplid-Job
#debug show '> Find-Emplid-Job '

!******************************************************************************
Let $Find-Emplid = 'N'
begin-select
J.EMPL_RCD
J.COMPANY
J.BUSINESS_UNIT
J.GP_PAYGROUP
J.EMPL_STATUS
J.DEPTID
J.LOCATION
J.SETID_LOCATION
J.MONTHLY_RT
J.ACTION
J.ACTION_REASON
J.UNION_CD
S.NUMERIC_CD

  Let $UnionCd   = Rtrim(&J.UNION_CD, ' ')

  If $UnionCd <> ''
     Let $S103 = 'X'
  else
     Let $S103 = ' '
  End-if

  Let $S105 = Rtrim(&S.NUMERIC_CD, ' ')

  Let $Find-Emplid = 'Y'
  Let $Company     = rtrim(&J.COMPANY,' ')
  Let $Bus_Unit    = rtrim(&J.BUSINESS_UNIT,' ')
  Let $PayGroup    = rtrim(&J.GP_PAYGROUP,' ')
  Let $Empl_Status = rtrim(&J.EMPL_STATUS,' ')
  Let $DeptId      = rtrim(&J.DEPTID,' ')
  Let $Location    = rtrim(&J.LOCATION,' ')
  Let $SetId_Loc   = rtrim(&J.SETID_LOCATION,' ')
  Let $EmpAction   = &J.ACTION
  Let $EmpActnRsn  = &J.ACTION_REASON
  Let #S3e         = &J.MONTHLY_RT

  do Minimum-Wage
  do Get-Other-Employer
  do Get-Other-Employer-Det

FROM PS_JOB J
, PS_LOCATION_TBL L
, PS_STATE_TBL S
WHERE J.EMPLID    = $Emplid
  AND J.COMPANY   = $Company
  AND J.EFFDT     = $EffDtOk
  AND J.EFFSEQ    = #EffseqOk
  AND L.LOCATION  = J.LOCATION
  AND L.SETID     = J.SETID_LOCATION
  AND L.EFFDT     = (SELECT MAX(LOCT.EFFDT) FROM PS_LOCATION_TBL LOCT
                      WHERE LOCT.LOCATION  = J.LOCATION 
                        AND LOCT.SETID     = J.SETID_LOCATION)
  AND S.COUNTRY   = L.COUNTRY
  AND S.STATE     = L.STATE
end-select
#debug show '  $Find-Emplid : ' $Find-Emplid
#debug show '  $UnionCd     : ' $UnionCd
!#debug show '  EmplBegDt    : ' $EmplBegDt
!#debug show '  EmplTermDt   : ' $EmplTermDt
end-procedure Find-Emplid-Job


!****************************************************************************
begin-procedure Get-StockValues-OtherExpenses
#debug show '  > Get-StockValues-OtherExpenses *'
!****************************************************************************
Let $Shares = '2'

   Let #AdInfo1 = 0
   Let $AdInfo2 = ' '
   Let #AdInfo3 = 0
   Let #AdInfo4 = 0

begin-select
GPMX_MAR_VAL_SHARE
GPMX_OPT_PRICE
GPMX_ISR_RET
GPMX_TRAVEL_EXPENS
GPMX_AMT_CONTR
GPMX_CONTR_APPL
GPMX_EE_DED_CONTR
GPMX_ER_DED_CONTR

   Let $Shares = '1'
   Let #S4k = &GPMX_MAR_VAL_SHARE
   Let #S4l = &GPMX_OPT_PRICE
   Let #S4n = &GPMX_ISR_RET
   Let #S5qe = &GPMX_TRAVEL_EXPENS

   Let #AdInfo1 = &GPMX_AMT_CONTR
   Let $AdInfo2 = &GPMX_CONTR_APPL
   Let #AdInfo3 = &GPMX_EE_DED_CONTR
   Let #AdInfo4 = &GPMX_ER_DED_CONTR

FROM PS_GPMX_FORM37_ADD
WHERE EMPLID = $Emplid
AND EMPL_RCD = #Empl_Rcd
AND COMPANY = $Company
AND GPMX_BALANCE_YEAR  = #Bal_Year
end-select

#Debug show '     $Emplid  :' $Emplid
#Debug show '     #AdInfo1 :' #AdInfo1
#Debug show '     $AdInfo2 :' $AdInfo2
#Debug show '     #AdInfo3 :' #AdInfo3
#Debug show '     #AdInfo4 :' #AdInfo4

Evaluate $AdInfo2
 When = ' '
    Let $ContribAppl = '0'
    break
 When = 'N'
    Let $ContribAppl = '2'
    break
 When = 'Y'
    Let $ContribAppl = '1'
    break
End-Evaluate

end-procedure Get-StockValues-OtherExpenses

!****************************************************************************
begin-procedure Minimum-Wage
#debug show '  >Minimum-Wage'
#debug show '    $Location : ' $Location
#debug show '    $SetId_Loc: ' $SetId_Loc
#debug show '    $EndDt    : ' $EndDt
!****************************************************************************
begin-select
L.SETID
L.LOCATION
L.ESTABID
LOC.WAGE_ZONE_MEX
LOC.IMS_ZONE_MEX
W.GPMX_MINIMUM_WAGE

   Let #MinimumWage = &W.GPMX_MINIMUM_WAGE
   Let $Zone = rtrim(&LOC.WAGE_ZONE_MEX,' ')
   Let $IMSZone = rtrim(&LOC.IMS_ZONE_MEX,' ')

     Evaluate $Zone
     when = '10'
          Let $S104 ='A'
     break
     when = '20'
          Let $S104 ='B'
     break
     when = '30'
          Let $S104 ='C'
     break
     End-Evaluate

 FROM PS_LOCATION_TBL   L, 
      PS_ESTAB_TBL    LOC, 
      PS_GPMX_MIN_WAGE  W
WHERE L.LOCATION    = $Location
  AND L.SETID       = $SetId_Loc
  AND L.EFFDT       = (SELECT MAX(L1.EFFDT)
                         FROM  PS_LOCATION_TBL L1
                        WHERE L1.SETID          = L.SETID
                          AND   L1.LOCATION     = L.LOCATION
                          AND   L1.EFFDT       <= $EndDt)
  AND LOC.ESTABID     = L.ESTABID
  AND   LOC.EFFDT     = (SELECT MAX(LOC1.EFFDT)
                           FROM  PS_ESTAB_TBL LOC1
                          WHERE LOC1.ESTABID    = LOC.ESTABID
                            AND   LOC1.EFFDT   <= $EndDt)
  AND W.WAGE_ZONE_MEX = LOC.WAGE_ZONE_MEX
  AND W.EFFDT         = (SELECT MAX(W1.EFFDT)
                           FROM  PS_GPMX_MIN_WAGE W1
                          WHERE W1.WAGE_ZONE_MEX = W.WAGE_ZONE_MEX
                            AND   W1.EFFDT      <= $EndDt)
end-select
#debug show '   Minimum-Wage: '  $S104
end-procedure Minimum-Wage

!****************************************************************************
begin-procedure Find-Self-Pres
#debug show '  > Find-Self-Pres'
!****************************************************************************
begin-select
SP.EMPLID
   Let $Find-Emplid = 'Y'

 FROM PS_GPMX_EE_NOADJ_D SP
WHERE SP.GPMX_BALANCE_YEAR  = #Bal_Year
  AND SP.EMPLID             = $Emplid
  AND SP.EMPL_RCD           = #Empl_Rcd
  AND SP.GPMX_ADJ_TYPE      = '0010'
end-select
end-procedure Find-Self-Pres

!****************************************************************************
begin-procedure Select-Emplid-Data
#debug show '  > Select-Emplid-Data'

!****************************************************************************
begin-select
PA.EMPLID
PA.FIRST_NAME
PA.MIDDLE_NAME
PA.LAST_NAME
PA.SECOND_LAST_NAME

  Let $Empl_Name = rtrim(&PA.FIRST_NAME,' ') || ' ' ||rtrim(&PA.MIDDLE_NAME,' ')
  Let $Empl_LastName = rtrim(&PA.LAST_NAME,' ')
  Let $Empl_SecondLastName = rtrim(&PA.SECOND_LAST_NAME,' ')

  Let $StringIn = $Empl_Name
  do Check-Characters
  move $String to $Empl_Name
  Let $Empl_Name = rtrim($Empl_Name, ' ')

  Let $StringIn = $Empl_LastName
  do Check-Characters
  move $String to $Empl_LastName

  Let $StringIn = $Empl_SecondLastName
  do Check-Characters
  move $String to $Empl_SecondLastName

FROM PS_PERSON_NAME PA
WHERE PA.EMPLID = $Emplid
ORDER BY PA.EMPLID
end-select

begin-select
PB.NATIONAL_ID
   Let $Empl_RFC  = rtrim(&PB.NATIONAL_ID,' ')

FROM PS_PERS_NID PB
WHERE PB.NATIONAL_ID_TYPE = 'RFC'
AND PB.COUNTRY = 'MEX'
AND PB.EMPLID = $Emplid
end-select

begin-select
PC.NATIONAL_ID
  Let $Empl_CURP = rtrim(&PC.NATIONAL_ID,' ')

FROM PS_PERS_NID PC
WHERE PC.NATIONAL_ID_TYPE = 'CURP'
AND PC.COUNTRY = 'MEX'
AND PC.EMPLID = $Emplid
end-select
#debug show '    $Empl_Name: ' $Empl_Name
#debug show '    $Empl_RFC : ' $Empl_RFC
#debug show '    $Empl_CURP: ' $Empl_CURP
end-procedure Select-Emplid-Data

!****************************************************************************
Begin-Procedure Get-Years-Of-Service
#debug show '  > Get-Years-Of-Service '
#debug show '    $Emplid         ' $Emplid
#debug show '    #Empl_Rcd        ' #Empl_Rcd
#debug show '    $EmplTermDt     ' $EmplTermDt
#debug show '    $Service_Date   ' $Service_Date
#debug show '    $EndDtDTU       ' $EndDtDTU
#debug show '    $EmplTerminated ' $EmplTerminated
!****************************************************************************
!Last hire or rehire employee date before this termination
begin-select
E.TERMINATION_DT
E.SERVICE_DT

  Let $Term_Date = &E.TERMINATION_DT
  Let $Service_Date = &E.SERVICE_DT

  #debug show '    $Term_Date    : ' $Term_Date
  #debug show '    $Service_Date : ' $Service_Date

  do Convert-To-DTU-Date($Term_Date,$Term_DateDTU)
  do Convert-To-DTU-Date($Service_Date,$Service_DateDTU)

  if (rtrim($Term_Date,' ') <> '') and ($Term_DateDTU <= $EndDtDTU)
     do dtu-diff-months($Service_DateDTU, $Term_DateDTU, #Months_Service)
  else
     do dtu-diff-months($Service_DateDTU, $EndDtDTU, #Months_Service)
  end-if

  Let #Years_Service = Trunc(#Months_Service / 12, 0)
  Let #Months_Service = Mod(#Months_Service,12)
  Let #Months_Service = #Months_Service / 6
  Let #Years_Service = #Years_Service + Trunc(#Months_Service,0)
  Let #S3b = #Years_Service

FROM PS_EMPLOYMENT E
WHERE EMPLID = $Emplid
end-select

If $EmplTerminated = 'Y' and $Term_Date = ''
   #debug show '    $Service_DateDTU  ' $Service_DateDTU
   #debug show '    $Term_DateDTU     ' $Term_DateDTU

   Let $Term_Date = $origEmplTermDt
   do Convert-To-DTU-Date($Term_Date,$Term_DateDTU)

   if $Service_DateDTU <> '' and ($Service_DateDTU > $Term_DateDTU)
      let $Service_Date = $HireDate
      do Convert-To-DTU-Date($Service_Date,$Service_DateDTU)
   end-if

   do dtu-diff-months($Service_DateDTU, $Term_DateDTU, #Months_Service)
   Let #Years_Service = Trunc(#Months_Service / 12, 0)
   Let #Months_Service = Mod(#Months_Service,12)
   Let #Months_Service = #Months_Service / 6
   Let #Years_Service = #Years_Service + Trunc(#Months_Service,0)
   Let #S3b = #Years_Service

Begin-Select
YS.LAST_HIRE_DT

    Let $YsBGNDate = Rtrim(&YS.LAST_HIRE_DT, ' ')
    Let $YsENDDate = $TempTerm

FROM PS_JOB YS
WHERE YS.EMPLID = $Emplid
AND YS.EMPL_RCD = #Empl_rcd
AND YS.EFFDT  = (SELECT MAX(YS2.EFFDT)
                 FROM PS_JOB YS2
                 WHERE YS2.EMPLID = YS.EMPLID
                 AND YS2.EMPL_RCD = YS.EMPL_RCD
                 AND YS2.EFFDT <= $TempTerm)
AND YS.EFFSEQ = (SELECT MAX(YS3.EFFSEQ)
                 FROM PS_JOB YS3
                 WHERE YS3.EMPLID = YS.EMPLID
                 AND YS3.EMPL_RCD = YS.EMPL_RCD
                 AND YS3.EFFDT = YS.EFFDT)
End-Select

#Debug show '      $YsBGNDate :' $YsBGNDate
#Debug show '      $YsENDDate :' $YsENDDate

Do Convert-To-DTU-Date($YsBGNDate,$YsBGNDate)
Do Convert-To-DTU-Date($YsENDDate,$YsENDDate)

    Do dtu-diff-months($YsBGNDate, $YsENDDate, #Months_Service)
    Let #Years_Service = Trunc(#Months_Service / 12, 0)
    Let #Months_Service = Mod(#Months_Service,12)
    Let #Months_Service = #Months_Service / 6
    Let #Years_Service = #Years_Service + Trunc(#Months_Service,0)
    Let #S3b = #Years_Service
#Debug show '     #S3b :' #S3b
end-if

#debug show '    $Service_Date:  ' $Service_Date
#debug show '    $Term_Date:     '  $Term_Date
#debug show '    #Years_Service: ' #Years_Service EDIT 99
End-Procedure Get-Years-Of-Service

!****************************************************************************
begin-procedure Annual-Adjust
#debug show '* Annual-Adjust *'
#debug show '$EMPLID ' $EMPLID
#debug show '#Empl_Rcd ' #Empl_Rcd
#debug show '$Company ' $Company
#debug show '#Bal_Year ' #Bal_Year EDIT 9999
!****************************************************************************
Let $S101 = $ZERO
Let $S102 = $ZERO
begin-SELECT
AA.GPMX_CALC_TYPE
AA.GPMX_ADJ_TYPE
!AA.GPMX_EMPL_SUBSIDY

  Let $CalType = Rtrim(&AA.GPMX_CALC_TYPE, ' ')
  Let $AdjType = Rtrim(&AA.GPMX_ADJ_TYPE, ' ')
  If ($CalType <> '' Or $AdjType <> '')
          Evaluate $CalType
            when = '0010'
                 Let $S102 = 'A'
            break
            when = '0020'
                 Let $S102 = 'B'
            break
            when-other
                 Let $S102 = 'A'
            break
          End-Evaluate

          If $AdjType = ''
                Let $S101 = 'X'
          End-if
  End-If
FROM PS_GPMX_ANL_ADJ_WA AA
WHERE AA.EMPLID = $EMPLID
AND AA.EMPL_RCD = #Empl_Rcd
AND   AA.COMPANY = $Company
AND   AA.GPMX_BALANCE_YEAR = #Bal_Year
end-SELECT
#debug show '$S101 ' $S101
#debug show '$S102 ' $S102
end-procedure Annual-Adjust

!****************************************************************************
begin-procedure Get-Other-Employer
#debug show '  >Get-Other-Employer'
#debug show '    $Emplid  : ' $Emplid
#debug show '    #Empl_Rcd: ' #Empl_Rcd EDIT 9
#debug show '    $BgnDt   : ' $BgnDt
#debug show '    $RangeFin: ' $RangeFin
#debug show '    #Bal_Year: ' #Bal_Year EDIT 9999
!****************************************************************************
Let #OthEmplCount  = 0

Begin-SELECT
OTH.RFC_ER_ID_MEX

  Let $RFCEmployer  = rtrim(&OTH.RFC_ER_ID_MEX, ' ')
  SHOW #OthEmplCount '-'  $RFCEmployer
  Let $RFCEmployer = translate($RFCEmployer,'-','')

  If $RFCEmployer <> ''
     Let #OthEmplCount  = #OthEmplCount + 1
     SHOW #OthEmplCount '-'  $RFCEmployer
     Evaluate #OthEmplCount
     when = 1
          Let $S111 = $RFCEmployer
     break
     when = 2
          Let $S112 = $RFCEmployer
     break
     when = 3
          Let $S113 = $RFCEmployer
     break
     when = 4
          Let $S114 = $RFCEmployer
     break
     when = 5
          Let $S115 = $RFCEmployer
     break
     when = 6
          Let $S116 = $RFCEmployer
     break
     when = 7
          Let $S117 = $RFCEmployer
     break
     when = 8
          Let $S118 = $RFCEmployer
     break
     when = 9
          Let $S119 = $RFCEmployer
     break
     when = 10
          Let $S120 = $RFCEmployer
     break
     End-Evaluate
  End-if

 FROM PS_GPMX_OTH_ER OTH
WHERE OTH.EMPLID             = $Emplid
  AND OTH.EMPL_RCD           = #Empl_Rcd
  AND OTH.START_DT          >= $BgnDt
  AND OTH.END_DT            <= $RangeFin
  AND OTH.GPMX_BALANCE_YEAR  = #Bal_Year
end-select
end-procedure Get-Other-Employer

!****************************************************************************
begin-procedure Get-Other-Employer-Det
#debug show '  >Get-Other-Employer-Det'
#debug show '    $Emplid  : ' $Emplid
#debug show '    #Empl_Rcd: ' #Empl_Rcd EDIT  9
#debug show '    $BgnDt   : ' $BgnDt
#debug show '    $RangeFin: ' $RangeFin
#debug show '    #Bal_Year: ' #Bal_Year EDIT 9999
!****************************************************************************

Begin-SELECT
RFC_ER_ID_MEX
GPMX_ERNDED_CD
SUM(AMOUNT)  &Amount

  #debug show '&Amount:  '  &Amount
  #debug SHOW '&GPMX_ERNDED_CD: ' &GPMX_ERNDED_CD
  If Rtrim(&RFC_ER_ID_MEX, ' ') <> Rtrim($Legal_RFC, ' ')
    Evaluate &GPMX_ERNDED_CD
    when = '0010'
    when = '0160'
         Let #S5O1g = #S5O1g  + &Amount
         break
    when = '0120'
    when = '0020'
    when = '0040'
    when = '0030'
    when = '0050'
         Let #S5O1e = #S5O1e  + &Amount
         break
    when = '0140'
    when = '0090'
         Let #S6V1 = #S6V1  + &Amount
         break
    when = '0150'
         Let #S6Y1 = #S6Y1  + &Amount
         break
    when = '0070'
         Let #S2G  = #S2G   + &Amount
         break
    when = '0080'
         Let #S2H  = #S2H   + &Amount
         break
    when = '0100'
         Let #S6Z1  = #S6Z1 + &Amount
         break
    when = '0170'
         Let #F122  = #F122 + &Amount
         break
    End-Evaluate
  End-If
 FROM PS_GPMX_OTH_ER_DET
WHERE EMPLID             = $Emplid
  AND EMPL_RCD           = #Empl_Rcd
  AND START_DT          >= $BgnDt
  AND END_DT            <= $RangeFin
  AND GPMX_BALANCE_YEAR  = #Bal_Year
GROUP BY RFC_ER_ID_MEX, GPMX_ERNDED_CD
end-select
end-procedure Get-Other-Employer-Det

!****************************************************************************
begin-procedure Get-Multiple-ErnsDed
#debug show '  >Get-Multiple-ErnsDed '
#debug show '   $Emplid :  ' $Emplid ', #Empl_Rcd: ' #Empl_Rcd ', $Company: ' $Company ', $RangeIni: ' $RangeIni ', $RangeFin: ' $RangeFin
!****************************************************************************
Let #CalcRsltVal   = 0

#debug show '   Calc Annl without/Acum'
Begin-SELECT
B.GPMX_ANNL_FLD
B.ENTRY_TYPE_ELEM
SUM(C.CALC_RSLT_VAL + C.CALC_ADJ_VAL) &CALC_RSLT_VAL

  #debug show $Emplid '  ANNL FLD: ' &B.GPMX_ANNL_FLD ' ENTRY TYPE: ' &B.ENTRY_TYPE_ELEM ' RSLT: ' &CALC_RSLT_VAL

  if &B.ENTRY_TYPE_ELEM = 'ER0'
     Let #CalcRsltVal = #CalcRsltVal + &CALC_RSLT_VAL
  ELSE
     Let #CalcRsltVal = #CalcRsltVal - &CALC_RSLT_VAL
  END-IF
  
  Let $AnnlFld = Rtrim(&B.GPMX_ANNL_FLD, ' ')
  Do Get-Multiple-Values

FROM PS_GPMX_ANNL_DTL B
   , PS_GP_RSLT_ERN_DED C
   , PS_GP_PYE_PRC_STAT  A1
   , PS_GP_PYE_SEG_STAT  B1
   , PS_PER_ORG_ASGN    ASG
WHERE A1.CAL_RUN_ID       = B1.CAL_RUN_ID 
  AND A1.EMPLID           = B1.EMPLID 
  AND A1.EMPL_RCD         = B1.EMPL_RCD 
  AND A1.EMPLID           = ASG.EMPLID 
  AND A1.EMPL_RCD         = ASG.EMPL_RCD 
  AND A1.GP_PAYGROUP      = B1.GP_PAYGROUP 
  AND A1.CAL_ID           = B1.CAL_ID 
  AND A1.ORIG_CAL_RUN_ID  = B1.ORIG_CAL_RUN_ID
  AND C.EMPLID            = $Emplid
  AND C.EMPL_RCD          = #Empl_Rcd
  AND C.PIN_NUM           = B.GPMX_PIN_ANNL_NUM
  AND C.SLICE_END_DT     >= $RangeIni
  AND C.SLICE_END_DT     <= $RangeFin
  AND B.ENTRY_TYPE_ELEM  <> 'AC0'
  AND B.GPMX_ANNL_FLD NOT IN  ('000','001','002')
  AND B.COMPANY           = $Company
  AND B.EFFDT             = (SELECT MAX(BB.EFFDT)
                               FROM PS_GPMX_ANNL_DTL BB
                              WHERE BB.COMPANY = B.COMPANY
                                AND BB.EFFDT <= $EndDt)
  AND A1.CALC_TYPE        = 'P'
  AND B1.RSLT_VER_NUM     = (SELECT MAX(RSLT_VER_NUM)
                               FROM PS_GP_PYE_SEG_STAT
                              WHERE A1.EMPLID = EMPLID
                                AND A1.EMPL_RCD = EMPL_RCD
                                AND A1.GP_PAYGROUP = GP_PAYGROUP
                                AND A1.CAL_RUN_ID  = CAL_RUN_ID
                                AND A1.CAL_ID = CAL_ID )
  AND B1.RSLT_REV_NUM     = 1
  AND B1.CALC_ACTION     IN ('C','R','W')
  AND B1.PYE_CALC_STAT   >= '50'
  AND B1.SEG_END_DT      >= $RangeIni
  AND B1.SEG_END_DT      <= $RangeFin
  AND A1.EMPLID           = C.EMPLID
  AND A1.EMPL_RCD         = C.EMPL_RCD
  AND A1.CAL_RUN_ID       = C.CAL_RUN_ID
  AND A1.GP_PAYGROUP      = C.GP_PAYGROUP
  AND A1.CAL_ID           = C.CAL_ID
  AND A1.ORIG_CAL_RUN_ID  = C.ORIG_CAL_RUN_ID
  AND B1.RSLT_SEG_NUM     = C.RSLT_SEG_NUM
  AND B1.RSLT_SEG_NUM     = (SELECT MAX(SS.RSLT_SEG_NUM)
                              FROM PS_GP_PYE_SEG_STAT SS
                             WHERE SS.EMPLID      = A1.EMPLID
                               AND   SS.CAL_RUN_ID  = A1.CAL_RUN_ID
                               AND   SS.EMPL_RCD    = A1.EMPL_RCD
                               AND   SS.GP_PAYGROUP = A1.GP_PAYGROUP
                               AND   SS.CAL_ID      = A1.CAL_ID
                               AND   SS.ORIG_CAL_RUN_ID = A1.ORIG_CAL_RUN_ID)
  GROUP BY B.GPMX_ANNL_FLD, B.ENTRY_TYPE_ELEM
  end-select

#debug show 'Calc Annl with/Acum'

Begin-SELECT
B.GPMX_ANNL_FLD &GPMXANLFLD
B.ENTRY_TYPE_ELEM &GPMXTYPELM
B.GPMX_PIN_ANNL_NUM &GPMXPINANNL

  Let $AnnlFld = Rtrim(&GPMXANLFLD, ' ')
  Let #Pin_Num = &GPMXPINANNL
  Do Get-Acum-Mbrs

  Let #CalcRsltVal = #Result
  Do Get-Multiple-Values

FROM PS_GPMX_ANNL_DTL    B
   , PS_GP_PYE_PRC_STAT  A1
   , PS_GP_PYE_SEG_STAT  B1
   , PS_PER_ORG_ASGN    ASG
WHERE A1.CAL_RUN_ID       = B1.CAL_RUN_ID 
  AND A1.EMPLID           = B1.EMPLID 
  AND A1.EMPL_RCD         = B1.EMPL_RCD 
  AND A1.EMPLID           = ASG.EMPLID 
  AND A1.EMPL_RCD         = ASG.EMPL_RCD 
  AND A1.GP_PAYGROUP      = B1.GP_PAYGROUP 
  AND A1.CAL_ID           = B1.CAL_ID 
  AND A1.ORIG_CAL_RUN_ID  = B1.ORIG_CAL_RUN_ID
  AND B.ENTRY_TYPE_ELEM   = 'AC0'
  AND B.GPMX_ANNL_FLD NOT IN ('000','001','002')
  AND A1.EMPLID           = $Emplid
  AND A1.EMPL_RCD         = #Empl_Rcd
  AND B.COMPANY           = $Company
  AND B.EFFDT             = (SELECT MAX(BB.EFFDT)
                               FROM PS_GPMX_ANNL_DTL BB
                              WHERE BB.COMPANY = B.COMPANY
                                AND BB.EFFDT <= $EndDt)
  AND A1.CALC_TYPE         = 'P'
  AND B1.RSLT_VER_NUM      = (SELECT MAX(RSLT_VER_NUM)
                               FROM PS_GP_PYE_SEG_STAT
                              WHERE A1.EMPLID = EMPLID
                                AND A1.EMPL_RCD = EMPL_RCD
                                AND A1.GP_PAYGROUP = GP_PAYGROUP
                                AND A1.CAL_RUN_ID  = CAL_RUN_ID
                                AND A1.CAL_ID = CAL_ID )
  AND B1.RSLT_REV_NUM      = 1
  AND B1.CALC_ACTION      IN ('C','R','W')
  AND B1.PYE_CALC_STAT    >= '50'
  AND B1.SEG_END_DT      >= $RangeIni
  AND B1.SEG_END_DT      <= $RangeFin
GROUP BY B.GPMX_ANNL_FLD, B.ENTRY_TYPE_ELEM, B.GPMX_PIN_ANNL_NUM
end-select

end-procedure Get-Multiple-ErnsDed

!**************************************
begin-procedure Get-Multiple-ErnsDed103
#debug show '  > Get-Multiple-ErnsDed103'
#debug show '    $Emplid ' $Emplid
#debug show '    #Empl_Rcd ' #Empl_Rcd
#debug show '    $EmplFstPR ' $EmplFstPR
#debug show '    $EmplLstPR ' $EmplLstPR
#debug show '    $EndDt ' $EndDt
#debug show '    $BgnDt ' $BgnDt
#debug show '    $Company ' $Company
!**************************************

Begin-SELECT
BA.GPMX_ANNL_FLD_103
C.PIN_NUM
BA.ENTRY_TYPE_ELEM &PINTYPE103
C.CALC_RSLT_VAL + C.CALC_ADJ_VAL &CAL_RSLT_VAL

 Let $AnnlFld103 = Rtrim(&BA.GPMX_ANNL_FLD_103, ' ')
 Let #Pin_Num =  &C.PIN_NUM

 #debug show 'AnnlFld ' $AnnlFld103 '&CAL_RSLT_VAL: '  &CAL_RSLT_VAL ' PIN TYPE: ' &PINTYPE103
 If $AnnlFld103 = '01'
    If Rtrim(&PINTYPE103, ' ') = 'DD0'
        Let #s5P1g = #s5P1g - &CAL_RSLT_VAL
    Else
        Let #s5P1g = #s5P1g + &CAL_RSLT_VAL
    End-If
 end-if

 if $AnnlFld103 = '02'
    If Rtrim(&PINTYPE103, ' ') = 'DD0'
        Let #s5P1e = #s5P1e - &CAL_RSLT_VAL
    Else
        Let #s5P1e = #s5P1e + &CAL_RSLT_VAL
    End-If
 end-if

FROM PS_GP_RSLT_ERN_DED  C
   , PS_GPMX_ANNL_103   BA
   , PS_GP_PYE_PRC_STAT A1
   , PS_GP_PYE_SEG_STAT B1
   , PS_PER_ORG_ASGN   ASG
WHERE A1.CAL_RUN_ID       = B1.CAL_RUN_ID 
  AND A1.EMPLID           = B1.EMPLID 
  AND A1.EMPL_RCD         = B1.EMPL_RCD 
  AND A1.EMPLID           = ASG.EMPLID 
  AND A1.EMPL_RCD         = ASG.EMPL_RCD 
  AND A1.GP_PAYGROUP      = B1.GP_PAYGROUP 
  AND A1.CAL_ID           = B1.CAL_ID 
  AND A1.ORIG_CAL_RUN_ID  = B1.ORIG_CAL_RUN_ID
  AND C.EMPLID            = $Emplid
  AND C.EMPL_RCD          = #Empl_Rcd
  AND C.PIN_NUM           = BA.GPMX_PIN_103_NUM
  AND BA.EFFDT            = (SELECT MAX(BB.EFFDT)
                               FROM PS_GPMX_ANNL_103 BB
                              WHERE BB.COMPANY  = BA.COMPANY
                                AND BB.EFFDT   <= $EndDt)
  AND BA.COMPANY          = $Company
  AND C.SLICE_END_DT     >= $RangeIni
  AND C.SLICE_END_DT     <= $RangeFin
  AND A1.CALC_TYPE        = 'P'
    AND B1.RSLT_VER_NUM   = (SELECT MAX(BA.RSLT_VER_NUM) 
                               FROM PS_GP_PYE_SEG_STAT  BA 
                              WHERE B1.EMPLID      = BA.EMPLID 
                                AND B1.EMPL_RCD    = BA.EMPL_RCD 
                                AND B1.CAL_ID      = BA.CAL_ID 
                                AND B1.GP_PAYGROUP = BA.GP_PAYGROUP
                                AND B1.CAL_RUN_ID  = BA.CAL_RUN_ID)
  AND B1.RSLT_REV_NUM     = 1
  AND B1.CALC_ACTION IN ('C','R','W')
  AND B1.PYE_CALC_STAT   >= '50'
  AND B1.SEG_END_DT      >= $RangeIni
  AND B1.SEG_END_DT      <= $RangeFin
  AND A1.EMPLID           = C.EMPLID
  AND A1.EMPL_RCD         = C.EMPL_RCD
  AND A1.CAL_RUN_ID       = C.CAL_RUN_ID
  AND A1.GP_PAYGROUP      = C.GP_PAYGROUP
  AND A1.CAL_ID           = C.CAL_ID
  AND A1.ORIG_CAL_RUN_ID  = C.ORIG_CAL_RUN_ID
  AND B1.RSLT_SEG_NUM     = C.RSLT_SEG_NUM
end-select
end-procedure Get-Multiple-ErnsDed103

!**************************************
begin-procedure Get-Multiple-Acum
#debug show '  > Get-Multiple-Acum'
!**************************************
LET #ResultCreSal = 0

Begin-Select
A.GPMX_ANNL_FLD              &ArrGPMX_ANNL_FLD    
A.ENTRY_TYPE_ELEM            &ArrENTRY_TYPE_ELEM  
A.GPMX_PIN_ANNL_NUM          &ArrGPMX_PIN_ANNL_NUM
B.PIN_CODE                   &ArrPIN_CODE         
B.PIN_NUM                    &ArrPIN_NUM

   ADD 1 TO #ArrayCount
   LET $ArrGPMX_ANNL_FLD      = LTRIM(RTRIM(&ArrGPMX_ANNL_FLD     , ' '), ' ')
   LET $ArrENTRY_TYPE_ELEM    = LTRIM(RTRIM(&ArrENTRY_TYPE_ELEM   , ' '), ' ')
   LET #ArrPIN_ANNL_NUM       = &ArrGPMX_PIN_ANNL_NUM
   LET $PinCode               = LTRIM(RTRIM(&ArrPIN_CODE          , ' '), ' ')
   LET #Pin_Num               = &ArrPIN_NUM
   !show '   Accm: ' $PinCode ', $S101: ' $S101 ', $S102: ' $S102 ', #Pin_Num: ' #Pin_Num edit 99999999
  IF $ArrGPMX_ANNL_FLD = '002' !ISR
    Do Get-Earns-Ded
    Let #S6U1 = #S6U1 + #Result
  END-IF
  EVALUATE $PinCode 
  WHEN = 'SUB NO ACRED_IMMNS MEX'
    IF $S101 <> 'X'
      Do Get-Earns-Ded
      Let #S2H = #S2H + Abs(#Result)
    END-IF
  WHEN = 'SUB ART 178 MEX' !DD
    IF $S101 = 'X' AND $S102 = 'A'
      Do Get-Earns-Ded
      Let #S2G = #S2G + ABS(#Result)
    END-IF
  WHEN = 'SUB ISR 1991 MEX' !DD
    IF $S101 = 'X' AND $S102 <> 'A'
      Do Get-Earns-Ded
      Let #S2G = #S2G + ABS(#Result)
    END-IF
  WHEN = 'SUB NO ACRE MEX'
    IF $S101 = 'X'
      Do Get-Earns-Ded
      Let #S2H = #S2H + Abs(#Result)
      ! Let #S3a = #S3a + #Result ! 19848675
    END-IF
  WHEN = 'LIQUIDACION BRUTA MEX'
    Do Get-Earns-Ded
    Let #S3a = #S3a + #Result
  WHEN = 'ISR NETO 112 MEX' !DD
    Do Get-Earns-Ded
    Let #S3h = #3h + #Result
  WHEN = 'CRE SAL EFEC_IMMNS MEX'
    Do Get-Earns-Ded
    Let #ResultCreSal = #Result
    Let #S6Z1 = #S6Z1 + Abs(#Result)
  WHEN = 'EXCE CRE SAL_IMMNS MEX'
    If #ResultCreSal = 0
      Do Get-Earns-Ded
    End-if
    Let #S6Z1 = #S6Z1 + Abs(#Result)
  END-EVALUATE

 FROM PS_GPMX_ANNL_DTL A,
      PS_GP_PIN B
WHERE B.PIN_NUM           = A.GPMX_PIN_ANNL_NUM
  AND A.EFFDT             = (SELECT MAX(A_ED.EFFDT) FROM PS_GPMX_ANNL_DTL A_ED 
                             WHERE A.COMPANY   = A_ED.COMPANY 
                               AND A_ED.EFFDT <= $EndDt) 
  AND A.COMPANY           = $Company
  AND A.GPMX_ANNL_FLD    IN ('000','001','002')
ORDER BY A.GPMX_ANNL_FLD, A.GPMX_PIN_ANNL_NUM DESC
End-Select
Let #S6U1 = Abs(#S6U1)
end-procedure Get-Multiple-Acum

!*********************************************************************************
Begin-Procedure Get-Acum-Adj
#debug show '  > Get-Acum-Adj '
#debug show '    $PinCode: ' $PinCode
#debug show '    #Pin_Num: ' #Pin_Num
#debug show '    $Emplid : ' $Emplid
#debug show '    $BgnDt  : ' $BgnDt
#debug show '    $EndDt  : ' $EndDt
#debug show '    $Company: ' $Company

!*********************************************************************************
Let #ResultAdj = 0
Begin-SELECT
SUM(C.USER_ADJ_AMT) &USRADJAMT

   Let #ResultAdj = &USRADJAMT
FROM PS_GP_ACM_USER_ADJ   C
   , PS_GP_PYE_PRC_STAT  A1
   , PS_GP_PYE_SEG_STAT  B1
   , PS_PER_ORG_ASGN    ASG
   , PS_GP_PIN            B
WHERE A1.CAL_RUN_ID       = B1.CAL_RUN_ID 
  AND A1.EMPLID           = B1.EMPLID 
  AND A1.EMPL_RCD         = B1.EMPL_RCD 
  AND A1.EMPLID           = ASG.EMPLID 
  AND A1.EMPL_RCD         = ASG.EMPL_RCD 
  AND A1.GP_PAYGROUP      = B1.GP_PAYGROUP 
  AND A1.CAL_ID           = B1.CAL_ID 
  AND A1.ORIG_CAL_RUN_ID  = B1.ORIG_CAL_RUN_ID
  AND B.PIN_NUM           = #Pin_Num
  AND C.PIN_NUM           = B.PIN_NUM
  AND C.EMPLID            = $Emplid
  AND C.EMPL_RCD          = #Empl_Rcd
  AND C.ACM_FROM_DT       = $BgnDt
  AND C.ACM_THRU_DT       = $EndDt
  AND C.USER_KEY1         = $Company
  AND B1.SEG_END_DT      >= $RangeIni
  AND B1.SEG_END_DT      <= $RangeFin
  AND C.CAL_ID            = A1.CAL_ID
  AND C.EMPLID            = A1.EMPLID
  AND C.EMPL_RCD          = A1.EMPL_RCD
  AND C.CAL_RUN_ID        = A1.CAL_RUN_ID
  AND C.GP_PAYGROUP       = A1.GP_PAYGROUP
  AND C.RSLT_SEG_NUM      = B1.RSLT_SEG_NUM
End-Select
#debug show '    #ResultAdj: ' #ResultAdj  EDIT 999,999,999.99
End-Procedure Get-Acum-Adj


!*********************************************************************************
Begin-Procedure Get-Sum-Acum
! Get accumulator sum month by month
#debug show '  > Get-Sum-Acum'
#debug show '    $EmplBegDt ' $EmplBegDt
#debug show '    $EmplLstPR ' $EmplLstPR
#debug show '    $EmplId ' $EmplId
#debug show '    #Pin_Num ' #Pin_Num
#debug show '    $PinCode ' $PinCode
#debug show '    $BgnDt     ' $BgnDt
#debug show '    $EndDt     ' $EndDt
!*********************************************************************************
Let #PinNumAcum = #Pin_Num
Let #SumAcum = 0
Begin-SELECT
A3.PYMT_DT &PTUPYMNTDT
SUM(P3.CALC_RSLT_VAL) &P3CALCRSLTVAL
   Do Convert-To-DTU-Date( &PTUPYMNTDT, $PaymentDt)
   Let #SumAcum = #SumAcum  + &P3CALCRSLTVAL

FROM PS_GP_PYE_PRC_STAT A3
   , PS_GP_PYE_SEG_STAT B3
   , PS_GP_RSLT_ACUM P3
   , PS_GP_PIN C
   , PS_GP_ACCUMULATOR C2
WHERE B3.CAL_RUN_ID       = A3.CAL_RUN_ID
  AND B3.EMPLID           = A3.EMPLID
  AND B3.EMPL_RCD         = A3.EMPL_RCD
  AND B3.GP_PAYGROUP      = A3.GP_PAYGROUP
  AND B3.CAL_ID           = A3.CAL_ID
  AND B3.ORIG_CAL_RUN_ID  = A3.ORIG_CAL_RUN_ID
  AND B3.PYE_CALC_STAT    >='50'
  AND B3.CALC_ACTION      = 'C'
  AND C.PIN_NUM           = #Pin_Num
  AND C.PIN_NUM           = C2.PIN_NUM
  AND C2.CORR_RTO_IND     = 'N'
  AND P3.CAL_RUN_ID       = A3.CAL_RUN_ID
  AND P3.EMPLID           = A3.EMPLID
  AND P3.EMPL_RCD         = A3.EMPL_RCD
  AND P3.GP_PAYGROUP      = A3.GP_PAYGROUP
  AND P3.CAL_ID           = A3.CAL_ID
  AND P3.ORIG_CAL_RUN_ID  = A3.ORIG_CAL_RUN_ID
  AND P3.RSLT_SEG_NUM     = B3.RSLT_SEG_NUM
  AND P3.ACM_FROM_DT      >=$BgnDt
  AND P3.ACM_THRU_DT      <=$EndDt
  AND P3.USER_KEY1        = $Company
  AND A3.RSLT_VER_NUM     = 1
  AND A3.RSLT_REV_NUM     = 1
  AND P3.EMPLID           = $EmplId
  AND A3.CAL_RUN_ID       = (SELECT AAS.CAL_RUN_ID
                               FROM PS_GP_CAL_RUN AAS
                              WHERE AAS.RUN_FINALIZED_TS = (SELECT MAX(AATS.RUN_FINALIZED_TS)
                                                              FROM PS_GP_CAL_RUN AATS
                                                             WHERE AATS.CAL_RUN_ID IN (SELECT AAA.CAL_RUN_ID
                                                                                         FROM PS_GP_RSLT_ACUM  AAA
                                                                                        WHERE AAA.ACM_FROM_DT = P3.ACM_FROM_DT
                                                                                          AND AAA.ACM_THRU_DT = P3.ACM_THRU_DT
                                                                                          AND AAA.EMPLID      = P3.EMPLID
                                                                                           AND AAA.PIN_NUM    = P3.PIN_NUM) ) )
  AND (A3.CAL_ID          = (SELECT AA3.CAL_ID
                             FROM PS_GP_CAL_RUN_DTL AA3
                             WHERE AA3.CAL_RUN_ID = P3.CAL_RUN_ID
                             AND AA3.CAL_FINAL_TS = (SELECT MAX(CAL_FINAL_TS)
                                                     FROM PS_GP_CAL_RUN_DTL
                                                     WHERE CAL_RUN_ID = AA3.CAL_RUN_ID))
   OR (A3.CAL_ID          = (SELECT DISTINCT OF2.CAL_ID   !Off-Cycle
                             FROM PS_GP_PYE_CAL OF2
                             WHERE OF2.EMPLID = A3.EMPLID
                             AND OF2.CAL_RUN_ID = A3.CAL_RUN_ID
                             AND OF2.EMPL_RCD = A3.EMPL_RCD
                             AND OF2.GP_PAYGROUP = A3.GP_PAYGROUP
                             AND PRD_BGN_DT >= P3.ACM_FROM_DT
                             AND PRD_END_DT <= P3.ACM_THRU_DT)
  AND A3.CAL_RUN_ID       = (SELECT OF1.CAL_RUN_ID
                                      FROM PS_GP_CAL_RUN OF1
                                      WHERE OF1.CAL_RUN_ID = A3.CAL_RUN_ID
                                      AND OFF_CYCLE = 'Y')))
GROUP BY A3.PYMT_DT
End-Select
Let $PinCode = ''
Let #Pin_Num = #PinNumAcum
Do Get-Acum-Adj
Let #SumAcum = #SumAcum + #ResultAdj
#debug show '#SumAcum ' #SumAcum
End-Procedure Get-Sum-Acum

!*********************************************************************************
begin-procedure Get-Multiple-Values
#debug show '  > Get-Multiple-Values'
#debug show '   $AnnlFld: ' $AnnlFld  ', #CalcRsltVal ' #CalcRsltVal
!*********************************************************************************

 Evaluate $AnnlFld
 when = '058'
   Let #S5og = #S5og + #CalcRsltVal
   Break
 when = '059'
   Let #S5oe = #S5oe + #CalcRsltVal
   Break
 when = '060'
   Let #S5pg = #S5pg + #CalcRsltVal
   Break
 when = '061'
   Let #S5pe = #S5pe + #CalcRsltVal
   Break
 when = '062'
   Let #S5qg = #S5qg + #CalcRsltVal
   Break
 when = '063'
   Let #S5qe = #S5qe + #CalcRsltVal
   Break
 when = '064'
   Let #S5rg = #S5rg + #CalcRsltVal
   Break
 when = '065'
   Let #S5re = #S5re + #CalcRsltVal
   Break
 when = '066'
   Let #S5sg = #S5sg + #CalcRsltVal
   Break
 when = '067'
   Let #S5se = #S5se + #CalcRsltVal
   Break
 when = '068'
   Let #S5tg = #S5tg + #CalcRsltVal
   Break
 when = '069'
   Let #S5te = #S5te + #CalcRsltVal
   Break
 when = '072'
   Let #S5vg = #S5vg + #CalcRsltVal
   Break
 when = '073'
   Let #S5ve = #S5ve + #CalcRsltVal
   Break
 when = '074'
   Let #S5wg = #S5wg + #CalcRsltVal
   Break
 when = '075'
   Let #S5we = #S5we + #CalcRsltVal
   Break
 when = '076'
   Let #S5xg = #S5xg + #CalcRsltVal
   Break
 when = '077'
   Let #S5xe = #S5xe + #CalcRsltVal
   Break
 when = '078'
   Let #S5yg = #S5yg + #CalcRsltVal
   Break
 when = '079'
   Let #S5ye = #S5ye + #CalcRsltVal
   Break
 when = '080'
   Let #S5zg = #S5zg + #CalcRsltVal
   Break
 when = '081'
   Let #S5ze = #S5ze + #CalcRsltVal
   Break
 when = '082'
   Let #S5A1g = #S5A1g + #CalcRsltVal
   Break
 when = '083'
   Let #S5A1e = #S5A1e + #CalcRsltVal
   Break
 when = '084'
   Let #S5B1g = #S5B1g + #CalcRsltVal
   Break
 when = '085'
   Let #S5B1e = #S5B1e + #CalcRsltVal
   Break
 when = '086'
    Let #S5C1g = #S5C1g + #CalcRsltVal
    Break
 when = '087'
    Let #S5C1e = #S5C1e + #CalcRsltVal
    Break
 when = '088'
    Let #S5D1g = #S5D1g + #CalcRsltVal
    Break
 when = '089'
    Let #S5D1e = #S5D1e + #CalcRsltVal
    Break
 when = '090'
    Let #S5E1g = #S5E1g + #CalcRsltVal
    Break
 when = '091'
    Let #S5E1e = #S5E1e + #CalcRsltVal
    Break
 when = '092'
    Let #S5F1g = #S5F1g + #CalcRsltVal
    Break
 when = '093'
    Let #S5F1e = #S5F1e + #CalcRsltVal
    Break
 when = '094'
    Let #S5G1g = #S5G1g + #CalcRsltVal
    Break
 when = '095'
    Let #S5G1e = #S5G1e + #CalcRsltVal
    Break
 when = '096'
    Let #S5H1g = #S5H1g + #CalcRsltVal
    Break
 when = '097'
    Let #S5H1e =#S5H1e + #CalcRsltVal
    Break
 when = '098'
    Let #S5I1g = #S5I1g + #CalcRsltVal
    Break
 when = '099'
    Let #S5I1e = #S5I1e + #CalcRsltVal
    Break
 when = '100'
    Let #S5J1g = #S5J1g + #CalcRsltVal
    Break
 when = '101'
    Let #S5J1e =#S5J1e + #CalcRsltVal
    Break
 when = '102'
    Let #S5K1g = #S5K1g + #CalcRsltVal
    Break
 when = '103'
    Let #S5K1e = #S5K1e + #CalcRsltVal
    Break
 when = '104'
    Let #S5L1g = #S5L1g + #CalcRsltVal
    Break
 when = '105'
    Let #S5L1e =#S5L1e + #CalcRsltVal
    Break
 when = '106'
    Let #S5M1g = #S5M1g + #CalcRsltVal
    Break
 when = '107'
    Let #S5M1e = #S5M1e + #CalcRsltVal
    Break
 when = '108'
    Let #S5N1g = #S5N1g + #CalcRsltVal
    Break
 when = '109'
    Let #S5N1e = #S5N1e + #CalcRsltVal
    Break
 when = '120'
    Let #S6Y1  = #S6Y1 + #CalcRsltVal
    Break
 when = '122'
    Let #S6a1  = Abs(#S6a1 + #CalcRsltVal)
    Break
 when = '123'
    Let #S6b1  = abs(#S6b1 + #CalcRsltVal)
    Break
 when = '128'
    Let #S2F   = #S2F  + #CalcRsltVal
    Break
 when = '129'
    If $S101 <> 'X'
      Let #S2G   = #S2G  + Abs(#CalcRsltVal)
    End-If
    Break
 when = '132'
    Let #S2L   = #S2L + #CalcRsltVal
    Break
 when = '126'
    Let #F122   = #F122 + #CalcRsltVal
    Break
 when = '134'
    Let #F130   = #F130 + #CalcRsltVal
    Break
 End-Evaluate

 Let #CalcRsltVal = 0
end-procedure Get-Multiple-Values


!*********************************************************************************
begin-procedure Initialize-Variables
#debug show '* Initialize-Variables *'
!*********************************************************************************
   ! Section 1 variables
   Let $Empl_Name = ''
   Let $Empl_LastName = ''
   Let $Empl_SecondLastName = ''
   Let $Empl_RFC  = ''
   Let $Empl_CURP = ''
   ! Section 2 variables
   Let $S101  = $ZERO
   Let $S102  = $ZERO
   Let $S103  = $ZERO
   Let $S104  = $ZERO
   Let $S105  = $ZERO
   Let #S106  = 0
   Let $S106a = $ZERO
   Let $S106b = $ZERO
   Let #S120  = 0
   Let $S107a = $ZERO
   Let $S107a = $ZERO
   Let $S108a = $ZERO
   Let $S108b = $ZERO
   Let $S109a = $ZERO
   Let $S109b = $ZERO
   Let $S110a = $ZERO
   Let $S110b = $ZERO
   Let $S111  = ''
   Let $S112  = ''
   Let $S113  = ''
   Let $S114  = ''
   Let $S115  = ''
   Let $S116  = ''
   Let $S117  = ''
   Let $S118  = ''
   Let $S119  = ''
   Let $S120  = ''

   Let #S2A  = 0
   Let #S2B  = 0
   Let #S2C  = 0
   Let #S2D  = 0
   Let #S2E  = 0
   Let #S2F  = 0
   Let #S2G  = 0
   Let #S2H  = 0
   Let #S2I  = 0
   Let #S2J  = 0
   Let #S2K  = 0
   Let #S2L  = 0
   Let #S2M  = 0
   Let #S2N  = 0

   ! Section 3 variables
   Let #S3O  = 0
   Let #S3P  = 0
   Let #S3Q  = 0
   Let #S3R  = 0
   Let #S3S  = 0
   Let #S3T  = 0
   Let #S3U  = 0
   Let #S3V  = 0
   Let #S3W  = 0
   Let #S3X  = 0
   Let #S3a  = 0
   Let #S3b  = 0
   Let #S3c  = 0
   Let #S3d  = 0
   Let #S3e = 0
   Let #S3f = 0
   Let #S3g = 0
   Let #S3h = 0

   ! Section 4 variables
   Let #S4i  = 0
   Let #S4j  = 0
   Let #S4k  = 0
   Let #S4l  = 0
   Let #S4m  = 0
   Let #S4n  = 0


   ! Section 6 variables
   Let #S5og = 0
   Let #S5oe = 0
   Let #S5pg = 0
   Let #S5pe = 0
   Let #S5qg = 0
   Let #S5qe = 0
   Let #S5rg = 0
   Let #S5re = 0
   Let #S5sg = 0
   Let #S5se = 0
   Let #S5tg = 0
   Let #S5te = 0
   Let #S5ug = 0
   Let #S5ue = 0
   Let #S5vg = 0
   Let #S5ve = 0
   Let #S5wg = 0
   Let #S5we = 0
   Let #S5xg = 0
   Let #S5xe = 0
   Let #S5yg = 0
   Let #S5ye = 0
   Let #S5zg = 0
   Let #S5ze = 0
   Let #S5A1g = 0
   Let #S5A1e = 0
   Let #S5B1g = 0
   Let #S5B1e = 0
   Let #S5C1g = 0
   Let #S5C1e = 0
   Let #S5D1g = 0
   Let #S5D1e = 0
   Let #S5E1g = 0
   Let #S5E1e = 0
   Let #S5F1g = 0
   Let #S5F1e = 0
   Let #S5G1g = 0
   Let #S5G1e = 0
   Let #S5H1g = 0
   Let #S5H1e = 0
   Let #S5I1g = 0
   Let #S5I1e = 0
   Let #S5J1g = 0
   Let #S5J1e = 0
   Let #S5K1g = 0
   Let #S5K1e = 0
   Let #S5L1g = 0
   Let #S5L1e = 0
   Let #S5M1g = 0
   Let #S5M1e = 0
   Let #S5N1g = 0
   Let #S5N1e = 0
   Let #S5O1g = 0
   Let #S5O1e = 0
   Let #S5P1g = 0
   Let #S5P1e = 0

   ! Section 6 variables
   Let #S6Q1  = 0
   Let #s6R1  = 0
   Let #S6U1  = 0
   Let #S6V1  = 0
   Let #S6W1  = 0
   Let #S6X1  = 0
   Let #S6Y1  = 0
   Let #S6Z1  = 0
   Let #S6a1  = 0
   Let #S6b1  = 0

   !New fields for 2009
   Let #F122  = 0
   Let #F123  = 0
   Let #F130  = 0
   Let #F131  = 0

   ! Section 7 variables
   Let $CompanyName      = ''
   Let $Company_RFC      = ''
   Let $Company_CURP     = ''
   Let $Company_Address1 = ''
   Let $Company_Address2 = ''
   Let $Address1         = ''
   Let $Address2         = ''
   Let $Address3         = ''
   Let $Address4         = ''
   Let $City             = ''
   Let $State            = ''
   Let $County           = ''
   Let $Zip              = ''
   Let $Legal_Name       = ''
   Let $Legal_RFC        = ''
   Let $Legal_CURP       = ''

   ! Other variables
   Let $Term_Date    = ''
   Let $Service_Date = ''


  Let $field001 = ''
  Let $field002 = ''
  Let $field003 = ''
  Let $field004 = ''
  Let $field005 = ''
  Let $field006 = ''
  Let $field007 = ''
  Let $field008 = $Zero
  Let $field009 = $Zero
  Let $field010 = $Zero
  Let $field011 = $Zero
  Let $field012 = ''
  Let $field013 = $Zero
  Let $field014 = $Zero
  Let $field015 = $Zero
  Let $field016 = ''
  Let $field017 = ''
  Let $field018 = ''
  Let $field019 = ''
  Let $field020 = ''
  Let $field021 = ''
  Let $field022 = ''
  Let $field023 = ''
  Let $field024 = ''
  Let $field025 = ''
  Let $field026 = $Zero !New Value
  Let $field027 = $Zero !New Value
  Let $field028 = $Zero !New Value
  Let $field029 = $Zero !New Value
  Let $field030 = $Zero
  Let $field031 = $Zero
  Let $field032 = '1'
  Let $field033 = $Zero
  Let $field034 = $Zero
  Let $field035 = $Zero
  Let $field036 = $Zero
  Let $field037 = $Zero
  Let $field038 = $Zero
  Let $field039 = $Zero
  Let $field040 = $Zero
  Let $field041 = $Zero
  Let $field042 = $Zero
  Let $field043 = $Zero
  Let $field044 = $Zero
  Let $field045 = $Zero
  Let $field046 = $Zero
  Let $field047 = $Zero
  Let $field048 = $Zero
  Let $field049 = $Zero
  Let $field050 = $Zero
  Let $field051 = $Zero
  Let $field052 = $Zero
  Let $field053 = $Zero
  Let $field054 = $Zero
  Let $field055 = $Zero
  Let $field056 = $Zero
  Let $field057 = $Zero
  Let $field058 = $Zero
  Let $field059 = $Zero
  Let $field060 = $Zero
  Let $field061 = $Zero
  Let $field062 = $Zero
  Let $field063 = $Zero
  Let $field064 = $Zero
  Let $field065 = $Zero
  Let $field066 = $Zero
  Let $field067 = $Zero
  Let $field068 = $Zero
  Let $field069 = $Zero
  Let $field070 = $Zero
  Let $field071 = $Zero
  Let $field072 = $Zero
  Let $field073 = $Zero
  Let $field074 = $Zero
  Let $field075 = $Zero
  Let $field076 = $Zero
  Let $field077 = $Zero
  Let $field078 = $Zero
  Let $field079 = $Zero
  Let $field080 = $Zero
  Let $field081 = $Zero
  Let $field082 = $Zero
  Let $field083 = $Zero
  Let $field084 = $Zero
  Let $field085 = $Zero
  Let $field086 = $Zero
  Let $field087 = $Zero
  Let $field088 = $Zero
  Let $field089 = $Zero
  Let $field090 = $Zero
  Let $field091 = $Zero
  Let $field092 = $Zero
  Let $field093 = $Zero
  Let $field094 = $Zero
  Let $field095 = $Zero
  Let $field096 = $Zero
  Let $field097 = $Zero
  Let $field098 = $Zero
  Let $field099 = $Zero
  Let $field100 = $Zero
  Let $field101 = $Zero
  Let $field102 = $Zero
  Let $field103 = $Zero
  Let $field104 = $Zero
  Let $field105 = $Zero
  Let $field106 = $Zero
  Let $field107 = $Zero
  Let $field108 = $Zero
  Let $field109 = $Zero
  Let $field110 = $Zero
  Let $field111 = $Zero
  Let $field112 = $Zero
  Let $field113 = $Zero
  Let $field114 = $Zero
  Let $field115 = $Zero
  Let $field116 = $Zero
  Let $field117 = $Zero
  Let $field118 = $Zero
  Let $field119 = $Zero
  Let $field120 = $Zero
  Let $field121 = $Zero
  Let $field122 = $Zero
  Let $field123 = $Zero
  Let $field124 = $Zero
  Let $field125 = $Zero
  Let $field126 = $Zero
  Let $field127 = $Zero !New Value

  Let $field133 = $Zero
  Let $field128 = $Zero
  Let $field129 = $Zero
  Let $field130 = $Zero
  Let $field131 = $Zero
  Let $field132 = $Zero
  Let $field134 = $Zero



  Let $GeoArea = '0'
  Let $SubsProp = ''
  Let $AnualAdjPat = '2'

end-procedure Initialize-Variables

!*******************************************************
begin-procedure Formatted-Values-And-Formulas
#debug show '> Formatted-Values-And-Formulas'
!*******************************************************
   Let #Zero = 0

     Let $StringIn = to_char(#SubAcred)
     do Check-Points

     Let #S106  = to_char(#SubAcred)
     Let $S106a = $StringOut1
     Let $S106b = $StringOut2
     Let #S120  = #SubAcredApplied
     Let #S5qe  = ABS(#S5qe)
     If $S102 = 'B'
        Let #S107  = to_char(#SubAcred)
        Let $S107a = $StringOut1
        Let $S107b = $StringOut2
        Let $S106a = ''
        Let $S106b = ''
     End-if

   If #S5og < 1
     Let #S5og = 0
   End-IF
   Let #S5og  = round(abs(#S5og),0)
   Let #S5oe  = round(abs(#S5oe),0)
   Let #S5pg  = round(abs(#S5pg),0)
   Let #S5pe  = round(abs(#S5pe),0)
   Let #S5qg  = round(abs(#S5qg),0)
   Let #S5qe  = round(abs(#S5qe),0)
   Let #S5rg  = round(abs(#S5rg),0)
   Let #S5re  = round(abs(#S5re),0)
   Let #S5sg  = round(abs(#S5sg),0)
   Let #S5se  = round(abs(#S5se),0)
   Let #S5tg  = round(abs(#S5tg),0)
   Let #S5te  = round(abs(#S5te),0)
   Let #S5ug  = round(abs(#S5ug),0)
   Let #S5ue  = round(abs(#S5ue),0)
   Let #S5vg  = round(abs(#S5vg),0)
   Let #S5ve  = round(abs(#S5ve),0)
   Let #S5wg  = round(abs(#S5wg),0)
   Let #S5we  = round(abs(#S5we),0)
   Let #S5xg  = round(abs(#S5xg),0)
   Let #S5xe  = round(abs(#S5xe),0)
   Let #S5yg  = round(abs(#S5yg),0)
   Let #S5ye  = round(abs(#S5ye),0)
   Let #S5zg  = round(abs(#S5zg),0)
   Let #S5ze  = round(abs(#S5ze),0)
   Let #S5A1g  = round(abs(#S5A1g),0)
   Let #S5A1e  = round(abs(#S5A1e),0)
   Let #S5B1g  = round(abs(#S5B1g),0)
   Let #S5B1e  = round(abs(#S5B1e),0)
   Let #S5C1g  = round(abs(#S5C1g),0)
   Let #S5C1e  = round(abs(#S5C1e),0)
   Let #S5D1g  = round(abs(#S5D1g),0)
   Let #S5D1e  = round(abs(#S5D1e),0)
   Let #S5E1g  = round(abs(#S5E1g),0)
   Let #S5E1e  = round(abs(#S5E1e),0)
   Let #S5F1g  = round(abs(#S5F1g),0)
   Let #S5F1e  = round(abs(#S5F1e),0)
   Let #S5G1g  = round(abs(#S5G1g),0)
   Let #S5G1e  = round(abs(#S5G1e),0)
   Let #S5H1g  = round(abs(#S5H1g),0)
   Let #S5H1e  = round(abs(#S5H1e),0)
   Let #S5I1g  = round(abs(#S5I1g),0)
   Let #S5I1e  = round(abs(#S5I1e),0)
   Let #S5J1g  = round(abs(#S5J1g),0)
   Let #S5J1e  = round(abs(#S5J1e),0)
   Let #S5K1g  = round(abs(#S5K1g),0)
   Let #S5K1e  = round(abs(#S5K1e),0)
   Let #S5L1g  = round(abs(#S5L1g),0)
   Let #S5L1e  = round(abs(#S5L1e),0)
   Let #S5M1g  = round(abs(#S5M1g),0)
   Let #S5M1e  = round(abs(#S5M1e),0)
   Let #S5N1g  = round(abs(#S5N1g),0)
   Let #S5N1e  = round(abs(#S5N1e),0)
   Let #S5O1g = round(abs(#S5O1g),0)
   Let #S5O1e = round(abs(#S5O1e),0)
   Let #S5P1g = round(abs(#S5P1g),0)
   Let #S5P1e = round(abs(#S5P1e),0)

   Let #S6Q1 = #S5og + #S5pg + #S5qg + #S5rg + #S5sg + #S5tg + #S5ug + #S5vg + #S5wg + #S5xg
   Let #S6Q1 = #S6Q1  + #S5yg + #S5zg + #S5A1g + #S5B1g + #S5C1g + #S5D1g + #S5E1g + #S5F1g + #S5G1g
   Let #S6Q1 = #S6Q1  + #S5H1g + #S5I1g + #S5J1g + #S5K1g + #S5L1g + #S5M1g + #S5N1g + #S5O1g + #S5P1g

   Let #S6R1 = #S5oe + #S5pe + #S5qe + #S5re + #S5se + #S5te + #S5ue + #S5ve + #S5we + #S5xe
   Let #S6R1 = #S6R1  + #S5ye + #S5ze + #S5A1e + #S5B1e + #S5C1e + #S5D1e + #S5E1e + #S5F1e + #S5G1e
   Let #S6R1 = #S6R1  + #S5H1e + #S5I1e + #S5J1e + #S5K1e + #S5L1e + #S5M1e + #S5N1e + #S5O1e + #S5P1e

   Let #S6S1 = #S6Q1 + #S6R1

   Let #S6T1 = 0

   If #Year = 2001
      Let #S2I  = 1 - #S2H
      Let #S2J  = #S2I * 2
   end-if

!  Section 3 variables
   Let #S3N  = #Zero
   Let #S3O  = #Zero
   Let #S3P  = #Zero
   Let #S3Q  = #Zero
   Let #S3R  = #Zero
   Let #S3S  = #Zero
   Let #S3T  = #Zero
   Let #S3U  = #Zero
   Let #S3V  = #Zero
   Let #S3W  = #Zero
   Let #S3X  = #Zero

   #Debug show '    #S3a :' #S3a
! Section 4 variables
   If #S3a < #S3e
     Let #S3e = #S3a
   End-If

   If #S3f < 0
      Let #S3f = 0
   End-If

  if #S3a <> 0
    Let #S3a = round(abs(#S3a),2)
    Let #S3b = round(abs(#S3b),2)
    Let #S3c = #MinimumWage * 90 * #S3b

    If #S3c > #S3a
      Let #S3c = #S3a
    End-If

    Let #S3d = #S3a - #S3c
    If #S3d < 1
      Let #S3d = 0
    End-If
    Let #S3e = round(abs(#S3e),2)
    Let #S3h = round(abs(#S3h),2)
    if #S3e  < #S3d
      Let #S3g=#S3d-#S3e
      Let #S3g=round(abs(#S3g),2)
    end-if
  else
    Let #S3a = 0
    Let #S3b = 0
    Let #S3c = 0
    Let #S3d = 0
    Let #S3e = 0
    Let #S3f = 0
    Let #S5d = 0
    Let #S5c = 0
    Let #S5e = 0
  end-if

  Let #S2A  = round(abs(#S2A),0)
  Let #S2C  = round(abs(#S2C),0)
  Let #S2D  = round(abs(#S2D),0)
  Let #S2E  = round(abs(#S2E),0)
  Let #S2F  = round(abs(#S2F),0)
  Let #S2G  = round(abs(#S2G),0)
  Let #S2H  = round(abs(#S2H),0)
  Let #S2M  = round(abs(#S2M),0)
  Let #S2N  = round(abs(#S2N),0)

  Let #S3h = round(abs(#S3h),0)
  Let #S3X = round(abs(#S3X),0)
  Let #S4n = round(abs(#S4n),0)
  Let #S4j = round(abs(#S4j),0)

  Let #S5qe = round(abs(#S5qe),0)
  Let #S6U1 = round(abs(#S6U1),0)
  Let #S6V1 = round(abs(#S6V1),0)
  Let #S6W1 = round(abs(#S6W1),0)
  Let #S6Y1 = round(abs(#S6Y1),0)

  If $S101 = 'X'
     Let #S2K  = abs(abs(#S2F) - ABS(#S2G))
  else
     Let #S2K  = 0
  end-if

  Let #S2M  = abs(#S2K) + abs(#S2L)
  Let #S2N  = #S3X + #S3h + #S4j + #S4n + #S6U1 + #S6V1

  IF #S2N <= 0
     Let #S6W1  = 0
     Let #S2N   = 0
  ELSE
     If $S101 = 'X'
        Let #S6W1 = #S2N - #S2M
        If #S6W1 < 0
           Let #S6W1 = 0
        End-If
     End-if
  END-IF

  If #S4k > #S4l
    Let #S4m  = #S4k - #S4l
  End-If

  Let #S3O = round(abs(#S3O),0)
  Let #S3P = round(abs(#S3P),0)
  Let #S3a = round(abs(#S3a),0)
  Let #S4i = round(abs(#S4i),0)
  Let #S4m = round(abs(#S4m),0)
  Let #S6S1 = round(abs(#S6S1),0)
  Let #S3T = round(abs(#S3T),0)
  Let #S3c = round(abs(#S3c),0)
  Let #S6R1 = round(abs(#S6R1),0)
  Let #S3W = round(abs(#S3W),0)
  Let #S3g = round(abs(#S3g),0)

  Let #S2A  = #S3O + #S3P + #S3a + #S4i + #S4m + #S6S1
  Let #S2C  = #S3T + #S3c + #S6R1
  Let #S2D  = #S3W + #S3g
  Let #S2E  = abs(#S2A) - abs(#S2B) - abs(#S2C) - abs(#S2D)

   ! Section 6 variables
  Let $Company_Address1 = rtrim($Address1,' ') || '   ' || rtrim($Address2,' ') || '   ' || rtrim($Address3,' ')
  Let $Company_Address2 = rtrim($Address4,' ') || '   ' || rtrim($City,' ')     || ',  ' || rtrim($State,' ') || '   C.P. ' || rtrim($Zip,' ')

  #debug show '$BgnDt ' $BgnDt
  #debug show '$EmplBegDt ' $EmplBegDt
  #debug show '$PymntPBgnDt ' $PymntPBgnDt
  #debug show '$EmplFstPR ' $EmplFstPR
  #debug show '$EndDt ' $EndDt
  #debug show '$EmplTermDt ' $EmplTermDt
  #debug show '$PymntPEndDt ' $PymntPEndDt
  #debug show '$PTU-Payment-DtDTU ' $PTU-Payment-DtDTU
  #debug show '$EmplLstPR ' $EmplLstPR

  Do Convert-To-Dtu-Date($BgnDt, $BgnDtDTU)
  Do Convert-To-Dtu-Date($EmplBegDt, $EmplBegDtDTU)
  Do Convert-To-Dtu-Date($MaxBgnDt, $MaxBgnDtDTU)
  Do Convert-To-Dtu-Date($PymntPBgnDt, $PymntPBgnDtDTU)
  Do Convert-To-Dtu-Date($EmplTermDt, $EmplTermDtDTU)
  Do Convert-To-Dtu-Date($PymntPEndDt, $PymntPEndDtDTU)
  Do dtu-diff-days($BgnDtDTU, $EmplBegDtDTU, #dtu_days)
  
  If #dtu_days < 0
    Let $MaxBgnDt = $EmplBegDt
  Else
    Let $MaxBgnDt = $BgnDt
  End-If
  Do dtu-diff-days($MaxBgnDtDTU, $PymntPBgnDtDTU, #Max_dtu_days)
  If #Max_dtu_days < 0
    Let $MaxBgnDt = $PymntPBgnDt
  End-If

  Do Convert-To-Dtu-Date($MaxBgnDt, $MaxBgnDtDTU)

  #debug show '$MaxBgnDt ' $MaxBgnDt

  If Rtrim($PTU-Payment-DtDTU, ' ') <> '' And Rtrim($EmplTermDt, ' ') <> ''
          Do dtu-diff-days($PTU-Payment-DtDTU, $EmplTermDtDTU, #Term_dtu_days)
          If  #Term_dtu_days > 0
            Let $MinEndDt = $PTU-Payment-DtDTU
          Else
            Let $MinEndDt = $EmplTermDt
          End-If
  Else
      If Rtrim($PTU-Payment-DtDTU, ' ') <> ''
         Let $MinEndDt = $PTU-Payment-DtDTU
      Else
         Let $MinEndDt = $EndDt
         If Rtrim($EmplTermDt, ' ') <> ''
            Do dtu-diff-days($EmplTerminated, $MaxBgnDtDTU, #Term_dtu_days)
            If #Term2_dtu_days < 0
               Let $MinEndDt = $EmplTermDt
            End-If
         End-If
      End-If
  End-IF

  Do Convert-To-Dtu-Date($MinEndDt, $MinEndDtDTU)

  If Rtrim($PymntPEndDt, ' ') <> ''
    Do dtu-diff-days($MinEndDtDTU, $PymntPEndDtDTU, #Pmnt_dtu_days)
    If #Pmnt_dtu_days > 0
      Let $MinEndDt = $PymntPEndDt
    End-If
  End-If

  Do Convert-To-Dtu-Date($MinEndDt, $MinEndDtDTU)

  #debug show '$MinEndDt ' $MinEndDt

end-procedure Formatted-Values-And-Formulas

begin-procedure Check-Points

  Let $StringOut1  = ''
  Let $StringOut2  = ''

  Let #Len = Length($StringIn)
  Let #I  = 1

  while #I <= #Len
    Let $Test_Char = Substr($StringIn, #I, 1)

    if $Test_Char = '.'
       Let $StringOut1  = Rtrim(Substr($StringIn, 1, #I), '.')
       Let $StringOut2  = Ltrim(Substr($StringIn, #I, #Len), '.')
       Let #I = #Len
    end-if

    add 1 to #I
  end-while

end-procedure Check-Points

!**************************************
begin-procedure Process-Line
#debug show '*** Process-Line ***'
!**************************************
  Let $Zero = '0'

  if $S102 = 'A'
     Let $S102a = '1'
     Let $S102b = '2'
     Let $SubsProp = to_char(#SubAcred)
  else
     Let $S102a = '2'
     Let $S102b = '1'
     Let $SubsProp = to_char(#SubAcred)
  end-if

  if $S103 = 'X'
    Let $UnionWrk = '1'
  else
    Let $UnionWrk = '2'
  end-if

  Evaluate $S104
     when = 'A'
        Let $GeoArea ='01'
     break
     when = 'B'
        Let $GeoArea ='02'
     break
     when = 'C'
        Let $GeoArea ='03'
     break
     when-other
        Let $GeoArea = '0'
  End-Evaluate

  if $S101 = 'X'
     Let $AnualAdjPat = '1'
  else
     Let $AnualAdjPat = '2'
  end-if
  
  Let $MMBeg = Edit($RangeIni, 'MM')
  Let $MMEnd = Edit($RangeFin, 'MM')
  #debug show '$MMBeg ' $MMBeg ', MMEnd: ' $MMEnd ', $RangeIni: ' $RangeIni ', $RangeFin: ' $RangeFin 

  Let $field001 = $MMBeg
  Let $field002 = $MMEnd
  Let $field003 = $Empl_RFC
  Let $field004 = $Empl_CURP
  Let $field005 = $Empl_LastName
  Let $field006 = $Empl_SecondLastName
  Let $field007 = $Empl_Name
  Let $field008 = $GeoArea
  Let $field009 = $AnualAdjPat
  Let $field010 = $S102a
  Let $field011 = $S102b
  Let $field012 = $SubsProp
  Let $field013 = $UnionWrk
  Let $field014 = $Zero
  Let $field015 = $S105
  Let $field016 = $S111
  Let $field017 = $S112
  Let $field018 = $S113
  Let $field019 = $S114
  Let $field020 = $S115
  Let $field021 = $S116
  Let $field022 = $S117
  Let $field023 = $S118
  Let $field024 = $S119
  Let $field025 = $S120
  Let $field026 = to_char(Round(#AdInfo1,0))
  Let $field027 = $ContribAppl
  Let $field028 = to_char(Round(#AdInfo3,0))
  Let $field029 = to_char(Round(#AdInfo4,0))
  Let $field030 = $TermP
  Let $field031 = '2'
  Let $field032 = '1'
  Let $field033 = $Zero
  Let $field034 = $Zero
  Let $field035 = $Zero
  Let $field036 = $Zero
  Let $field037 = $Zero
  Let $field038 = $Zero
  Let $field039 = $Zero
  Let $field040 = $Zero
  Let $field041 = $Zero
  Let $field042 = $Zero
  Let $field043 = to_char(Round(#S3a,0))
  Let $field044 = to_char(Round(#S3b,0))
  Let $field045 = to_char(Round(#S3c,0))
  Let $field046 = to_char(Round(#S3d,0))
  Let $field047 = to_char(Round(#S3e,0))
  Let $field048 = to_char(Round(#S3f,0))
  Let $field049 = to_char(Round(#S3g,0))
  Let $field050 = to_char(Round(#S3h,0))
  Let $field051 = to_char(Round(#S4i,0))
  Let $field052 = to_char(Round(#S4j,0))
  Let $field053 = $Shares
  Let $field054 = to_char(Round(#S4k,0))
  Let $field055 = to_char(Round(#S4l,0))
  Let $field056 = to_char(Round(#S4m,0))
  Let $field057 = to_char(Round(#S4n,0))
  Let $field058 = to_char(Round(#S5og,0))
  Let $field059 = to_char(Round(#S5oe,0))
  Let $field060 = to_char(Round(#S5pg,0))
  Let $field061 = to_char(Round(#S5pe,0))
  Let $field062 = to_char(Round(#S5qg,0))
  Let $field063 = to_char(Round(#S5qe,0))
  Let $field064 = to_char(Round(#S5rg,0))
  Let $field065 = to_char(Round(#S5re,0))
  Let $field066 = to_char(Round(#S5sg,0))
  Let $field067 = to_char(Round(#S5se,0))
  Let $field068 = to_char(Round(#S5tg,0))
  Let $field069 = to_char(Round(#S5te,0))
  Let $field070 = to_char(Round(#S5ug,0))
  Let $field071 = to_char(Round(#S5ue,0))
  Let $field072 = to_char(Round(#S5vg,0))
  Let $field073 = to_char(Round(#S5ve,0))
  Let $field074 = to_char(Round(#S5wg,0))
  Let $field075 = to_char(Round(#S5we,0))
  Let $field076 = to_char(Round(#S5xg,0))
  Let $field077 = to_char(Round(#S5xe,0))
  Let $field078 = to_char(Round(#S5yg,0))
  Let $field079 = to_char(Round(#S5ye,0))
  Let $field080 = to_char(Round(#S5zg,0))
  Let $field081 = to_char(Round(#S5ze,0))
  Let $field082 = to_char(Round(#S5A1g,0))
  Let $field083 = to_char(Round(#S5A1e,0))
  Let $field084 = to_char(Round(#S5B1g,0))
  Let $field085 = to_char(Round(#S5B1e,0))
  Let $field086 = to_char(Round(#S5C1g,0))
  Let $field087 = to_char(Round(#S5C1e,0))
  Let $field088 = to_char(Round(#S5D1g,0))
  Let $field089 = to_char(Round(#S5D1e,0))
  Let $field090 = to_char(Round(#S5E1g,0))
  Let $field091 = to_char(Round(#S5E1e,0))
  Let $field092 = to_char(Round(#S5F1g,0))
  Let $field093 = to_char(Round(#S5F1e,0))
  Let $field094 = to_char(Round(#S5G1g,0))
  Let $field095 = to_char(Round(#S5G1e,0))
  Let $field096 = to_char(Round(#S5H1g,0))
  Let $field097 = to_char(Round(#S5H1e,0))
  Let $field098 = to_char(Round(#S5I1g,0))
  Let $field099 = to_char(Round(#S5I1e,0))
  Let $field100 = to_char(Round(#S5J1g,0))
  Let $field101 = to_char(Round(#S5J1e,0))
  Let $field102 = to_char(Round(#S5K1g,0))
  Let $field103 = to_char(Round(#S5K1e,0))
  Let $field104 = to_char(Round(#S5L1g,0))
  Let $field105 = to_char(Round(#S5L1e,0))
  Let $field106 = to_char(Round(#S5M1g,0))
  Let $field107 = to_char(Round(#S5M1e,0))
  Let $field108 = to_char(Round(#S5N1g,0))
  Let $field109 = to_char(Round(#S5N1e,0))
  Let $field110 = to_char(Round(#S5O1g,0))
  Let $field111 = to_char(Round(#S5O1e,0))
  Let $field112 = to_char(Round(#S5P1g,0))
  Let $field113 = to_char(Round(#S5P1e,0))
  Let $field114 = $ZERO !to_char(Round(#S6Q1,0)) !(do not report)
  Let $field115 = $ZERO !to_char(Round(#S6R1,0)) !(do not report)
  Let $field116 = to_char(Round(#S6U1,0))
  Let $field117 = to_char(Round(#S6V1,0))
  Let $field118 = to_char(Round(#S6W1,0))
  Let $field119 = to_char(Round(#S6X1,0))
  Let $field120 = to_char(Round(#S6Y1,0))
  Let $field121 = to_char(Round(#S6Z1,0))
  Let $field122 = to_char(abs(Round(#S6a1,0)))
  Let $field123 = to_char(Round(#S6b1,0))
  Let $field124 = to_char(Round(#S6S1,0))
  Let $field125 = to_char(Round(#S6T1,0))
  Let $field126 = to_char(Round(#F122,0))  !$Zero
  Let $field127 = to_char(Round(#AdInfo4,0))

  Let $field133 = to_char(Round(#S2B,0))
  Let $field128 = to_char(Round(#S2F,0))
  Let $field129 = to_char(Round(#S2G,0))
  Let $field130 = to_char(Round(#S2H,0))
  Let $field131 = to_char(Round(#S2K,0))
  Let $field132 = to_char(Round(#S2L,0))
  Let $field134 = to_char(abs(Round(#F130 ,0))) !$Zero

If #S3a <> 0
  Let $field030 = '1'
end-if

Let $Line = $Field001 || {Sep_Char} || $Field002 || {Sep_Char} || $Field003 || {Sep_Char} || $Field004 || {Sep_Char} || $Field005 || {Sep_Char} ||
            $Field006 || {Sep_Char} || $Field007 || {Sep_Char} || $Field008 || {Sep_Char} || $Field009 || {Sep_Char} || $Field010 || {Sep_Char} ||
            $Field011 || {Sep_Char} || $Field012 || {Sep_Char} || $Field013 || {Sep_Char} || $Field014 || {Sep_Char} || $Field015 || {Sep_Char} ||
            $Field016 || {Sep_Char} || $Field017 || {Sep_Char} || $Field018 || {Sep_Char} || $Field019 || {Sep_Char} || $Field020 || {Sep_Char} ||
            $Field021 || {Sep_Char} || $Field022 || {Sep_Char} || $Field023 || {Sep_Char} || $Field024 || {Sep_Char} || $Field025 || {Sep_Char} ||
            $Field026 || {Sep_Char} || $Field027 || {Sep_Char} || $Field028 || {Sep_Char} || $Field029 || {Sep_Char} || $Field030 || {Sep_Char} ||
            $Field031 || {Sep_Char} || $Field032

#debug show '     #s3a      :' #s3a
#debug show '     $field030 :' $field030
If #S3a <> 0
Let $Line = $Line     || {Sep_Char} || $Field033 || {Sep_Char} || $Field034 || {Sep_Char} || $Field035 || {Sep_Char} ||
            $Field036 || {Sep_Char} || $Field037 || {Sep_Char} || $Field038 || {Sep_Char} || $Field039 || {Sep_Char} || $Field040 || {Sep_Char} ||
            $Field041 || {Sep_Char} || $Field042 || {Sep_Char} || $Field043 || {Sep_Char} || $Field044 || {Sep_Char} || $Field045 || {Sep_Char} ||
            $Field046 || {Sep_Char} || $Field047 || {Sep_Char} || $Field048 || {Sep_Char} || $Field049 || {Sep_Char} || $Field050

End-if
Let $Line = $Line     || {Sep_Char}

                      || $Field058 || {Sep_Char} || $Field059 || {Sep_Char} || $Field060 || {Sep_Char} ||
            $Field061 || {Sep_Char} || $Field062 || {Sep_Char} || $Field063 || {Sep_Char} || $Field064 || {Sep_Char} || $Field065 || {Sep_Char} ||
            $Field066 || {Sep_Char} || $Field067 || {Sep_Char} || $Field068 || {Sep_Char} || $Field069 || {Sep_Char} || $Field070 || {Sep_Char} ||
            $Field071 || {Sep_Char} || $Field072 || {Sep_Char} || $Field073 || {Sep_Char} || $Field074 || {Sep_Char} || $Field075 || {Sep_Char} ||
            $Field076 || {Sep_Char} || $Field077 || {Sep_Char} || $Field078 || {Sep_Char} || $Field079 || {Sep_Char} || $Field080 || {Sep_Char} ||
            $Field081 || {Sep_Char} || $Field082 || {Sep_Char} || $Field083 || {Sep_Char} || $Field084 || {Sep_Char} || $Field085 || {Sep_Char} ||
            $Field086 || {Sep_Char} || $Field087 || {Sep_Char} || $Field088 || {Sep_Char} || $Field089 || {Sep_Char} || $Field090 || {Sep_Char} ||
            $Field091 || {Sep_Char} || $Field092 || {Sep_Char} || $Field093 || {Sep_Char} || $Field094 || {Sep_Char} || $Field095 || {Sep_Char} ||
            $Field096 || {Sep_Char} || $Field097 || {Sep_Char} || $Field098 || {Sep_Char} || $Field099 || {Sep_Char} || $Field100 || {Sep_Char} ||
            $Field101 || {Sep_Char} || $Field102 || {Sep_Char} || $Field103 || {Sep_Char} || $Field104 || {Sep_Char} || $Field105 || {Sep_Char} ||
            $Field106 || {Sep_Char} || $Field107 || {Sep_Char} || $Field108 || {Sep_Char} || $Field109 || {Sep_Char} || $Field110 || {Sep_Char} ||
            $Field111 || {Sep_Char} || $Field112 || {Sep_Char} || $Field113 || {Sep_Char} || $Field114 || {Sep_Char} || $Field115 || {Sep_Char} ||
            $Field116 || {Sep_Char} || $Field117 || {Sep_Char} || $Field118 || {Sep_Char} || $Field119 || {Sep_Char} || $Field120 || {Sep_Char} ||
            $Field121 || {Sep_Char} || $Field122 || {Sep_Char} || $Field123 || {Sep_Char} || $Field124 || {Sep_Char} || $Field125 || {Sep_Char} ||
            $Field126 || {Sep_Char} || $Field127 || {Sep_Char} || $Field128 || {Sep_Char} || $Field129 || {Sep_Char} || $Field130 || {Sep_Char} ||
            $Field131 || {Sep_Char} || $Field132 || {Sep_Char} || $Field133 || {Sep_Char} || $Field134

  write 1 FROM $Line
end-procedure Process-Line

!******************************************************
begin-procedure Check-Characters
! Check for accented characters -> replace with nonaccent, and Ñ/ñ
! replace with &.  Then uppercase the string.
!******************************************************
  #debugx show '    $StringIn :' $StringIn

  Let #Len = Length($StringIn)
  Let #I  = 1

  Let $PreviousChar = ''
  while #I <= #Len
    Let $Found = 'N'
    Let $Test_Char = Substr($StringIn, #I, 1)

    #debugx show '      $Test_Char :' $Test_Char

    Let #Test_Code = ascii(Upper($Test_Char))
    if (#Test_Code > 64 and #Test_Code < 91)
      Let $StringOut = $StringOut || Upper($Test_Char)
      Let $Found = 'Y'
    end-if

    if ($Found = 'N')
      evaluate $Test_Char
        When = 'È'
        When = 'É'
        When = 'Ê'
        When = 'Ë'
        When = 'è'
        When = 'é'
        When = 'ê'
        When = 'ë'
          Let $Test_Char = 'E'
          Let $StringOut  = $StringOut || $Test_Char
          break
        When = 'À'
        When = 'Á'
        When = 'Â'
        When = 'Ã'
        When = 'Ä'
        When = 'Å'
        When = 'à'
        When = 'á'
        When = 'â'
        When = 'ã'
        When = 'ä'
        When = 'å'
          Let $Test_Char = 'A'
          Let $StringOut  = $StringOut || $Test_Char
          break
        When = 'Ì'
        When = 'Í'
        When = 'Î'
        When = 'Ï'
        When = 'ì'
        When = 'í'
        When = 'î'
        When = 'ï'
          Let $Test_Char = 'I'
          Let $StringOut  = $StringOut || $Test_Char
          break
        When = 'Ò'
        When = 'Ó'
        When = 'Ô'
        When = 'Õ'
        When = 'Ö'
        When = 'ò'
        When = 'ó'
        When = 'ô'
        When = 'õ'
        When = 'ö'
          Let $Test_Char = 'O'
          Let $StringOut  = $StringOut || $Test_Char
          break
        When = 'Ù'
        When = 'Ú'
        When = 'Û'
        When = 'ù'
        When = 'ú'
        When = 'û'
        When = 'ü'
          Let $Test_Char = 'U'
          Let $StringOut  = $StringOut || $Test_Char
          break
        when = 'ñ'
        when = 'Ñ'
          Let $Test_Char = 'Ñ'
          Let $StringOut  = $StringOut || $Test_Char
          break
        when = 'Ç'
          Let $Test_Char = 'C'
          Let $StringOut  = $StringOut || $Test_Char
          break
        when = ' '
        when = '-'
          Let $Test_Char = ' '
          Let $StringOut  = $StringOut || $Test_Char
          break
        When = '@'
        When = '%'
        When = '#'
        When = '!!'
        When = '¡'
        When = '$'
        When = '&'
        When = '.'
        When = '¿'
        When = '?'
        When = ''''
        When = ' '
          !Special Characters Accepted
          !Avoid duplicates
          If $Test_Char <> $PreviousChar
            Let $StringOut  = $StringOut || $Test_Char
          End-If
          Let $PreviousChar = $Test_Char
          break
        When = '´'
            Let $Test_Char = ''''
            Let $StringOut  = $StringOut || $Test_Char
            break
        when-other
          break
      end-evaluate
    end-if
    add 1 to #I
    #debugx show '      $StringOut :' $StringOut
  end-while
  Let $String    = upper ($StringOut)
  Let $StringOut = ''
end-procedure Check-Characters

!***********************************************************************
begin-procedure GetSegments
!***********************************************************************
LET #CountSeg = 0
LET $RangeIniDTU = ''
LET $RangeFinDTU = ''
LET $ExistPer = 'N'
LET $TerDateDTU  = ''
Clear-Array name=Empleados
LET #CountMov=0
Begin-Select
A.EFFDT                            &ISgEffDt
A.ACTION                           &ISgAction
A.ACTION_REASON                    &ISgAction_Reason
A.COMPANY                          &ISgCompany
A.EFFSEQ                           &ISgEffseq

  ADD 1 TO #CountSeg

  LET $ISgEffDt         = LTRIM(RTRIM(&ISgEffDt         , ' '), ' ')
  Do Convert-To-DTU-Date($ISgEffDt, $ISgEffDtU)
  Do dtu-subtract-days($ISgEffDtU, 1, $ISgAntEffDt)

  LET #ISgEffseq        = &ISgEffseq
  LET $ISgAction        = LTRIM(RTRIM(&ISgAction        , ' '), ' ')
  LET $ISgAction_Reason = LTRIM(RTRIM(&ISgAction_Reason , ' '), ' ')
  LET $ISgCompany       = LTRIM(RTRIM(&ISgCompany       , ' '), ' ')

  IF $Company = $ISgCompany 
    LET $ExistPer = 'Y'
    IF $ISgAction = 'TER'
      LET $TerDateDTU  = $ISgEffDtU
      LET $RangeFinDTU = $ISgEffDtU
      LET $RangeIniDTU = $BgnDtDTU
    ELSE 
      LET $RangeFinDTU = $EndDtDTU
      IF $ISgEffDtU <= $BgnDtDTU
        LET $RangeIniDTU = $BgnDtDTU
      ELSE
        LET $RangeIniDTU = $ISgEffDtU
      END-IF
    END-IF
  ELSE
    LET $RangeFinDTU =  $ISgAntEffDt
  END-IF

  Do Convert-From-DTU-Date($RangeIniDTU, $RangeIni)
  Do Convert-From-DTU-Date($RangeFinDTU, $RangeFin)
  Do Convert-From-DTU-Date($TerDateDTU, $TerDate)
  IF #CountMov = 0
    ADD 1 TO #CountMov
    PUT $Emplid  #Empl_Rcd $ISgEffDt #ISgEffseq $ISgAction  $RangeIni $RangeFin  $TerDate INTO Empleados(#CountMov)
    ELSE
      LET #j = 1
      While #j <= #CountMov
        GET $Emplidx  #Empl_Rcdx  $EffdtOkx #EffseqOkx $Actionx  $RangeInix $RangeFinx  $TerDatex FROM  Empleados(#j)
        IF $RangeInix = '' 
           Let Empleados.RangeIni(#j)= $RangeIni
           LET Empleados.Effdt(#j)   = $ISgEffDt
           LET Empleados.TerDate(#j) = $TerDate
        END-IF
        IF $RangeFinx = '' OR ($RangeFin <= $RangeFinx AND $ISgCompany = $Company)
           Let Empleados.RangeFin(#j) = $RangeFin
           LET Empleados.TerDate(#j)  = $TerDate
        END-IF
        ADD 1 TO #j
      End-While
  END-IF
  #debug show '1'
 FROM PS_JOB A
WHERE A.EMPLID    = $Emplid
  AND A.EMPL_RCD  = #Empl_Rcd
  AND A.EFFDT    <= $EndDt
  AND A.EFFSEQ    = (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES 
                      WHERE A.EMPLID    = A_ES.EMPLID 
                        AND A.EMPL_RCD  = A_ES.EMPL_RCD 
                        AND A.EFFDT     = A_ES.EFFDT) 
ORDER BY A.EFFDT DESC
end-select
DO GetTermVersion
end-procedure GetSegments

!***************************************************************************
Begin-Procedure GetTermVersion
#debug show 'Procedure: GetTermVersion'
#debug show '$Emplid         : ' $EmplId
#debug show '#Empl_rcd       : ' #Empl_rcd
#debug show '$TerDate        : ' $TerDate
!***************************************************************************
! Default value
Let $TermP = '2'
Begin-Select
TR.ACTION_REASON
AR.GPMX_TER_LOF
TR.EFFDT

 If Rtrim(&AR.GPMX_TER_LOF, ' ') = '0020'
    Let $TermP = '1'
 Else
    Let $TermP = '2'
 End-IF

 FROM PS_JOB TR,
      PS_GPMX_TER_ACTRSN AR
WHERE TR.EMPLID        = $Emplid
  AND TR.EMPL_RCD      = #Empl_Rcd
  AND TR.ACTION        = 'TER'
  AND TR.EFFDT         = $TerDate
  AND AR.ACTION        = TR.ACTION
  AND AR.ACTION_REASON = TR.ACTION_REASON
End-Select
#debug show '      $TermP      : ' $TermP
End-Procedure GetTermVersion


!***************************************************************************
Begin-Procedure GetCalsByERDD
#debug show '  >GetCalsByERDD '
#debug show '   $Emplid         : ' $EmplId
#debug show '   $Company        : ' $Company
#debug show '   #Pin_Num        : ' #Pin_Num EDIT 999999
#debug show '   $BgnDt          : ' $BgnDt
#debug show '   $EndDt          : ' $EndDt
!***************************************************************************
Begin-Select DISTINCT
C.CAL_RUN_ID

    Let $Cals_include = $Cals_include || '''' || Rtrim(&C.CAL_RUN_ID, ' ') || '''' || ', '

FROM PS_GP_RSLT_PI_SOVR A
   , PS_GP_RSLT_ERN_DED C
   , PS_GP_PIN          D
WHERE A.EMPLID          = $Emplid
AND A.SOVR_VAL_CHAR     = $Company
AND A.SOVR_VAL_CHAR    <> ' '
AND A.SOVR_VAL_CHAR    IS NOT NULL
AND C.PIN_NUM           = #Pin_Num
AND C.SLICE_END_DT     >= $BgnDt
AND C.SLICE_END_DT     <= $EndDt
AND A.INSTANCE          = (SELECT MIN(A2.INSTANCE)
                           FROM PS_GP_RSLT_PI_SOVR A2
                           WHERE A.ORIG_CAL_RUN_ID  = A2.ORIG_CAL_RUN_ID
                           AND A2.RSLT_SEG_NUM      = 1
                           AND A.PIN_NUM            = A2.PIN_NUM
                           AND A2.EMPLID            = A.EMPLID
                           AND A2.EMPL_RCD          = A.EMPL_RCD
                           AND A2.GP_PAYGROUP       = A.GP_PAYGROUP
                           AND A2.CAL_ID            = A.CAL_ID
                           AND A2.ORIG_CAL_RUN_ID   = A.ORIG_CAL_RUN_ID
                           AND A2.SOVR_VAL_CHAR     = A.SOVR_VAL_CHAR)
AND A.CAL_RUN_ID        = A.ORIG_CAL_RUN_ID
AND A.RSLT_SEG_NUM      = 1
AND A.PIN_NUM           = D.PIN_NUM
AND C.EMPLID            = A.EMPLID
AND C.EMPL_RCD          = A.EMPL_RCD
AND C.CAL_RUN_ID        = A.CAL_RUN_ID
AND C.GP_PAYGROUP       = A.GP_PAYGROUP
AND C.CAL_ID            = A.CAL_ID
AND C.ORIG_CAL_RUN_ID   = A.ORIG_CAL_RUN_ID
AND C.RSLT_SEG_NUM      = A.RSLT_SEG_NUM
ORDER BY C.CAL_RUN_ID
End-Select

Begin-Select DISTINCT
C2.CAL_RUN_ID

    Let $Cals_exclude = $Cals_exclude || '''' || Rtrim(&C2.CAL_RUN_ID, ' ') || '''' || ', '

FROM PS_GP_RSLT_PI_SOVR A
, PS_GP_RSLT_ERN_DED C2
, PS_GP_PIN D
WHERE A.EMPLID       = $Emplid
AND A.SOVR_VAL_CHAR <> $Company
AND A.SOVR_VAL_CHAR   <> ' '
AND A.SOVR_VAL_CHAR   IS NOT NULL
AND C2.PIN_NUM        = #Pin_Num
AND C2.SLICE_END_DT  >= $BgnDt
AND C2.SLICE_END_DT  <= $EndDt
AND A.INSTANCE = (SELECT MIN(A2.INSTANCE)
                  FROM PS_GP_RSLT_PI_SOVR A2
                  WHERE A.ORIG_CAL_RUN_ID = A2.ORIG_CAL_RUN_ID
                  AND A2.RSLT_SEG_NUM = 1
                  AND A.PIN_NUM = A2.PIN_NUM
                  AND A2.EMPLID = A.EMPLID
                  AND A2.EMPL_RCD = A.EMPL_RCD
                  AND A2.GP_PAYGROUP = A.GP_PAYGROUP
                  AND A2.CAL_ID = A.CAL_ID
                  AND A2.ORIG_CAL_RUN_ID = A.ORIG_CAL_RUN_ID
                  AND A2.SOVR_VAL_CHAR = A.SOVR_VAL_CHAR)
AND A.CAL_RUN_ID = A.ORIG_CAL_RUN_ID
AND A.RSLT_SEG_NUM = 1
AND A.PIN_NUM = D.PIN_NUM
AND C2.EMPLID = A.EMPLID
AND C2.EMPL_RCD = A.EMPL_RCD
AND C2.CAL_RUN_ID = A.CAL_RUN_ID
AND C2.GP_PAYGROUP = A.GP_PAYGROUP
AND C2.CAL_ID = A.CAL_ID
AND C2.ORIG_CAL_RUN_ID = A.ORIG_CAL_RUN_ID
AND C2.RSLT_SEG_NUM = A.RSLT_SEG_NUM
ORDER BY C2.CAL_RUN_ID
End-Select

#debug show '    $Cals_include   [' $Cals_include ']'
#debug show '    $Cals_exclude   [' $Cals_exclude ']'
End-Procedure GetCalsByERDD

!***************************************************************************
Begin-Procedure CleanQuery ($strIn, :$strOut)
!***************************************************************************
    Let #QueryChars = length($strIn)
    if #QueryChars > 0
        Let $strOut = substr($strIn,1, #QueryChars - 2)
    Else
        Let $strOut = ''
    End-If
End-Procedure CleanQuery


!*********************************************************************************
Begin-Procedure Get-Acum-Mbrs
#debug show '    > Get-Acum-Mbrs> #Pin_Num: ' #Pin_Num EDIT 999999
!*********************************************************************************
Let #CalcRsltVal = 0
Let #Result = 0
Let #PinNumAcum = #Pin_Num
Begin-Select
B.CALC_RSLT_VAL + B.CALC_ADJ_VAL      &Acm_Result
D.PIN_TYPE                            &Acm_PIN_TYPE
B.PIN_NUM                             &Acm_PIN_NUM
ACM.PIN_NUM                           &Acm_PIN_NUM_Acm
D.PIN_CODE                            &Acm_PIN_CODE
ACM.ACM_SIGN                          &Acm_ACM_SIGN

   If Rtrim(&Acm_ACM_SIGN, ' ') = 'S'
     Let #SignNumber = -1
   Else
     Let #SignNumber = 1
   End-If

   Let #PiNNumMbr = &Acm_PIN_NUM
   Let #Result = #Result + &Acm_Result * #SignNumber
   #debug show 'Acum Earns Ded #Result: ' #Result

   Do Get-Acum-Adj
   Let #Result = #Result + #ResultAdj

FROM PS_GP_PYE_PRC_STAT A1
   , PS_GP_PYE_SEG_STAT B1
   , PS_PER_ORG_ASGN   ASG
   , PS_GP_RSLT_ERN_DED  B
   , PS_GP_PIN           D
   , PS_GP_ACM_MBR     ACM
WHERE A1.CAL_RUN_ID       = B1.CAL_RUN_ID 
  AND A1.EMPLID           = B1.EMPLID 
  AND A1.EMPL_RCD         = B1.EMPL_RCD 
  AND A1.EMPLID           = ASG.EMPLID 
  AND A1.EMPL_RCD         = ASG.EMPL_RCD 
  AND A1.GP_PAYGROUP      = B1.GP_PAYGROUP 
  AND A1.CAL_ID           = B1.CAL_ID 
  AND A1.ORIG_CAL_RUN_ID  = B1.ORIG_CAL_RUN_ID
  AND A1.EMPLID           = $Emplid
  AND A1.EMPL_RCD         = #Empl_Rcd
  AND A1.CALC_TYPE        = 'P'
  AND B1.RSLT_VER_NUM     = (SELECT MAX(BA.RSLT_VER_NUM) 
                               FROM PS_GP_PYE_SEG_STAT  BA 
                              WHERE B1.EMPLID      = BA.EMPLID 
                                AND B1.EMPL_RCD    = BA.EMPL_RCD 
                                AND B1.CAL_ID      = BA.CAL_ID 
                                AND B1.GP_PAYGROUP = BA.GP_PAYGROUP
                                AND B1.CAL_RUN_ID  = BA.CAL_RUN_ID)
  AND B1.RSLT_REV_NUM     = 1
  AND B1.CALC_ACTION      IN ('C','R','W')
  AND B1.PYE_CALC_STAT    >= '50'
  AND B1.SEG_END_DT      >= $RangeIni
  AND B1.SEG_END_DT      <= $RangeFin
  AND A1.EMPLID           = B.EMPLID
  AND A1.EMPL_RCD         = B.EMPL_RCD
  AND A1.CAL_RUN_ID       = B.CAL_RUN_ID
  AND A1.GP_PAYGROUP      = B.GP_PAYGROUP
  AND A1.CAL_ID           = B.CAL_ID
  AND A1.ORIG_CAL_RUN_ID  = B.ORIG_CAL_RUN_ID
  AND B1.RSLT_SEG_NUM     = B.RSLT_SEG_NUM
  AND B.SLICE_END_DT     >= $RangeIni
  AND B.SLICE_END_DT     <= $RangeFin
  AND B.PIN_NUM           = ACM.PIN_MBR_NUM
  AND ACM.PIN_NUM         = #Pin_Num
  AND ACM.BGN_DT         <= $RangeIni
  AND (ACM.END_DT        >= $RangeFin 
  OR  ACM.END_DT         IS NULL)
  AND D.PIN_NUM           = B.PIN_NUM
End-Select
#debug show '    > Get-Acum-Mbrs> #Pin_Num: ' #Pin_Num EDIT 999999 ', Result: ' #Result EDIT 999,999,999.99
End-Procedure Get-Acum-Mbrs


!*********************************************************************************
Begin-Procedure Get-Acum-ErnDed
!*********************************************************************************
Let #Result = 0
Let #PinNumAcum = #Pin_Num
Begin-Select
B.CALC_RSLT_VAL + B.CALC_ADJ_VAL      &ErnDed_Result
D.PIN_TYPE                            &ErnDed_PIN_TYPE
B.PIN_NUM                             &ErnDed_PIN_NUM
D.PIN_CODE                            &ErnDed_PIN_CODE

   Let #Result = #Result + &ErnDed_Result

FROM PS_GP_PYE_PRC_STAT A1
   , PS_GP_PYE_SEG_STAT B1
   , PS_PER_ORG_ASGN   ASG
   , PS_GP_RSLT_ERN_DED  B
   , PS_GP_PIN           D
WHERE A1.CAL_RUN_ID       = B1.CAL_RUN_ID 
  AND A1.EMPLID           = B1.EMPLID 
  AND A1.EMPL_RCD         = B1.EMPL_RCD 
  AND A1.EMPLID           = ASG.EMPLID 
  AND A1.EMPL_RCD         = ASG.EMPL_RCD 
  AND A1.GP_PAYGROUP      = B1.GP_PAYGROUP 
  AND A1.CAL_ID           = B1.CAL_ID 
  AND A1.ORIG_CAL_RUN_ID  = B1.ORIG_CAL_RUN_ID
  AND A1.EMPLID           = $Emplid
  AND A1.EMPL_RCD         = #Empl_Rcd
  AND A1.CALC_TYPE        = 'P'
  AND B1.RSLT_VER_NUM     = (SELECT MAX(BA.RSLT_VER_NUM) 
                               FROM PS_GP_PYE_SEG_STAT  BA 
                              WHERE B1.EMPLID      = BA.EMPLID 
                                AND B1.EMPL_RCD    = BA.EMPL_RCD 
                                AND B1.CAL_ID      = BA.CAL_ID 
                                AND B1.GP_PAYGROUP = BA.GP_PAYGROUP
                                AND B1.CAL_RUN_ID  = BA.CAL_RUN_ID)
  AND B1.RSLT_REV_NUM     = 1
  AND B1.CALC_ACTION     IN ('C','R','W')
  AND B1.PYE_CALC_STAT   >= '50'
  AND B1.SEG_END_DT      >= $RangeIni
  AND B1.SEG_END_DT      <= $RangeFin
  AND A1.EMPLID           = B.EMPLID
  AND A1.EMPL_RCD         = B.EMPL_RCD
  AND A1.CAL_RUN_ID       = B.CAL_RUN_ID
  AND A1.GP_PAYGROUP      = B.GP_PAYGROUP
  AND A1.CAL_ID           = B.CAL_ID
  AND A1.ORIG_CAL_RUN_ID  = B.ORIG_CAL_RUN_ID
  AND B1.RSLT_SEG_NUM     = B.RSLT_SEG_NUM
  AND B.SLICE_END_DT     >= $RangeIni
  AND B.SLICE_END_DT     <= $RangeFin
  AND B.PIN_NUM           = #Pin_Num
  AND D.PIN_NUM           = B.PIN_NUM
End-Select
#debug show '    > Get-Acum-ErnDed>> #Pin_Num: ' #Pin_Num   ', #Result: ' #Result EDIT 999,999,999.99
End-Procedure Get-Acum-ErnDed

!******************************************************************************
begin-procedure GetInfoMult
#debug show '> GetInfoMult'
!******************************************************************************
Do Initialize-Variables
DO Find-Emplid-Job
#debug show '  $Find-Emplid: ' $Find-Emplid 
  If $Find-Emplid = 'Y'
    Do Find-Self-Pres
    Do Select-Emplid-Data
    Do Get-Years-Of-Service
    If $calc_PTU = 'N'
      Do Get-PTU
    End-If
    move $EndDt to $AsOfDate
    Do Get-Company-Data-Mex
    Do Get-Tax-Last-MSalary
    Let #S3f = #Result
    Do Get-StockValues-OtherExpenses
    Do Annual-Adjust
    Do Get-Multiple-ErnsDed
    Do Get-Multiple-ErnsDed103
    Do Get-Multiple-Acum
    Do Formatted-Values-And-Formulas
    Do Process-Line
  End-If
end-procedure GetInfoMult

#include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields
#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'prcsapi.sqc'   !Process API
#include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Common date routines