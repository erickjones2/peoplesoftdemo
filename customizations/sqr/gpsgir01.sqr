!***********************************************************************
!  GPSGIR01: IR8A/IR8S Forms Print (Laser Print)                       *
!            This program prnts the IR8A/IR8S forms for Singapore.     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2018, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  28726868                                            !
!***********************************************************************
! Modification History                                                 *
! Dated      Author  ICE        Change                                *
! 17/12/03          673002000  SQR has been modify to replace MBMF     *
!                              deduction into two new deduction YMF    *
!                              and MBF.                                *
!                                                                      *
! 29/03/04          705928000  SQR has been modified to show Correct   *
!                              MBMF deduction fund when the pay group  *
!                              of an employee is changed.              *
!                                                                      *
! 15/08/04          726277000  SQR has been modified to workon         *
!                              DB2.                                    *
!                                                                      *
! 12/12/04          1118425000 The printed report for IR8A is showing  *
!                              negative value.
!
! 03/02/05         1201358000   SQR has been modified to incorporate   *
!                               the format changes for year            *
!                               ended 31 Dec 2004                      *
! 11/01/07         1582607000  SQR has been modified to incorporate    *
!                              the format changes for year             *
!                              ended 31 Dec 2006                       *
! 23/03/07         1615737000  Modified the SQR such that the earnings *
!                              amounts                                 *
!                              are not getting generated with cents.   *
! 29/04/08         1764513000 Modified the SQR so that the details     *
!                             related to earnings others are printed in*
!                             in the report                            *
!***********************************************************************
!
#define widthofpage 128
#define NumberColumn 114
#define emptyColumn 124

#Include 'setenv.sqc'  !Set environment

begin-setup
  page-size 78 130

    declare printer
      type          = HPLASERJET
      orientation   = portrait
      top-margin    = 0.2
      left-margin   = 0.5 ! 0.1 !Changes made for centralizing the form alignment
      font          = 5
      point-size    = 8
      line-size     = 11

      declare-variable
        date $date
        date $date1
        date $date2
        date $date3
        date $NEXTENDDATE
        date $Tax_Yr_End_DtTm
end-declare
declare-color-map
white=(255,255,255)
black = (0,0,0)
gray=(128,128,128)
end-declare

#include 'setupdb.sqc'

end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  
  do Stdapi-Term

!ePay Implementation Changes begin here
  if $Form_Type = 'E'
      do GP-ePay-Control ! if ePay installed have a control row inserted.
  end-if
!ePay Implementation Changes end here

end-Report

!***********************************************************************
!  Procedure: Init-Report                                              *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Init-Report

  do Stdapi-Init 
  do Select-Parameters

  move 'IR8A/IR8S Form Print' to $ReportTitle
  let $Space = '               '

  do Get-Tax-Year-Start-End
  do Format-DateTime ($Tax_Yr_End, $Prn_Tax_Yr_End, {DEFDMY}, '', '')
  do Initialise-Variables
  do Get-Company-Details

  do Format-DateTime ($Date_Created, $Prn_Date_Created, {DEFDMY}, '', '')

!ePay Implementation Changes begin here
  if $Form_Type = 'E'
      do GP-ePay-Init ! Initialize ePay variables
  end-if
!ePay Implementation Changes end here

  do Build-Order-By
  do Build-Where
end-procedure

!***********************************************************************
!  Procedure: Initialise-Variables                                     *
!             Initialise variables for use within the program.         *
!***********************************************************************
begin-procedure Initialise-Variables

  let #StdFont     = 5                  !Times Roman proportional
  let #StmtPntSize = 8                  !statement point-size
  let #ChkPntSize  = 11                 !check point-size
  let #StdFont2    = 32
  let #ChkPntSize2  = 8

end-procedure

!***********************************************************************
! Procedure: Get-Company-Details                                       *
!            Gets the Company Details that are printed on the form.    *
!***********************************************************************
begin-procedure Get-Company-Details

begin-SELECT
CO.GPSG_REGISTERED_NM
CO.GPSG_CPY_DESCR
CO.GPSG_ADDRESS1
CO.GPSG_ADDRESS2
CO.GPSG_ADDRESS3
CO.POSTAL
CO.GPSG_TAX_CONT_ID
CO.PHONE
CO.GPSG_ROB_ROC_TYPE
CO.GPSG_ROB_ROC_NO

  FROM PS_GPSG_IRAS_CPY CO
 WHERE CO.GPSG_CPY_TAX_REF = $Company_Tax_Ref
   AND CO.EFFDT = (SELECT MAX(EFFDT)
                     FROM PS_GPSG_IRAS_CPY
                    WHERE GPSG_CPY_TAX_REF = $Company_Tax_Ref
                      AND EFFDT <= $Asoftoday)
end-SELECT

begin-SELECT
RC.GPSG_FORM_TYPE

  let $Form_Type = &RC.GPSG_FORM_TYPE

FROM PS_GPSG_RC_IRAS RC
WHERE RC.OPRID       =  $Prcs_OprID
AND RC.RUN_CNTL_ID =  $Prcs_Run_Cntl_ID
end-SELECT

  let $Co_Phone = rtrim(&CO.PHONE, ' ')
  let $Co_Tax_Contact_Id = rtrim(&CO.GPSG_TAX_CONT_ID, ' ')
  let $Co_Name = rtrim(&CO.GPSG_REGISTERED_NM, ' ')
  if $Co_Name = ''
     let $Co_Name = rtrim(&CO.GPSG_CPY_DESCR, ' ')
  end-if
  uppercase $Co_Name

  let $Co_Address = rtrim(&CO.GPSG_ADDRESS1,' ')
  if $Co_Address = ''
    if rtrim(&CO.GPSG_ADDRESS2,' ') <> ''
       let $Co_Address = rtrim(&CO.GPSG_ADDRESS2,' ')
    end-if
  else
    if rtrim(&CO.GPSG_ADDRESS2,' ') <> ''
       let $Co_Address = $Co_Address || ', ' || rtrim(&CO.GPSG_ADDRESS2,' ')
    end-if
  end-if
  if $Co_Address = ''
    if rtrim(&CO.GPSG_ADDRESS3,' ') <> ''
      let $Co_Address = rtrim(&CO.GPSG_ADDRESS3,' ')
    end-if
  else
    if rtrim(&CO.GPSG_ADDRESS3,' ') <> ''
      let $Co_Address = $Co_Address || ',  ' || rtrim(&CO.GPSG_ADDRESS3,' ')
    end-if
  end-if
  if rtrim(&CO.POSTAL,' ') <> ''
      let $Co_Address = $Co_Address || ',  ' || rtrim(&CO.POSTAL,' ')
  end-if

  uppercase $Co_Address

  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = '7'
     Let $ROB_ROC_Type = 'UEN-B'
     Let $ROB_ROC_No   = &CO.GPSG_ROB_ROC_NO
  end-if
  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = '8'
     Let $ROB_ROC_Type = 'UEN-LC'
     Let $ROB_ROC_No   = &CO.GPSG_ROB_ROC_NO
  end-if
  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = 'U'
     Let $ROB_ROC_Type = 'UEN-Other'
     Let $ROB_ROC_No   = &CO.GPSG_ROB_ROC_NO
  end-if
  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = 'N' or rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = 'O'
     Let $ROB_ROC_Type = 'Other'
     Let $ROB_ROC_No   = $Company_Tax_Ref
  end-if



begin-select
P.NAME
JC.DESCR

  FROM PS_JOB J
     , PS_PERSON_NAME P
     , PS_JOBCODE_TBL JC
 WHERE P.EMPLID = J.EMPLID
   AND P.EMPLID = $Co_Tax_Contact_Id
   AND J.JOB_INDICATOR = 'P'
   AND J.JOBCODE = JC.JOBCODE
   AND J.EFFDT = (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                   WHERE J1.EMPLID = J.EMPLID
                     AND J1.JOB_INDICATOR = 'P'
                     AND J1.EFFDT <= $Tax_Yr_End)
   AND J.EFFSEQ = (SELECT MAX(J2.EFFSEQ)
                     FROM PS_JOB J2
                   WHERE J2.EMPLID = J.EMPLID
                     AND J2.EMPL_RCD = J.EMPL_RCD
                     AND J2.EFFDT = J.EFFDT)
   AND JC.EFFDT = (SELECT MAX(JC1.EFFDT)
                     FROM PS_JOBCODE_TBL JC1
                     WHERE JC1.JOBCODE = J.JOBCODE
                       AND JC1.SETID = J.SETID_JOBCODE
                       AND JC1.EFFDT <= $Tax_Yr_End)
end-select

  let $Co_Tax_Contact = rtrim(&P.NAME, ' ')
  uppercase $Co_Tax_Contact
  let $Co_Designation = rtrim(&JC.DESCR, ' ')
  uppercase $Co_Designation

end-procedure


!***********************************************************************
! Procedure: Build-Order-By                                            *
!            Dynamically build the order by clause according to flags. *
!***********************************************************************
begin-Procedure Build-Order-By
SHOW 'COMING'
  move ' ' to $OrderClause

  if ($Pay_group = 'Y')
       let $OrderClause = 'ORDER BY I.GP_PAYGROUP'
  end-if

  if ($Pay_group = 'Y' and $Department = 'Y')
       let $OrderClause = $OrderClause || ', I.DEPTID'
  end-if

  if ($Department = 'Y'and $Pay_group = 'N')
      let $OrderClause =  'ORDER BY I.DEPTID'
  end-if

  if $OrderClause = ' '
     let $OrderClause = 'ORDER BY '
  else
     let $OrderClause = $OrderClause || ','
  end-if

  evaluate $Empl_Sort
    when = 'E'
      let $OrderClause =  $OrderClause || ' I.EMPLID, I.BALANCE_GRP_NUM'
      break
    when = 'T'
      let $OrderClause =  $OrderClause || ' I.NATIONAL_ID'
      break
    when = 'N'
      let $OrderClause =  $OrderClause || ' I.NAME'
      break
    when-other
      break
  end-evaluate
end-Procedure

!***********************************************************************
! Procedure: Build-Where                                               *
!            Dynamically build the WHERE clause according to flags.    *
!***********************************************************************
begin-procedure Build-Where
  
  let $SlctCompany = 'I.GPSG_CPY_TAX_REF = ''' || $Company_Tax_Ref

  concat '''' with $SlctCompany

  let $Empls_Exist = 'N'

  if $Reprint = 'N'
     let $SlctStatus = ' AND I.GPSG_8A_STATUS = ''W'''
  else
     let $SlctStatus = ' AND I.GPSG_8A_STATUS IN (''W'',''Y'')'
  end-if

  if isnull($Paygroup)
    do Select-Spec-Empls
  else
    let $SlctCriteria = $SlctCompany || ' AND I.GP_PAYGROUP = ''' || $Paygroup
    concat '''' with $SlctCriteria
    let $SlctCriteria = $SlctCriteria||$SlctStatus

    do Main
  end-if


end-procedure

!***********************************************************************
! Procedure: Select-Spec-Empls                                         *
!            Select Specific employees listed in the child run control.*
!***********************************************************************
begin-procedure Select-Spec-Empls

let #EmpCount = 0
let $SlctEmpls = ' '

begin-SELECT
EMPLID

  let $Empls_Exist = 'Y'

FROM PS_GPSG_RC_IRASEMP
WHERE OPRID       =  $Prcs_OprID
AND   RUN_CNTL_ID =  $Prcs_Run_Cntl_ID
end-SELECT
  if $Empls_Exist = 'Y'
     let $SlctEmpls = ' AND EXISTS (SELECT ''X'' FROM PS_GPSG_RC_IRASEMP R '
     let $SlctEmpls = $SlctEmpls || 'WHERE R.OPRID = ''' || $Prcs_OprID || ''' AND R.RUN_CNTL_ID = '''
     let $SlctEmpls = $SlctEmpls || $Prcs_Run_Cntl_ID || ''' AND R.EMPLID = I.EMPLID '
     let $SlctEmpls = $SlctEmpls || 'AND R.BALANCE_GRP_NUM = I.BALANCE_GRP_NUM)'
  end-if

  let $SlctCriteria = $SlctCompany || $SlctStatus
  do Main

end-procedure

!***********************************************************************
! Procedure: Generate - Log                                            *
!***********************************************************************
begin-Procedure Generate_Log(#count1,$empl_id)
   
   do Select_From_MsgCat (17231, 373,$msg1, $LongDescr)
   do Select_From_MsgCat (17231, 374,$msg2, $LongDescr)
   do Select_From_MsgCat (17231, 375,$user_id, $LongDescr)
   do Select_From_MsgCat (17231, 376,$run_id, $LongDescr)
   do Select_From_MsgCat (17231, 377,$prcs_inst, $LongDescr)
   do Select_From_MsgCat (17231, 378,$tax_ref, $LongDescr)
   do Select_From_MsgCat (17231, 379,$dt_created, $LongDescr)
   do Select_From_MsgCat (17231, 380,$tax_year, $LongDescr)

   Let $msg1='IR8A - ' || $msg1
   Let $msg2=$msg2 || ':'
   Let $user_id=$user_id || ':'
   Let $run_id= $run_id || ':'
   Let $prcs_inst= $prcs_inst || ':'
   Let $tax_ref= $tax_ref || ':'
   Let $dt_created= $dt_created || ':'
   let $tax_year= $tax_year || ':'
   let $process_instance = $_prcs_process_instance
   LET $log_file = 'IR8A_MessageLog_' || $process_instance || '.txt'
   do Format-Number(#_Tax_Year, $Tax, '0009') 
   if #count1 = 0
     LET $Log_File='{FILEPREFIX}' || $log_file
     OPEN $Log_File as 2 For-Writing Record=500 
    
     write 2 from 
         $msg1:100
     write 2 from 
         
     write 2 from 
        
     write 2 from $user_id:9             
                  $_Prcs_OprID:20         
                  
     write 2 from $run_id:16 
                  $_Prcs_Run_Cntl_ID:20
                  
     write 2 from $prcs_inst:18
                  $_prcs_process_instance:10
                  
     write 2 from $tax_year:10
                  $Tax:4
                  
     write 2 from $tax_ref:33
                  $_Company_Tax_Ref:30
                  
     write 2 from $dt_created:14
                  $_Date_Created:30 
                   
     write 2 from 
     
     write 2 from 
     
     write 2 from $msg2:100
       
     write 2 from 
   end-if
   
   write 2 from $empl_id:11
       
end-procedure

begin-procedure iras_form_where_clause
IF $Iras_form_type = 'A'
  let $iras_form_where = 'PS_GPSG_IR8A_A_TBL'
  let $iras_form_where2 = 'PS_GPSG_IR8S_AM_MT'
  let $iras_form_where3 = 'PS_GPSG_IR8S_A_RFD'
  move #Tax_Year to $iras_tax_year '9999'
  iF $irasAlias <> '' 
  let $iras_form_cond = 'AND '||$irasAlias ||'.SEQNBR = (SELECT MAX(SEQNBR) FROM PS_GPSG_IR8A_A_TBL WHERE GPSG_CPY_TAX_REF = '''||$Company_Tax_Ref ||''' AND GPSG_TAX_YEAR = '|| $iras_tax_year ||')'
  let $iras_form_cond2 = 'AND '||$irasAlias ||'.SEQNBR = (SELECT MAX(SEQNBR) FROM PS_GPSG_IR8S_AM_MT WHERE GPSG_CPY_TAX_REF = '''||$Company_Tax_Ref ||''' AND GPSG_TAX_YEAR = '|| $iras_tax_year ||')'
  let $iras_form_cond3 = 'AND '||$irasAlias ||'.SEQNBR = (SELECT MAX(SEQNBR) FROM PS_GPSG_IR8S_A_RFD WHERE GPSG_CPY_TAX_REF = '''||$Company_Tax_Ref ||''' AND GPSG_TAX_YEAR = '|| $iras_tax_year ||')'
  ELSE  
  let $iras_form_cond = 'AND SEQNBR = (SELECT MAX(SEQNBR) FROM PS_GPSG_IR8A_A_TBL WHERE GPSG_CPY_TAX_REF = '''||$Company_Tax_Ref ||'''AND GPSG_TAX_YEAR = '|| $iras_tax_year ||')'
  let $iras_form_cond2 = 'AND SEQNBR = (SELECT MAX(SEQNBR) FROM PS_GPSG_IR8S_AM_MT WHERE GPSG_CPY_TAX_REF = '''||$Company_Tax_Ref ||'''AND GPSG_TAX_YEAR = '|| $iras_tax_year ||')'
  let $iras_form_cond3 = 'AND SEQNBR = (SELECT MAX(SEQNBR) FROM PS_GPSG_IR8S_A_RFD WHERE GPSG_CPY_TAX_REF = '''||$Company_Tax_Ref ||'''AND GPSG_TAX_YEAR = '|| $iras_tax_year ||')'
  end-if
  ELSE
  
  let $iras_form_where = 'PS_GPSG_IR8A_FORM'
    let $iras_form_where2 = 'PS_GPSG_IR8S_MONTH'
      let $iras_form_where3 = 'PS_GPSG_IR8S_REFND'
  let $iras_form_cond = ''
  let $iras_form_cond2 = ''
  let $iras_form_cond3 = ''
  END-IF
  show $iras_form_cond
end-procedure


!***********************************************************************
!  Procedure: Main                                                     *
!             The main procedure that selects the employees to print.  *
!***********************************************************************
begin-procedure Main
 Let #count1 = 0
 Let #file_open=0
 let $irasAlias = 'I'
 do iras_form_where_clause
 
show 'con1 - ' $iras_form_where
show 'con2 - ' $SlctCriteria
show 'con3 - ' $iras_form_cond
show 'con4 - ' $SlctEmpls
show 'con5 - ' $OrderClause

begin-SELECT
I.EMPLID
I.BALANCE_GRP_NUM
I.GPSG_8A_STATUS
I.GPSG_CPY_REF_TYPE
I.GPSG_CPY_TAX_REF
I.NATIONAL_ID_TYPE
I.NATIONAL_ID
I.NAME
I.BIRTHDATE
I.SEX
I.GPSG_JOB_DESCR1
I.GPSG_JOB_DESCR2
I.GPSG_ADDRESS1
I.GPSG_ADDRESS2
I.GPSG_ADDRESS3
I.MAR_STATUS
I.HIRE_DT
I.TERMINATION_DT
I.GPSG_8A_GROSS
I.GPSG_BONUS_DT
I.GPSG_8A_NC_BONUS
I.GPSG_8A_CNT_BONUS
I.GPSG_DIR_FEE_DT
I.GPSG_8A_DIR_FEE
I.GPSG_COMMSN_FROM
I.GPSG_COMMSN_TO
I.GPSG_COMMSN_REG
I.GPSG_COMMSN_1TM
I.GPSG_8A_COMMSN
I.GPSG_8A_PENSION
I.GPSG_8A_ALLOW_TRAN
I.GPSG_8A_ALLOW_ENT
I.GPSG_8A_ALLOW_OTH
I.GPSG_8A_ALLOW_TOT
I.GPSG_8A_GRATUITY
I.GPSG_8A_NOTICE
I.GPSG_8A_LOSS_OFFIC
I.GPSG_RETIRE_FUND
I.GPSG_8A_RET_PRE93
!I.GPSG_8A_RET_POST
I.GPSG_8A_RETIRE
I.GPSG_8A_OS_PENSION
I.GPSG_8A_SHARE_GAIN
I.GPSG_8A_GAIN_BFR
I.GPSG_8A_BIK
I.GPSG_8A_INCOME_TOT
I.GPSG_ER_PAYS_TAX
I.GPSG_CPF_IND
I.GPSG_PENS_FUND
I.GPSG_CPF_COMP_EE
I.GPSG_CPF_VOL_EE
I.GPSG_CPF_VOL_ER
I.GPSG_CPF_VOL_REAS
I.GPSG_8A_DONATIONS
I.GPSG_8A_MBF_IND
I.GPSG_8A_YMF_IND
I.GPSG_8A_CCHEST_IND
I.GPSG_8A_SINDA_IND
I.GPSG_8A_CDAC_IND
I.GPSG_8A_ECF_IND
I.GPSG_8A_OTHDON_IND
I.GPSG_OS_CPF_REQD
I.GPSG_CPF_CAP_APPLD
I.GPSG_8S_CPF_VOL_ER
I.GPSG_8S_CPF_VOL_EE
I.GPSG_CPF_VOL_REQD
I.GPSG_8S_REMARKS
I.SETID_DEPT
I.DEPTID
I.GP_PAYGROUP
I.GPSG_TOTAL_MBMF
I.GPSG_8A_EXGRATIA
I.GPSG_CPF_CONT
I.GPSG_PAYMNT_REASON
I.GPSG_BASIS_PAYMNT
I.GPSG_REN_PR_DT
I.GPSG_IR8S_REQD
I.GPSG_8A_GRAT_OTH
I.GPSG_OTHER_REASON
I.GPSG_OTHER_BASIS
I.GPSG_APP_IRAS
I.GPSG_APP_IRAS_DT
I.GPSG_8A_INSURANCE
I.GPSG_8A_INSUR_ADJ
I.GPSG_INCOM_TAX_REM    &GPSG_INCOM_TAX_REM
I.GPSG_EXM_IND          &GPSG_EXM_IND
I.GPSG_INCOM_TAX_ER     &GPSG_INCM_BRN_ER
I.GPSG_INCOM_TAX_EE     &GPSG_INCM_BRN_EE
I.GPSG_OVERS_POST       &GPSG_OVERS_POST

  let $Nid = &I.NATIONAL_ID
  let $Nid_Type = &I.NATIONAL_ID_TYPE
  Do Format_NationalID($Nid, $Nid_Type)
  let $EmplId = &I.EMPLID
  let $Balance_Grp_Num = &I.BALANCE_GRP_NUM
  let #EmpCount = #EmpCount + 1
  let #Empl_Tot_Mbf = &I.GPSG_TOTAL_MBMF
  LET $IR8S_Required = &I.GPSG_IR8S_REQD
  if &I.BIRTHDATE=''
            Let #file_open=1
            Do Generate_Log(#count1,$EmplId)
            let #count1 = 1
  end-if

  lET $GPSG_EXM_IND =  &GPSG_EXM_IND
  Let #GPSG_INCOM_TAX_REM = &GPSG_INCOM_TAX_REM
  do Cal-Empl-MBMF

  do Get-EE-EmplDate

  do Get-EE-EmplEndDate
  
  do get-citizenship-country

  do get-Hrstatus

  Let #Count_Runtype = 0 
  Let $BANK_CD = ' '
  Let $Bank_Name = ' ' 
  do get-Run-Type-SGP

   Let #DiffYrs = 0
   Let #DiffMnths = 0
   do calc-diff-days


  do Prepare-Data
  let #Print-Header = 0

  if $PayGroup <> &I.GP_PAYGROUP and $Pay_group = 'Y'
     let #Print-Header = 1
  end-if

  if $DeptId <> &I.DEPTID and $Department = 'Y'
     let #Print-Header = 1
  end-if

  if #Print-Header
     if #EmpCount <> 1
       new-page
     end-if
     do Print-Header-Page
  end-if

  if #EmpCount = 1
    if #Print_Header
     new-page
    end-if
  else
     new-page
  end-if
  do Print-Form

!ePay Implementation Changes begin here
 if $Form_Type = 'A'
!ePay Implementation Changes end here

 if $IR8S_Required = 'Y'
    do Need-IR8S
 end-if


  if #IR8S
     new-page
     do Get-Perm-Status-date
     do Print-IR8S
  end-if

!ePay Implementation Changes begin here
  end-if
!ePay Implementation Changes end here

  do Update-Employee-Rec

  let $DeptId = &I.DEPTID
  let $Paygroup = &I.GP_PAYGROUP

!ePay Implementation Changes begin here
  if $Form_Type = 'E'
      do GP-ePay-Guide  ! if ePay installed write Guide data for each payslip
  end-if
!ePay Implementation Changes end here

  FROM [$iras_form_where] I
 WHERE [$SlctCriteria]
   AND I.GPSG_TAX_YEAR = #Tax_Year
   AND (I.GPSG_8A_GROSS      <> 0
     OR I.GPSG_8A_NC_BONUS   <> 0
     OR I.GPSG_8A_CNT_BONUS  <> 0
     OR I.GPSG_8A_DIR_FEE    <> 0
     OR I.GPSG_8A_COMMSN     <> 0
     OR I.GPSG_8A_PENSION    <> 0
     OR I.GPSG_8A_ALLOW_TRAN <> 0
     OR I.GPSG_8A_ALLOW_ENT  <> 0
     OR I.GPSG_8A_ALLOW_OTH  <> 0
     OR I.GPSG_8A_ALLOW_TOT  <> 0
     OR I.GPSG_8A_GRATUITY   <> 0
     OR I.GPSG_8A_LOSS_OFFIC <> 0
     OR I.GPSG_8A_NOTICE     <> 0
     OR I.GPSG_8A_EXGRATIA   <> 0
     OR I.GPSG_8A_RET_PRE93  <> 0
     OR I.GPSG_8A_RETIRE     <> 0
     OR I.GPSG_8A_OS_PENSION <> 0
     OR I.GPSG_CPF_VOL_ER    <> 0
     OR I.GPSG_8A_SHARE_GAIN <> 0
     OR I.GPSG_8A_GAIN_BFR   <> 0
     OR I.GPSG_8A_BIK        <> 0
     OR I.GPSG_INCOM_TAX_REM <> 0)
      [$iras_form_cond]
   [$SlctEmpls]
   [$OrderClause]

end-SELECT
 if #file_open=1
   Close 2
 end-if
end-procedure

!**************************************************************************
! Procedure: Cal-Empl-MBMF                                                *
!            This calculates the value of MBMF fund of indiviual          *
!            employees and sums the total of all employee contributions   *
!            for the company                                              *
!            file.                                                        *
! Called by: Process-Empls                                                *
!**************************************************************************
begin-procedure Cal-Empl-MBMF


let $VR_GPSG_CPY_TAX_REF = rtrim(&I.GPSG_CPY_TAX_REF, ' ')
let $VR_GP_PAYGROUP = rtrim(&I.GP_PAYGROUP,'')
let $irasAlias = 'B'
 do iras_form_where_clause
 
begin-SELECT
!SUM(A.GPSG_MBF)     &GPSG_MBF
SUM(A.GPSG_YMF)     &GPSG_YMF

 !Move &GPSG_MBF   to #Empl_Tot_Mbf
  Move &GPSG_YMF   to #Empl_Tot_Ymf

FROM [$iras_form_where] B, PS_GPSG_CPF_RSLTS A
WHERE A.EMPLID = $EmplId
AND A.BALANCE_GRP_NUM = $Balance_Grp_Num
AND B.GPSG_TAX_YEAR = #Tax_Year
AND A.PERIOD_END_DATE BETWEEN $Tax_Yr_Start AND $Tax_Yr_End
AND B.GPSG_CPY_TAX_REF = $VR_GPSG_CPY_TAX_REF
AND A.GPSG_CPF_EMPLR_REF IN (SELECT GPSG_CPF_EMPLR_REF FROM PS_GPSG_IRAS_CPF WHERE GPSG_CPY_TAX_REF = $VR_GPSG_CPY_TAX_REF)
AND A.EMPLID = B.EMPLID
AND A.BALANCE_GRP_NUM = B.BALANCE_GRP_NUM
[$iras_form_cond]
end-select

End-Procedure

!*************************************
!Procedure : Get-Perm-Status-date
!************************************
begin-Procedure Get-Perm-Status-date
LET $PermDt=''
let #prev_tax=#Tax_Year - 2
let $prev_tax=edit(#prev_tax,'9999')
Let $prev_tx_yr_end= '31/12/'||$prev_tax

begin-select

C.PERM_STATUS_DT_SGP &PERM_STATUS_DT_SGP

  if &PERM_STATUS_DT_SGP>= strtodate($prev_tx_yr_end,'dd/mm/yyyy')
    let $PermDt=&PERM_STATUS_DT_SGP
    do Format-DateTime ($PermDt , $PermDt, {DEFDMY}, '', '')
  end-if

  FROM PS_CITIZENSHIP C
  WHERE C.EMPLID= $EmplId
       AND C.DEPENDENT_ID=' '
       AND C.COUNTRY='SGP'
       AND C.CITIZENSHIP_STATUS IN ('5', '7')

end-SELECT


end-Procedure


!*************************************
! Get-EE-EmplDate                    *
! Get Employment Date                *
!*************************************
Begin-Procedure Get-EE-EmplDate
   Let $EmplDate = ''
Begin-SELECT
JOB.EFFDT 

   Let $EmplDate = &JOB.EFFDT

   FROM PS_JOB JOB
    WHERE JOB.EMPLID = $Emplid
      AND JOB.ACTION = 'HIR' 
      AND JOB.EFFDT = (SELECT MAX(JOB1.EFFDT) FROM PS_JOB JOB1
                           WHERE JOB1.JOB_INDICATOR = 'P'
                            AND JOB1.EMPLID  = JOB.EMPLID
                            AND JOB1.EMPL_RCD  = JOB.EMPL_RCD
                            AND JOB1.ACTION = 'HIR' 
                      )
End-SELECT
End-Procedure





!*************************************
! Get-EE-EmplEndDate                    *
! Get Employment End Date                *
!*************************************
Begin-Procedure Get-EE-EmplEndDate
   Let $EmplDate = ''
Begin-SELECT
MAX(BB.SEG_END_DT) &ENDDATE

    LET $ENDDATE = &ENDDATE
   !Let $Month = &CPF.MONTHCD
   !Let $Yr = &CPF.YEAR

     !Do Format-DateTime($EmplDate, $EmplDate, {DEFDATE},'','')

   FROM PS_GP_CAL_RUN_DTL AA, PS_GP_PYE_SEG_STAT BB
    WHERE BB.CAL_RUN_ID = (select CAL_RUN_ID from PS_GP_CAL_RUN A where
                            A.COUNTRY = 'SGP'
                            AND A.RUN_FINALIZED_IND='Y'
                            AND A.RUN_FINALIZED_TS = (select  MAX(B.RUN_FINALIZED_TS) from PS_GP_CAL_RUN B

                                                       where B.COUNTRY = A.COUNTRY AND RUN_FINALIZED_IND='Y'))
                            AND AA.CAL_RUN_ID = BB.CAL_RUN_ID
                            AND BB.EMPLID = $EmplId



End-SELECT
End-Procedure



begin-procedure calc-diff-days

   Let #Mnths = 0
   Let #DiffYrs = 0
   Let #DiffMnths = 0
   Let #dst_var = 0
   let #var = 12




       let $NEXTENDDATE = dateadd(&ENDDATE, 'day', 1)




      let #DiffYrs = datediff($NEXTENDDATE, &JOB.EFFDT , 'year')
      let #DiffMnths = datediff($NEXTENDDATE, &JOB.EFFDT,  'month')
      let #Diffdays = datediff($NEXTENDDATE, &JOB.EFFDT,  'day')



    let  #dst_var = mod(#DiffMnths, #var)

    let #DiffYrs = Trunc (#DiffYrs , 0)
    let #dst_var = Trunc (#dst_var , 0)

    move #DiffMnths to #Mnths
    let #Mnths = Trunc (#Mnths , 0)
    subtract #Mnths   from  #DiffMnths

    multiply  30  times  #DiffMnths


    let #DiffMnths = Trunc (#DiffMnths , 0)


end-Procedure



!***********************************************************************
!  Procedure: Prepare-Data                                             *
!             Prepares the data before printing the IR8A form.         *
!***********************************************************************
begin-procedure Prepare-Data

  let #Appendix8a = 0
  let #IR8S = 0

  let $Shadow_Text1 = 'Return of Employee''s Remuneration for the Year Ended 31 Dec ' || to_char(#Tax_Year)
If $Form_Type = 'A'
let $Shadow_Text2 = to_char(#Tax_Year + 1)
let $Shadow_Text4 = '(DO NOT SUBMIT THIS FORM TO IRAS UNLESS REQUESTED)'
  Else
    let $Shadow_Text2 = 'The income and deductions printed on this statement are NOT REQUIRED to be reported in your tax form. It will be automatically included in your Income Tax Notice'
  End-If
  
  let $Shadow_Text2 = ltrim($Shadow_Text2, ' ')



  let $Co_Tax_Ref_Type = rtrim(&I.GPSG_CPY_REF_TYPE, ' ')
  let $Co_Tax_Ref = rtrim(&I.GPSG_CPY_TAX_REF, ' ')

  let $Tax_Ref_Type = rtrim(&I.NATIONAL_ID_TYPE, ' ')
  if $Tax_Ref_Type = 'IC' or $Tax_Ref_Type = 'PR'
     let $Tax_Ref_Type = 'NRIC'
  else
     if $Tax_Ref_Type = 'EP' or $Tax_Ref_Type = 'FI'
        let $Tax_Ref_Type = 'FIN'
     else
        let $Tax_Ref_Type = 'Other'
     end-if
  end-if

  let $Tax_Ref = rtrim($Nid, ' ')

  let $Name = rtrim(&I.NAME,' ')
  uppercase $Name

  If &I.SEX = 'M'
     let $Sex = 'MALE'
  else
     if &I.SEX = 'F'
        let $Sex = 'FEMALE'
     else
        let $Sex = ' '
     end-if
  end-if

  let $BirthDate = rtrim(&I.BIRTHDATE, ' ')
  do Format-DateTime ($BirthDate, $BirthDate, {DEFDMY}, '', '')
  let $Job_Descr1 = rtrim(&I.GPSG_JOB_DESCR1,' ')
  uppercase $Job_Descr1
  let $Job_Descr2 = rtrim(&I.GPSG_JOB_DESCR2,' ')
  uppercase $Job_Descr2

  Let $Job_Descr1 = $Job_Descr1 || ' ' || $Job_Descr2

  let $Start_Dt = rtrim(&I.HIRE_DT, ' ')
  if $Start_Dt = ''
    let $Start_Dt = 'NA'
  else
    do Format-DateTime ($Start_Dt, $Start_Dt, {DEFDMY}, '', '')
  end-if
  let $End_Dt = rtrim(&I.TERMINATION_DT, ' ')
  if $End_Dt = ''
    let $End_Dt = 'NA'
  else
    do Format-DateTime (&I.TERMINATION_DT, $End_Dt, {DEFDMY}, '', '')
  end-if

  let $Address1 = rtrim(&I.GPSG_ADDRESS1, ' ')
  let $Address2 = rtrim(&I.GPSG_ADDRESS2, ' ')
  let $CityState = rtrim(&I.GPSG_ADDRESS3, ' ')

  uppercase $Address1
  uppercase $Address2
  uppercase $CityState

  let $FieldName = 'MAR_STATUS'
  let $FieldValue = rtrim(&I.MAR_STATUS, ' ')
  do Read-Translate-Table
  let $Mar_Status = rtrim($XlatLongName,' ')
  uppercase $Mar_Status

  let #GRS_Ytd = &I.GPSG_8A_GROSS

  let $Bonus_Declared_Dt = rtrim(&I.GPSG_BONUS_DT, ' ')
  do Format-DateTime ($Bonus_Declared_Dt, $Bonus_Declared_Dt, {DEFDMY}, '', '')
  
  MOVE &I.GPSG_8A_NC_BONUS TO #IRS_8A_NC_BONUS
  MOVE &I.GPSG_8A_CNT_BONUS TO #IRS_8A_CNT_BONUS
  let #Bonus_Ytd = #IRS_8A_NC_BONUS + #IRS_8A_CNT_BONUS

  let $DirFee_Approved_Dt = rtrim(&I.GPSG_DIR_FEE_DT, ' ')
  do Format-DateTime ($DirFee_Approved_Dt, $DirFee_Approved_Dt, {DEFDMY}, '', '')
  let #GPSG_8A_DIR_FEE = &I.GPSG_8A_DIR_FEE

  let $GPSG_COMMSN_FROM = rtrim(&I.GPSG_COMMSN_FROM, ' ')
  do Format-DateTime ($GPSG_COMMSN_FROM, $GPSG_COMMSN_FROM, {DEFDMY}, '', '')
  let $GPSG_COMMSN_TO = rtrim(&I.GPSG_COMMSN_TO, ' ')
  do Format-DateTime ($GPSG_COMMSN_TO, $GPSG_COMMSN_TO, {DEFDMY}, '', '')
  let $GPSG_COMMSN_REG = &I.GPSG_COMMSN_REG
  let $GPSG_COMMSN_1TM = &I.GPSG_COMMSN_1TM
  let #GPSG_8A_COMMSN = &I.GPSG_8A_COMMSN

  let #GPSG_8A_PENSION = &I.GPSG_8A_PENSION

  let #Trans_Ytd = &I.GPSG_8A_ALLOW_TRAN
  let #Ent_Ytd  = &I.GPSG_8A_ALLOW_ENT
  let #Other_Ytd = &I.GPSG_8A_ALLOW_OTH
  let #GPSG_8A_ALLOW_TOT = &I.GPSG_8A_ALLOW_TOT

!---   Add in-lieu-of-notice and loss-of-office to be reported under
!---   Gratuity



  let #GPSG_8A_GRATUITY = &I.GPSG_8A_GRATUITY
  let #GPSG_8A_EXGRATIA=&I.GPSG_8A_EXGRATIA
  let #GPSG_8A_NOTICE=&I.GPSG_8A_NOTICE
  let #GPSG_8A_LOSS_OFFIC=&I.GPSG_8A_LOSS_OFFIC
  LET #Others = &I.GPSG_8A_GRAT_OTH

  let #LUMP_SUM=#GPSG_8A_GRATUITY+#GPSG_8A_EXGRATIA+#GPSG_8A_NOTICE+#GPSG_8A_LOSS_OFFIC+#Others

  let $GPSG_RETIRE_FUND = rtrim(&I.GPSG_RETIRE_FUND, ' ')
  if $GPSG_RETIRE_FUND = ''
    let $GPSG_RETIRE_FUND = 'NA'
  end-if
  uppercase $GPSG_RETIRE_FUND

  let #Pre93 = &I.GPSG_8A_RET_PRE93
!  let #Post93 = &I.GPSG_8A_RET_POST
  let #GPSG_8A_RETIRE = &I.GPSG_8A_RETIRE
  let #GPSG_8A_OS_PENSION = &I.GPSG_8A_OS_PENSION
  let #GPSG_CPF_VOL_ER = &I.GPSG_CPF_VOL_ER

  if #GPSG_CPF_VOL_ER <> 0
     let #IR8S = 1
  end-if
  MOVE &I.GPSG_8A_SHARE_GAIN TO #IRS_SHR_GAIN
  MOVE &I.GPSG_8A_GAIN_BFR TO #IRS_8A_BFR
  let #GPSG_8A_SHARE_GAIN = #IRS_SHR_GAIN + #IRS_8A_BFR
  let #GPSG_8A_BIK = &I.GPSG_8A_BIK

  let #Total_Other = #GPSG_8A_COMMSN + #GPSG_8A_PENSION + #GPSG_8A_ALLOW_TOT + #GPSG_8A_GRATUITY +#GPSG_8A_EXGRATIA -
                   +#GPSG_8A_NOTICE+ #GPSG_8A_RETIRE + #GPSG_8A_OS_PENSION + #GPSG_CPF_VOL_ER             -
                   + #GPSG_8A_SHARE_GAIN + #GPSG_8A_BIK+#Others

  let $GPSG_ER_PAYS_TAX = rtrim(&I.GPSG_ER_PAYS_TAX, ' ')
  let $GPSG_CPF_IND = rtrim(&I.GPSG_CPF_IND, ' ')
  let $GPSG_OVERS_POST = rtrim(&GPSG_OVERS_POST, ' ')
  let $Fund_Name = rtrim (&I.GPSG_PENS_FUND, ' ')
  if $Fund_Name = ''
    let $Fund_Name = 'NA'
  end-if
  uppercase $Fund_Name
  let #GPSG_CPF_COMP_EE = &I.GPSG_CPF_COMP_EE

  let #CPF_VOL_Ytd = &I.GPSG_CPF_VOL_EE
  let $GPSG_CPF_VOL_REAS = rtrim(&I.GPSG_CPF_VOL_REAS, ' ')

  let #GPSG_8A_DONATIONS  = &I.GPSG_8A_DONATIONS
  let $MBF = &I.GPSG_8A_MBF_IND
  let $YMF = &I.GPSG_8A_YMF_IND
  let $CChest = &I.GPSG_8A_CCHEST_IND
  let $SINDA = &I.GPSG_8A_SINDA_IND
  let $CDAC = &I.GPSG_8A_CDAC_IND
  let $ECF = &I.GPSG_8A_ECF_IND
  let $OTHDON = &I.GPSG_8A_OTHDON_IND

  let $GPSG_OS_CPF_REQD = &I.GPSG_OS_CPF_REQD
  let $GPSG_CPF_CAP_APPLD = &I.GPSG_CPF_CAP_APPLD
  let #GPSG_8S_CPF_VOL_ER = &I.GPSG_8S_CPF_VOL_ER
  let #GPSG_8S_CPF_VOL_EE = &I.GPSG_8S_CPF_VOL_EE
  let $GPSG_CPF_VOL_REQD = &I.GPSG_CPF_VOL_REQD
  let $GPSG_CPF_CONT=&I.GPSG_CPF_CONT
  LET $REASON_PAYMENT=&I.GPSG_PAYMNT_REASON
  LET $BASIS_PAYMENT=&I.GPSG_BASIS_PAYMNT
  LET $GPSG_REN_PR_DT=rtrim(&I.GPSG_REN_PR_DT,' ')
  !LET #Others = &I.GPSG_8A_GRAT_OTH
  LET $Others_Reason = &I.GPSG_OTHER_REASON
  LET $Others_Basis  = &I.GPSG_OTHER_BASIS

  do Format-DateTime ($GPSG_REN_PR_DT, $GPSG_REN_PR_DT, {DEFDMY}, '', '')

  let $APP_IRAS = &I.GPSG_APP_IRAS
  let $APP_IRAS_DT = rtrim(&I.GPSG_APP_IRAS_DT, ' ')
  do Format-DateTime ($APP_IRAS_DT, $APP_IRAS_DT, {DEFDMY}, '', '')
  MOVE &I.GPSG_8A_INSURANCE TO #IRS_8A_INSR
  MOVE &I.GPSG_8A_INSUR_ADJ TO #IRS_8A_INS_ADJ
  let #INSURANCE = #IRS_8A_INSR + #IRS_8A_INS_ADJ

begin-select

NT.DESCRSHORT
NID.NATIONAL_ID

  FROM PS_PERS_NID NID
     , PS_NID_TYPE_TBL NT
 WHERE NID.EMPLID = $EMPLID
   AND NID.COUNTRY = 'SGP'
   AND NID.PRIMARY_NID = 'Y'
   AND NT.COUNTRY = NID.COUNTRY
   AND NT.NATIONAL_ID_TYPE = NID.NATIONAL_ID_TYPE
end-select

  let $UIN_Type = &NT.DESCRSHORT
  let $UIN = rtrim(&NID.NATIONAL_ID, ' ')

end-procedure
!***********************************************************************
!  Procedure: Print-Header-Page                                        *
!             Prints a header page on change of DeptId or PayGroup.    *
!***********************************************************************
begin-procedure Print-Header-Page

begin-select
P.DESCR
 FROM PS_GP_PYGRP P
WHERE P.GP_PAYGROUP = &I.GP_PAYGROUP

end-select

  let $PayDescr = rtrim(&P.DESCR, ' ')

begin-select

D.DESCR

  FROM PS_DEPT_TBL D
 WHERE D.DEPTID = &I.DEPTID
   AND D.SETID = &I.SETID_DEPT
   AND D.EFFDT = (SELECT MAX(D1.EFFDT)
                    FROM PS_DEPT_TBL D1
                   WHERE D1.DEPTID = D.DEPTID
                     AND D1.SETID = D.SETID
                     AND D1.EFFDT <= $Tax_Yr_End)

end-select

  let $DeptDescr = rtrim(&D.DESCR, ' ')

  let #row = 10

  graphic () font :#StdFont :#ChkPntSize

  add 2 to #row


  graphic () font :#StdFont :#StmtPntSize

end-procedure


!***********************************************************************
!  Procedure: Need-IR8S                                                *
!             Checks for the need of an IR8S Form                      *
!             #IR8S = 1 if required                                    *
!***********************************************************************
begin-procedure Need-IR8S

let #IR8S = 0
 let $irasAlias = 'I1'
 do iras_form_where_clause
 
BEGIN-SELECT DISTINCT
I1.EMPLID
I1.GPSG_IR8S_REQD &I1.GPSG_IR8S_REQD

    if &I1.GPSG_IR8S_REQD = 'Y'
        let #IR8S = 1
    end-if

FROM [$iras_form_where] I1
WHERE I1.EMPLID = $EMPLID
    AND I1.BALANCE_GRP_NUM = $Balance_Grp_Num
    AND I1.GPSG_CPY_TAX_REF = $Company_Tax_Ref
    AND I1.GPSG_TAX_YEAR = #Tax_Year
    [$iras_form_cond] 
END-SELECT

end-procedure

!***********************************************************************
!  Procedure: Print-Form                                               *
!             Prints the IR8A form for each employee.                  *
!***********************************************************************
begin-procedure Print-Form

  let #row = 1
  let #Remission_Amount = 0
  let #Exempt_Amount = 0
  graphic () font :#StdFont :#ChkPntSize

! Tax year printed should be Year + 1 since the tax is always submitted in the following year.

  Let #PrtTaxYear = #Tax_Year + 1

  graphic () font :#StdFont 15

  print #PrtTaxYear      (#row,1) edit 9999  BOLD
  If $Form_Type = 'A'
    
    if $Iras_form_type = 'A'
    print 'FORM IR8A               Amendments'      (#row) center BOLD
    else
    print 'FORM IR8A'      (#row) center BOLD
    end-if
  else
    print 'FORM IR8E'      (#row) center BOLD
  End-If
  graphic () font :#StdFont :#StmtPntSize

  add 1 to #row
  If $Form_Type = 'A'
  graphic                                        (#row,1,{widthofpage}) box 3 0 100
  Else
  graphic                                        (#row,1,{widthofpage}) box 2 0 100
  End-If
  
alter-color-map name = 'white' value = (255, 255, 255)
get-color print-text-foreground = ($print-foreground)
set-color print-text-foreground = ('white')

  Let $Shadow_Text5 = '1 Mar ' || $Shadow_Text2
  print  $Shadow_Text1                           (#row,40) bold
  add 1 to #row
  If $Form_Type = 'A'
  print 'Fill in this form and give it to your employee by' (#row,44) bold
  print $Shadow_Text5 (#row, 82) bold

  
   add 1 to #row
   print    $Shadow_Text4  (#row,40) bold
 
  Else
    print  $Shadow_Text2                           (#row,2)
  End-If
  add 1 to #row
  
alter-color-map name = 'black' value = (0, 0, 0)
get-color print-text-foreground = ($print-foreground)
set-color print-text-foreground = ('black')

  print '    This Form will take about 10 minutes to complete. Please get ready the employee''s personal particulars and details of his/her employment ' (#row, 1) bold
  add 1 to #row
  print '    income. Please read the explanatory notes when completing this form.' (#row,1) bold


  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 2
  print 'Employer''s Tax Ref. No. / UEN'   (#row,2)

  graphic                                        (#row,63,66) box 2
  print 'Employee''s Tax Ref. No.: *NRIC / FIN (Foreign Identification No.)'              (#row,64)
  add 1 to #row
  print $Tax_Ref_Type                            (#row,82)


  print $ROB_ROC_Type                            (#row,28)
  print $ROB_ROC_No                              (#row,40)
  print $Tax_Ref                                 (#row,90)
  graphic                                        (#row,63,1) vert-line
  graphic                                        (#row,80,1) vert-line
  graphic                                        (#row,96,1) vert-line
  add 1 to #row
  graphic                                      (#row,1,{widthofpage}) box 3
  print 'Full Name of Employee as per NRIC / FIN'     (#row,2)
  graphic                                        (#row,63,2) vert-line
  print 'Date of Birth'                          (#row,64)
  graphic                                        (#row,80,2) vert-line
  print 'Sex'                                    (#row,81)
  graphic                                        (#row,96,2) vert-line
  print 'Nationality'                            (#row, 97)

  add 1 to #row
  print $Name                                    (#row, 2) Wrap 34 2 

  print $BirthDate                               (#row, 64)
  
  print $Sex                                     (#row, 81)
  
  print $Nationality                             (#row, 97)
  add 2 to #row

  graphic                                        (#row,1,{widthofpage}) box 4
  print 'Residential Address'                    (#row, 2)
  graphic                                        (#row,63,66) box 4
  print 'Designation'                           (#row,64,68)  ! (#row,64,{widthofpage}) 
  !graphic                                        (#row,64,68) box 4 
    Let  #row = #row - 1
   graphic                                        (#row,88,4) vert-line
   Let  #row = #row + 1
    print 'Bank to which salary is credited'     (#row,89,{widthofpage})

  add 1 to #row
  print $Address1                                (#row, 2)
  print $Job_Descr1                              (#row,64) wrap 20 2
  uppercase $Bank_Name
  print $Bank_Name    (#row,89) wrap 20 2

  add 1 to #row
  print $Address2                                (#row, 2)
  add 1 to #row
  print $CityState                               (#row, 2)

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 2
  print 'If employment commenced and/or ceased during the year, state:'     (#row, 2)
  graphic                                        (#row,63,33) box 2
  print 'Date of Commencement'                   (#row, 64)
  print 'Date of Cessation'    (#row, 97)
  add 1 to #row
  print '(See Explanatory Note 5)'  (#row, 2) bold
  print $Start_DT                                (#row, 64)
  print $End_DT                                  (#row, 97)

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 2 0 100
  alter-color-map name = 'white' value = (255, 255, 255)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('white')
  
  print 'INCOME (See Explanatory Note 9 unless otherwise specified)'   (#row,10) bold
  print '$'                                      (#row,122)
  alter-color-map name = 'black' value = (0, 0, 0)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('black')
  
  add 2 to #row
  print 'a)'                                     (#row,2)
  print 'Gross Salary, Fees, Leave Pay, Wages and Overtime Pay' (#row,10) bold
  print '                               '         (#row,{NumberColumn}) underline
  if #GRS_Ytd = 0
    print 'NA'                                    (#row,{emptyColumn})
  else
    let #GRS_Ytd = floor(#GRS_Ytd)
    print #GRS_Ytd                                (#row,{NumberColumn}) edit 999,999,999,999
  end-if

  add 1 to #row
  print 'b)'                                     (#row,2)
  print 'Bonus'                                  (#row,10) BOLD
  Let $BonusString = ' (non-contractual bonus paid in ' ||  to_char(#Tax_Year) || ' and / or contractual bonus ' || ')' 
  print $BonusString                             (#row, 15)
  print '                               '        (#row,{NumberColumn}) underline
  
  if #Bonus_Ytd = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    let #Bonus_Ytd = floor(#Bonus_Ytd)
    print #Bonus_Ytd                             (#row,{NumberColumn}) edit 999,999,999,999
  end-if

  add 1 to #row
  print 'c)'                                     (#row,2)
  print 'Director''s fees'                       (#row,10) BOLD

  Let $DirFeeStr = ' (approved at the company''s AGM/EGM on ' || $DirFee_Approved_Dt || ')'  
  print $DirFeeStr                               (#row, 22)
  print '                               '        (#row,{NumberColumn}) underline
  
  if #GPSG_8A_DIR_FEE = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    let #GPSG_8A_DIR_FEE = floor(#GPSG_8A_DIR_FEE)
    print #GPSG_8A_DIR_FEE                       (#row,{NumberColumn}) edit 999,999,999,999
  end-if
  add 1 to #row
  print 'd)'                                     (#row,2)
  print 'Others:' (#row,10) bold

  add 1 to #row
  print '1. Allowances: (i)Transport $'          (#row,10)
  if #Trans_Ytd = 0

    print 'NA'                                   (#row,35)
  else
      print #Trans_YTD                             (#row,26) edit 999,999,999,999.99
  end-if
  print '(ii)Entertainment $'                    (#row,44)
  if #Ent_Ytd = 0
    print 'NA'                                   (#row,62)
  else
    print #Ent_YTD                               (#row,52) edit 999,999,999,999.99
  end-if
  print '(iii)Others $'                          (#row,69)
  if #Other_Ytd = 0
    print 'NA'                                   (#row,83)
  else
    print #Other_Ytd                             (#row,72) edit 999,999,999,999.99
  end-if
  do Print_Dashed_Underline
    
  if #GPSG_8A_ALLOW_TOT = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    print #GPSG_8A_ALLOW_TOT                     (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if
 
  add 1 to #row
 
 if $GPSG_COMMSN_FROM = ''
    let $GPSG_COMMSN_FROM = $Space
  end-if
  if $GPSG_COMMSN_TO = ''
    let $GPSG_COMMSN_TO = $Space
  end-if
  let $One = '2. Gross Commission for the period ' || $GPSG_COMMSN_FROM || -
             ' to ' || $GPSG_COMMSN_TO
  print $One                                     (#row,10)

  print '*Monthly and/or other adhoc payment'     (#row, 75)

  do Print_Dashed_Underline
  if #GPSG_8A_COMMSN = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    print #GPSG_8A_COMMSN                        (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if
  add 1 to #row
  print '3. Pension'                             (#row,10)
  do Print_Dashed_Underline
  if #GPSG_8A_PENSION = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    print #GPSG_8A_PENSION                       (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if
  add 1 to #row
  print '4. Lump sum payment '  (#row,10)
  
  do Print_Dashed_Underline
  if #LUMP_SUM = 0
    print 'NA'                                       (#row,{emptyColumn})
  else
   print #LUMP_SUM                         (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if
  
  add 1 to #row
  graphic                                               (#row,11,38) box 1

  print '(i)Gratuity $'                                    (#row,13)
   if #GPSG_8A_GRATUITY = 0
    print 'NA'                                          (#row,23)
  else
    print #GPSG_8A_GRATUITY                             (#row,23) edit 999,999,999,999.99
  end-if

  graphic                                               (#row,49,38) box 1
  print '(ii)Notice Pay $'                                  (#row,51)
  if #GPSG_8A_NOTICE = 0
    print 'NA'                                          (#row,66)
  else
    print #GPSG_8A_NOTICE                               (#row,66) edit 999,999,999,999.99
  end-if

  graphic                                               (#row,87,43) box 1
  print '(iii)Ex-gratia payment $'                           (#row,89)
  if #GPSG_8A_EXGRATIA = 0
    print 'NA'                                          (#row,108)
  else
    print #GPSG_8A_EXGRATIA                             (#row,108) edit 999,999,999,999.99
  end-if

  add 1 to #row
  graphic                                               (#row,11,119) box 1
  print '(iv)Others (please state nature) $'                (#row,13)
  print #Others                                         (#row,38) edit 999,999,999,999.99


  add 1 to #row
  graphic                                               (#row,11,119) box 1
  print '(v)Compensation for loss of office $ '            (#row,13)
  print 'Approval obtained from IRAS: *Yes/No'          (#row,60)
  print 'Date of approval:'                             (#row,98)
  if #GPSG_8A_LOSS_OFFIC = 0
    print 'NA'                                          (#row,41)
  else
    print #GPSG_8A_LOSS_OFFIC                           (#row,38) edit 999,999,999,999.99
    if $APP_IRAS = 'Y'
      print 'Yes'                                       (#row,92)
      print $APP_IRAS_DT                                (#row,119)
    else
      print 'No'                                        (#row,92)
    end-if
  end-if

  graphic                                              (#row,72,1) vert-line 
  add 1 to #row

  graphic                                              (#row,11,119) box 1
  !add 1 to #row
  print 'Reason for Payment:'                            (#row,13) bold
  if $REASON_PAYMENT= ''
  print 'NA'                                             (#row,40)
  else
  print $REASON_PAYMENT                                 (#row,40)
  end-if
  
  print 'Length of service within the company/group:'            (#row,72) bold
  if $HrStatus = 'I' and #LUMP_SUM <> 0
  print #DiffYrs                          (#row,106) edit 9999
  print ' years'                             (#row,110)
  print #dst_var                          (#row,113) edit 9999
  print ' months'                           (#row,117)

  if #Diffdays < 30
  print #Diffdays                          (#row,122) edit 9999
  else
  print #DiffMnths                             (#row,122) edit 9999
  end-if
  print ' days'                               (#row,126)
  end-if
  add 1 to #row
  
  graphic                                              (#row,11,119) box 2
  print 'Basis of arriving at the payment:'              (#row,13) bold
  print '(Give details separately if space is insufficient)' (#row,60)
  add 1 to #row
  if $BASIS_PAYMENT= ''
   print 'NA'                                            (#row,20)
  else
   print $BASIS_PAYMENT                                  (#row,20)
  end-if
  add 1 to #row

  print '5. Retirement benefits including gratuities/pension/commutation of pension/lump sum payments, etc from' (#row,10)
  add 1 to #row
  print 'Pension/Provident Fund: Name of Fund ' (#row,12)
  print $GPSG_RETIRE_FUND                        (#row, 50)
  add 1 to #row
  print '(Amount accrued up to 31 Dec 1992  $ '  (#row,12)
  if #Pre93 = 0
    print 'NA'                                   (#row,54)
  else
    print #Pre93                                 (#row,49)
  end-if
  print ')'                                      (#row,+1)
  print 'Amount accrued from 1993:'               (#row,67)

  do Print_Dashed_Underline
  if #GPSG_8A_RETIRE = 0
    print 'NA'                                       (#row,{emptyColumn})
  else
    print #GPSG_8A_RETIRE                            (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if

  add 1 to #row
  print '6. Contributions made by employer to any Pension/Provident Fund constituted outside Singapore without tax concession:' (#row,10)
  do Print_Dashed_Underline
  if #GPSG_8A_OS_PENSION = 0
    print 'NA'                                       (#row,{emptyColumn})
  else
    print #GPSG_8A_OS_PENSION                        (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if
      add 1 to #row
  print 'Contributions made by employer to any Pension/Provident Fund constituted outside Singapore with tax concession :'  (#row,12)

  add 1 to #row

  graphic    (#row,11,85) box 1
  print 'Name of the overseas pension/provident fund:'  (#row,13)
    add 1 to #row
  graphic    (#row,11,50) box 1

  print 'Full Amount of the contributions :'  (#row,13)
    graphic    (#row,61,35) box 1

  print 'Are contributions mandatory: *Yes/No'   (#row,63)
    add 1 to #row
  graphic    (#row,11,85) box 1

  print 'Were contributions charged / deductions claimed by a Singapore permanent establishment. *Yes/No'  (#row,13) 
    add 1 to #row


  print '7. Excess/Voluntary contribution to CPF by employer (less amount refunded/to be refunded):'       (#row,10)
  add 1 to #row

  print '[Complete the Form IR8S]'   (#row,12) bold
  do Print_Dashed_Underline
  if #GPSG_CPF_VOL_ER  = 0
    print 'NA'                                       (#row,{emptyColumn})
  else
    print #GPSG_CPF_VOL_ER                           (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if
  add 1 to #row

  print '8. Gains or Profits from Employee stock option (ESOP)/ other forms of Employee Share Ownership(ESOW) Plans:'                (#row,10)
  add 1 to #row
  print '[Complete the Appendix 8B]'  (#row,12) BOLD



  do Print_Dashed_Underline
  if #GPSG_8A_SHARE_GAIN = 0
    print 'NA'                                      (#row,{emptyColumn})
  else
    print #GPSG_8A_SHARE_GAIN                       (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if
  add 1 to #row

  print '9. Value of Benefits-in-kind'              (#row,10)
  print '[See Explanatory Note 12 and complete Appendix 8A]'          (#row,33) bold
  do Print_Dashed_Underline
  if #GPSG_8A_BIK = 0
    print 'NA'                                      (#row,{emptyColumn})
  else
    print #GPSG_8A_BIK                              (#row,{NumberColumn}) edit 999,999,999,999.99
  end-if

  add 2 to #row
  print 'TOTAL (items d1 to d9)'                 (#row,70) bold
  print '                               '        (#row,{NumberColumn}) underline
  let #Total_Other = floor(#Total_Other)
  print #Total_Other                             (#row,{NumberColumn}) edit 999,999,999,999

    If $GPSG_EXM_IND = '1' 
        Let #Remission_Amount = &GPSG_INCOM_TAX_REM
    Else
        Let #Exempt_Amount = &GPSG_INCOM_TAX_REM
    End-if
    
show '$GPSG_EXM_IND - ' $GPSG_EXM_IND
Show '#Exempt_Amount - ' #Exempt_Amount
 add 1 to #row

  print 'e)          1.Remission: Amount of  Income $'              (#row,2)
  print  #Remission_Amount   (#row,38)
  
  add 1 to #row
  
  If $GPSG_OVERS_POST = 'F'
   print '  2.Overseas Posting:    *Full Year'              (#row,7)
   !graphic                        (#row,45,16) horz-line 12
  ELSE
  If $GPSG_OVERS_POST = 'P'
  print '  2.Overseas Posting:    *Part of the Year'              (#row,7)
  !graphic                        (#row,35,10) horz-line 12
  ELSE
  print '  2.Overseas Posting:    *Full Year/Part of the Year' (#row,7)
  End-If
  End-If
    print '(See Explanatory Note 8a)'  (#row,45) bold
  
 add 1 to #row
 print '  3.Exempt Income: $'     (#row,7)
 print #Exempt_Amount   (#row,38)
 print '(See Explanatory Note 8b)'  (#row,45) bold

  add 1 to #row
  graphic                                        (#row,8,121) box 4
  print 'f)'                                     (#row,2)
  print 'Employee''s '                           (#row,10)
  !graphic                                       (#row,25,103) box 1
   print 'If tax is fully borne by employer, DO NOT enter any amount in (i) and (ii)' (#row,26)
   add 1 to #row
   
   Print 'income tax borne'                       (#row,10)
   graphic                                        (#row,25,104) box 1
   print '(i) If tax is partially borne by employer, state the amount of income for which tax is borne by employer' (#row,26)
   graphic                                       (#row,116,13) box 1
   let $GPSG_INCM_BRN_ER = &GPSG_INCM_BRN_ER
   if $GPSG_ER_PAYS_TAX = 'P'
   print $GPSG_INCM_BRN_ER                          (#row, 115) edit 999999999.99
   End-if
   add 1 to #row
   print 'by employer?'                           (#row,10)
   graphic                                        (#row,25,104) box 1
   print '(ii) If a fixed amount of tax is borne by employee, state the amount to be paid by employee'  (#row,26)
   graphic                                        (#row,116,13) box 1
   let $GPSG_INCM_BRN_EE = &GPSG_INCM_BRN_EE
   if $GPSG_ER_PAYS_TAX = 'N'
   print $GPSG_INCM_BRN_EE                          (#row, 115) edit 999999999.99
   End-if
   add 1 to #row
   print ' *YES / NO : '    (#row,10) 
  if $GPSG_ER_PAYS_TAX = 'Y' OR $GPSG_ER_PAYS_TAX = 'P' 
     print 'YES'                                    (#row, 21)
  else
    print 'NO'                                     (#row, 21) 
  end-if
  graphic                                       (#row,25,104) box 1
  
  add 2 to #row
  graphic                                         (#row,1,{widthofpage}) box 1 0 100
  graphic                                         (#row,1,{widthofpage}) box 8
  alter-color-map name = 'white' value = (255, 255, 255)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('white')

print 'DEDUCTIONS'                              (#row,5) bold
print '(See Explanatory Note 10 - Deductions)' (#row, 18) BOLD  

  
  alter-color-map name = 'black' value = (0, 0, 0)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('black')
  
  add 1 to #row
  graphic                                         (#row,1,{widthofpage}) box 5
  graphic                                         (#row,113, 16) box 5
  !print 'EMPLOYEE''S COMPULSORY contribution to'  (#row,5)
  print 'EMPLOYEE''S COMPULSORY contribution to *CPF/ Designated Pension or Provident Fund'  (#row,5)
  print '(less amount refunded/' (#row, 76) bold
  add 1 to #row
  print 'to be refunded)'                (#row,5) bold

  print 'Name of Fund :'                           (#row,22)
  print $Fund_Name                                (#row,46)

  if #GPSG_CPF_COMP_EE = 0
    print 'NA'                                    (#row,{emptyColumn})
  else
    print #GPSG_CPF_COMP_EE                       (#row,{numbercolumn}) edit 999,999,999,999.99
  end-if

  add 1 to #row
  graphic () font :#StdFont :#ChkPntSize2
  print '(Apply   the   appropriate   CPF   rates   published   by  CPF  Board   on   its   website  ''www.cpf.gov.sg.''    Do   not  include' (#row,5) 
  add 1 to #row
  print 'excess/voluntary contributions to CPF, voluntary contributions to Medisave Account, voluntary contributions to Retirement' (#row,5) 
  add 1 to #row
  print 'Sum Topping-up Scheme, SRS contributions and contributions to Overseas Pension or Provident Fund in this item)' (#row,5) 
  !add 1 to #row
  !graphic                                        (#row,1,{widthofpage}) box 2
  !graphic                                        (#row,113, 16) box 2
  !print 'EMPLOYEE''S VOLUNTARY contribution to CPF obligatory by contract of employment in respect of Singapore NRIC holders ' (#row,5)
  !add 1 to #row
  !print 'who are posted overseas.'                   (#row,5)
  !print '(Please complete Form IR8S)'            (#row,25) bold

  !if #CPF_VOL_Ytd = 0
  !  print 'NA'                                   (#row,{emptyColumn})
  !else
  !  print #CPF_VOL_Ytd                           (#row,{numbercolumn}) edit 999,999,999,999.99
  !end-if

  add 1 to #row
  graphic () font :#StdFont :#StmtPntSize
  graphic                                        (#row,1,{widthofpage}) box 2
  graphic                                        (#row,113, 16) box 2

  print 'Donations'                              (#row,5) bold
  print 'deducted from salaries for:'         (#row,14)
  add 1 to #row

  print '*Yayasan Mendaki Fund/Community Chest of Singapore/SINDA/CDAC/ECF/Other tax exempt donations'                   (#row,5)


  !LET #GPSG_8A_DONATIONS = #GPSG_8A_DONATIONS - #Empl_Tot_mbf

  if #GPSG_8A_DONATIONS < 0
  LET #GPSG_8A_DONATIONS = #GPSG_8A_DONATIONS * -1
  end-if

  if #GPSG_8A_DONATIONS = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    print #GPSG_8A_DONATIONS                     (#row,{numbercolumn}) edit 99,999,999,999.99
  end-if

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 2 0 9
  graphic                                        (#row,1,{widthofpage}) box 8
  graphic                                        (#row,113, 16) box 1
  print 'Contributions'                          (#row,5) bold
  print ' deducted from salaries to Mosque Building Fund :' (#row,16)
  if #Empl_Tot_mbf = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    let #Empl_Tot_mbf = Ceil(#Empl_Tot_mbf)
    print #Empl_Tot_mbf                          (#row,{numbercolumn}) edit 99,999,999,999.99
  end-if

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 5
  graphic                                        (#row,113, 16) box 1
  print 'Life Insurance premiums'                (#row,5) bold
  print 'deducted from salaries :'               (#row,26)
  if #INSURANCE = 0
    print 'NA'                                   (#row,{emptyColumn})
  else
    let #INSURANCE = Ceil(#INSURANCE)
    print #INSURANCE                             (#row,{numbercolumn}) edit 99,999,999,999.99
  end-if

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 1 0 100
  graphic                                        (#row,1,{widthofpage}) box 6
  alter-color-map name = 'white' value = (255, 255, 255)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('white')
  
  print 'DECLARATION'                            (#row,5) bold
  print '(See Explanatory Note 2)' (#row,20) BOLD
  
  alter-color-map name = 'black' value = (0, 0, 0)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('black')
  
  add 1 to #row
  print 'Name of Employer:'                       (#row,2)
  print $Co_Name                                 (#row, 20)
!graphic                                        (#row,20,119) horz-line 12
  add 1 to #row
  print 'Address of Employer:'                    (#row,2)
  print $Co_Address                              (#row, 20)
!graphic                                        (#row,20,119) horz-line 12

  add 2 to #row
  print $Co_Tax_Contact                          (#row, 2)
  print $Co_Designation                          (#row, 42)
  print $Co_Phone                                (#row, 79)
  print $Prn_Date_Created                        (#row, 119)

  graphic                                        (#row,2,38) horz-line 12
  graphic                                        (#row,41,37) horz-line 12
  graphic                                        (#row,79,16) horz-line 12
  graphic                                        (#row,100,15) horz-line 12
  graphic                                        (#row,119,9) horz-line 12

  add 1 to #row
  print 'Name of authorised person making the declaration' (#row,2)
  print 'Designation'                            (#row, 53)
  print 'Tel. No.'                               (#row, 79)
  print 'Signature'                              (#row, 100)
  print 'Date'                                   (#row, 119)

  add 1 to #row
  print 'There are penalties for failing to give a return or furnishing an incorrect or late return.' (#row,30) bold

  add 1 to #row
 let $txt = 'IR8A(1/' || to_char(#Tax_Year + 1) || ')'
  print $txt                                     (#row, 2) bold
  !add 1 to #row
  print '* Delete where applicable' (#row, 100) bold

end-procedure

!***********************************************************************
!  Procedure: Print-IR8S                                               *
!                                                                      *
!***********************************************************************
begin-procedure Print-IR8S

  let #row = 1

  graphic () font :#StdFont :#ChkPntSize

!  Tax year printed should be Year + 1 since the tax is always submitted in the following year.
  Let #PrtTaxYear = #Tax_Year + 1

  graphic () font :#StdFont 15

  print #PrtTaxYear      (#row,1) edit 9999  BOLD
  print 'FORM IR8S'      (#row) center  BOLD
  graphic () font :#StdFont :#StmtPntSize

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 2 0 100
  alter-color-map name = 'white' value = (255, 255, 255)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('white')
  
  let $Shadow_Text1 ='Details of Employer''s/Employee''s Contributions to CPF for the Year Ended 31 Dec '  || to_char(#Tax_Year)
  print $Shadow_Text1 (#row,25)  BOLD
  
  add 1 to #row
  let $Shadow_Text3 = 'Fill in this form if applicable and give it to your employee by 1 Mar ' || to_char(#Tax_Year + 1)
  print  $Shadow_Text3                           (#row, 30) BOLD
  
  
  alter-color-map name = 'black' value = (0, 0, 0)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('black')
  
  add 2 to #row
  !print 'Please read the instructions overleaf carefully before completing this form' (#row,1) bold
  print 'This Form will take about 10 minutes to complete. Please get ready the employee''s personal particulars,details of his/her employment' (#row,1) bold
  add 1 to #row
  print 'income and CPF contributions in respect of Singapore employment. Please read the explanatory notes when completing this form.' (#row,1) bold
  add 2 to #row
  graphic                                        (#row,1,{widthofpage}) box 9
  graphic                                        (#row,1,50) box 3
  print 'FULL NAME OF EMPLOYEE AS PER NRIC / FIN'     (#row,2)
  graphic                                        (#row,51,35) box 3
  print 'DATE OF BIRTH'                           (#row,59)
  graphic                                         (#row,86,43) box 3
  print 'TAX REF.NO.: *NRIC / FIN(Foreign Identification No.)' (#row,86)
  add 1 to #row
  print $Name                                     (#row, 2) wrap 30 2
  print $BirthDate                                (#row,60)
  print $Tax_Ref_Type                             (#row,95)
  add 1 to #row
  print $Tax_Ref                                   (#row,95)
  add 1 to #row
  graphic                                         (#row,1,30) box 5
  print 'EMPLOYER''S TAX REF. NO./ '               (#row,2)
  graphic                                         (#row,31,50) box 5
  print 'If employment commenced and /or ceased during the year,state:' (#row,32)
  graphic                                          (#row,81,24) box 5
  print 'DATE OF S''PORE PR'                (#row,84)
  graphic                                          (#row,105,24) box 5
  print 'DATE OF'                            (#row,110)
  add 1 to #row

  !print $ROB_ROC_Type                            (#row,2)
  print 'UEN'                             (#row, 2)
  graphic                                        (#row,31,25) box 4
  print 'DATE OF COMMENCEMENT'                   (#row,31)
  graphic                                        (#row,56,25) box 4
  print 'DATE OF *CESSATION/'                      (#row,58)
    Let #row = #row +1 
  print 'OVERSEAS POSTING'    (#row , 58)
   Let #row = #row - 1 
  print 'STATUS GRANTED(IF '                     (#row,84)
  print 'RENUNCIATION OF'                        (#row,106)

  add 1 to #row
  print $ROB_ROC_No                              (#row,2)
  print $Start_DT                                (#row,36 )
  Let #row = #row + 1
  print $End_DT                                  (#row,60)
  Let #row = #row - 1
  print 'GRANTED ON / AFTER '                      (#row,84)
  print 'S''PORE PR'                            (#row,109)
  ADD 1 TO #ROW
  let $Two_Years_Ago = '1 Jan ' || to_char(#Tax_Year -2) || ')'

  print $Two_Years_Ago                        (#row,86)
  add 1 to #row
  print $PermDt                               (#row,86)
  print $GPSG_REN_PR_DT                       (#row,109)

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 2 0 100
  graphic                                        (#row,1,{widthofpage}) box 2
  
alter-color-map name = 'white' value = (255, 255, 255)
get-color print-text-foreground = ($print-foreground)
set-color print-text-foreground = ('white')

print 'SECTION A  :  Details of monthly wages and actual contributions (See Explanatory Note 5)' (#row,1) BOLD

alter-color-map name = 'black' value = (0, 0, 0)
get-color print-text-foreground = ($print-foreground)
set-color print-text-foreground = ('black')

  add 1 to #row

  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 5
  graphic                                        (#row,1, 8) box 5
  print 'MTH'                                  (#row,2)
  graphic                                        (#row,9,20) box 5
  print 'ORDINARY WAGES'                               (#row,10)
  graphic                                        (#row,29,39) box 2
  print 'CPF CONTRIBUTION           '              (#row,38)
  graphic                                        (#row,68,22) box 5
  print 'ADDITIONAL WAGES'                            (#row,70)
  graphic                                        (#row,90,39) box 2
  print 'CPF CONTRIBUTION           '              (#row,98)
  add 1 to #row
  print '(OW)'                                    (#row,17)
  print '(AW)'                                    (#row,76) 
 ! print 'WAGES'                                  (#row,10)
  !print 'WAGES'                                  (#row,70)
  add 1 to #row
  graphic                                        (#row,29,19) box 2
  graphic                                        (#row,48,20) box 2
   print 'EMPLOYER'                               (#row,35)
   print 'EMPLOYEE'                               (#row,51)
  graphic                                        (#row,90,19) box 1
  graphic                                        (#row,109,20) box 1

  print 'EMPLOYER'                               (#row,92)
  print 'EMPLOYEE'                               (#row,116)

  let #Start_row = #row

  let #Count = 1
  while #Count <= 13
    add 1 to #Start_row
    graphic                                        (#Start_row,1, 8) box 1
    graphic                                        (#Start_row,9,20) box 1
    graphic                                        (#Start_row,29,19) box 1
    graphic                                        (#Start_row,48,20) box 1
    graphic                                        (#Start_row,68,22) box 1
    graphic                                        (#Start_row,90,19) box 1
    graphic                                        (#Start_row,109,20) box 1

    evaluate #Count
      when = 1
        print 'JAN'                                (#Start_row, 3)
        break
      when = 2
        print 'FEB'                                (#Start_row, 3)
        break
      when = 3
        print 'MAR'                                (#Start_row, 3)
        break
      when = 4
        print 'APR'                                (#Start_row, 3)
        break
      when = 5
        print 'MAY'                                (#Start_row, 3)
        break
      when = 6
        print 'JUN'                                (#Start_row, 3)
        break
      when = 7
        print 'JUL'                                (#Start_row, 3)
        break
      when = 8
        print 'AUG'                                (#Start_row, 3)
        break
      when = 9
        print 'SEP'                                (#Start_row, 3)
        break
      when = 10
        print 'OCT'                                (#Start_row, 3)
        break
      when = 11
        print 'NOV'                                (#Start_row, 3)
        break
      when = 12
        print 'DEC'                                (#Start_row, 3)
        break
      when = 13
        print 'TOTAL'                              (#Start_row, 2) bold
        break
    end-evaluate
    add 1 to #Count
  end-while

  do PopulateSectionA

  add 2 to #row
  let $Notice1 = 'Has approval been given by CPF Board to make full contributions(for SPR status granted on / after ' || $Two_Years_Ago || '?'
  print $Notice1                                 (#row,1)
  print 'Yes'                                    (#row, 112)
  graphic                                        (#row, 116,3) box 1
  print 'No'                                     (#row, 121)
  graphic                                        (#row, 124,3) box 1
  if $GPSG_CPF_CONT= 'Y'
     print 'X'                                    (#row, 113)
  else
    print 'X'                                     (#row, 125)
  end-if

  !add 2 to #row
  !print 'Has capping been applied:'      (#row, 1)
  !print 'Yes'                                    (#row, 97)
  !graphic                                        (#row, 101,3) box 1
  !print 'No'                                     (#row, 106)
  !graphic                                        (#row, 109,3) box 1
  !if $GPSG_CPF_CAP_APPLD = 'Y'
  !  print 'X'                                    (#row, 102)
  !else
  !  print 'X'                                    (#row, 110)
  !end-if

  add 2 to #row
  graphic                                        (#row,1,{widthofpage}) box 1 0 100
  graphic                                        (#row,1,{widthofpage}) box 1
  
  alter-color-map name = 'white' value = (255, 255, 255)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('white')
  
  print 'SECTION B  :  Excess/Voluntary contribution to CPF (See Explanatory Note 5)' (#row,1)  BOLD
  
  alter-color-map name = 'black' value = (0, 0, 0)
  get-color print-text-foreground = ($print-foreground)
  set-color print-text-foreground = ('black')
  
  graphic                                        (#row,1,{widthofpage}) box 4
  add 1 to #row
  print 'Employer''s Contribution :              $' (#row,3)
  print #GPSG_8S_CPF_VOL_ER                           (#row,25) edit 999,999,999.99
  add 1 to #row
  print 'Employee''s Contribution :             $' (#row,3)
  print #GPSG_8S_CPF_VOL_EE                           (#row,25) edit 999,999,999.99

  Add 3 to #row
  print 'Please complete Section C if you or your employee has claimed/will claim a refund of the excess CPF contribution from CPF Board' (#row,1)
  add 1 to #row
  graphic                                        (#row,1,{widthofpage}) box 2 0 100
  graphic                                        (#row,1,{widthofpage}) box 2
  
alter-color-map name = 'white' value = (255, 255, 255)
get-color print-text-foreground = ($print-foreground)
set-color print-text-foreground = ('white')
  
  let $SectionC= 'SECTION C :  Details of Refund claimed / to be claimed on excess CPF contributions made in ' || to_char(#Tax_Year) || ' (See Explanatory Note 5)'
  print $SectionC   (#row,1)  BOLD
  
alter-color-map name = 'black' value = (0, 0, 0)
get-color print-text-foreground = ($print-foreground)
set-color print-text-foreground = ('black')

  add 2 to #row
  graphic                                        (#row,1,{widthofpage}) box 1
  graphic                                        (#row,1,46) box 1
  print '*ORDINARY / ADDITIONAL WAGES'                       (#row,12)
  print 'AMOUNT OF REFUND'                       (#row,78)
  add 1 to #row
  graphic                                        (#row,1,16) box 3
  graphic                                        (#row,37,10) box 1
  graphic                                        (#row,47,41) box 1
  graphic                                        (#row,88,41) box 1
  print 'AMOUNT'                                 (#row,5)
  print 'PERIOD'                                 (#row,24)
  print 'DATE PAID'                                   (#row,37)
  print 'EMPLOYER'                               (#row,63)
  print 'EMPLOYEE'                               (#row,103)

  add 1 to #row
 graphic                                        (#row,37,10) box 2
  graphic                                        (#row,47,17) box 2
  graphic                                        (#row,64,14) box 2
  graphic                                        (#row,78,10) box 2
  graphic                                        (#row,88,17) box 2
  graphic                                        (#row,105,14) box 2
  graphic                                        (#row,119,10) box 2
   print 'CONTRIBUTION'                           (#row,49)
  print 'INTEREST'                               (#row,66)
  print '@ DATE'                                   (#row,80)
  print 'CONTRIBUTION'                           (#row,89)
  print '^ INTEREST'                               (#row,107)
  print '@ DATE'                                   (#row,120)
  add 1 to #row
  print '$'                                      (#row,8)
  print '$'                                      (#row,55)
  print '$'                                      (#row,70)

  print '$'                                      (#row,95)
  print '$'                                      (#row,113)

  do PopulateSectionC

  add 1 to #row
  print 'Remarks:'                               (#row,2) bold
  print &I.GPSG_8S_REMARKS                       (#row,12) wrap 100 2

  add 1 to #row
  print ' '                                      (#row, 1,276) fill underline

  add 3 to #row
  print ' '                                      (#row,5,100) fill underline
  print $Co_Tax_Contact                          (#row,10)
  print ' '                                      (#row,55,70) fill underline
  print $Co_Designation                          (#row, 93)
  print ' '                                      (#row,91,80) fill underline

  add 1 to #row
  print 'Name of authorised person making the declaration'  (#row,13)
  !print 'Signature / Date'                                  (#row,85)
  print 'Signature'                                         (#row,70)
  print 'Designation'                                        (#row,107)

  add 2 to #row
  print ' '                                      (#row,5,100) fill underline
  print ' '                                      (#row,55,70) fill underline
  print ' '                                      (#row,91,80) fill underline
   declare printer
     Font       = 5
     Point-Size = 6
  print $Co_Name                                 (#row,5)
   declare printer
     Font       = 5
     Point-Size = 8
  print $Co_Phone                                (#row,67)
  print $Prn_Date_Created                        (#row,101)
  
  add 1 to #row
  print 'Name of Employer'                       (#row,13)
  print 'Tel. No.'                               (#row,68)
  print 'Date'                                   (#row,107)
  add 2 to #row
  print '*         Delete where applicable'   (#row,1)
  add 1 to #row
  let $Text = '#         Indicate the year for which payment is made if it is other than for ' || -
              to_char(#Tax_Year) || '.  Where payment in respect of more than one ' || -
              'year was made in any month in ' || to_char(#Tax_Year) || ', ' || -
              'please provide a'
 ! print $Text                                    (#row,1)
 ! add 1 to #row
 ! print '           breakdown of the additional wages for each year and the relevant details of contributions thereon. '  (#row, 1)
 ! add 1 to #row
  graphic                                        (#row,1,3) box 1
  print '  Please cross box if applicable' (#row, 5)
  add 1 to #row
  print '@       Please indicate the date refund was received. If the refund has not been received, please indicate the date the claim was made or expected to be made as at the date of ' (#row,1)
  add 1 to #row
  print '           completion of this form.' (#row,1)
  add 1 to #row
  let $txt = '^'
  print $txt                                     (#row,1)
  let $txt = 'Interest from the refund of employee''s contribution is assessable under S10(1)(d) of the Income Tax Act (for example, if the date of refund is in the year ' || to_char(#Tax_Year) || ', interest will'
  print $txt                                     (#row,6)
  add 1 to #row
  let $txt = 'be taxable in the Year of Assessment ' || to_char(#Tax_Year + 1) || ').'
  print $txt                                     (#row,6)
  Let $txt = 'Employees are required to declare the interest amount in their income tax returns.' 
  print $txt                                     (#row,39) 
  add 1 to #row
  print 'There are penalties for failing to give a return or furnishing an incorrect or late return.' (#row,30) bold
  add 1 to #row
  let $txt = 'IR8S(1/' || to_char(#Tax_Year + 1) || ')'
  print $txt                                     (#row, 2) bold

  do Print-Comments

end-procedure
!***********************************************************************
!  Procedure: PopulateSectionC                                         *
!             Reads and prints child records from GPSG_IR8S_REFND      *
!***********************************************************************
begin-procedure PopulateSectionC

let #Count = 0

IF $Iras_form_type = 'A'

begin-select
R1.SEQ_NO
R1.GPSG_ADD_WAGES
R1.GPSG_ADD_FROM_DT
R1.GPSG_ADD_TO_DT
R1.GPSG_ADD_PAID_DT
R1.GPSG_REF_A_AMT_ER
R1.GPSG_REF_A_INT_ER
R1.GPSG_REF_DT_ER
R1.GPSG_REF_A_AMT_EE
R1.GPSG_REF_A_INT_EE
R1.GPSG_REF_DT_EE

  let #Count = #Count + 1
  let #row = #row + 1

  let #GPSG_ADD_WAGES = &R1.GPSG_ADD_WAGES
  let $GPSG_ADD_FROM_DT = &R1.GPSG_ADD_FROM_DT
  do Format-DateTime ($GPSG_ADD_FROM_DT, $GPSG_ADD_FROM_DT, {DEFDMY}, '', '')
  let $TO_DT = &R1.GPSG_ADD_TO_DT
  do Format-DateTime ($TO_DT, $TO_DT, {DEFDMY}, '', '')
  let $PAID_DT = &R1.GPSG_ADD_PAID_DT
  do Format-DateTime ($PAID_DT, $PAID_DT, {DEFDMY}, '', '')
  let #REFUND_AMT_ER = &R1.GPSG_REF_A_AMT_ER
  let #REFUND_INT_ER = &R1.GPSG_REF_A_INT_ER
  let $REFUND_DT_ER = &R1.GPSG_REF_DT_ER
  do Format-DateTime ($REFUND_DT_ER, $REFUND_DT_ER, {DEFDMY}, '', '')
  let #REFUND_AMT_EE = &R1.GPSG_REF_A_AMT_EE
  let #REFUND_INT_EE = &R1.GPSG_REF_A_INT_EE
  let $REFUND_DT_EE = &R1.GPSG_REF_DT_EE
  do Format-DateTime ($REFUND_DT_EE, $REFUND_DT_EE, {DEFDMY}, '', '')
    graphic                                        (#row,1,16) box 1
    graphic                                        (#row,17,20) box 1
    graphic                                        (#row,37,10) box 1  
    graphic                                        (#row,47,17) box 1
    graphic                                        (#row,64,14) box 1
    graphic                                        (#row,78,10) box 1
    graphic                                        (#row,88,17) box 1
    graphic                                        (#row,105,14) box 1
    graphic                                        (#row,119,10) box 1

  if #GPSG_ADD_WAGES <> 0
    print #GPSG_ADD_WAGES                        (#row, 2) edit 999,999,999,999.99
  end-if
  if $GPSG_ADD_FROM_DT <> '01/01/1900'
    print $GPSG_ADD_FROM_DT                      (#row,17)
    print ' -'                                   (#row,26)
  end-if
  if $TO_DT <> '01/01/1900'
    print $TO_DT                                 (#row,28)
  end-if
  if $PAID_DT <> '01/01/1900'
    print $PAID_DT                               (#row,38)
  end-if
  if #REFUND_AMT_ER <> 0
    print #REFUND_AMT_ER                         (#row,49) edit 999,999,999,999.99
  end-if
  if #REFUND_INT_ER <> 0
    print #REFUND_INT_ER                         (#row,63) edit 999,999,999,999.99
  end-if
  if $REFUND_DT_ER <> '01/01/1900'
    print $REFUND_DT_ER                          (#row,79)
  end-if
  if #REFUND_AMT_EE <> 0
    print #REFUND_AMT_EE                         (#row,90) edit 999,999,999,999.99
  end-if
  if #REFUND_INT_EE <> 0
    print #REFUND_INT_EE                         (#row,104) edit 999,999,999,999.99
  end-if
  if $REFUND_DT_EE <> '01/01/1900'
    print $REFUND_DT_EE                          (#row,120)
  end-if

  FROM PS_GPSG_IR8S_A_RFD R1
 WHERE R1.EMPLID = $EmplId
   AND R1.BALANCE_GRP_NUM = $Balance_Grp_Num
   AND R1.GPSG_CPY_TAX_REF = $Company_Tax_Ref
   AND R1.GPSG_TAX_YEAR = #Tax_Year
   AND R1.SEQNBR = (SELECT MAX(R1_S.SEQNBR) FROM PS_GPSG_IR8S_A_RFD R1_S
                    WHERE R1_S.EMPLID = R1.EMPLID
                    AND R1_S.BALANCE_GRP_NUM = R1.BALANCE_GRP_NUM
                    AND R1_S.GPSG_CPY_TAX_REF = R1.GPSG_CPY_TAX_REF
                    AND R1_S.GPSG_TAX_YEAR = R1.GPSG_TAX_YEAR)
ORDER BY R1.SEQ_NO
end-select

ELSE

begin-select
R.SEQ_NO
R.GPSG_ADD_WAGES
R.GPSG_ADD_FROM_DT
R.GPSG_ADD_TO_DT
R.GPSG_ADD_PAID_DT
R.GPSG_REF_AMT_ER
R.GPSG_REF_INT_ER
R.GPSG_REF_DT_ER
R.GPSG_REF_AMT_EE
R.GPSG_REF_INT_EE
R.GPSG_REF_DT_EE

  let #Count = #Count + 1
  let #row = #row + 1

  let #GPSG_ADD_WAGES = &R.GPSG_ADD_WAGES
  let $GPSG_ADD_FROM_DT = &R.GPSG_ADD_FROM_DT
  do Format-DateTime ($GPSG_ADD_FROM_DT, $GPSG_ADD_FROM_DT, {DEFDMY}, '', '')
  let $TO_DT = &R.GPSG_ADD_TO_DT
  do Format-DateTime ($TO_DT, $TO_DT, {DEFDMY}, '', '')
  let $PAID_DT = &R.GPSG_ADD_PAID_DT
  do Format-DateTime ($PAID_DT, $PAID_DT, {DEFDMY}, '', '')
  let #REFUND_AMT_ER = &R.GPSG_REF_AMT_ER
  let #REFUND_INT_ER = &R.GPSG_REF_INT_ER
  let $REFUND_DT_ER = &R.GPSG_REF_DT_ER
  do Format-DateTime ($REFUND_DT_ER, $REFUND_DT_ER, {DEFDMY}, '', '')
  let #REFUND_AMT_EE = &R.GPSG_REF_AMT_EE
  let #REFUND_INT_EE = &R.GPSG_REF_INT_EE
  let $REFUND_DT_EE = &R.GPSG_REF_DT_EE
  do Format-DateTime ($REFUND_DT_EE, $REFUND_DT_EE, {DEFDMY}, '', '')
    graphic                                        (#row,1,16) box 1
    graphic                                        (#row,17,20) box 1
    graphic                                        (#row,37,10) box 1  
    graphic                                        (#row,47,17) box 1
    graphic                                        (#row,64,14) box 1
    graphic                                        (#row,78,10) box 1
    graphic                                        (#row,88,17) box 1
    graphic                                        (#row,105,14) box 1
    graphic                                        (#row,119,10) box 1

  if #GPSG_ADD_WAGES <> 0
    print #GPSG_ADD_WAGES                        (#row, 2) edit 999,999,999,999.99
  end-if
  if $GPSG_ADD_FROM_DT <> '01/01/1900'
    print $GPSG_ADD_FROM_DT                      (#row,17)
    print ' -'                                   (#row,26)
  end-if
  if $TO_DT <> '01/01/1900'
    print $TO_DT                                 (#row,28)
  end-if
  if $PAID_DT <> '01/01/1900'
    print $PAID_DT                               (#row,38)
  end-if
  if #REFUND_AMT_ER <> 0
    print #REFUND_AMT_ER                         (#row,49) edit 999,999,999,999.99
  end-if
  if #REFUND_INT_ER <> 0
    print #REFUND_INT_ER                         (#row,63) edit 999,999,999,999.99
  end-if
  if $REFUND_DT_ER <> '01/01/1900'
    print $REFUND_DT_ER                          (#row,79)
  end-if
  if #REFUND_AMT_EE <> 0
    print #REFUND_AMT_EE                         (#row,90) edit 999,999,999,999.99
  end-if
  if #REFUND_INT_EE <> 0
    print #REFUND_INT_EE                         (#row,104) edit 999,999,999,999.99
  end-if
  if $REFUND_DT_EE <> '01/01/1900'
    print $REFUND_DT_EE                          (#row,120)
  end-if

  FROM PS_GPSG_IR8S_REFND R
 WHERE R.EMPLID = $EmplId
   AND R.BALANCE_GRP_NUM = $Balance_Grp_Num
   AND R.GPSG_CPY_TAX_REF = $Company_Tax_Ref
   AND R.GPSG_TAX_YEAR = #Tax_Year
ORDER BY R.SEQ_NO
end-select
end-if

  while #Count < 3
    add 1 to #row
    graphic                                        (#row,1,16) box 1
    graphic                                        (#row,17,20) box 1
    graphic                                        (#row,37,10) box 1
    graphic                                        (#row,47,17) box 1
    graphic                                        (#row,64,14) box 1
    graphic                                        (#row,78,10) box 1
    graphic                                        (#row,88,17) box 1
    graphic                                        (#row,105,14) box 1
    graphic                                        (#row,119,10) box 1
    let #Count = #Count + 1
  end-while

end-procedure


!***********************************************************************
!  Procedure: PopulateSectionA                                         *
!             Reads and prints child records from GPSG_IR8S_MONTH       *
!***********************************************************************
begin-procedure PopulateSectionA

IF $Iras_form_type = 'A'

begin-select

MN.GPSG_MONTHCD
MN.GPSG_A_ORD_WAGES
MN.GPSG_A_ER_ORD_CPF
MN.GPSG_A_EE_ORD_CPF
MN.GPSG_A_APP_FND_ORD
MN.GPSG_ADD_WAGES
MN.GPSG_A_ER_ADD_CPF
MN.GPSG_A_EE_ADD_CPF
MN.GPSG_A_APP_FND_ADD

  let #Month = to_number(&MN.GPSG_MONTHCD)
  if #Month = 99
    let #Month = 13 + #row
  else
    let #Month = #Month + #row
  end-if

  let #GPSG_ORD_WAGES = &MN.GPSG_A_ORD_WAGES
  let #GPSG_ER_ORD_CPF = &MN.GPSG_A_ER_ORD_CPF
  let #GPSG_EE_ORD_CPF = &MN.GPSG_A_EE_ORD_CPF
  let #GPSG_APP_FUND_ORD = &MN.GPSG_A_APP_FND_ORD
  let #GPSG_ADD_WAGES = &MN.GPSG_ADD_WAGES
  let #GPSG_ER_ADD_CPF = &MN.GPSG_A_ER_ADD_CPF
  let #GPSG_EE_ADD_CPF = &MN.GPSG_A_EE_ADD_CPF
  let #GPSG_APP_FUND_ADD = &MN.GPSG_A_APP_FND_ADD

  if #GPSG_ORD_WAGES <> 0
    print #GPSG_ORD_WAGES                                (#Month,14) edit 999,999,999,999.99
  end-if
  if #GPSG_ER_ORD_CPF <> 0
    print #GPSG_ER_ORD_CPF                               (#Month,27) edit 999,999,999,999.99
  end-if
  if #GPSG_EE_ORD_CPF <> 0
    print #GPSG_EE_ORD_CPF                               (#Month,40) edit 999,999,999,999.99
  end-if
  if #GPSG_APP_FUND_ORD <> 0
    print #GPSG_APP_FUND_ORD                             (#Month,53) edit 999,999,999,999.99
  end-if
  if #GPSG_ADD_WAGES <> 0
    print #GPSG_ADD_WAGES                                (#Month,75) edit 999,999,999,999.99
  end-if
  if #GPSG_ER_ADD_CPF <> 0
    print #GPSG_ER_ADD_CPF                               (#Month,88) edit 999,999,999,999.99
  end-if
  if #GPSG_EE_ADD_CPF <> 0
    print #GPSG_EE_ADD_CPF                               (#Month,103) edit 999,999,999,999.99
  end-if
  if #GPSG_APP_FUND_ADD <> 0
    print #GPSG_APP_FUND_ADD                             (#Month,114) edit 999,999,999,999.99
  end-if

  FROM PS_GPSG_IR8S_AM_MT MN
 WHERE MN.EMPLID = $EmplId
   AND MN.BALANCE_GRP_NUM = $Balance_Grp_Num
   AND MN.GPSG_CPY_TAX_REF = $Company_Tax_Ref
   AND MN.GPSG_TAX_YEAR = #Tax_Year
   AND MN.SEQNBR = (SELECT MAX(MN_S.SEQNBR) FROM PS_GPSG_IR8S_AM_MT MN_S
                    WHERE MN_S.EMPLID = MN.EMPLID
                    AND MN_S.BALANCE_GRP_NUM = MN.BALANCE_GRP_NUM
                    AND MN_S.GPSG_CPY_TAX_REF = MN.GPSG_CPY_TAX_REF
                    AND MN_S.GPSG_TAX_YEAR = MN.GPSG_TAX_YEAR)
end-select


ELSE

begin-select

GPSG_MONTHCD
GPSG_ORD_WAGES
GPSG_ER_ORD_CPF
GPSG_EE_ORD_CPF
GPSG_APP_FUND_ORD
GPSG_ADD_WAGES
GPSG_ER_ADD_CPF
GPSG_EE_ADD_CPF
GPSG_APP_FUND_ADD

  let #Month = to_number(&GPSG_MONTHCD)
  if #Month = 99
    let #Month = 13 + #row
  else
    let #Month = #Month + #row
  end-if

  let #GPSG_ORD_WAGES = &GPSG_ORD_WAGES
  let #GPSG_ER_ORD_CPF = &GPSG_ER_ORD_CPF
  let #GPSG_EE_ORD_CPF = &GPSG_EE_ORD_CPF
  let #GPSG_APP_FUND_ORD = &GPSG_APP_FUND_ORD
  let #GPSG_ADD_WAGES = &GPSG_ADD_WAGES
  let #GPSG_ER_ADD_CPF = &GPSG_ER_ADD_CPF
  let #GPSG_EE_ADD_CPF = &GPSG_EE_ADD_CPF
  let #GPSG_APP_FUND_ADD = &GPSG_APP_FUND_ADD

  if #GPSG_ORD_WAGES <> 0
    print #GPSG_ORD_WAGES                                (#Month,14) edit 999,999,999,999.99
  end-if
  if #GPSG_ER_ORD_CPF <> 0
    print #GPSG_ER_ORD_CPF                               (#Month,27) edit 999,999,999,999.99
  end-if
  if #GPSG_EE_ORD_CPF <> 0
    print #GPSG_EE_ORD_CPF                               (#Month,40) edit 999,999,999,999.99
  end-if
  if #GPSG_APP_FUND_ORD <> 0
    print #GPSG_APP_FUND_ORD                             (#Month,53) edit 999,999,999,999.99
  end-if
  if #GPSG_ADD_WAGES <> 0
    print #GPSG_ADD_WAGES                                (#Month,75) edit 999,999,999,999.99
  end-if
  if #GPSG_ER_ADD_CPF <> 0
    print #GPSG_ER_ADD_CPF                               (#Month,88) edit 999,999,999,999.99
  end-if
  if #GPSG_EE_ADD_CPF <> 0
    print #GPSG_EE_ADD_CPF                               (#Month,103) edit 999,999,999,999.99
  end-if
  if #GPSG_APP_FUND_ADD <> 0
    print #GPSG_APP_FUND_ADD                             (#Month,114) edit 999,999,999,999.99
  end-if

  FROM [$iras_form_where2]
 WHERE EMPLID = $EmplId
   AND BALANCE_GRP_NUM = $Balance_Grp_Num
   AND GPSG_CPY_TAX_REF = $Company_Tax_Ref
   AND GPSG_TAX_YEAR = #Tax_Year
end-select
END-IF

  add 13 to #row

end-procedure

!***********************************************************************
!  Procedure: Print_Dashed_Underline                                   *
!                                                                      *
!***********************************************************************
begin-procedure Print_Dashed_Underline

  let #Count = {NumberColumn}

  while #Count < 130
  print '  '             (#row,#Count) underline
  let #Count = #Count + 2
  end-while

end-procedure

!***********************************************************************
!  Procedure: Update-Employee-Rec                                      *
!             Updated the Issue Status and Date Issued fields for the  *
!             employee.                                                *
!***********************************************************************
begin-procedure Update-Employee-Rec
let $irasAlias = ''
 do iras_form_where_clause
   let $sql-statement = 'GPSGIR01.SQR,Update-Record,[$iras_form_where]'

begin-SQL on-error=SQL-Error

UPDATE [$iras_form_where]

   SET GPSG_8A_STATUS = 'Y',
       GPSG_ISSUE_DATE = $Date_Created

 WHERE EMPLID = $EmplId
   AND BALANCE_GRP_NUM = $Balance_Grp_Num
   AND GPSG_CPY_TAX_REF = $Company_Tax_Ref
   AND GPSG_TAX_YEAR = #Tax_Year
    [$iras_form_cond]

end-SQL
end-Procedure
!
Begin-Procedure Print-Comments
  graphic () font 10 12
  NEW-PAGE
  
  let #CurYear = #Tax_Year
  move #CurYear to $CurYear 9999
  let #NextYear = #Tax_Year + 1
  move #NextYear to $NextYear 9999
  let #PrevYear = #Tax_Year - 1
  move #PrevYear to $PrevYear 9999
  let #OldYear = #Tax_Year - 2
  move #OldYear to $OldYear 9999
  
  
  Let #Row = 1
    add 4 to #row
  print 'EXPLANATORY NOTES FOR COMPLETION OF FORM IR8S FOR THE YEAR ENDED 31 DEC' (#row,10)  BOLD
  print $CurYear (#row,130)
  add 3 to #row
!  graphic                                        (#row,1,{widthofpage}) box 66 0 0
  graphic () font 5 10
  
  let $Varline1 = 'CPF contributions made in ' || $CurYear || ' by you and /or your '
  let $Varline1a = '1 Mar ' || $NextYear
  let $Varline1b = 'he files his Income Tax Return for the Year of Assessment ' || $NextYear || '.'
  let $Varline2 = 'Complete this Section if CPF contributions made in ' || $CurYear ||
                  ' by you and /or your employee:'
  
  let $Varline4c = 'For example, if the date of refund is in the year ' || $CurYear || ',interest will be taxable in the Year of Assessment ' || $NextYear || '.'
  let $Varline2a = '31 Dec ' || $CurYear
  let $Varline2b = rtrim( '2.    For employers participating in AIS, all salary data for the year ended',' ')
  let #Varline2b = length ($Varline2b) + 3
  
  

 print '1.    You must prepare' (#row,10)
  print 'Form IR8S if there is excess' (#row,32) bold
  print $Varline1 (#row,+1)  
  add 1 to #row
  print 'employee and give the form to your employee by' (#row,14)
  print  $Varline1a (#row,+1) bold
  print '. Your employee must attach the Form IR8S when' (#row,+1)
  add 1 to #row
  print $Varline1b (#row,14)
  add 2 to #row  
  
  print $Varline2b          (#row,10)
  print $Varline2a     (#row,#Varline2b) bold
  print ' should be submitted' (#row,+1)
  add 1 to #row
  print 'electronically to IRAS by' (#row,14)
  print  $Varline1a (#row,+1) bold
  print '. You do not need to prepare a copy of the Form IR8S for your' (#row,+1)
  add 1 to #row
  print 'employees. However, you may wish to provide your employees with a separate statement for their record.' (#row,14)
  add 1 to #row
  print 'Please include in the statement that the information is not required to be reported in the employees'' tax form' (#row,14)
  add 1 to #row
  print 'as the information will be automatically included in their income tax assessments. Please ensure that' (#row,14)
  add 1 to #row
  print 'employment income information submitted electronically to IRAS is correct and complete.' (#row,14)
  
  add 2 to #row
  print '3.    For tax treatment of excess/voluntary contributions to CPF by employer, please refer to Explanatory Note 11 d)' (#row,10)
  add 1 to #row
  print '7 on the Completion of Form IR8A and Appendix 8A. State only the CPF contributions on wages in respect of' (#row,14)
  add 1 to #row
  print 'Singapore employment as' (#row,14)
  print ' no' (#row,+1) bold
  print 'deduction can be allowed in respect of the employee''s contribution on his wages' (#row,+1)
  add 1 to #row
  print 'in respect of non-Singapore employment. Similarly, employer''s CPF contributions on the employee''s wages in' (#row,14)
  add 1 to #row
  print 'respect of non-Singapore employment are' (#row,14)
  print 'not' (#row,+1) bold
  print 'taxable in Singapore.' (#row,+1)
  add 2 to #row

  
  print '4.    Ordinary Wages (OW) and Additional Wages (AW) in the Form IR8S have the same meaning as in the CPF ' (#row,10)
  add 1 to #row
  print ' Act. You may refer to CPF Board''s website www.cpf.gov.sg for more information: ' (#row,14)
  add 2 to #row
  print 'a)       OW are wages due or granted wholly and exclusively in respect of an employee''s employment in that' (#row,14)
  add 1 to #row
  print 'month and payable before the due date for payment of CPF contributions for that month. Examples of' (#row,20)
  add 1 to #row
  print 'OW are basic salary, overtime pay and monthly meal allowance.' (#row,20)
  add 2 to #row
  print 'b)       AW are any remuneration other than OW (excludes directors'' fee and value of benefits-in-kind for' (#row,14)
  add 1 to #row
  print 'which'(#row,20)
  print ' no' (#row,+1) bold
  print 'CPF contribution is required). Examples of AW are annual bonus, leave pay and' (#row,+1)
  add 1 to #row
  print ' quarterly sales incentive.' (#row,20)
  add 2 to #row  
  

  print '5.    Please note the following when completing the Form IR8S:' (#row,10)
  add 2 to #row
  print 'Section A' (#row,14) bold underline
  add 2 to #row
  print $Varline2 (#row,14)
  add 2 to #row
  print 'a)       Are'(#row,14)
  print 'more than'(#row,24) underline
  print 'the compulsory contributions under the CPF Act;' (#row,+1)
  add 1 to #row
  print 'Example:' (#row,20)
  add 1 to #row
  print 'The compulsory employer''s CPF contribution rate of an employee who is above 50 to 55 years old is ' (#row,20)
  add 1 to #row
  print '17%. If the employer contributes more than the compulsory CPF contribution rate for the employee, ' (#row,20)
  add 1 to #row
  print 'the excess portion (less amount refunded or to be refunded) is taxable.' (#row,20)
  add 2 to #row
  print 'You may refer to CPF Board''s website at www.cpf.gov.sg for the contribution rates of the different age' (#row,20)
  add 1 to #row
  print 'groups.' (#row,20)
  add 2 to #row
  print 'b)       On monthly OW is more than $6000;'  (#row,14)
  add 2 to #row
  print 'c)       On total AW are more than the difference between $102,000 and OW subject to' (#row,14)
  add 1 to #row
  print 'compulsory CPF contributions; or '  (#row,20)
  add 2 to #row
  print 'd)       Are' (#row,14)
  print 'not compulsory' (#row,24) underline
  print 'under the CPF Act.' (#row,+1)
  add 1 to #row
  print 'Example:' (#row,20)
  add 1 to #row
  print 'Foreigners are not required to make CPF contribution. The CPF contributions made by employer for' (#row,20)
  add 1 to #row
  print 'foreign employees or on director''s fees are considered as voluntary contributions.' (#row,20)
  add 2 to #row
  
  print 'Section B' (#row,14) bold underline
  add 2 to #row
  print 'Enter the amount of excess/voluntary CPF contributions made by you and/or your employee under employer''s '  (#row,14)
  add 1 to #row
  print 'contribution and employee''s contribution respectively.' (#row,14)
  add 2 to #row
  
  NEW-PAGE
  Let #row = 5
  print 'Section C' (#row,14) bold underline
  add 2 to #row
  print 'Complete this section if you and/or your employee claimed or will claim a refund of the excess contributions' (#row,14)
  add 1 to #row
  print 'from CPF Board. Interest from the refund of employee''s contribution is taxable in the hands of the employee.' (#row,14)
  add 1 to #row
  print $Varline4c (#row,14)
  
  add 2 to #row
  graphic (#row,14,26) box 1
  print 'Item' (#row,16) bold
  graphic (#row,40,76) box 1
  print 'What does it refer to' (#row,42) bold
  add 1 to #row
  graphic (#row,14,26) box 1
   print 'Amount' (#row,16) 
   graphic (#row,40,76) box 1
  print 'OW and/or AW for which CPF contributions are in excess of the statutory limit' (#row,42) 
  add 1 to #row
  graphic (#row,14,26) box 1
   print 'Period' (#row,16) 
   graphic (#row,40,76) box 1
  print 'The calendar year in which the amount relates to' (#row,42) 
  add 1 to #row
  graphic (#row,14,26) box 1
   print 'Date Paid' (#row,16)
   graphic (#row,40,76) box 1
  print 'The date when the excess CPF contribution is paid' (#row,42) 
  
  add 2 to #row
  print 'Please refer to www.iras.gov.sg>Individuals>Locals>Deductions for Individuals (Reliefs, Expenses,' (#row,16)
  add 1 to #row
  print 'Donations)>General Reliefs/Rebates Available to All Taxpayers>CPF/provident fund relief: For employees only*' (#row,16)
  add 1 to #row
  print 'for examples on how to determine the taxable amount of the excess employer’s CPF contributions on OW and' (#row,16)
  add 1 to #row
  print 'AW.' (#row,16)
End-Procedure

!************************************************************************
!************************************************************************
! Routines and code below have been added to enable ePay Implementation *
!************************************************************************
!************************************************************************
!
!***********************************************************************
! For ePay Purposes: Online Payslip                                    *
! Procedure : GP-ePay-Init                                             *
! Initialize variables that we'll use for ePay processing              *
!***********************************************************************
begin-procedure GP-ePay-Init
   let $sql-statement = 'GPSGPY01.sqr, GP-ePay-Init '

  Do Check-ePay-installed ($ePay_Installed)

    If $ePay_Installed = 'Y'
     Move 'GPSGIR01' to $ReportID

      let #eV4 =  To_number($prcs_process_instance)

      !* have the Output Working Directory from the Process parameters table
      do Get-Output-Wrk-Directory(#eV4, $PRCSOUTPUTDIR, $PRCSNAME)

      !* have the URL id from the Payslip option table
      do Get-ePay-URLid ('SGP', $eV18)

      !* have the Calendar Group id from the Calendar Group table
      !If employees have been specified
      If $Empls_Exist = 'Y'

Begin-SELECT

A1.CAL_RUN_ID

      let $Cal_Run_ID = &A1.CAL_RUN_ID

   FROM PS_GP_CAL_RUN A1
  WHERE A1.RUN_FINALIZED_TS = (SELECT MAX(A2.RUN_FINALIZED_TS)
                                 FROM PS_GP_CAL_RUN A2
                                    , PS_GP_PYE_SEG_STAT B2
                                    , PS_GPSG_RC_IRASEMP RCEMP
                                WHERE A2.RUN_FINALIZED_IND = 'Y'
                                  AND A2.COUNTRY = 'SGP'
                                  AND RCEMP.OPRID = $prcs_oprid
                                  AND RCEMP.RUN_CNTL_ID = $prcs_run_cntl_id
                                  AND A2.CAL_RUN_ID = B2.CAL_RUN_ID
                                  AND B2.EMPLID = RCEMP.EMPLID
                                  AND A2.RUN_FINALIZED_TS <= $Tax_Yr_End_DtTm)

End-SELECT

      Else
        !If pay group has been specified
        If isnull($Paygroup) = 0

Begin-SELECT

A3.CAL_RUN_ID

        let $Cal_Run_ID = &A3.CAL_RUN_ID

     FROM PS_GP_CAL_RUN A3
    WHERE A3.RUN_FINALIZED_TS = (SELECT MAX(A4.RUN_FINALIZED_TS)
                                   FROM PS_GP_CAL_RUN A4, PS_GP_PYE_SEG_STAT B4
                                  WHERE A4.RUN_FINALIZED_IND = 'Y'
                                    AND A4.COUNTRY = 'SGP'
                                    AND B4.GP_PAYGROUP = $Paygroup
                                    AND A4.CAL_RUN_ID = B4.CAL_RUN_ID
                                    AND A4.RUN_FINALIZED_TS <= $Tax_Yr_End_DtTm)

End-SELECT

        !If neither employees nor pay group has been specified
        Else

Begin-SELECT

A5.CAL_RUN_ID

        let $Cal_Run_ID = &A5.CAL_RUN_ID

     FROM PS_GP_CAL_RUN A5
    WHERE A5.RUN_FINALIZED_TS = (SELECT MAX(A6.RUN_FINALIZED_TS)
                                   FROM PS_GP_CAL_RUN A6, PS_GP_PYE_SEG_STAT B6
                                  WHERE A6.RUN_FINALIZED_IND = 'Y'
                                    AND A6.COUNTRY = 'SGP'
                                    AND A6.CAL_RUN_ID = B6.CAL_RUN_ID
                                    AND A6.RUN_FINALIZED_TS <= $Tax_Yr_End_DtTm
                                    AND B6.GP_PAYGROUP IN (SELECT PG.GP_PAYGROUP
                                                             FROM PS_GP_PYGRP_SGPSG PG
                                                            WHERE PG.GPSG_CPY_TAX_REF = $Company_Tax_Ref
                                                              AND PG.EFFDT = (SELECT MAX(PG2.EFFDT)
                                                                                FROM PS_GP_PYGRP_SGPSG PG2
                                                                               WHERE PG2.GP_PAYGROUP = PG.GP_PAYGROUP
                                                                                 AND PG2.EFFDT <= $Tax_Yr_End)))

End-SELECT

        End-If
      End-If

      !* Global ePay variable settings used in GP-ePay procedures in this SQR
      let $eV1 = $prcs_oprid
      let $eV2 = $prcs_run_cntl_id
      let $eV3 = $ReportID          !used for proc name instaed of prcsname from output wrk dir

      ! when we do not pass a control file
       Let $GP_PSLP_CTLFILE = ' '
       Let $FILELAYOUT = ' '

    End-If

end-procedure !GP-ePay-Init

!***********************************************************************
! For ePay Purposes: Online Payslip                                    *
! Procedure : GP-ePay-Guide                                            *
! Insert one row per payslip into the temporary guide table for ePay   *
!***********************************************************************

begin-procedure GP-ePay-Guide

   let $sql-statement = 'GPSGIR01.sqr,GP-ePay-Guide'

 If $ePay_Installed = 'Y'

   ! SGP Payslip does not exclude by run type. We can ignore this procedure

   !do Get-RUN-TYPE  ! not an ePay procedure

   Let $strEmplRcd = to_char(#Empl_Rcd)
   let $strEmplRcd  = rtrim($strEmplRcd,' ')
   let $strEmplRcd  = ltrim($strEmplRcd,' ')

   let $eV5  = rtrim($Emplid, ' ')
   let $eV5  = ltrim($eV5, ' ')
   let $eV6  = rtrim($Cal_Run_ID,' ')
   let $eV6  = ltrim($eV6,' ')
   let $eV7  = 'GPSGP'
   let $eV8  = to_char(#Tax_Year) || '-' || $strEmplRcd || '-' || $Balance_Grp_Num ! gp epay payslip id
   let $eV9  = $Tax_Yr_End
   let $eV10 = $Tax_Yr_End
   let $eV11  = $Tax_Yr_Start
   let #eV12 = ' '                                           ! we are not populating the net pay
   let $eV13 = 'IR8E - ' || to_char(#Tax_Year)
   let $eV14 = ' '                                           ! we are not populating the run type
   let $eV15 = 'ORIG'                                        ! payslip status ORIGINAL
   let $eV16 = $eV5 || '_' ||$eV7 || '_' ||$eV8 || '.pdf'    ! sysfilename of the payslip pdf
   let $eV17 = ' '                                           ! gpsspslp.sqc decides user file name
   let #eV19 = #page-count                                   ! begin page number of payslip in output report
   let #eV20 = #page-count                                   ! end page number of payslip in output report

   !Remove existing IR8E data for the same tax year

   let #Second_Hyphen_Pos = 0
   let $Data_Existing = 'N'
   let $Gde_Cal_Run_ID = ''
   let $Gde_Pslip_ID = ''

Begin-SELECT

GDE1.CAL_RUN_ID
GDE1.GP_PSLP_ID

      Find '-' In &GDE1.GP_PSLP_ID 6 #Second_Hyphen_Pos

      If substr(&GDE1.GP_PSLP_ID,#Second_Hyphen_Pos + 2,3) = $Balance_Grp_Num
        let $Data_Existing = 'Y'
        let $Gde_Cal_Run_ID = &GDE1.CAL_RUN_ID
        let $Gde_Pslip_ID = &GDE1.GP_PSLP_ID
      End-If

   FROM PS_GP_SS_PSLP_GDE GDE1
  WHERE GDE1.EMPLID = $eV5
    AND GDE1.DESCR = $eV13

End-SELECT

   If $Data_Existing = 'Y'

Begin-SQL
DELETE 
   FROM PS_GP_SS_PSLP_GDE GDE2
  WHERE GDE2.EMPLID = $eV5
    AND GDE2.CAL_RUN_ID = $Gde_Cal_Run_ID
    AND GDE2.GP_PSLP_SRCPRODUCT = 'GPSGP'
    AND GDE2.GP_PSLP_ID = $Gde_Pslip_ID
End-SQL

   End-If

   !Input:OPRID, RUN_CNTL_ID, PROCNAME, DATAINST, EMPLID, CAL_RUN_ID, SRCPRODUCT,
   !GP_PSLP_ID,PYMT_DT,PRD_END_DT,PRD_BGN_DT,#NET_PAY,Payslip DESCR,RUN_TYPE,
   !PSLP_STATUS,ATTACHSYSFILENAME, ATTACHUSERFILE,FILEURLID, BGNPGNBR,ENDPGNBR

    do Insert-ePay-Guide-Data($eV1,$eV2,$eV3,#eV4,$eV5,$eV6,$eV7,$eV8,$eV9,$eV10,$eV11,#eV12,$eV13,$eV14,$eV15,$eV16,$eV17,$eV18,#eV19,#eV20)

 End-If

end-procedure ! GP-ePay-Guide

!***********************************************************************
! For ePay Purposes: Online Payslip                                    *
! Procedure : GP-ePay-Control                                          *
! Insert one row per report into the epay run control table            *
!***********************************************************************
begin-procedure GP-ePay-Control

let $sql-statement = 'GPSGPY01.sqr,GP-ePay-Control '

 If $ePay_Installed = 'Y'
   Let $rptid = lower($ReportID)
   let $eCV7  = $rptid || '_' || $prcs_process_instance || '.PDF'
   let $eCV8  = rtrim($PRCSOUTPUTDIR, ' ')

   ! Input:OPRID,RUN_CNTL_ID,PROCNAME,SPLIT_IND,ATCH_IND,CTLFILE,SOURCEFILE,
   ! SOURCELOC,WORKINGLOC,FILELAYOUT,DATAINST,FILEURLID,CLEANUP

do Insert-ePay-RunControl($eV1,$eV2,$eV3,'Y', 'Y', $GP_PSLP_CTLFILE, $eCV7,$eCV8,' ',$FILELAYOUT,#eV4,$eV18,'Y')

 End-If

end-procedure !GP-ePay-Control


!***********************************************************************
! Procedure: get-citizenship-country                                   !
!            select citizenship country for emplid and translate
!            to nationality 
!***********************************************************************
begin-procedure get-citizenship-country


  let $Cntry = ''
  let $Nationality = ''

  begin-SELECT
CZN.CITIZENSHIP_STATUS
     if &CZN.CITIZENSHIP_STATUS = '1' or &CZN.CITIZENSHIP_STATUS = '2' or &CZN.CITIZENSHIP_STATUS = '5'
        let $Cntry = 'SGP'
     end-if

   FROM PS_CITIZENSHIP CZN
  WHERE CZN.EMPLID = $EMPLID
    AND CZN.DEPENDENT_ID = ' '
    AND CZN.COUNTRY = 'SGP'
    AND CZN.CITIZENSHIP_STATUS <> ' '
  end-SELECT

  if $Cntry = ''
     begin-SELECT
CZN1.COUNTRY
        let $Cntry = &CZN1.COUNTRY

      FROM PS_CITIZENSHIP CZN1
     WHERE CZN1.EMPLID       = $EMPLID
       AND CZN1.DEPENDENT_ID = ' '
       AND CZN1.COUNTRY     <> 'SGP'
       AND CZN1.CITIZENSHIP_STATUS <> ' '
     end-SELECT
  end-if

  if $Cntry = ''
     begin-SELECT
CZP.COUNTRY_PASSPORT
CZP.DT_ISSUED
        let $Cntry = &CZP.COUNTRY_PASSPORT

  FROM PS_CITIZEN_PSSPRT CZP
 WHERE CZP.EMPLID = $EMPLID
   AND CZP.DEPENDENT_ID = ' '
 ORDER BY CZP.DT_ISSUED
     end-SELECT
  end-if

 evaluate $Cntry
     when = 'SGP' ! Singapore '301'
        let $Nationality    = 'SINGAPORE CITIZEN'
     when = 'IDN' ! Indonesia '303'
        let $Nationality    = 'INDONESIAN'
     when = 'MYS' ! Malaysia '304'
        let $Nationality    = 'MALAYSIAN'
     when = 'PHL' ! Phillipines '305'
        let $Nationality    = 'FILIPINO'
     when = 'THA' ! Thailand '306'
        let $Nationality    = 'THAI'
     when = 'JPN' ! Japan '331'
        let $Nationality    = 'JAPANESE'
     when = 'TWN' !  '334'
        let $Nationality    = 'TAIWANESE'
     when = 'CHN' ! China 336
        let $Nationality    = 'CHINESE'
     when = 'HKG' ! Hong Kong '336'
        let $Nationality    = 'CHINESE'
     when = 'GBR' ! UK '110'
        let $Nationality    = 'BRITISH'
     when = 'USA' ! USA '503'
        let $Nationality    = 'AMERICAN'
     when = 'AUS' ! Australia 701
        let $Nationality    = 'AUSTRALIAN'
     when = 'NZL' ! New Zealand '705'
        let $Nationality    = 'NEW ZEALANDER'
     when = 'BEL' ! Belgium '101'
        let $Nationality    = 'BELGIAN'
     when = 'DNK' ! Denmark '102'
        let $Nationality    = 'DANISH'
     when = 'FRA' ! France 103
        let $Nationality    = 'FRENCH'
     when = 'DEU' ! Germany 104
        let $Nationality    = 'GERMAN'
     when = 'GRC' ! Greece 105
        let $Nationality    = 'GREEK'
     when = 'IRL' ! Ireland 106
        let $Nationality    = 'IRISH'
     when = 'ITA' ! Italy 107
        let $Nationality    = 'ITALIAN'
     when = 'LUX' ! Luxembourg 108
        let $Nationality    = 'LUXEMBOURG'
     when = 'NLD' ! Netherlands 109
        let $Nationality    = 'NETHERLANDS'
     when = 'PRT' ! Portugal 111
        let $Nationality    = 'PORTUGUESE'
     when = 'ESP' ! spain 112
        let $Nationality    = 'SPANISH'
     when = 'AUT' ! Austria 131
        let $Nationality    = 'AUSTRIAN'
     when = 'FIN' ! finland 132
        let $Nationality    = 'FINNISH'
     when = 'ISL' ! Iceland  133
        let $Nationality    = 'ICELAND'
     when = 'NOR' ! Norway 134
        let $Nationality    = 'NORWEGIAN'
     when = 'SJM' ! Svalbard 135
        let $Nationality    = 'SVALBARD JAN MAYEN'
     when = 'SWE' ! Sweden 136
        let $Nationality    = 'SWEDISH'
     when = 'CHE' ! Switzerland 137
        let $Nationality    = 'SWISS'
     when = 'LIE' ! Liechstenstein 138
        let $Nationality    = 'LIECHTENSTEIN'
     when = 'BVT' ! Bouvet 139
        let $Nationality    = 'BOUVET ISLAND'
     when = 'FRO' ! faeroe 141
        let $Nationality    = 'FAEROE ISLANDS'
     when = 'GRL' ! Greenland 142
        let $Nationality    = 'GREENLAND'
     when = 'MCO' ! Monaco 143
        let $Nationality    = 'MONACO'
     when = 'SMR' ! San Marino 144
        let $Nationality    = 'SAN MARINO'
     when = 'VAT' ! Vatican 145
        let $Nationality    = 'VATICAN CITY STATE'
     when = 'TUR' ! Turkey 152
        let $Nationality    = 'TURK'
     when = 'AND' ! Andorra 153
        let $Nationality    = 'ANDORRAN'
     when = 'GIB' ! Gibraltar 154
        let $Nationality    = 'GIBRALTAR'
     when = 'MLT' ! Malta 155
        let $Nationality    = 'MALTESE'
     when = 'ALB' ! Albania 201
        let $Nationality    = 'ALBANIAN'
     when = 'BGR' ! Bulgaria 202
        let $Nationality    = 'BULGARIAN'
     when = 'CZE' ! Czech Republic 234
        let $Nationality    = 'CZECH'
     when = 'HUN' ! Hungary 205
        let $Nationality    = 'HUNGARIAN'
     when = 'POL' ! Poland 206
        let $Nationality    = 'POLISH'
     when = 'ROU' ! Romania 207
        let $Nationality    = 'ROMANIAN'
     when = 'YUG' ! Yugoslavia 209
        let $Nationality    = 'YUGOSLAV'
     when = 'UKR' ! Ukrainia 212
        let $Nationality    = 'UKRAINIAN'
     when = 'EST' ! Estonia 213
        let $Nationality    = 'ESTONIAN'
     when = 'LVA' ! Latvia 214
        let $Nationality    = 'LATVIAN'
     when = 'LTU' ! Lithuania 215
        let $Nationality    = 'LITHUANIA'
     when = 'GEO' ! Georgia 216
        let $Nationality    = 'GEORGIA'
     when = 'ARM' ! Armenia 217
        let $Nationality    = 'ARMENIAN'
     when = 'AZE' ! Azerbaijan  218
        let $Nationality    = 'AZERBAIJANI'
     when = 'KGZ' ! Kyrgyzstan 219
        let $Nationality    = 'KIRGHIZ'
     when = 'KAZ' ! Kazakhstan 221
        let $Nationality    = 'KAZAKH'
     when = 'MDA' ! Moldova 222
        let $Nationality    = 'MOLDOVIAN'
     when = 'RUS' ! Russia 223
        let $Nationality    = 'RUSSIAN'
     when = 'TJK' ! Tajikistan 224
        let $Nationality    = 'TADZHIK'
     when = 'TKM' ! Turkmenistan 225
        let $Nationality    = 'TURKMEN'
     when = 'UZB' ! Uzbekistan 226
        let $Nationality    = 'UZBEK'
     when = 'HRV' ! Croatia 232
        let $Nationality    = 'CROATIAN'
     when = 'SVN' ! Slovenia 233
        let $Nationality    = 'SLOVENIAN'
     when = 'SVK' ! Slovakia  235
        let $Nationality    = 'SLOVAK'
     when = 'IDN' ! Indonesia 303
        let $Nationality    = 'INDONESIAN'
     when = 'BRN' ! Brunei 302
        let $Nationality    = 'BRUNEIAN'
     when = 'TLS' ! East Timor 307
        let $Nationality    = 'TIMORENSE'
     when = 'MMR' ! Myanmar 311
        let $Nationality    = 'MYANMAR'
     when = 'LAO' ! Lao People's Democratic Rep 313
        let $Nationality    = 'LAOTIAN'
     when = 'VNM' ! Viet Nam 314
        let $Nationality    = 'VIETNAMESE'
     when = 'HKG' ! Hong Kong 332
        let $Nationality    = 'HONG KONG'
     when = 'KOR' ! Korea, Republic of 333
        let $Nationality    = 'KOREAN, SOUTH'
     when = 'MAC' ! Macao 335
        let $Nationality    = 'MACAO'
     when = 'PRK' ! North Korea 337
        let $Nationality    = 'KOREAN, NORTH'
     when = 'MNG' ! Mongolia 338
        let $Nationality    = 'MONGOLIAN'
     when = 'AFG' ! Afghanistan 351
        let $Nationality    = 'AFGHAN'
     when = 'BGD' ! Bangladesh 352
        let $Nationality    = 'BANGLADESHI'
     when = 'BTN' ! Bhutan 353
        let $Nationality    = 'BHUTAN'
     when = 'IND' ! India 354
        let $Nationality    = 'INDIAN'
     when = 'MDV' ! Maldives 355
        let $Nationality    = 'MALDIVIAN'
     when = 'NPL' ! Nepal 356
        let $Nationality    = 'NEPALESE'
     when = 'PAK' ! Pakistan 357
        let $Nationality    = 'PAKISTANI'
     when = 'LKA' ! Sri Lanka 358
        let $Nationality    = 'SRI LANKAN'
     when = 'BHR' ! Bahrain 371
        let $Nationality    = 'BAHRAINI'
     when = 'CYP' ! Cyprus 372
        let $Nationality    = 'CYPRIOT'
     when = 'IRN' ! Iran 373
        let $Nationality    = 'IRANIAN'
     when = 'IRQ' ! Iraq 374
        let $Nationality    = 'IRAQI'
     when = 'ISR' ! Israel 375
        let $Nationality    = 'ISRAELI'
     when = 'JOR' ! jordan 376
        let $Nationality    = 'JORDANIAN'
     when = 'KWT' ! Kuwait 377
        let $Nationality    = 'KUWAITI'
     when = 'LBN' ! Lebanon 378
        let $Nationality    = 'LEBANESE'
     when = 'OMN' ! Oman 379
        let $Nationality    = 'OMAN'
     when = 'QAT' ! Qatar 380
        let $Nationality    = 'QATAR'
     when = 'SAU' ! Saudi Arabia 381
        let $Nationality    = 'SAUDI ARABIAN'
     when = 'SYR' ! Syrian 382
        let $Nationality    = 'SYRIAN'
     when = 'ARE' ! UAE 383
        let $Nationality    = 'UNITED ARAB EM.'
     when = 'YEM' ! Rep of Yemen 384
        let $Nationality    = 'YEMENI'
     when = 'PSE' ! Palestine 386
        let $Nationality    = 'PALESTINIAN'
     when = 'DZA' ! Algeria 401
        let $Nationality    = 'ALGERIAN'
     when = 'EGY' ! Egypt  402
        let $Nationality    = 'EGYPTIAN'
     when = 'LBY' ! Libya  403
        let $Nationality    = 'LIBYAN'
     when = 'MAR' ! Morocco  404
        let $Nationality    = 'MOROCCAN'
     when = 'SDN' ! Sudan  405
        let $Nationality    = 'SUDANESE'
     when = 'TUN' ! Tunisia  406
        let $Nationality    = 'TUNISIA'
     when = 'DJI' ! Djibouti  407
        let $Nationality    = 'DJIBOUTI'
     when = 'ETH' ! Ethiopia 408
        let $Nationality    = 'ETHIOPIAN'
     when = 'SOM' ! Somalia 409
        let $Nationality    = 'SOMALI'
     when = 'ERI' ! Eritrea 410
        let $Nationality    = 'ERITREA'
     when = 'GHA' ! Ghana  421
        let $Nationality    = 'GHANAIAN'
     when = 'CIV' ! Cote D'ivoire  422
        let $Nationality    = 'IVORY COAST'
     when = 'KEN' ! Kenya  423
        let $Nationality    = 'KENYAN'
     when = 'LBR' ! Liberia  424
        let $Nationality    = 'LIBERIAN'
     when = 'MDG' ! Madagascar 425
        let $Nationality    = 'MADAGASCAR'
     when = 'MUS' ! Mauritius  426
        let $Nationality    = 'MAURITIAN'
     when = 'MOZ' ! Mozambique  427
        let $Nationality    = 'MOZAMBIQUE'
     when = 'NGA' ! Nigeria  428
        let $Nationality    = 'NIGERIAN'
     when = 'REU' ! Reunion  429
        let $Nationality    = 'REUNION'
     when = 'TZA' ! Tanzania  430
        let $Nationality    = 'TANZANIAN'
     when = 'UGA' ! Uganda  431
        let $Nationality    = 'UGANDIAN'
     when = 'ZMB' ! Zambia  432
        let $Nationality    = 'ZAMBIAN'
     when = 'AGO' ! Angola 451
        let $Nationality    = 'ANGOLAN'
     when = 'BEN' ! Benin 452
        let $Nationality    = 'BENIN'
     when = 'BWA' ! Botswana 453
        let $Nationality    = 'BOTSWANA'
     when = 'BFA' ! Burnika Faso 454
        let $Nationality    = 'BURKINA FASO'
     when = 'BDI' ! Burundi 455
        let $Nationality    = 'BURUNDI'
     when = 'CMR' ! Cameroon 456
        let $Nationality    = 'CAMEROON'
     when = 'CPV' ! Cape Verde 457
        let $Nationality    = 'CAPE VERDE'
     when = 'CAF' ! Central African Rep 458
        let $Nationality    = 'CENTRAL AFRICAN REP'
     when = 'TCD' ! Chad 459
        let $Nationality    = 'CHADIAN'
     when = 'COM' ! Comoros 460
        let $Nationality    = 'COMOROS'
     when = 'COG' ! Congo 461
        let $Nationality    = 'CONGO'
     when = 'GNQ' ! Equatorial Guinea  462
        let $Nationality    = 'EQUATORIAL GUINEA'
     when = 'GAB' ! Gabon  463
        let $Nationality    = 'GABON'
     when = 'GMB' ! Gambia 464
        let $Nationality    = 'GAMBIAN'
     when = 'GIN' ! Rep of Guinea 465
        let $Nationality    = 'GUINEA'
     when = 'GNB' ! Rep of Guinea-Bissau 466
        let $Nationality    = 'GUINES BISSAU'
     when = 'LSO' ! Kingdom of Lesotho 467
        let $Nationality    = 'LESOTHO'
     when = 'MWI' ! Malawi 468
        let $Nationality    = 'MALAWI'
     when = 'MLI' ! Mali 469
        let $Nationality    = 'MALI'
     when = 'MRT' ! Mauritania 470
        let $Nationality    = 'MAURITANEAN'
     when = 'NAM' ! Namibia 471
        let $Nationality    = 'NAMIBIA'
     when = 'NER' ! Niger 472
        let $Nationality    = 'NIGER'
     when = 'RWA' ! Rwanda 473
        let $Nationality    = 'RWANDA'
     when = 'STP' ! Sao Tome and Principe  474
        let $Nationality    = 'SAO TOME PRINCI'
     when = 'SEN' ! Senegal 475
        let $Nationality    = 'SENEGALESE'
     when = 'SYC' ! Seychelles 476
        let $Nationality    = 'SEYCHELLES'
     when = 'SLE' ! Sierra Leone  477
        let $Nationality    = 'SIERRA LEONE'
     when = 'ZAF' ! South Africa  478
        let $Nationality    = 'SOUTH AFRICAN'
     when = 'ESH' ! Western Sahara 479
        let $Nationality    = 'WESTERN SAHARA'
     when = 'SWZ' ! Swaziland  480
        let $Nationality    = 'SWAZI'
     when = 'TGO' ! Togo  481
        let $Nationality    = 'TOGO'
     when = 'ZWE' ! Zimbabwe 483
        let $Nationality    = 'ZIMBABWEAN'
     when = 'SHN' ! St. Helena 484
        let $Nationality    = 'ST HELENA'
     when = 'CAN' ! Canada  501
        let $Nationality    = 'CANADIAN'
     when = 'PRI' ! Puerto Rico  502
        let $Nationality    = 'PUERTO RICAN'
     when = 'UMI' ! US Minor Outlaying Islands  504
        let $Nationality    = 'U S MINOR ISLANDS'
     when = 'SPM' ! St. Pierre 505
        let $Nationality    = 'ST PIERRE MIQUELON'
     when = 'ARG' ! Argentina  601
        let $Nationality    = 'ARGENTINIAN'
     when = 'BRA' ! Brazil  602
        let $Nationality    = 'BRAZILIAN'
     when = 'CHL' ! Chile 603
        let $Nationality    = 'CHILEAN'
     when = 'COL' ! Colombia 604
        let $Nationality    = 'COLOMBIAN'
     when = 'ECU' ! Ecuador 605
        let $Nationality    = 'ECUADORIAN'
     when = 'MEX' ! Mexico 606
        let $Nationality    = 'MEXICAN'
     when = 'PRY' ! Paraguay 607
        let $Nationality    = 'PARAGUAY'
     when = 'PER' ! Peru 608
        let $Nationality    = 'PERUVIAN'
     when = 'URY' ! Uruguay 609
        let $Nationality    = 'URUGUAY'
     when = 'VEN' ! Venezuela 610
        let $Nationality    = 'VENEZUELAN'
     when = 'CUB' ! Cuba 621
        let $Nationality    = 'CUBAN'
     when = 'DOM' ! Dominican Republic 622
        let $Nationality    = 'DOMINICAN REPUBLIC'
     when = 'ANT' ! Netherlands Antilles  623
        let $Nationality    = 'NETHERLANDS ANTIL.'
     when = 'PAN' ! Panama 624
        let $Nationality    = 'PANAMANIAN'
     when = 'ABW' ! Aruba 625
        let $Nationality    = 'ARUBA'
     when = 'BHS' ! Bahamas Island 642
        let $Nationality    = 'BAHAMAS'
     when = 'BRB' ! Barbados 643
        let $Nationality    = 'BARBADOS'
     when = 'BLZ' ! Belize 644
        let $Nationality    = 'BELIZE'
     when = 'BMU' ! Bermuda 645
        let $Nationality    = 'BERMUDAN'
     when = 'BOL' ! Bolivia 646
        let $Nationality    = 'BOLIVIAN'
     when = 'CYM' ! Cayman Islands 647
        let $Nationality    = 'CAYMANESE'
     when = 'CRI' ! Costa Rica 648
        let $Nationality    = 'COSTA RICAN'
     when = 'DMA' ! Dominica  649
        let $Nationality    = 'DOMINICA'
     when = 'SLV' ! El Salvador 650
        let $Nationality    = 'SALVADORAN'
     when = 'FLK' ! Falkland Island 651
        let $Nationality    = 'FALKLAND IS'
     when = 'GUF' ! French Guiana 652
        let $Nationality    = 'FRENCH GUIANA'
     when = 'GLP' ! Guadeloupe  654
        let $Nationality    = 'GUADELOUPE'
     when = 'GTM' ! Guatemala 655
        let $Nationality    = 'GUATEMALA'
     when = 'GUY' ! Guyana  656
        let $Nationality    = 'GUYANA'
     when = 'HTI' ! Haiti 657
        let $Nationality    = 'HAITIAN'
     when = 'HND' ! Honduras 658
        let $Nationality    = 'HONDURAN'
     when = 'JAM' ! Jamaica 659
        let $Nationality    = 'JAMAICAN'
     when = 'NIC' ! Nicaragua  660
        let $Nationality    = 'NICARAGUAN'
     when = 'MTQ' ! Martinique 661
        let $Nationality    = 'MARTINIQUE'
     when = 'MSR' ! Montserrat  662
        let $Nationality    = 'MONTSERRAT'
     when = 'KNA' ! St Kitts Nevis  663
        let $Nationality    = 'SAINT KITTS NEVIS'
     when = 'LCA' ! St. Lucia 664
        let $Nationality    = 'ST LUCIA'
     when = 'SUR' ! Surinam  666
        let $Nationality    = 'SURINAME'
     when = 'TTO' ! Trinidad and Tobago  667
        let $Nationality    = 'TRINIDAD AND TOBAGO'
     when = 'TCA' ! Turks and Caicos Islands  668
        let $Nationality    = 'TURKS AND CAICOS IS'
     when = 'VIR' ! Virgin Islands US  669
        let $Nationality    = 'VIRGIN ISLANDS US'
     when = 'AIA' ! Anguilla 670
        let $Nationality    = 'ANGUILLA'
     when = 'VGB' ! British Virgin Islands 671
        let $Nationality    = 'BRITISH VIRGIN ISLND'
     when = 'FJI' ! Fiji 702
        let $Nationality    = 'FIJIAN'
     when = 'URU' ! Nauru 703
        let $Nationality    = 'NAURUAN'
     when = 'NCL' ! New Caledonia  704
        let $Nationality    = 'NEW CALEDONIA'
     when = 'PNG' ! Papua New Guinea  706
        let $Nationality    = 'PAPUA NEW GUINEA'
     when = 'WSM' ! Western Samoa  707
        let $Nationality    = 'SAMOAN'
     when = 'IOT' ! British Indian Ocean Territory  708
        let $Nationality    = 'BRITISH INDIAN OCEAN'
     when = 'CXR' ! Christmas Island 709
        let $Nationality    = 'CHRISTMAS ISLANDS'
     when = 'CCK' ! Cocos Island  710
        let $Nationality    = 'COCOS KEELING ISLAND'
     when = 'ATF' ! French Southern Territory  711
        let $Nationality    = 'FRENCH SOUTHERN TERR'
     when = 'HMD' ! Heard and McDonald Island  712
        let $Nationality    = 'HEARD MCDONALD ISLND'
     when = 'NFK' ! Norfolk island  713
        let $Nationality    = 'NORFOLK ISLAND'
     when = 'ASM' ! American Samoa  721
        let $Nationality    = 'AMERICAN SAMOA'
     when = 'COK' ! Cook Island  722
        let $Nationality    = 'COOK ISLANDS'
     when = 'PYF' ! French Polynesia  723
        let $Nationality    = 'FRENCH POLYNESIA'
     when = 'GUM' ! Guam  724
        let $Nationality    = 'GUAM'
     when = 'KIR' ! Kiribati 725
        let $Nationality    = 'KIRIBATI'
     when = 'NIU' ! Niue  726
        let $Nationality    = 'NIUE ISLAND'
     when = 'PCN' ! Pitcairn 727
        let $Nationality    = 'PITCAIRN'
     when = 'SLB' ! Solomon Islands  728
        let $Nationality    = 'SOLOMON ISLANDS'
     when = 'TKL' ! Tokelau 729
        let $Nationality    = 'TOKELAU ISLANDS'
     when = 'TON' ! Tonga  730
        let $Nationality    = 'TONGA'
     when = 'TUV' ! Tuvalu 731
        let $Nationality    = 'TUVALU'
     when = 'VUT' ! Vanuatu  732
        let $Nationality    = 'VANUATU'
     when = 'WLF' ! Wallis and Futuna 733
        let $Nationality    = 'WALLIS AND FUTUNA'
     when = 'MNP' ! North Mariana Islands  734
        let $Nationality    = 'NORTHERN MARIANA ISL'
     when = 'MHL' ! Marshall Islands 735
        let $Nationality    = 'MARSHELLES'
     when = 'FSM' ! Micronesia 736
        let $Nationality    = 'MICRONESIAN'
     when = 'PLW' ! Palau 737
        let $Nationality    = 'PALAU'
     when-other  !999
        let $Nationality    = 'OTHERS'
  end-evaluate


end-procedure  !get-citizenship-country                                                                                



!***********************************************************************
! Procedure: get-Hrstatus                                                !
!            select hr status for emplid based on which length of service!
!            is displayed 
!***********************************************************************

begin-procedure get-Hrstatus
  Let $HrStatus = ' '
begin-select
COUNT(JB.HR_STATUS)    &COUNT
  Let #COUNT = &COUNT  
   
     IF #COUNT = 0
       Let $HrStatus = 'I'
     else
      Let $HrStatus = 'A'
     end-if


FROM PS_JOB JB 
WHERE JB.EMPLID = $Emplid  AND JB.HR_STATUS = 'A'
AND JB.EFFDT = (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                   WHERE J1.EMPLID = JB.EMPLID
                     AND J1.EMPL_RCD = JB.EMPL_RCD
                     AND J1.EFFDT <= $Tax_Yr_End)
AND JB.EFFSEQ = (SELECT MAX(J2.EFFSEQ)
                     FROM PS_JOB J2
                   WHERE J2.EMPLID = JB.EMPLID
                     AND J2.EMPL_RCD = JB.EMPL_RCD
                     AND J2.EFFDT = JB.EFFDT)

end-select
end-procedure

!***********************************************************************
! Procedure: get-Run-Type-SGP                                           !
!            Fetch the SGP run type. Check the number of SGP run types  !
!            that are tagged to the employee.
!***********************************************************************

begin-procedure get-Run-Type-SGP
   Let #Count_Runtype = 0
BEGIN-SELECT

COUNT(DISTINCT L.RUN_TYPE)   &L.RUN_TYPE   

  Let #Count_Runtype =  &L.RUN_TYPE

  If #Count_Runtype <= 1
    Do get-Bank-Acct
  End-if

  If #Count_Runtype >= 2
   Do get-Bank-Acct-Mult_Runtype
  End-if

FROM PS_GP_NET_DIST_DTL L  WHERE L.EMPLID = $Emplid AND L.CURRENCY_CD = 'SGD'

END-SELECT

End-procedure

!***********************************************************************
! Procedure: get-Bank-Acct                                               !
!            Fetch the bank account to which salary is credited. Ideally !
!            it is the primary bank account 
!***********************************************************************

begin-procedure get-Bank-Acct
   Let $BANK_CD = ' '
BEGIN-SELECT
B.BANK_CD    &BANK_CD

   LET $BANK_CD = &BANK_CD
 
   DO GET-BANK-NAME

FROM PS_PYE_BANKACCT B  
WHERE B.EMPLID = $Emplid AND B.CURRENCY_CD = 'SGD' 
AND B.ACCOUNT_ID = (SELECT DISTINCT G.ACCOUNT_ID FROM PS_GP_NET_DIST_DTL G WHERE G.CURRENCY_CD = 'SGD' AND G.EMPLID = $Emplid 
AND G.EMPL_RCD = (SELECT  DISTINCT JJ.EMPL_RCD FROM PS_JOB JJ WHERE JJ.EMPLID = G.EMPLID AND JJ.JOB_INDICATOR = 'P' AND JJ.EFFDT =  (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                   WHERE J1.EMPLID = JJ.EMPLID
                     AND J1.JOB_INDICATOR = 'P'
                     AND J1.EFFDT <= $TAX_YR_END))  
AND G.PAYMENT_MTHD = 'T'
AND G.PRIMARY_ACCT_IND = 'Y' 
AND G.EFFDT = (SELECT MAX (N.EFFDT) FROM PS_GP_NET_DIST_DTL N WHERE G.EMPLID = N.EMPLID AND G.EMPL_RCD = N.EMPL_RCD AND N.CURRENCY_CD = 'SGD' AND N.PAYMENT_MTHD = 'T' 
AND N.EFFDT <=$TAX_YR_END))
END-SELECT

End-procedure

!***********************************************************************
! Procedure: get-Bank-Acct-Mult_Runtype                                               !
!            Case when there are multiple SGP run types tagged to emplid!
!            Fetch the bank account to which salary is credited. Ideally !
!            it is the primary bank account 
!***********************************************************************


begin-procedure get-Bank-Acct-Mult_Runtype
   Let $BANK_CD = ' '
BEGIN-SELECT
B1.BANK_CD    &BANK_CD1

   LET $BANK_CD = &BANK_CD1
 
   DO GET-BANK-NAME

FROM PS_PYE_BANKACCT B1  
WHERE B1.EMPLID = $Emplid AND B1.CURRENCY_CD = 'SGD' 
AND B1.ACCOUNT_ID = (SELECT DISTINCT G1.ACCOUNT_ID FROM PS_GP_NET_DIST_DTL G1 , PS_GP_NET_DIST D3 WHERE G1.CURRENCY_CD = 'SGD' AND G1.EMPLID = $Emplid 
AND G1.EMPL_RCD = (SELECT  DISTINCT JJ1.EMPL_RCD FROM PS_JOB JJ1 WHERE JJ1.EMPLID = G1.EMPLID AND JJ1.JOB_INDICATOR = 'P' AND JJ1.EFFDT =  (SELECT MAX(J2.EFFDT)
                    FROM PS_JOB J2
                   WHERE J2.EMPLID = JJ1.EMPLID
                     AND J2.JOB_INDICATOR = 'P'
                     AND J2.EFFDT <= $TAX_YR_END))  
AND G1.PAYMENT_MTHD = 'T'
AND G1.PRIMARY_ACCT_IND = 'Y' 
AND D3.EMPLID = G1.EMPLID  AND D3.DEFAULT_IND = 'Y' AND D3.RUN_TYPE = G1.RUN_TYPE 
AND G1.EFFDT = (SELECT MAX (N1.EFFDT) FROM PS_GP_NET_DIST_DTL N1 , PS_GP_NET_DIST D4 WHERE G1.EMPLID = N1.EMPLID AND G1.EMPL_RCD = N1.EMPL_RCD AND N1.CURRENCY_CD = 'SGD' AND N1.PAYMENT_MTHD = 'T' 
AND D4.DEFAULT_IND = 'Y' AND D4.RUN_TYPE = N1.RUN_TYPE AND D4.EMPLID = N1.EMPLID AND N1.EFFDT <=$TAX_YR_END))
END-SELECT

End-procedure

!***********************************************************************
! Procedure: get-Bank-Name                                               !
!            Fetch the bank name to which salary is credited. Ideally !
!            it is the primary bank name 
!***********************************************************************

begin-procedure get-Bank-Name
    Let $Bank_Name = ' '
begin-select
N.BANK_NM     &BANK_NM

  Let $Bank_Name = &BANK_NM
  
FROM PS_BANK_EC_TBL N
WHERE N.BANK_CD = $Bank_cd

end-Select

End-procedure


#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'readmsgc.sqc'  !Read Message Catalog
#Include 'gpsgirrc.sqc'  !Select-Parameters procedure
#Include 'gpsgirty.sqc'  !Get-Tax-Year-Start-End procedure

!ePay Implementation Changes begin here
#Include 'gpsspslp.sqc'     ! ePay SQC with ePay procedures
!ePay Implementation Changes end here
