!***********************************************************************
! GPMYTX03:   Cessation of Employment - CP22A                          *
!            different laser printers.                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  30391599                                            *
!                                                                      *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!                                                                      *
! 28/09/06    1326090000  Procedure Print-Report has been modified     *
!                         to print all the SOCSO referene numbers and  *
!                         modifications are made to print              *
!                         Report layout and wordings correctly         *
!             1499398000  Report format changed to comply with latest  *
!                         format.                                      *
!***********************************************************************


#Include 'setenv.sqc'  !Set environment
!***********************************************************************
!  Procedure: Begin Setup                                              *
!             setup the Layout                                         *
!***********************************************************************
begin-setup
#include 'setupdb.sqc'
  Declare-Printer   THIS_REPORT
    type          = HPLASERJET
    symbol-set    = 12U
    font          = 5
    point-size    = 9
    End-Declare
 
  Declare-Layout THIS_REPORT
    paper-SIZE = (A4)
    Orientation= portrait
    Top-Margin= 0.5
    Left-Margin=0.5
    Max-Lines   = 129
    Max-Columns = 110
    CHAR-WIDTH = 4.8
    Line-Height = 6
  End-Declare
 
  Declare-Report THIS_REPORT
    Printer-Type=HPLASERJET
    LayOut=THIS_REPORT
  end-declare

end-setup



!***********************************************************************
!  Procedure: begin-program                                          *
!             The main driving procedure                               *
!***********************************************************************
begin-program
  let $mail_type=''
  do Init-DateTime
  do Init-Number
  do Init-Report
  do Report-Parm-Clean
  do Stdapi-Term
end-program

!***********************************************************************
!  Procedure: Init-Report                                              *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Init-Report
   do Stdapi-Init
   do Select-Parameters
   let #pos  = instr($sqr-program,'gpmytx03',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir1 = $path || 'gpmytx_logo.jpg'
   let #fstatus = exists($FileDir1)
   do Get-Empls              

  move 'GPMYTX03' to $ReportID
  do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
  do Add_Report_Translation($ReportID, $curr_language_cd)
  do Append_Report_Translation ('GPMYTX03')
  do MalayLanguageCode
  do Get-Current-DateTime
  do Init_Report_Translation ($ReportID, $curr_language_cd)
!  let $CurrYearEnd = '31/12/'|| $TaxYear

!  do Format-DateTime($CurrYearEnd,$CurrYearEnd,{DEFDMY},'','native')
!  let $CurrYearBegin = '01/01/'|| $TaxYear
!  do Format-DateTime($CurrYearBegin,$CurrYearBegin,{DEFDMY},'','native')
!  do Convert-to-DTU-Date($CurrYearBegin,$CurrYearBegin_DTU)
!  do Convert-to-DTU-Date($CurrYearEnd,$CurrYearEnd_DTU)

   do Process-Main
  
end-Procedure


!***********************************************************************
! Procedure: InitVars                                                  *
!***********************************************************************
Begin-Procedure InitVars
   Let #EmplSalary      = 0
   Let #EmplLeavePay    = 0
   Let #EmplBonus       = 0
   Let #EmplGratuity    = 0
   Let #EmplAllowance   = 0
   Let #EmplOthAllow    = 0
   Let #EmplTax         = 0
   Let #EmplEPF         = 0
   Let #Empl            = 0
   Let #totsal          = 0
   Let #totsal1         = 0
   Let #Gratuity        = 0
   Let #Compensation    = 0
   let #EmplNet = 0
   let #ZAKAT_YTD = 0
   let #BIK_LIABLE_TAX = 0
   Let #PensionER       = 0
   let #car = 0
   let #Tax_borne = 0
   LET #CLM_TX_DED_CHLD = 0
   
   

end-Procedure
!***********************************************************************
! Procedure: Select-Parameters                                         *
!***********************************************************************
Begin-Procedure  Select-Parameters

begin-SELECT
SP.OPRID
SP.RUN_CNTL_ID
SP.COMPANY         &RC_Company
SP.GPMY_TAX_NBR    &CompRef
SP.GPMY_TO_DT    &FromDate
SP.GPMY_CONTRIB_YEAR &YEAR

  Move &FromDate to $FromDate
  Move &RC_Company to $Company
  Move &CompRef to $CompTaxRef
  Move &YEAR to #TaxYear
  
   Let $TaxYear = edit(#TaxYear,'9999')
   Let $TaxStartPeriod =  '01/01/' || edit(#TaxYear,'9999')
   
FROM PS_GPMY_RPT_RC SP
WHERE SP.OPRID = $Prcs_OprID
AND SP.RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SELECT

end-Procedure

!***********************************************************************
!  Procedure: Get-Empls                                                *
!             Selects Employees from the child run control record for  *
!             processing.                                              *
!***********************************************************************
begin-procedure Get-Empls

let $SlctEmpls = ' J.EMPLID IN ('
let $SlctEmpls1 = ''
let $Multiple = 'N'
begin-SELECT
EMPLID


  if rtrim(&Emplid,' ') <> ''
    let $Empls_Exist = 'Y'
    let $Emplid = rtrim(&Emplid,' ')
    if $Multiple = 'N'
      let $SlctEmpls1 = ''''||$Emplid||''''
    else
      let $SlctEmpls1 = $SlctEmpls1||','||''''||$Emplid||''''
    end-if


  end-if

  let $Multiple = 'Y'

FROM PS_GPMY_EMPL_RC
WHERE OPRID       =  $Prcs_OprID
AND   RUN_CNTL_ID =  $Prcs_Run_Cntl_ID
end-SELECT
 
 LET $SlctEmpls = $SlctEmpls || $SlctEmpls1 ||')'
 !concat $SlctEmpls1 with $SlctEmpls
 !concat ')' with $SlctEmpls

end-procedure

!*********************************************************************************
!  Procedure: Get-ManagerLegal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-ManagerLegal-Name

begin-SELECT
NAMESMn.NAME

    let $MnLegalName = &NAMESMn.NAME

FROM PS_NAMES NAMESMn
WHERE NAMESMn.EMPLID = $ResponcibleId
AND NAMESMn.EFFDT=(SELECT MAX(NAMES11.EFFDT) FROM PS_NAMES NAMES11
                                          WHERE NAMES11.EMPLID=NAMESMn.EMPLID
                                            AND NAMES11.NAME_TYPE = NAMESMn.NAME_TYPE
                                            AND NAMES11.EFFDT <= $FromDate)


AND NAMESMn.NAME_TYPE = 'LEG'
end-SELECT

end-procedure


!**********************************************
!Process-Main
!**********************************************
Begin-Procedure Process-Main
  let $COUNTRY = ''
  let $STATE  = ''
begin-SELECT
J.EMPLID
J.EMPL_RCD
J.REG_TEMP
J.JOBCODE
E.GPMY_EMPL_TAX_NBR
E.GPMY_SPOUSE_NAME
E.GPMY_SPOUSE_OLDIC
E.GPMY_SPOUSE_NEWIC
E.GPMY_SPOUSE_TAXNBR
F.GPMY_REGISTERED_NM
F.COUNTRY
F.PHONE
F.ADDRESS1
F.ADDRESS2
F.ADDRESS3
F.ADDRESS4
F.CITY
F.STATE
F.POSTAL
F.NAME
F.JOBTITLE
F.GPMY_RESPONSIBLEID
C.TERMINATION_DT
C.EXPECTED_RETURN_DT
C.GPMY_TERM_REASON
JC.DESCR                &JobDecr
J.ACTION
J.ACTION_REASON

        !if &J.EMPLID <> $Emplid
               LET $JobNature1 = rtrim(ltrim(&JobDecr,' '),' ')
                let $Emplid = &J.EMPLID
                let $Reg_Temp = &J.REG_TEMP

                let $MnLegalName = '' !
                let $ResponcibleId = rtrim(&F.GPMY_RESPONSIBLEID, ' ')
                do Get-ManagerLegal-Name      !
                do Get-Last-Pay-Period
                
                LET $ACTION = &J.ACTION
                LET $ACTION_RSN = &J.ACTION_REASON
        IF $MnLegalName = '' or $MnLegalName = ' '
         move &F.NAME to $NameMn
        ELSE
         move $MnLegalName to $NameMn
        END-IF

                do Get-Personal-Data
                do prepare-employer-details
                let $COUNTRY  = &F.COUNTRY
                !let $ADDRESS1 = &F.ADDRESS1
                !let $ADDRESS2 = &F.ADDRESS2
                !let $ADDRESS3 = &F.ADDRESS3
                !let $ADDRESS4 = &F.ADDRESS4
                !let $CITY = &F.CITY
                let $STATE =&F.STATE
                !let $POSTAL = &F.POSTAL

                !do Adformat
                !do Compress-Address
                !let $Co_Addr1 = $ADDLINE2
                !let $Co_Addr2 = $ADDLINE3
                !let $Co_Addr3 = $ADDLINE4
                DO COUNTRY_STATE_DESCR
                let $Co_Addr1 = rtrim(&F.ADDRESS1,' ') ||' ' || rtrim(&F.ADDRESS2,' ')
                let $Co_Addr2 = rtrim(&F.ADDRESS3,' ') ||' ' || rtrim(&F.ADDRESS4,' ')
                let $Co_Addr3 = rtrim(&F.CITY,' ') ||' ' ||rtrim($STATE_DESCR,' ') ||' ' || rtrim(&F.POSTAL,' ') ||' ' ||rtrim($COUNTRY_DESCR,' ')



                do InitVars
                ! do EmplStEndDt
                do GetLastPayChequeDT
                do check-dates
                do EmplBalances
                DO emergency_contact

                if #EmplSalary <> 0
                  do Print-Malay-Cert 
                end-if

        !end-if

FROM PS_JOB J, PS_GPMY_CP22A_HDR C, PS_GPMY_TAX_PYE E, PS_GPMY_TAX_TBL F,PS_JOBCODE_TBL JC
WHERE [$SlctEmpls]
AND J.EMPLID = C.EMPLID
AND C.COMPANY = $Company
AND C.GPMY_CONTRIB_YEAR = #TaxYear
AND J.EFFDT    = (SELECT MAX(J1.EFFDT)
          FROM PS_JOB J1
          WHERE J1.EMPLID  = J.EMPLID
          AND J1.EMPL_RCD = J.EMPL_RCD
          AND J1.EFFDT <= $FromDate)
AND E.EMPL_RCD = (SELECT MAX(E1.EMPL_RCD)
          FROM PS_GPMY_TAX_PYE E1
          WHERE E1.EMPLID  = J.EMPLID
          AND E1.EFFDT     = (SELECT MAX(EFFDT)
          FROM PS_GPMY_TAX_PYE WHERE
          EFFDT <=$FromDate
          AND EMPLID = J.EMPLID))
AND J.EFFSEQ   = (SELECT MAX(J2.EFFSEQ)
          FROM PS_JOB J2
          WHERE J2.EMPLID  = J.EMPLID
          AND J2.EMPL_RCD = J.EMPL_RCD
          AND J2.EFFDT     = J.EFFDT)
AND F.GPMY_TAX_NBR=$CompTaxRef
AND J.EMPLID=E.EMPLID
AND E.GPMY_TAX_NBR = $CompTaxRef
AND J.EMPL_RCD=E.EMPL_RCD
AND E.EFFDT    = (SELECT MAX(E1.EFFDT)
          FROM PS_GPMY_TAX_PYE E1
          WHERE E1.EMPLID  = E.EMPLID
          AND E1.EMPL_RCD = E.EMPL_RCD
          AND E1.EFFDT <= J.EFFDT)
AND F.EFFDT    = (SELECT MAX(F1.EFFDT)
          FROM PS_GPMY_TAX_TBL F1
          WHERE F1.GPMY_TAX_NBR  = F.GPMY_TAX_NBR
          AND F1.EFFDT <= J.EFFDT)

AND JC.SETID    = J.SETID_JOBCODE
AND JC.JOBCODE  = J.JOBCODE
AND JC.EFFDT    = (SELECT MAX(JC1.EFFDT)
          FROM PS_JOBCODE_TBL JC1
          WHERE JC1.SETID = J.SETID_JOBCODE
          AND JC1.JOBCODE  = J.JOBCODE
          AND JC1.EFFDT     <= $FromDate)
ORDER BY E.GPMY_EMPL_TAX_NBR, J.EMPLID, J.EMPL_RCD

end-SELECT
end-procedure

!***********************************************************************
!  Procedure: Get-Last-Pay-Period                                      *
!             Fetch last pay period end date of the employee           *
!***********************************************************************

Begin-Procedure Get-Last-Pay-Period

begin-SELECT
MAX(calgrp.PRD_END_DT)  &pay_end_dt

FROM PS_GP_PYE_SEG_STAT seg,PS_GP_CALENDAR cal,PS_GP_CAL_RUN_DTL calgrp
WHERE seg.PYE_CALC_STAT > '50'
AND seg.CAL_RUN_ID=seg.ORIG_CAL_RUN_ID
AND seg.GP_PAYGROUP = calgrp.GP_PAYGROUP
AND seg.CAL_RUN_ID = calgrp.CAL_RUN_ID
AND seg.CAL_ID = calgrp.CAL_ID
AND calgrp.CAL_ID = cal.CAL_ID
AND seg.EMPLID = $Emplid

end-SELECT

end-procedure


!***********************************************************************
!  Procedure: prepare-employer-details                                 *
!             Gets the data for the employer                           *
!***********************************************************************
begin-procedure prepare-employer-details

  let $CompanyName = rtrim(&F.GPMY_REGISTERED_NM, ' ')

  uppercase $CompanyName



  move &F.PHONE to $Compregphone
  move $NameMn  to $Responsible_person
  move &F.JOBTITLE to $jobtitle
  move &E.GPMY_EMPL_TAX_NBR to $EmplTaxNbr

  if $Reg_Temp = 'R'
     let $JobNature = 'PERMANENT'
  else
     let $JobNature = 'TEMPORARY'
  end-if

end-procedure

!***********************************************************************
! Procedure: check-dates                                               *
!***********************************************************************
begin-procedure check-dates

 let $EE_Start_Dt = ''
 let $EE_End_Dt = ''

  if $EE_End_Dt_DTU <> ''
   ! Determine active period in current year
   !do Convert-to-DTU-Date(&EmplStartDt,$EE_Start_Dt_DTU)
  ! if rtrim(&EmplEndDt, ' ') = ''
  if rtrim($EmplEndDt, ' ') = ''
     if $EE_End_Dt_DTU = ''
        let $EE_End_Dt = rtrim($CurrYearEnd, ' ')
     else
        let $EE_End_Dt = rtrim(&DT, ' ')
     end-if
   else
     !do Convert-to-DTU-Date(&EmplEndDt,$EE_End_Dt_DTU)
     do dtu-diff-days($EE_End_Dt_DTU, $CurrYearEnd_DTU, #DayDiff)
     if #DayDiff <= 0
       let $EE_End_Dt = rtrim($CurrYearEnd, ' ')
     else
      ! let $EE_End_Dt = rtrim(&EmplEndDt, ' ')
     end-if
   end-if
   
   if $EE_Start_Dt_DTU < $CurrYearBegin_DTU
     let $EE_Start_Dt = rtrim($CurrYearBegin, ' ')
   else
   !  let $EE_Start_Dt = rtrim(&EmplStartDt, ' ')
   end-if
 end-if

end-procedure

!***********************************************************************
! Procedure: GetLastPayChequeDt                                        *
!***********************************************************************
begin-procedure GetLastPayChequeDt

! Earlier statement creating $PCWhere clause has been modified during 75ap release
!  let $PCWhere = 'AND CHECK_DT LIKE ''%' || $TaxYear || '%'''
  let $EE_End_Dt_DTU = ''
  let $TaxYear = edit(#TaxYear,'9999')
  Let $ChqStartPeriod = $TaxYear || '-01-01 00:00:00.000'
  Let $ChqEndPeriod   = $TaxYear || '-12-31 00:00:00.000'
  do Convert-From-DTU-Date($ChqStartPeriod,$ChqStartPeriod)
  do Convert-From-DTU-Date($ChqEndPeriod,$ChqEndPeriod)

!  let $PCWhere = ' AND CHECK_DT BETWEEN ' || '''' || $ChqStartPeriod || '''' || ' AND ' || '''' || $ChqEndPeriod || ''''

begin-SELECT
MAX(CHECK_DT)             &Dt

  do Convert-to-DTU-Date(&Dt,$EE_End_Dt_DTU)

FROM PS_GPMY_CP22A_HDR
WHERE EMPLID = $EMPLID
AND COMPANY = $Company
AND GPMY_CONTRIB_YEAR = #Tax_Year
AND GPMY_TAX_NBR = $CompTaxRef
AND CHECK_DT BETWEEN $ChqStartPeriod AND $ChqEndPeriod
end-SELECT
end-procedure

!***********************************************************************
!  Procedure: Get-Personal-Data                                       *
!             Gets the data for the selected employees.                *
!***********************************************************************
begin-procedure Get-Personal-Data


begin-SELECT
P1.NAME
P4.BIRTHDATE
P3.MAR_STATUS
P3.SEX

   let $EELegalName = ''
   do Get-Legal-Name
   
   Let $mail_type='MAIL'
   DO ADDRESS
   let $EmplAddress1=LTRIM(RTRIM($EmplAddress1, ' '), ' ')
    IF $EmplAddress1=''
      Let $mail_type='HOME'
      do Address
   END-IF
   
   ! EMPLOYEE PHONE
   do Employee_phone
  
   do Get-IC-Nbr
   do GetNationality
   do Get-Child-Count
   do prepare-data
   


FROM PS_NAMES P1,PS_PERS_DATA_EFFDT P3, PS_PERSON P4

WHERE P1.EMPLID = $Emplid
AND P1.EMPLID=P3.EMPLID
AND P3.EMPLID=P4.EMPLID

AND P1.EFFDT=(SELECT MAX(P11.EFFDT) FROM PS_NAMES P11
                                    WHERE P11.EMPLID=P1.EMPLID
                                    AND P11.NAME_TYPE = P1.NAME_TYPE
                                    AND P11.EFFDT <= $FromDate)

AND P3.EFFDT=(SELECT MAX(P31.EFFDT) FROM PS_PERS_DATA_EFFDT P31 WHERE P31.EMPLID=P3.EMPLID)

AND P1.NAME_TYPE = 'PRI'
end-SELECT

end-procedure
!************************************************
!Get Phone
!**********************************************
begin-procedure Employee_phone
BEGIN-SELECT
PH.PHONE

   LET $EMPL_PHONE = &PH.PHONE
   
FROM PS_PERSONAL_PHONE PH
WHERE 
PH.EMPLID = $Emplid
AND PH.PREF_PHONE_FLAG = 'Y'

End-Select
end-procedure

!************************************************
!Get Address
!**********************************************
begin-procedure Address

    let $query= 'AND PADD.ADDRESS_TYPE='''
    let $query=$query || $mail_type
    let $query= $query || ''''

    let $EmplAddress1=''
    let $Addr1 = ''
    let $Addr2 = ''
    let $Addr3 = ''
  LET $STATE = ''
  LET $COUNTRY = ''
begin-select
PADD.ADDRESS1
PADD.ADDRESS2
PADD.ADDRESS3
PADD.ADDRESS4
PADD.CITY
PADD.STATE
PADD.POSTAL
PADD.COUNTRY


    let $ADDRESS1 = rtrim(ltrim(&PADD.ADDRESS1, ' '), ' ')
    let $ADDRESS2 = rtrim(ltrim(&PADD.ADDRESS2, ' '), ' ')
    let $ADDRESS3 = rtrim(ltrim(&PADD.ADDRESS3, ' '), ' ')
    let $ADDRESS4 = rtrim(ltrim(&PADD.ADDRESS4, ' '), ' ')
    let $CITY     = rtrim(ltrim(&PADD.CITY, ' '), ' ')
    let $POSTAL   = rtrim(ltrim(&PADD.POSTAL, ' '), ' ')
    let $COUNTRY     = RTRIM(LTRIM(&PADD.COUNTRY , ' '), ' ')
    let $STATE       = RTRIM(LTRIM(&PADD.STATE   , ' '), ' ')
     DO COUNTRY_STATE_DESCR
      let $Addr1 = rtrim(&PADD.ADDRESS1,' ') ||' ' || rtrim(&PADD.ADDRESS2,' ')
      let $Addr2 = rtrim(&PADD.ADDRESS3,' ') ||' ' || rtrim(&PADD.ADDRESS4,' ')
      let $Addr3 = rtrim(&PADD.CITY,' ') ||' ' ||rtrim($STATE_DESCR,' ')||' ' || rtrim(&PADD.POSTAL,' ') ||' ' ||rtrim($COUNTRY_DESCR,' ')

      let $EmplAddress1 = $Addr1 || ' ' || $Addr2 || ' ' || $Addr3



FROM PS_NAMES P1,PS_ADDRESSES PADD,PS_PERS_DATA_EFFDT P3, PS_PERSON P4
WHERE  P1.EMPLID = $Emplid
AND P1.EMPLID=PADD.EMPLID
AND PADD.EMPLID=P3.EMPLID
AND P3.EMPLID=P4.EMPLID
AND P1.EFFDT=(SELECT MAX(P11.EFFDT) FROM PS_NAMES P11
                                    WHERE P11.EMPLID=P1.EMPLID
                                    AND P11.NAME_TYPE = P1.NAME_TYPE
                                    AND P11.EFFDT <= $FromDate)
AND PADD.EFFDT=(SELECT MAX(P21.EFFDT) FROM PS_ADDRESSES P21 WHERE P21.EMPLID=PADD.EMPLID AND P21.ADDRESS_TYPE = $mail_type AND  P21.EFFDT <= $FromDate)
AND P3.EFFDT=(SELECT MAX(P31.EFFDT) FROM PS_PERS_DATA_EFFDT P31 WHERE P31.EMPLID=P3.EMPLID AND P31.EFFDT <= $FromDate)
[$query]
AND P1.NAME_TYPE = 'PRI'

end-select

end-procedure


!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME
    show 'Name:  ' $EELegalName
    show 'Mar status' &P3.MAR_STATUS

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT) FROM PS_NAMES NAMES1
                                          WHERE NAMES1.EMPLID=NAMES.EMPLID
                                          AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                                          AND NAMES1.EFFDT <= $FromDate)
AND NAMES.NAME_TYPE = 'LEG'
end-SELECT

end-procedure


!***********************************************************************
!  Procedure: Get-IC-Nbr
!             Gets the IC-Number from PERS_NID                         *
!                                         *
!***********************************************************************
begin-procedure Get-IC-Nbr

let $NewIcNbr  = ' '
let $OldIcNbr = ' '

begin-SELECT
M.NATIONAL_ID
M.NATIONAL_ID_TYPE


        if &M.NATIONAL_ID_TYPE = 'NEWIC'
        move &M.NATIONAL_ID to $NewIcNbr
         else
        move &M.NATIONAL_ID to $OldIcNbr
    end-if


FROM PS_PERS_NID M
WHERE M.EMPLID = $Emplid
AND M.COUNTRY='MYS'

end-SELECT

  Let $ICPassport = ' '

  if ltrim(rtrim($NewIcNbr,' '),' ') <> ''
      let $ICPassport = $NewIcNbr
  else

     if ltrim(rtrim($OldIcNbr,' '),' ') <> ''
        let $ICPassport =  $OldIcNbr
     else
        do GetICPassportInfo
     end-if
  end-if

end-procedure


!***********************************************************************
!  Procedure: Get-Child-Count                                          *
!             Counts the number of children under 18 years of age as at*
!             the end of the previous year.                            *
!***********************************************************************
begin-procedure Get-Child-Count

  let #ChildCnt = 0
  
  Show 'Employee id:  ' $Emplid

begin-SELECT
D.BIRTHDATE
D.DISABLED
D.STUDENT


  move &D.BIRTHDATE to $BirthDate
  move &D.DISABLED to $DISABLED_DEP
  move &D.STUDENT to $STUDENT_DEP
  
  if $BirthDate <= $FromDate

     do Convert-to-DTU-Date($BirthDate, $BirthDate)
     do Convert-to-DTU-Date($FromDate, $FromDatebirth)
     do DTU-Diff-Years($BirthDate,$FromDatebirth,#Age)
     
      if $DISABLED_DEP  = 'Y'
        let #ChildCnt = #ChildCnt + 1
      else
        if #Age < 18
            let #ChildCnt = #ChildCnt + 1
        else
            if $STUDENT_DEP = 'Y'
                let #ChildCnt = #ChildCnt + 1
            end-if
        end-if
      end-if
  end-if

  FROM PS_DEPENDENT_BENEF D
WHERE D.EMPLID = $Emplid
AND D.RELATIONSHIP = 'C'
AND BIRTHDATE <= $FromDate
end-SELECT


end-procedure


!***********************************************************************
! Procedure: GetICPassportInfo                                         *
!***********************************************************************

begin-Procedure GetICPassportInfo



begin-SELECT
CP.PASSPORT_NBR     &Passport
CP.DEPENDENT_ID     &DependId
CP.DT_ISSUED        &CPIssueDt
CP.EXPIRATN_DT      &CPExpireDt

   Let $ICPassport = ''
  if ($FromDate <= &CPExpireDt OR rtrim(&CPExpireDt,' ') = '')
       Move &Passport to $ICPassport
  end-if

FROM PS_CITIZEN_PSSPRT CP
WHERE  CP.EMPLID = $Emplid
AND CP.DT_ISSUED <= $FromDate
AND DEPENDENT_ID = ' '
ORDER BY CP.DT_ISSUED
end-SELECT
end-Procedure

!***********************************************************************
! Procedure: GetNationality                                            *
!***********************************************************************
begin-Procedure GetNationality

begin-SELECT
CZ.COUNTRY &Nationality
CO.DESCR &NatDescr
 Move &NatDescr to $Nationality
FROM PS_COUNTRY_TBL CO, PS_CITIZENSHIP CZ
WHERE CZ.EMPLID  = $Emplid
AND CO.COUNTRY = CZ.COUNTRY
AND CZ.DEPENDENT_ID = ' '
end-SELECT
end-Procedure


!***********************************************************************
!  Procedure: Prepare-Data                                             *
!             Prepares the data that is to be printed on the form.     *
!***********************************************************************
begin-procedure Prepare-Data

  let $EmplName = ''
  let $Mar_Status = ''

   IF $EELegalName = '' or $EELegalName = ' '
     move &P1.NAME to $EmplName
   ELSE
     move $EELegalName to $EmplName
   END-IF


  uppercase $EmplName

  !let $FieldName = 'MAR_STATUS'
  !let $FieldValue = &P3.MAR_STATUS
  !do Read-Translate-Table
  !let $Mar_Status = rtrim($XlatLongName,' ')
  !uppercase $Mar_Status
   let $Mar_Status = &P3.MAR_STATUS

  if $Mar_Status = 'M' 
  
     let $SPOUSE_name = &E.GPMY_SPOUSE_NAME
     uppercase $SPOUSE_name
     
     if rtrim(&E.GPMY_SPOUSE_NEWIC, ' ') = ''
        let $SPOUSE_IC_Nbr = rtrim(&E.GPMY_SPOUSE_OLDIC, ' ')
     else
        let $SPOUSE_IC_Nbr = rtrim(&E.GPMY_SPOUSE_NEWIC, ' ')
     end-if
     
     let $SPOUSE_TFN = rtrim(&E.GPMY_SPOUSE_TAXNBR, ' ')
     
  else
     let $SPOUSE_name = ' '
     let $SPOUSE_IC_Nbr = ' '
     let $SPOUSE_TFN = ' '
  end-if

end-procedure


!***********************************************************************
! Procedure: EmplBalances                                              *
!***********************************************************************
Begin-Procedure EmplBalances

LET #Tax_Year = to_number($TaxYear)


Begin-Select
DISTINCT(MP.GPMY_FLD_NAME)    &MP.GPMY_FLD_NAME
MP.CALC_RSLT_VAL   &MP.CALC_RSLT_VAL
!MP.PRD_END_DT
   move &MP.GPMY_FLD_NAME to $rptfldname

   Move &MP.calc_rslt_val To #repval
   let $employee-found='Y'
   let $rptfldname = rtrim($rptfldname,' ')
   let $rptfldname = ltrim($rptfldname,' ')
   Evaluate  $rptfldname

                when = 'GROSS'
                        Move #repval To  #EmplSalary
                        BREAK
                when = 'LEAVE_PAY'
                        Move #repval To #EmplLeavePay
                        BREAK
                when = 'BONUS'
                        add #repval To #EmplBonus
                        BREAK
                when = 'BONUS_PY_CP'
                        add #repval To #EmplBonus
                        BREAK
                when = 'RESIDENCE_ER'
                        Move #repval To #EmplGratuity
                        BREAK
                when = 'ALLOWANCES'
                        Move #repval To #EmplAllowance
                        BREAK
                when = 'CAR_BIK'
                        Move #repval To #car
                       BREAK
                when = 'TX_YTD'
                        Move #repval To #EmplTax
                        BREAK
                when = 'EPF_COMP_YTD'
                        Move #repval To #EmplEPF
                        BREAK
                when = 'NETPAY'
                        Move #repval To #EmplNet
                        BREAK
                when = 'GRATUITY_YTD'
                        Move #repval To #Gratuity
                        BREAK
                when = 'COMPEN_YTD'
                        Move #repval To #Compensation
                        BREAK
                when = 'ALLOWANCES_CASH'
                        Move #repval To #EmplOthAllow
                        BREAK

                when = 'PENSION_ER'
                        Move #repval To #PensionER
                        BREAK
                        
                when = 'ZAKAT_YTD'
                        Move #repval To #ZAKAT_YTD
                        BREAK
                when = 'BIK_LIABLE_TAX'
                        Move #repval To #BIK_LIABLE_TAX
                        BREAK                       
                when = 'TAX_EMPLOYER'
                        Move #repval To #Tax_borne
                        BREAK   
                when = 'CLM_TX_DED_CHLD'
                        Move #repval To #CLM_TX_DED_CHLD
                        BREAK                           

        End-Evaluate

FROM PS_GPMY_CP22A_HDR MP3,
     PS_GPMY_CP22A_DTL MP

WHERE MP3.EMPLID = $EmplId
AND MP3.EMPLID = MP.EMPLID
AND MP3.COMPANY = MP.COMPANY
AND MP3.GPMY_CONTRIB_YEAR = MP.GPMY_CONTRIB_YEAR
AND MP3.COMPANY = $Company
AND MP3.GPMY_CONTRIB_YEAR = #Tax_Year
AND MP3.GPMY_TAX_NBR = $CompTaxRef
AND MP3.GPMY_TAX_NBR = MP.GPMY_TAX_NBR
ORDER BY MP.GPMY_FLD_NAME
End-Select


end-procedure

begin-procedure Get-TaxStartDt
begin-select
JOB.EFFDT
    let $HireDt = &JOB.EFFDT
FROM PS_JOB JOB, PS_GPMY_TAX_PYE GTP
WHERE JOB.EMPLID = $Emplid
AND GTP.EMPL_RCD = (SELECT MAX(GTP1.EMPL_RCD)
          FROM PS_GPMY_TAX_PYE GTP1
          WHERE GTP1.EMPLID  = JOB.EMPLID
          AND GTP1.EFFDT     = (SELECT MAX(EFFDT)
          FROM PS_GPMY_TAX_PYE WHERE
          EFFDT <=$FromDate
          AND EMPLID = JOB.EMPLID))
AND JOB.EFFDT    = (SELECT MAX(JOB1.EFFDT)
          FROM PS_JOB JOB1
          WHERE JOB1.EMPLID  = JOB.EMPLID
          AND JOB1.EMPL_RCD = JOB.EMPL_RCD
          AND JOB1.EFFDT <= $FromDate
          AND JOB1.ACTION IN ('HIR','REH'))
AND JOB.EFFSEQ   = (SELECT MAX(JOB2.EFFSEQ)
          FROM PS_JOB JOB2
          WHERE JOB2.EMPLID  = JOB.EMPLID
          AND JOB2.EMPL_RCD = JOB.EMPL_RCD
          AND JOB2.EFFDT     = JOB.EFFDT
          AND JOB2.ACTION IN ('HIR','REH'))
AND JOB.EMPLID=GTP.EMPLID
AND GTP.GPMY_TAX_NBR = $CompTaxRef
AND JOB.EMPL_RCD=GTP.EMPL_RCD
AND GTP.EFFDT    = (SELECT MAX(GTP1.EFFDT)
          FROM PS_GPMY_TAX_PYE GTP1
          WHERE GTP1.EMPLID  = GTP.EMPLID
          AND GTP1.EMPL_RCD = GTP.EMPL_RCD
          AND GTP1.EFFDT <= GTP.EFFDT)
AND JOB.ACTION IN ('HIR','REH')
ORDER BY GTP.GPMY_EMPL_TAX_NBR, JOB.EMPLID, JOB.EMPL_RCD
end-select
   do Convert-to-DTU-Date($HireDt,$HireDt_DTU)
   do format-datetime ($TaxStartPeriod, $TaxStartPeriod, {DEFDMY}, '', 'native')
   do Convert-to-DTU-Date($TaxStartPeriod,$TaxStartPeriod_DTU)
   do dtu-diff-days($TaxStartPeriod_DTU,$HireDt_DTU,#DayDiff)
  if #DayDiff >=0
        let $TaxStartPeriod =  edit($HireDt,'dd/mm/yyyy')
   else
        let $TaxStartPeriod_YYYY = substr($TaxStartPeriod_DTU,1,4)
        let $TaxStartPeriod_MM   = substr($TaxStartPeriod_DTU,6,2)
        let $TaxStartPeriod_DD   = substr($TaxStartPeriod_DTU,9,2)

        let $TaxStartPeriod =  $TaxStartPeriod_DD||'/'||$TaxStartPeriod_MM||'/'||$TaxStartPeriod_YYYY
   end-if
end-procedure

!***********************************************************************
!  Procedure: Print-Malay-Cert                                        *
!             The main driving procedure                               *
!***********************************************************************
begin-procedure Print-Malay-Cert 

  !Print Logo of the CP22A Form
  if #fstatus = 0
       print-image  (1, 1)
       Type       =JPEG-FILE
       Image-Size = (14,6)
       source     = $FileDir1
  else
      show 'Logo not present in SQR folder'
  end-if
  
  ! Print Heading
   alter-printer point-size=11 font=5 
   print $GPMY_MAIN_LBL  (1,) bold center

   alter-printer point-size=11 font=5
   print $GPMY_TITLE_LBL  (+2,) bold center
   
   alter-printer point-size=10 font=5
   print $GPMY_TITLE1_LBL (+2,27) bold

  alter-printer point-size=8 font=5 
  print $GPMY_CP22APIN_LBL (-1,95) 
  
  alter-printer point-size=9 font=4
  graphic (+2,1,109) box 6 10 100 
  print $GPMY_FORMIRB_LBL (+1,2) 
  foreground = ('WHITE')
         
  alter-printer point-size=8 font=4  
  print $GPMY_FORMIRB1_LBL (+2,6) 
  foreground = ('WHITE')
         
  alter-printer point-size=8 font=4   
   print $GPMY_FORMIRB2_LBL (+2,6) 
    foreground = ('WHITE')
    
    
  !Employer Details
    
    alter-printer point-size=9 font=5    
    graphic (,59,18) vert-line
    graphic (+1,1,109) box 18 4

    print $GPMY_FROM_LBL   (+1,2)
    print $GPMY_EMPLR_TX_LBL (,61)
 
 
  !TAX NUMBER calculation
   let $E_File_Nbr   = rtrim(ltrim($CompTaxRef,' '),' ')
   let $E_File_Nbr1 = substr($E_File_Nbr,1,1)
   let $E_File_Nbr2 = substr($E_File_Nbr,2,1)
   let $E_File_Nbr3 = substr($E_File_Nbr,3,1)
   let $E_File_Nbr4 = substr($E_File_Nbr,4,1)
   let $E_File_Nbr5 = substr($E_File_Nbr,5,1)
   let $E_File_Nbr6 = substr($E_File_Nbr,6,1)
   let $E_File_Nbr7 = substr($E_File_Nbr,7,1)
   let $E_File_Nbr8 = substr($E_File_Nbr,8,1)
   let $E_File_Nbr9 = substr($E_File_Nbr,9,1)
   let $E_File_Nbr10 = substr($E_File_Nbr,10,1)

   if ltrim(rtrim($E_File_Nbr10, ' '), ' ') = ''
        let $E_File_Nbr10 = $E_File_Nbr9
        let $E_File_Nbr9  = $E_File_Nbr8
        let $E_File_Nbr8  = ''
   end-if
   
  
   graphic (+2,2,56) box 14 10 !INSIDE BOX
   graphic                              (,61,3) box 3 10
   graphic                              (,+5,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   graphic                              (,+3,3) box 3 10
   print $GPMY_E_LBL                   (+1,62,0) bold   
   print $E_File_Nbr1                   (,67,0) BOLD   
   print $E_File_Nbr2                   (,70) BOLD   
   print $E_File_Nbr3                   (,73) BOLD   
   print $E_File_Nbr4                   (,76) BOLD   
   print $E_File_Nbr5                   (,79) BOLD   
   print $E_File_Nbr6                   (,82) BOLD   
   print $E_File_Nbr7                   (,85) BOLD   
   print $E_File_Nbr8                   (,88) BOLD   
   print $E_File_Nbr9                   (,91) BOLD   
   print $E_File_Nbr10                  (,94) BOLD
   
   ! Employer Address details
   let $Co_Addr11 = RTRIM(LTRIM(SUBSTR($Co_Addr1,1,35),' '), ' ')
   let $Co_Addr12 = RTRIM(LTRIM(SUBSTR($Co_Addr1,36,50), ' '), ' ')

   let $Co_Addr1 = $Co_Addr11
   let $Co_Addr2 = $Co_Addr12 || ' ' || $Co_Addr2
   let $Co_Addr2 = RTRIM(LTRIM($Co_Addr2,' '), ' ')
   
   
   print $CompanyName                   (+1,4) bold
   print $Co_Addr1                      (+2,4)
   print $Co_Addr2                      (+2,4)
   print $Co_Addr3                      (+2,4)
   print $Co_Addr4                      (+2,4)
   
   !Employer Telephone
   print $GPMY_EMPLR_PHN_LBL             (-2,61)
   graphic                              (+2,61,36) box 4 10
   print $CompRegPhone                   (+2, 63)
  
  
!******************************************************************************************
!                Particulars of Employee about to leave Malaysia
!******************************************************************************************
  graphic (+4,1,109) box 2 10 100 
  print $GPMY_SECTION_A_LBL (+1,2)  bold
  foreground = ('WHITE')

     
  !THIRD BOX
  
  graphic (+1,59,89) vert-line
  graphic (+1,1,109) box 89 2
  
  ! 1
  PRINT $GPMY_SECTA_1_LBL (+1,2)
  GRAPHIC (+1,3,55) BOX 3 10
  DO CHECK_WIDTH ($EmplName, 44,$EmplName,$EmplName_add)
  print     $EmplName  (+1,4)
  GRAPHIC (+2,3,55) BOX 3 10
  PRINT $EmplName_add (+1,4)
  
    
  ! 2
  do Get-TaxStartDt
  let $Org_Hir_Dt = $HireDt
  
  let $dd1   = substr(edit($Org_Hir_Dt,'dd'),1,1)
  let $dd2   = substr(edit($Org_Hir_Dt,'dd'),2,1)
  let $mm1   = substr(edit($Org_Hir_Dt,'mm'),1,1)
  let $mm2   = substr(edit($Org_Hir_Dt,'mm'),2,1)
  let $yy1   = substr(edit($Org_Hir_Dt,'yy'),1,1)
  let $yy2   = substr(edit($Org_Hir_Dt,'yy'),2,1)
  
  PRINT $GPMY_SECTA_2_LBL (+5,2)
  GRAPHIC (-2,38,3) BOX 3 10
  GRAPHIC (,41,3) BOX 3 10
  GRAPHIC (,45,3) BOX 3 10
  GRAPHIC (,48,3) BOX 3 10
  GRAPHIC (,52,3) BOX 3 10
  GRAPHIC (,55,3) BOX 3 10   
  
  print $dd1  (+1,39)
  print $dd2   (,42)
  print $mm1  (,46)
  print $mm2   (,49)
  print $yy1    (,53)
  print $yy2   (,56)
  
  
  ! 3.
  PRINT $GPMY_SECTA_3_LBL (+5,2)
  GRAPHIC (-1,38,3) BOX 3 10
  GRAPHIC (,41,3) BOX 3 10
  GRAPHIC (,45,3) BOX 3 10
  GRAPHIC (,48,3) BOX 3 10
  GRAPHIC (,52,3) BOX 3 10
  GRAPHIC (,55,3) BOX 3 10   
  let $Term_Date = &C.TERMINATION_DT

  let $dd1   = substr(edit($Term_Date,'dd'),1,1)
  let $dd2   = substr(edit($Term_Date,'dd'),2,1)
  let $mm1   = substr(edit($Term_Date,'mm'),1,1)
  let $mm2   = substr(edit($Term_Date,'mm'),2,1)
  let $yy1   = substr(edit($Term_Date,'yy'),1,1)
  let $yy2   = substr(edit($Term_Date,'yy'),2,1)
  print $dd1  (+1,39)
  print $dd2   (,42)
  print $mm1  (,46)
  print $mm2   (,49)
  print $yy1    (,53)
  print $yy2   (,56)
  alter-printer point-size=8 font=32
  PRINT $GPMY_SECTA_3_SUB_LBL (+2,4) 

    alter-printer point-size=9 font=5
    
    !4.
    
  let $Birth_Day = &P4.BirthDate
  
  let $dd1   = substr(edit($Birth_Day,'dd'),1,1)
  let $dd2   = substr(edit($Birth_Day,'dd'),2,1)
  let $mm1   = substr(edit($Birth_Day,'mm'),1,1)
  let $mm2   = substr(edit($Birth_Day,'mm'),2,1)
  let $yy1   = substr(edit($Birth_Day,'yy'),1,1)
  let $yy2   = substr(edit($Birth_Day,'yy'),2,1)
  
  PRINT $GPMY_SECTA_4_LBL (+3,2)
  GRAPHIC (-1,38,3) BOX 3 10
  GRAPHIC (,41,3) BOX 3 10
  GRAPHIC (,45,3) BOX 3 10
  GRAPHIC (,48,3) BOX 3 10
  GRAPHIC (,52,3) BOX 3 10
  GRAPHIC (,55,3) BOX 3 10   
  print $dd1  (+1,39)
  print $dd2   (,42)
  print $mm1  (,46)
  print $mm2   (,49)
  print $yy1    (,53)
  print $yy2   (,56)
  
  
  !5.
  PRINT $GPMY_SECTA_5_LBL (+4,2)
  PRINT $GPMY_SECTA_5_SUB2_LBL (+1,32)
  PRINT $GPMY_SECTA_5_SUB3_LBL (,45)
  GRAPHIC (-1,38,3) BOX 3 10
  GRAPHIC (,+14,3) BOX 3 10
  
  IF $ACTION = 'RET'
   IF $ACTION_RSN  = 'CRE'
     PRINT 'X' (+1,39)
   ELSE
     PRINT 'X' (+1,53)
   END-IF
  ELSE
     PRINT '' (+1,39)
  END-IF
  
  alter-printer point-size=8 font=32   
  print $GPMY_SECTA_5_SUB1_LBL (+1,4)
  
  alter-printer point-size=9 font=5 
  !6.
  
  let $IC_Nbr1    = ''
  let $IC_Nbr2    = ''
  let $IC_Nbr3    = ''
  let $IC_Nbr4    = ''
  let $IC_Nbr5    = ''
  let $IC_Nbr6    = ''
  let $IC_Nbr7    = ''
  let $IC_Nbr8    = ''
  let $IC_Nbr9    = ''
  let $IC_Nbr10   = ''
  let $IC_Nbr11   = ''
  let $IC_Nbr12   = ''
  
    
    let $Identity_Nbr = $ICPassport
  let $Identity_Nbr = replace($Identity_Nbr, '-', '')
  let $Identity_Nbr = rtrim(ltrim($Identity_Nbr, ' '), ' ')
    
  let $IC_Nbr1   = substr($Identity_Nbr,1,1)
  let $IC_Nbr2   = substr($Identity_Nbr,2,1)
  let $IC_Nbr3   = substr($Identity_Nbr,3,1)
  let $IC_Nbr4   = substr($Identity_Nbr,4,1)
  let $IC_Nbr5   = substr($Identity_Nbr,5,1)
  let $IC_Nbr6   = substr($Identity_Nbr,6,1)
  let $IC_Nbr7   = substr($Identity_Nbr,7,1)
  let $IC_Nbr8   = substr($Identity_Nbr,8,1)
  let $IC_Nbr9  = substr($Identity_Nbr,9,1)
  let $IC_Nbr10  = substr($Identity_Nbr,10,1)
  let $IC_Nbr11  = substr($Identity_Nbr,11,1)
  let $IC_Nbr12  = substr($Identity_Nbr,12,1)

  PRINT $GPMY_SECTA_6_LBL (+4,2)
  GRAPHIC (+2,4,3) BOX 3 10
  GRAPHIC (  ,7,3) BOX 3 10
  GRAPHIC (  ,10,3) BOX 3 10
  GRAPHIC (  ,13,3) BOX 3 10
  GRAPHIC (  ,16,3) BOX 3 10
  GRAPHIC (  ,19,3) BOX 3 10
  GRAPHIC (  ,22,3) BOX 3 10
  GRAPHIC (  ,25,3) BOX 3 10
  GRAPHIC (  ,28,3) BOX 3 10
  GRAPHIC (  ,31,3) BOX 3 10
  GRAPHIC (  ,34,3) BOX 3 10
  GRAPHIC (  ,37,3) BOX 3 10
  
  PRINT $IC_Nbr1 (+1,5)
  PRINT $IC_Nbr2 (,8)
  PRINT $IC_Nbr3 (,11)
  PRINT $IC_Nbr4 (,14)
  PRINT $IC_Nbr5 (,17)
  PRINT $IC_Nbr6 (,20)
  PRINT $IC_Nbr7 (,23)
  PRINT $IC_Nbr8 (,26)
  PRINT $IC_Nbr9 (,29)
  PRINT $IC_Nbr10 (,32)
  PRINT $IC_Nbr11 (,35)
  PRINT $IC_Nbr12 (,38)

  
  ! 7.
  PRINT $GPMY_SECTA_7_LBL (+4,2)
  
  let $EmplTaxNbr = replace($EmplTaxNbr, '-', '')
  let $EmplTaxNbr = rtrim(ltrim($EmplTaxNbr, ' '), ' ')
  let #slen = length($EmplTaxNbr)

  let $Tax_File_Nbr1  = ''
  let $Tax_File_Nbr2  = ''
  let $Tax_File_Nbr3  = ''
  let $Tax_File_Nbr4  = ''
  let $Tax_File_Nbr5  = ''
  let $Tax_File_Nbr6  = ''
  let $Tax_File_Nbr7  = ''
  let $Tax_File_Nbr8  = ''
  let $Tax_File_Nbr9  = ''
  let $Tax_File_Nbr10 = ''
  let $Tax_File_Nbr11 = ''
  let $Tax_File_Nbr12 = ''
  let $Tax_File_Nbr13 = ''

  let $Tax_File_Nbr1  = substr($EmplTaxNbr,1,1)
  if #slen > 4
  let $Tax_File_Nbr2  = substr($EmplTaxNbr,2,1)
  end-if
  if #slen > 5
  let $Tax_File_Nbr3  = substr($EmplTaxNbr,3,1)
  end-if
  if #slen > 6
  let $Tax_File_Nbr4  = substr($EmplTaxNbr,4,1)
  end-if
  if #slen > 7
  let $Tax_File_Nbr5  = substr($EmplTaxNbr,5,1)
  end-if
  if #slen > 8
  let $Tax_File_Nbr6  = substr($EmplTaxNbr,6,1)
  end-if
  if #slen > 9
  let $Tax_File_Nbr7  = substr($EmplTaxNbr,7,1)
  end-if
  if #slen > 10
  let $Tax_File_Nbr8  = substr($EmplTaxNbr,8,1)
  end-if
  if #slen > 11
  let $Tax_File_Nbr9  = substr($EmplTaxNbr,9,1)
  end-if
  if #slen > 12
  let $Tax_File_Nbr10 = substr($EmplTaxNbr,10,1)
  end-if
  let $Tax_File_Nbr11 = substr($EmplTaxNbr,#slen - 2,1)
  let $Tax_File_Nbr12 = substr($EmplTaxNbr,#slen - 1,1)
  !let $Tax_File_Nbr13 = '(' || substr($EmplTaxNbr,#slen,1) || ')'
  let $Tax_File_Nbr13 = substr($EmplTaxNbr,#slen,1)

  GRAPHIC (+2,4,3) BOX 3 10
  GRAPHIC (  ,7,3) BOX 3 10
  GRAPHIC (  ,11,3) BOX 3 10
  GRAPHIC (  ,14,3) BOX 3 10
  GRAPHIC (  ,17,3) BOX 3 10
  GRAPHIC (  ,20,3) BOX 3 10
  GRAPHIC (  ,20,3) BOX 3 10
  GRAPHIC (  ,23,3) BOX 3 10
  GRAPHIC (  ,26,3) BOX 3 10
  GRAPHIC (  ,29,3) BOX 3 10
  GRAPHIC (  ,32,3) BOX 3 10
  GRAPHIC (  ,35,3) BOX 3 10
  GRAPHIC (  ,38,3) BOX 3 10
  GRAPHIC (  ,41,3) BOX 3 10
  PRINT $Tax_File_Nbr1 (+1,5)
  PRINT $Tax_File_Nbr2 (,8)
  PRINT $Tax_File_Nbr3 (,12)
  PRINT $Tax_File_Nbr4 (,15)
  PRINT $Tax_File_Nbr5 (,18)
  PRINT $Tax_File_Nbr6 (,21)
  PRINT $Tax_File_Nbr7 (,24)
  PRINT $Tax_File_Nbr8 (,27)
  PRINT $Tax_File_Nbr9 (,30)
  PRINT $Tax_File_Nbr10 (,33)
  PRINT $Tax_File_Nbr11 (,36)
  PRINT $Tax_File_Nbr12 (,39)
  PRINT $Tax_File_Nbr13 (,42)
    
  !8.
  PRINT $GPMY_SECTA_8_LBL (+5,2)
  GRAPHIC (-1,23,35) BOX 3 10
  if $Mar_Status = 'M'
     let $Malay_Mar_Status = $GPMY_MARRIED_LBL
  else
     let $Malay_Mar_Status = $GPMY_SINGLE_LBL
  end-if
  print $Malay_Mar_Status (+1,24)
  
  
  !9.
  
  PRINT $GPMY_SECTA_9_LBL (+4,2)
  PRINT $GPMY_SECTA_9_SUB1_LBL (+4,3)
  PRINT $GPMY_SECTA_9_SUB3_LBL (,31)
  GRAPHIC (-1,23,3) BOX 3 10
  GRAPHIC (,26,3) BOX 3 10
  let $Child_Cnt = edit(#ChildCnt,'09')
  let $Child_cnt1 = substr($Child_Cnt,1,1)
  let $Child_cnt2 = substr($Child_Cnt,2,1)
  
  PRINT $Child_cnt1 (+1,24)
  PRINT $Child_cnt2 (,27)
  
  PRINT $GPMY_SECTA_9_SUB4_LBL (+4,3)
  print $GPMY_RM_LBL (,19) 
  PRINT #CLM_TX_DED_CHLD  (, 24)
  GRAPHIC (-1,23,20) BOX 3 10
  
  
  !10.
  PRINT $GPMY_SECTA_10_LBL (+5,2)
  PRINT $GPMY_SECTA_10_SUB1_LBL (+2, 4)
  GRAPHIC (+2,3,55) BOX 3 10
  DO CHECK_WIDTH ($SPOUSE_name, 44,$SPOUSE_name,$SPOUSE_name_add)
  print     $SPOUSE_name  (+1,4)
  GRAPHIC (+2,3,55) BOX 3 10  
  PRINT $SPOUSE_name_add (+1,4)

  
   !10 b.
   
     let $SPOUSE_IC_Nbr1      = ''
     let $SPOUSE_IC_Nbr2      = ''
     let $SPOUSE_IC_Nbr3      = ''
     let $SPOUSE_IC_Nbr4      = ''
     let $SPOUSE_IC_Nbr5      = ''
     let $SPOUSE_IC_Nbr6      = ''
     let $SPOUSE_IC_Nbr7      = ''
     let $SPOUSE_IC_Nbr8      = ''
     let $SPOUSE_IC_Nbr9      = ''
     let $SPOUSE_IC_Nbr10     = ''
     let $SPOUSE_IC_Nbr11     = ''
     let $SPOUSE_IC_Nbr12     = ''  
    
    let $SPOUSE_ic_Nbr     = $SPOUSE_IC_Nbr
    let $SPOUSE_IC_Nbr = replace($SPOUSE_IC_Nbr, '-', '')
    let $SPOUSE_IC_Nbr = rtrim(ltrim($SPOUSE_IC_Nbr, ' '), ' ')
    
    let $SPOUSE_IC_Nbr1    = substr($SPOUSE_ic_Nbr,1,1)
    let $SPOUSE_IC_Nbr2    = substr($SPOUSE_ic_Nbr,2,1)
    let $SPOUSE_IC_Nbr3    = substr($SPOUSE_ic_Nbr,3,1)
    let $SPOUSE_IC_Nbr4    = substr($SPOUSE_ic_Nbr,4,1)
    let $SPOUSE_IC_Nbr5    = substr($SPOUSE_ic_Nbr,5,1)
    let $SPOUSE_IC_Nbr6    = substr($SPOUSE_ic_Nbr,6,1)
    let $SPOUSE_IC_Nbr7    = substr($SPOUSE_ic_Nbr,7,1)
    let $SPOUSE_IC_Nbr8    = substr($SPOUSE_ic_Nbr,8,1)
    let $SPOUSE_IC_Nbr9   = substr($SPOUSE_ic_Nbr,9,1)
    let $SPOUSE_IC_Nbr10   = substr($SPOUSE_ic_Nbr,10,1)
    let $SPOUSE_IC_Nbr11   = substr($SPOUSE_ic_Nbr,11,1)
    let $SPOUSE_IC_Nbr12   = substr($SPOUSE_ic_Nbr,12,1)
    
    
  PRINT $GPMY_SECTA_10_SUB2_LBL (+4,3)
  GRAPHIC (+2,4,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10

  print $SPOUSE_IC_Nbr1    (+1 ,5 )
  print $SPOUSE_IC_Nbr2    ( ,8 )
  print $SPOUSE_IC_Nbr3    ( ,11 )
  print $SPOUSE_IC_Nbr4    ( ,14 )
  print $SPOUSE_IC_Nbr5    ( ,17 )
  print $SPOUSE_IC_Nbr6    ( ,20 )
  print $SPOUSE_IC_Nbr7    ( ,23 )
  print $SPOUSE_IC_Nbr8    ( ,26 )
  print $SPOUSE_IC_Nbr9    ( ,29 )
  print $SPOUSE_IC_Nbr10   ( ,32 )
  print $SPOUSE_IC_Nbr11   ( ,35 )
  print $SPOUSE_IC_Nbr12   ( ,38 )

  
  
  !10 c.
  
  PRINT $GPMY_SECTA_10_SUB3_LBL (+4,3)
    let $SPOUSE_TFN_Nbr1    = ''
    let $SPOUSE_TFN_Nbr2    = ''
    let $SPOUSE_TFN_Nbr3    = ''
    let $SPOUSE_TFN_Nbr4    = ''
    let $SPOUSE_TFN_Nbr5    = ''
    let $SPOUSE_TFN_Nbr6    = ''
    let $SPOUSE_TFN_Nbr7    = ''
    let $SPOUSE_TFN_Nbr8    = ''
    let $SPOUSE_TFN_Nbr9    = ''
    let $SPOUSE_TFN_Nbr10   = ''
    let $SPOUSE_TFN_Nbr11   = ''
    let $SPOUSE_TFN_Nbr12   = ''
    let $SPOUSE_TFN_Nbr13   = ''
    
    let $SPOUSE_TFN = replace($SPOUSE_TFN, '-', '')
    let $SPOUSE_TFN = rtrim(ltrim($SPOUSE_TFN, ' '), ' ')
    
    let #slen = length($SPOUSE_TFN)
    
    if #slen > 0
    let $SPOUSE_TFN_Nbr1    = substr($SPOUSE_TFN,1,1)
        if #slen > 4
    let $SPOUSE_TFN_Nbr2    = substr($SPOUSE_TFN,2,1)
        end-if
        if #slen > 5
    let $SPOUSE_TFN_Nbr3    = substr($SPOUSE_TFN,3,1)
        end-if
        if #slen > 6
    let $SPOUSE_TFN_Nbr4    = substr($SPOUSE_TFN,4,1)
        end-if
        if #slen > 7
    let $SPOUSE_TFN_Nbr5    = substr($SPOUSE_TFN,5,1)
        end-if
        if #slen > 8
    let $SPOUSE_TFN_Nbr6    = substr($SPOUSE_TFN,6,1)
        end-if
        if #slen > 9
    let $SPOUSE_TFN_Nbr7    = substr($SPOUSE_TFN,7,1)
        end-if
        if #slen > 10
    let $SPOUSE_TFN_Nbr8    = substr($SPOUSE_TFN,8,1)
        end-if
        if #slen > 11
    let $SPOUSE_TFN_Nbr9    = substr($SPOUSE_TFN,9,1)
        end-if
        if #slen > 12
    let $SPOUSE_TFN_Nbr10   = substr($SPOUSE_TFN,10,1)
        end-if
        !let $SPOUSE_TFN_Nbr11   = '--'
        let $SPOUSE_TFN_Nbr11   = substr($SPOUSE_TFN,#slen - 2,1)
        let $SPOUSE_TFN_Nbr12   = substr($SPOUSE_TFN,#slen - 1,1)
        !let $SPOUSE_TFN_Nbr13   = '(' || substr($SPOUSE_TFN,#slen,1) || ')'
        let $SPOUSE_TFN_Nbr13   = substr($SPOUSE_TFN,#slen,1) 
     end-if
        
  
  GRAPHIC (+2,4,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10  
  GRAPHIC (  ,+4,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  GRAPHIC (  ,+3,3) BOX 3 10
  
  print $SPOUSE_TFN_Nbr1    ( +1, 5)
  print $SPOUSE_TFN_Nbr2    ( ,8 )
  print $SPOUSE_TFN_Nbr3    ( ,12 )
  print $SPOUSE_TFN_Nbr4    ( ,15 )
  print $SPOUSE_TFN_Nbr5    ( ,18 )
  print $SPOUSE_TFN_Nbr6    ( ,21 )
  print $SPOUSE_TFN_Nbr7    ( ,24)
  print $SPOUSE_TFN_Nbr8    ( ,27 )
  print $SPOUSE_TFN_Nbr9    ( ,30 )
  print $SPOUSE_TFN_Nbr10   ( ,33 )
  print $SPOUSE_TFN_Nbr11   ( ,36 )
  print $SPOUSE_TFN_Nbr12   ( ,39 )
  print $SPOUSE_TFN_Nbr13   ( ,42 )
  print $SPOUSE_TFN_Nbr14   ( ,45 )
  
 PRINT $GPMY_SECTA_11_LBL (36, 61)
 GRAPHIC (+1,63, 46) BOX 3 10
 PRINT $EMPL_PHONE  (+1, 65)
 
 
 !12.
 PRINT $GPMY_SECTA_12_LBL (+5,61) 
 GRAPHIC (+2,63, 46) BOX 3 10
 DO CHECK_WIDTH ($Addr1, 40,$Addr1,$Addr1_add)
 print $Addr1 (+1, 64)
 
 GRAPHIC (+2,63, 46) BOX 3 10
 let $Addr2 = ltrim(rtrim(($Addr1_add || ' ' || $Addr2),' '),' ')
 DO CHECK_WIDTH ($Addr2, 40,$Addr2,$Addr2_add)
 print $Addr2 (+1, 64)
 
 GRAPHIC (+2,63, 46) BOX 3 10
 let $Addr3 = ltrim(rtrim(($Addr2_add || ' ' || $Addr3),' '),' ')
 DO CHECK_WIDTH ($Addr3, 40,$Addr3,$Addr3_add)
 print $Addr3 (+1, 64)
 
 GRAPHIC (+2,63, 46) BOX 3 10
 let $Addr4 = ltrim(rtrim(($Addr3_add),' '),' ')
 DO CHECK_WIDTH ($Addr4, 40,$Addr4,$Addr4_add)
 print $Addr4 (+1, 64)
 
 GRAPHIC (+2,63, 46) BOX 3 10
 
 
 
 GRAPHIC (+4,63, 4) BOX 4 10
 alter-printer point-size=8 font=5  
 PRINT $GPMY_SECTA_12_SUB1_LBL (+1,69)
 PRINT $GPMY_SECTA_12_SUB2_LBL   (+1, 69)
 
  alter-printer point-size=9 font=5 
  !13. 
  

   IF $ACTION = 'TER' AND   $ACTION_RSN  = 'DEA'
    ELSE
      LET $ECo_NAME = ''
      LET $ECo_Addr1 = ''
      LET $ECo_Addr2 = ''
      LET $ECo_Addr3 = ''
      LET $ECo_Addr4 =''
      LET $ECo_PHONE = ''
  END-IF
    
  PRINT $GPMY_SECTA_13_LBL (+5,61)
  
  alter-printer point-size=9 font=32
  PRINT $GPMY_SECTA_13_I_LBL ( ,81)
    
  alter-printer point-size=9 font=5 
  PRINT $GPMY_SECTA_13_SUB1_LBL (+2,63)
  GRAPHIC (+2,63, 46) BOX 3 10
  PRINT $ECo_NAME (+1,65)
                  
  PRINT $GPMY_SECTA_13_SUB2_LBL  (+5, 63)
  GRAPHIC (+2,63,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  GRAPHIC (,+3,3) BOX 3 10
  
  PRINT $GPMY_SECTA_13_SUB3_LBL    (+5,63)
  GRAPHIC (+2,63, 46) BOX 3 10
 DO CHECK_WIDTH ($ECo_Addr1, 40,$ECo_Addr1,$ECo_Addr1_add)
 print $ECo_Addr1 (+1, 64)
 GRAPHIC (+2,63, 46) BOX 3 10
 
 let $ECo_Addr2 = ltrim(rtrim(($ECo_Addr1_add || ' ' || $ECo_Addr2),' '),' ')
 DO CHECK_WIDTH ($ECo_Addr2, 40,$ECo_Addr2,$ECo_Addr2_add)
 print $ECo_Addr2 (+1, 64)
 GRAPHIC (+2,63, 46) BOX 3 10
 
 let $ECo_Addr3 = ltrim(rtrim(($ECo_Addr2_add || ' ' || $ECo_Addr3),' '),' ')
 DO CHECK_WIDTH ($ECo_Addr3, 40,$ECo_Addr3,$ECo_Addr3_add)
 print $ECo_Addr3 (+1, 64)
 GRAPHIC (+2,63, 46) BOX 3 10
 
 let $ECo_Addr4 = ltrim(rtrim(($ECo_Addr3_add),' '),' ')
 DO CHECK_WIDTH ($ECo_Addr4, 40,$ECo_Addr4,$ECo_Addr4_add)
 print $ECo_Addr4 (+1, 64)
 GRAPHIC (+2,63, 46) BOX 3 10
 
 PRINT $GPMY_SECTA_13_SUB4_LBL    (+7,63)
 PRINT $ECo_PHONE  (,80)
 GRAPHIC (-1,78, 31) BOX 3 10
 
  
  ! New Page
 new-page
 
 !SECTION B
  alter-printer point-size=9 font=5 
  GRAPHIC (1,1,109) BOX 2 10 100
  print $GPMY_SECTION_B_LBL (+1,2) bold
  foreground = ('white')
  
  graphic (,55,64) vert-line 1 
  GRAPHIC (+1,1,109) BOX 67 10  
  
  print $GPMY_SECTB_SUB1_LBL (+1, 2)
  print $GPMY_SECTB_SUB2_LBL (+2,2)
  print $GPMY_SECTB_SUB3_LBL (+2,2)
  graphic (+1,1,109) HORZ-line 1         !Main      
  
   alter-printer point-size=8 font=5 
  
  ! pAY END DATE CALCULATION
  if (&C.TERMINATION_DT < &pay_end_dt and &C.TERMINATION_DT <> '')
     move &C.TERMINATION_DT to $pay_end_dt 'DD/MM/YYYY'
  else
    move &pay_end_dt to $pay_end_dt 'DD/MM/YYYY'
  end-if

 print $GPMY_SECTB_1_LBL  (+2,2)
   if #EmplSalary > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #EmplSalary       (,98) edit 9,999,999,999.99
  Graphic (,1,109) HORZ-line 1         !1
 
 print $GPMY_SECTB_2_LBL (+2,2)
  if #EmplLeavePay > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #EmplLeavePay       (,98) edit 9,999,999,999.99 
 graphic (,1,109) HORZ-line 1         !2
 
 print $GPMY_SECTB_3_LBL (+2,2)
   if #EmplBonus > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #EmplBonus       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !3
 
 print $GPMY_SECTB_4_LBL (+2,2)
  if #Gratuity > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #Gratuity       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !4
 
 print $GPMY_SECTB_5_LBL (+2,2)
   if #Compensation > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #Compensation       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !5
 
 print $GPMY_SECTB_6_LBL  (+2,2)
 print $GPMY_SECTB_6_SUB1_LBL  (+2,4)
 LET  #EmplOthAllow = #Tax_borne + #EmplOthAllow
  if #EmplOthAllow > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #EmplOthAllow       (,98) edit 9,999,999,999.99
 print $GPMY_DOT_LBL (,25,60) fill
 graphic (,1,109) HORZ-line 1           !6
 
 print $GPMY_SECTB_7_LBL  (+2,2)
 if #PensionER > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #PensionER       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !7
 
 print $GPMY_SECTB_8_LBL (+2,2) 
   if #BIK_LIABLE_TAX > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #BIK_LIABLE_TAX       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !8
 
 print $GPMY_SECTB_9_LBL  (+2,2)
  if #EmplGratuity > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #EmplGratuity       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !9
 
 print $GPMY_SECTB_10_LBL (+2,2)
 print $GPMY_SECTB_10_SUB1_LBL (+2,5)
   if #EmplAllowance > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #EmplAllowance       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !10
 
 print $GPMY_SECTB_11_LBL (+2,2)
  if #car > 0
    print $TaxStartPeriod   (,62)
    print $pay_end_dt       (,82)
  end-if
  print #car       (,98) edit 9,999,999,999.99
 graphic (,1,109) HORZ-line 1         !11
 
 print $GPMY_SECTB_12_LBL  (+2,2)
  print ''  (,62)
  print ''       (,82)
  print '0.00'       (,98) edit 9,999,999,999.99
 print $GPMY_DOT_LBL (+1,5,100) fill
 graphic (,1,109) HORZ-line 1           !12
 graphic ( ,97,13) HORZ-LINE 10 
  
  
 print $GPMY_SECTB_13_LBL (+4,2)
 print $GPMY_SECTB_13_SUB1_LBL  (+2,5)
 
 print $GPMY_SECTB_13_SUB2_LBL  (+3,2)
 print $GPMY_SECTB_13_SUB3_LBL  (+2,3)
 print $GPMY_DOT_LBL (,23,60) fill
 
 print $GPMY_SECTB_13_SUB4_LBL (+2,3)
 print $GPMY_DOT_LBL (,30,45) fill
 
 
 graphic (66,1,109) HORZ-line 1
 print $GPMY_ALL_JUMLAH_LBL (+2,2) BOLD
  
  
  !section c
  alter-printer point-size=9 font=5 
  GRAPHIC (+3,1,109) BOX 2 10 100
  print $GPMY_SECTION_C_LBL (+1,2) bold
  foreground = ('white')
  
  
  alter-printer point-size=8 font=5 
  graphic (, 5,12) vert-line 1 
  graphic (,26,12) vert-line 1 
  graphic (,54,12) vert-line 1 
  graphic (,84,12) vert-line 1 
  GRAPHIC (+1,1,109) BOX 12 10
  
  print $GPMY_SECTC_1_SUB1_LBL (+1,2)
  print $GPMY_SECTC_1_SUB2_LBL (,8)
  print $GPMY_SECTC_1_SUB3_LBL (,32)
  print $GPMY_SECTC_1_SUB4_LBL (,57)
  print $GPMY_SECTC_1_SUB5_LBL (,87)
  graphic (,1,109) HORZ-line 1
  
  
  print $GPMY_SECTC_1_LN1_LBL (+2,2)
  graphic (+1,1,109) HORZ-line 1
  
  print $GPMY_SECTC_1_LN2_LBL (+2,2)
  graphic (+1,1,109) HORZ-line 1
  
  print $GPMY_SECTC_1_LN3_LBL (+2,2)
  graphic (+1,1,109) HORZ-line 1
  
  
  !section d
  alter-printer point-size=9 font=5 
  GRAPHIC (+2,1,109) BOX 2 10 100
  print $GPMY_SECTION_D_LBL (+1,2) bold
  foreground = ('white')
  
  
  alter-printer point-size=8 font=5 
  GRAPHIC (+1,1,109) BOX 12 10  
  
  print $GPMY_SECTD_1_LBL (+1,2)
  print $GPMY_RM_LBL (,87) BOLD
  print #EmplNet       (,93) edit 9,999,999,999.99
  print $GPMY_DOT_LBL (+1,90,43) fill
  graphic (-1,1,109) HORZ-line 1
  
  print $GPMY_SECTD_2_LBL (+2,2)
  print $GPMY_RM_LBL (,87) BOLD
  print #EmplTax       (,93) edit 9,999,999,999.99
  print $GPMY_DOT_LBL (+1,90,43) fill
  graphic (-1,1,109) HORZ-line 1
  
  print $GPMY_SECTD_3_LBL (+2,2)
  print $GPMY_RM_LBL (,87) BOLD
  PRINT #ZAKAT_YTD (,93) edit 9,999,999,999.99
  print $GPMY_DOT_LBL (+1,90,43) fill
  graphic (-1,1,109) HORZ-line 1
  
  print $GPMY_SECTD_4_LBL (+2,2)
  print $GPMY_RM_LBL (,87) BOLD
  print #EmplEPF       (,93) edit 9,999,999,999.99
  print $GPMY_DOT_LBL (+1,90,43) fill
  graphic (-1,1,109) HORZ-line 1
  graphic (,1,109) HORZ-line 1
  
  !SECTION E
  alter-printer point-size=9 font=5 
  GRAPHIC (+2,1,109) BOX 2 10 100
  print $GPMY_SECTION_E_LBL (+1,2) bold
  foreground = ('white')
  
  
  alter-printer point-size=8 font=5 
  GRAPHIC (+1,1,109) BOX 26 10 
  
  PRINT $GPMY_SECTE_1_LBL (+3,2)
  GRAPHIC (-2,23,83) BOX 4 10
    print $Responsible_person  (+1,26)
  graphic (+3,1,109) HORZ-line 1

  PRINT $GPMY_SECTE_2_LBL (+4,2)
  GRAPHIC (-2,23,83) BOX 4 10
  print $jobtitle (+1,26)
  graphic (+3,1,109) HORZ-line 1
  
  PRINT $GPMY_SECTE_3_LBL (+4,2)
  GRAPHIC (-2,23,35) BOX 6 10
  graphic (+6,1,109) HORZ-line 1
  
  PRINT $GPMY_SECTE_4_LBL (125,2)
  GRAPHIC (124,23,3) BOX 3 10
  GRAPHIC (,26,3) BOX 3 10
  GRAPHIC (,30,3) BOX 3 10
  GRAPHIC (,33,3) BOX 3 10
  GRAPHIC (,37,3) BOX 3 10
  GRAPHIC (,40,3) BOX 3 10
  Let $proc_dt = $Current-date  
  let $dd1   = substr(edit($Current-date,'dd'),1,1)
  let $dd2   = substr(edit($Current-date,'dd'),2,1)
  let $mm1   = substr(edit($Current-date,'mm'),1,1)
  let $mm2   = substr(edit($Current-date,'mm'),2,1)
  let $yy1   = substr(edit($Current-date,'yy'),1,1)
  let $yy2   = substr(edit($Current-date,'yy'),2,1)
  
  print $dd1 (125,24)
  print $dd2 (,27)
  print $mm1 (,31)
  print $mm2 (,34)
  print $yy1 (,38)
  print $yy2 (,41)
  
  !SECTION B VERTICALLY
  
  graphic (5,55,55) HORZ-line 1  
  graphic ( ,97,64) VERT-LINE 1    
  graphic (+2,55,42) HORZ-line 1 
  graphic ( ,76,43) VERT-LINE 1  
  
  
  PRINT $GPMY_SECTB_SUB4_LBL (4,78) BOLD
  PRINT $GPMY_SECTB_SUB5_LBL  (7,73)
  PRINT $GPMY_SECTB_SUB6_LBL (9,64)
  PRINT $GPMY_SECTB_SUB7_LBL (,84)
  PRINT $GPMY_RM_LBL (7,102) BOLD
  
  
  PRINT $GPMY_SECTB_STOCK1_LBL (53,56)
  GRAPHIC (-1,76,3) BOX 3 10
  GRAPHIC (,79,3) BOX 3 10
  GRAPHIC (,83,3) BOX 3 10
  GRAPHIC (,86,3) BOX 3 10
  GRAPHIC (,90,3) BOX 3 10
  GRAPHIC (,93,3) BOX 3 10  
  
  
  
  PRINT $GPMY_SECTB_STOCK2_LBL (57,56)
  GRAPHIC (-1,76,3) BOX 3 10
  GRAPHIC (,79,3) BOX 3 10
  GRAPHIC (,83,3) BOX 3 10
  GRAPHIC (,86,3) BOX 3 10
  GRAPHIC (,90,3) BOX 3 10
  GRAPHIC (,93,3) BOX 3 10  
  
  
  PRINT $GPMY_SECTB_STOCK3_LBL (61,56)
  GRAPHIC (-1,76,3) BOX 3 10
  GRAPHIC (,79,3) BOX 3 10
  GRAPHIC (,83,3) BOX 3 10
  GRAPHIC (,86,3) BOX 3 10
  GRAPHIC (,90,3) BOX 3 10
  GRAPHIC (,93,3) BOX 3 10  
  
  
  GRAPHIC (64,97,13) BOX 3 2
  PRINT $GPMY_RM_LBL (+1,93) BOLD
  PRINT $GPMY_SECTB_STOCK4_LBL  (,56)
  GRAPHIC (67,97,13) BOX 3 10
  PRINT $GPMY_RM_LBL (+1,93) BOLD
  let #Grand_Total =  #EmplSalary + #EmplLeavePay + #EmplBonus + #Gratuity + #Compensation + #EmplOthAllow + #PensionER + #EmplGratuity + #EmplAllowance + #car +#BIK_LIABLE_TAX
  print #Grand_Total       (,98) edit 9,999,999,999.99
  
  NEW-PAGE
 
  

end-procedure



!***********************************************************************
!Procedure - MalayLanguageCode
!***********************************************************************
Begin-Procedure MalayLanguageCode

      do Get_Field_Information ('GPMYTX03', 'GPMY_MAIN',$GPMY_MAIN_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_TITLE',$GPMY_TITLE_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_TITLE1',$GPMY_TITLE1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_CP22APIN',$GPMY_CP22APIN_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_FORMIRB',$GPMY_FORMIRB_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_FORMIRB1',$GPMY_FORMIRB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_FORMIRB2',$GPMY_FORMIRB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_FROM',$GPMY_FROM_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_EMPLR_TX',$GPMY_EMPLR_TX_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_EMPLR_PHN',$GPMY_EMPLR_PHN_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTION_A',$GPMY_SECTION_A_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_1',$GPMY_SECTA_1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_2',$GPMY_SECTA_2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_3',$GPMY_SECTA_3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_3_SUB',$GPMY_SECTA_3_SUB_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_4',$GPMY_SECTA_4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_5',$GPMY_SECTA_5_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_5_SUB1',$GPMY_SECTA_5_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_5_SUB2',$GPMY_SECTA_5_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_5_SUB3',$GPMY_SECTA_5_SUB3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_6',$GPMY_SECTA_6_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_7',$GPMY_SECTA_7_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_8',$GPMY_SECTA_8_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_9',$GPMY_SECTA_9_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_9_SUB1',$GPMY_SECTA_9_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_9_SUB2',$GPMY_SECTA_9_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_9_SUB3',$GPMY_SECTA_9_SUB3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_9_SUB4',$GPMY_SECTA_9_SUB4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_RM',$GPMY_RM_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_10',$GPMY_SECTA_10_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_10_SUB1',$GPMY_SECTA_10_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_10_SUB2',$GPMY_SECTA_10_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_10_SUB3',$GPMY_SECTA_10_SUB3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_11',$GPMY_SECTA_11_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_12',$GPMY_SECTA_12_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_12_SUB1',$GPMY_SECTA_12_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_12_SUB2',$GPMY_SECTA_12_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_13',$GPMY_SECTA_13_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_13_I',$GPMY_SECTA_13_I_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_13_SUB1',$GPMY_SECTA_13_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_13_SUB2',$GPMY_SECTA_13_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_13_SUB3',$GPMY_SECTA_13_SUB3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTA_13_SUB4',$GPMY_SECTA_13_SUB4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTION_B',$GPMY_SECTION_B_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_SUB1',$GPMY_SECTB_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_SUB2',$GPMY_SECTB_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_SUB3',$GPMY_SECTB_SUB3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_SUB4',$GPMY_SECTB_SUB4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_SUB5',$GPMY_SECTB_SUB5_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_SUB6',$GPMY_SECTB_SUB6_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_SUB7',$GPMY_SECTB_SUB7_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_1',$GPMY_SECTB_1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_2',$GPMY_SECTB_2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_3',$GPMY_SECTB_3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_4',$GPMY_SECTB_4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_5',$GPMY_SECTB_5_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_6',$GPMY_SECTB_6_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_6_SUB1',$GPMY_SECTB_6_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_DOT',$GPMY_DOT_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_7',$GPMY_SECTB_7_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_8',$GPMY_SECTB_8_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_9',$GPMY_SECTB_9_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_10',$GPMY_SECTB_10_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_10_SUB1',$GPMY_SECTB_10_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_11',$GPMY_SECTB_11_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_12',$GPMY_SECTB_12_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_13',$GPMY_SECTB_13_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_13_SUB1',$GPMY_SECTB_13_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_13_SUB2',$GPMY_SECTB_13_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_13_SUB3',$GPMY_SECTB_13_SUB3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_13_SUB4',$GPMY_SECTB_13_SUB4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_STOCK1',$GPMY_SECTB_STOCK1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_STOCK2',$GPMY_SECTB_STOCK2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_STOCK3',$GPMY_SECTB_STOCK3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTB_STOCK4',$GPMY_SECTB_STOCK4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_ALL_JUMLAH',$GPMY_ALL_JUMLAH_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTION_C',$GPMY_SECTION_C_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_SUB1',$GPMY_SECTC_1_SUB1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_SUB2',$GPMY_SECTC_1_SUB2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_SUB3',$GPMY_SECTC_1_SUB3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_SUB4',$GPMY_SECTC_1_SUB4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_SUB5',$GPMY_SECTC_1_SUB5_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_LN1',$GPMY_SECTC_1_LN1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_LN2',$GPMY_SECTC_1_LN2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTC_1_LN3',$GPMY_SECTC_1_LN3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTION_D',$GPMY_SECTION_D_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTD_1',$GPMY_SECTD_1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTD_2',$GPMY_SECTD_2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTD_3',$GPMY_SECTD_3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTD_4',$GPMY_SECTD_4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTION_E',$GPMY_SECTION_E_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTE_1',$GPMY_SECTE_1_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTE_2',$GPMY_SECTE_2_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTE_3',$GPMY_SECTE_3_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SECTE_4',$GPMY_SECTE_4_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_E',$GPMY_E_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_MARRIED',$GPMY_MARRIED_LBL,#DW)
     do Get_Field_Information ('GPMYTX03', 'GPMY_SINGLE',$GPMY_SINGLE_LBL,#DW)



End-Procedure

!***********************************************************************
!Procedure - Emergency Contact
!***********************************************************************
begin-Procedure emergency_contact
 LET $COUNTRY = ''
 LET $STATE = ''
 let $ECo_Addr1 = ''
 let $ECo_Addr2 = ''
 let $ECo_Addr3 = ''
 LET $ECo_NAME =  ''
 LET $ECo_PHONE = ''
 
begin-SELECT
EC.CONTACT_NAME
EC.ADDRESS1
EC.ADDRESS2
EC.ADDRESS3
EC.ADDRESS4
EC.CITY
EC.COUNTRY
EC.STATE
EC.POSTAL
EC.PHONE 

                LET $ECo_NAME = &EC.CONTACT_NAME
                LET $ECo_PHONE  = &EC.PHONE
                LET $COUNTRY = &EC.COUNTRY
                LET $STATE = &EC.STATE
                DO COUNTRY_STATE_DESCR
                let $ECo_Addr1 = rtrim(&EC.ADDRESS1,' ') ||' ' || rtrim(&EC.ADDRESS2,' ')
                let $ECo_Addr2 = rtrim(&EC.ADDRESS3,' ') ||' ' || rtrim(&EC.ADDRESS4,' ')
                let $ECo_Addr3 = rtrim(&EC.CITY,' ') ||' ' ||rtrim($STATE_DESCR,' ') ||' ' || rtrim(&EC.POSTAL,' ') ||' ' ||rtrim($COUNTRY_DESCR,' ')

FROM PS_EMERGENCY_CNTCT EC
WHERE EC.PRIMARY_CONTACT = 'Y' 
AND EC.EMPLID = $Emplid
End-Select
end-procedure

!***********************************************************************
!Procedure - Country and state
!***********************************************************************
begin-Procedure COUNTRY_STATE_DESCR
  LET $STATE_DESCR = ''
  LET $COUNTRY_DESCR = ''
BEGIN-SELECT
CD.DESCR
   LET $COUNTRY_DESCR = &CD.DESCR
FROM PS_COUNTRY_TBL CD
WHERE CD.COUNTRY = $COUNTRY
END-SELECT

BEGIN-SELECT
SD.DESCR
    LET $STATE_DESCR = &SD.DESCR
FROM PS_STATE_TBL SD
WHERE SD.COUNTRY = $COUNTRY
AND SD.STATE = $STATE

End-Select
end-procedure

!***********************************************************************
!  Procedure: begin-CHECK_WIDTH                                        *
!             Check the width                              *
!***********************************************************************
BEGIN-PROCEDURE CHECK_WIDTH ($Field_input, #field_width,:$Field_output,:$extra_data)
 Let $extra_data = ''
 let $Field_output = ''
 
  let $Field_input = rtrim($Field_input, ' ')
  let $Field_input = ltrim($Field_input, ' ')
  
  let #Field_input_len = length($Field_input)
  
  if #Field_input_len > #field_width
     let $Field_output = substr($Field_input, 1, #field_width)
     let $extra_data = substr($Field_input, #field_width + 1 , #Field_input_len)
  else
     let $Field_output = $Field_input
     Let $extra_data = ''
  end-if

End-Procedure


!***********************************************************************
!  Procedure: Report-Parm-Clean                                        *
!             Clean the run control tables                             *
!***********************************************************************
begin-Procedure Report-Parm-Clean

begin-sql
DELETE FROM PS_GPMY_RPT_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_PR_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_EMPL_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

end-Procedure



!********************************************************************************
#include 'prcslng.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'ldnumlit.sqc'  !Load-NumberLits-Array procedure
!#Include 'netinwds.sqc'
#include 'readxlat.sqc'  !enables xlat table read
#Include 'rotname1.sqc'  !Rotate-Name Procedure
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#Include 'datemath.sqc'  !Routines for date manipulat
#Include 'adformat.sqc'   !formating address added on 27th feb 2003
#include 'rellang.sqc' !





