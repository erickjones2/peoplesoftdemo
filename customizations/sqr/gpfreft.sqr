!*********************************************
!  GPFREFT:  Electronic Funds Transfer (FRA) *
!*********************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:43:12                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

!----------------------------------------------------------------------*
! Program Desc: This program creates an ASCII file that conforms       *
!               to the CFONB standard for electronic payments orders   *
!               via ETEBAC.                                            *
!***********************************************************************
#include 'setenv.sqc'    !Set environment

Begin-Setup
#Include 'ptset02.sqc'   !Printer and page-size initialization
End-Setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

!#Include 'setup01.sqc'   !Printer and page-size initialization

begin-heading 7
  #Include 'stdhdgtr.sqc'

end-heading

begin-procedure Init-Report
  move 'FREFT' to $ReportID
  move 'ETEBAC' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD

  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)

  if $prcs_process_instance = ''
        !No Prompt
  else
        let #prcs_process_instance = To_number($prcs_process_instance)
        Do Get-values
  end-if
end-procedure Init-Report

begin-procedure Get-Values
!No values
end-procedure Get-Values

begin-procedure Process-Main
        do open1
        !/*close all open files*/
        do Close-File
  do DELET-GPFR-EFT-SRCBNK
  do DELET-RUN-CONTROL
end-procedure Process-Main

!***********************************************************************
! NAMING THE OUTPUT FILES                                              *
!***********************************************************************

begin-procedure Open1
   let $sql-statement = 'GPFREFT,Select, Open1'
   let #count = 0

begin-select
CAL_RUN_ID
PAY_ENTITY
!/* select CAL_RUN_ID & PAY_ENTITY FROM GPFR_EFT_RNCTL */
        let $CAL_RUN_ID          = &CAL_RUN_ID
        let $PAY_ENTITY          = &PAY_ENTITY
        
FROM
        PS_GPFR_EFT_RNCTL 
  where
        OPRID = $prcs_oprid
        AND RUN_CNTL_ID = $prcs_run_cntl_id
end-select

begin-select
SRC_BANK_ID
GPFR_FILE_NAME
!/* select source bank id & the corresponding file name from GPFR_EFT_SRCBNK*/
        let $fill                = ' '
        let $fill2               = '0'
        let $SRC_BANK_ID         = &SRC_BANK_ID
        let $GPFR_FILE_NAME      = &GPFR_FILE_NAME
        do Get-Source-Bank-Description
        do Open2
       
FROM
        PS_GPFR_EFT_SRCBNK 
  where
        OPRID = $prcs_oprid
        AND RUN_CNTL_ID = $prcs_run_cntl_id

end-select

end-procedure Open1

begin-procedure Open2

        let $ETEBAC_file_created = 'N'
        let $ETEBAC_FILE = $GPFR_FILE_NAME
                
        if $ETEBAC_file_created = 'N'
               let #count = #count+1
                open $ETEBAC_FILE as #count FOR-WRITING record=178:Vary Status=#OpenStat
        end-if
        If #OpenStat <> 0
              Show 'Error in Openning File : ' $ETEBAC_FILE
        End-If 
        do Write-ETEBAC-File
        
end-procedure Open2

!***********************************************************************

begin-procedure Write-ETEBAC-File
! Gromit#5933801, Fin-Debug-Msg not found with Oracle
!  #debug do Fin-Debug-Msg('Write-ETEBAC-File')
   
  if $ETEBAC_file_created <> 'Y'
        
        do TOTAL_AMOUNT
        do ISSUER_SELECT
        do TOTAL_RECORD
  end-if

end-procedure Write-ETEBAC-File
!***********************************************************************
!  Procedure: Close-File                                               *
!             Close the file if open                                   *
!             processing.                                              *
!***********************************************************************
begin-procedure Close-File
  let #M = 1
  while #M < #count
    close #M
    let #M = #M+1
  end-while  
end-procedure

!***********************************************************************
!  FREFT:  ISSUER_SELECT                                               *
!***********************************************************************

begin-procedure ISSUER_SELECT
   let $flag_03 = 'N'
   let $sql-statement = 'GPFREFT,Select, ISSUER_SELECT'
Begin-select

!Issuer
BANK_TRANSFER_ID
CURRENCY_CD
GPFR_BANK_CD
GPFR_BRANCH_EC_CD
GPFR_ACCOUNT_EC_ID

!Receiver
EMPLID
INSTANCE
SUM(GP_PMT_AMT) * 100  &GP_PMT
PMT_STATUS
BANK_CD
BRANCH_EC_CD
ACCOUNT_EC_ID
NAME
GPFR_BANK_NAME
GPFR_BANK_PAY_DT

        let #INSTANCE           = &INSTANCE                             ! Parameter for Updating
        let $SRC_BANK_ID        = &SRC_BANK_ID                          ! Parameter for Updating
     
! RECORD ISSUER ....................................................................

        let $ISSUERID           = &BANK_TRANSFER_ID                     ! Zone B3
        let $GPFR_BANK_PAY_DT   = &GPFR_BANK_PAY_DT                     ! Zone C1-3
        do  SRCH_SOURCE_BANK                                            ! Zone C2
        let $CURRENCY_CD        = &CURRENCY_CD                          ! Zone D2-1
        let $GPFR_BRANCH_EC_CD  = &GPFR_BRANCH_EC_CD                    ! Zone D3
        let $GPFR_ACCOUNT_EC_ID = &GPFR_ACCOUNT_EC_ID                   ! Zone D4
        let $GPFR_BANK_CD       = &GPFR_BANK_CD                         ! Zone G1
!...................................................................................

        DO MOIS_DE

! RECORD receiver ..................................................................

        let $REFERENCE          = &EMPLID                               ! Zone C1
        let $NAME               = &NAME                                 ! Zone C2
        let $BANK_NAME          = &GPFR_BANK_NAME                       ! Zone D1
        let $BRANCH_EC_CD       = &BRANCH_EC_CD                         ! Zone D3
        let $ACCOUNT_EC_ID      = &ACCOUNT_EC_ID                        ! Zone D4
        move '0000000000000999'  to $mask                               ! Zone E
        move &GP_PMT to $GP_PMT_AMT :$mask
        let $DESCRIPTION        = ')'||$MOIS_DE                         ! Zone F
        let $BANK_CD            = &BANK_CD                              ! Zone G1
        let $GPFR_BANK_PAY_DT   = &GPFR_BANK_PAY_DT                     ! Zone
!...................................................................................

        if $flag_03 = 'N'
           DO ISSUER_RECORD
           let $flag_03 = 'Y'
        end-if

        DO RECEIVER_RECORD
        DO UPDATE_GPFR_PAYMENT

FROM
        PS_GPFR_PAYMENT
WHERE
        CAL_RUN_ID       = $CAL_RUN_ID
        AND PAY_ENTITY   = $PAY_ENTITY
        AND SRC_BANK_ID  = $SRC_BANK_ID 
        AND PAYMENT_MTHD = 'T'
        AND PMT_STATUS   = 'P'
        AND GP_PMT_AMT > 0
        GROUP BY INSTANCE,PMT_STATUS,
        BANK_TRANSFER_ID,CURRENCY_CD,
        GPFR_BANK_CD,GPFR_BRANCH_EC_CD,
        GPFR_ACCOUNT_EC_ID,EMPLID,
        BANK_CD,BRANCH_EC_CD,ACCOUNT_EC_ID,
        GPFR_BANK_NAME,NAME,GPFR_BANK_PAY_DT 
        
end-select

end-procedure ISSUER_SELECT

!***********************************************************************
!  FREFT:  ISSUER_RECORD                                               *
!***********************************************************************
begin-procedure ISSUER_RECORD

     write #count from
      
     
      '03':2                            !- Record ID - A
      '02':2                            !- Operation ID - B1
      
      
      $fill:8                           !- Filler - B2
      $ISSUERID:6                       !- Issuer Number - B3
      $fill:1                           !- CCD Code - C1-1
      $fill:6                           !- Filler - C1-2
      $GPFR_BANK_PAY_DT:5               !- Date - C1-3
      $SRC_BANK_ACC_NAME:24             !- Name of the transfer initiator - C2
      $fill:7                           !- Remittance reference - D1-1
      $fill:17                          !- Filler - D1-2
      $fill:2                           !- filler - D2
      $CURRENCY_CD:1                    !- Currency Index - D2-1
      $fill:5                           !- filler - D2-2
      $GPFR_BRANCH_EC_CD:5              !- Bank agency of the transfer initiator - D3
      $GPFR_ACCOUNT_EC_ID:11            !- Account # of the payor - D4
      $fill:16                          !- Transfer initiator ID - E (to be verified)
      $fill:31                          !- filler - F
      $GPFR_BANK_CD:5                   !- Bank ID of the payor - G1
      $fill:6                           !- filler - G2
    

end-procedure ISSUER_RECORD

!***********************************************************************
!  FREFT:  RECEIVER_RECORD                                             *
!***********************************************************************
begin-procedure RECEIVER_RECORD

      write #count from
      '06':2                            !- Record ID - A
      '02':2                            !- Operation ID - B1
      $fill:8                           !- Filler - B2
      $ISSUERID:6                       !- Issuer Number - B3
      $REFERENCE:12                     !- Reference - C1
      $NAME:24                          !- Name of the receiver - C2
      $BANK_NAME:24                     !- Receiver's bank name - D1
      $fill:8                           !- Zone d2
      $BRANCH_EC_CD:5                   !- Receiver's bank branch ID - D3
      $ACCOUNT_EC_ID:11                 !- Receiver's account - D4
      $GP_PMT_AMT                       !- Transfer amount - E
      $DESCRIPTION:31                   !- Description - F
      $BANK_CD:5                        !- Receiver's bank ID - G1
      $fill:6                           !- filler - G2

end-procedure RECEIVER_RECORD

!***********************************************************************
!  FREFT:  TOTAL_RECORD                                                *
!***********************************************************************

begin-procedure TOTAL_RECORD

let $ETEBAC_file_created = 'Y'

   write #count from
      '08':2                            !- Record ID - A
      '02':2                            !- Operation ID - B1
      $fill:8                           !- Filler - B2
      $ISSUERID:6                       !- Issuer # - B3
      $fill:12                          !- Filler - C1
      $fill:24                          !- Filler - C2
      $fill:24                          !- Filler - D1
      $fill:8                           !- Filler - D2
      $fill:5                           !- Filler - D3
      $fill:11                          !- Filler - D4
      $TOTAL_AMOUNT:16                  !- Total amount - E
      $fill:31                          !- filler - F
      $fill:5                           !- filler - G1
      $fill:6                           !- filler - G2

end-procedure TOTAL_RECORD

!***********************************************************************
!  FREFT:  SEARCHING FOR THE SOURCE BANK LABEL                         *
!***********************************************************************
begin-procedure SRCH_SOURCE_BANK
   let $sql-statement = 'GPFREFT,Select, SRCH_SOURCE_BANK'
begin-SELECT
ACCOUNT_NAME &SRC_BANK_ACC_NAME
        let $SRC_BANK_ACC_NAME  = &SRC_BANK_ACC_NAME                    ! Zone C2
FROM  PS_SRC_BANK
WHERE SRC_BANK_ID = $SRC_BANK_ID
end-SELECT
end-procedure SRCH_SOURCE_BANK

!***********************************************************************
!  FREFT:  UPDATE_GPFR_PAYMENT                                         *
!***********************************************************************
begin-procedure UPDATE_GPFR_PAYMENT
begin-SQL

UPDATE PS_GPFR_PAYMENT
 SET PMT_STATUS = 'T'

 where
        CAL_RUN_ID       = $CAL_RUN_ID
        AND PAY_ENTITY   = $PAY_ENTITY
        AND EMPLID       = $REFERENCE
        AND SRC_BANK_ID  = $SRC_BANK_ID
        AND INSTANCE     = #INSTANCE
        AND PAYMENT_MTHD = 'T'
        AND PMT_STATUS   = 'P'
       AND GP_PMT_AMT > 0
end-SQL
begin-SQL
 UPDATE PS_GPFR_PAYMENT
 SET PMT_STATUS = 'N'
 where
         CAL_RUN_ID       = $CAL_RUN_ID
         AND PAY_ENTITY   = $PAY_ENTITY
         AND EMPLID       = $REFERENCE
         AND SRC_BANK_ID  = $SRC_BANK_ID
         AND INSTANCE     = #INSTANCE
         AND PAYMENT_MTHD = 'T'
         AND PMT_STATUS   = 'P'
            AND GP_PMT_AMT < 0
      
end-SQL
end-procedure UPDATE_GPFR_PAYMENT
!***********************************************************************
!  FREFT:  MOIS_DE                                                     *
!***********************************************************************
begin-procedure MOIS_DE

let $CONSTANTE_MOIS = 'Paie du mois de '
let $MOIS_DE = SUBSTR($GPFR_BANK_PAY_DT,3,2)
if $MOIS_DE = '01'
let $MOIS_DE = $CONSTANTE_MOIS || 'Janvier'
end-if
if $MOIS_DE = '02'
let $MOIS_DE = $CONSTANTE_MOIS || 'Fevrier'
end-if
if $MOIS_DE = '03'
let $MOIS_DE = $CONSTANTE_MOIS || 'Mars'
end-if
if $MOIS_DE = '04'
let $MOIS_DE = $CONSTANTE_MOIS || 'Avril'
end-if
if $MOIS_DE = '05'
let $MOIS_DE = $CONSTANTE_MOIS || 'Mai'
end-if
if $MOIS_DE = '06'
let $MOIS_DE = $CONSTANTE_MOIS || 'Juin'
end-if
if $MOIS_DE = '07'
let $MOIS_DE = $CONSTANTE_MOIS || 'Juillet'
end-if
if $MOIS_DE = '08'
let $MOIS_DE = $CONSTANTE_MOIS || 'Aout'
end-if
if $MOIS_DE = '09'
let $MOIS_DE = $CONSTANTE_MOIS || 'Septembre'
end-if
if $MOIS_DE = '10'
let $MOIS_DE = $CONSTANTE_MOIS || 'Octobre'
end-if
if $MOIS_DE = '11'
let $MOIS_DE = $CONSTANTE_MOIS || 'Novembre'
end-if
if $MOIS_DE = '12'
let $MOIS_DE = $CONSTANTE_MOIS || 'Decembre'
end-if

end-procedure MOIS_DE

!***********************************************************************
!  FREFT:  TOTAL_AMOUNT                                                *
!***********************************************************************
begin-procedure TOTAL_AMOUNT
   let $sql-statement = 'GPFREFT,Select, TOTAL_AMOUNT'
Begin-select
SUM(GP_PMT_AMT) * 100        &GPFR_TOTAL

! RECORD total .....................................................................
        move '0000000000000999'  to $mask
        move &GPFR_TOTAL to $TOTAL_AMOUNT :$mask                        ! Zone E
!...................................................................................

FROM PS_GPFR_PAYMENT
  WHERE
        CAL_RUN_ID       = $CAL_RUN_ID
        AND PAY_ENTITY   = $PAY_ENTITY
        AND PAYMENT_MTHD = 'T'
        AND PMT_STATUS   = 'P'
        AND SRC_BANK_ID = $SRC_BANK_ID
        AND GP_PMT_AMT > 0
end-select
end-procedure TOTAL_AMOUNT

!***********************************************************************
!  FREFT:  Get-Source-Bank-Description                                 *
!***********************************************************************

begin-procedure Get-Source-Bank-Description
Begin-select
DESCR  &DES 
  let $DES = &DES
  PRINT 'DESC:'(, 20,5)
  PRINT $DES (,27,20)
FROM PS_SRC_BANK
WHERE SRC_BANK_ID = $SRC_BANK_ID  
end-select
end-procedure Get-Source-Bank-Description

!****************************************************************************
! DELET-RUN-CONTROL                                                        *
! Deletes run control information from GPFR_EFT_RNCTL table.                   *
!****************************************************************************
begin-procedure DELET-RUN-CONTROL
  let $err-statement1 = 'GPFREFT, Delete-Error - DELETE-RUN-CONTROL'
  let $err-statement2 = 'Key Values: TABLE PS_GPFR_EFT_RNCTL' ||
                        ', OPRID ' || $PRCS_OPRID ||
                        ', RUN_CNTL_ID ' || $PRCS_RUN_CNTL_ID ||
      ', CAL_RUN_ID ' || $CAL_RUN_ID ||
      ', PAY_ENTITY ' || $PAY_ENTITY

begin-SQL On-Error=Error-Display

DELETE FROM PS_GPFR_EFT_RNCTL
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID


end-SQL

end-procedure

!****************************************************************************
! DELETE-GPFR-EFT-SRCBNK                                                         *
! Deletes GPFR_EFT_SRCBNK table                              .                   *
!****************************************************************************
begin-procedure DELET-GPFR-EFT-SRCBNK

  let $err-statement1 = 'GPFREFT, Delete-Error - DELETE-GPFR-EFT-SRCBNK'
  let $err-statement2 = 'Key Values: TABLE PS_GPFR_EFT_SRCBNK'

begin-SQL On-Error=Error-Display

DELETE FROM PS_GPFR_EFT_SRCBNK
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL

  do COMMIT-TRANSACTION

end-procedure

!************************************************************************
!End of the SQR statements                                              *
!************************************************************************

#include 'hrctlfra.sqc'  !Get run control parameter values
#Include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'    !Reset printer procedure !Earlier it was reset1.sqc
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#Include 'getprimj.sqc'  !Routines for selecting EE's primary job
#Include 'stderror.sqc'  !Routine for error display
!#Include 'hrsecty.sqc'    !Read SQR Security Parameters  
!***********************************************************************
