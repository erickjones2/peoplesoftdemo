!******************************************
!  GPNZQS01:  Quarterly Employment Survey *
!******************************************
!***********************************************************************
!                                           5                           *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:58:46                                 *
!       $Release:  HR92                                                *
!      $Revision:  102                                                 *
!                                                                      *
!***********************************************************************
! Currently there is no provision to track Student and Proprietors     *
! those row values are not counted and printed in the report           *
!***********************************************************************
!
!
!Begin Resolution 719713
! #FC  = Female Contractor
! #GFC  = Grand Female Contractor

! #MC  = Male Contractor
! #GMC  =Grand Male Contractor

! #UC  = Unknown Contractor
! #GUC  =Grand Unknown Contractor
! #GTC  = Grand Total Contractor

! #FFT = Female_Full_Time
! #GFFT = Grand_Female_Full_Time
! #FPT = Female_Part_Time
! #GFPT = Grand_Female_Part_Time

! #FCT = Female_Casual_Time
! #GFCT = Grand_Female_Casual_Time

! #GMFT = Grand_Male_Full_Time
! #MFT = Male_Full_Time
! #GMFT = Grand_Male_Full_Time
! #MCT = Male Casual Time
! #GMCT = Grand_Male Casual Time

! #UFT = Unknown_Full_Time
! #GUFT = Grand_Unknown_Full_Time
! #UPT = Unknown_Part_Time
! #GUPT = Grand_Unknown_Part_Time
! #UCT = Unknown Casual Time
! #GUCT = Grand_Unknown Casual Time
!
! #MOV = Male Ordinary Value
! #GMOV = Grand Male Ordinary Value
! #FOV = Female Ordinary Value
! #GFOV = Grand Female Ordinary Value
! #UOV = Unknown Ordinary Value
! #GUOV = Grand Unknown Ordinary Value
!
! #MVV = Male Overtime Value
! #GMVV = Grand Male Overtime Value
! #FVV = Female Overtime Value
! #GFVV = Grand Female Overtime Value
! #UVV = Unknown Overtime Value
! #GUVV = Grand Unknown Overtime Value
!
! #MOH = Male Ordinary Hours
! #GMOH = Grand Male Ordinary Hours
! #FOH = Female Ordinary Hours
! #GFOH = Grand Female Ordinary Hours
! #UOH = Unknown Ordinary Hours
! #GUOH = Grand Unknown Ordinary Hours
!
! #MVH = Male  Overtime Hours
! #GMVH = Grand Male  Overtime Hours
! #FVH = Female Overtime Hours
! #GFVH = Grand Female Overtime Hours
! #UVH = Unknown Overtime Hours
! #GUVH = Grand Unknown Overtime Hours

!End Resolution 719713

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !page layout and printer definition
#include 'number.sqc'   !Routines to format numbers
#include 'datetime.sqc' !Routines for date and time formatting
#include 'prcsapi.sqc'  !Replaces stdapi.sqc

begin-report
  do Init-DateTime
  do Init-Number
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  do Get-Current-DateTime
  do Select-Parameters
  do Init-Report
  do Process-Main
  do Update-Prcs-Run-Status
  do Reset
  do Delete-RunControl
end-report

begin-procedure Init-Report
   if RTRIM($Location, ' ') <> ''
     Let $LocationCondition = 'AND J.LOCATION = '
     let $LocationCondition = $LocationCondition || '''' || $Location || ''''
   end-if
end-procedure


!***********************************************************************
! Select-Parameters                                                    *
! Called By:                                                           *
! Calls:                                                               *
! Description:  Selects level zero information off of run control.     *
!***********************************************************************
begin-procedure Select-Parameters
BEGIN-SELECT
LVL0.OPRID
LVL0.RUN_CNTL_ID
LVL0.PAY_ENTITY
LVL0.LOCATION
LVL0.FROMDATE
LVL0.THRUDATE

     let $Pay_Entity   = &LVL0.PAY_ENTITY
     let $Location     = &LVL0.LOCATION
     let $FromDate     = &LVL0.FROMDATE
     let $ThruDate       = &LVL0.THRUDATE


from PS_GPNZ_RUNCTL_QES LVL0
    WHERE LVL0.OPRID = $PRCS_OPRID
          AND LVL0.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
end-select
end-procedure

begin-heading 7
    #Include 'stdhdg01.sqc'
    #Include 'stdhdg08.sqc'
end-heading


!
!***********************************************************************
! Process-Main                                                         *
! Called By:                                                           *
! Calls:        Format-DateTime                                        *
!               Get-Rslt-Ern-Ded                                       *
!               Get-Rslt-Accum                                         *
! Description:  Retrieves segment information to be printed in page    *
!               header.                                                *
!***********************************************************************

begin-procedure Process-Main
do Append_Report_Translation ('GPNZQS01')

      do Get_Field_Information ('GPNZQS01', 'GPNZ_QES_LBL',   $GPNZ_QES_LBL,#DW)
      do Get_Field_Information ('GPNZQS01', 'REPORT_ID',      $REPORT_ID,   #DW)
      do Get_Field_Information ('GPNZQS01', 'FT_EMPL',        $FT_EMPL,     #DW)
      do Get_Field_Information ('GPNZQS01', 'PT_EMPL',        $PT_EMPL,     #DW)
      do Get_Field_Information ('GPNZQS01', 'CS_EMPL',        $CS_EMPL,     #DW)
      do Get_Field_Information ('GPNZQS01', 'CONTRACTOR',     $CONTRACTOR,  #DW)
      do Get_Field_Information ('GPNZQS01', 'ORDN_PAYOUT',    $ORDN_PAYOUT, #DW)
      do Get_Field_Information ('GPNZQS01', 'OT_PAYOUT',      $OT_PAYOUT,   #DW)
      do Get_Field_Information ('GPNZQS01', 'ORDN_HRS',       $ORDN_HRS,    #DW)
      do Get_Field_Information ('GPNZQS01', 'OT_HRS',         $OT_HRS,      #DW)
      do Get_Field_Information ('GPNZQS01', 'FOR_PRD',        $FOR_PRD,     #DW)
      do Get_Field_Information ('GPNZQS01', 'THR_PRD',        $THR_PRD,     #DW)
      do Get_Field_Information ('GPNZQS01', 'RUNDATE',        $RUNDATE,     #DW)
      do Get_Field_Information ('GPNZQS01', 'RUNTIME',        $RUNTIME,     #DW)

move $REPORT_ID    to    $ReportID
move $GPNZ_QES_LBL to    $ReportTitle

LET $QES_ORDINARY_PAY     = 'QES AC ORDINARY NZL'

LET $QES_ORDINARY_HRS     = 'QES AC ORD HRS NZL'

LET $QES_OVERTIME         = 'QES AC OVERTIME NZL'

LET $QES_OVT_HRS          = 'QES AC OVT HRS NZL'

LET $QES_pin_code         =  $QES_ORDINARY_PAY
do Get_QES_PIN_NUM

LET $QES_pin_code         =  $QES_ORDINARY_HRS
do Get_QES_PIN_NUM

LET $QES_pin_code         =  $QES_OVERTIME
do Get_QES_PIN_NUM

LET $QES_pin_code         =  $QES_OVT_HRS
do Get_QES_PIN_NUM

let #MC = 0
let #FC = 0
let #UC = 0
let #MFT = 0
let #FFT = 0
let #UFT = 0
let #MPT = 0
let #FPT = 0
let #UPT = 0
let #MCT = 0
let #FCT = 0
let #UCT = 0
let #MOV = 0.0
let #FOV = 0.0
let #UOV = 0.0
let #MVV = 0.0
let #FVV = 0.0
let #UVV = 0.0
let #MOH = 0.0
let #FOH = 0.0
let #UOH = 0.0
let #MVH = 0.0
let #FVH = 0.0
let #UVH = 0.0


Let $First = 'Y'
BEGIN-SELECT DISTINCT
J.EMPLID &J.EMPLID
        move &J.EMPLID to $Emplid

J.SETID_LOCATION &J.SETID_LOCATION
        move &J.SETID_LOCATION to $SetID_Location

J.LOCATION &J.LOCATION () on-break print=never level=1 skiplines=1 after=AltProcedure
        move 0 to #Flag

        if $FirstRec = ''
           let $FirstRec = 'N'
           if &J.LOCATION <> ' '

           do PrintLocation(&J.LOCATION,$SetID_Location)
           end-if
           move 1 to #Flag
        end-if
        let $Loc_Code = &J.LOCATION



CALPRD.FREQUENCY_ID () on-break print=never level=2 skiplines=1 after= PrintFreqtotal before=Before-PayFrequency


PRCSTAT.PRD_END_DT &PRCSTAT.PRD_END_DT
        Move &PRCSTAT.PRD_END_DT to $Period_End_Date

        if $FirstFreq = ''
           MOVE &CALPRD.FREQUENCY_ID TO $PayFreq
           if #Flag = 0
              if &J.LOCATION <> ' '
              do PrintLocation(&J.LOCATION,$SetID_Location)
              move 1 to #Flag
              end-if
           END-IF
           Do Get-Frequency-Descr (&CALPRD.FREQUENCY_ID, $FreqDescr)
           Do Print-Freq-Descr (&CALPRD.FREQUENCY_ID, $FreqDescr)

           move 'N' to $FirstFreq
        end-if
        if $PreviousFreq <> &CALPRD.FREQUENCY_ID
           MOVE &CALPRD.FREQUENCY_ID TO $PayFreq
           !Move &CALPRD.FREQUENCY_ID to $PreviousFreq
           if #Flag = 0
              if &J.LOCATION <> ' '
              do PrintLocation(&J.LOCATION,$SetID_Location)
              end-if

           END-IF
           Do Get-Frequency-Descr (&CALPRD.FREQUENCY_ID, $FreqDescr)
           Do Print-Freq-Descr (&CALPRD.FREQUENCY_ID, $FreqDescr)
        end-if

SEGSTAT.CAL_RUN_ID &SEGSTAT.CAL_RUN_ID
SEGSTAT.SEG_END_DT &SEGSTAT.SEG_END_DT
        MOVE &SEGSTAT.SEG_END_DT to $Seg_end_dt
J.EMPL_RCD
PP.SEX
J.COMPANY
J.PAYGROUP
J.FULL_PART_TIME &Full_Part_Time
J.EMPL_CLASS &J.EMPL_CLASS
        Move &J.EMPL_CLASS to $EmplClass
        Move &PP.SEX to $Sex
J.REG_TEMP

SEGSTAT.EMPL_RCD &SEGSTAT.EMPL_RCD
J.FULL_PART_TIME &J.FULL_PART_TIME
J.STD_HOURS
        let #Std_Hours = &J.STD_HOURS
SEGSTAT.RSLT_SEG_NUM
        let  #Seg_Num = &SEGSTAT.RSLT_SEG_NUM
SEGSTAT.CAL_ID &SEGSTAT.CAL_ID
        Move &SEGSTAT.CAL_ID to $Seg_Cal_ID
SEGSTAT.GP_PAYGROUP &SEGSTAT.GP_PAYGROUP
        Move &SEGSTAT.GP_PAYGROUP to $Seg_Pay_Grp

        if RTRIM($EmplClass, ' ') <> 'R'  ! Do the following counts only if employee is not contractor
           if &CALPRD.FREQUENCY_ID <> $PreviousFreq
               if $Emplid <> $PrevEmplid
                  if &J.FULL_PART_TIME <> 'D'
                     Evaluate $Sex
                       when = 'F' ! Do counting for Females
                           Evaluate #Std_Hours
                               when >= 30
                                   Add 1 to #FFT   ! Full Time Female Employee Count
                               when < 30
                                   Add 1 to #FPT   ! Part Time Female Employee Count
                           end-evaluate

                       when = 'M' ! Do counting for Males
                           Evaluate #Std_Hours
                                when >= 30
                                    Add 1 to #MFT   ! Full Time Male Employee Count

                                when < 30
                                    Add 1 to #MPT    ! Part Time Male Employee Count
                           end-evaluate
                       !Begin Resolution 719713
                       when = 'U' ! Do counting for Males
                           Evaluate #Std_Hours
                                when >= 30
                                    Add 1 to #UFT   ! Full Time Unknown Employee Count
                                when < 30
                                    Add 1 to #UPT    ! Part Time Unknown Employee Count

                           end-evaluate
                       !End Resolution 719713
                    end-evaluate


                  else
                    Evaluate $Sex
                      when = 'F' ! Do counting for Females
                           Add 1 to #FCT   ! Casual Time Female Employee Count
                      when = 'M' ! Do counting for Males
                           Add 1 to #MCT   ! Casual Time Male Employee Count
                      !Begin Resolution 719713
                      when = 'U' ! Do counting for Unknows
                           Add 1 to #UCT   ! Casual Time Unknown Employee Count
                      !End Resolution 719713
                      end-evaluate
                  end-if
               end-if
            else
                if $Emplid <> $PrevEmplid
                   if &J.FULL_PART_TIME <> 'D'
                      Evaluate $Sex
                          when = 'F' ! Do counting for Females
                              Evaluate #Std_Hours
                                  when >= 30
                                           Add 1 to #FFT   ! Full Time Female Employee Count
                                  when < 30
                                           Add 1 to #FPT   ! Part Time Female Employee Count
                              end-evaluate

                          when = 'M' ! Do counting for Males
                              Evaluate #Std_Hours
                                   when >= 30
                                           Add 1 to #MFT   ! Full Time Male Employee Count
                                   when < 30
                                           Add 1 to #MPT    ! Part Time Male Employee Count
                              end-evaluate
                          !Begin Resolution 719713
                          when = 'U' ! Do counting for Males
                              Evaluate #Std_Hours
                                   when >= 30
                                           Add 1 to #UFT   ! Full Time Unknown Employee Count
                                   when < 30
                                           Add 1 to #UPT    ! Part Time Unknown Employee Count
                              end-evaluate
                          !End Resolution 719713
                          end-evaluate
                    else
                        Evaluate $Sex
                           when = 'F' ! Do counting for Females
                                Add 1 to #FCT   ! Casual Time Female Employee Count
                           when = 'M' ! Do counting for Males
                                Add 1 to #MCT   ! Casual Time Male Employee Count
                           !Begin Resolution 719713
                           when = 'U' ! Do counting for Males
                                Add 1 to #UCT   ! Casual Time Unknown Employee Count
                           !End Resolution 719713
                        end-evaluate
                    end-if
                end-if
            end-if
        else
        !Begin Resolution 719713
            !if &CALPRD.FREQUENCY_ID <> $PreviousFreq
              if ($Emplid <> $PrevEmplid)
                Evaluate $Sex
                   when = 'F'
                        Add 1 to #FC
                   when = 'M'
                        Add 1 to #MC
                   when = 'U'
                        Add 1 to #UC
                 end-evaluate

                !if $Sex = 'F'
                    !Add 1 to #FC
                  !else
                           !Add 1 to #MC
                  !end-if
                !else
                   !if $Emplid <> $PrevEmplid
                       !if $Sex = 'F'
                           !Add 1 to #FC
                       !else
                           !Add 1 to #MC
                       !end-if
                 !end-if
               end-if
            ! end-if
        end-if
        !End Resolution 719713
        let $Pay_end_date = &PRCSTAT.PRD_END_DT
        let #Empl_Rec     = &SEGSTAT.EMPL_RCD
        let $Cal_Run_Id   = &SEGSTAT.CAL_RUN_ID
        move $Emplid to $PrevEmplid
        Move &CALPRD.FREQUENCY_ID to $PreviousFreq

        let $QES_pin_code  =  $QES_ORDINARY_PAY
        let #QES_pin_num   =  #QES_ORDINARY_PAY_Pin_Num
        do Get-QES_Accum                              ! Get Gross Earnings

        let $QES_pin_code  =  $QES_ORDINARY_HRS
        let #QES_pin_num   =  #QES_ORDINARY_HRS_Pin_Num
        do Get-QES_Accum                              ! Get Standard Hours

        let $QES_pin_code  =  $QES_OVERTIME
        let #QES_pin_num   =  #QES_OVERTIME_Pin_Num
        do Get-QES_Accum                              ! Get Overtime Earnings

        let $QES_pin_code=  $QES_OVT_HRS
        let #QES_pin_num =  #QES_OVT_Pin_Num
        do Get-QES_Accum                              ! Get Overtime Hours



FROM PS_JOB J,
PS_GP_PYE_PRC_STAT     PRCSTAT,
PS_GP_CALENDAR         GPCAL1,
PS_GP_RUN_TYPE         GPRUNTYPE1,
PS_GP_PYE_SEG_STAT     SEGSTAT,
PS_JOB_JR              JOBJR,
PS_GP_CAL_PRD          CALPRD,
PS_PERS_DATA_EFFDT     PP

             WHERE PRCSTAT.EMPLID = J.EMPLID
             and PRCSTAT.EMPL_RCD = J.EMPL_RCD
             and J.EFFDT >= (Select MAX(EFFDT) from PS_JOB J1
               where J1.EMPLID = J.EMPLID
                   and J1.EMPL_RCD = J.EMPL_RCD
                    and J1.LOCATION=J.LOCATION )
             and PRCSTAT.PAY_ENTITY    = $Pay_Entity
             AND SEGSTAT.CALC_ACTION   = 'C'
             AND SEGSTAT.PYE_CALC_STAT IN ('50', '70', '55', '60', '65', '75')
             AND PRCSTAT.RSLT_REV_NUM  = 1
             AND PRCSTAT.PYE_PRC_IND   = 'N'
             AND PRCSTAT.SEL_STAT      = 'A'
             AND PRCSTAT.SEL_ACTION    = 'C'
             AND PRCSTAT.PRD_END_DT    >= $FromDate
             AND PRCSTAT.PRD_END_DT    <= $ThruDate
             AND SEGSTAT.RSLT_SEG_NUM  > 0
             AND GPRUNTYPE1.CALC_TYPE  = 'P'
             and PRCSTAT.GP_PAYGROUP = GPCAL1.GP_PAYGROUP
             and PRCSTAT.CAL_ID = GPCAL1.CAL_ID
             AND GPCAL1.RUN_TYPE       = GPRUNTYPE1.RUN_TYPE
             and SEGSTAT.EMPLID = J.EMPLID
             and SEGSTAT.EMPL_RCD = J.EMPL_RCD
             and SEGSTAT.GP_PAYGROUP = GPCAL1.GP_PAYGROUP
             and SEGSTAT.CAL_ID = GPCAL1.CAL_ID
             and SEGSTAT.ORIG_CAL_RUN_ID = PRCSTAT.ORIG_CAL_RUN_ID
             and JOBJR.EMPLID = J.EMPLID
             and JOBJR.EMPL_RCD = J.EMPL_RCD
             and JOBJR.EFFDT = J.EFFDT
             and JOBJR.EFFSEQ = J.EFFSEQ
             and PP.EMPLID = J.EMPLID
             and PRCSTAT.PRD_END_DT = CALPRD.PRD_END_DT
             and PRCSTAT.CAL_RUN_ID = SEGSTAT.CAL_RUN_ID
             and PRCSTAT.CAL_ID = GPCAL1.CAL_ID
             and PRCSTAT.CAL_ID = SEGSTAT.CAL_ID
             AND PRCSTAT.CAL_PRD_ID     = CALPRD.CAL_PRD_ID
             AND PRCSTAT.RSLT_VER_NUM  = (SELECT MAX(RSLT_VER_NUM) FROM PS_GP_PYE_PRC_STAT
                             WHERE EMPLID      = SEGSTAT.EMPLID
                                   AND CAL_RUN_ID  = SEGSTAT.CAL_RUN_ID
                                   AND EMPL_RCD    = SEGSTAT.EMPL_RCD
                                   AND GP_PAYGROUP = SEGSTAT.GP_PAYGROUP
                                   AND CAL_ID      = SEGSTAT.CAL_ID)
              AND JOBJR.EFFDT           = (SELECT MAX(EFFDT) FROM PS_JOB_JR
                             WHERE EMPLID   = SEGSTAT.EMPLID
                                   AND EMPL_RCD = SEGSTAT.EMPL_RCD
                                   AND EFFDT   <= SEGSTAT.SEG_END_DT)
              AND JOBJR.EFFSEQ          = (SELECT MAX(EFFSEQ) FROM PS_JOB_JR
                             WHERE EMPLID   = SEGSTAT.EMPLID
                                   AND EMPL_RCD = SEGSTAT.EMPL_RCD
                                      AND EFFDT    = JOBJR.EFFDT)
              [$LocationCondition]
              ORDER BY J.LOCATION , CALPRD.FREQUENCY_ID
end-SELECT
end-procedure

!
!***********************************************************************
! Get_Empl_Std_Hour                                                    *
! Called By:    Main                                                   *
! Calls:                                                               *
! Description:  Retrieve standard hours and frequency factor           *
!***********************************************************************
begin-procedure Get_Empl_Std_Hour($Pay_end_date,#Empl_Rec,$Temp_Empl_ID,:#Std_Hours)
BEGIN-SELECT
J.STD_HOURS
F.FREQ_ANNUAL_FACTOR
   let #Std_Hours = &J.STD_HOURS
   let #Freq_Factor = &F.FREQ_ANNUAL_FACTOR
FROM PS_JOB J, PS_FREQUENCY_TBL F
    WHERE J.EMPLID = $Temp_Empl_ID
    and J.EMPL_RCD = #Empl_Rec
    and J.EFFDT = (select max(H.EFFDT) from PS_JOB H
    where H.EMPLID = J.EMPLID
    and H.EMPL_RCD = J.EMPL_RCD
    and H.EFFDT <= $Pay_end_date)
    and J.EFFSEQ = (select max(I.EFFSEQ) from PS_JOB I
    where I.EMPLID = J.EMPLID
    and I.EMPL_RCD = J.EMPL_RCD
    and I.EFFDT = J.EFFDT)
    AND J.STD_HRS_FREQUENCY = F.FREQUENCY_ID
    AND F.EFF_STATUS = 'A'
END-SELECT
end-procedure  ! Get_Empl_Std_Hour

begin-procedure Get-Location-Name
begin-SELECT
LT.DESCR
    Move &LT.DESCR TO $LocDescr
from PS_LOCATION_TBL LT
    WHERE LT.LOCATION = $Loc_Code
    AND LT.EFFDT= (SELECT MAX(LT1.EFFDT) FROM PS_LOCATION_TBL LT1
                        WHERE LT1.LOCATION=LT.LOCATION)
    AND SETID = $SetID_Location
end-SELECT
end-procedure !Get-Location-Name



begin-procedure AltProcedure
Move '' to $FirstRec
end-procedure !AltProcedure


begin-procedure PrintLocation ($LocCode,$SetID_Location)
!do Get-Location-Name ($LocCode, $SetID_Location, $locDescr)

!print $LocCode   (+1,1)
!print $LocDescr  (,12)
!print 'Male'     (,70)
!print 'Female'   (,88)
end-procedure !PrintLocation

begin-procedure Get-Frequency-Descr ($PayFreq, :$FreqDescr)
begin-SELECT
X.DESCRSHORT &FreqDescr
     Move &FreqDescr to $FreqDescr
from PS_FREQUENCY_TBL X
     WHERE X.FREQUENCY_ID = $PayFreq
     AND X.EFFDT = (SELECT MAX(X1.EFFDT)
                    FROM PS_FREQUENCY_TBL X1
                    WHERE X1.FREQUENCY_ID = X.FREQUENCY_ID
                    AND X1.EFFDT <= $Period_End_Date)
end-SELECT
end-procedure ! Get-Frequency-Descr

!***********************************************************************
! Get-Amounts-Withheld                                                 *
! Called By:    Main                                                   *
! Calls:        Read-Rslt-Accum                                        *
! Description:  Retrieves accumulators for QES                         *
!***********************************************************************

begin-procedure Get-QES_Accum

BEGIN-SELECT
ACCUM2.EMPLID
ACCUM2.CALC_VAL
!Begin Resolution 719713
    if $QES_pin_code  =  $QES_ORDINARY_PAY    !For Calculating Ordinary Amounts
       !if $sex = 'M'
          !let #MOV = #MOV + &ACCUM2.CALC_VAL
       !else
          !let #FOV = #FOV + &ACCUM2.CALC_VAL

       !end-if

       !if $sex = 'F'
          !let #FOV = #FOV + &ACCUM2.CALC_VAL

       !else
         !if $sex = 'M'
          !let #MOV = #MOV + &ACCUM2.CALC_VAL
          ! end-if
       !end-if

    Evaluate $Sex
                          when = 'M'
                               let #MOV = #MOV + &ACCUM2.CALC_VAL  !For Calculating Ordinary Amounts
                          when = 'F'
                               let #FOV = #FOV + &ACCUM2.CALC_VAL
                          when = 'U'
                               let #UOV = #UOV + &ACCUM2.CALC_VAL
     end-evaluate


    end-if
    if $QES_pin_code  =  $QES_ORDINARY_HRS    !For Calculating Ordinary Hours
       !if $sex = 'M'
          !let #MOH = #MOH + &ACCUM2.CALC_VAL
       !else
           !let #FOH = #FOH + &ACCUM2.CALC_VAL
       !end-if


    Evaluate $Sex
                          when = 'M'
                               let #MOH = #MOH + &ACCUM2.CALC_VAL  !For Calculating Ordinary Hours
                          when = 'F'
                               let #FOH = #FOH + &ACCUM2.CALC_VAL
                          when = 'U'
                               let #UOH = #UOH + &ACCUM2.CALC_VAL
     end-evaluate


    end-if
    if $QES_pin_code =  $QES_OVERTIME         !For Calculating Over Time Amounts
       !if $sex = 'M'
          !let #MVV = #MVV + &ACCUM2.CALC_VAL
       !else
          !let #FVV = #FVV + &ACCUM2.CALC_VAL
       !end-if

    Evaluate $Sex
                          when = 'M'
                               let #MVV = #MVV + &ACCUM2.CALC_VAL  !For Calculating Over Time Amounts
                          when = 'F'
                               let #FVV = #FVV + &ACCUM2.CALC_VAL
                          when = 'U'
                               let #UVV = #UVV + &ACCUM2.CALC_VAL
     end-evaluate



    end-if
    if $QES_pin_code =  $QES_OVT_HRS          !For Calculating Over Time Hours
       !if $sex = 'M'
          !let #MVH = #MVH + &ACCUM2.CALC_VAL
              !else
          !let #FVH = #FVH + &ACCUM2.CALC_VAL
       !end-if

    Evaluate $Sex
                          when = 'M'
                               let #MVH = #MVH + &ACCUM2.CALC_VAL  !For Calculating Over Time Hours
                          when = 'F'
                               let #FVH = #FVH + &ACCUM2.CALC_VAL
                          when = 'U'
                               let #UVH = #UVH + &ACCUM2.CALC_VAL
     end-evaluate

     !End Resolution 719713
    end-if
    FROM PS_GP_RSLT_ACUM ACCUM2

    WHERE ACCUM2.EMPLID        = $Emplid
      AND ACCUM2.CAL_RUN_ID    = $Cal_Run_ID
      AND ACCUM2.EMPL_RCD      = #Empl_Rec
      AND ACCUM2.EMPL_RCD_ACUM = #Empl_Rec
      AND ACCUM2.GP_PAYGROUP   = $Seg_Pay_Grp
      AND ACCUM2.CAL_ID        = $Seg_Cal_ID
      AND ACCUM2.RSLT_SEG_NUM  = #Seg_Num
      AND ACCUM2.SLICE_END_DT  = $Seg_end_dt
      AND ACCUM2.ACM_THRU_DT   = $Pay_end_date
      AND ACCUM2.PIN_NUM       = #QES_Pin_Num
      AND ACCUM2.USER_KEY2     = $Loc_Code



END-SELECT
end-procedure  !Get-QES_Accum


!***********************************************************************
! Get_QES_PIN_NUM                                                      *
! Called By:    Main                                                   *
! Calls:        Read GP_PIN to get PIN_NUM;                            *
! Description:  Retrieves accumulators QES pin nums                    *
!***********************************************************************

begin-procedure Get_QES_PIN_NUM
!** The QES Accum. are stored in PIN_CODE 'QES OVERTIME' and 'QES OVT HRS' for New Zealand -
! Hard code using PIN_CODE since it is not changed, on the other hand PIN_NUM  and PIN_NM can be changed overtime:
BEGIN-SELECT

GPPIN.PIN_NUM  &GPPIN.PIN_NUM
    Evaluate $QES_pin_code
    when = $QES_ORDINARY_PAY
           let #QES_ORDINARY_PAY_Pin_Num     = &GPPIN.PIN_NUM
           break
    when = $QES_ORDINARY_HRS
           let #QES_ORDINARY_HRS_Pin_Num      = &GPPIN.PIN_NUM
           break
    when = $QES_OVERTIME
           let #QES_OVERTIME_Pin_Num      = &GPPIN.PIN_NUM
           break
    when = $QES_OVT_HRS
           let #QES_OVT_Pin_Num  = &GPPIN.PIN_NUM
           break
    end-evaluate

  FROM PS_GP_PIN  GPPIN
  WHERE GPPIN.PIN_CODE = $QES_pin_code
END-SELECT
end-procedure  ! Get_ABS_PIN_NUM


begin-procedure Print-Freq-Descr ($PayFreq, $FreqDescr)

end-procedure ! Print-Freq-Descr

begin-procedure PrintFreqTotal

do Get-Location-Name
print $Loc_Code   (+1,1)
print $LocDescr  (,12)
print 'Male'     (,70)
print 'Female'   (,88)
print 'Unknown'   (,106)

print 'Pay Frequency        :' (+1,1)
print $PayFreq                 (,+1)
print $FreqDescr               (,+1)

print $FT_EMPL (+2,1)
print #MFT (,69) edit 99999
print #FFT (,89) edit 99999
print #UFT (,109) edit 99999

print $PT_EMPL (+1,1)
print #MPT (,69) edit 99999
print #FPT (,89) edit 99999
print #UPT (,109) edit 99999

print $CS_EMPL (+1,1)
print #MCT (,69) edit 99999
print #FCT (,89) edit 99999
print #UCT (,109) edit 99999

print $CONTRACTOR (+1,1)
print #MC  (,69) edit 99999
print #FC  (,89) edit 99999
print #UC  (,109) edit 99999

print $ORDN_PAYOUT (+1,1)

print #MOV  (,60) edit 999,999,999.99
print #FOV  (,80) edit 999,999,999.99
print #UOV  (,100) edit 999,999,999.99

print $OT_PAYOUT (+1,1)
print #MVV  (,60) edit 999,999,999.99
print #FVV  (,80) edit 999,999,999.99
print #UVV  (,100) edit 999,999,999.99

print $ORDN_HRS (+1,1)
let #MOH = round(#MOH,0)
let #FOH = round(#FOH,0)
let #UOH = round(#UOH,0)
print #MOH  (,60) edit 999,999,999.99
print #FOH  (,80) edit 999,999,999.99
print #UOH  (,100) edit 999,999,999.99

print $OT_HRS (+1,1)
let #MVH = round(#MVH,0)
let #FVH = round(#FVH,0)
let #UVH = round(#UVH,0)
print #MVH  (,60) edit 999,999,999.99
print #FVH  (,80) edit 999,999,999.99
print #UVH  (,100) edit 999,999,999.99


Move 0 to #MC
Move 0 to #FC
Move 0 to #UC
Move 0 to #MFT
Move 0 to #FFT
Move 0 to #UFT
Move 0 to #MPT
Move 0 to #FPT
Move 0 to #UPT
Move 0 to #MCT
Move 0 to #FCT
Move 0 to #UCT
Move 0 to #MOV
Move 0 to #FOV
Move 0 to #UOV
Move 0 to #MVV
Move 0 to #FVV
Move 0 to #UVV
Move 0 to #MOH
Move 0 to #FOH
Move 0 to #UOH
Move 0 to #MVH
Move 0 to #FVH
Move 0 to #UVH

end-procedure
!***********************************************************************
! Delete-RunControl                                                    *
! Called By:    begin-report                                           *
! Calls:        none                                                   *
! Description:  Delete run control when report comes to successful     *
!                   end.                                               *
!***********************************************************************

begin-procedure Delete-RunControl
begin-SQL
DELETE FROM PS_GPNZ_RUNCTL_QES
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID;
        #ifdef ORACLE
            COMMIT;
        #endif

end-SQL
end-procedure ! Delete-RunControl

!***********************************************************************
! Before-PayFrequency                                                  *
! Called By:    Main                                                   *
! Calls:        none                                                   *
! Description:  Handles page breaks                                    *
!                                                                      *
!***********************************************************************
Begin-procedure Before-PayFrequency

IF $First = 'Y'
  Let $First = 'N'
  else
  New-Page
End-IF

End-Procedure
!**********************************************************************

#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        ! Reset printer procedure



