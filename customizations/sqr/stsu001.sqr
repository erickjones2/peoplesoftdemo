!**********************************************************************
!  STSU001:  Governing Body Rules
!**********************************************************************
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2013/01/18:02:55:45                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!
!**********************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
  #include 'ptpsp125.sqc'
end-setup

#define  col2    8
#define  col3    12
#define  col4    45
#define  col5    67
#define  col6    72
#define  col7    75


!*******************************************************************
begin-program
!*******************************************************************

  do Init-DateTime         !procedure in datetime.sqc
  do Init-Number           !procedure in number.sqc
  do Get-Current-DateTime  !procedure in currdttm.sqc
  do Init-Report           !procedure in SQR

  let $timebegan =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Began: '  $timebegan  ' '

  do Process-Main          !does all report processing in SQR
  do Reset                 !procedure in reset.sqc
  do Stdapi-term           !procedure in stdapi.sqc

  let $timeEnded =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Ended: '  $timeEnded  ' '

end-program

!*******************************************************************
begin-procedure Init-Report
!*******************************************************************

  do Stdapi-Init

  let   $ReportID      =   'STSU001'

  do Get-Report-Language

  show  'FLOW: Init-Report'
  show  'Report Title: ' $STSU001

end-procedure

!*******************************************************************
begin-procedure Report-Translation
!*******************************************************************

  do Init_Report_Translation($ReportId, $Language_Cd)
  do Append_Report_Translation ($ReportID)

  do Get_Field_Information ('STSU001','MAJOR_SHAREHOLDER',  $MAJOR_SHARE_HLDR,   #DW)
  do Get_Field_Information ('STSU001','STSU001',            $REPORTTITLE,        #DW)
  do Get_Field_Information ('STSU001','GOVERN_BDY',         $GOVERN_BDY,         #DW)
  do Get_Field_Information ('STSU001','EFFDT',              $EFFDT,              #DW)
  do Get_Field_Information ('STSU001','DESCR',              $DESCR,              #DW)
  do Get_Field_Information ('STSU001','ISO_ANNL_EXER_LIM',  $ISO_ANNL_EXER_LIM,  #DW)
  do Get_Field_Information ('STSU001','ISO_OPTN_LIFE_LIM',  $ISO_OPTN_LIFE_LIM,  #DW)
  do Get_Field_Information ('STSU001','ISO_10PCT_FMV_RULE', $ISO_10PCT_FMV_RULE, #DW)
  do Get_Field_Information ('STSU001','ISO_10PCT_OPTN_LIF', $ISO_10PCT_OPTN_LIF, #DW)
  do Get_Field_Information ('STSU001','ISO_GRACE_PD_TERM',  $ISO_GRACE_PD_TERM,  #DW)
  do Get_Field_Information ('STSU001','ISO_GRACE_PD_DIS',   $ISO_GRACE_PD_DIS,   #DW)
  do Get_Field_Information ('STSU001','ISO_HOLD_PD_GRANT',  $ISO_HOLD_PD_GRANT,  #DW)
  do Get_Field_Information ('STSU001','ISO_HOLD_PD_EXER',   $ISO_HOLD_PD_EXER,   #DW)
  do Get_Field_Information ('STSU001','SECTION_83B_PERIOD', $SECTION_83B_PERIOD, #DW)
  do Get_Field_Information ('STSU001','PURCHASE_VALUE_LIM', $PURCHASE_VALUE_LIM, #DW)
  do Get_Field_Information ('STSU001','ESPP_HOLD_PD_GRANT', $ESPP_HOLD_PD_GRANT, #DW)
  do Get_Field_Information ('STSU001','ESPP_HOLD_PD_PURCH', $ESPP_HOLD_PD_PURCH, #DW)
  do Get_Field_Information ('STSU001','PURCH_DISCOUNT_LIM', $PURCH_DISCOUNT_LIM, #DW)
  do Get_Field_Information ('STSU001','OFFERING_PD_MAX',    $OFFERING_PD_MAX,    #DW)
  do Get_Field_Information ('STSU001','OPT_RULES',          $OPT_RULES,          #DW)
  do Get_Field_Information ('STSU001','ESPP_RULES',         $ESPP_RULES,         #DW)
  do Get_Field_Information ('STSU001','GRACE_PD_MTHS',      $GRACE_PD_MTHS,      #DW)
  do Get_Field_Information ('STSU001','YRS',                $YRS,                #DW)
  do Get_Field_Information ('STSU001','MTHS',               $MTHS,               #DW)
  do Get_Field_Information ('STSU001','DAYS',               $DAYS,               #DW)
  do Get_Field_Information ('STSU001','PERCENT',            $PERCENT,            #DW)
  do Get_Field_Information ('STSU001','DISQ_DISP_HOLD_PD',  $DISQ_DISP_HOLD_PD,  #DW)


end-procedure

!*******************************************************************
begin-heading 4
!*******************************************************************

#include 'stdhdgtr.sqc'

  print $GOVERN_BDY          (+1,01,14)
  print $DESCR               (0,+10,05)

end-heading

!*******************************************************************
begin-procedure Process-Main
!*******************************************************************

  display 'FLOW: Process-Main'

begin-Select
A.ST_GOVERN_CD
A.EFFDT
A.DESCR
A.ISO_ANNL_EXER_LIM
A.ISO_OPTN_LIFE_LIM
A.ISO_10PCT_FMV_RULE
A.ISO_10PCT_OPTN_LIF
A.ISO_GRACE_PD_TERM
A.ISO_GRACE_PD_DIS
A.ISO_HOLD_PD_GRANT
A.ISO_HOLD_PD_EXER
A.SECTION_83B_PERIOD
A.PURCHASE_VALUE_LIM
A.ESPP_HOLD_PD_GRANT
A.ESPP_HOLD_PD_PURCH
A.PURCH_DISCOUNT_LIM
A.OFFERING_PD_MAX
A.COMMENTS
A.ESPP_MAJOR_SHR_PCT

  do Print-Data

from       PS_ST_GOVERN_BODY  A
order by   A.EFFDT            desc

end-Select

end-procedure

!*******************************************************************
begin-procedure Print-Data
!*******************************************************************

  print &A.ST_GOVERN_CD         (+2,01,04)         ON-BREAK  level =1
  print &A.DESCR                (0,+20,30)         ON-BREAK  level =1

  do Format-DateTime(&A.EFFDT, $EFFDT1, {DEFYMD}, '', '')

  print $EFFDT1                (+2,1,10)

  print $OPT_RULES             (+2,{col2},30)
  print $GRACE_PD_MTHS         ( 0,{col5},30)

  print $ISO_ANNL_EXER_LIM     (+1,{col3},17)
  print ':'                    (,,1)

  do Format-Number(&A.ISO_ANNL_EXER_LIM, $EXER_LIM, '999,999,990.00')
  let $EXER_LIM = ltrim($EXER_LIM,' ')

  print $EXER_LIM              (0,{col4},14)

  print $ISO_GRACE_PD_TERM     (0,{col6},11)
  print ':'                    (,,1)
  print &A.ISO_GRACE_PD_TERM   (0,+2,03)
  print $MTHS                  (0,+1,06)

  print $ISO_OPTN_LIFE_LIM     (+1,{col3},23)
  print ':'                    (,,1)
  print &A.ISO_OPTN_LIFE_LIM   (0,{col4},02)
  
  if &A.ISO_OPTN_LIFE_LIM > 1
     print $YRS                   (0,+1,03)
  else
     print $YRS                   (0,+1,02)
  end-if
  
  print $ISO_GRACE_PD_DIS      (0,{col6},10)
  print ':'                    (,,1)
  print &A.ISO_GRACE_PD_DIS    (0,+3,03)
  print $MTHS                  (0,+1,06)

  print $ISO_10PCT_FMV_RULE    (+1,{col3},25)
  print ':'                    (,,1)

  do Format-Number(&A.ISO_10PCT_FMV_RULE, $10PCT_FMV_RULE, '9,990.00')
  let $10PCT_FMV_RULE = ltrim($10PCT_FMV_RULE,' ')

  print  $10PCT_FMV_RULE       (0,{col4},08)
  print  $DISQ_DISP_HOLD_PD     ( 0,{col5},30)


  print $ISO_10PCT_OPTN_LIF    (+1,{col3},29)
  print ':'                    (,,1)
  print &A.ISO_10PCT_OPTN_LIF  (0,{col4},03)
  
  if &A.ISO_10PCT_OPTN_LIF > 1
     print $YRS                   (0,+1,03)
  else
     print $YRS                   (0,+1,02)
  end-if

  print $ISO_HOLD_PD_GRANT     (0,{col6},24)
  print ':'                    (,,1)
  print &A.ISO_HOLD_PD_GRANT   (0,+2,03)
  
  if &A.ISO_HOLD_PD_GRANT > 1
     print $YRS                   (0,+1,03)
  else
     print $YRS                   (0,+1,02)
  end-if

  print $SECTION_83B_PERIOD    (+1,{col3},23)
  print ':'                    (,,1)
  print &A.SECTION_83B_PERIOD  (0,{col4},03)
  print $DAYS                  (0,+1,04)


  print $ISO_HOLD_PD_EXER      (0,{col6},24)
  print ':'                    (,,1)
  print &A.ISO_HOLD_PD_EXER    (0,+2,03)
  
  if &A.ISO_HOLD_PD_EXER > 1
     print $YRS                   (0,+1,03)
  else
     print $YRS                   (0,+1,02)
  end-if

  print $ESPP_RULES            (+2,{col2},30)

  print $PURCHASE_VALUE_LIM    (+1,{col3},20)
  print ':'                    (,,1)

  do Format-Number(&A.PURCHASE_VALUE_LIM, $VALUE_LIM, '999,999,999.00')
  let $VALUE_LIM = ltrim($VALUE_LIM,' ')
  print $VALUE_LIM             (0,{col4},14)

  print $PURCH_DISCOUNT_LIM    (+1,{col3},22)
  print ':'                    (,,1)
  
  do Format-Number(&A.PURCH_DISCOUNT_LIM, $DISCOUNT_LIM, '999.00')
  let $DISCOUNT_LIM = ltrim($DISCOUNT_LIM,' ')

  print $DISCOUNT_LIM          (0,{col4},06)
  print  $DISQ_DISP_HOLD_PD     ( 0,{col5},30)

  print $OFFERING_PD_MAX       (+1,{col3},26)
  print ':'                    (,,1)
  print &A.OFFERING_PD_MAX     (0,{col4},03)
  print $MTHS                  (0,+1,06)

  print $ISO_HOLD_PD_GRANT     (0,{col6},24)
  print ':'                    (,,1)
  print &A.ESPP_HOLD_PD_GRANT  (0,+2,03)

  if &A.ESPP_HOLD_PD_GRANT > 1
     print $YRS                   (0,+1,03)
  else
     print $YRS                   (0,+1,02)
  end-if

  print $MAJOR_SHARE_HLDR      (+1,{col3},25)
  print ':'                    (,,1)
  print &A.ESPP_MAJOR_SHR_PCT  (0,{col4},03)
  print $PERCENT               (0,+1, 03)

  print $ESPP_HOLD_PD_PURCH    (0,{col6},24)
  print ':'                    (,,1)
  print &A.ESPP_HOLD_PD_PURCH  (0,+2,03)

  if &A.ESPP_HOLD_PD_PURCH > 1
     print $YRS                   (0,+1,03)
  else
     print $YRS                   (0,+1,02)
  end-if

end-procedure

!*******************************************************************
!   SQC Include Files
!*******************************************************************

#include 'stdapi.sqc'
#include 'curdttim.sqc'  !Get-Current-Date-Time
#include 'datetime.sqc'  !Get-Date-Time
#include 'datemath.sqc'  !Date Math Routines
#include 'reset.sqc'     !Reset printer procedure
#include 'number.sqc'    !Routines to format numbers
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
