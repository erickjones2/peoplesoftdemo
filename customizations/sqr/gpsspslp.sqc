!***********************************************************************
!  GPSSPSLP: Function Library for Global Payroll ePay Payslips         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2015, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!----------------------------------------------------------------------*
!                                                                      *
!          $Date:  2015/08/19:03:24:52                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                        GPCore restarts                               !
!                                                                      *
!                        GPCore Multiple ePay Files                    !
!                                                                      *
!***********************************************************************
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
! Called by: Payslip Global Payroll CE'S                               *
! Debug levels:                                                        *
!             debug5-base level                                        *
!                    shows procedure calls that are not redundant      *
!             debug6-medium                                            *
!                    shows detail of non redundant calls               *
!             debug7-intense                                           *
!                    shows procedure calls that are redundant          *
!             debug8-everything but the kitchen sink                   *
!                    shows detail in redundant calls                   *
!                                                                      *
!                                                                      *
!***********************************************************************


!***********************************************************************
! Procedure: Open-ePay-Guide-DataFile                                  *
! Descr: Use this procedure to open the control file if using the file *
!        method of providing control data to ePay                      *
!***********************************************************************
Begin-Procedure Open-ePay-Guide-DataFile($XPRCSOUTPUTDIR,$XGP_PSLP_CTLFILE)
#debug5 show '** EPAY SQC: Open-ePay-Guide-DataFile'

#ifdef UNIX
   Let $slash = '/'
#end-if

#ifdef NT
   Let $slash = '\'
#end-if

#ifdef MVS
   Let $slash = '/'
#end-if

! end the sourceloc with a slash
Let #xlength = length($XPRCSOUTPUTDIR)
  If substr($XPRCSOUTPUTDIR,#xlength,1) = $slash
Else
  Let $XPRCSOUTPUTDIR = $XPRCSOUTPUTDIR || $slash
end-If


#ifdef MVS
! get location of mvs file
! DO nothing on this platform we cannot process epay via file on this platform

#else

  Let $XFile_1 = $XPRCSOUTPUTDIR || $XGP_PSLP_CTLFILE
  Open $XFile_1 as 256 for-append Record = 800 Status = #OpenStat

#end-if

#debug6 show '** EPAY SQC: Open-ePay-Guide-DataFile: ' $XFile_1 ' openstat = '#OpenStat

End-Procedure !Open-ePay-Guide-DataFile


!***********************************************************************
! Procedure: Close-ePay-Guide-DataFile                                 *
! Descr: Use this procedure to open the control file if using the file *
!        method of providing control data to ePay                      *
!***********************************************************************

Begin-Procedure Close-ePay-Guide-DataFile
#debug5 show '** EPAY SQC: Close-ePay-Guide-DataFile'

Close 256

End-Procedure !Close-ePay-Guide-Datafile

!***********************************************************************
! Procedure: Write-ePay-Guide-Data                                     *
! Descr: Use this procedure to write control data to control file      *
!        Procedure Open-ePay-Cntrl-Datafile must have been called prior*
!        to using this procedure.                                      *
!----------------------------------                                    *
!                                                                      *
! Input:$OPRID                      1                                   *
!       $RUN_CNTL_ID                2                                   *
!       $GP_PSLP_PROCNAME           3                                   *
!       #GP_PSLP_DATAINST           4                                   *
!       $EMPLID                     5                                   *
!       $CAL_RUN_ID                 65                                   *
!       $GP_PSLP_SRCPRODUCT         6                                   *
!       $GP_PSLP_ID                 7                                   *
!       $PYMT_DT (native format)    8                                   *
!       $PRD_END_DT (native format) 9                                   *
!       $PRD_BGN_DT (native format)  10                                  *
!       #NET_PAY                     11                                  *
!       $DESCR                       12                                  *
!       $RUN_TYPE                    13                                  *
!       $GP_SS_PSLP_STATUS           14                                  *
!       $ATTACHSYSFILENAME           15                                  *
!       $ATTACHUSERFILE              16                                  *
!       $GP_PSLP_FILEURLID           17                                  *
!       #GP_PSLP_BGNPGNBR            18                                  *
!       #GP_PSLP_ENDPGNBR            19                                  *
!                                                                      *
! Note: we are overwriting the atatchuserfile value passed to us becuase *
!       the attachuserfile being passed was too large to fit into the 64 *
!       char limit.  We are overwriting with payment date instead because *
!       it is small, formatted for the country, provides meaning to the payee*
!       and is a value that is already being passed to us for each payslip*
!       We will continue to recieve this variable to accomodate changes in *
!       a future release.                                              *
! Output:  <none>                                                      *
!                                                                      *
!  Change: 021105 write job instance instead of data instance to guide *
!***********************************************************************

Begin-Procedure Write-ePay-Guide-Data($XV1,$XV2,$XV3,#XV4,$XV5,$XV65,$XV6,$XV7,$XV8,$XV9,$XV10,#XV11,$XV12,$XV13,$XV14,$XV15,$XV16,$XV17,#XV18,#XV19)

#debug7 show '** EPAY SQC: Write-ePay-Guide-Data'
#debug8 show '** EPAY SQC: Write-ePay-Guide-Data.  EMPLID,BEGINPAGE,ENDPAGE:' $EMPLID ',' #XV18 ',' #DV19

If $XV3 = 'GP00PSLP'
   ! Put process instance in the new GP_PSLP_INSTANCE field.
   Let #XV20 = #_prcs_process_instance
Else
   ! For non gp core payslip copy data instance to GP_PSLP_INSTANCE field
   Let #XV20 = #XV4
end-if

#debug8 show '** EPAY SQC: Write-ePay-Guide-Data. Process Instance: ' #XV20 ' Data instance:' #XV4

Let $Xpslp_instance_str = to_Char(#XV20)
Let $Xpslp_datainst_str = to_Char(#XV4)
Let $Xpslp_net_str = to_Char(#XV11)
Let $Xpslp_bgnpgnbr_str = to_Char(#XV18)
Let $Xpslp_endpgnbr_str = to_char(#XV19)

! convert special characters in filename
Let $XV15 = replace($XV15,'|','_')
Let $XV15 = replace($XV15,' ','_')
Let $XV15 = replace($XV15,';','_')
Let $XV15 = replace($XV15,'+','_')
Let $XV15 = replace($XV15,'%','_')
Let $XV15 = replace($XV15,'&','_')
!Let $XV15 = replace($XV15,''','_')
!Let $XV15 = replace($XV15,'!','_')
Let $XV15 = replace($XV15,'@','_')
Let $XV15 = replace($XV15,'#','_')
Let $XV15 = replace($XV15,'$','_')
Let $XV15 = replace($XV15,'\','_')
Let $XV15 = replace($XV15,'/','_')
Let $XV15 = replace($XV15,':','_')
Let $XV15 = replace($XV15,'*','_')
Let $XV15 = replace($XV15,'"','_')
Let $XV15 = replace($XV15,'<','_')
Let $XV15 = replace($XV15,'>','_')

Let $XV16 = $XV8 || '.PDF'  ! set filename user sees to be the payment date due to 64 char limit

! convert special characters in filename
Let $XV16 = replace($XV16,'\','_')
Let $XV16 = replace($XV16,'/','_')
Let $XV16 = replace($XV16,':','_')
Let $XV16 = replace($XV16,' ','_')

#debug8 show '** EPAY SQC: Write-ePay-Guide-Data. Userfilename:' $XV15 ' Sysfilename:'$XV16

Let $XPART1 = $XV1 || ',' || $XV2 || ',' || $XV3 || ',' || $Xpslp_instance_str || ',' || $Xpslp_datainst_str ||  ','
Let $XPART2 = $XV5 ||  ',' || $XV65 ||  ',' || $XV6 ||  ',' || $XV7 || ',' || $XV8 || ','
Let $XPART3 = $XV9 || ',' || $XV10 || ',' || $Xpslp_net_str || ',' || $XV12 || ',' || $XV13 || ','
Let $XPART4 = $XV14 || ',' || $XV15 || ',' || $XV16 || ',' || $XV17 || ','
Let $XPART5 = $Xpslp_bgnpgnbr_str || ',' || $Xpslp_endpgnbr_str

Let $WRITELINE = $XPART1 || $XPART2 || $XPART3 || $XPART4 || $XPART5

Write 256 from $WRITELINE

End-Procedure !Write-ePay-Guide-Data


!***********************************************************************
! Procedure: Insert-ePay-Guide-Data                                    *
! Descr: Use this procedure to insert control data to epay Temp table  *
!----------------------------------                                    *
!                                                                      *
! Input:$OPRID                           XV1                           *
!       $RUN_CNTL_ID                     XV2                           *
!       $GP_PSLP_PROCNAME                XV3                           *
!       #GP_PSLP_DATAINST                XV4                           *
!       $EMPLID                          XV5                           *
!       $CAL_RUN_ID                      XV65                          *
!       $GP_PSLP_SRCPRODUCT              XV6                           *
!       $GP_PSLP_ID                      XV7                           *
!       $PYMT_DT (native format)         XV8                           *
!       $PRD_END_DT (native format)      XV9                           *
!       $PRD_BGN_DT (native format)      XV10                          *
!       #NET_PAY                         XV11                          *
!       $DESCR                           XV12                          *
!       $RUN_TYPE                        XV13                          *
!       $GP_SS_PSLP_STATUS               XV14                          *
!       $ATTACHSYSFILENAME               XV15                          *
!       $ATTACHUSERFILE                  XV16                          *
!       $GP_PSLP_FILEURLID               XV17                          *
!       #GP_PSLP_BGNPGNBR                XV18                          *
!       #GP_PSLP_ENDPGNBR                XV19                          *
!                                                                      *
! Note: we are overwriting the atatchuserfile value passed to us becuase *
!       the attachuserfile being passed was too large to fit into the 64 *
!       char limit.  We are overwriting with payment date instead because *
!       it is small, formatted for the country, provides meaning to the payee*
!       and is a value that is already being passed to us for each payslip*
!       We will continue to recieve this variable to accomodate changes in *
!       a future release.                                              *
!                                                                      *
! Output:  <none>                                                      *
!                                                                      *
!  Change: 021105 write job instance instead of data instance to guide *
!***********************************************************************

Begin-Procedure Insert-ePay-Guide-Data($XV1,$XV2,$XV3,#XV4,$XV5,$XV65,$XV6,$XV7,$XV8,$XV9,$XV10,#XV11,$XV12,$XV13,$XV14,$XV15,$XV16,$XV17,#XV18,#XV19)

#debug7 show '** EPAY SQC: Insert-ePay-Guide-Data'

If $XV3 = 'GP00PSLP'
   ! Put process instance in the new GP_PSLP_INSTANCE field.
   Let #XV20 = #_prcs_process_instance
Else
   ! For non gp core payslip copy data instance to GP_PSLP_INSTANCE field
   Let #XV20 = #XV4
end-if

#debug8 show '** EPAY SQC: Insert-ePay-Guide-Data. Process Instance: ' #XV20 ' Data instance:' #XV4
#debug8 show '** EPAY SQC: Insert-ePay-Guide-Data.  EMPLID,BEGINPAGE,ENDPAGE:' $EMPLID ',' #XV18 ',' #DV19


! convert special characters in filename ae put attachment does this if we do not
! we cannot find file later if put attach does it
Let $XV15 = replace($XV15,'|','_')
Let $XV15 = replace($XV15,' ','_')
Let $XV15 = replace($XV15,';','_')
Let $XV15 = replace($XV15,'+','_')
Let $XV15 = replace($XV15,'%','_')
Let $XV15 = replace($XV15,'&','_')
!Let $XV15 = replace($XV15,''','_')
!Let $XV15 = replace($XV15,'!','_')
Let $XV15 = replace($XV15,'@','_')
Let $XV15 = replace($XV15,'#','_')
Let $XV15 = replace($XV15,'$','_')
Let $XV15 = replace($XV15,'\','_')
Let $XV15 = replace($XV15,'/','_')
Let $XV15 = replace($XV15,':','_')
Let $XV15 = replace($XV15,'*','_')
Let $XV15 = replace($XV15,'"','_')
Let $XV15 = replace($XV15,'<','_')
Let $XV15 = replace($XV15,'>','_')

Let $XV16 = $XV8 || '.PDF'  ! set filename user sees to be the payment date due to 64 char limit

! convert special characters in filename
Let $XV16 = replace($XV16,'\','_')
Let $XV16 = replace($XV16,'/','_')
Let $XV16 = replace($XV16,':','_')
Let $XV16 = replace($XV16,' ','_')

#debug8 show '** EPAY SQC: Insert-ePay-Guide-Data. Userfilename:' $XV15 ' Sysfilename:'$XV16

Let $sql-statement = 'GPSSPSLP.SQC, Insert-ePay-Guide-Data, Insert, PS_GP_SS_PSLP_TMP'
begin-sql on-error=SQL-Error
INSERT INTO PS_GP_SS_PSLP_TMP
(OPRID
,RUN_CNTL_ID
,GP_PSLP_PROCNAME
,GP_PSLP_INSTANCE
,GP_PSLP_DATAINST
,EMPLID
,CAL_RUN_ID
,GP_PSLP_SRCPRODUCT
,GP_PSLP_ID
,PYMT_DT
,PRD_END_DT
,PRD_BGN_DT
,NET_PAY
,DESCR
,RUN_TYPE
,GP_SS_PSLP_STATUS
,ATTACHSYSFILENAME
,ATTACHUSERFILE
,GP_PSLP_FILEURLID
,GP_PSLP_BGNPGNBR
,GP_PSLP_ENDPGNBR
,GP_SS_PSLP_TMPSTAT
,GP_SS_PSLP_PRCACTN
)
VALUES
($XV1
,$XV2
,$XV3
,#XV20
,#XV4
,$XV5
,$XV65
,$XV6
,$XV7
,$XV8
,$XV9
,$XV10
,#XV11
,$XV12
,$XV13
,$XV14
,$XV15
,$XV16
,$XV17
,#XV18
,#XV19
,' '
,' ');


END-SQL

End-Procedure !Insert-ePay-Guide-Data



!***********************************************************************
! Procedure: Insert-ePay-PSLP-RunControl                               *
! Descr: Use this procedure to insert the ePay RControl table          *
!----------------------------------                                    *
!                                                                      *
! Input:$XOPRID                 XV1                                    *
!       $RUN_CNTL_ID            XV2                                    *
!       $GP_PSLP_PROCNAME       XV3                                    *
!       $GP_PSLP_SPLI_IND       XV4                                    *
!       $GP_PSLP_ATCH_IND       XV5                                    *
!       $GP_PSLP_CTLFILE        XV6                                    *
!       $GP_PSLP_SOURCEFILE     XV7                                    *
!       $GP_PSLP_SOURCELOC      XV8                                    *
!       $GP_PSLP_WORKINGLOC     XV9                                    *
!       $GP_PSLP_FILELAYOUT     XV10                                   *
!       #GP_PSLP_DATAINST       XV11                                   *
!       $GP_PSLP_FILEURLID      XV12                                   *
!       $GP_PSLP_CLEANUP        XV13                                   *
!                                                                      *
! Output:  <none>                                                      *
!                                                                      *
! Change: 021105 write job instance instead of data instance to runctl *
!***********************************************************************

Begin-Procedure Insert-ePay-RunControl($XV1,$XV2,$XV3,$XV4,$XV5,$XV6,$XV7,$XV8,$XV9,$XV10,#XV11,$XV12,$XV13)

#debug5 show '** EPAY SQC: Insert-ePay-RunControl'

If $XV3 = 'GP00PSLP'
   ! Put process instance in the new GP_PSLP_INSTANCE field.
   Let #XV14 = #_prcs_process_instance
Else
   ! For non gp core payslip copy data instance to GP_PSLP_INSTANCE field
   Let #XV14 = #XV11
end-if

#debug6 show '** EPAY SQC: Insert-ePay-RunControl. Process Instance: ' #XV14 ' Data instance:' #XV11

Let $Xpslp_inst_str = to_Char(#XV14)
Let $Xpslp_datainst_str = to_Char(#XV11)


#ifdef MVS

   Let $slash = '/'
   Let $PSLP_OS = 'MVS'

   !----------------------------------------------------------------
   !  RESTRUCTURE THE OUTPUT FILENAME INTO MVS AND USS FILENAMES
   !----------------------------------------------------------------

   ! split the filename between the name and extension
   unstring $XV7 by '.' into $namepart $extension

   ! MVS filenames are limited to 8 characters
   Let $namepart = substr($namepart,1,8)

   ! the mvs data set is all caps and no extension - we will copy this
   Let $sourcefile = upper($namepart)

   ! put extension back on for uss filename -- we will create this
   Let $newfile = $namepart || '.' || $extension

   ! establish a new working directory that we will create- this becomes the epay source loc
   ! new loc is temp report name and process instance
   Let $newloc = '/tmp/' || $XV3 || '_' || $Xpslp_inst_str || '/'

   ! get location of mvs file

Begin-Select
T.PRCSRQSTSTRING

   Let $sourceloc = rtrim(&T.PRCSRQSTSTRING,' ')

FROM PSPRCSRQSTSTRNG T, PSPRCSQUE Q
WHERE T.PRCSINSTANCE = #XV14 AND T.RQSTSTRINGTYPE = '2' AND T.PRCSINSTANCE = Q.PRCSINSTANCE


End-Select

#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $sourcefile:' $sourcefile
#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $sourceloc:' $sourceloc
#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $newfile:' $newfile
#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $newloc:' $newloc

   New-Report 'closereport'
   Do Copy-File($sourcefile, $sourceloc, $newfile, $newloc, 'BINARY')

   If $XV6 <> ' '
      Do Close-ePay-Guide-DataFile

      ! split the filename between the name and extension
      unstring $XV6 by '.' into $namepart $extension

      ! MVS filenames are limited to 8 characters
      Let $namepart = substr($namepart,1,8)

      ! the mvs data set is all caps and no extension - we will copy this
      Let $sourcefile = upper($namepart)

      ! put extension back on for uss filename -- we will create this
      Let $newflatfile = $namepart || '.' || $extension

      Do Copy-File($sourcefile, $sourceloc, $newflatfile, $newloc, 'TEXT')
      Let $XV6 = $newflatfile
   End-if

   ! update the sourcelocation with the new location and file we created
   Let $XV8 = $newloc
   Let $XV7 = $newfile

#else

   #ifdef UNIX
      Let $slash = '/'
      Let $PSLP_OS = 'UNIX'
   #end-if

   #ifdef NT
     Let $slash = '\'
     Let $PSLP_OS = 'NT'
   #end-if

   ! end the sourceloc with a slash
   Let #xlength = length($XV8)
   If substr($XV8,#xlength,1) <> $slash
     Let $XV8 = $XV8 || $slash
   end-If

   Let $sourcefile = $XV7
   Let $sourceloc = $XV8
   Let $newfile = $XV7
   Let $newloc = GetEnv('PS_SERVDIR') || $slash || 'files' || $slash || $XV3 || '_' || $Xpslp_inst_str || $slash

#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $sourcefile:' $sourcefile
#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $sourceloc:' $sourceloc
#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $newfile:' $newfile
#debug6 show '** EPAY SQC: Insert-ePay-RunControl. $newloc:' $newloc

   New-Report 'closereport'
   Do Copy-File($sourcefile, $sourceloc, $newfile, $newloc, 'BINARY')

   ! copy the control file if one was used and place in new directory
   If $XV6 <> ' '
      Do Close-ePay-Guide-DataFile
      Do Copy-File($XV6, $sourceloc, $XV6, $newloc, 'TEXT')
   End-if

   ! update the sourcelocation with the new location and file we created
   Let $XV8 = $newloc
   Let $XV7 = $newfile

#end-if

Let $sql-statement = 'GPSSPSLP.SQC, Insert-ePay-RunControl, Insert, PS_GP_SS_PSLP_RCTL'
begin-sql on-error=SQL-Error
INSERT INTO PS_GP_SS_PSLP_RCTL
(OPRID
,RUN_CNTL_ID
,GP_PSLP_PROCNAME
,GP_PSLP_INSTANCE
,GP_PSLP_DATAINST
,GP_PSLP_SPLIT_IND
,GP_PSLP_ATCH_IND
,GP_PSLP_CTLFILE
,GP_PSLP_SOURCEFILE
,GP_PSLP_SOURCELOC
,GP_PSLP_WORKINGLOC
,GP_PSLP_FILELAYOUT
,GP_PSLP_FILEURLID
,GP_PSLP_CLEANUP
,GP_OSPLATFORM)
VALUES
($XV1
,$XV2
,$XV3
,#XV14
,#XV11
,$XV4
,$XV5
,$XV6
,$XV7
,$XV8
,$XV9
,$XV10
,$XV12
,$XV13
,$PSLP_OS);

        #ifdef ORACLE
           COMMIT;
        #endif


END-SQL

#ifdef ORACLE
   #debug show 'ORACLE COMMIT'
#endif

End-Procedure !Insert-ePay-RunControl


!***********************************************************************
! For ePay Purposes: Online Payslip  - check if the ePay installed     *
!***********************************************************************

begin-procedure Check-ePay-installed (:$XePay_Installed)
#debug5 show '** EPAY SQC: Check-ePay-installed'

let $XePay_Installed = 'N'
begin-select
ePAY.PSEPAY
 FROM PS_INSTALLATION ePAY
end-select

   if &ePAY.PSEPAY = 'Y'
     let $XePay_Installed = 'Y'
   else
     let $XePay_Installed = 'N'
   end-if

#debug6 show '** EPAY SQC: Check-ePay-installed output:' $XePay_Installed
end-procedure !Check-ePay-installed


!***********************************************************************************
! For ePay Purposes: Online Payslip  - the URL id from the Payslip option page     *
!***********************************************************************************

begin-procedure Get-ePay-URLid ($XCountry, :$XFILEURLID)
#debug5 show '** EPAY SQC: Get-ePay-URLid'

!* get the URL id from the Payslip option table

BEGIN-SELECT ON-ERROR=SQL-Error
A.GP_PSLP_FILEURLID            &PSLP_FILEURLID
  let $XFILEURLID        = rtrim(&PSLP_FILEURLID, ' ')
from PS_GP_SS_PSLP_OPT A
WHERE  A.COUNTRY = $XCountry
END-SELECT

#debug6 show '** EPAY SQC: Get-ePay-URLid Input:' $XCountry
#debug6 show '** EPAY SQC: Get-ePay-URLid Output:' $XFILEURLID

end-procedure !Get-ePay-URLid


!**********************************************************************
! Get-Output-Wrk-Directory
!**********************************************************************

begin-procedure Get-Output-Wrk-Directory(#XGP_PSLP_INST, :$XPRCSOUTPUTDIR, :$XPRCSNAME)
#debug5 show '** EPAY SQC: Get-Output-Wrk-Directory'

Begin-Select
RQ.RUNLOCATION
OD.PRCSOUTPUTDIR
OD.OUTDEST
RQ.OUTDESTFORMAT
RQ.PRCSJOBNAME

    let $XOUTDESTFORMAT = rtrim(&RQ.OUTDESTFORMAT,' ')
    let $XRUNLOCATION   = rtrim(&RQ.RUNLOCATION,' ')
    let $XPRCSOUTPUTDIR = rtrim(&OD.PRCSOUTPUTDIR,' ')
    let $XOUTDEST       = rtrim(&OD.OUTDEST,' ')
    let $XOutput_Directory = $XPRCSOUTPUTDIR
    let $XPRCSNAME       = rtrim(&RQ.PRCSJOBNAME,' ')

FROM PSPRCSPARMS OD , PSPRCSRQST  RQ
WHERE OD.PRCSINSTANCE  = RQ.PRCSINSTANCE
AND   OD.PRCSINSTANCE  = #XGP_PSLP_INST
End-Select

#debug6 show '** EPAY SQC: Get-Output-Wrk-Directory input (process instance):' #XGP_PSLP_INST
#debug6 show '** EPAY SQC: Get-Output-Wrk-Directory output:' $XPRCSOUTPUTDIR ',' $XPRCSNAME

end-Procedure Get-Output-Wrk-Directory

!**********************************************************************
! Get-PRCS-DESCR
!**********************************************************************

begin-procedure Get-PRCS-DESCR($XPRCSNAME, :$XPRCSDESCR)
#debug5 show '** EPAY SQC: Get-PRCS-DESCR'

Begin-Select
A.DESCR

    let $XPRCSDESCR = rtrim(&A.DESCR,' ')

from PS_PRCSJOBDEFN  A
where A.PRCSJOBNAME = $XPRCSNAME
End-Select

#debug6 show '** EPAY SQC: Get-PRCS-DESCR input:' $XPRCSNAME
#debug6 show '** EPAY SQC: Get-PRCS-DESCR output:' $XPRCSDESCR

end-Procedure Get-PRCS-DESCR

!***********************************************************************
! Procedure: Copy-File                                                 *
! Descr: Use this procedure to make a copy of a file in a new location *
!        We make this copy because report repository will remove original
! Make sure that locations end in proper slash and files are closed    *
!----------------------------------                                    *
!                                                                      *
!       $FILE                                                          *
!       $LOCATION                                                      *
!       $NEWFILE                                                       *
!       $NEWLOCATION                                                   *
!                                                                      *
! Output:  (none)                                                      *
!                                                                      *
!***********************************************************************

Begin-Procedure Copy-File($FILE, $LOCATION, $NEWFILE, $NEWLOCATION, $METHOD)
#debug6 show '** EPAY SQC: Begin-Procedure Copy-File(' $FILE ',' $LOCATION ',' $NEWFILE ',' $NEWLOCATION ',' $METHOD ')'

#ifdef NT
   Let $KnownPlatform = 'YES'
   #debug7 show '** EPAY SQC: Copy-File on NT'

   ! Make the directory we will not check for error in case dir already exists
   Let $epaycmd = 'CMD.EXE /C MKDIR ' || $NEWLOCATION
   Call System Using $epaycmd #status WAIT

   #debug7 show '** EPAY SQC: Copy-File command:' $epaycmd
   #debug7 show '** EPAY SQC: Copy-File command status:' #status ' A non zero return is a failure or dir already existed.'

   ! copy the file overwrite if it already exists
   ! we will not check for error because if there were no payees then there is no file to copy
   Let $epaycmd = 'CMD.EXE /C COPY /V /Y ' || $LOCATION || $FILE || ' ' || $NEWLOCATION || $NEWFILE
   Call System Using $epaycmd #status WAIT

   #debug7 show '** EPAY SQC: Copy-File command:' $epaycmd
   #debug7 show '** EPAY SQC: Copy-File command status:' #status ' A non zero return is a failure.'

#end-if

#ifdef UNIX
   Let $KnownPlatform = 'YES'
   #debug7 show '** EPAY SQC: Copy-File on UNIX'

   ! make the directory we will not check for error in case dir already exists
   Let $epaycmd = 'mkdir ' || $NEWLOCATION
   Call System Using $epaycmd #status WAIT

   #debug7 show '** EPAY SQC: Copy-File command:' $epaycmd
   #debug7 show '** EPAY SQC: Copy-File command status:' #status ' A non zero return is a failure or dir already existed.'

   ! copy the file overwrite if it already exists
   ! we will not check for error because if there were no payees then there is no file to copy
   Let $epaycmd = 'cp -f ' || $LOCATION || $FILE || ' ' || $NEWLOCATION || $NEWFILE
   Call System Using $epaycmd #status WAIT

   #debug7 show '** EPAY SQC: Copy-File command:' $epaycmd
   #debug7 show '** EPAY SQC: Copy-File command status:' #status ' A non zero return is a failure.'

#end-if

#ifdef MVS

  Let $KnownPlatform = 'YES'
  #debug7 show '** EPAY SQC: Copy-File on MVS'
  #debug7 show ' *** Calling the TSO command interpreter   ***'

   !----------------------------------------------------------------
   !  This ensures no DSN prefix which defaults to this TSO ID
   !----------------------------------------------------------------
   let $tso_cmd = 'PROFILE NOPREFIX'
   CALL SYSTEM using $tso_cmd #tso_rc
      #debug7 show #tso_rc

   !----------------------------------------------------------------
   !  MKDIR:  enclose HFS values in quotes
   !----------------------------------------------------------------
   let $tso_cmd = 'MKDIR ''' || $NEWLOCATION || ''''
       #debug7 show $tso_cmd

   CALL SYSTEM using $tso_cmd #tso_rc
       #debug7 show #tso_rc

   !----------------------------------------------------------------
   !  OPUT:  enclose HFS values in quotes
   !----------------------------------------------------------------
   let $SRC= $LOCATION || '(' || $FILE || ')'
   let $DEST ='''' || $NEWLOCATION || $NEWFILE || ''''

   let $tso_cmd = 'OPUT ' || $SRC || ' ' || $DEST || ' ' || $METHOD
       #debug7 show $tso_cmd

   Call system using $tso_cmd #tso_rc
   #debug7 show #tso_rc

#end-if

If $KnownPlatform <> 'YES'
    show 'Error Platform Unknown'
End-if


end-Procedure Copy-File



!******************************************************************

!***    Common SQC Modules Copied In For Program Usage

!******************************************************************

#include 'gpmpslp.sqc'    
! SQC to insert data into Mobile payslip records

!******************************* End Of Program *******************