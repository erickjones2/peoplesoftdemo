!***********************************************************************
! GPDEUT06.SQC:  Run Control Values and Sort Order Parameters          *
!***********************************************************************
!                                                                      *
!                                                                      *
!
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:03:37:55                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************
! wdu05b6: added field for report detail
! jlj05b6: added field for report detail

begin-procedure Get-Report-Parameters
begin-SELECT

GPDE_RUN_CNTL.OPRID
GPDE_RUN_CNTL.RUN_CNTL_ID
GPDE_RUN_CNTL.LANGUAGE_CD
GPDE_RUN_CNTL.RUN_ID
GPDE_RUN_CNTL.EMPLID
GPDE_RUN_CNTL.EMPL_RCD
GPDE_RUN_CNTL.PAY_ENTITY
GPDE_RUN_CNTL.GP_PAYGROUP
GPDE_RUN_CNTL.LOCATION
GPDE_RUN_CNTL.DEPTID
GPDE_RUN_CNTL.GPDE_AL_CPAY_ENDDT
GPDE_RUN_CNTL.GPDE_RC_PAY_YEAR
GPDE_RUN_CNTL.GPDE_RC_FROM_DT
GPDE_RUN_CNTL.GPDE_RC_TO_DT
GPDE_RUN_CNTL.GPDE_IC_RUN_RETRO
GPDE_RUN_CNTL.GPDE_RC_AL01_S1
GPDE_RUN_CNTL.GPDE_RC_AL01_S2
GPDE_RUN_CNTL.GPDE_RC_AL01_S3
GPDE_RUN_CNTL.GPDE_RC_RUN_YEAR
GPDE_RUN_CNTL.GPDE_RC_YR_CLOSE
GPDE_RUN_CNTL.CURRENCY_CD
GPDE_RUN_CNTL.NAME
GPDE_RUN_CNTL.GPDE_RC_EE_TYPE_ST
GPDE_RUN_CNTL.DISKETTE_TYPE
GPDE_RUN_CNTL.BA_CD
GPDE_RUN_CNTL.WC_COUNCIL_ID
GPDE_RUN_CNTL.GPDE_TX_NUMBER
GPDE_RUN_CNTL.SRC_BANK_ID
GPDE_RUN_CNTL.GPDE_RC_MONTH_YEAR
GPDE_RUN_CNTL.CAL_RUN_ID
GPDE_RUN_CNTL.GPDE_RC_REPORTNAME
GPDE_RUN_CNTL.GPDE_BK_XFER_NBR
GPDE_RUN_CNTL.DEP_SCHED_ID
GPDE_RUN_CNTL.CAL_SEQ_NUM
GPDE_RUN_CNTL.GPDE_SI_COVERAGE
GPDE_RUN_CNTL.GPDE_SI_REGION
GPDE_RUN_CNTL.GPDE_RC_LIMIT_SI09
GPDE_RUN_CNTL.GPDE_RC_MONTH_FLG
GPDE_RUN_CNTL.GPDE_RC_OPERATORCD
GPDE_RUN_CNTL.GPDE_BV_COMPANY
GPDE_RUN_CNTL.GPDE_RC_PRN_COMP
GPDE_RUN_CNTL.APPL_JRNL_ID
GPDE_RUN_CNTL.BUSINESS_UNIT
GPDE_RUN_CNTL.BUSINESS_UNIT_GL
GPDE_RUN_CNTL.GPDE_RC_PRT_SIGN
GPDE_RUN_CNTL.ACCOUNTING_DT
GPDE_RUN_CNTL.GPDE_RC_CREATE_XML
GPDE_RUN_CNTL.GPDE_RC_PREL_PRINT
GPDE_RUN_CNTL.GPDE_RC_SEND_XML
GPDE_RUN_CNTL.GPDE_ELSTER_TKT
GPDE_RUN_CNTL.CONTACT_NAME
GPDE_RUN_CNTL.EMAILID
GPDE_RUN_CNTL.TELEPHONE_NBR
GPDE_RUN_CNTL.URL
!wdu05b6
GPDE_RUN_CNTL.GPDE_AL_DETAIL
!jlj pre-9 eStat
GPDE_RUN_CNTL.LAST_PROCESS_INST

   do Get-Values

FROM PS_GPDE_RC_PAYROLL GPDE_RUN_CNTL

WHERE GPDE_RUN_CNTL.OPRID = $prcs_oprid
AND   GPDE_RUN_CNTL.RUN_CNTL_ID = $prcs_run_cntl_id
end-SELECT


  let $Ctl_Print                = RTRIM(&GPDE_RUN_CNTL.GPDE_RC_REPORTNAME,' ')
  let $Ctl_Year                 = RTRIM(to_char(&GPDE_RUN_CNTL.GPDE_RC_PAY_YEAR), ' ')
  let $Rpt_Cur                  = RTRIM(&GPDE_RUN_CNTL.CURRENCY_CD,' ')
  let $Start_Date               = RTRIM(&GPDE_RUN_CNTL.GPDE_RC_FROM_DT,' ')
  let $Last_Date                = RTRIM(&GPDE_RUN_CNTL.GPDE_RC_TO_DT,' ')
  let $Ctl_Comp_Report          = RTRIM(&GPDE_RUN_CNTL.GPDE_RC_PRN_COMP,' ')
  let $Year_Run_Ctrl            = &GPDE_RUN_CNTL.GPDE_RC_RUN_YEAR
  let $Tax_Card_Close           = &GPDE_RUN_CNTL.GPDE_RC_YR_CLOSE
  let $Ctl_Tax_Num_Deu          = RTRIM(&GPDE_RUN_CNTL.GPDE_TX_NUMBER,' ')

 ! for 8.9 -- incorporating new fields on Record
  let $ELSTER_Ticket            = &GPDE_RUN_CNTL.GPDE_ELSTER_TKT
  let $Prel_XML                 = &GPDE_RUN_CNTL.GPDE_RC_CREATE_XML
  let $Prel_Print               = &GPDE_RUN_CNTL.GPDE_RC_PREL_PRINT
  let $Final_XML                = &GPDE_RUN_CNTL.GPDE_RC_SEND_XML
  let $ContactName              = &GPDE_RUN_CNTL.CONTACT_NAME
  let $ContactPhone             = &GPDE_RUN_CNTL.TELEPHONE_NBR
  let $TempFileLocation         = RTRIM(&GPDE_RUN_CNTL.URL,' ')

  ! wdu05b6
  let $Ctl_Detail               = &GPDE_RUN_CNTL.GPDE_AL_DETAIL

  ! jlj05b6
  let $RunType                  = RTRIM(&GPDE_RUN_CNTL.GPDE_RC_MONTH_YEAR,' ')

  !jlj pre-9 eStat
  let #OrigProcessInstance       = &GPDE_RUN_CNTL.LAST_PROCESS_INST

 !*****************************************************************

  let $Ctl_Emplid = RTRIM(&GPDE_RUN_CNTL.EMPLID, ' ')
  if $Ctl_Emplid <> ''
    let $Emplid_Crit     = ' AND PBD.EMPLID = ''' || $Ctl_Emplid ||  ''' '
    let $Emplid_Crit_PS  = ' AND PS.EMPLID  = ''' || $Ctl_Emplid ||  ''' '
    let $Emplid_Crit_PSA = ' AND PSA.EMPLID = ''' || $Ctl_Emplid ||  ''' '
    let $Emplid_Crit_FA  = ' AND FA.EMPLID  = ''' || $Ctl_Emplid ||  ''' '
    let $Emplid_Crit_FED = ' AND FED.EMPLID = ''' || $Ctl_Emplid ||  ''' '
  else
    let $Emplid_Crit     = ' '
    let $Emplid_Crit_PS  = ' '
    let $Emplid_Crit_PSA = ' '
    let $Emplid_Crit_FA  = ' '
    let $Emplid_Crit_FED = ' '
  end-if

  ! jlj05b6
  let #Ctl_Empl_Rcd = &GPDE_RUN_CNTL.EMPL_RCD

  !---------------

  let $Ctl_PayEntity = RTRIM(&GPDE_RUN_CNTL.PAY_ENTITY, ' ')
  if $Ctl_PayEntity <> ''
    let $PayEntity_Crit     = ' AND PBD.PAY_ENTITY  = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_PS  = ' AND PS.PAY_ENTITY   = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_PSA = ' AND PSA.PAY_ENTITY  = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_FA  = ' AND FA.PAY_ENTITY   = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_FED = ' AND FED.PAY_ENTITY  = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_CR  = ' AND CR.PAY_ENTITY   = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_CRM = ' AND CRM.PAY_ENTITY  = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_CI  = ' AND CI.PAY_ENTITY   = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_CIM = ' AND CIM.PAY_ENTITY  = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_CPM = ' AND CPM.PAY_ENTITY  = ''' || $Ctl_PayEntity || ''' '
  else
    let $PayEntity_Crit     = ' '
    let $PayEntity_Crit_PS  = ' '
    let $PayEntity_Crit_PSA = ' '
    let $PayEntity_Crit_FA  = ' '
    let $PayEntity_Crit_FED = ' '
    let $PayEntity_Crit_CR  = ' '
    let $PayEntity_Crit_CRM = ' '
    let $PayEntity_Crit_CI  = ' '
    let $PayEntity_Crit_CIM = ' '
    let $PayEntity_Crit_CPM = ' '
  end-if

  !---------------

  let $Ctl_Curr_Pay_End_Dt     = RTRIM(&GPDE_RUN_CNTL.GPDE_AL_CPAY_ENDDT, ' ')

  if $Ctl_Curr_Pay_End_Dt <> ''
     do Get-Cal-Run-Id-Count-Month   ! to get the cal_run_id for each month.
     do Get-Cal-Id-Count-Month       ! to get the cal_id for each month.

     if $Cal_Run_Id_M_String      <> ''
        let $Cal_Run_Id_Crit      = ' AND PBD.CAL_RUN_ID IN ( ' || $Cal_Run_Id_M_String || ')'
        let $Cal_Run_Id_Crit1     = ' AND PBD1.CAL_RUN_ID IN ( ' || $Cal_Run_Id_M_String || ')'
        !wd20040514
        let $Cal_Run_Id_Crit_P2D  = ' AND P2D.CAL_RUN_ID IN ( ' || $Cal_Run_Id_M_String || ')'
        let $Cal_Run_Id_Crit_PS   = ' AND PS.CAL_RUN_ID IN  ( ' || $Cal_Run_Id_M_String || ')'
        let $Cal_Run_Id_Crit_PSA  = ' AND PSA.CAL_RUN_ID IN ( ' || $Cal_Run_Id_M_String || ')'
        let $Cal_Run_Id_Crit_FA   = ' AND FA.CAL_RUN_ID IN  ( ' || $Cal_Run_Id_M_String || ')'
        let $Cal_Run_Id_Crit_GN   = ' AND GN.CAL_RUN_ID IN  ( ' || $Cal_Run_Id_M_String || ')'

        let $Cal_Id_Crit          = ' AND PBD.CAL_ID IN ( ' || $Cal_Id_M_String || ')'
        let $Cal_Id_Crit_PS       = ' AND PS.CAL_ID IN  ( ' || $Cal_Id_M_String || ')'
        let $Cal_Id_Crit_PSA      = ' AND PSA.CAL_ID IN ( ' || $Cal_Id_M_String || ')'
        let $Cal_Id_Crit_FA       = ' AND FA.CAL_ID IN  ( ' || $Cal_Id_M_String || ')'
     else
        let $Cal_Run_Id_Crit      = ' '
        let $Cal_Run_Id_Crit1     = ' '
        let $Cal_Run_Id_Crit_PS   = ' '
        let $Cal_Run_Id_Crit_PSA  = ' '
        let $Cal_Run_Id_Crit_FA   = ' '
        let $Cal_Id_Crit          = ' '
        let $Cal_Id_Crit_PS       = ' '
        let $Cal_Id_Crit_PSA      = ' '
        let $Cal_Id_Crit_FA      = ' '
     end-if

  end-if
  !---------------

  let $Ctl_PayGroup = RTRIM(&GPDE_RUN_CNTL.GP_PAYGROUP, ' ')
  if $Ctl_PayGroup <> ''
    let $PayGroup_Crit     = ' AND PBD.GP_PAYGROUP  = ''' || $Ctl_PayGroup || ''' '
    let $PayGroup_Crit_PS  = ' AND PS.GP_PAYGROUP   = ''' || $Ctl_PayGroup || ''' '
    let $PayGroup_Crit_PSA = ' AND PSA.GP_PAYGROUP  = ''' || $Ctl_PayGroup || ''' '
    let $PayGroup_Crit_FA  = ' AND FA.GP_PAYGROUP   = ''' || $Ctl_PayGroup || ''' '
    let $PayGroup_Crit_FED = ' AND FED.GP_PAYGROUP  = ''' || $Ctl_PayGroup || ''' '
  else
    let $PayGroup_Crit     = ' '
    let $PayGroup_Crit_PS  = ' '
    let $PayGroup_Crit_PSA = ' '
    let $PayGroup_Crit_FA  = ' '
    let $PayGroup_Crit_FED = ' '
  end-if

  !---------------

  let $Ctl_Location = RTRIM(&GPDE_RUN_CNTL.LOCATION, ' ')
  if $Ctl_Location <> ''
    let $Location_Crit     = ' AND PBD.LOCATION  = ''' || $Ctl_Location || ''' '
    let $Location_Crit_PS  = ' AND PS.LOCATION   = ''' || $Ctl_Location || ''' '
    let $Location_Crit_PSA = ' AND PSA.LOCATION  = ''' || $Ctl_Location || ''' '
    let $Location_Crit_FA  = ' AND FA.LOCATION   = ''' || $Ctl_Location || ''' '
    let $Location_Crit_FED = ' AND FED.LOCATION  = ''' || $Ctl_Location || ''' '
  else
    let $Location_Crit     = ' '
    let $Location_Crit_PS  = ' '
    let $Location_Crit_PSA = ' '
    let $Location_Crit_FA  = ' '
    let $Location_Crit_FED = ' '
  end-if

  !---------------

  let $Ctl_Deptid = RTRIM(&GPDE_RUN_CNTL.DEPTID,' ')
  if $Ctl_Deptid <> ''
    let $Dept_Crit     = ' AND PBD.DEPTID  = ''' || $Ctl_Deptid || ''' '
    let $Dept_Crit_PS  = ' AND PS.DEPTID   = ''' || $Ctl_Deptid || ''' '
    let $Dept_Crit_PSA = ' AND PSA.DEPTID  = ''' || $Ctl_Deptid || ''' '
    let $Dept_Crit_FA  = ' AND FA.DEPTID   = ''' || $Ctl_Deptid || ''' '
    let $Dept_Crit_FED = ' AND FED.DEPTID  = ''' || $Ctl_Deptid || ''' '
  else
    let $Dept_Crit     = ' '
    let $Dept_Crit_PS  = ' '
    let $Dept_Crit_PSA = ' '
    let $Dept_Crit_FA  = ' '
    let $Dept_Crit_FED = ' '
  end-if

!-------------------------------------------------------------------For Selection Criteria more than 1
 if $Ctl_Year <> '0'
        do Get-Cal-Run-Id-Count-Year
        do Get-Cal-Id-Count-Year
 end-if

 if #count_cal <> 0
     let $Cal_Run_Id_Criteria      = ' AND PBD.CAL_RUN_ID IN ( ' || $Cal_Run_Id_String || ')'
     let $Cal_Run_Id_Criteria_PS   = ' AND PS.CAL_RUN_ID  IN ( ' || $Cal_Run_Id_String || ')'
     let $Cal_Run_Id_Criteria_PSA  = ' AND PSA.CAL_RUN_ID IN ( ' || $Cal_Run_Id_String || ')'
     let $Cal_Run_Id_Criteria_FA   = ' AND FA.CAL_RUN_ID  NOT IN ( ' || $Cal_Run_Id_String || ')'
     let $Cal_Run_Id_Criteria_FED  = ' AND FED.CAL_RUN_ID NOT IN ( ' || $Cal_Run_Id_String || ')'
  else
     let $Cal_Run_Id_Criteria      = ' '
     let $Cal_Run_Id_Criteria_PS   = ' '
     let $Cal_Run_Id_Criteria_PSA  = ' '
     let $Cal_Run_Id_Criteria_FA   = ' '
     let $Cal_Run_Id_Criteria_FED  = ' '
  end-if


  if #count_cal_id <> 0
     let $Cal_Id_Criteria      = ' AND PBD.CAL_ID IN ( ' || $Cal_Id_String || ')'
     let $Cal_Id_Criteria_PS   = ' AND PS.CAL_ID  IN ( ' || $Cal_Id_String || ')'
     let $Cal_Id_Criteria_PSA  = ' AND PSA.CAL_ID IN ( ' || $Cal_Id_String || ')'
     let $Cal_Id_Criteria_FA   = ' AND FA.CAL_ID  IN ( ' || $Cal_Id_String || ')'
     let $Cal_Id_Criteria_FED  = ' AND FED.CAL_ID IN ( ' || $Cal_Id_String || ')'
  else
     let $Cal_Id_Criteria      = ' '
     let $Cal_Id_Criteria_PS   = ' '
     let $Cal_Id_Criteria_PSA  = ' '
     let $Cal_Id_Criteria_FA   = ' '
     let $Cal_Id_Criteria_FED  = ' '
  end-if


  do Get-Emplid-Count
  if #count_Emplid <> 0
     let $Emplid_Criteria     = ' AND PBD.EMPLID IN ( ' || $Emplid-String || ')'
     let $Emplid_Criteria_PS  = ' AND PS.EMPLID  IN ( ' || $Emplid-String || ')'
     let $Emplid_Criteria_PSA = ' AND PSA.EMPLID IN ( ' || $Emplid-String || ')'
     let $Emplid_Criteria_FA =  ' AND FA.EMPLID  IN ( ' || $Emplid-String || ')'

  else
     let $Emplid_Criteria     = ' '
     let $Emplid_Criteria_PS  = ' '
     let $Emplid_Criteria_PSA = ' '
     let $Emplid_Criteria_FA = ' '
  end-if

  do Get-PayEntity-Count
  if #count_pyent <> 0
     let $PayEntity_Criteria     = ' AND PBD.PAY_ENTITY IN ( ' || $PayEntity-String || ')'
     let $PayEntity_Criteria_PS  = ' AND PS.PAY_ENTITY  IN ( ' || $PayEntity-String || ')'
     let $PayEntity_Criteria_PSA = ' AND PSA.PAY_ENTITY IN ( ' || $PayEntity-String || ')'

  else
     let $PayEntity_Criteria     = ' '
     let $PayEntity_Criteria_PS  = ' '
     let $PayEntity_Criteria_PSA = ' '
  end-if

  do Get-Location-Count
  if #countL <> 0
     let $Location_Criteria     =  ' AND PBD.LOCATION IN ( ' || $Location-String || ')'
     let $Location_Criteria_PS  =  ' AND PS.LOCATION  IN ( ' || $Location-String || ')'
     let $Location_Criteria_PSA =  ' AND PSA.LOCATION IN ( ' || $Location-String || ')'
  else
     let $Location_Criteria     = ' '
     let $Location_Criteria_PS  = ' '
     let $Location_Criteria_PSA = ' '
  end-if

  do Get-Department-Count
  if #countD <> 0
     let $Department_Criteria     = ' AND PBD.DEPTID IN ( ' || $Dept-String || ')'
     let $Department_Criteria_PS  = ' AND PS.DEPTID  IN ( ' || $Dept-String || ')'
     let $Department_Criteria_PSA = ' AND PSA.DEPTID IN ( ' || $Dept-String || ')'
  else
     let $Department_Criteria     = ' '
     let $Department_Criteria_PS  = ' '
     let $Department_Criteria_PSA = ' '
  end-if

  do Get-Paygroup-Count
  if #countP <> 0
     let $Paygroup_Criteria     = ' AND PBD.GP_PAYGROUP IN (' || $Paygroup-String || ')'
     let $Paygroup_Criteria_PS  = ' AND PS.GP_PAYGROUP  IN (' || $Paygroup-String || ')'
     let $Paygroup_Criteria_PSA = ' AND PSA.GP_PAYGROUP IN (' || $Paygroup-String || ')'
  else
     let $Paygroup_Criteria     = ' '
     let $Paygroup_Criteria_PS  = ' '
     let $Paygroup_Criteria_PSA = ' '
  end-if

 !*****************************************************************
 !**Set the Sort Order String


  evaluate &GPDE_RUN_CNTL.GPDE_RC_AL01_S1
  when = 'E'
    let $Sort1 = 'PBD.EMPLID'
    break
  when = 'P'
    let $Sort1 = 'PBD.PAY_ENTITY'
    break
  when = 'L'
    let $Sort1 = 'PBD.LOCATION'
    break
  when = 'D'
    let $Sort1 = 'PBD.DEPTID'
    break
  when = 'G'
    let $Sort1 = 'PBD.GP_PAYGROUP'
    break
  when = 'N'
    let $Sort1 = 'PER.NAME'
    break
  when-other
    let $Sort1 = ' '
    break
  end-evaluate

  evaluate &GPDE_RUN_CNTL.GPDE_RC_AL01_S2
  when = 'E'
    let $Sort2 = ' PBD.EMPLID'
    break
  when = 'P'
    let $Sort2 = ' PBD.PAY_ENTITY'
    break
  when = 'L'
    let $Sort2 = ' PBD.LOCATION'
    break
  when = 'D'
    let $Sort2 = ' PBD.DEPTID'
    break
  when = 'G'
    let $Sort2 = ' PBD.GP_PAYGROUP'
    break
  when = 'N'
    let $Sort2 = ' PER.NAME'
    break
  when-other
    let $Sort2 = ' '
    break
  end-evaluate

  evaluate &GPDE_RUN_CNTL.GPDE_RC_AL01_S3
  when = 'E'
    let $Sort3 = ' PBD.EMPLID'
    break
  when = 'P'
    let $Sort3 = ' PBD.PAY_ENTITY'
    break
  when = 'L'
    let $Sort3 = ' PBD.LOCATION'
    break
  when = 'D'
    let $Sort3 = ' PBD.DEPTID'
    break
  when = 'G'
    let $Sort3 = ' PBD.GP_PAYGROUP'
    break
  when = 'N'
    let $Sort3 = ' PER.NAME'
    break
  when-other
    let $Sort3 = ' '
    break
  end-evaluate

end-procedure

!*********************************************************************************************

begin-procedure Get-Emplid-Count

let #count_Emplid = 0
let $Emplid-String = ''

begin-SELECT

EE.EMPLID  &EMPLIDcount

   let $EMPLIDpcnt = rtrim(&EMPLIDcount,' ')

   if $EMPLIDpcnt <> ''
      let $temp-value = rtrim($EMPLIDpcnt,' ')
      let $Emplid-String = $Emplid-String || '''' || $temp-value || '''' || ','
      let #count_Emplid = #count_Emplid + 1
   end-if

FROM PS_GPDE_RC_EMPLID EE

WHERE EE.OPRID = $prcs_oprid
AND   EE.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT


   let $Emplid-String = rtrim($Emplid-String,',')

end-procedure


!*********************************************************************************************

begin-procedure Get-PayEntity-Count

let #count_pyent = 0
let $PayEntity-String = ''

begin-SELECT

CC.PAY_ENTITY  &PYENTcount

   let $PYENTpcnt = rtrim(&PYENTcount,' ')

   if $PYENTpcnt <> ''
      let $temp-value = rtrim($PYENTpcnt,' ')
      let $PayEntity-String = $PayEntity-String || '''' || $temp-value || '''' || ','
      let #count_pyent = #count_pyent + 1
   end-if

FROM PS_GPDE_RC_PYENT CC

WHERE CC.OPRID = $prcs_oprid
AND   CC.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT
   let $PayEntity-String = rtrim($PayEntity-String,',')

end-procedure

!*********************************************************************************************
begin-procedure Get-Location-Count

let #countL = 0
let $Location-String = ''

begin-SELECT

LOCATION &lcount


   let $locount = rtrim(&lcount,' ')

   if $locount <> ''
      let $temp-value = rtrim($locount,' ')
      let $Location-String = $Location-String || '''' || $temp-value || '''' || ','
      let #countL = #countL + 1
   end-if

FROM PS_GPDE_RC_LOC LL

WHERE LL.OPRID = $prcs_oprid
AND LL.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

 let $Location-String = rtrim($Location-String,',')

end-procedure

!*********************************************************************************************
begin-procedure Get-Department-Count

let #countD = 0
let $Dept-String = ''

begin-SELECT

DEPTID &dcount

  let $deptcount = rtrim(&dcount,' ')

   if $deptcount <> ''
      let $temp-value = rtrim($deptcount,' ')
      let $Dept-String = $Dept-String || '''' || $temp-value || '''' || ','
      let #countD = #countD + 1
   end-if

FROM PS_GPDE_RC_DEPT DD

WHERE DD.OPRID = $prcs_oprid
AND   DD.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

   let $Dept-String = rtrim($Dept-String,',')

end-procedure

!*********************************************************************************************
begin-procedure Get-Paygroup-Count

let #countP = 0
let $Paygroup-String = ''

begin-SELECT

PP.GP_PAYGROUP &paycount

  let $Paycnt = rtrim(&paycount,' ')

  if $Paycnt <> ''
     let $temp-value = rtrim($Paycnt,' ')
     let $Paygroup-String = $Paygroup-String || '''' || $temp-value || '''' || ','
     let #countP = #countP + 1
  end-if

FROM PS_GPDE_RC_PAYGRP PP
WHERE PP.OPRID = $prcs_oprid
AND   PP.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

let $Paygroup-String = rtrim($Paygroup-String,',')

end-procedure
!*********************************************************************************************
begin-procedure Get-Cal-Run-Id-Count-Year

  let $CMP_Start_Dt = $Ctl_Year || '01' || '01' || '0000'
  let $CMP_End_Dt   = $Ctl_Year || '12' || '31' || '0000'
  do Format-DateTime($CMP_start_Dt, $out, {DEFCMP},'','native')
  do Format-DateTime($CMP_end_Dt , $out2, {DEFCMP},'','native')
  let $Ctl_Start_Dt = rtrim($out, ' ')
  let $Ctl_End_Dt   = rtrim($out2, ' ')

  let #count_cal = 0
  let $Cal_Run_Id_String = ''

begin-SELECT DISTINCT

CR.CAL_RUN_ID  &CR.CAL_RUN_ID

   let $CAL_RUN_ID = rtrim(&CR.CAL_RUN_ID,' ')

   if $CAL_RUN_ID <> ''
      let $temp-value = rtrim($CAL_RUN_ID,' ')
      let $Cal_Run_Id_String = $Cal_Run_Id_String || '''' || $temp-value || '''' || ','
      let #count_cal = #count_cal + 1
   end-if

FROM PS_GP_CAL_RUN CP,PS_GP_CAL_RUN_DTL CR
WHERE CP.CAL_RUN_ID  = CR.CAL_RUN_ID
AND   CR.PRD_BGN_DT >= $Ctl_Start_Dt
AND   CR.PRD_END_DT <= $Ctl_End_Dt
AND  (CP.RUN_FINALIZED_IND='Y' OR CP.RUN_OPEN_IND='Y')
[$PayEntity_Crit_CR]

end-SELECT

  let $Cal_Run_Id_String = rtrim($Cal_Run_Id_String,',')

End-procedure Get-Cal-Run-Id-Count-Year

!***********************************************************************************************
begin-procedure Get-Cal-Run-Id-Count-Month

     do Convert-to-DTU-DATE($Ctl_Curr_Pay_End_Dt,$DTU_end_dt)
     do Dtu-Month-Begin($DTU_end_dt,$DTU_monthbegin)
     do Convert-From-DTU-DATE($DTU_monthbegin,$ReportBeginDate)

     do Convert-to-DTU-DATE($Ctl_Curr_Pay_End_Dt,$DTU_end_dt)
     do dtu-month-end($DTU_end_dt,$DTU_monthend)
     do Convert-From-DTU-DATE($DTU_monthend,$ReportEndDate)


  let #count_cal_m = 0
  let $Cal_Run_Id_M_String = ''

begin-SELECT DISTINCT

CRM.CAL_RUN_ID  &CRM.CAL_RUN_ID

   let $CAL_RUN_ID_M = rtrim(&CRM.CAL_RUN_ID,' ')

   if $CAL_RUN_ID_M <> ''
      let $temp-value = rtrim($CAL_RUN_ID_M,' ')
      let $Cal_Run_Id_M_String = $Cal_Run_Id_M_String || '''' || $temp-value || '''' || ','
      let #count_cal_m = #count_cal_m + 1
   end-if

FROM PS_GP_CAL_RUN CPM , PS_GP_CAL_RUN_DTL CRM
WHERE CPM.CAL_RUN_ID  = CRM.CAL_RUN_ID
AND   CRM.PRD_BGN_DT >= $ReportBeginDate
AND   CRM.PRD_END_DT <= $ReportEndDate
AND  (CPM.RUN_FINALIZED_IND='Y' OR CPM.RUN_OPEN_IND='Y')
[$PayEntity_Crit_CRM]

end-SELECT

  let $Cal_Run_Id_M_String = rtrim($Cal_Run_Id_M_String,',')

End-procedure Get-Cal-Run-Id-Count-Month

!*********************************************************************************************
begin-procedure Get-Cal-Id-Count-Year

  let $CMP_Start_Dt = $Ctl_Year || '01' || '01' || '0000'
  let $CMP_End_Dt   = $Ctl_Year || '12' || '31' || '0000'
  do Format-DateTime($CMP_start_Dt, $out, {DEFCMP},'','native')
  do Format-DateTime($CMP_end_Dt , $out2, {DEFCMP},'','native')
  let $Ctl_Start_Dt = rtrim($out, ' ')
  let $Ctl_End_Dt   = rtrim($out2, ' ')

  let #count_cal_id = 0
  let $CAL_ID_String = ''

begin-SELECT DISTINCT

CI.CAL_ID  &CI.CAL_ID

   let $CAL_ID = rtrim(&CI.CAL_ID,' ')

   if $CAL_ID <> ''
      let $temp-value = rtrim($CAL_ID,' ')
      let $CAL_ID_String = $CAL_ID_String || '''' || $temp-value || '''' || ','
      let #count_cal_id = #count_cal_id + 1
   end-if

FROM PS_GP_CAL_RUN CPS,PS_GP_CAL_RUN_DTL CI

WHERE CPS.CAL_RUN_ID = CI.CAL_RUN_ID
AND   CI.PRD_BGN_DT >= $Ctl_Start_Dt
AND   CI.PRD_END_DT <= $Ctl_End_Dt
AND  (CPS.RUN_FINALIZED_IND='Y' OR CPS.RUN_OPEN_IND='Y')
[$PayEntity_Crit_CI]

end-SELECT

  let $CAL_ID_String = rtrim($CAL_ID_String,',')

End-procedure Get-Cal-Id-Count-Year


!***********************************************************************************************

begin-procedure Get-Cal-Id-Count-Month

     do Convert-to-DTU-DATE($Ctl_Curr_Pay_End_Dt,$DTU_end_dt)
     do Dtu-Month-Begin($DTU_end_dt,$DTU_monthbegin)
     do Convert-From-DTU-DATE($DTU_monthbegin,$ReportBeginDate)

     do Convert-to-DTU-DATE($Ctl_Curr_Pay_End_Dt,$DTU_end_dt)
     do dtu-month-end($DTU_end_dt,$DTU_monthend)
     do Convert-From-DTU-DATE($DTU_monthend,$ReportEndDate)


  let $CAL_ID_M_String = ''

begin-SELECT DISTINCT

CIM.CAL_ID  &CIM.CAL_ID

   let $CAL_ID_M = rtrim(&CIM.CAL_ID,' ')

   if $CAL_ID_M <> ''
      let $temp-value = rtrim($CAL_ID_M,' ')
      let $CAL_ID_M_String = $CAL_ID_M_String || '''' || $temp-value || '''' || ','
   end-if

FROM PS_GP_CAL_RUN CTM, PS_GP_CAL_RUN_DTL CIM
WHERE CTM.CAL_RUN_ID  = CIM.CAL_RUN_ID
AND   CIM.PRD_BGN_DT >= $ReportBeginDate
AND   CIM.PRD_END_DT <= $ReportEndDate
AND  (CTM.RUN_FINALIZED_IND='Y' OR CTM.RUN_OPEN_IND='Y')
[$PayEntity_Crit_CIM]

end-SELECT

  let $CAL_ID_M_String = rtrim($CAL_ID_M_String,',')

End-procedure Get-Cal-Id-Count-Month
!***********************************************************************************************

