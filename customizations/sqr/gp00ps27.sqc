!***********************************************************************
!  GP00PS01: Global Payroll Payslips- Messages for all Countries       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:04:09:02                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
!***Revision History****************************************************
!                                                                      *
! 258RRE-Added debug levels                                            *
!                                                                      *
!***********************************************************************


!#include 'GP00PS31.sqc'  !common procedures
!#include 'sqrtrans.sqc'  !Get Strings Values


!***********************************************************************
!***********************************************************************
! Procedure: ALL_Messages_Both                                         *
!            Messages for All countries static and dynamic             *
! Descr: This procedure will evaluate if there is space left on page to*
!        print this section and a check if it exists (check always on  *
!        page 1).  IF no room- print check first and then this section *
!        If room left-print this section.                              *
!***********************************************************************
begin-procedure ALL_Messages_Both
#debug do Pslp-Proc-Debug-Msg('ALL Message Section GP00PS27.SQC BEGIN')

      let $space_left = 'n'
      let $check_collision = 'n'
      let $section_printed = 'n'

      while ($section_printed = 'n')
            do get_start_page_line_number(#current-line, #page-count, #start-section-line-number, #start-section-page-number)
            do evaluate_space(#start-section-line-number,$space_left)

            #debug1 show '** ALL Message Section:   Current section start line (#gbl_curr_Section_Start_Line): ' #gbl_curr_Section_Start_Line

            if $space_left = 'n'
                  if $gbl_Paycheck_To_Do = 'y'
                        #debug show '** ALL Message Section:   Check to do. Transfer control to check section.'
                        Do print_check_usa
                        #debug show '** ALL Message Section:   Check section complete.  Control returned to Message section.'
                        move 'n' to $check_collision
                        move 'n' to $gbl_Paycheck_To_Do
                  else
                        new-page
                        #debug1 show '** ALL Message Section:   Issued New-Page.  Out of space on this page.'
                        Move 1 to #gbl_curr_Section_Start_Line
                        Move 1 to #start-section-line-number
                        do Get_Messages
                        move 'y' to $section_printed
                        break
                  end-if
            end-if
            if $space_left = 'y'
                  if $gbl_Paycheck_To_Do = 'y'
                        do evaluate_bankdraft_collision(#start-section-line-number,$check_collision)
                        if $check_collision = 'y'
                              #debug show '** ALL Message Section:   Check to do. Transfer control to check section.'
                              Do print_check_usa
                              #debug show '** ALL Message Section:   Check section complete.  Control returned to Message section.'
                              move 'n' to $check_collision
                              move 'n' to $gbl_Paycheck_To_Do
                        else
                              do Get_Messages
                              move 'y' to $section_printed
                              break
                        end-if
                  else
                        do Get_Messages
                        move 'y' to $section_printed
                        break
                  end-if
            end-if
      end-while
#debug do Pslp-Proc-Debug-Msg('ALL Message Section GP00PS27.SQC END')
End-procedure ALL_Messages_Both


!***********************************************************************
!***********************************************************************
! Procedure: Get_Messages                                              *
! Descr: This procedure will select messages from the temp msgs table  *
!        for the employee payslip we are processing and will get the   *
!        message text from the language table.  If this section is run *
!        as static then it will stop selecting messages when we run out*
!        of room.  If dyamic then it will select all messages assigned.*
!***********************************************************************
begin-procedure Get_Messages
#debug do Pslp-Proc-Debug-Msg('ALL Message Section: Procedure Get_Messages')

Let #Curr_Msg_Line = #start-section-line-number
Let #Section_Lines_printed = 0
Let #Max_msg_width = 0
Let #Max_Msg_lines = 0

use-column 0

! get label into variable
IF $gbl_new_lang_flag = 'Y'
  do Get_Field_Information ('GP00PSLP', 'MESSAGE_TITLE', $MSG_Title, #DW)! from sqrtrans.sqc returning the text based upon the language
  Let #MSG_Title_Offset = #DW + 4 ! message title offset by length of title plus one space plus 3 characters
END-IF

#debug1 show '** ALL Message Section:   Messages are offset by (#MSG_Title_Offset) ' #MSG_Title_Offset ' characters.'
#debug1 show '** ALL Message Section:   Message Title ($MSG_Title) is:' $MSG_Title
#debug1 show '** ALL Message Section:   Language code is ($curr_language_cd):' $curr_language_cd
#debug1 show '** ALL Message Section:   Section Style (Static or Dynamic) is ($gbl_curr_Section_Style): ' $gbl_curr_Section_Style

Let #Max_msg_width = #gbl_page_width - #MSG_Title_Offset

print $MSG_Title (#Curr_Msg_Line,3) bold  ! message title starts at 3rd character position in line

Begin-Select DISTINCT on-error=SQL-Error
A.GP_CNTRY_PSLP_MSG
A.GP_PSLP_MSG_NBR
A.GP_PSLP_MSG_PRIOTY
B.GP_PSLP_MSG_TEXT

   Let $Message = rtrim(&B.GP_PSLP_MSG_TEXT, ' ')

   ! if not base language override $Message with text from related lang table
   if $curr_language_cd <> $SQR_Default_Language
       do Get_RelatedLang_MsgText
   end-if


   ! If static - only print if we have room
   If $gbl_curr_Section_Style = 'S'

      ! Make sure we haven't used up our total number of lines yet
      If #Section_Lines_printed < #gbl_curr_Section_Dtl_Lines

         ! max msg lines is the number of lines we have left in section and we will use it in our print wrap
         ! this number will get smaller and smaller if static
         Let #Max_Msg_lines = #gbl_curr_Section_Dtl_Lines - #Section_Lines_printed
         do Print_Message

       Else
         #debug1 show '** ALL Message Section:   Reached max number of messages that will fit in section.'
         #debug1 show '** ALL Message Section:   #Section_Lines_printed ' #Section_Lines_printed
         #debug1 show '** ALL Message Section:   #gbl_curr_Section_Dtl_Lines ' #gbl_curr_Section_Dtl_Lines
         exit-select      ! reached max number messages that will fit in this section

       End-If

    Else

       ! If dynamic let them fill the entire page (number of lines left in page-we issue a new page if at end)
       Let #Max_Msg_lines = #gbl_Page_lines - #current-line
       do Print_Message

    End-If


FROM PS_GP_PSLP_MSG_TMP A
, PS_GP_PSLP_MSG B
WHERE A.GP_CNTRY_PSLP_MSG = B.GP_CNTRY_PSLP_MSG
    AND A.GP_PSLP_MSG_NBR = B.GP_PSLP_MSG_NBR
    AND A.JOBINSTANCE  = #gbl_job_instance
    AND A.EMPLID            = $gbl_tgt_Emplid
    AND A.PMT_GRP_ID       = #gbl_tgt_Grp_ID
ORDER BY A.GP_PSLP_MSG_PRIOTY

End-Select

end-procedure Get_Messages


!***********************************************************************
!***********************************************************************
! Procedure: Print_Message                                             *
! Descr: This procedure will print the message text                    *
!        If dynamic it will issue a new page when out of page room and *
!        continue on next line.                                        *
!***********************************************************************
begin-procedure Print_Message

        Let $Message = Rtrim($Message, ' ')
        Let $Message = Ltrim($Message, ' ')

        Let #wraplines = wrapdepth($Message, #Max_msg_width ,1,'','')

        If #wraplines >  #gbl_Page_lines - #current-line
          ! wrap lines will never be greater than page lines - current line if static
          !do evaluate_space(#start-section-line-number,$space_left)
          #debug1 show '** ALL Message Section:   Issued New-Page.  Out of space on this page.'
          NEW-PAGE
          ! reset variables for new page - note we will not reach this code if this is a static section
          Let #Curr_Msg_Line = #current-line
          Let #Max_Msg_lines = #gbl_Page_lines - #current-line
          print $MSG_Title (#Curr_Msg_Line,3) bold
        End-If

        Print $Message (#Curr_Msg_Line,#MSG_title_offset) wrap #Max_msg_width #Max_Msg_lines
        Print ' ' (+1,3)  ! print blank space needed to reset after wrap

        #debug2 show '** ALL Message Section:   Printed Message:' $Message
        #debug2 show '** ALL Message Section:   Wrap #Max_msg_width:' #Max_msg_width ' #Max_Msg_lines:' #Max_Msg_lines
        Let #Curr_Msg_Line = #Curr_Msg_Line + #wraplines
        Let #Section_Lines_printed = #Section_Lines_printed + #wraplines
        #debug2 show '** ALL Message Section:   #Curr_Msg_Line' #Curr_Msg_Line '#Section_Lines_printed' #Section_Lines_printed

End-procedure Print_Message

!***********************************************************************
!***********************************************************************
! Procedure: Get_RelatedLang_MsgText                                   *
! Descr: This procedure will get the message text from related lang tbl*
!***********************************************************************
begin-procedure Get_RelatedLang_MsgText

Begin-Select on-error=SQL-Error
LNG.GP_PSLP_MSG_TEXT

   Let $Message = rtrim(&LNG.GP_PSLP_MSG_TEXT, ' ')

FROM  PS_GP_PSLP_MSG_LNG LNG
WHERE LNG.GP_CNTRY_PSLP_MSG = &A.GP_CNTRY_PSLP_MSG
    AND LNG.GP_PSLP_MSG_NBR = &A.GP_PSLP_MSG_NBR
    AND LNG.LANGUAGE_CD = $curr_language_cd
END-SELECT

end-procedure Get_RelatedLang_MsgText
