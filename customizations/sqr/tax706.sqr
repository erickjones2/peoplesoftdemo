!***********************************************************************
!  TAX706: Print Taxable Gross Definitions Table                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2015, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2015/11/18:08:49:32                                 
!       $Release:  HR92                                                
!           $Bug:  22018908                                            
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX706' to $ReportID
  move 'Taxable Gross Definition' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

  do Init-DateTime
  do Get-Current-DateTime
  do Stdapi-Init

  if $Prcs_Process_Instance = ''
     do Prompts
  else
     do Select-Parameters
     do Convert-Parameters
  end-if

end-procedure

begin-HEADING 7
  #Include 'stdhdg01.sqc'

  print ' '                             (+2,2,5)
  print 'Locality'                      (0,+3,8)
  print 'Locality'                      (0,+3,40)
  print 'Eff'                           (0,+3)
  print 'Tax Grs'                       (0,76,10)
  print 'Tax Grs'                       (0,+3,10)
  print ' '                             (0,+3,9)
  print 'Effect on'                     (0,+3,10)
  print 'Other rate'                    (0,+3,12) 
  print 'Deduction'                     (0,+3,10) 
  print 'Withholding Follows'           (0,+3,19) 
  
  print 'State'                         (+1,2,5)
  print 'Code'                          (0,+3,8)
  print 'Name'                          (0,+3,40)
  print 'Date'                          (0,+3)
  print 'Type'                          (0,76,10)
  print 'Base'                          (0,+3,10)
  print 'Component'                     (0,+3,9)
  print 'Gross  '                       (0,+3,10)
  print 'ID'                            (0,+3,12) 
  print 'Class'                         (0,+3,10) 
  print 'Fed Rules'                     (0,+3,11) 
  
end-HEADING

!***********************************************************************
!  PROC PROCESS-MAIN
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main

   if $CurrentOnly = 'Y'
      do Retrieve-current
   else
      do Retrieve-all
   end-if

END-PROCEDURE


!***********************************************************************
!  PROC RETRIEVE-ALL
!         Old Process retrieving all states and localities.
!***********************************************************************

BEGIN-PROCEDURE Retrieve-all
BEGIN-SELECT

A.STATE                      (+1,2,5)  on-break skiplines=1 print=always
A.LOCALITY                   (0,+3,8)

  move &A.State              to $TDState
  move &A.Locality           to $TDLocality
  if RTRIM(&A.Locality, ' ') <> ''
    do Get-Locality-Name
    if RTRIM(&A.Locality, ' ') = '$DFLT'
      print '* Locality Default *'      (0,+3,40)
    else
      print &D.Locality_Name            (0,+3,40)
    end-if
  else
    print ' '                           (0,+3,40)
  end-if
A.EFFDT &A.EffDt
  move &A.EffDt                to $AsOfDate
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out                            (0,+3)

A.EFF_STATUS
  if &A.Eff_Status = 'I'
    print 'I'                           (0,0,1)
  else
    print ' '                           (0,0,1)
  end-if

  do Get-Type-Base

FROM PS_TAXGR_DEFN_TBL A
ORDER BY A.STATE, A.LOCALITY, A.EFFDT DESC

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC RETRIEVE-CURRENT
!         New Process to retrieve only the most current rows for each
!         State and Locality
!***********************************************************************

BEGIN-PROCEDURE Retrieve-current
BEGIN-SELECT


A1.STATE                      (+1,2,5)  on-break skiplines=1 print=always
A1.LOCALITY                   (0,+3,8)

  move &A1.State              to $TDState
  move &A1.Locality           to $TDLocality
  if RTRIM(&A1.Locality, ' ') <> ''
    do Get-Locality-Name
    if RTRIM(&A1.Locality, ' ') = '$DFLT'
      print '* Locality Default *'      (0,+3,40)
    else
      print &D.Locality_Name            (0,+3,40)
    end-if
  else
    print ' '                           (0,+3,40)
  end-if

A1.EFFDT &A1.EffDt
  move &A1.EffDt                 to $AsOfDate
  do Format-DateTime(&A1.EffDt, $out, {DEFDATE}, '', '')
  print $out                            (0,+3)

A1.EFF_STATUS
  if &A1.Eff_Status = 'I'
    print 'I'                           (0,0,1)
  else
    print ' '                           (0,0,1)
  end-if

  do Get-Type-Base

FROM PS_TAXGR_DEFN_TBL A1
WHERE A1.EFFDT =
      ( SELECT MAX(AB.EFFDT)
          FROM PS_TAXGR_DEFN_TBL AB
          WHERE A1.STATE = AB.STATE
            AND A1.LOCALITY = AB.LOCALITY)
ORDER BY A1.STATE, A1.LOCALITY, A1.EFFDT DESC

END-SELECT
END-PROCEDURE


!***********************************************************************
!  PROC GET-TYPE-BASE
!         Get taxable gross definition tax type and base
!***********************************************************************

BEGIN-PROCEDURE Get-Type-Base
  move 0 to #LineIncr
BEGIN-SELECT

B.TAX_GRS_TYPE
  move 'TAX_GRS_TYPE' to $FieldName
  move &B.Tax_Grs_Type  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName       (+#LineIncr,76,10)

B.TAX_GRS_BASE
  move 'TAX_GRS_BASE' to $FieldName
  move &B.Tax_Grs_Base  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName       (0,+3,10)

  do Get-Components
  move 1 to #LineIncr

FROM PS_TAXGR_BASE_TBL B
WHERE B.STATE    = $TDState
  AND B.LOCALITY = $TDLocality
  AND B.EFFDT    = $AsOfDate
ORDER BY B.TAX_GRS_TYPE

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC GET-COMPONENTS
!         Get taxable gross definition components
!***********************************************************************

BEGIN-PROCEDURE Get-Components

  move 0 to #count
  move 'N' to $Match

BEGIN-SELECT

C.STATE
C.LOCALITY
C.TAX_GRS_TYPE
C.TAX_GRS_COMPNT
C.TAX_GRS_EFFECT
C.OTHER_RATE_ID 
C.DED_CLASS 
C.WH_FOLLOWS_FED_SW 

  if RTRIM(&C.Locality, ' ') = '' and RTRIM($TDLocality, ' ') = ''
    move 'Y' to $Match
  end-if
  if &C.Locality = $TDLocality
    move 'Y' to $Match
  end-if

  if $Match = 'Y'
    if #count = 0
      print &C.Tax_Grs_Compnt              (0,+3,9)
      move 999 to #count
    else
      print &C.Tax_Grs_Compnt              (+1,-72,9)
    end-if

    move 'TAX_GRS_EFFECT' to $FieldName
    move &C.Tax_Grs_Effect to $FieldValue
    do Read-Translate-Table
    print $XlatShortName                   (0,+3,10)
 
    move 'OTHER_RATE_ID' to $FieldName 
    move &C.Other_Rate_Id to $FieldValue 
    do Read-Translate-Table 
    print $XlatShortName                   (0,+3,12) 
    
    move 'DED_CLASS' to $FieldName 
    move &C.Ded_Class to $FieldValue 
    do Read-Translate-Table 
    print $XlatShortName                   (0,+3,10) 
    
    if &B.Tax_Grs_Type = 'W'
       print &C.Wh_Follows_Fed_Sw          (0,+3,19)
    else
       print ' '                           (0,+3,19)
    end-if
  end-if
  move 'N' to $Match

FROM PS_TAXGR_CMPNT_TBL C
WHERE C.STATE            = $TDState
  AND C.EFFDT            = $AsOfDate
  AND C.TAX_GRS_TYPE     = &B.Tax_Grs_Type

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC GET-LOCALITY-NAME
!         Get locality name
!***********************************************************************

BEGIN-PROCEDURE Get-Locality-Name

BEGIN-SELECT

D.LOCALITY_NAME

FROM PS_LOCAL_TAX_TBL D
WHERE D.STATE            = $TDState
  AND D.LOCALITY         = $TDLocality
  AND D.EFFDT            =
      ( SELECT MAX(EFFDT)
          FROM PS_LOCAL_TAX_TBL
         WHERE STATE    = $TDState
           AND LOCALITY = $TDLocality)

END-SELECT
END-PROCEDURE

!********************************************************************
!  PROC CONVERT-PARAMETERS
!         Get the Current only field.
!********************************************************************

BEGIN-PROCEDURE Convert-Parameters
  move $RC_QTR_UI.Current_Only     to $CurrentOnly
END-PROCEDURE

!********************************************************************
!  PROC PROMPTS                                                      
!         Prompts fo Current only field.                             
!********************************************************************
BEGIN-PROCEDURE Prompts
  while $CurrentOnly = ''
    input $CurrentOnly 'Current Table entries only? (Y/N)'
    uppercase $CurrentOnly
    if INSTR('YN',$CurrentOnly,1) = 0
      move '' to $CurrentOnly
    end-if
  end-while
END-PROCEDURE

#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls