!***********************************************************************
!  GPMXPE02:  Accumulators Report                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:53:51                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************

#define c1 1
#define c1a 2
#define c2 25
#define c3 36
#define c4 47
#define c5 58
#define c6 69
#define c7 80
#define c8 91
#define c9 102
#define c10 113
#define c11 124
#define c12 135
#define c13 146
#define c14 157

#include 'setenv.sqc'   !Set environment
#Include 'setup02.sqc'  !printer and page-size initialization

begin-report
    do Declare-Printer
    do Init-DateTime
    do Init-Number
    do Stdapi-Init
    do Get-Current-DateTime
        do Report-Translation
    do Select-Parameters
    do Init-Report
        do Init-Vars
        do Process-Main
    do Stdapi-Term
    do Reset
end-report

begin-procedure Init-Report
    move 'GPMXPE02' to $ReportID
    move $TTitle1 to $ReportTitle
    display $ReportID
    display $ReportTitle
    date-time () hh:mi:ss &timeBegan
    display 'Report Began: ' noline
    display &timeBegan
end-procedure

begin-heading 9
    uppercase $TTitle1
    print $TTitle1         (2,) center
    print 'PeopleSoft'     (1,) center
    print $TReport         (3,1)
    print $ReportID        (0,+1)
    print $TCompany        (4,1)
    print $Company         (0,+1)
    print '    '           ()
    print $CompanyName    ()
    print $TPeriod         (5,1)
    print $Period          (0,+1)

    print $TPage           (3,158)
        page-number            (0,+1)
    print $THour           (4,158)
    print $ReportTime      (0,+1)
    print $TDate           (5,158)
    print $ReportDate      (0,+1)

    print '='                         (+1,1,140)fill
    print $TPin_Name                  (+1,{c1})
    print $TMonth01                   (,{c2})
    print $TMonth02                   (,{c3})
    print $TMonth03                   (,{c4})
    print $TMonth04                   (,{c5})
    print $TMonth05                   (,{c6})
    print $TMonth06                   (,{c7})
    print $TMonth07                   (,{c8})
    print $TMonth08                   (,{c9})
    print $TMonth09                   (,{c10})
    print $TMonth10                   (,{c11})
    print $TMonth11                   (,{c12})
    print $TMonth12                   (,{c13})
    print $TTotal4                    (,{c14})
    print '='                         (+1,1,140)fill
end-heading


begin-procedure Select-Parameters
begin-select
P.OPRID
P.RUN_CNTL_ID
P.COMPANY
P.GP_PAYGROUP
P.GPMX_BALANCE_YEAR
P.GPMX_MONTH_FROM
P.GPMX_MONTH_THRU
P.GPMX_PIN_PSLP1_NUM
P.GPMX_PIN_PSLP2_NUM

   let $Operator   = rtrim(&P.OPRID, ' ')
   let $RunControl = rtrim(&P.RUN_CNTL_ID, ' ')
   let $Company    = rtrim(&P.COMPANY, ' ')
   let $PayGroup   = rtrim(&P.GP_PAYGROUP, ' ')
   let #Year       = &P.GPMX_BALANCE_YEAR
   let $Year       = to_char(&P.GPMX_BALANCE_YEAR)
   let $MonthFrom  = rtrim(&P.GPMX_MONTH_FROM, ' ')
   let $MonthThru  = rtrim(&P.GPMX_MONTH_THRU, ' ')
   let #EarnAccum  = &P.GPMX_PIN_PSLP1_NUM
   let #DedAccum   = &P.GPMX_PIN_PSLP2_NUM

FROM  PS_GPMX_RC_ACCUM P
WHERE P.OPRID = $prcs_oprid
AND   P.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

  let $BegDtDTU = $Year || '-' || $MonthFrom || '-01'
  do Convert-From-DTU-Date($BegDtDTU, $BegDt)
  if ($MonthThru = '01') or ($MonthThru = '03') or ($MonthThru = '05') or ($MonthThru = '07') or
     ($MonthThru = '08') or ($MonthThru = '10') or ($MonthThru = '12')
     let $Day = '31'
  else
     if ($MonthThru = '02')
            if mod(#Year,4) = 0
                   let $Day = '29'
                else
                   let $Day = '28'
                end-if
         else
            let $Day = '30'
         end-if
  end-if
  let $EndDtDTU = $Year || '-' || $MonthThru || '-' || $Day
  do Convert-From-DTU-Date($EndDtDTU, $EndDt)
  let $BegDatePr = '01-' || $MonthFrom || '-' || $Year
  let $EndDatePr = $Day || '-' || $MonthThru || '-' || $Year
  let $Period = $BegDatePr || ' / ' || $EndDatePr
  let $AsOfDate = $EndDt
  do Get-Company-Data-Mex
end-procedure Select-Parameters


begin-procedure Init-Vars
   let #Month01E_PY = 0
   let #Month02E_PY = 0
   let #Month03E_PY = 0
   let #Month04E_PY = 0
   let #Month05E_PY = 0
   let #Month06E_PY = 0
   let #Month07E_PY = 0
   let #Month08E_PY = 0
   let #Month09E_PY = 0
   let #Month10E_PY = 0
   let #Month11E_PY = 0
   let #Month12E_PY = 0
   let #MonthTTE_PY = 0

   let #Month01E_ED = 0
   let #Month02E_ED = 0
   let #Month03E_ED = 0
   let #Month04E_ED = 0
   let #Month05E_ED = 0
   let #Month06E_ED = 0
   let #Month07E_ED = 0
   let #Month08E_ED = 0
   let #Month09E_ED = 0
   let #Month10E_ED = 0
   let #Month11E_ED = 0
   let #Month12E_ED = 0
   let #MonthTTE_ED = 0

   let #Month01D_PY = 0
   let #Month02D_PY = 0
   let #Month03D_PY = 0
   let #Month04D_PY = 0
   let #Month05D_PY = 0
   let #Month06D_PY = 0
   let #Month07D_PY = 0
   let #Month08D_PY = 0
   let #Month09D_PY = 0
   let #Month10D_PY = 0
   let #Month11D_PY = 0
   let #Month12D_PY = 0
   let #MonthTTD_PY = 0

   let #Month01D_ED = 0
   let #Month02D_ED = 0
   let #Month03D_ED = 0
   let #Month04D_ED = 0
   let #Month05D_ED = 0
   let #Month06D_ED = 0
   let #Month07D_ED = 0
   let #Month08D_ED = 0
   let #Month09D_ED = 0
   let #Month10D_ED = 0
   let #Month11D_ED = 0
   let #Month12D_ED = 0
   let #MonthTTD_ED = 0

   let #Month01_PG = 0
   let #Month02_PG = 0
   let #Month03_PG = 0
   let #Month04_PG = 0
   let #Month05_PG = 0
   let #Month06_PG = 0
   let #Month07_PG = 0
   let #Month08_PG = 0
   let #Month09_PG = 0
   let #Month10_PG = 0
   let #Month11_PG = 0
   let #Month12_PG = 0
   let #MonthTT_PG = 0

   let #Month01_C  = 0
   let #Month02_C  = 0
   let #Month03_C  = 0
   let #Month04_C  = 0
   let #Month05_C  = 0
   let #Month06_C  = 0
   let #Month07_C  = 0
   let #Month08_C  = 0
   let #Month09_C  = 0
   let #Month10_C  = 0
   let #Month11_C  = 0
   let #Month12_C  = 0
   let #MonthTT_C  = 0
end-procedure Init-vars


begin-procedure Process-Main
   do Build-Query
begin-select
AC.GP_PAYGROUP           () On-Break Print=Never Before=Print-PayGroup-Title After=Print-PayGroup-Total Save=$PayGroupOld Level=1
M.PIN_TYPE               () On-Break Print=Never Before=Print-EarnDed-Title After=Print-EarnDed-Total Save=$EarnDedOld Level=2
   let $PinType = rtrim(&M.PIN_TYPE,' ')
P.PIN_NUM
P.PIN_NM                 () On-Break Print=Never After=Print-Member-Detail Save=$PinNameOld Level=3
AC.ACM_FROM_DT
AC.ACM_THRU_DT
M.ACM_SIGN
SUM(AC.CALC_RSLT_VAL+AC.USER_ADJ_VAL) &VAL_NUM

   let #ValNum = &VAL_NUM
   let $AccumSign = rtrim(&M.ACM_SIGN,' ')
   let $FromDt = &AC.ACM_FROM_DT
   do Convert-To-DTU-Date($FromDt,$FromDtDTU)
   let $ThruDt = &AC.ACM_THRU_DT
   do Convert-To-DTU-Date($ThruDt,$ThruDtDTU)
   do Build-Dates
   do Calculate-EarnDed

FROM PS_JOB J, PS_GP_RSLT_ACUM AC, PS_GP_PIN P, PS_GPMX_ACCUM_MBR M
WHERE J.COMPANY = $Company
AND   J.EFFDT = (SELECT MAX(J1.EFFDT) FROM PS_JOB J1
                 WHERE J1.EMPLID = J.EMPLID
                 AND   J1.EMPL_RCD = J.EMPL_RCD
                 AND   J1.EFFDT <= $EndDt)
AND   J.EFFSEQ = (SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
                  WHERE J2.EMPLID = J.EMPLID
                  AND   J2.EMPL_RCD = J.EMPL_RCD
                  AND   J2.EFFDT = J.EFFDT)
AND   J.EMPLID = AC.EMPLID
AND   AC.ACM_FROM_DT >= $BegDt
AND   AC.ACM_THRU_DT <= $EndDt
AND   AC.PIN_NUM = P.PIN_NUM
AND   AC.PIN_NUM = M.PIN_NUM
AND   M.GPMX_PRINT = 'Y'
AND   M.OPRID = $Operator
AND   M.RUN_CNTL_ID = $RunControl
[$Query]
GROUP BY AC.GP_PAYGROUP, M.PIN_TYPE, P.PIN_NUM, P.PIN_NM, AC.ACM_FROM_DT, AC.ACM_THRU_DT, M.ACM_SIGN
ORDER BY AC.GP_PAYGROUP, M.PIN_TYPE DESC, P.PIN_NUM
end-select

   do Print-Company-Total
end-procedure Process-Main


begin-procedure Calculate-EarnDed
   if ($FromDt >= $Month01_Beg) and ($ThruDtDTU <= $Month01_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month01E_PY = #Month01E_PY + #ValNum
                 else
                    let #Month01E_PY = #Month01E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month01D_PY = #Month01E_PY + #ValNum
                 else
                    let #Month01D_PY = #Month01E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month02_Beg) and ($ThruDtDTU <= $Month02_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month02E_PY = #Month02E_PY + #ValNum
                 else
                    let #Month02E_PY = #Month02E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month02D_PY = #Month02E_PY + #ValNum
                 else
                    let #Month02D_PY = #Month02E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month03_Beg) and ($ThruDtDTU <= $Month03_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month03E_PY = #Month03E_PY + #ValNum
                 else
                    let #Month03E_PY = #Month03E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month03D_PY = #Month03E_PY + #ValNum
                 else
                    let #Month03D_PY = #Month03E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month04_Beg) and ($ThruDtDTU <= $Month04_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month04E_PY = #Month04E_PY + #ValNum
                 else
                    let #Month04E_PY = #Month04E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month04D_PY = #Month04E_PY + #ValNum
                 else
                    let #Month04D_PY = #Month04E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month05_Beg) and ($ThruDtDTU <= $Month05_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month05E_PY = #Month05E_PY + #ValNum
                 else
                    let #Month05E_PY = #Month05E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month05D_PY = #Month05E_PY + #ValNum
                 else
                    let #Month05D_PY = #Month05E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month06_Beg) and ($ThruDtDTU <= $Month06_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month06E_PY = #Month06E_PY + #ValNum
                 else
                    let #Month06E_PY = #Month06E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month06D_PY = #Month06E_PY + #ValNum
                 else
                    let #Month06D_PY = #Month06E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month07_Beg) and ($ThruDtDTU <= $Month07_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month07E_PY = #Month07E_PY + #ValNum
                 else
                    let #Month07E_PY = #Month07E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month07D_PY = #Month07E_PY + #ValNum
                 else
                    let #Month07D_PY = #Month07E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month08_Beg) and ($ThruDtDTU <= $Month08_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month08E_PY = #Month08E_PY + #ValNum
                 else
                    let #Month08E_PY = #Month08E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month08D_PY = #Month08E_PY + #ValNum
                 else
                    let #Month08D_PY = #Month08E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month09_Beg) and ($ThruDtDTU <= $Month09_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month09E_PY = #Month09E_PY + #ValNum
                 else
                    let #Month09E_PY = #Month09E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month09D_PY = #Month09E_PY + #ValNum
                 else
                    let #Month09D_PY = #Month09E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month10_Beg) and ($ThruDtDTU <= $Month10_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month10E_PY = #Month10E_PY + #ValNum
                 else
                    let #Month10E_PY = #Month10E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month10D_PY = #Month10E_PY + #ValNum
                 else
                    let #Month10D_PY = #Month10E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month11_Beg) and ($ThruDtDTU <= $Month11_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month11E_PY = #Month11E_PY + #ValNum
                 else
                    let #Month11E_PY = #Month11E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month11D_PY = #Month11E_PY + #ValNum
                 else
                    let #Month11D_PY = #Month11E_PY - #ValNum
                 end-if
          end-if
   end-if
   if ($FromDt >= $Month12_Beg) and ($ThruDtDTU <= $Month12_End)
      if $PinType = 'ER'
             if $AccumSign = 'A'
            let #Month12E_PY = #Month12E_PY + #ValNum
                 else
                    let #Month12E_PY = #Month12E_PY - #ValNum
                 end-if
          else
             if $AccumSign = 'A'
            let #Month12D_PY = #Month12E_PY + #ValNum
                 else
                    let #Month12D_PY = #Month12E_PY - #ValNum
                 end-if
          end-if
   end-if
end-procedure Calculate-EarnDed


begin-procedure Build-Query
   let $Query = ''
   if ($PayGroup <> '')
      let $Query = $Query || ' AND AC.GP_PAYGROUP = ' || '''' || $PayGroup || ''''
   end-if
end-procedure Build-Query


begin-procedure Build-Dates
   if mod(#Year,4) = 0
      let $Day = '29'
   else
      let $Day = '28'
   end-if

   let $Month01_Beg = $Year || '-01-01'
   let $Month02_Beg = $Year || '-02-01'
   let $Month03_Beg = $Year || '-03-01'
   let $Month04_Beg = $Year || '-04-01'
   let $Month05_Beg = $Year || '-05-01'
   let $Month06_Beg = $Year || '-06-01'
   let $Month07_Beg = $Year || '-07-01'
   let $Month08_Beg = $Year || '-08-01'
   let $Month09_Beg = $Year || '-09-01'
   let $Month10_Beg = $Year || '-10-01'
   let $Month11_Beg = $Year || '-11-01'
   let $Month12_Beg = $Year || '-12-01'
   let $Month01_End = $Year || '-01-31'
   let $Month02_End = $Year || '-02-' || $Day
   let $Month03_End = $Year || '-03-31'
   let $Month04_End = $Year || '-04-30'
   let $Month05_End = $Year || '-05-31'
   let $Month06_End = $Year || '-06-30'
   let $Month07_End = $Year || '-07-31'
   let $Month08_End = $Year || '-08-31'
   let $Month09_End = $Year || '-09-30'
   let $Month10_End = $Year || '-10-31'
   let $Month11_End = $Year || '-11-30'
   let $Month12_End = $Year || '-12-31'
end-procedure Build-Dates


begin-procedure Print-Member-Detail
   if $PinType = 'ER'
      let #MonthTTE_PY = #Month01E_PY + #Month02E_PY + #Month03E_PY + #Month04E_PY + #Month05E_PY + #Month06E_PY
      let #MonthTTE_PY = #MonthTTE_PY + #Month07E_PY + #Month08E_PY + #Month09E_PY + #Month10E_PY + #Month11E_PY + #Month12E_PY
      let #Month01E_ED = #Month01E_ED + #Month01E_PY
      let #Month02E_ED = #Month02E_ED + #Month02E_PY
      let #Month03E_ED = #Month03E_ED + #Month03E_PY
      let #Month04E_ED = #Month04E_ED + #Month04E_PY
      let #Month05E_ED = #Month05E_ED + #Month05E_PY
      let #Month06E_ED = #Month06E_ED + #Month06E_PY
      let #Month07E_ED = #Month07E_ED + #Month07E_PY
      let #Month08E_ED = #Month08E_ED + #Month08E_PY
      let #Month09E_ED = #Month09E_ED + #Month09E_PY
      let #Month10E_ED = #Month10E_ED + #Month10E_PY
      let #Month11E_ED = #Month11E_ED + #Month11E_PY
      let #Month12E_ED = #Month12E_ED + #Month12E_PY
      let #MonthTTE_ED = #MonthTTE_ED + #MonthTTE_PY

      print $PinNameOld        (+1,{c1a})
      print #Month01E_PY       (0,{c2})  edit 999,999,999.99
      print #Month02E_PY       (0,{c3})  edit 999,999,999.99
      print #Month03E_PY       (0,{c4})  edit 999,999,999.99
      print #Month04E_PY       (0,{c5})  edit 999,999,999.99
      print #Month05E_PY       (0,{c6})  edit 999,999,999.99
      print #Month06E_PY       (0,{c7})  edit 999,999,999.99
      print #Month07E_PY       (0,{c8})  edit 999,999,999.99
      print #Month08E_PY       (0,{c9})  edit 999,999,999.99
      print #Month09E_PY       (0,{c10}) edit 999,999,999.99
      print #Month10E_PY       (0,{c11}) edit 999,999,999.99
      print #Month11E_PY       (0,{c12}) edit 999,999,999.99
      print #Month12E_PY       (0,{c13}) edit 999,999,999.99
      print #MonthTTE_PY       (0,{c14}) edit 999,999,999.99

      let #Month01E_PY = 0
      let #Month02E_PY = 0
      let #Month03E_PY = 0
      let #Month04E_PY = 0
      let #Month05E_PY = 0
      let #Month06E_PY = 0
      let #Month07E_PY = 0
      let #Month08E_PY = 0
      let #Month09E_PY = 0
      let #Month10E_PY = 0
      let #Month11E_PY = 0
      let #Month12E_PY = 0
      let #MonthTTE_PY = 0
   else
      let #MonthTTD_PY = #Month01D_PY + #Month02D_PY + #Month03D_PY + #Month04D_PY + #Month05D_PY + #Month06D_PY
      let #MonthTTD_PY = #MonthTTD_PY + #Month07D_PY + #Month08D_PY + #Month09D_PY + #Month10D_PY + #Month11D_PY + #Month12D_PY
      let #Month01D_ED = #Month01D_ED + #Month01D_PY
      let #Month02D_ED = #Month02D_ED + #Month02D_PY
      let #Month03D_ED = #Month03D_ED + #Month03D_PY
      let #Month04D_ED = #Month04D_ED + #Month04D_PY
      let #Month05D_ED = #Month05D_ED + #Month05D_PY
      let #Month06D_ED = #Month06D_ED + #Month06D_PY
      let #Month07D_ED = #Month07D_ED + #Month07D_PY
      let #Month08D_ED = #Month08D_ED + #Month08D_PY
      let #Month09D_ED = #Month09D_ED + #Month09D_PY
      let #Month10D_ED = #Month10D_ED + #Month10D_PY
      let #Month11D_ED = #Month11D_ED + #Month11D_PY
      let #Month12D_ED = #Month12D_ED + #Month12D_PY
      let #MonthTTD_ED = #MonthTTD_ED + #MonthTTD_PY

      print $PinNameOld        (+1,{c1a})
      print #Month01D_PY       (0,{c2})  edit 999,999,999.99
      print #Month02D_PY       (0,{c3})  edit 999,999,999.99
      print #Month03D_PY       (0,{c4})  edit 999,999,999.99
      print #Month04D_PY       (0,{c5})  edit 999,999,999.99
      print #Month05D_PY       (0,{c6})  edit 999,999,999.99
      print #Month06D_PY       (0,{c7})  edit 999,999,999.99
      print #Month07D_PY       (0,{c8})  edit 999,999,999.99
      print #Month08D_PY       (0,{c9})  edit 999,999,999.99
      print #Month09D_PY       (0,{c10}) edit 999,999,999.99
      print #Month10D_PY       (0,{c11}) edit 999,999,999.99
      print #Month11D_PY       (0,{c12}) edit 999,999,999.99
      print #Month12D_PY       (0,{c13}) edit 999,999,999.99
      print #MonthTTD_PY       (0,{c14}) edit 999,999,999.99

      let #Month01D_PY = 0
      let #Month02D_PY = 0
      let #Month03D_PY = 0
      let #Month04D_PY = 0
      let #Month05D_PY = 0
      let #Month06D_PY = 0
      let #Month07D_PY = 0
      let #Month08D_PY = 0
      let #Month09D_PY = 0
      let #Month10D_PY = 0
      let #Month11D_PY = 0
      let #Month12D_PY = 0
      let #MonthTTD_PY = 0
   end-if
end-procedure Print-Member-Detail


begin-procedure Print-EarnDed-Title
   if (&M.PIN_TYPE = 'ER')
      print $TErn (+1,{c1})
   else
      print $TDed (+1,{c1})
   end-if
end-procedure Print-EarnDed-Title


begin-procedure Print-EarnDed-Total
   if ($EarnDedOld = 'ER')
      print $TTotal5           (+1,{c1})
      print #Month01E_ED       (0,{c2})  edit 999,999,999.99
      print #Month02E_ED       (0,{c3})  edit 999,999,999.99
      print #Month03E_ED       (0,{c4})  edit 999,999,999.99
      print #Month04E_ED       (0,{c5})  edit 999,999,999.99
      print #Month05E_ED       (0,{c6})  edit 999,999,999.99
      print #Month06E_ED       (0,{c7})  edit 999,999,999.99
      print #Month07E_ED       (0,{c8})  edit 999,999,999.99
      print #Month08E_ED       (0,{c9})  edit 999,999,999.99
      print #Month09E_ED       (0,{c10}) edit 999,999,999.99
      print #Month10E_ED       (0,{c11}) edit 999,999,999.99
      print #Month11E_ED       (0,{c12}) edit 999,999,999.99
      print #Month12E_ED       (0,{c13}) edit 999,999,999.99
      print #MonthTTE_ED       (0,{c14}) edit 999,999,999.99
   else
      print $TTotal6           (+1,{c1})
      print #Month01D_ED       (0,{c2})  edit 999,999,999.99
      print #Month02D_ED       (0,{c3})  edit 999,999,999.99
      print #Month03D_ED       (0,{c4})  edit 999,999,999.99
      print #Month04D_ED       (0,{c5})  edit 999,999,999.99
      print #Month05D_ED       (0,{c6})  edit 999,999,999.99
      print #Month06D_ED       (0,{c7})  edit 999,999,999.99
      print #Month07D_ED       (0,{c8})  edit 999,999,999.99
      print #Month08D_ED       (0,{c9})  edit 999,999,999.99
      print #Month09D_ED       (0,{c10}) edit 999,999,999.99
      print #Month10D_ED       (0,{c11}) edit 999,999,999.99
      print #Month11D_ED       (0,{c12}) edit 999,999,999.99
      print #Month12D_ED       (0,{c13}) edit 999,999,999.99
      print #MonthTTD_ED       (0,{c14}) edit 999,999,999.99
   end-if

   let #Month01E_PY = 0
   let #Month02E_PY = 0
   let #Month03E_PY = 0
   let #Month04E_PY = 0
   let #Month05E_PY = 0
   let #Month06E_PY = 0
   let #Month07E_PY = 0
   let #Month08E_PY = 0
   let #Month09E_PY = 0
   let #Month10E_PY = 0
   let #Month11E_PY = 0
   let #Month12E_PY = 0
   let #MonthTTE_PY = 0

   let #Month01D_PY = 0
   let #Month02D_PY = 0
   let #Month03D_PY = 0
   let #Month04D_PY = 0
   let #Month05D_PY = 0
   let #Month06D_PY = 0
   let #Month07D_PY = 0
   let #Month08D_PY = 0
   let #Month09D_PY = 0
   let #Month10D_PY = 0
   let #Month11D_PY = 0
   let #Month12D_PY = 0
   let #MonthTTD_PY = 0
end-procedure Print-EarnDed-Total


begin-procedure Print-PayGroup-Title
   print $TPayGroup      (+1,{c1}) Bold
   print &AC.GP_PAYGROUP (0,+1) Bold
end-procedure Print-PayGroup-Title


begin-procedure Print-PayGroup-Total
   let #Month01_PG = #Month01E_ED - #Month01D_ED
   let #Month02_PG = #Month02E_ED - #Month02D_ED
   let #Month03_PG = #Month03E_ED - #Month03D_ED
   let #Month04_PG = #Month04E_ED - #Month04D_ED
   let #Month05_PG = #Month05E_ED - #Month05D_ED
   let #Month06_PG = #Month06E_ED - #Month06D_ED
   let #Month07_PG = #Month07E_ED - #Month07D_ED
   let #Month08_PG = #Month08E_ED - #Month08D_ED
   let #Month09_PG = #Month09E_ED - #Month09D_ED
   let #Month10_PG = #Month10E_ED - #Month10D_ED
   let #Month11_PG = #Month11E_ED - #Month11D_ED
   let #Month12_PG = #Month12E_ED - #Month12D_ED
   let #MonthTT_PG = #MonthTTE_ED - #MonthTTD_ED

   print $TTotal3          (+1,{c1}) Bold
   print #Month01_PG       (0,{c2})  edit 999,999,999.99 Bold
   print #Month02_PG       (0,{c3})  edit 999,999,999.99 Bold
   print #Month03_PG       (0,{c4})  edit 999,999,999.99 Bold
   print #Month04_PG       (0,{c5})  edit 999,999,999.99 Bold
   print #Month05_PG       (0,{c6})  edit 999,999,999.99 Bold
   print #Month06_PG       (0,{c7})  edit 999,999,999.99 Bold
   print #Month07_PG       (0,{c8})  edit 999,999,999.99 Bold
   print #Month08_PG       (0,{c9})  edit 999,999,999.99 Bold
   print #Month09_PG       (0,{c10}) edit 999,999,999.99 Bold
   print #Month10_PG       (0,{c11}) edit 999,999,999.99 Bold
   print #Month11_PG       (0,{c12}) edit 999,999,999.99 Bold
   print #Month12_PG       (0,{c13}) edit 999,999,999.99 Bold
   print #MonthTT_PG       (0,{c14}) edit 999,999,999.99 Bold
   print ' '               (+1)

   let #Month01_C = #Month01_C + #Month01_PG
   let #Month02_C = #Month02_C + #Month02_PG
   let #Month03_C = #Month03_C + #Month03_PG
   let #Month04_C = #Month04_C + #Month04_PG
   let #Month05_C = #Month05_C + #Month05_PG
   let #Month06_C = #Month06_C + #Month06_PG
   let #Month07_C = #Month07_C + #Month07_PG
   let #Month08_C = #Month08_C + #Month08_PG
   let #Month09_C = #Month09_C + #Month09_PG
   let #Month10_C = #Month10_C + #Month10_PG
   let #Month11_C = #Month11_C + #Month11_PG
   let #Month12_C = #Month12_C + #Month12_PG
   let #MonthTT_C = #MonthTT_C + #MonthTT_PG

   let #Month01_PG = 0
   let #Month02_PG = 0
   let #Month03_PG = 0
   let #Month04_PG = 0
   let #Month05_PG = 0
   let #Month06_PG = 0
   let #Month07_PG = 0
   let #Month08_PG = 0
   let #Month09_PG = 0
   let #Month10_PG = 0
   let #Month11_PG = 0
   let #Month12_PG = 0
   let #MonthTT_PG = 0

   let #Month01E_ED = 0
   let #Month02E_ED = 0
   let #Month03E_ED = 0
   let #Month04E_ED = 0
   let #Month05E_ED = 0
   let #Month06E_ED = 0
   let #Month07E_ED = 0
   let #Month08E_ED = 0
   let #Month09E_ED = 0
   let #Month10E_ED = 0
   let #Month11E_ED = 0
   let #Month12E_ED = 0
   let #MonthTTE_ED = 0

   let #Month01D_ED = 0
   let #Month02D_ED = 0
   let #Month03D_ED = 0
   let #Month04D_ED = 0
   let #Month05D_ED = 0
   let #Month06D_ED = 0
   let #Month07D_ED = 0
   let #Month08D_ED = 0
   let #Month09D_ED = 0
   let #Month10D_ED = 0
   let #Month11D_ED = 0
   let #Month12D_ED = 0
   let #MonthTTD_ED = 0

   let #Month01E_PY = 0
   let #Month02E_PY = 0
   let #Month03E_PY = 0
   let #Month04E_PY = 0
   let #Month05E_PY = 0
   let #Month06E_PY = 0
   let #Month07E_PY = 0
   let #Month08E_PY = 0
   let #Month09E_PY = 0
   let #Month10E_PY = 0
   let #Month11E_PY = 0
   let #Month12E_PY = 0
   let #MonthTTE_PY = 0

   let #Month01D_PY = 0
   let #Month02D_PY = 0
   let #Month03D_PY = 0
   let #Month04D_PY = 0
   let #Month05D_PY = 0
   let #Month06D_PY = 0
   let #Month07D_PY = 0
   let #Month08D_PY = 0
   let #Month09D_PY = 0
   let #Month10D_PY = 0
   let #Month11D_PY = 0
   let #Month12D_PY = 0
   let #MonthTTD_PY = 0
end-procedure


begin-procedure Print-Company-Total
  print $TTotal1 (+1,{c1}) Bold
   print #Month01_C        (0,{c2})  edit 999,999,999.99 Bold
   print #Month02_C        (0,{c3})  edit 999,999,999.99 Bold
   print #Month03_C        (0,{c4})  edit 999,999,999.99 Bold
   print #Month04_C        (0,{c5})  edit 999,999,999.99 Bold
   print #Month05_C        (0,{c6})  edit 999,999,999.99 Bold
   print #Month06_C        (0,{c7})  edit 999,999,999.99 Bold
   print #Month07_C        (0,{c8})  edit 999,999,999.99 Bold
   print #Month08_C        (0,{c9})  edit 999,999,999.99 Bold
   print #Month09_C        (0,{c10}) edit 999,999,999.99 Bold
   print #Month10_C        (0,{c11}) edit 999,999,999.99 Bold
   print #Month11_C        (0,{c12}) edit 999,999,999.99 Bold
   print #Month12_C        (0,{c13}) edit 999,999,999.99 Bold
   print #MonthTT_C        (0,{c14}) edit 999,999,999.99 Bold

end-procedure Print-Company-Total


begin-procedure Report-Translation
 do Init_Report_Translation ('GPMXPE02', $prcs_languaje_cd)
 do Append_Report_Translation ('GPMXPE02')
 do Get_Field_Information ('GPMXPE02', 'COMPANY',           $TCompany,           #DW)
 do Get_Field_Information ('GPMXPE02', 'DATE',              $TDate,              #DW)
 do Get_Field_Information ('GPMXPE02', 'DED',               $TDed,               #DW)
 do Get_Field_Information ('GPMXPE02', 'ERN',               $TErn,               #DW)
 do Get_Field_Information ('GPMXPE02', 'HOUR',              $THour,              #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH01',           $TMonth01,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH02',           $TMonth02,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH03',           $TMonth03,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH04',           $TMonth04,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH05',           $TMonth05,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH06',           $TMonth06,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH07',           $TMonth07,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH08',           $TMonth08,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH09',           $TMonth09,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH10',           $TMonth10,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH11',           $TMonth11,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH12',           $TMonth12,           #DW)
 do Get_Field_Information ('GPMXPE02', 'PAGE',              $TPage,              #DW)
 do Get_Field_Information ('GPMXPE02', 'PAYGROUP',          $TPayGroup,          #DW)
 do Get_Field_Information ('GPMXPE02', 'PERIOD',            $TPeriod,            #DW)
 do Get_Field_Information ('GPMXPE02', 'PIN_NAME',          $TPin_Name,          #DW)
 do Get_Field_Information ('GPMXPE02', 'PIN_NUM',           $TPin_Num,           #DW)
 do Get_Field_Information ('GPMXPE02', 'REPORT',            $TReport,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TITLE1',            $TTitle1,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL1',            $TTotal1,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL2',            $TTotal2,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL3',            $TTotal3,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL4',            $TTotal4,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL5',            $TTotal5,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL6',            $TTotal6,            #DW)
 do Get_Field_Information ('GPMXPE02', 'YEAR',              $TYear,              #DW)
end-procedure Report-Translation


begin-procedure Declare-Printer
  let #fontstd  = 5
  let #sizestd  = 6

  declare printer
    type          = HPLASERJET
    orientation   = LANDSCAPE
    top-margin    = 0.35
    left-margin   = 0.25
    symbol-set    = 19U
    font          = 5
    font-style    = fixed
    point-size    = 6
    line-size     = 9
  graphic () font :#fontstd :#sizestd
end-procedure



#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields
