!------------------------------------------------------------------------------
! Report Name: STES010.SQR - Stock Purchase Receipts
!------------------------------------------------------------------------------
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!------------------------------------------------------------------------------
!          $Date:  2013/01/18:02:50:36                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!------------------------------------------------------------------------------
! Program Descr: Prints Employee Stock Purchases for employees in the selected
!                Purchase ID. Detail report shows contributions, purchases and
!                refunds along with Broker and issuance instructions.
!------------------------------------------------------------------------------
! Prompts:       Purchase ID, Sort, Process Group, Emplid
! Options:       Reprint
! Tables:        RUN_CNTL_ST
! Sorts:         1-Country/Postal Code/Name
!                2-Process Group/Name
!                3-Name
!------------------------------------------------------------------------------

  #include 'setenv.sqc'

!------------------------------------------------------------------------------
Begin-Setup
!------------------------------------------------------------------------------

  #include 'ptpsp125.sqc'

End-Setup

!------------------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     Main Report procedure.
!------------------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Main-Process
  do Reset
  do Successful-EOJ

End-Program

!------------------------------------------------------------------------------
! Procedure: Init-Report
! Descr:     Report initialization procedure.  Set titles, parameters.
!            This is called from the Begin-Program procedure.
!------------------------------------------------------------------------------
Begin-Procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms

  let  $ReportID    = 'STES010'

  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('STOCK')

  do Get_Field_Information ('STOCK'  ,'STOCK_ID',         $StockIdLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'STOCK_PLAN_DESC',  $StockPlanLbl,   #DW)
  do Get_Field_Information ('STOCK'  ,'OFFERING_ID',      $OfferingLbl,    #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE_DT',      $PurchDtLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'COMPANY',          $CompanyLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'EMPLID',           $EmplidLbl,      #DW)
  do Get_Field_Information ('STOCK'  ,'NID',              $NidLbl,         #DW)
  do Get_Field_Information ('STOCK'  ,'GRANT_DT',         $GrantDtLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'GRANT_FMV',        $GrantFmvLbl,    #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE_FMV',     $PurchFmvLbl,    #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE_PRICE',   $PurchPrcLbl,    #DW)
  do Get_Field_Information ('STOCK'  ,'TOTAL',            $TotalLbl,       #DW)
  do Get_Field_Information ('STOCK'  ,'SHARES_PURCHASED', $ShrsPurchLbl,   #DW)
  do Get_Field_Information ('STOCK'  ,'SHARES_ISSUED',    $ShareIssueLbl,  #DW)
  do Get_Field_Information ('STOCK'  ,'ISSUANCE_TYPE',    $IssueTypeLbl,   #DW)
  do Get_Field_Information ('STOCK'  ,'DTC_ACCOUNT_NBR',  $DtcLbl,         #DW)

  do Get_Field_Information ('STES010','REPORT_TITLE',     $ReportTitle,    #DW)
  do Get_Field_Information ('STES010','COUNTRY',          $CountryLbl,     #DW)
  do Get_Field_Information ('STES010','RATE',             $RateLbl,        #DW)
  do Get_Field_Information ('STES010','BRANCH',           $BranchLbl,      #DW)
  do Get_Field_Information ('STES010','BROKER',           $BrokerLbl,      #DW)
  do Get_Field_Information ('STES010','ACCOUNT_NUMBER',   $AcctNbrLbl,     #DW)
  do Get_Field_Information ('STES010','ESPP_INFO',        $ESPPInfoLbl,    #DW)
  do Get_Field_Information ('STES010','PURCH_DISC',       $PurchDiscLbl,   #DW)
  do Get_Field_Information ('STES010','PARTIC_INFO',      $ParticInfoLbl,  #DW)
  do Get_Field_Information ('STES010','PURCH_INFO',       $PurchInfoLbl,   #DW)
  do Get_Field_Information ('STES010','SOURCE_CURR',      $SrcCurrLbl,     #DW)
  do Get_Field_Information ('STES010','STOCK_CURR',       $StockCurrLbl,   #DW)
  do Get_Field_Information ('STES010','TO_CARRY_FWD',     $CarryFwd2Lbl,   #DW)
  do Get_Field_Information ('STES010','TO_REFUND',        $Refund2Lbl,     #DW)
  do Get_Field_Information ('STES010','TOTAL_PURCH',      $TotalPurchLbl,  #DW)
  do Get_Field_Information ('STES010','CARRY_FWD',        $CarryFwdLbl,    #DW)
  do Get_Field_Information ('STES010','CURR_CONTRIB',     $CurrContribLbl, #DW)
  do Get_Field_Information ('STES010','NATIONAL_ID',      $NatlIdLbl,      #DW)
  do Get_Field_Information ('STES010','FEDERAL_EIN',      $FedEinLbl,      #DW)
  do Get_Field_Information ('STES010','REG_NAME_ADDRESS', $RegLbl,         #DW)
  do Get_Field_Information ('STES010','EMP_ACCT_NBR',     $EmpAcctLbl,     #DW)

  if $prcs_process_instance = ''
    input $RC_PURCHASE_ID MAXLEN=10 'Purchase ID' Type=Char
    uppercase $RC_Purchase_ID
  else
    do Get-SQR-Parms                   ! Get Run Control Values
  end-if

  do Get-Purchase-ID
  let $SQLQuote      = ''''
  let $WhereEmplid   = ''
  let $WherePrcsGrp  = ''
  let $RC_Emplid     = rtrim($RC_Emplid,' ')
  let $RC_PrcsGrp    = rtrim($RC_PrcsGrp, ' ')

  if $RC_PrcsGrp <> ''
    let $WherePrcsGrp   = ' and A.PROCESS_GROUP  = ' || $SQLQuote || $RC_PrcsGrp || $SQLQuote
  else
    let $WherePrcsGrp   = ''
  end-if

  if $RC_Emplid <> ''
    let $WhereEmplid   = ' and A.EMPLID  = ' || $SQLQuote || $RC_Emplid || $SQLQuote
  else
    let $WhereEmplid   = ''
  end-if

  if $RC_Reprint_Prompt = 'Y'
    let $WhereReceiptDt = ' and A.PURCH_RECEIPT_DT is not null '
  else
    let $WhereReceiptDt = ' and A.PURCH_RECEIPT_DT IS NULL '
  end-if

  if $RC_Receipt_Sort = 'C'
    let $OrderBy = ' order by B.COUNTRY, B.POSTAL, C.NAME '
  else
    if $RC_Receipt_Sort = 'P'
      let $OrderBy = ' order by A.PROCESS_GROUP, C.NAME '
    else
      let $OrderBy = ' order by C.NAME '
    end-if
  end-if

End-Procedure

!------------------------------------------------------------------------------
! Section: Main-Process
! Descr:   Main report logic
!------------------------------------------------------------------------------
Begin-Procedure Main-Process

Begin-Select

A.STOCK_ID
A.STOCK_PLAN
A.OFFERING_ID
A.GRANT_DT
A.PERIOD_END_DT
A.PROCESS_GROUP
A.EMPLID
A.ESPP_DISCOUNT_AMT
A.GRANT_FMV
A.PURCHASE_FMV
A.PURCHASE_PRICE
A.SHARES_PURCHASED
A.ISSUANCE_TYPE
A.ST_BROKERAGE_ID
A.ST_BRANCH_ID
A.ST_ACCOUNT_NBR
A.REGISTRATION_NAME
A.ADDRESS1
A.ADDRESS2
A.ADDRESS3
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
B.ADDRESS1
B.ADDRESS2
B.ADDRESS3
B.CITY
B.STATE
B.POSTAL
B.COUNTRY
C.NAME

  let $EmplId          = rtrim(&a.emplid, ' ')
  let $StockId         = rtrim(&a.stock_id, ' ')
  let $PeriodEndDt     = rtrim(&a.period_end_dt, ' ')
  let $StockPlan       = rtrim(&a.stock_plan,' ')
  let $OfferingId      = rtrim(&a.offering_id, ' ')
  let $GrantDt         = rtrim(&a.grant_dt, ' ')
  let $ProcessGroup    = rtrim(&a.process_group, ' ')
  let #GrantFmv        = &a.grant_fmv
  let #PurchaseFmv     = &a.purchase_fmv
  let #DiscountAmt     = &a.espp_discount_amt
  let #PurchasePrice   = &a.purchase_price
  let #SharesPurchased = &a.shares_purchased
  let $EAddress1       = rtrim(&b.address1, ' ')
  let $EAddress2       = rtrim(&b.address2, ' ')
  let $EAddress3       = rtrim(&b.address3, ' ')
  let $ECity           = rtrim(&b.city, ' ')
  let $EState          = rtrim(&b.state, ' ')
  let $EPostal         = rtrim(&b.postal, ' ')
  let $ECountry        = rtrim(&b.country, ' ')
  let $Name            = rtrim(&c.name, ' ')
  do Get-National-Id
  do Get-Job-Data
  do Get-Stock-Company
  do Get-Stock-Plan-Descr
  do Get-Purchase-Discount

  if $JobCompany = $StockCompany
    let $Company         = $JobCompany
    do Get-Company-Info
    let $CorporationName = $CDescr
    let $CompanyName     = $CDescr
  else
    let $Company = $JobCompany
    do Get-Company-Info
    let $CompanyName     = $CDescr
    let $Company = $StockCompany
    do Get-Company-Info
    let $CorporationName = $CDescr
  end-if

  let $FieldName       = 'ISSUANCE_TYPE'
  let $IssueType       = rtrim(&a.issuance_type, ' ')
  let $FieldValue      = $IssueType
  do Read-Translate-Table
  let $IssuanceDesc    = rtrim($XlatLongName,' ')
  let $AccountNbr      = rtrim(&a.st_account_nbr, ' ')
  let $BrokerId        = rtrim(&a.st_brokerage_id, ' ')
  let $BranchId        = rtrim(&a.st_branch_id, ' ')
  let $RegName         = ''
  let $IssueAddress1   = ''
  let $IssueAddress2   = ''
  let $IssueAddress3   = ''
  let $IssueCity       = ''
  let $IssueState      = ''
  let $IssuePostal     = ''
  let $IssueCountry    = ''

  evaluate $IssueType
  when = 'B'
    do Get-Branch-Address
    let $RegName       = rtrim(&r1.descr, ' ')
    let $IssueAddress1 = rtrim(&r.address1, ' ')
    let $IssueAddress2 = rtrim(&r.address2, ' ')
    let $IssueAddress3 = rtrim(&r.address3, ' ')
    let $IssueCity     = rtrim(&r.city, ' ')
    let $IssueState    = rtrim(&r.state, ' ')
    let $IssuePostal   = rtrim(&r.postal, ' ')
    let $IssueCountry  = rtrim(&r.country, ' ')
    break
  when = 'C'
    let $RegName       = rtrim(&a.registration_name, ' ')
    let $IssueAddress1 = rtrim(&a.address1, ' ')
    let $IssueAddress2 = rtrim(&a.address2, ' ')
    let $IssueAddress3 = rtrim(&a.address3, ' ')
    let $IssueCity     = rtrim(&a.city, ' ')
    let $IssueState    = rtrim(&a.state, ' ')
    let $IssuePostal   = rtrim(&a.postal, ' ')
    let $IssueCountry  = rtrim(&a.country, ' ')
    break
  when = 'E'
    do Get-Escrow-Address
    let $RegName       = rtrim(&s.descr, ' ')
    let $IssueAddress1 = rtrim(&s.address1, ' ')
    let $IssueAddress2 = rtrim(&s.address2, ' ')
    let $IssueAddress3 = rtrim(&s.address3, ' ')
    let $IssueCity     = rtrim(&s.city, ' ')
    let $IssueState    = rtrim(&s.state, ' ')
    let $IssuePostal   = rtrim(&s.postal, ' ')
    let $IssueCountry  = rtrim(&s.country, ' ')
    break
  end-evaluate

  do Print-Report
  do Update-Receipt-Date
  new-page

from PS_ST_ESPP_PURCH  A,
     PS_PERSON_ADDRESS B,
     PS_ST_PERSON_NAME    C
where A.STOCK_ID        = $PUR_StockID
  and A.STOCK_PLAN_TYPE = $PUR_StPlanType
  and A.STOCK_PLAN      = $PUR_StPlan
  and A.OFFERING_ID     = $PUR_Offering
  and A.PERIOD_END_DT   = $PUR_PurchDt
  and A.EMPLID          = B.EMPLID
  and (B.ADDRESS_TYPE   = 'MAIL'
   or (B.ADDRESS_TYPE   = 'HOME'
  and NOT EXISTS (select 'X'
                   from PS_PERSON_ADDRESS
                  where EMPLID       = B.EMPLID
                    and ADDRESS_TYPE = 'MAIL' )))
  and A.EMPLID          = C.EMPLID
[$WhereEmplid]
[$WherePrcsGrp]
[$WhereReceiptDt]
[$OrderBy]

End-Select

End-Procedure   Main-Process

!-----------------------------------------------------------------------
! Section: Get-National-Id
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-National-Id

  let $NationalID = ''

Begin-Select

PERS_NID.NATIONAL_ID

  let $NationalID = rtrim(&pers_nid.national_id,' ')

from PS_PERS_NID PERS_NID
where PERS_NID.EMPLID = $EmplId
  and PERS_NID.PRIMARY_NID = 'Y'

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Job-Data
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Job-Data

  do Define-PrimJob-Clause('JOB',$AsOfToday, $PRIM_JOB_CLAUSE)
  let $JobCompany    = ''
  let $TaxLocationCd = ''

Begin-Select

JOB.COMPANY
JOB.TAX_LOCATION_CD

  let $JobCompany    = rtrim(&job.company,' ')
  let $TaxLocationCd = rtrim(&job.tax_location_cd,' ')
  do Get-Tax-Country

 from PS_JOB JOB
where JOB.EMPLID   = $EmplId
  and JOB.EFFDT    = (select max(EFFDT)
                        from PS_JOB
                       where EMPLID   = JOB.EMPLID
                         and EMPL_RCD = JOB.EMPL_RCD
                         and EFFDT   <= $PeriodEndDt)
  and JOB.EMPL_RCD = [$PRIM_JOB_CLAUSE]
  and JOB.EFFSEQ   = (select max(EFFSEQ)
                        from PS_JOB
                       where EMPLID   = JOB.EMPLID
                         and EMPL_RCD = JOB.EMPL_RCD
                         and EFFDT    = JOB.EFFDT)
End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Tax-Country
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Tax-Country

  let $TaxCountry = ''

Begin-Select

TAX_LOCATION1.COUNTRY

  let $TaxCountry = rtrim(&tax_location1.country,' ')

from PS_TAX_LOCATION1 TAX_LOCATION1
where TAX_LOCATION1.TAX_LOCATION_CD = $TaxLocationCd

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Stock-Company
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Stock-Company

  let $StockCompany = ''
  let $StockDescr   = ''

Begin-Select

STOCK_TBL.COMPANY
STOCK_TBL.DESCR

  let $StockCompany = rtrim(&stock_tbl.company,' ')
  let $StockDescr   = rtrim(&stock_tbl.descr,' ')

from PS_STOCK_TBL STOCK_TBL
where STOCK_TBL.STOCK_ID = $StockId

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Stock-Plan-Descr
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Stock-Plan-Descr

  let $StockPlanDescr = ''

Begin-Select

STOCK_PLAN_TBL.DESCR

  let $StockPlanDescr = rtrim(&stock_plan_tbl.descr,' ')

from PS_STOCK_PLAN_TBL STOCK_PLAN_TBL
where STOCK_PLAN_TBL.STOCK_ID        = $StockId
  and STOCK_PLAN_TBL.STOCK_PLAN_TYPE = 'E'
  and STOCK_PLAN_TBL.STOCK_PLAN      = $StockPlan

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Purchase-Discount
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Purchase-Discount

  let #PurchaseDiscount = 0

Begin-Select

ST_ESPP_PLAN.PURCHASE_DISCOUNT

  let #PurchaseDiscount = &st_espp_plan.purchase_discount

from PS_ST_ESPP_PLAN ST_ESPP_PLAN
where ST_ESPP_PLAN.STOCK_ID        = $StockId
  and ST_ESPP_PLAN.STOCK_PLAN_TYPE = 'E'
  and ST_ESPP_PLAN.STOCK_PLAN      = $StockPlan
  and ST_ESPP_PLAN.EFFDT           = (select max(EFFDT)
                                          from PS_ST_ESPP_PLAN
                                         where STOCK_ID        = ST_ESPP_PLAN.STOCK_ID
                                           and STOCK_PLAN_TYPE = ST_ESPP_PLAN.STOCK_PLAN_TYPE
                                           and STOCK_PLAN      = ST_ESPP_PLAN.STOCK_PLAN
                                           and EFFDT          <= $PeriodEndDt)
End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Company-Info
! Descr:   Retrieve the Company Name and Address
!-----------------------------------------------------------------------
Begin-Procedure Get-Company-Info

Begin-Select

COMPANY_TBL.DESCR
COMPANY_TBL.ADDRESS1
COMPANY_TBL.ADDRESS2
COMPANY_TBL.ADDRESS3
COMPANY_TBL.ADDRESS4
COMPANY_TBL.CITY
COMPANY_TBL.STATE
COMPANY_TBL.POSTAL
COMPANY_TBL.COUNTRY
COMPANY_TBL.FEDERAL_EIN

  let $CDescr      = rtrim(&company_tbl.descr, ' ')
  let $CAddress1   = rtrim(&company_tbl.address1, ' ')
  let $CAddress2   = rtrim(&company_tbl.address2, ' ')
  let $CAddress3   = rtrim(&company_tbl.address3, ' ')
  let $CAddress4   = rtrim(&company_tbl.address4, ' ')
  let $CCity       = rtrim(&company_tbl.city, ' ')
  let $CState      = rtrim(&company_tbl.state, ' ')
  let $CPostal     = rtrim(&company_tbl.postal, ' ')
  let $CCountry    = rtrim(&company_tbl.country, ' ')

from  PS_COMPANY_TBL COMPANY_TBL
where COMPANY_TBL.COMPANY = $Company
  and COMPANY_TBL.EFFDT   = (select max(EFFDT)
                               from PS_COMPANY_TBL
                              where COMPANY = COMPANY_TBL.COMPANY
                                and EFFDT  <= $AsOfToday)
  and COMPANY_TBL.EFF_STATUS = 'A'

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Branch-Address
! Descr:   Retrieves the Branch's Address
!-----------------------------------------------------------------------
Begin-Procedure Get-Branch-Address

Begin-Select

R1.DESCR
R.DESCR
R.ADDRESS1
R.ADDRESS2
R.ADDRESS3
R.CITY
R.STATE
R.POSTAL
R.COUNTRY

  let $BrokerName    = rtrim(&r1.descr,' ')
  let $BranchName    = rtrim(&r.descr,' ')
  let $IssueAddress1 = rtrim(&r.address1,' ')
  let $IssueAddress2 = rtrim(&r.address2,' ')
  let $IssueAddress3 = rtrim(&r.address3,' ')
  let $IssueCity     = rtrim(&r.city,' ')
  let $IssueState    = rtrim(&r.state,' ')
  let $IssuePostal   = rtrim(&r.postal,' ')
  let $IssueCountry  = rtrim(&r.country,' ')

from PS_ST_BRKR_BRANCH R,
     PS_ST_BROKER_DTL  R1
where R.ST_BROKERAGE_ID  = $BrokerId
  and R.ST_BRANCH_ID     = $BranchId
  and R.EFF_STATUS       = 'A'
  and R.EFFDT            = (SELECT MAX(EFFDT)
                            from PS_ST_BRKR_BRANCH
                            where ST_BROKERAGE_ID = R.ST_BROKERAGE_ID
                              and ST_BRANCH_ID    = R.ST_BRANCH_ID
                              and EFFDT          <= $AsOfToday)
  and R1.ST_BROKERAGE_ID = R.ST_BROKERAGE_ID
  and R1.EFF_STATUS      = 'A'
  and R1.EFFDT           = (SELECT MAX(EFFDT)
                            from PS_ST_BROKER_DTL
                            where ST_BROKERAGE_ID = R1.ST_BROKERAGE_ID
                              and EFFDT          <= $AsOfToday)

End-Select

End-Procedure 

!-----------------------------------------------------------------------
! Section: Get-Escrow-Address
! Descr:   Retrieves the Transfer Agent's Address
!-----------------------------------------------------------------------
Begin-Procedure Get-Escrow-Address

Begin-Select

S.DESCR
S.ADDRESS1
S.ADDRESS2
S.ADDRESS3
S.CITY
S.STATE
S.POSTAL
S.COUNTRY

  let $EscrowName    = rtrim(&s.descr,' ')
  let $IssueAddress1 = rtrim(&s.address1,' ')
  let $IssueAddress2 = rtrim(&s.address2,' ')
  let $IssueAddress3 = rtrim(&s.address3,' ')
  let $IssueCity     = rtrim(&s.city,' ')
  let $IssueState    = rtrim(&s.state,' ')
  let $IssuePostal   = rtrim(&s.postal,' ')
  let $IssueCountry  = rtrim(&s.country,' ')

from PS_ST_AGENT_DTL S,
     PS_STOCK_DTL    S1
where S1.STOCK_ID         = $StockId
  and S1.EFFDT            = (SELECT MAX(EFFDT)
                             from PS_STOCK_DTL
                             where STOCK_ID = S1.STOCK_ID
                               and EFFDT   <= $AsOfToday)
  and S1.EFF_STATUS       = 'A'
  and S1.ESCROW_AGENCY_ID = S.ST_AGENCY_ID
  and S.EFFDT             = (SELECT MAX(EFFDT)
                             from PS_ST_AGENT_DTL
                             where ST_AGENCY_ID = S.ST_AGENCY_ID
                               and EFFDT       <= $AsOfToday)
  and S.EFF_STATUS        = 'A'

End-Select

End-Procedure 

!------------------------------------------------------------------------------
! Section: Print-Report
! Descr:   Prints the bulk of the Statement
!------------------------------------------------------------------------------
Begin-Procedure Print-Report

  date-time () 'Day, Mon DD, YYYY  HH:MI PM' &PrintDate
  print &PrintDate                                         ( 1,000,   ) center bold
  print $ReportTitle                                       (+1,000,   ) center bold

  print $StockId                                           (+2,001,010)
  print $CorporationName                                   (+1,001,030)
  print $CAddress1                                         (+1,001,035)
  if $CAddress2 <> ''
    print $CAddress2                                       (+1,001,035)
  end-if
  if $CAddress3 <> ''
    print $CAddress3                                       (+1,001,035)
  end-if
  if $CAddress1 <> ''
    let $CityStZip = $CCity || ', ' || $CState || ' '
    let #Length = Length($CPostal)
    if $CCountry = 'USA'
      if #Length = 5
        let $Postal = edit($CPostal, 'XXXXX')
      else
        let $Postal = edit($CPostal, 'XXXXX-XXXX')
      end-if
    end-if
    let $CityStZip = $CityStZip || $Postal
    print $CityStZip                                       (+1,001,051)
  end-if
  let $CityStZip = ''
  let $Postal    = ''
  print $CCountry                                          (+1,001,003)
  print $FedEinLbl                                         (+1,001,011)
  print ':'                                                (,,001)
  print &company_tbl.federal_ein                           ( 0, +1,010) edit XX-XXXXXXX

!--------------------------------------
! Participant Information
!--------------------------------------
  print $ParticInfoLbl                                     (14,001,030) underline
  print $EmplidLbl                                         (+1,001,006)
  print ':'                                                (  ,   ,001)
  print $Emplid                                            (  ,030,011)
  print $NidLbl                                            (+1,001,003)
  print ':'                                                (  ,   ,001)

  evaluate $TaxCountry
    when = 'USA'
      print $NationalId                                    ( 0,030,011)  edit XXX-XX-XXXX
      break
    when = 'CAN'
      print $NationalId                                    ( 0,030,013)  edit XXX-XXX-XXXXX
      break
    when-other
      print $NationalId                                    ( 0,030,020)
      break
  end-evaluate

  do Rotate-Name
  print $Name                                              (-1,075,045)
  print $EAddress1                                         (+1,075,035)
  if $EAddress2 <> ''
    print $EAddress2                                       (+1,075,035)
  end-if
  if $EAddress3 <> ''
    print $EAddress3                                       (+1,075,035)
  end-if
  if  rtrim($EAddress1,' ') <> ''
    let $CityStZip = rtrim($ECity,' ') || ', ' || rtrim($EState,' ') || ' '
    let #Length = Length($EPostal)
    if $ECountry = 'USA'
      if #Length = 5
        let $EPostal = edit($EPostal, 'XXXXX')
      else
        let $EPostal = edit($EPostal, 'XXXXX-XXXX')
      end-if
    end-if
    let $CityStZip = $CityStZip || $EPostal
    print $CityStZip                                       (+1,075,050)
  end-if
  if $ECountry <> ''
    print $ECountry                                        (+1,075,003)
  end-if

!--------------------------------------
! ESPP Information
!--------------------------------------
  print $ESPPInfoLbl                                       (+2,001,030) underline
  print $StockIdLbl                                        (+1,001,009)
  print $StockId                                           (  ,019,010)
  print $StockPlanLbl                                      (+1,001,011)
  print $StockPlan                                         (  ,019,010)
  print $StockPlanDesct                                    (  ,040,030)
  print $OfferingLbl                                       (+1,001,009)
  print $OfferingId                                        (  ,019,010)
  print $GrantDtLbl                                        (+1,001,011)
  do Format-DateTime ($GrantDt, $Date, {DEFDATE}, '', '')
  print $Date                                              (  ,019,010)
  print $GrantFmvLbl                                       (  ,040,012)
  print #GrantFmv                                          (  ,057,014) edit $$$9999.999999
  print $PurchDtLbl                                        (+1,001,015)
  do Format-DateTime ($PeriodEndDt, $Date, {DEFDATE}, '', '')
  print $Date                                              (  ,019,010)
  print $PurchFmvLbl                                       (  ,040,015)
  print #PurchaseFmv                                       (  ,057,014) edit $$$9999.999999
  print $PurchDiscLbl                                      (+1,001,017)
  print #DiscountAmt                                       (  ,019,019) edit $99,999,999.999999
  print $PurchPrcLbl                                       (  ,040,014)
  print #PurchasePrice                                     (  ,057,014) edit $$$9999.999999

!--------------------------------------
! Purchase Information
!--------------------------------------
  let #PrintOnce  = 1
  let $ContribSrc = '= ''CF'''
  print $PurchInfoLbl                                      (+2,1,20) underline
  print $HPurchInfo                                        (+1,001,020)
  print $SrcCurrLbl                                        (  ,045,015)
  print $RateLbl                                           (  ,078,004)
  print $StockCurrLbl                                      (  ,091,015)
  print '-'                                                (+1,001,111) fill

  let #StockTotal   = 0
  let $ToCurrency   = ''
  let $Header = $CarryFwdLbl
  do Print-Purchase-Info
  let $ContribSrc = '<> ''CF'''
  let $Header = $CurrContribLbl
  do Print-Purchase-Info
  if #StockTotal > 0
    do Do-Totals
  end-if

!--------------------------------------
! Shares Purchased
!--------------------------------------
  print $ShrsPurchLbl                                      (+2,001,017)
  print ':'                                                (  ,   ,   )
  print #SharesPurchased                                   (  ,020,022) edit 999,999,999,999.999999
  print $TotalPurchLbl                                     (+1,001,020)
  let #TotalPurchase = #SharesPurchased * #PurchasePrice
  print #TotalPurchase                                     (  ,084,022) edit $$$,$99,999,999.999999
  print 'USD'                                              (  ,108,003)
  do Print-Shares-Purchased
  do Get-Broker-Info

  print $RegLbl                                            (+2,001,029) underline
  print $RegName                                           (+1,001,050)
  print $IssueAddress1                                     (+1,001,035)
  if $IssueAddress2 <> ''
    print $IssueAddress2                                   (+1,001,035)
  end-if
  if $IssueAddress3 <> ''
    print $IssueAddress3                                   (+1,001,035)
  end-if

  if $IssueAddress1 <> ''
    let $CityStZip = $IssueCity || ', ' || $IssueState || ' '
    let #Length = Length($IssuePostal)
    if $IssueCountry = 'USA'
      if #Length = 5
        let $IssuePostal = edit($IssuePostal, 'XXXXX')
      else
        let $IssuePostal = edit($IssuePostal, 'XXXXX-XXXX')
      end-if
    end-if
    let $CityStZip = $CityStZip || $IssuePostal
    print $CityStZip                                       (+1,001,051)
  end-if
  if $IssueCountry <> '' 
    print $IssueCountry                                    (+1,001,003)
  end-if
  let $CityStZip    = ''
  let $IssuePostal  = ''
  let $IssueCountry = ''
  print $ShareIssueLbl                                     (+2,001,013)
  print ':'                                                (  ,   ,001)
  print #SharesPurchased                                   (  ,020,022) edit 999,999,999,999.999999
  print $IssueTypeLbl                                      (+1,001,013)
  print ':'                                                (  ,   ,001)
  print $IssuanceDesc                                      (  ,030,030)

 !----------------------------------------------------!
 ! if type is broker, print broker DTC account number !
 !----------------------------------------------------!
  if $IssueType = 'B'
    print $DtcLbl                                          (  , +5,004)
    print ':'                                              (  ,   ,001)
    print $DtcAccountNbr                                   (  , +2,010)
  end-if

  print $EmpAcctLbl                                        (+1,001,023)
  print ':'                                                (  ,   ,001)
  print $AccountNbr                                        (  ,030,017)

End-Procedure   Print-Report

!-----------------------------------------------------------------------
! Section: Get-Broker-Info
! Descr:   Retrieves the Brokers DTC account number
!-----------------------------------------------------------------------
Begin-Procedure Get-Broker-Info

  let $DtcAccountNbr = ''

Begin-Select

ST_BROKER_TBL.DTC_ACCOUNT_NBR

  let $DtcAccountNbr = rtrim(&st_broker_tbl.dtc_account_nbr, ' ')

from PS_ST_BROKER_TBL ST_BROKER_TBL
where ST_BROKER_TBL.ST_BROKERAGE_ID = $BrokerId

End-Select

End-Procedure

!------------------------------------------------------------------------------
! Section: Update-Receipt-Date
! Descr:   Update the Purchase Receipt Date
!------------------------------------------------------------------------------

Begin-Procedure Update-Receipt-Date

Begin-Sql
  UPDATE PS_ST_ESPP_PURCH
   SET PURCH_RECEIPT_DT = $AsofToday
   where PS_ST_ESPP_PURCH.EMPLID          = $Emplid
     and PS_ST_ESPP_PURCH.STOCK_ID        = $StockId
     and PS_ST_ESPP_PURCH.STOCK_PLAN_TYPE = 'E'
     and PS_ST_ESPP_PURCH.STOCK_PLAN      = $StockPlan
     and PS_ST_ESPP_PURCH.OFFERING_ID     = $OfferingId
     and PS_ST_ESPP_PURCH.PERIOD_END_DT   = $PeriodEndDt
     and PS_ST_ESPP_PURCH.PROCESS_GROUP   = $ProcessGroup
End-Sql

End-Procedure

!------------------------------------------------------------------------------
! Section: Print-Purchase-Info
! Descr:   Retrieve Purchase Info and print (Multiple Currencies Possible)
!------------------------------------------------------------------------------
Begin-Procedure Print-Purchase-Info

  let #PurchCount = 0

Begin-Select
V.ESPP_CONTRIB_AMT            &Local
V.FROM_CUR
V.RATE_MULT
V.RATE_DIV       
V.ESPP_STOCK_CONTRIB          &Stock
V.TO_CUR

  let #ExchangeRate = &v.rate_mult/&v.rate_div
  if #PurchCount = 0
    print $Header                                          (+1,001,040)
    print &Local                                           (  ,037,022) edit $$$,$99,999,999.999999
    let #PurchCount = #PurchCount + 1
  else
    print &Local                                           (+1,037,022) edit $$$,$99,999,999.999999
  end-if

  print &v.from_cur                                        (  ,061,003)
  print #ExchangeRate                                      (  ,066,016) edit 9999999.99999999
  print &Stock                                             (  ,084,022) edit $$$,$99,999,999.999999
  print &v.to_cur                                          (  ,108,003)

  let #StockTotal   = #StockTotal + &Stock
  let $ToCurrency   = &v.to_cur

from PS_ST_CONTRIB_PART V
where V.EMPLID            = $EmplId
  and V.EMPL_RCD          is not null
  and V.STOCK_ID          = $StockId
  and V.STOCK_PLAN_TYPE   = 'E'
  and V.STOCK_PLAN        = $StockPlan
  and V.OFFERING_ID       = $OfferingId
  and V.PERIOD_END_DT     = $PeriodEndDt
  and V.PROCESS_GROUP     = $ProcessGroup
  and V.ESPP_CONTRIB_SRC    [$ContribSrc]
order by V.FROM_CUR
End-Select

End-Procedure

!------------------------------------------------------------------------------
! Section: Do-Totals
! Descr:
!------------------------------------------------------------------------------
Begin-Procedure Do-Totals

 print '-'                                                 (+1,037,075) fill
 print #StockTotal                                         (+1,084,022) edit 999,999,999,999.999999
 print $ToCurrency                                         (  ,108,003)

End-Procedure

!------------------------------------------------------------------------------
! Section: Print-Shares-Purchased
! Descr:   Retrieve Shares Purchased and print
!------------------------------------------------------------------------------
Begin-Procedure Print-Shares-Purchased

 let #PrintOnce = 1

Begin-Select
R.PROCESS_GROUP
SUM(R.ESPP_RESIDUAL_AMT)               &SumLocal
R.TO_CUR
R.RATE_MULT
R.RATE_DIV
R.ST_OVRD_MARKET_RT                    &OverideRate
SUM(R.ESPP_CONTRIB_AMT)                &SumStock
R.FROM_CUR
R.ESPP_RESIDUAL_TYPE

!--------------------------------------
! This record can only be a refund or
! a Carry Forward. Both will not exist
! for the same employee.
!--------------------------------------

  if #PrintOnce
    if &r.espp_residual_type = 'R'
      print $Refund2Lbl                                    (+1,001,030)
    else
      print $CarryFwd2Lbl                                  (+1,001,030)
    end-if
    let #PrintOnce = 0
  end-if
  let #SystemRate = &r.rate_mult / &r.rate_div
  print &SumStock                                          (  ,037,022) edit $$$,$99,999,999.999999
  print &r.to_cur                                          (  ,061,003)
  print #SystemRate                                        (  ,066,016) edit 9999999.99999999
  print &SumLocal                                          (  ,084,022) edit $$$,$99,999,999.999999
  print &r.from_cur                                        (  ,108,003)

from PS_ST_CONTRIB_RSDL R
where R.EMPLID          = $Emplid
  and R.EMPL_RCD       is not null
  and R.STOCK_ID        = $StockId
  and R.STOCK_PLAN_TYPE = 'E'
  and R.STOCK_PLAN      = $StockPlan
  and R.OFFERING_ID     = $OfferingId
  and R.PERIOD_END_DT   = $PeriodEndDt
  and R.PROCESS_GROUP   = $ProcessGroup
group by R.PROCESS_GROUP, R.TO_CUR, R.RATE_MULT,R.RATE_DIV, R.ST_OVRD_MARKET_RT, R.FROM_CUR, R.ESPP_RESIDUAL_TYPE
order by R.TO_CUR
End-Select

End-Procedure   Print-Shares-Purchased

!------------------------------------------------------------------------------
! SQC Includes
!------------------------------------------------------------------------------
#include 'curdttim.sqc'                ! Procedures: Get-Current-DateTime
#include 'datetime.sqc'                ! Procedures: Init-Datetime
                                       ! Procedures: Format-DateTime
#include 'eoj.sqc'                     ! End of Report Format
#include 'number.sqc'                  ! Procedures: Init-Number
#include 'prcsapi.sqc'                 ! Process Scheduler API
#include 'prcsdef.sqc'                 ! Update Process Open_Trans variable declaration
#include 'reset.sqc'                   ! Reset printer procedure
#include 'rotname1.sqc'                ! First Name, Last Name
#include 'sqrtrans.sqc'                ! Access Strings Table
#include 'strunctl.sqc'                ! Stock Admin's Run Control Record
#include 'stescomn.sqc'                ! Get ESPP Common Procedures
#include 'getprimj.sqc'
#include 'readxlat.sqc'
