!-----------------------------------------------------------------------
! Report Name: STFS011.SQR - Option Valuation Report
!-----------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!-----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:52:24                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!
!-----------------------------------------------------------------------
! Program Descr: This report prints grant, pricing, valuation and totals
!                for all employees having this information for a specified
!                valuation method and Stock ID.
!-----------------------------------------------------------------------
! Options:       None
! Tables:        ST_GRANT
!                ST_GRANT_VALUE
!                ST_GRANT_VAL_DTL
!                ST_VALUE_TBL
!                ST_PERSON_NAME
!-----------------------------------------------------------------------

  #include 'setenv.sqc'

!-----------------------------------------------------------------------
Begin-Setup
!-----------------------------------------------------------------------

  #include 'ptset02.sqc'   !Printer and page-size initialization 

End-Setup

!-----------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     Main Report procedure.
!-----------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Main-Process
  do Reset
  do Delete-Temp-Files
  do Successful-EOJ

  show 'Process ended at:   ' $SysDateTime      !standard output info to sqr.log

End-Program

!-----------------------------------------------------------------------
! Section: Heading Procedures
! Descr:   This sections contains all procedures for
!          printing the optional heading.
!-----------------------------------------------------------------------
Begin-Heading 07

  #Include 'stdhdg01.sqc'

  print $StockIdLbl                                        (-1,001,008)
  print ':'                                                (  ,   ,001)
  print $StockId                                           (  , +3,010)

  do Format-DateTime ($RC_FromDate, $Date, {DEFDATE}, '', '')
  print $FromLbl                                           (  ,075,004)
  print ':'                                                (  ,   ,001)
  print $Date                                              (  , +1,010)

  do Format-DateTime ($RC_ThruDate, $Date, {DEFDATE}, '', '')
  print $ThruLbl                                           (  ,093,004)
  print ':'                                                (  ,   ,001)
  print $Date                                              (  , +1,010)
  print 'Group ID'                                          (+1,001,008)     
  print ':'                                                (  ,   ,001)
  print $RC_ST_GROUP_ID                                    (  , +3,010)
  print $Xlatlongname                                      ( ,   ,   ) center

  print $NameLbl                                           (+2,001,030)
  print $GrantLbl                                          (  ,032,005)
  print $DateLbl                                           (  ,038,004)
  print $SharesLbl                                         (  ,055,006)
  print $GrantLbl                                          (  ,069,005)
  print $GrantLbl                                          (  ,082,005)
  print $ExpectedLbl                                       (  ,090,008)
  print $ValueLbl                                          (  ,140,005)
  print $ValuationLbl                                      (  ,149,009)
  print $TotalLbl                                          (  ,174,005)

  print $EmpIdLbl                                          (+1,001,006)
  print $GrantLbl                                          (  ,032,005)
  print $NumberLbl                                         (  ,038,006)
  print $ValuedLbl                                         (  ,055,006)
  print $PriceLbl                                          (  ,069,005)
  print $FMVLbl                                            (  ,084,003)
  print $LifeLbl                                           (  ,094,004)
  print $VolatilityLbl                                     (  ,100,010)
  print $InterestLbl                                       (  ,113,008)
  print $DividendLbl                                       (  ,124,008)
  print $PerShareLbl                                       (  ,136,009)
  print $CreditLbl                                         (  ,152,006)
  print $ValuationLbl                                      (  ,170,009)
  print '-'                                                (+1,001,179) fill bold

End-Heading

!-----------------------------------------------------------------------
! Procedure: Init-Report
! Descr:     Report initialization procedure.  Set titles, parameters.
!            This is called from the Begin-Program procedure.
!-----------------------------------------------------------------------
Begin-Procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms

  let $ReportId = 'STFS011'

  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.   

  if $prcs_process_instance = ''
    INPUT $RC_STOCK_ID          MAXLEN=10  'Enter Stock ID '  TYPE=CHAR
    uppercase $RC_STOCK_ID

    let $RC_STOCK_ID  = rtrim($RC_STOCK_ID ,' ')
    
    while $RC_STOCK_ID  = ''
       input $RC_STOCK_ID       MAXLEN=10 'Stock ID is required'  Type=Char
    end-while

    display ''
    display 'Valuation Methods are as follows:'
    display ''
    display '   S = Single Valuation Method'
    display '   M = Multiple Valuation Method'
    display ''
    INPUT $RC_ST_VALUE_METHOD MAXLEN=1   'Enter Valuation Method '  TYPE=CHAR
    uppercase $RC_ST_VALUE_METHOD

    let $RC_ST_VALUE_METHOD  = rtrim($RC_ST_VALUE_METHOD ,' ')
    
    while $RC_ST_VALUE_METHOD  = ''
       input $RC_ST_VALUE_METHOD      MAXLEN=1 'Valuation Method is required'  Type=Char
    end-while

    display ''
    display 'Report Type is as follows:'
    display ''
    display '   Y = Print Details and Summary'
    display '   N = Print Summary Only'
    display ''
    INPUT $ReportType       MAXLEN=1   'Enter Report Type '  TYPE=CHAR
    uppercase $ReportType
    do Ask-From-Thru-Date
  else
    do Get-SQR-Parms
  end-if

  do Init-Variables

  show 'Process started at: ' $SysDateTime      !standard output info to sqr.log

End-Procedure

!-----------------------------------------------------------------------
! Procedure: Report-Translation
! Descr:     This procedure is used to read language-dependent text from
!            the database.
!-----------------------------------------------------------------------
Begin-Procedure Report-Translation

  do Init_Report_Translation('STOCK', $Language_Cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK',  'STOCK_ID',         $StockIdLbl,     #DW)
  do Get_Field_Information ('STOCK',  'GRANT',            $GrantLbl,       #DW)
  do Get_Field_Information ('STOCK',  'SHARES',           $SharesLbl,      #DW)
  do Get_Field_Information ('STOCK',  'NAME',             $NameLbl,        #DW)
  do Get_Field_Information ('STOCK',  'EMPLID',           $EmpIdLbl,       #DW)
  do Get_Field_Information ('STOCK',  'DATE',             $DateLbl,        #DW)
  do Get_Field_Information ('STOCK',  'NUMBER',           $NumberLbl,      #DW)
  do Get_Field_Information ('STOCK',  'FROM',             $FromLbl,        #DW)
  do Get_Field_Information ('STOCK',  'THRU',             $ThruLbl,        #DW)
  do Get_Field_Information ('STOCK',  'PRICE',            $PriceLbl,       #DW)
  do Get_Field_Information ('STOCK',  'EXPECTED',         $ExpectedLbl,    #DW)
  do Get_Field_Information ('STOCK',  'LIFE',             $LifeLbl,        #DW)
  do Get_Field_Information ('STOCK',  'INTEREST',         $InterestLbl,    #DW)
  do Get_Field_Information ('STOCK',  'VOLATILITY',       $VolatilityLbl,  #DW)
  do Get_Field_Information ('STOCK',  'DIVIDEND',         $DividendLbl,    #DW)
  do Get_Field_Information ('STOCK',  'PER_SHARE',        $PerShareLbl,    #DW)
  do Get_Field_Information ('STOCK',  'TOTAL',            $TotalLbl,       #DW)
  do Get_Field_Information ('STOCK',  'VALUATION',        $ValuationLbl,   #DW)
  do Get_Field_Information ('STOCK',  'VALUE',            $ValueLbl,       #DW)
  do Get_Field_Information ('STOCK',  'ESTIMATE',         $EstimateLbl,    #DW)
  do Get_Field_Information ('STOCK',  'WEIGHTED_AVERAGE', $TWghtAvgLbl,    #DW)

  do Get_Field_Information ('STFS011','REPORT_TITLE1',    $ReportTitle1,   #DW)
  do Get_Field_Information ('STFS011','REPORT_TITLE2',    $ReportTitle2,   #DW)
  do Get_Field_Information ('STFS011','CREDIT',           $CreditLbl,      #DW)
  do Get_Field_Information ('STFS011','FMV',              $FMVLbl,         #DW)
  do Get_Field_Information ('STFS011','TOTALS',           $TotalsLbl,      #DW)
  do Get_Field_Information ('STFS011','WEIGHTED_AVG',     $WghtAvgLbl,     #DW)
  do Get_Field_Information ('STFS011','DATA_ERROR_MSG',   $DataErrorMsg,   #DW)
  do Get_Field_Information ('STFS011','VALUED',          $ValuedLbl,      #DW)
  do Get_Field_Information ('STFS011','GROUP_ID',         $GroupLbl,       #DW)
End-Procedure Report-Translation

!-----------------------------------------------------------------------
! Procedure: Init-Variables
! Descr:     Initializes all report variables
!-----------------------------------------------------------------------
Begin-Procedure Init-Variables

  let $SQLQuote      = ''''
  let #Count       = 0
  let #TotalCount  = 0
  let $StockId     = rtrim($RC_STOCK_ID,' ')
  let $ValueMethod = rtrim($RC_ST_VALUE_METHOD,' ')
  let $ReportType  = rtrim($RC_ST_SUPPR_DTLS, ' ')
  let $RC_FromDate = rtrim($RC_FromDate,' ')
  let $RC_ThruDate = rtrim($RC_ThruDate,' ') 
  let $RC_ST_GROUP_ID = rtrim($RC_ST_GROUP_ID,' ')

  move $ValueMethod to $FieldValue
  move 'ST_VALUE_METHOD' to $Fieldname
  do Read-Translate-Table
  let $Xlatlongname = rtrim($Xlatlongname,' ')

  if $ReportType = 'Y'  !Meaning Print Details
       move $ReportTitle1  to  $ReportTitle
  else
       move $ReportTitle2  to  $ReportTitle
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Main-Process
! Descr:   Main process used to select the data, print details and totals
!-----------------------------------------------------------------------
Begin-Procedure Main-Process

  do Select-Valuation-Data

  if #TotalCount > 0 or $ReportType = 'N'
      do Print-Totals
  end-if

  if #TotalCount = 0
      print $DataErrorMsg                                  (+5,085,040)
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Valuation-Data
! Descr:   This procedure does the main grant selection for valuation and
!          determines what gets printed based on either the single or
!          multiple method option indicated
!-----------------------------------------------------------------------
Begin-Procedure Select-Valuation-Data

Begin-Select

A.EMPLID
A.GRANT_NBR
A.GRANT_DT
A.SHARES_GRANTED
A.REPRICE_GRANT_NBR
B.GRANT_FMV
B.GRANT_PRICE
B.ST_EXPECTED_LIFE
B.ST_INTEREST_RATE
B.ST_VOLATILITY
B.ST_DIVIDEND_RATE
B.ST_VALUE_PER_SHARE
C.ST_VALUE_METHOD
D.NAME

  let #TotalCount      = #TotalCount + 1
  let #ValuationCredit = 0
  let #SharesValued    = 0
  let $Partialprint    = 'Y'

  let $EmplID          = rtrim(&a.emplid, ' ')
  let $GrantDt         = rtrim(&a.grant_dt, ' ')
  let $GrantNbr        = rtrim(&a.grant_nbr, ' ')
  let $ValueMethod     = rtrim(&c.st_value_method, ' ')
  let #SharesGranted   = &a.shares_granted
  let $RepriceGrantNbr = rtrim(&a.reprice_grant_nbr, ' ')
  let #GrantPrice      = &b.grant_price
  let #GrantFmv        = &b.grant_fmv
  let #ExpectLife      = &b.st_expected_life
  let #Volatility      = &b.st_volatility
  let #InterestRate    = &b.st_interest_rate
  let #DividendRate    = &b.st_dividend_rate
  let #ValuePerShare   = &b.st_value_per_share

  if $RepriceGrantNbr > '0'
     do Check-Valuation-Credit
  end-if

  let #TotalGranted       = #TotalGranted  + #SharesGranted
  let #ExpectedLifeAW     = #SharesGranted * #ExpectLife
  let #InterestAW         = #SharesGranted * #InterestRate
  let #VolatilityAW       = #SharesGranted * #Volatility
  let #DividendAW         = #SharesGranted * #DivendendRate
  let #ValPerShareAW      = #SharesGranted * #ValuePerShare

  let #TotalValuation  = (#ValuePerShare * #SharesGranted) - (#ValuationCredit * #SharesValued)
  let #TotalValuation  = round(#TotalValuation,2)

  let #TotalExpectLifeAW  = #TotalExpectLifeAW  + #ExpectedLifeAW
  let #TotalVolatilityAW  = #TotalVolatilityAW  + #VolatilityAW
  let #TotalInterestAW    = #TotalInterestAW    + #InterestAW
  let #TotalDividendAW    = #TotalDividendAW    + #DividendAW
  let #TotalValPerShareAW = #TotalValPerShareAW + #ValPerShareAW

  if $ValueMethod = 'S'
    let #IndvTotValuation   = #IndvTotValuation + #TotalValuation
    if $ReportType = 'Y'
      do Print-Single-Detail
    end-if
  else
    if $ValueMethod = 'M'
      do Select-Grant-Value-Detail
    end-if
  end-if

from  PS_ST_GRANT         A,
      PS_ST_GRANT_VALUE   B,
      PS_ST_VALUE_TBL     C,
      PS_ST_STFS011_TAO   B1,
      PS_ST_PERSON_NAME   D
where B1.STOCK_ID        = A.STOCK_ID
  and B1.EMPLID          = A.EMPLID
  and B1.GRANT_NBR       = A.GRANT_NBR
  and B.STOCK_ID        = A.STOCK_ID
  and B.EMPLID          = A.EMPLID
  and B.GRANT_NBR       = A.GRANT_NBR
  and B.ST_VALUE_EFFDT  = A.GRANT_DT
  and B.ST_VALUE_REASON = 'I'
  and C.STOCK_ID        = B.STOCK_ID
  and C.ST_VALUATION_ID = B.ST_VALUATION_ID
  and C.ST_VALUE_METHOD = $ValueMethod
  and D.EMPLID          = A.EMPLID
  and ( A.GRANT_DT        < A.ST_CANCEL_DT 
  OR A.ST_CANCEL_DT IS NULL)
order by D.NAME,
         A.GRANT_NBR

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Check-Valuation-Credit
! Descr:   Checks to see if the option has been repriced and gets the
!          Value-Per-Share for that repriced grant to arrive at the
!          Valuation-Credit amount
!-----------------------------------------------------------------------
Begin-Procedure Check-Valuation-Credit

  let #SharesValued    = 0
  let #ValuationCredit = 0

Begin-Select

A2.ST_VALUE_PER_SHARE
A2.SHARES_VALUED

  let #SharesValued    = &a2.shares_valued
  let #ValuationCredit = &a2.st_value_per_share

from  PS_ST_GRANT       A1,
      PS_ST_GRANT_VALUE A2
where A1.GRANT_NBR       = $RepriceGrantNbr
  and A1.EMPLID          = $EmplID
  and A1.STOCK_ID        = $StockId
  and A2.EMPLID          = A1.EMPLID
  and A2.STOCK_ID        = A1.STOCK_ID
  and A2.GRANT_NBR       = A1.GRANT_NBR
  and A2.ST_VALUE_REASON = 'R'

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Grant-Value-Detail
! Descr:   This procedure selects the individual vesting amounts for
!          each Grant Value Detail.  Information is used to report the
!          information for the multiple method option indicated
!-----------------------------------------------------------------------
Begin-Procedure Select-Grant-Value-Detail

  let #Count = 0

Begin-Select

GV.GRANT_NBR                                               (  ,   ,   ) on-break print=never after=Print-Multiple
GV.ST_EXPECTED_LIFE
GV.ST_INTEREST_RATE
GV.ST_VOLATILITY
GV.ST_DIVIDEND_RATE
GV.ST_VALUE_PER_SHARE
GV.SHARES_VALUED

  let #Count             = #Count + 1
  let $GVGrantNbr        = rtrim(&gv.grant_nbr, ' ')
  let #GVExpectLife      = &gv.st_expected_life
  let #GVVolatility      = &gv.st_volatility
  let #GVInterestRate    = &gv.st_interest_rate
  let #GVDividendRate    = &gv.st_dividend_rate
  let #GVValuePerShare   = &gv.st_value_per_share
  let #GVSharesValued    = &gv.shares_valued
  let #GVTotalValuation  = round(#GVValuePerShare * #GVSharesValued,2)
  let #SubTotValuation   = #SubTotValuation + #GVTotalValuation

  if #Count > 1
     let $Partialprint = 'N'
  end-if
  if $ReportType = 'Y'
    if #Count = 1
      do Print-Multiple-Detail1
      do Print-Multiple-Detail2
    end-if
    if #Count = 2
      do Print-Multiple-Detail2
    end-if
    if #Count > 2
      do Print-Multiple-Detail3
    end-if
  end-if

from  PS_ST_GRNT_VAL_DTL GV
where GV.EMPLID         = $EmplID
  and GV.STOCK_ID       = $StockId
  and GV.GRANT_NBR      = $GrantNbr
  and GV.ST_VALUE_EFFDT = $GrantDt

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Single-Detail
! Descr:   Prints the report detail line for the Single Option Method.
!-----------------------------------------------------------------------
Begin-Procedure Print-Single-Detail

  let $Name = rtrim(&d.name,' ')
  do Format-DateTime ($GrantDt, $GrantDt, {DEFDATE}, '', '')
  print $Name                                              (+1,001,030)
  print $GrantDt                                           (  ,032,010)
  print #SharesGranted                                     (  ,044,017) edit 99,999,999.999999
  print #GrantPrice                                        (  ,063,011) edit $999.999999
  print #GrantFmv                                          (  ,076,011) edit $999.999999
  print #ExpectLife                                        (  ,089,009) edit 99.999999
  print #Volatility                                        (  ,102,008) edit 9.999999
  print #InterestRate                                      (  ,112,009) edit 99.999999
  print #DividendRate                                      (  ,123,009) edit 99.999999
  print #ValuePerShare                                     (  ,134,011) edit $999.999999
  print #ValuationCredit                                   (  ,147,011) edit $999.999999
  print #TotalValuation                                    (  ,160,019) edit $999,999,999,999.99
  print $EmplID                                            (+1,001,010)
  print $GrantNbr                                          (  ,032,010)

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Multiple-Detail1
! Descr:   Prints the rest of the report details for using the Multiple 
!          Option Method. Goes back to previous print line and fills in
!          the data for actual grant vesting information
!-----------------------------------------------------------------------
Begin-Procedure Print-Multiple-Detail1

  let $Name = rtrim(&d.name,' ')
  do Format-DateTime ($GrantDt, $GrantDt, {DEFDATE}, '', '')
  print $Name                                              (+1,001,030)
  print $GrantDt                                           (  ,032,010)
  print #GVSharesValued                                    (  ,044,017) edit 99,999,999.999999
  print #GrantPrice                                        (  ,063,011) edit $999.999999
  print #GrantFmv                                          (  ,076,011) edit $999.999999
  print #GVExpectLife                                      (  ,089,009) edit 99.999999
  print #GVVolatility                                      (  ,102,008) edit 9.999999
  print #GVInterestRate                                    (  ,112,009) edit 99.999999
  print #GVDividendRate                                    (  ,123,009) edit 99.999999
  print #GVValuePerShare                                   (  ,134,011) edit $999.999999
  print #ValuationCredit                                   (  ,147,011) edit $999.999999
  print #GVTotalValuation                                  (  ,160,019) edit $999,999,999,999.99

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Multiple-Detail2
! Descr:   Prints the rest of the report details for using the Multiple
!          Option Method except if more than one detail line it adds
!          one to the line counters without printing the initial detail
!          information.
!-----------------------------------------------------------------------
Begin-Procedure Print-Multiple-Detail2

  if $Partialprint = 'Y'
    print $EmplID                                            (+1,001,010)
    print $GrantNbr                                          (  ,032,010)
  else 
    print #GVSharesValued                                    (  ,044,017) edit 99,999,999.999999
    print #GrantPrice                                        (  ,063,011) edit $999.999999
    print #GrantFmv                                          (  ,076,011) edit $999.999999
    print #GVExpectLife                                      (  ,089,009) edit 99.999999
    print #GVVolatility                                      (  ,102,008) edit 9.999999
    print #GVInterestRate                                    (  ,112,009) edit 99.999999
    print #GVDividendRate                                    (  ,123,009) edit 99.999999
    print #GVValuePerShare                                   (  ,134,011) edit $999.999999
    print #ValuationCredit                                   (  ,147,011) edit $999.999999
    print #GVTotalValuation                                  (  ,160,019) edit $999,999,999,999.99
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Multiple-Detail3
! Descr:   Prints the rest of the report details for using the Multiple
!          Option Method except if more than one detail line it adds
!          one to the line counters without printing the initial detail
!          information.
!-----------------------------------------------------------------------
Begin-Procedure Print-Multiple-Detail3

  print #GVSharesValued                                    (+1,044,017) edit 99,999,999.999999
  print #GrantPrice                                        (  ,063,011) edit $999.999999
  print #GrantFmv                                          (  ,076,011) edit $999.999999
  print #GVExpectLife                                      (  ,089,009) edit 99.999999
  print #GVVolatility                                      (  ,102,008) edit 9.999999
  print #GVInterestRate                                    (  ,112,009) edit 99.999999
  print #GVDividendRate                                    (  ,123,009) edit 99.999999
  print #GVValuePerShare                                   (  ,134,011) edit $999.999999
  print #ValuationCredit                                   (  ,147,011) edit $999.999999
  print #GVTotalValuation                                  (  ,160,019) edit $999,999,999,999.99

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Multiple
! Descr:   Prints the subtotal for all Grant Value Details previously
!          printed.  This information is stored in the Grant Value
!          table and is retrieved and printed from that record.  There
!          is no need to reset these counts since this information is
!          reset everytime a new grant number is selected.
!-----------------------------------------------------------------------
Begin-Procedure Print-Multiple

  let #IndvTotValuation  = #IndvTotValuation + #SubTotValuation

  if $ReportType = 'Y'
     let #SharesGranted   = &a.shares_granted
     let #ExpectLife      = &b.st_expected_life
     let #Volatility      = &b.st_volatility
     let #InterestRate    = &b.st_interest_rate
     let #DividendRate    = &b.st_dividend_rate
     let #ValuePerShare   = &b.st_value_per_share
     print #SharesGranted                                  (+1,044,017) edit 99,999,999.999999 bold
     print #ExpectLife                                     (  ,089,009) edit 99.999999 bold
     print #Volatility                                     (  ,102,008) edit 9.999999 bold
     print #InterestRate                                   (  ,112,009) edit 99.999999 bold
     print #DividendRate                                   (  ,123,009) edit 99.999999 bold
     print #ValuePerShare                                  (  ,134,011) edit $999.999999 bold
     print #SubTotValuation                                (  ,160,019) edit $999,999,999,999.99 bold
     print ' '                                             (+1,   ,   )
  end-if

  let #SubTotValuation = 0

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Totals
! Descr:   Prints the final totals for the report. Is used by both the
!          Single and Multiple Valuation Option methods.
!-----------------------------------------------------------------------
Begin-Procedure Print-Totals

  let #TotalExpectLife  = 0
  let #TotalVolatility  = 0
  let #TotalInterest    = 0
  let #TotalDividend    = 0
  let #TotalValPerShare = 0

  if #TotalExpectLifeAW > 0
     let #TotalExpectLife  = #TotalExpectLifeAW / #TotalGranted
  end-if

  if #TotalVolatilityAW > 0
     let #TotalVolatility  = #TotalVolatilityAW / #TotalGranted
  end-if

  if #TotalInterestAW > 0
     let #TotalInterest    = #TotalInterestAW / #TotalGranted
  end-if

  if #TotalDividendAW > 0
     let #TotalDividend    = #TotalDividendAW / #TotalGranted
  end-if

  if #TotalValPerShareAW > 0
     let #TotalValPerShare = #TotalValPerShareAW / #TotalGranted
  end-if

  let #FinalTotValuation   = #IndvTotValuation

  print $TWghtAvgLbl                                       (+2,001,024) bold
  print ':'                                                (  ,   ,   ) bold
  print #TotalGranted                                      (  ,044,017) edit 99,999,999.999999 bold
  print #TotalExpectLife                                   (  ,089,009) edit 99.999999 bold
  print #TotalVolatility                                   (  ,102,008) edit 9.999999 bold
  print #TotalInterest                                     (  ,112,009) edit 99.999999 bold
  print #TotalDividend                                     (  ,123,009) edit 99.999999 bold
  print #TotalValPerShare                                  (  ,134,011) edit $999.999999 bold
  print #FinalTotValuation                                 (  ,160,019) edit $999,999,999,999.99 bold
End-Procedure

!-----------------------------------------------------------------------
! Section: Delete-Temp-Files
! Descr:   Deletes the ST_STFS011_TBL Temporary Files
!-----------------------------------------------------------------------
Begin-Procedure Delete-Temp-Files


 let $Procedure = 'Delete-Temp'
 let $SQL-Statement = 'Procedure: ' || $Procedure

Begin-Sql   on-error = SQL-Error

 DELETE from PS_ST_STFS011_TAO


End-Sql
End-Procedure

!-----------------------------------------------------------------------
! SQC Includes
!-----------------------------------------------------------------------
#include 'strunctl.sqc'   ! Stock Admin's Run Control Record
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'    ! Update Process Open_Trans variable declaration
#include 'eoj.sqc'        ! End of Report Format
#include 'sqrtrans.sqc'   ! Access Strings Table
#include 'reset.sqc'      ! Reset printer procedure
#include 'curdttim.sqc'   ! Get-Current-DateTime procedure
#include 'datemath.sqc'
#include 'datetime.sqc'   ! Routines for date and time formatting
                          ! Procedures: Init-Datetime
                          ! Procedures: Format-DateTime
                          ! Procedures: Diff-Date
#include 'number.sqc'     ! Procedures: Init-Number
#include 'askftd.sqc'     ! From Thru Date input
#include 'getrplng.sqc'   ! Gets the report language
#include 'readxlat.sqc'   ! Gets the report language
