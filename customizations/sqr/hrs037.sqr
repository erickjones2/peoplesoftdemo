!***********************************************************************
!  HRS037:  Pre-Screening Activity Report                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/06/07:08:42:43                                 !
!       $Release:  HR92                                                !
!      $Revision:  104                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'   !Printer and page-size initialization

begin-report

   do INIT-REPORT 
   do PROCESS-MAIN
   do RESET
   do STDAPI-TERM
end-report

begin-setup
declare-variable
   integer #hrs_site_id 
   integer #hrs_person_id
   integer #hrs_job_opening_id
   end-declare
end-setup

begin-heading 4
   print $RPT_CONF_MSG                    ()         bold center
   print 'PeopleSoft'                     (+1,,)     bold center
   print $REPORT_ID                       (+1,5)
   print $ReportID                        ()
   uppercase $REPORT_TITLE
   print $REPORT_TITLE                    ()         bold center
   let #RptCol = {ColR} - 2
   page-number                            (-2,#RptCol)  'Page No. '
   print $RUN_DATE                        (+1,#RptCol)
   print $ReportDate                      ()
   print $RUN_TIME                        (+1,#RptCol)
   print $ReportTime                      ()
   GRAPHIC                                (+1, 4, 170) Horz-line
end-heading

!**********************************************************************!
! Function:    INIT-REPORT                                             !
! Description: initialize report parameters                            ! 
!**********************************************************************!
begin-procedure INIT-REPORT

   add 1 to #level
   move 'INIT-REPORT'               to $Current-Procedure

#ifdef DebugF
   do PRINT-FLOW
#endif
   move 'HRS037' to $ReportID
   move $REPORT_TITLE to $ReportTitle
   
   do INIT-DATETIME
   do INIT-NUMBER
   do GET-CURRENT-DATETIME
   do DEFINE-PRCS-VARS
   do GET-RUN-CONTROL-PARMS
  
   move #prcs_process_instance to $PI_CHAR 9999999999

   !do WRITE-START-MSG-LOG

   ! If the language is specified by operator, get string translation fields once
   ! in operator's language.
   let $rpt_language_cd = $prcs_language_cd

   do GET-HRS037-STRING-TABLE-DEFN

   ! Initialize total_page_lines
   !move 0 to #total_page_lines

   ! Set page control flag.
   !move 'Y' to $First_Report_Page

   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PROCESS-MAIN                                              !
! Descr: This procedure prints pre-screening activity report           !
!----------------------------------------------------------------------!
begin-procedure PROCESS-MAIN
   add 1 to #level
   move 'PROCESS-MAIN' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

begin-select
RCR.HRS_SCH_CHKBOX 
RCR.BUSINESS_UNIT
RCR.HRS_SITE_ID
RCR.FROM_DATE
RCR.TO_DATE
RCR.HRS_PRSCR_SORT_BY
RCR.SORT_A_D
RCR.HRS_ADMIN_FLG

   move &RCR.HRS_ADMIN_FLG to $isRecruitingAdmin
   move &RCR.HRS_SITE_ID to #hrs_site_id
   move &RCR.BUSINESS_UNIT to $bus_unit
   
   let $JOB_OPENING_FLD = ''     ! to pass jo field id for Section 1, blank if not administrator
   let $JOB_OPENING_REC_FLD = '' ! to pass jo rec field for Section 1, blank if not administrator
   let $DISP_STATCD_REC_FLD = '' ! For Disposition status code for Section 1, blank if not admininstator  
   let $DISP_STATCD_REC_FLD = 'RCMNT.STATUS_CODE'
   If &RCR.HRS_SCH_CHKBOX <> 'Y' 
      let $JOB_OPENING_FLD = 'HRS_JOB_OPENING_ID' 
      let $JOB_OPENING_REC_FLD = 'PSCRN.HRS_JOB_OPENING_ID'
   End-If
   Show '$JOB_OPENING_REC_FLD: ' $JOB_OPENING_REC_FLD
   Show '$DISP_STATCD_REC_FLD: ' $DISP_STATCD_REC_FLD 
   
   do Get-Employee-ID

   do BUILD-FROM-SQL

   if &RCR.HRS_PRSCR_SORT_BY <> ' '
      do BUILD-ORDER-BY-SQL
   end-if

   do BUILD-WHERE-SQL
  
   do GET-PRESCREENING-ACTIVITY

FROM PS_HRS_RUN_HRS037 RCR
WHERE RCR.OPRID = $prcs_oprid
AND RCR.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: BUILD-ORDER-BY-SQL                                        !
! Descr: Build ORDEY BY clause                                         !
!----------------------------------------------------------------------!
begin-procedure BUILD-ORDER-BY-SQL
   add 1 to #level
   move 'BUILD-ORDER-BY-SQL' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   let $ORDERBY1 = ''  ! Order By for Section 1
   let $ORDERBY2 = ''  ! Order By for Section 2
   
   Evaluate &RCR.HRS_PRSCR_SORT_BY
   When = 'A' ! Applicant ID
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_PERSON_ID ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_PERSON_ID ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_PERSON_ID DESC' 
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_PERSON_ID DESC'     
      End-If
      Break
   When = 'D' ! Screening Date
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_STATUS_DT ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_STATUS_DT ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_STATUS_DT DESC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_STATUS_DT DESC'      
      End-If   
      Break      
   When = 'G' ! Gender
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY APPI.SEX ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY APPIA.SEX ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY APPI.SEX DESC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY APPIA.SEX DESC'      
      End-If  
      Break          
   When = 'J' ! Job Opening ID
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_JOB_OPENING_ID ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_JOB_OPENING_ID ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_JOB_OPENING_ID DESC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_JOB_OPENING_ID DESC'      
      End-If 
      Break        
   When = 'N' ! Applicant Name
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY APPNM.NAME_DISPLAY ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY APPNMA.NAME_DISPLAY ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY APPNM.NAME_DISPLAY DESC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY APPNMA.NAME_DISPLAY DESC'      
      End-If
      Break         
   When = 'P' ! Disposition
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY APPI.STATUS_CODE ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY APPIA.STATUS_CODE ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY APPI.STATUS_CODE DESC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY APPIA.STATUS_CODE DESC'      
      End-If
      Break         
   When = 'R' ! Screening Result
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_SCR_STATUS ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_SCR_STATUS ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_SCR_STATUS DESC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_SCR_STATUS DESC'      
      End-If
      Break         
   When = 'S' ! Site ID
      If &RCR.SORT_A_D = 'A'
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_SITE_ID ASC'
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_SITE_ID ASC'
      Else
         let $ORDERBY1 = $ORDERBY1 || 'ORDER BY PSCRN.HRS_SITE_ID DESC' 
         let $ORDERBY2 = $ORDERBY2 || 'ORDER BY PSCRNA.HRS_SITE_ID DESC'      
      End-If
      Break         
   When-Other
      Break
   End-Evaluate

   show 'ORDERBY1: ' $ORDERBY1
   show 'ORDERBY2: ' $ORDERBY2

   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: BUILD-FROM-SQL                                            !
! Descr: Build FROM clause                                             !
!----------------------------------------------------------------------!
begin-procedure BUILD-FROM-SQL
   add 1 to #level
   move 'BUILD-FROM-SQL' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF
   show '&RCR.HRS_ADMIN_FLG: ' &RCR.HRS_ADMIN_FLG 
   show '&RCR.HRS_SCH_CHKBOX: ' &RCR.HRS_SCH_CHKBOX
   let $FROM1 = ''  ! Order By for Section 1
   let $FROM2 = ''  ! Order By for Section 2
   If &RCR.HRS_SCH_CHKBOX = 'Y'
   !  let $FROM1 = $FROM1 || ' PS_HRS_APP_PSCREEN PSCRN, PS_HRS_APP_NAMES APPNM, PS_HRS_APPLICANT_I APPI '
      let $FROM1 = $FROM1 || ' PS_HRS_APP_PSCREEN PSCRN, PS_HRS_APP_NAMES APPNM, PS_HRS_APPLICANT_I APPI, PS_HRS_RCMNT_I RCMNT '
      let $FROM2 = $FROM2 || ' PS_HRS_APP_PSCREEN PSCRNA, PS_HRS_APP_NAMES APPNMA, PS_HRS_APPLICANT_I APPIA '
      let $FROM3 = $FROM3 || ' PS_HRS_APP_PSCREEN PSCRNB '
   else
      let $FROM1 = $FROM1 || ' PS_HRS_APP_JOPSCRN PSCRN, PS_HRS_APP_NAMES APPNM, PS_HRS_APPLICANT_I APPI, PS_HRS_RCMNT_I RCMNT '
      let $FROM2 = $FROM2 || ' PS_HRS_APP_JOPSCRN PSCRNA, PS_HRS_APP_NAMES APPNMA, PS_HRS_APPLICANT_I APPIA '
      let $FROM3 = $FROM3 || ' PS_HRS_APP_JOPSCRN PSCRNB '
   End-If
  
   show '$FROM1: ' $FROM1
   show '$FROM2: ' $FROM2
   show '$FROM3: ' $FROM3
   subtract 1 from #level
end-procedure


!----------------------------------------------------------------------!
! Procedure: BUILD-WHERE-SQL                                           !
! Descr: Build WHERE clause                                            !
!----------------------------------------------------------------------!
begin-procedure BUILD-WHERE-SQL
   add 1 to #level
   move 'BUILD-WHERE-SQL' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   let $ADDITIONAL_WHERE = ''  ! Order By for Section 1
   let $ADDITIONAL_WHERE = ''  ! Order By for Section 2
   Show '#hrs_site_id: ' #hrs_site_id
   let $hrs_site_id_str = ''
   let $hrs_site_id_str=to_char(#hrs_site_id)
   ! Standard Security applies in terms of the viewing results in this report.  
   ! The recruiting administrator would be the only person who can see all results for Applicants. 
   ! Only the originator such as Hiring Manager and Recruiter would be able to see Applicants 
   ! for their own Job Openings. Applicants who have no Job Opening can be seen by any user.
   If &RCR.HRS_SCH_CHKBOX = 'Y'
      If #hrs_site_id <> 0
         let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || 'AND PSCRN.HRS_SITE_ID = '
         let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || $hrs_site_id_str
         let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || 'AND PSCRNA.HRS_SITE_ID = '
         let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || $hrs_site_id_str
      end-if
         let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || ' AND RCMNT.HRS_PERSON_ID = PSCRN.HRS_PERSON_ID AND '
         let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || 'RCMNT.HRS_PROFILE_SEQ = PSCRN.HRS_PROFILE_SEQ AND '
         let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || 'RCMNT.HRS_STATUS_DT = PSCRN.HRS_STATUS_DT '
         let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || 'AND RCMNT.HRS_JOB_OPENING_ID=0 '
   else
      If &RCR.BUSINESS_UNIT <> ' '
         If &RCR.HRS_ADMIN_FLG = 'Y'
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || ' AND PSCRN.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING WHERE BUSINESS_UNIT = '
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || '''' || $bus_unit || '''' || ')'
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || ' AND PSCRNA.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING WHERE BUSINESS_UNIT = '
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || '''' || $bus_unit || '''' || ')'  
         Else 
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || ' AND PSCRN.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING WHERE BUSINESS_UNIT = '
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || '''' || $bus_unit || ''''
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || ' AND ORIGINATOR_ID = '
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || '''' || $hrs_emplid || '''' || ')'
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || ' AND PSCRNA.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING WHERE BUSINESS_UNIT = '
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || '''' || $bus_unit || '''' 
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || ' AND ORIGINATOR_ID = '
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || '''' || $hrs_emplid || '''' || ')'   
         End-If      
      Else
         If &RCR.HRS_ADMIN_FLG = 'Y'
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || ' AND PSCRN.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING)'
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || ' AND PSCRNA.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING)'
         Else
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || ' AND PSCRN.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING WHERE ORIGINATOR_ID = '
            let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || '''' || $hrs_emplid || '''' || ')'
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || ' AND PSCRNA.HRS_JOB_OPENING_ID IN (SELECT HRS_JOB_OPENING_ID FROM PS_HRS_JOB_OPENING WHERE ORIGINATOR_ID = '
            let $ADDITIONAL_WHERE2 = $ADDITIONAL_WHERE2 || '''' || $hrs_emplid || '''' || ')'          
         End-If               
      End-if
      let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || ' AND RCMNT.HRS_PERSON_ID = PSCRN.HRS_PERSON_ID AND '
      let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || 'RCMNT.HRS_JOB_OPENING_ID = PSCRN.HRS_JOB_OPENING_ID AND '
      let $ADDITIONAL_WHERE1 = $ADDITIONAL_WHERE1 || 'RCMNT.HRS_PROFILE_SEQ = PSCRN.HRS_PROFILE_SEQ '
   End-If
  
   show '$ADDITIONAL_WHERE1:' $ADDITIONAL_WHERE1
   show '$ADDITIONAL_WHERE2:' $ADDITIONAL_WHERE2

   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: GET-PRESCREENING-ACTIVITY                                 !
! Descr: Get Pre-Screening Activity                                    !
!----------------------------------------------------------------------!
begin-procedure GET-PRESCREENING-ACTIVITY
   add 1 to #level
   move 'GET-PRESCREENING-ACTIVITY' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   ! Print Report Section 1
   print $RPT_SECTION1       (+1,5,#cw_RPT_SECTION1)  bold
   
   ! Print Report Columns
   do PRINT-REPORT_COLUMNS-SECT1
   
begin-select   
PSCRN.HRS_PERSON_ID 
APPNM.NAME_DISPLAY
PSCRN.HRS_STATUS_DT 
PSCRN.HRS_SITE_ID 
APPI.SEX
[$JOB_OPENING_REC_FLD] &PSCRN.HRS_JOB_OPENING_ID=Number
APPI.STATUS_CODE
[$DISP_STATCD_REC_FLD] &RCMNT.STATUS_CODE=char
PSCRN.HRS_SCR_STATUS

   ! Get Applicant's ID and name 
   move &PSCRN.HRS_PERSON_ID to #hrs_person_id
   move &APPNM.NAME_DISPLAY to $hrs_name

   ! Get and Format Screening Date
   do Format-DateTime(&PSCRN.HRS_STATUS_DT ,$hrs_status_dt,{DEFDATE},'','')

   ! Get Site Info
   move &PSCRN.HRS_SITE_ID to #hrs_site_id
   do Get-Site-Id
   
   ! Get Job Opening
   If &RCR.HRS_SCH_CHKBOX <> 'Y'
      move &PSCRN.HRS_JOB_OPENING_ID to #hrs_job_opening_id
   End-If   
   
   ! Display Gender and Ethnic Group in the report for Recruitment Admins only
   If &RCR.HRS_ADMIN_FLG = 'Y'
      ! Get Applicant's Gender
      move 'SEX' to $FieldName
      move &APPI.SEX  to $FieldValue
      do Read-Translate-Table
      let $hrs_appl_sex = $XlatLongName
      
      ! Get Applicant's Ethnicity
      if &RCR.HRS_SCH_CHKBOX <> 'Y' 
         do GET-BUS-UNIT-AND-REGULATORY-REGION
      else
         do GET-REG-REGION
      End-if
      do GET-APPL-ETHNIC-CODE 
      if $hrs_ethnic_grp_cd_descr = ''
         let $hrs_ethnic_grp_cd_descr = $NOT_SPECIFIED
      end-if
   end-if
   
        
   ! Get Applicant's Disposition status
   Show '&RCMNT.STATUS_CODE: ' &RCMNT.STATUS_CODE
   Show '&RCR.HRS_ADMIN_FLG: ' &RCR.HRS_ADMIN_FLG
  
   do Get-Disp-Status-Description   
   Show '$StatusCodeDescr: ' $StatusCodeDescr
   
   ! Get Screening Status
   move 'HRS_SCR_STATUS' to $FieldName
   move &PSCRN.HRS_SCR_STATUS  to $FieldValue
   do Read-Translate-Table
   let $hrs_scr_status = $XlatLongName

   
   do PRINT-PRESCREEN-ACTIVITY-SECT1

FROM [$FROM1]
WHERE PSCRN.HRS_PERSON_ID = APPNM.HRS_PERSON_ID 
AND PSCRN.HRS_PERSON_ID = APPI.HRS_PERSON_ID
AND APPNM.NAME_TYPE = 'PRI'
AND PSCRN.HRS_STATUS_DT BETWEEN &RCR.FROM_DATE AND &RCR.TO_DATE
[$ADDITIONAL_WHERE1]
[$ORDERBY1]
end-select

   new-page
  
   ! Print Report Section 2
   print $RPT_SECTION2       (+1,5,#cw_RPT_SECTION2)  bold
   
   ! Print Report Columns
   do PRINT-REPORT_COLUMNS-SECT2
   
begin-select   
PSCRNA.HRS_PERSON_ID 
APPNMA.NAME_DISPLAY
PSCRNA.HRS_STATUS_DT 
PSCRNA.HRS_SITE_ID 
APPIA.SEX
[$JOB_OPENING_FLD] &PSCRNA.HRS_JOB_OPENING_ID=Number
APPIA.STATUS_CODE
PSCRNA.HRS_SCR_STATUS

   ! Get Applicant's ID and name 
   move &PSCRNA.HRS_PERSON_ID to #hrs_person_id
   move &APPNMA.NAME_DISPLAY to $hrs_name

   ! Get and Format Screening Date
   do Format-DateTime(&PSCRNA.HRS_STATUS_DT ,$hrs_status_dt,{DEFDATE},'','')

   ! Get Site Info
   move &PSCRNA.HRS_SITE_ID to #hrs_site_id
   do Get-Site-Id
   
   ! Get Job Opening
   If &RCR.HRS_SCH_CHKBOX <> 'Y'
      move &PSCRNA.HRS_JOB_OPENING_ID to #hrs_job_opening_id
   End-If   
   
   ! Display Gender and Ethnic Group in the report for Recruitment Admins only
   If &RCR.HRS_ADMIN_FLG = 'Y'
      ! Get Applicant's Gender
      move 'SEX' to $FieldName
      move &APPIA.SEX  to $FieldValue
      do Read-Translate-Table
      let $hrs_appl_sex = $XlatLongName
      
      ! Get Applicant's Ethnicity
      If &RCR.HRS_SCH_CHKBOX <> 'Y'
         do GET-BUS-UNIT-AND-REGULATORY-REGION
      else
         do GET-REG-REGION
      End-if
      do GET-APPL-ETHNIC-CODE  
      if $hrs_ethnic_grp_cd_descr = ''
         let $hrs_ethnic_grp_cd_descr = $NOT_SPECIFIED
      end-if
   end-if
   
   ! Get Applicant's Status
   move &APPIA.STATUS_CODE to $hrs_status_code
   do Get-Applicant-Status
      
   ! Get Screening Status
   move 'HRS_SCR_STATUS' to $FieldName
   move &PSCRN.HRS_SCR_STATUS  to $FieldValue
   do Read-Translate-Table
   let $hrs_scr_status = $XlatLongName
   
   do PRINT-PRESCREEN-ACTIVITY-SECT2

FROM [$FROM2]
WHERE PSCRNA.HRS_PERSON_ID = APPNMA.HRS_PERSON_ID 
AND PSCRNA.HRS_PERSON_ID = APPIA.HRS_PERSON_ID
AND APPNMA.NAME_TYPE = 'PRI'
AND PSCRNA.HRS_STATUS_DT BETWEEN &RCR.FROM_DATE AND &RCR.TO_DATE
[$ADDITIONAL_WHERE2]
AND PSCRNA.HRS_SCR_STATUS = '1'
AND EXISTS (SELECT 'X' 
              FROM [$FROM3] 
             WHERE PSCRNB.HRS_PERSON_ID = PSCRNA.HRS_PERSON_ID 
               AND PSCRNB.HRS_PROFILE_SEQ < PSCRNA.HRS_PROFILE_SEQ 
               AND PSCRNB.HRS_SCR_STATUS = '2'
               AND PSCRNB.HRS_ROW_UPD_DTTM < PSCRNA.HRS_ROW_UPD_DTTM)
[$ORDERBY2]
end-select   
 
   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: GET-BUS-UNIT-AND-REGULATORY-REGION                        !
! Descr: Get Business Unit and the Regulatory Region of the JO         !
!----------------------------------------------------------------------!
begin-procedure GET-BUS-UNIT-AND-REGULATORY-REGION 
   add 1 to #level
   move 'GET-BUS-UNIT-AND-REGULATORY-REGION' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

begin-select   
JO.BUSINESS_UNIT
JORQMT.REG_REGION

   move &JORQMT.REG_REGION to $hrs_reg_region  

FROM PS_HRS_JOB_OPENING JO, PS_HRS_JO_RQMT JORQMT 
WHERE JO.HRS_JOB_OPENING_ID = #hrs_job_opening_id 
AND JO.HRS_JOB_OPENING_ID = JORQMT.HRS_JOB_OPENING_ID
AND JORQMT.HRS_JO_PRM_JCD_FLG = 'Y'
end-select   

   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: GET-REG-REGION                                            !
! Descr: Get Regulatory Region of Applicant if no JO                   !
!----------------------------------------------------------------------!
begin-procedure GET-REG-REGION 
   add 1 to #level
   move 'GET-REG-REGION' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

begin-select   
ETHDIV.HRS_REG_REGION

   move &ETHDIV.HRS_REG_REGION to $hrs_reg_region  

FROM PS_HRS_APP_DIV_ETH  ETHDIV
WHERE ETHDIV.HRS_PERSON_ID = #hrs_person_id 
end-select   

   subtract 1 from #level
end-procedure


!----------------------------------------------------------------------!
! Procedure: GET-APPL-ETHNIC-CODE                                      !
! Descr: Get Ethnic Code for the applicant                             !
!----------------------------------------------------------------------!
begin-procedure GET-APPL-ETHNIC-CODE 
  add 1 to #level
  move 'GET-APPL-ETHNIC-CODE' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

Show '#hrs_person_id: ' #hrs_person_id
Show '$hrs_reg_region: ' $hrs_reg_region

begin-select   
ADE.HRS_ETHNIC_GRP_CD
ADE.SETID 
   move &ADE.HRS_ETHNIC_GRP_CD to $hrs_ethnic_grp_cd
   move &ADE.SETID to $hrs_setid
   do Get-Ethnic-Code
   Show '$hrs_reg_region: ' $hrs_reg_region
   Show '#hrs_person_id: ' #hrs_person_id


FROM PS_HRS_APP_DIV_ETH ADE
WHERE ADE.HRS_PERSON_ID = #hrs_person_id 
AND ADE.HRS_REG_REGION = $hrs_reg_region 
end-select   

   subtract 1 from #level
end-procedure


!----------------------------------------------------------------------!
! Procedure: Get-Disp-Status-Description                                    !
! Descr: Get Disposition Status description for the applicant          !
!----------------------------------------------------------------------!

begin-procedure Get-Disp-Status-Description
 let $StatusCodeDescr = ' '

begin-SELECT
ERS.STATUS_AREA
ERS.STATUS_CODE
ERS.DESCR

   let $ER_STATUS_TBL-DESCR = rtrim(&ERS.DESCR, ' ')
   let $StatusCodeDescr = $ER_STATUS_TBL-DESCR

FROM  PS_HRS_STS_TBL_I ERS
WHERE ERS.STATUS_AREA = '3'
AND   ERS.STATUS_CODE = &RCMNT.STATUS_CODE
end-SELECT
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-REPORT_COLUMNS-SECT1                                !
! Descr: Print Report Columns for Section 1                            !
!----------------------------------------------------------------------!
begin-procedure PRINT-REPORT_COLUMNS-SECT1 
   add 1 to #level
   move 'PRINT-REPORT_COLUMNS-SECT1' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   If &RCR.HRS_ADMIN_FLG = 'Y'
      print $APPL_ID            (+2,6,#cw_APPL_ID)       bold
      print $APPL_NAME          (,20,#cw_APPL_NAME)      bold
      print $SCREEN_DATE        (,42,#cw_SCREEN_DATE)    bold
      print $SITE               (,56,#cw_SITE)           bold   
      print $GENDER             (,78,#cw_GENDER)         bold
      print $ETHNIC_GRP         (,87,#cw_ETHNIC_GRP)     bold 
      If &RCR.HRS_SCH_CHKBOX <> 'Y'     
         print $JOB_OPENING        (,111,#cw_JOB_OPENING)   bold
         print $STATUS             (,131,#cw_STATUS)        bold
         print $SCREEN_RESULT      (,161,#cw_SCREEN_RESULT) bold 
      Else
         print $STATUS             (,111,#cw_STATUS)        bold
         print $SCREEN_RESULT      (,141,#cw_SCREEN_RESULT) bold 
      End-If 
   Else
      print $APPL_ID            (+2,6,#cw_APPL_ID)       bold
      print $APPL_NAME          (,20,#cw_APPL_NAME)      bold
      print $SCREEN_DATE        (,42,#cw_SCREEN_DATE)    bold
      print $SITE               (,56,#cw_SITE)           bold 
      If &RCR.HRS_SCH_CHKBOX <> 'Y' 
         print $JOB_OPENING        (,78,#cw_JOB_OPENING)    bold 
         print $STATUS             (,98,#cw_STATUS)         bold
         print $SCREEN_RESULT      (,128,#cw_SCREEN_RESULT) bold 
      Else
         print $STATUS             (,78,#cw_STATUS)         bold
         print $SCREEN_RESULT      (,108,#cw_SCREEN_RESULT)  bold      
      End-If
   End-If
   
   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-REPORT_COLUMNS-SECT2                                !
! Descr: Print Report Columns for Section 2                            !
!----------------------------------------------------------------------!
begin-procedure PRINT-REPORT_COLUMNS-SECT2  
   add 1 to #level
   move 'PRINT-REPORT_COLUMNS-SECT2 ' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   If &RCR.HRS_ADMIN_FLG = 'Y'
      print $APPL_ID            (+2,6,#cw_APPL_ID)       bold
      print $APPL_NAME          (,20,#cw_APPL_NAME)      bold
      print $SCREEN_DATE        (,42,#cw_SCREEN_DATE)    bold
      print $SITE               (,56,#cw_SITE)           bold   
      print $GENDER             (,78,#cw_GENDER)         bold
      print $ETHNIC_GRP         (,87,#cw_ETHNIC_GRP)     bold 
      If &RCR.HRS_SCH_CHKBOX <> 'Y'     
         print $JOB_OPENING         (,121,#cw_JOB_OPENING)   bold
         !print $STATUS             (,141,#cw_STATUS)        bold
         !print $SCREEN_RESULT      (,161,#cw_SCREEN_RESULT) bold 
      Else
         !print $STATUS             (,121,#cw_STATUS)        bold
         !print $SCREEN_RESULT      (,141,#cw_SCREEN_RESULT) bold 
      End-If 
   Else
      print $APPL_ID            (+2,6,#cw_APPL_ID)       bold
      print $APPL_NAME          (,20,#cw_APPL_NAME)      bold
      print $SCREEN_DATE        (,42,#cw_SCREEN_DATE)    bold
      print $SITE               (,56,#cw_SITE)           bold 
      If &RCR.HRS_SCH_CHKBOX <> 'Y' 
         print $JOB_OPENING         (,78,#cw_JOB_OPENING)    bold 
         !print $STATUS             (,98,#cw_STATUS)         bold
         !print $SCREEN_RESULT      (,118,#cw_SCREEN_RESULT) bold 
      Else
         !print $STATUS             (,78,#cw_STATUS)         bold
         !print $SCREEN_RESULT      (,98,#cw_SCREEN_RESULT)  bold      
      End-If
   End-If
   
  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-PRESCREEN-ACTIVITY-SECT1                            !
! Descr: Print PreScreen Activity for Section 1                        !
!----------------------------------------------------------------------!
begin-procedure PRINT-PRESCREEN-ACTIVITY-SECT1 
   add 1 to #level
   move 'PRINT-PRESCREEN-ACTIVITY-SECT1' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   If &RCR.HRS_ADMIN_FLG = 'Y'
      print #hrs_person_id             (+1,6,)
      print $hrs_name                  (,20,)
      print $hrs_status_dt             (,42,)
      print $hrs_site_id_descr         (,56,)   
      print $hrs_appl_sex              (,78,)
      print $hrs_ethnic_grp_cd_descr   (,87,33) 
      If &RCR.HRS_SCH_CHKBOX <> 'Y'     
         print #hrs_job_opening_id        (,111,)
         print $StatusCodeDescr           (,131,29)
         print $hrs_scr_status            (,161,) 
      Else
         print $StatusCodeDescr           (,111,29)
         print $hrs_scr_status            (,141,)       
      End-If
   Else
      print #hrs_person_id             (+1,6,)
      print $hrs_name                  (,20,)
      print $hrs_status_dt             (,42,)
      print $hrs_site_id_descr         (,56,)
      If &RCR.HRS_SCH_CHKBOX <> 'Y'   
         print #hrs_job_opening_id        (,78,)
         print $StatusCodeDescr           (,98,29)
         print $hrs_scr_status            (,128,) 
      Else
         print $StatusCodeDescr           (,78,29)
         print $hrs_scr_status            (,108,)      
      End-If   
   End-If   

   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-PRESCREEN-ACTIVITY-SECT2                            !
! Descr: Print PreScreen Activity for Section 2                        !
!----------------------------------------------------------------------!
begin-procedure PRINT-PRESCREEN-ACTIVITY-SECT2 
   add 1 to #level
   move 'PRINT-PRESCREEN-ACTIVITY-SECT2' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   If &RCR.HRS_ADMIN_FLG = 'Y'
      print #hrs_person_id             (+1,6,)
      print $hrs_name                  (,20,)
      print $hrs_status_dt             (,42,)
      print $hrs_site_id_descr         (,56,)   
      print $hrs_appl_sex              (,78,)
      print $hrs_ethnic_grp_cd_descr   (,87,) 
      If &RCR.HRS_SCH_CHKBOX <> 'Y'     
         print #hrs_job_opening_id         (,121,)
         !print $hrs_status_code_descr     (,141,)
         !print $hrs_scr_status            (,161,) 
      Else
         !print $hrs_status_code_descr     (,121,)
         !print $hrs_scr_status            (,141,)       
      End-If
   Else
      print #hrs_person_id             (+1,6,)
      print $hrs_name                  (,20,)
      print $hrs_status_dt             (,42,)
      print $hrs_site_id_descr         (,56,)
      If &RCR.HRS_SCH_CHKBOX <> 'Y'   
         print #hrs_job_opening_id         (,78,)
         !print $hrs_status_code_descr     (,98,)
         !print $hrs_scr_status            (,118,) 
      Else
         !print $hrs_status_code_descr     (,78,)
         !print $hrs_scr_status            (,98,)      
      End-If   
   End-If   

   subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: GET-HRS037-STRING-TABLE-DEFN                              !
! Descr:     This procedure gets the translation strings from the      !
!            STRINGS_TBL or STRINGS_LNG_TBL                            !
!----------------------------------------------------------------------!
begin-procedure GET-HRS037-STRING-TABLE-DEFN
   move 'GET-HRS037-STRING-TABLE-DEFN' to $current-procedure

#ifdef DebugF
   do PRINT-FLOW
#END-IF

   do INIT_REPORT_TRANSLATION ('HRS037', $rpt_language_cd)
  
   do Get_Field_Information ('HRS037',  'APPL_ID',  $APPL_ID, #cw_APPL_ID)
   do Get_Field_Information ('HRS037',  'APPL_NAME',  $APPL_NAME, #cw_APPL_NAME)
   do Get_Field_Information ('HRS037',  'ETHNIC_GRP',  $ETHNIC_GRP, #cw_ETHNIC_GRP)
   do Get_Field_Information ('HRS037',  'GENDER',  $GENDER, #cw_GENDER)
   do Get_Field_Information ('HRS037',  'JOB_OPENING',  $JOB_OPENING, #cw_JOB_OPENING)
   do Get_Field_Information ('HRS037',  'NOT_SPECIFIED', $NOT_SPECIFIED, #cw_NOT_SPECIFIED)
   do Get_Field_Information ('HRS037',  'REPORT_ID',  $REPORT_ID, #cw_REPORT_ID)
   do Get_Field_Information ('HRS037',  'REPORT_TITLE',  $REPORT_TITLE, #cw_REPORT_TITLE)
   do Get_Field_Information ('HRS037',  'RPT_CONF_MSG',  $RPT_CONF_MSG, #cw_RPT_CONF_MSG)
   do Get_Field_Information ('HRS037',  'RPT_SECTION1',  $RPT_SECTION1, #cw_RPT_SECTION1)
   do Get_Field_Information ('HRS037',  'RPT_SECTION2',  $RPT_SECTION2, #cw_RPT_SECTION2)
   do Get_Field_Information ('HRS037',  'RUN_DATE',  $RUN_DATE, #cw_RUN_DATE)
   do Get_Field_Information ('HRS037',  'RUN_TIME',  $RUN_TIME, #cw_RUN_TIME)
   do Get_Field_Information ('HRS037',  'SCREEN_DATE',  $SCREEN_DATE, #cw_SCREEN_DATE)
   do Get_Field_Information ('HRS037',  'SCREEN_RESULT',  $SCREEN_RESULT, #cw_SCREEN_RESULT)
   do Get_Field_Information ('HRS037',  'SITE',  $SITE, #cw_SITE)
   do Get_Field_Information ('HRS037',  'STATUS',  $STATUS, #cw_STATUS)

end-procedure

!**********************************************************************
!       SQCs
!**********************************************************************
#include 'fgrunctl.sqc'    !Get run control parameter values
#include 'fggetval.sqc'    !Get values mask routines
#include 'askaod.sqc'      !Ask As Of Date input

#include 'stdapi.sqc'      !Routine to update run status
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Globalization
#Include 'readxlat.sqc'    !Read-Translate-Table procedure
#Include 'reset.sqc'       !Reset printer procedure
#Include 'hrsecty.sqc'     !SQR security
#Include 'hrsgtrel.sqc'    !Get related data