!**************************************************************************
!  GPMYTX04  : CP39 Monthly Statement of Tax Deductions - Electronic form *
!                                                                         *
!**************************************************************************
!**************************************************************************
!                                                                         *
!                                                                         *
!                                                                         *
! This software and related documentation are provided under a            *
! license agreement containing restrictions on use and                    *
! disclosure and are protected by intellectual property                   *
! laws. Except as expressly permitted in your license agreement           *
! or allowed by law, you may not use, copy, reproduce,                    *
! translate, broadcast, modify, license, transmit, distribute,            *
! exhibit, perform, publish or display any part, in any form or           *
! by any means. Reverse engineering, disassembly, or                      *
! decompilation of this software, unless required by law for              *
! interoperability, is prohibited.                                        *
! The information contained herein is subject to change without           *
! notice and is not warranted to be error-free. If you find any           *
! errors, please report them to us in writing.                            *
!                                                                         *
!                                                                         *
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.                 *
! All Rights Reserved.                                                    *
!**************************************************************************
!                                                                         *
!                                                                         *
!          $Date:  2015/12/07:16:55:54                                 *
!       $Release:  HR92                                                *
!           $Bug:  22171106                                            *
!                                                                         *
!**************************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment
#Include 'setup07.sqc' !Set Database Environment


begin-setup
page-size  42 110
    declare printer

      type          = HPLASERJET
      orientation   = landscape
      char-size     = 7
      top-margin    = 0.60
      left-margin   = 0.45
      LINE-size     = 12.5
      font          = 5
      point-size    = 7
end-setup

begin-report
  let #count_new_2 = 0
  Let #counttmp = 100
  Let #count = 1000
  do Init-DateTime
  do Init-Number
  do Init-Report
  !do Report-Parm-Clean
  do Stdapi-Term
end-Report

!***********************************************************************
!  Procedure: Init-Report                                              *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Init-Report

  do Stdapi-Init
  do Select-Parameters

  move 'GPMYTX04' to $ReportID
  do Get-Language-Codes ! get the current language in which user wants to print the report
  do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
  do Add_Report_Translation($ReportID, $curr_language_cd)
  do Append_Report_Translation ('GPMYTX04')

  do MalayLanguageCode
  do Build-Where
  do Get-HeadQuarter
  do Get-TAX-NBR

end-Procedure

!***********************************************************************
! Procedure: Select-Parameters                                         *
!***********************************************************************
Begin-Procedure  Select-Parameters
begin-SELECT
SP.OPRID
SP.RUN_CNTL_ID
SP.GPMY_ORG_LINK_OPTN  &GPMY_ORG_LINK_OPTN
SP.ORG_LINK_UNIT       &ORG_LINK_UNIT
SP.GPMY_TAX_NBR    &CompRef
SP.GPMY_CONTRIB_YEAR       &TaxYear
SP.MONTHCD         &MonthCd
SP.GPMY_CRT_IND    &CreateFile
SP.GPMY_TO_DT          &To_Dt
SP.GPMY_BNK_USRNO      &CHQ_NO
SP.GPMY_DEPOSIT_DT      &CHQ_DT
SP.BANK_NM       &BANK


         let $MonthCd = &MonthCd
         Move &GPMY_ORG_LINK_OPTN to $GPMY_ORG_LINK_OPTN
         Move &CHQ_NO to $Cheq_num
         Move &CHQ_DT to $Cheq_Date
          Move &BANK to $Bank

              let $Bank=ltrim(rtrim($Bank,' '),' ')
                let $Bank1=substr($Bank,1,20)
                let $Bank2=substr($Bank,21,40)
                 let $Bank1=ltrim(rtrim($Bank1,' '),' ')
                  let $Bank2=ltrim(rtrim($Bank2,' '),' ')
         let $ORG_LINK_UNIT = rtrim(&ORG_LINK_UNIT,' ')
         let $CompTaxRef = rtrim(ltrim(&CompRef, ' '), ' ')
         if isnull(rtrim($CompTaxRef,' '))

         end-if
         Move &TaxYear to #TaxYear
         move &CreateFile to $CreateFile
         Move &To_Dt to $To_Dt

 FROM PS_GPMY_RPT_RC SP
WHERE SP.OPRID          = $Prcs_OprID
AND   SP.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-SELECT
end-Procedure


!***********************************************************************
! Procedure: write-file-hdr-details                                    *
!***********************************************************************
Begin-Procedure write-file-hdr-details

  do Get-Last-Date
  do Get-First-Date
  do EmplCounts
  


  do CountEmplSTDTax
  do CountEmplPYTax
  do EmplSTDTax

  do CountEmplAddlTax
  do EmplAddlTax
  do EmplPYTax

  
  add 1 to #count_new_2
  

  let #CountPYTax = &CountPYTax
  if #CountPYTax = 0
  Let #TotalTaxRemitted = &AddlTax + &STDTax
  else
            Let #TotalTaxRemitted = &PYTax
  end-if

  ! This is to create a separate header file for the previous year remuneration taxes.
  if #CountPYTax > 0
   if &CreateFile = 'Y'
     if #count_new <> 0    
     let $stat_reg = rtrim(&PF.GPMY_STAT_REG,' ')
     Let $Part1 = '{FILEPREFIX}'
     Let $Ext   = '.txt'
     
     move $Taxyear to #Taxyear
     
     let #Taxyear1 = #Taxyear - 1
     let #Taxyear2 = #Taxyear - 2
     let #Taxyear3 = #Taxyear - 3
     let #Taxyear4 = #Taxyear - 4
     let #Taxyear5 = #Taxyear - 5

     move #Taxyear1 to $Taxyear1
     move #Taxyear2 to $Taxyear2
     move #Taxyear3 to $Taxyear3
     move #Taxyear4 to $Taxyear4
     move #Taxyear5 to $Taxyear5

     if #count_new = 1
       Let $Year6 = $Taxyear1
     end-if
     
     if #count_new = 2
       Let $Year6 = $Taxyear2
     end-if

     if #count_new = 3
       Let $Year6 = $Taxyear3
     end-if

     if #count_new = 4
       Let $Year6 = $Taxyear4
     end-if

     if #count_new = 5
       Let $Year6 = $Taxyear5
     end-if
      
     Let $Year5 = substr($Year6,3,2)

     Let $MonthCd = '12'
     Let $MonthCd = rtrim($MonthCd, ' ')
     Let $FileName = $Part1 || $stat_reg || $MonthCd || $Year5 || $Ext

     if rtrim(&PF.GPMY_STAT_REG,' ') <> rtrim($old_region,' ')
       
        let #counttmp = #counttmp + 1
        open $FileName as #counttmp for-writing record=542:Vary Status=#OpenStat
       
     end-if
     If #OpenStat <> 0
        Show 'Error in Opening File : ' $FileName
     Else
        Show 'File ' $FileName ' Opened Successfully'
     End-If
     let $CompTaxRefH  = rtrim($headquarter,' ')
     let $CompTaxRefH  = LPAD($CompTaxRefH,10,'0')

     Let $MonthCd = lpad($MonthCd,2,'0')

     Let $CompTaxRef1 = rtrim($CompTaxRef, ' ')
     Let $CompTaxRef1 = lpad($CompTaxRef1,10,'0')

     !Let #TotalRemit = #TotalTaxRemitted * 100
     !Let $TotalRemit = edit(#TotalRemit,'9999999999999')
     !Let $TotalRemit = ltrim($TotalRemit, ' ')
     !Let $TotalRemit = lpad($TotalRemit,13,'0')
     !Let $TotRecs    = edit(#EmplCount,'999999')
     !Let $TotRecs    = ltrim($TotRecs,' ')
     !Let $TotRecs    = lpad($TotRecs,6,'0')

     !Move &CountSTDTax  to #PCBCount
     Move &STDTax       to #PCBAmount


     !Move &CountSTDTax  to #PCBCount
     Move &STDTax       to #PCBAmount

     !Move &AddlTax      to #CP39Amount
     !Move &CountAddlTax to #CP39Count

     !Move &CountPYTax to #PCBcountpy
     Move &PYTax to #PCBamountpy


     Let #CP39Amount = #CP39Amountpy * 100


     Let  #PCBamountpy  =  #PCBamountpy  * 100
     !Let #CP39Amount = #CP39Amount * 100

     Let $PCBamountpy = edit(#PCBAmountpy, '9999999999')
     Let $CP39Amountpy = edit(#CP39Amountpy,'9999999999')

     Let $PCBCountpy  = edit(#PCBCountpy,'99999')
     Let $CP39Countpy = edit (#PCBCountpy, '99999')


     Let $PCBAmountpy  = ltrim($PCBAmountpy,' ')
     Let $CP39Amountpy = ltrim($CP39Amountpy, ' ')


     Let $PCBCountpy   = ltrim($PCBCountpy,' ')
     Let $CP39Countpy = ltrim($CP39Countpy, ' ')

     Let $PCBAmountpy  = lpad($PCBAmountpy,10,'0')
     Let $PCBCountpy   = lpad($PCBCountpy,5,'0')

     Let $CP39Amountpy = lpad($CP39Amountpy,10,'0')
     Let $CP39Countpy  = lpad($CP39Countpy,5,'0')


     let $RecType = 'H'

!     Let $Header = $RecType || $CompTaxRefH || $CompTaxRef1 || $Year4 || $MonthCd || $PCBAmount || $PCBCount || $CP39Amount || $CP39Count
     write #counttmp from  $RecType:1                -
                        $CompTaxRefH:10           -
                        $CompTaxRef1:10           -
                        $Year6:4                  -
                        $MonthCd:2                -
                        $PCBAmountpy:10             -
                        $PCBCountpy:5               -
                        $CP39Amountpy:10            -
                        $CP39Countpy:5
  end-if
end-if
end-if
     ! OPEN A FILE TO START WRITING THE OUTPUT
  if &CreateFile = 'Y'
   if #count = 1000
     let $stat_reg = rtrim(&PF.GPMY_STAT_REG,' ')
     Let $Part1 = '{FILEPREFIX}'
     Let $Ext   = '.txt'
     Let $Year2 = substr($TaxYear,3,2)
     Let $Year4 = $TaxYear
     Let $MonthCd = &MonthCd
     Let $MonthCd = rtrim($MonthCd, ' ')
     Let $FileName = $Part1 || $stat_reg || $MonthCd || $Year2 || $Ext

     if rtrim(&PF.GPMY_STAT_REG,' ') <> rtrim($old_region,' ')

        let #count = #count + 1
        open $FileName as #count for-writing record=542:Vary Status=#OpenStat
     end-if
     If #OpenStat <> 0
        Show 'Error in Openning File : ' $FileName
     Else
        Show 'File ' $FileName ' Opened Successfully'
     End-If
     let $CompTaxRefH  = rtrim($headquarter,' ')
     let $CompTaxRefH  = LPAD($CompTaxRefH,10,'0')

     Let $MonthCd = lpad($MonthCd,2,'0')

     Let $CompTaxRef1 = rtrim($CompTaxRef, ' ')
     Let $CompTaxRef1 = lpad($CompTaxRef1,10,'0')

     Let #TotalRemit = #TotalTaxRemitted * 100
     Let $TotalRemit = edit(#TotalRemit,'9999999999999')
     Let $TotalRemit = ltrim($TotalRemit, ' ')
     Let $TotalRemit = lpad($TotalRemit,13,'0')
     Let $TotRecs    = edit(#EmplCount,'999999')
     Let $TotRecs    = ltrim($TotRecs,' ')
     Let $TotRecs    = lpad($TotRecs,6,'0')

     Move &CountSTDTax  to #PCBCount
     Move &STDTax       to #PCBAmount

     !Move &AddlTax      to #CP39Amount
     !Move &CountAddlTax to #CP39Count

     Let #PCBAmount  = #PCBAmount  * 100
     Let #CP39Amount = #CP39Amount * 100

     Let $PCBAmount = edit(#PCBAmount, '9999999999')
     Let $CP39Amount =edit(#CP39Amount,'9999999999')

     Let $PCBCount  = edit(#PCBCount,'99999')
     Let $CP39Count = edit(#CP39Count,'99999')

     Let $PCBAmount  = ltrim($PCBAmount,' ')
     Let $CP39Amount = ltrim($CP39Amount,' ')

     Let $PCBCount   = ltrim($PCBCount,' ')
     Let $CP39Count  = ltrim($CP39Count,' ')

     Let $PCBAmount  = lpad($PCBAmount,10,'0')
     Let $PCBCount   = lpad($PCBCount,5,'0')

     Let $CP39Amount = lpad($CP39Amount,10,'0')
     Let $CP39Count  = lpad($CP39Count,5,'0')

     let $RecType = 'H'

!     Let $Header = $RecType || $CompTaxRefH || $CompTaxRef1 || $Year4 || $MonthCd || $PCBAmount || $PCBCount || $CP39Amount || $CP39Count
     write #count from  $RecType:1                -
                        $CompTaxRefH:10           -
                        $CompTaxRef1:10           -
                        $Year4:4                  -
                        $MonthCd:2                -
                        $PCBAmount:10             -
                        $PCBCount:5               -
                        $CP39Amount:10            -
                        $CP39Count:5

  end-if  
end-if

end-Procedure

!***********************************************************************
! Procedure: Get-Last-Date                                             *
!***********************************************************************
Begin-Procedure Get-Last-Date

  let #TxYrPY = 0
  let #TxYrPY = #TaxYear - 1
  let $TaxYearPY  = edit(#TxYrPY, '9999')
  let $TaxYear  = edit(#TaxYear, '9999')
  let $PrcsDate = $TaxYear || &MonthCd || '01'

  do Format-DateTime($PrcsDate, $PrcsDate, {DEFCMP},'','native')         ! CONVERT TO NATIVE FORMAT

  do Convert-to-DTU-date($PrcsDate,$PrcsDate)                            ! CONVERT TO DTU-FORMAT

  do dtu-Month-End($PrcsDate,$PrcsDate)                                  ! GET END OF MONTH

  do Convert-From-DTU-date($PrcsDate,$AsOfToday)                         ! CONVERT TO NATIVE FORMAT


  !do Format-DateTime($AsOfToday, $AsOfToday, {DEFYMD},'','native')

end-Procedure

!***********************************************************************
! Procedure: Get-First-Date                                            *
!***********************************************************************
Begin-Procedure Get-First-Date
  Let $MonthCDStart = $TaxYear || &MonthCd || '01'
  do Format-DateTime($MonthCDStart, $MonthCDStart, {DEFCMP},'','native') ! CONVERT TO NATIVE FORMAT
end-Procedure



!***********************************************************************
! Procedure: EmplCounts                                                *
!***********************************************************************
begin-Procedure EmplCounts
let #EmplCount = 0

begin-SELECT DISTINCT
T3.EMPLID

  let #EmplCount = #EmplCount + 1

FROM PS_GPMY_PY_TMP3 T3,
PS_GPMY_PY_TMP T2

WHERE T3.PROCESS_INSTANCE=(#prcs_process_instance - 1)
AND T2.PROCESS_INSTANCE  = (#prcs_process_instance - 1)
AND T3.EMPLID = T2.EMPLID
AND T3.CAL_RUN_ID = T2.CAL_RUN_ID
AND T3.EMPL_RCD = T2.EMPL_RCD
AND T3.GP_PAYGROUP = T2.GP_PAYGROUP
AND T3.CAL_ID = T2.CAL_ID
AND T3.ORIG_CAL_RUN_ID = T2.ORIG_CAL_RUN_ID
AND USER_KEY1=$CompTaxRef
AND T2.GP_GENRPT_BREAK1 =$CompTaxRef
AND T2.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
                   AND EMPLID=T2.EMPLID )
AND T3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3 TMP3
                    WHERE TMP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND TMP3.EMPLID=T3.EMPLID
                    AND TMP3.CAL_RUN_ID =  T3.CAL_RUN_ID
                    AND TMP3.EMPL_RCD = T3.EMPL_RCD
                    AND TMP3.GP_PAYGROUP = T3.GP_PAYGROUP
                    AND TMP3.CAL_ID =  T3.CAL_ID
                    AND TMP3.GPMY_FLD_NAME=T3.GPMY_FLD_NAME
                    AND TMP3.USER_KEY1=T3.USER_KEY1
                    AND TMP3.CALC_RSLT_VAL > 0 )
AND T3.CALC_RSLT_VAL > 0


end-SELECT

end-procedure

!***********************************************************************
! Procedure: EmplCountsPY - Count of Employees with Previous Year Tax  *
!***********************************************************************
begin-Procedure EmplCountsPY
    let #EmplCount = 0
    let #EmplCount1 = 0    
    let #EmplCount2 = 0
    let #EmplCount3 = 0
    let #EmplCount4 = 0
    let #EmplCount5 = 0

begin-SELECT DISTINCT
T4.EMPLID
T4.GPMY_FLD_NAME &GPMY_FLD_NAME

    if &GPMY_FLD_NAME = 'EMPL_STDPY'
     let #EmplCount1 = #EmplCount1 + 1
    end-if
 
    if &GPMY_FLD_NAME = 'EMPL_STDPY2'
     let #EmplCount2 = #EmplCount2 + 1
    end-if

     if &GPMY_FLD_NAME = 'EMPL_STDPY3'
     let #EmplCount3 = #EmplCount3 + 1
     end-if

     if &GPMY_FLD_NAME = 'EMPL_STDPY4'
     let #EmplCount4 = #EmplCount4 + 1
     end-if

      if &GPMY_FLD_NAME = 'EMPL_STDPY5'
     let #EmplCount5 = #EmplCount5 + 1
     end-if

FROM PS_GPMY_PY_TMP3 T4
    WHERE T4.PROCESS_INSTANCE= (#prcs_process_instance - 1)
    AND USER_KEY1=$CompTaxRef
    AND GPMY_FLD_NAME IN ('EMPL_STDPY','EMPL_STDPY2','EMPL_STDPY3','EMPL_STDPY4','EMPL_STDPY5')
end-SELECT

end-procedure


!
!***********************************************************************
! Procedure: CountEmplSTDTax                                           *
!***********************************************************************
begin-Procedure CountEmplSTDTax
begin-SELECT
COUNT(DISTINCT T3.EMPLID) &CountStdTax


FROM PS_GPMY_PY_TMP3 T3,
    PS_GPMY_PY_TMP T2

    WHERE
    T3.PROCESS_INSTANCE= (#prcs_process_instance - 1)
    AND T2.PROCESS_INSTANCE = (#prcs_process_instance - 1)
    AND T3.EMPLID = T2.EMPLID
    AND T3.CAL_RUN_ID = T2.CAL_RUN_ID
    AND T3.EMPL_RCD = T2.EMPL_RCD
    AND T3.GP_PAYGROUP = T2.GP_PAYGROUP
    AND T3.CAL_ID  = T2.CAL_ID
    AND T2.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
                   AND EMPLID=T2.EMPLID )
    AND T3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=T3.EMPLID
                    AND CAL_RUN_ID =  T3.CAL_RUN_ID
                    AND EMPL_RCD = T3.EMPL_RCD
                    AND CAL_ID =  T3.CAL_ID
                    AND GP_PAYGROUP = T3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=T3.GPMY_FLD_NAME
                    AND USER_KEY1=T3.USER_KEY1
                    AND CALC_RSLT_VAL > 0 )

    AND T3.GPMY_FLD_NAME='EMPL_STDTAX'
    AND USER_KEY1=$CompTaxRef
    AND T2.GP_GENRPT_BREAK1 =$CompTaxRef


end-SELECT
end-procedure
!
!***********************************************************************
! Procedure: CountEmplAddlTax                                          *
!***********************************************************************
begin-Procedure CountEmplAddlTax

begin-SELECT
COUNT(DISTINCT EMPLID) &CountAddlTax



FROM PS_GPMY_PY_TMP3 T3
    WHERE
T3.PROCESS_INSTANCE     = (#prcs_process_instance - 1)
AND T3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE =(#prcs_process_instance - 1)
                    AND EMPLID=T3.EMPLID
                    AND EMPL_RCD = T3.EMPL_RCD
                    AND CAL_RUN_ID =  T3.CAL_RUN_ID
                    AND GP_PAYGROUP = T3.GP_PAYGROUP
                    AND CAL_ID =  T3.CAL_ID
                    AND GPMY_FLD_NAME=T3.GPMY_FLD_NAME
                    AND USER_KEY1=T3.USER_KEY1)
    AND T3.PROCESS_INSTANCE     = (#prcs_process_instance - 1)
    AND USER_KEY1=$CompTaxRef
    AND T3.GPMY_FLD_NAME = 'EMPL_ADDTAX_CP'
end-SELECT
end-procedure


!***********************************************************************
! Procedure: CountEmplPYTax Employees with Previous Year Tax           *
!***********************************************************************
begin-Procedure CountEmplPYTax

begin-SELECT
COUNT(DISTINCT EMPLID) &CountPYTax

FROM PS_GPMY_PY_TMP3 T3
    WHERE T3.GPMY_FLD_NAME IN ('EMPL_STDPY','EMPL_STDPY2','EMPL_STDPY3','EMPL_STDPY4','EMPL_STDPY5')
    AND T3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND T3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=T3.EMPLID
                    AND CAL_RUN_ID =  T3.CAL_RUN_ID
                    AND EMPL_RCD = T3.EMPL_RCD
                    AND GP_PAYGROUP = T3.GP_PAYGROUP
                    AND CAL_ID =  T3.CAL_ID
                    AND GPMY_FLD_NAME=T3.GPMY_FLD_NAME
                    AND USER_KEY1=T3.USER_KEY1)
        AND USER_KEY1          = $CompTaxRef

end-SELECT
end-procedure



!***********************************************************************
! Procedure: EmplSTDTax                                                *
!***********************************************************************
begin-Procedure EmplSTDTax
begin-SELECT
MP3.GPMY_FLD_NAME        &FLDNM1
SUM(MP3.CALC_RSLT_VAL)   &STDTax


FROM PS_GPMY_PY_TMP3 MP3 ,PS_GPMY_PY_TMP MP
WHERE MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)

AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.EMPLID = MP.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                    PROCESS_INSTANCE = (#prcs_process_instance - 1)
                   AND   EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)

AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID

AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND EMPL_RCD = MP3.EMPL_RCD
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND CAL_ID =  MP3.CAL_ID
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1
                    AND MP3.CALC_RSLT_VAL > 0 )
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM

AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
                   AND EMPLID=MP.EMPLID )
!AND MP.PRD_END_DT = (SELECT MAX(PRD_END_DT) FROM PS_GPMY_PR_TMP X
!                 WHERE X.EMPLID=MP.EMPLID
!                 AND X.GP_PAYGROUP = MP.GP_PAYGROUP
!                 AND X.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
!                 AND X.RSLT_VER_NUM = MP.RSLT_VER_NUM
!                 AND X.RSLT_REV_NUM = MP.RSLT_REV_NUM
!                 AND X.PROCESS_INSTANCE = MP.PROCESS_INSTANCE)
!AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PY_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.JOBINSTANCE = MP3.JOBINSTANCE
!                AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!                AND X1.USER_KEY1=MP3.USER_KEY1
!)

AND MP3.GPMY_FLD_NAME = 'EMPL_STDTAX'
AND USER_KEY1=$CompTaxRef
AND MP.GP_GENRPT_BREAK1 =$CompTaxRef
GROUP BY MP3.GPMY_FLD_NAME

end-SELECT
end-procedure

!***********************************************************************
! Procedure: EmplAddlTax                                               *
!***********************************************************************
begin-Procedure EmplAddlTax


begin-SELECT
MP3.GPMY_FLD_NAME        &FLDNM2
SUM(MP3.CALC_RSLT_VAL)   &AddlTax


FROM PS_GPMY_PY_TMP3 MP3 ,PS_GPMY_PY_TMP MP
WHERE MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)

!AND MP3.EMPLID = $EmplId
AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.EMPLID = MP.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID


AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                   PROCESS_INSTANCE = (#prcs_process_instance - 1)

                   AND   EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM

AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
                   AND EMPLID=MP.EMPLID )
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND EMPL_RCD = MP3.EMPL_RCD
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND CAL_ID =  MP3.CAL_ID
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)
!AND MP.PRD_END_DT = (SELECT MAX(PRD_END_DT) FROM PS_GPMY_PR_TMP X
!                 WHERE X.EMPLID=MP.EMPLID
!                 AND X.GP_PAYGROUP = MP.GP_PAYGROUP
!                 AND X.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
!                 AND X.RSLT_VER_NUM = MP.RSLT_VER_NUM
!                 AND X.RSLT_REV_NUM = MP.RSLT_REV_NUM
!                 AND X.JOBINSTANCE = MP.JOBINSTANCE)
!AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PR_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.JOBINSTANCE = MP3.JOBINSTANCE
!                AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!                AND X1.USER_KEY1=MP3.USER_KEY1
!)
AND MP3.GPMY_FLD_NAME = 'EMPL_ADDTAX_CP'
AND USER_KEY1=$CompTaxRef
AND MP.GP_GENRPT_BREAK1 =$CompTaxRef
GROUP BY MP3.GPMY_FLD_NAME

end-SELECT





end-procedure

!***********************************************************************
! Procedure: EmplPYTax - Employees Previous Year Tax                   *
!***********************************************************************
begin-Procedure EmplPYTax


begin-SELECT
MP3.GPMY_FLD_NAME        &FLDNM3
SUM(MP3.CALC_RSLT_VAL)   &PYTax


FROM PS_GPMY_PY_TMP3 MP3 ,PS_GPMY_PY_TMP MP
WHERE MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.EMPLID = MP.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                   PROCESS_INSTANCE = (#prcs_process_instance - 1)
                   AND   EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = T2.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = T2.RSLT_REV_NUM
AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
                   AND EMPLID=MP.EMPLID )
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND EMPL_RCD = MP3.EMPL_RCD
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND CAL_ID =  MP3.CAL_ID
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)
AND MP3.GPMY_FLD_NAME IN ('EMPL_STDPY','EMPL_STDPY2','EMPL_STDPY3','EMPL_STDPY4','EMPL_STDPY5')
AND USER_KEY1 = $CompTaxRef
AND MP.GP_GENRPT_BREAK1 = $CompTaxRef
GROUP BY MP3.GPMY_FLD_NAME

end-SELECT
end-procedure




!***********************************************************************
! Procedure: Build-Where                                               *
!***********************************************************************

begin-procedure Build-Where

if ($GPMY_ORG_LINK_OPTN='CO')OR ($GPMY_ORG_LINK_OPTN='PG')OR ($GPMY_ORG_LINK_OPTN='ET')
     if isnull(RTRIM($ORG_LINK_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($CompTaxRef,' '))
               LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
           ELSE
              LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_TAX_NBR='|| '''' || RTRIM($CompTaxRef,' ') || ''''
           end-if
     end-if

 end-if

if ($GPMY_ORG_LINK_OPTN='LO')OR ($GPMY_ORG_LINK_OPTN='DE')
     if isnull(RTRIM($BUSINESS_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($ORG_LINK_UNIT,' '))
               LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''
           ELSE
                if isnull(RTRIM($EPF_NBR,' '))
                      LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
                ELSE
                     LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ')
                     LET $WHERE = $WHERE || ''''||'AND B.GPMY_TAX_NBR='|| '''' || RTRIM($CompTaxRef,' ') || ''''
                END-IF
           end-if
     end-if

 end-if


end-procedure

!*******************************************************
!       Get-TAX-total                                   !
!******************************************************

begin-procedure Get-Tax-Total

        let #total-Count = 0

begin-SELECT
count(B.GPMY_TAX_NBR)  &counter
        let #total-Count = &counter


FROM PS_GPMY_TAX_ORG B,PS_GPMY_TAX_ORG_DT C, PS_GPMY_TAX_TBL PF
WHERE B.EFFDT=C.EFFDT
AND PF.GPMY_TAX_NBR=B.GPMY_TAX_NBR
AND PF.EFFDT=(SELECT MAX(L1.EFFDT)
              FROM PS_GPMY_TAX_TBL L1
              WHERE PF.GPMY_TAX_NBR =L1.GPMY_TAX_NBR
              AND L1.EFFDT <= $To_Dt)
AND C.GPMY_ORG_LINK_OPTN= $GPMY_ORG_LINK_OPTN
[$WHERE]
end-SELECT
end-procedure

!***********************************************************************
!  Procedure: Get-Headquarter                                           *
!             Get head quater for the company                        *
!***********************************************************************
begin-procedure Get-HeadQuarter
begin-SELECT
A.GPMY_TAX_NBR  &headquarter
A.GPMY_STAT_REG
        move &headquarter to $headquarter
        move &A.GPMY_STAT_REG to $regionHQ
FROM PS_GPMY_TAX_TBL A
WHERE

A.GPMY_TAX_NBR IN (SELECT DISTINCT (B.GPMY_TAX_NBR )
                   FROM PS_GPMY_TAX_ORG B,PS_GPMY_TAX_ORG_DT C
                  WHERE B.EFFDT=C.EFFDT
                   AND C.GPMY_ORG_LINK_OPTN= $GPMY_ORG_LINK_OPTN)

AND  A.EFFDT = (SELECT MAX(L1.EFFDT)
             FROM PS_GPMY_TAX_TBL L1
             WHERE A.GPMY_TAX_NBR =L1.GPMY_TAX_NBR
             AND L1.EFFDT <= $To_Dt)
AND A.EFF_STATUS='A'
AND A.GPMY_HQ = 'Y'

end-SELECT

end-procedure
!***********************************************************************
! Procedure: Get-TAX-NBR                                            *
!***********************************************************************


begin-procedure Get-TAX-NBR

Let #count_new = 0

begin-SELECT
DISTINCT(B.GPMY_TAX_NBR)  &Comptax1
PF.GPMY_STAT_REG
    Let #PageNum = 1
        let $CompTaxRef = rtrim(ltrim(&Comptax1, ' '), ' ')

   do write-file-hdr-details
   
  
  let $print-flag = (#EmplCount and (&CountStdTax or &CountAddlTax or &CountPYTax))

  let $found='N'

  if $print-flag='1'
  do MainPY
  end-if

  let #count_in1 = 0
  let #count_in2 = 0
  let #count_in3 = 0
  let #count_in4 = 0
  let #count_in5 = 0

  do findPY

  if $found='Y' and $print-flag='1'
  !********************************************************************************

    let $print1 = 'N'
    let #Page_total_std1 = 0
    do MainPY_new
    Add 1 to #count_new
    if $print1 = 'Y'
      new-page
      do EmplCountsPY
      do Print-First-Page
      do write-file-hdr-details


      do MainPY

      

    end-if

    let $print2 = 'N'
    let #Page_total_std2 = 0
    do MainPY_new
    Add 1 to #count_new
    if $print2 = 'Y'
      new-page
      do EmplCountsPY
      do Print-First-Page
      do write-file-hdr-details
      do MainPY
    

    end-if

    let $print3 = 'N'
    let #Page_total_std3 = 0
    do MainPY_new
    Add 1 to #count_new
    if $print3 = 'Y'
      new-page
      do EmplCountsPY
      do Print-First-Page
      do write-file-hdr-details
      do MainPY
    
      
    end-if

     let $print4 = 'N'
    let #Page_total_std4 = 0
    do MainPY_new
    Add 1 to #count_new
    if $print4 = 'Y'
      new-page
      do EmplCountsPY
      do Print-First-Page
      do write-file-hdr-details
      do MainPY
    
      
    end-if

    let $print5 = 'N'
    let #Page_total_std5 = 0
    do MainPY_new
    Add 1 to #count_new
    if $print5 = 'Y'
      new-page
      do EmplCountsPY
      do Print-First-Page
      do write-file-hdr-details
      do MainPY
    

    end-if
  
        
  !********************************************************************************     
  end-if
  let $old_region = &PF.GPMY_STAT_REG
FROM PS_GPMY_TAX_ORG B,PS_GPMY_TAX_ORG_DT C, PS_GPMY_TAX_TBL PF
WHERE B.EFFDT=C.EFFDT
AND PF.GPMY_TAX_NBR=B.GPMY_TAX_NBR
AND PF.EFFDT=(SELECT MAX(L1.EFFDT)
              FROM PS_GPMY_TAX_TBL L1
              WHERE PF.GPMY_TAX_NBR =L1.GPMY_TAX_NBR
              AND L1.EFFDT <= $To_Dt)
AND C.GPMY_ORG_LINK_OPTN= $GPMY_ORG_LINK_OPTN
[$WHERE]
ORDER BY PF.GPMY_STAT_REG
end-SELECT


end-procedure




!***********************************************************************
! Procedure: findPY                                      *
!***********************************************************************
begin-procedure findPY
Begin-Select
'X'
  let $found = 'Y'
FROM PS_GPMY_PY_TMP3 MP3

WHERE MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND USER_KEY1=$CompTaxRef
AND GPMY_FLD_NAME IN ('EMPL_STDPY','EMPL_STDPY2','EMPL_STDPY3','EMPL_STDPY4','EMPL_STDPY5')

End-Select


end-procedure


!*********************************************************************************
!  Procedure: Get-ManagerLegal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-ManagerLegal-Name

begin-SELECT
NAMESMn.NAME

    let $MnLegalName = &NAMESMn.NAME

FROM PS_NAMES NAMESMn
WHERE NAMESMn.EMPLID =$ResponcibleId
AND NAMESMn.NAME_TYPE = 'LEG'
AND NAMESMn.EFFDT=(SELECT MAX(NAMES11.EFFDT) FROM PS_NAMES NAMES11
                                         WHERE NAMES11.EMPLID=$ResponcibleId
                                            AND NAMES11.NAME_TYPE ='LEG'
                                            AND NAMES11.EFFDT <= $To_Dt)




end-SELECT

end-procedure


!***********************************************************************
! Procedure: MainPY_new*
! Previous Year Taxes
!***********************************************************************
begin-procedure MainPY_new

begin-SELECT

DISTINCT (E1.EMPLID)       &E1.EMPLID
E1.EMPL_RCD
E1.GPMY_EMPL_TAX_NBR
!E1.GPMY_TAX_IND
F1.GPMY_REGISTERED_NM
F1.COUNTRY
F1.PHONE
F1.FAX
F1.ADDRESS1
F1.ADDRESS2
F1.ADDRESS3
F1.ADDRESS4
F1.CITY
F1.STATE
F1.POSTAL
F1.NAME
F1.GPMY_RESPONSIBLEID
F1.JOBTITLE
N1.NAME

   if &E1.EMPLID <> $Emplid

    let $Emplid          = &E1.EMPLID
    !Add 1 to #TotEmpCount
    do Get-Employee-DetailsPY
   end-if


FROM PS_GPMY_TAX_PYE E1, PS_GPMY_TAX_TBL F1,PS_NAMES N1

WHERE E1.EMPLID=N1.EMPLID
AND E1.EFFDT    = (SELECT MAX(E11.EFFDT)
                  FROM PS_GPMY_TAX_PYE E11
                  WHERE E11.EMPLID  = E1.EMPLID
                  AND E11.EMPL_RCD = E1.EMPL_RCD
                  AND E11.EFFDT <= $To_Dt)
AND F1.GPMY_TAX_NBR=$CompTaxRef
AND F1.EFFDT    = (SELECT MAX(F11.EFFDT)
                  FROM PS_GPMY_TAX_TBL F11
                  WHERE F11.GPMY_TAX_NBR  = F1.GPMY_TAX_NBR
                  AND F11.EFFDT <= $To_Dt)
AND N1.EFFDT=(SELECT MAX(N11.EFFDT)
                         FROM PS_NAMES  N11 WHERE N11.EMPLID=N1.EMPLID
                         AND N11.EFFDT <= $To_Dt)

ORDER BY N1.NAME,E1.EMPLID,E1.EMPL_RCD

end-SELECT

let #EachSTDTax2 = 0

end-procedure




!***********************************************************************
! Procedure: MainPY*
! Previous Year Taxes
!***********************************************************************
begin-procedure MainPY



   let #TotEmpCount    = 0
   let $emplid = ' '

   let #TotEachSTDAmt  = 0
   let #TotEachSTDAmtPY1  = 0
   let #TotEachSTDAmtPY2  = 0
   let #TotEachSTDAmtPY3 = 0
   let #TotEachSTDAmtPY4 = 0
   let #TotEachSTDAmtPY5  = 0 

let #Page_total_std = 0
let #Page_total_std1 = 0
let #Page_total_std2 = 0
let #Page_total_std3 = 0
let #Page_total_std4 = 0
let #Page_total_std5 = 0

   let #TotEachAddlAmt = 0

   let #CurLine        = 5
   let #Counter        = 0
   let $FirstPage      = 'Y'
   let $LastPage       = 'N'
   let $FirstPagedetails = 'Y'
   let $employee-found='N'

begin-SELECT

DISTINCT (E.EMPLID)       &E.EMPLID
E.EMPL_RCD
E.GPMY_EMPL_TAX_NBR
!E.GPMY_TAX_IND
F.GPMY_REGISTERED_NM
F.COUNTRY
F.PHONE
F.FAX
F.ADDRESS1
F.ADDRESS2
F.ADDRESS3
F.ADDRESS4
F.CITY
F.STATE
F.POSTAL
F.NAME
F.GPMY_RESPONSIBLEID
F.JOBTITLE
N.NAME

   if &E.EMPLID <> $Emplid

     let $Emplid          = &E.EMPLID
     !Add 1 to #TotEmpCount





    do company-reg-number

     let $MnLegalName = '' !
       let $ResponcibleId = rtrim(&F.GPMY_RESPONSIBLEID, ' ')
     do Get-ManagerLegal-Name      !

       IF $MnLegalName = '' or $MnLegalName = ' '
         move &F.NAME to $NameMn
        ELSE
         move $MnLegalName to $NameMn
        END-IF

   let $NameMn1 = ''
   let $NameMn2 = ''

    IF LENGTH($NameMn) > 25
       let $NameMn1 = SUBSTR($NameMn,1,25)
       let $NameMn2 = SUBSTR($NameMn,26,25)
    END-IF

    do prepare-employer-details
    do Get-Personal-Data

    let $COUNTRY  = &F.COUNTRY
    let $ADDRESS1 = &F.ADDRESS1
    let $ADDRESS2 = &F.ADDRESS2
    let $ADDRESS3 = &F.ADDRESS3
    let $ADDRESS4 = &F.ADDRESS4
    let $CITY = &F.CITY
    let $STATE =&F.STATE
    let $POSTAL = &F.POSTAL

    do adformat
    do Compress-Address

    let $Co_Addr1 = $ADDLINE1 || ',' || $ADDLINE2
    let $Co_Addr2 = $ADDLINE3 || ',' || $ADDLINE31
    let $Co_Addr3 = $ADDLINE4 || ', ' ||$ADDLINE5 ||' ' || $ADDLINE6
    let $Co_AddrA = $Co_Addr1 || ', ' || $Co_Addr2 || ' ' || $Co_Addr3
    ! Header details
    if $found='N'
        if $FirstPagedetails = 'Y'

        do GetMonth
        let $Month = $mmStr
        if  isnull(rtrim($old_CompTaxRef,' '))
                do Print-First-Page
        else
        if $CompTaxRef <> $old_CompTaxRef
                new-page
                do Print-First-Page
        end-if
        end-if
       let $FirstPagedetails = 'N'
       end-if


    do Get-Employee-Details

    if $employee-found='Y'
       do write-file-details
       Add 1 to #TotEmpCount
       do Print-Employee-Details
    end-if

  else
        if $FirstPagedetails = 'Y'
                !let $temp='Y'
                !do GetMonth
                !let $Month = 'Bonos'

            let $FirstPagedetails = 'N'
        end-if


        do Get-Employee-DetailsPY

        if $employee-found='Y'
          


                !do write-file-details
                !Add 1 to #TotEmpCount
                do Print-Employee-Details
        end-if
   end-if
 end-if
  let $old_CompTaxRef = $CompTaxRef

FROM PS_GPMY_TAX_PYE E, PS_GPMY_TAX_TBL F,PS_NAMES N

WHERE E.EMPLID=N.EMPLID
AND E.EFFDT    = (SELECT MAX(E1.EFFDT)
                  FROM PS_GPMY_TAX_PYE E1
                  WHERE E1.EMPLID  = E.EMPLID
                  AND E1.EMPL_RCD = E.EMPL_RCD
                  AND E1.EFFDT <= $To_Dt)
AND F.GPMY_TAX_NBR=$CompTaxRef
AND F.EFFDT    = (SELECT MAX(F1.EFFDT)
                  FROM PS_GPMY_TAX_TBL F1
                  WHERE F1.GPMY_TAX_NBR  = F.GPMY_TAX_NBR
                  AND F1.EFFDT <= $To_Dt)
AND N.EFFDT=(SELECT MAX(N1.EFFDT)
                         FROM PS_NAMES  N1 WHERE N1.EMPLID=N.EMPLID
                         AND N1.EFFDT <= $To_Dt)

ORDER BY N.NAME,E.EMPLID,E.EMPL_RCD

end-SELECT


  
    if #TotEmpCount = 8
      ! print #TotEachSTDAmt      (32,94)     edit '999,999,999.99' bold
      ! print #TotEachAddlAmt     (32,102)    edit '999,999,999.99' bold
    end-if
let #EachSTDTax2 = 0

end-procedure

!***********************************************************************
!  Procedure: Get-Personal-Data                                       *
!             Gets the data for the selected employees.                *
!***********************************************************************
begin-procedure Get-Personal-Data

begin-SELECT
P1.NAME

   let $EELegalName = ''
    do Get-Legal-Name

   do Get-IC-Nbr
   do GetICPassportInfo
   do Prepare-Employee



FROM PS_NAMES P1
WHERE P1.EMPLID = $Emplid
AND P1.NAME_TYPE = 'PRI'
AND P1.EFFDT=(SELECT MAX(P11.EFFDT) FROM PS_NAMES P11
                                    WHERE P11.EMPLID=P1.EMPLID
                                    AND P11.NAME_TYPE = 'PRI'
                                    AND P11.EFFDT <= $To_Dt)



end-SELECT

end-procedure

!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

   let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.NAME_TYPE = 'LEG'
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT) FROM PS_NAMES NAMES1
                                          WHERE NAMES1.EMPLID=NAMES.EMPLID
                                          AND NAMES1.NAME_TYPE = 'LEG'
                                          AND NAMES1.EFFDT <= $To_Dt)

end-SELECT

end-procedure

!***********************************************************************
!  Procedure: company-reg-number                                       *
!             Gets the registration number of the company              *
!***********************************************************************
begin-procedure company-reg-number

begin-SELECT
CREG.COMPANY_REGNBR_MYS

   move &CREG.COMPANY_REGNBR_MYS to $cregnumber

FROM PS_COMPANY_TBL_MYS CREG
WHERE COMPANY= $ORG_LINK_UNIT

end-SELECT
end-procedure

!***********************************************************************
!  Procedure: prepare-employer-details                                 *
!             Gets the data for the employer                           *
!***********************************************************************
begin-procedure prepare-employer-details




let $ResponsibleIcNbr = ' '
let $CompanyName = rtrim(&F.GPMY_REGISTERED_NM, ' ')

  uppercase $CompanyName

  move &F.PHONE to $registered_phone
  move &F.FAX to $registered_fax
  move $NameMn  to $Responsible_person
  move &F.JOBTITLE to $jobtitle
  move &E.GPMY_EMPL_TAX_NBR to $EmplTaxNbr
  do Get-Responsible-Person-IC
  if $ResponsibleIcNbr_New <> ''
   move $ResponsibleIcNbr_New to $ResponsibleIcNbr
  else
   move $ResponsibleIcNbr_Old to $ResponsibleIcNbr
  end-if


end-procedure

!***********************************************************************
! Procedure: Get-Employee-Details                                      *
!***********************************************************************
begin-procedure Get-Employee-Details
let #EachSTDTax = 0
let #EachAddlTax= 0
 
let $employee-found='N'
Begin-Select DISTINCT
MP3.EMPLID
MP3.GPMY_FLD_NAME    &MP3.GPMY_FLD_NAME
SUM(MP3.CALC_RSLT_VAL)   &MP3.CALC_RSLT_VAL
!MP.PRD_END_DT
!MP.PRC_ORD_TS

   move &MP3.GPMY_FLD_NAME to $rptfldname

   Move &MP3.calc_rslt_val To #repval
   let $employee-found='Y'
   let $rptfldname = rtrim($rptfldname,' ')
   let $rptfldname = ltrim($rptfldname,' ')

   Evaluate  $rptfldname
     when = 'EMPL_STDTAX'
          let #TotEachSTDAmt  = #TotEachSTDAmt  + #repval
              let #Page_total_std = #Page_total_std + #repval
          move #repval to #EachSTDTax
          break

      when = 'EMPL_ADDTAX_CP'
          let #TotEachAddlAmt  = #TotEachAddlAmt  + #repval
                 let #Page_total_addl = #Page_total_addl + #repval
          move #repval to #EachAddlTax
          break

   End-Evaluate
FROM PS_GPMY_PY_TMP3 MP3,
     PS_GPMY_PY_TMP MP


WHERE MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.EMPLID = $EmplId
AND MP.EMPLID = $EmplId
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID

AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                    PROCESS_INSTANCE = (#prcs_process_instance - 1)
                   AND   EMPLID           = $EmplId
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = T2.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = T2.RSLT_REV_NUM
AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
                   AND EMPLID=MP.EMPLID )
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND EMPL_RCD = MP3.EMPL_RCD
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND CAL_ID =  MP3.CAL_ID
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1
                    AND MP3.CALC_RSLT_VAL > 0 )

!AND MP.PRD_END_DT = (SELECT MAX(PRD_END_DT) FROM PS_GPMY_PY_TMP X
!                 WHERE X.EMPLID=MP.EMPLID
!                 AND X.GP_PAYGROUP = MP.GP_PAYGROUP
!                 AND X.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
!                 AND X.RSLT_VER_NUM = MP.RSLT_VER_NUM
!                 AND X.RSLT_REV_NUM = MP.RSLT_REV_NUM
!                 AND X.JOBINSTANCE = MP.JOBINSTANCE)
!AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PR_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.JOBINSTANCE = MP3.JOBINSTANCE
!                AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!                AND X1.USER_KEY1=MP3.USER_KEY1
!)
AND USER_KEY1=$CompTaxRef
AND MP.GP_GENRPT_BREAK1 =$CompTaxRef

GROUP BY MP3.EMPLID, MP3.GPMY_FLD_NAME
ORDER BY MP3.GPMY_FLD_NAME
End-Select


end-procedure

!***********************************************************************
! Procedure: Get-Employee-DetailsPY                                      *
!***********************************************************************
begin-procedure Get-Employee-DetailsPY

let #EachSTDTax1 = 0
let #EachSTDTax2 = 0
let #EachSTDTax3 = 0
let #EachSTDTax4 = 0
let #EachSTDTax5 = 0
let #repval = 0
let #repval1 = 0
let #repval2 = 0
let #repval3 = 0
let #repval4 = 0
let #repval5 = 0

let #EachAddlTax= 0
let $employee-found='N'
let $emppy = 'X'

Begin-Select DISTINCT
MP31.EMPLID
(MP31.GPMY_FLD_NAME)    &MP31.GPMY_FLD_NAME
MP31.CALC_RSLT_VAL   &MP31.CALC_RSLT_VAL
!MP.PRD_END_DT
MP1.PRC_ORD_TS

   move &MP31.GPMY_FLD_NAME to $rptfldname

   Move &MP31.calc_rslt_val To #repval
   let $employee-found='Y'
   let $rptfldname = rtrim($rptfldname,' ')
   let $rptfldname = ltrim($rptfldname,' ')

               if #repval < 0
                    Let #repval = 0
                    let #EachSTDTax = 0
               end-if


   Evaluate  $rptfldname
     when = 'EMPL_STDPY'
       !let $employee-found ='Y1'
       move #repval to #repval1
       if #repval1 <> 0
          let $print1 = 'Y'
       end-if
       let #TotEachSTDAmtPY1  = #TotEachSTDAmtPY1  + #repval1
       let #Page_total_std1 = #Page_total_std1 + #repval1
       !move #repval1 to #Page_total_std1
      
     when = 'EMPL_STDPY2' 
       !let $employee-found ='Y2'              
       move #repval to #repval2
       if #repval2 <> 0
          let $print2 = 'Y'
       end-if
       let #TotEachSTDAmtPY2  = #TotEachSTDAmtPY2  + #repval2
       let #Page_total_std2 = #Page_total_std2 + #repval2
       !move #repval2 to #Page_total_std2
               
     when = 'EMPL_STDPY3'
        !let $employee-found ='Y3'
        move #repval to #repval3
        if #repval3 <> 0
          let $print3 = 'Y'
        end-if
        let #TotEachSTDAmtPY3  = #TotEachSTDAmtPY3  + #repval3
        let #Page_total_std3 = #Page_total_std3 + #repval3   
        !move #repval3 to #Page_total_std3            
               
     when = 'EMPL_STDPY4'
        !let $employee-found ='Y4'
        move #repval to #repval4
        if #repval4 <> 0
          let $print4 = 'Y'
        end-if
        let #TotEachSTDAmtPY4  = #TotEachSTDAmtPY4  + #repval4
        let #Page_total_std4 = #Page_total_std4 + #repval4 
        !move #repval4 to #Page_total_std4   

     when = 'EMPL_STDPY5'
        !let $employee-found ='Y5'
        move #repval to #repval5
        if #repval5 <> 0
          let $print5 = 'Y'
        end-if
        let #TotEachSTDAmtPY5  = #TotEachSTDAmtPY5  + #repval5
        let #Page_total_std5 = #Page_total_std5 + #repval5
        !move #repval5 to #Page_total_std5
     
     break
   End-Evaluate


      move #repval1 to #EachSTDTax1
      move #repval2 to #EachSTDTax2 
      move #repval3 to #EachSTDTax3
      move #repval4 to #EachSTDTax4
      move #repval5 to #EachSTDTax5

FROM PS_GPMY_PY_TMP3 MP31,
     PS_GPMY_PY_TMP MP1


WHERE MP31.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP1.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP31.EMPLID = $EmplId
AND MP1.EMPLID = $EmplId
AND MP31.CAL_RUN_ID =  MP1.CAL_RUN_ID


AND MP1.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = $EMPLID
                   AND   CAL_RUN_ID       = MP1.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP1.GP_PAYGROUP
                   AND   CAL_ID           = MP1.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP1.ORIG_CAL_RUN_ID)
AND MP31.EMPL_RCD = MP1.EMPL_RCD
AND MP31.GP_PAYGROUP = MP1.GP_PAYGROUP
AND MP31.CAL_ID = MP1.CAL_ID
AND MP31.RSLT_SEG_NUM = MP1.RSLT_SEG_NUM
AND MP31.ORIG_CAL_RUN_ID =  MP1.ORIG_CAL_RUN_ID
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = T2.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = T2.RSLT_REV_NUM
AND MP1.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
                   AND EMPLID=MP1.EMPLID )
AND MP31.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                   WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=$EmplId
                    AND EMPL_RCD = MP31.EMPL_RCD
                    AND CAL_RUN_ID =  MP31.CAL_RUN_ID
                    AND CAL_ID =  MP31.CAL_ID
                    AND GP_PAYGROUP = MP31.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP31.GPMY_FLD_NAME
                    AND USER_KEY1=MP31.USER_KEY1)

!AND MP.PRD_END_DT = (SELECT MAX(PRD_END_DT) FROM PS_GPMY_PY_TMP X
!                 WHERE X.EMPLID=MP.EMPLID
!                 AND X.GP_PAYGROUP = MP1.GP_PAYGROUP
!                 AND X.RSLT_SEG_NUM = MP1.RSLT_SEG_NUM
!                 AND X.RSLT_VER_NUM = MP1.RSLT_VER_NUM
!                 AND X.RSLT_REV_NUM = MP1.RSLT_REV_NUM
!                 AND X.JOBINSTANCE = MP1.JOBINSTANCE)
!AND MP31.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PR_TMP3 X1
!                 WHERE X1.EMPLID=MP31.EMPLID
!                 AND X1.CAL_RUN_ID =  MP31.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP31.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP31.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP31.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP31.RSLT_REV_NUM
!                 AND X1.JOBINSTANCE = MP31.JOBINSTANCE
!                AND X1.GPMY_FLD_NAME=MP31.GPMY_FLD_NAME
!                AND X1.USER_KEY1=MP31.USER_KEY1
!)
AND USER_KEY1=$CompTaxRef
AND GPMY_FLD_NAME IN ('EMPL_STDPY','EMPL_STDPY2','EMPL_STDPY3','EMPL_STDPY4','EMPL_STDPY5')
ORDER BY MP31.GPMY_FLD_NAME
End-Select


end-procedure


!***********************************************************************
! Procedure: Prepare-Employee                                          *
!***********************************************************************
begin-procedure Prepare-Employee

  !Tax File Number format = 9-2Z where Z can be 0-4 or blank
  !However for CP39 the leading 2 chars are stripped thus TFN = AAAAAAABBC
  !Where A is 3-9 of TFN BB are check digits and C 0-4 for wife code

  LET $EmplTaxNbrSTR = $EmplTaxNbr
  Let $WifeCode = substr($EmplTaxNbr,13,1)             !   Wife code in posn 13                         - Incd#1
  !Let $EmplTaxNbr = substr($EmplTaxNbr,3,11)           !   Extract reference number with check digit    - Incd#1


  Let $EmplTaxNbr1 = lpad($EmplTaxNbr,11,'0')      !   Expand tax number to 11 chars - pad with 0s  - Incd#1


  Let $EmplTaxNbr = Translate($EmplTaxNbr,'-','') ! remove dash
  if $EmplTaxNbr > '000000000'
      if $WifeCode = ' '
         let $WifeCode = '0'
      end-if
      Let $FrmEmplTaxNbr = $EmplTaxNbr1 || '(' || $WifeCode || ')'  ! Store for printing on the form
      Let $EmplTaxNbr = lpad($EmplTaxNbr,10,'0')      !   Expand tax number to 10 chars - pad with 0s  - Incd#1
      if $WifeCode = ' '
         let $WifeCode = '0'
      end-if
  else
      Let $FrmEmplTaxNbr = $EmplTaxNbr
   end-if

    Let $EmplTaxNbr = substr($EmplTaxNbr,3,11)           !   Extract reference number with check digit    - Incd#1

   LET $EmplTaxNbrSTR = REPLACE($EmplTaxNbrSTR, '-', '')
   LET $EmplTaxNbrSTR = RTRIM(LTRIM($EmplTaxNbrSTR, ' '), ' ')
   LET #SLEN = LENGTH($EmplTaxNbrSTR)
   LET $EmplTaxNbrSTR1 = SUBSTR($EmplTaxNbrSTR, 1, #SLEN - 3)
   LET $EmplTaxNbrSTR2 = SUBSTR($EmplTaxNbrSTR, #SLEN - 2, 2)
   LET $EmplTaxNbrSTR3 = SUBSTR($EmplTaxNbrSTR, #SLEN, 1)
   if rtrim(ltrim($EmplTaxNbrSTR, ' '), ' ') <> ''
   LET $FrmEmplTaxNbr = $EmplTaxNbrSTR1 || '-' || $EmplTaxNbrSTR2 || '(' || $EmplTaxNbrSTR3 || ')'
   else
        LET $FrmEmplTaxNbr = '0000000000' || '-' ||'00' || '(0)'
   end-if



   IF $EELegalName = '' or $EELegalName = ' '
     move &P1.NAME to $EmplNameUC
   ELSE
     move $EELegalName to $EmplNameUC
   END-IF

  uppercase $EmplNameUC                                  ! Incd#1

   let $EmplNameUC1 = ''
   let $EmplNameUC2 = ''

    IF LENGTH($EmplNameUC) > 25
       let $EmplNameUC1 = SUBSTR($EmplNameUC,1,25)
       let $EmplNameUC2 = SUBSTR($EmplNameUC,26,25)
    END-IF

end-procedure

!***********************************************************************
! Procedure: write-file-details                                         *
!***********************************************************************
begin-Procedure write-file-details

  if &CreateFile = 'Y'
       Let $DetailRow = 'D'


       Let $EmplNameUC = rtrim($EmplNameUC,' ')
       Let $EmplNameUC = replace($EmplNameUC,',',' ')
       Let $EmplNameUC = rpad($EmplNameUC,60,' ')

       Let #WriteAddlTax = #EachAddlTax * 100
       Let $WriteAddlTax = edit(#WriteAddlTax, '99999999')
       Let $WriteAddlTax = ltrim($WriteAddlTax, ' ')
       Let $WriteAddlTax = lpad($WriteAddlTax,8,'0')

       if $emppy = 'X'


       Let #WriteAddlTaxpy = #EachAddlTaxpy * 100
       Let $WriteAddlTaxpy = edit(#WriteAddlTaxpy, '99999999')
       Let $WriteAddlTaxpy = ltrim($WriteAddlTaxpy, ' ')
       Let $WriteAddlTaxpy = lpad($WriteAddlTaxpy,8,'0')

       End-if

       if #count_new = 0
          Let #WriteSTDTax = #EachSTDTax * 100
       end-if

       if #count_new = 1
          Let #WriteSTDTax = #EachSTDTax1 * 100
       end-if

       if #count_new = 2
          Let #WriteSTDTax = #EachSTDTax2 * 100
       end-if

       if #count_new = 3
          Let #WriteSTDTax = #EachSTDTax3 * 100
       end-if

       if #count_new = 4
          Let #WriteSTDTax = #EachSTDTax4 * 100
       end-if

       if #count_new = 5
          Let #WriteSTDTax = #EachSTDTax5 * 100
       end-if
       
       Let $WriteSTDTax = edit(#WriteSTDTax, '99999999')
       Let $WriteSTDTax = ltrim($WriteSTDTax,' ')
       Let $WriteSTDTax = lpad($WriteSTDTax,8,'0')

       Let $OldIcNbr    = rtrim($OldIcNbr,' ')
       Let $OldIcNbr    = rpad($OldIcNbr,12,' ')

       Let $NewIcNbr    = Translate($NewIcNbr,'-','')
       Let $NewIcNbr    = rtrim($NewIcNbr,' ')
       Let $NewIcNbr    = rpad($NewIcNbr,12,' ')

       Let $ICPassport  = rtrim($ICPassport,' ')
       Let $ICPassport  = rpad($ICPassport,12,' ')

       Let $EmplCitizen = $CountryNat     ! Incd#1

       Let $EmplIdPr    = rtrim($EmplId,' ')
       Let $EmplIdPr    = ltrim($EmplId,' ')
       Let $EmplIdPr    = rpad($EmplId,10,' ')

       LET $EmplTaxNbr = RTRIM(LTRIM($EmplTaxNbr, ' '), ' ')
       LET $WifeCode   = RTRIM(LTRIM($WifeCode  , ' '), ' ')
       IF $EmplTaxNbr = ''
           LET $EmplTaxNbr = '0000000000'
       END-IF
       IF $WifeCode = ''
           LET $WifeCode = '0'
       END-IF
       LET #STRLEN = LENGTH($EmplTaxNbr)
       IF #STRLEN < 10
           LET $EmplTaxNbr = LPAD($EmplTaxNbr, 10, '0')
       END-IF
       LET #STRLEN = LENGTH($WifeCode)
       IF #STRLEN <> 1
           LET $WifeCode = '0'
       END-IF

!       Let $DetailRow = $DetailRow || $EmplTaxNbr || $WifeCode || $EmplNameUC || $OldIcNbr || $NewIcNbr || $ICPassport || $EmplCitizen || $WriteSTDTax || $WriteAddlTax || $EmplIdPr
  if $emppy ='X'
   if #count_new <> 0
     write #counttmp from $DetailRow:1          -
                      $EmplTaxNbr:10        -
                      $WifeCode:1           -
                      $EmplNameUC:60        -
                      $OldIcNbr:12          -
                      $NewIcNbr:12          -
                      $ICPassport:12        -
                      $EmplCitizen:2        -
                      $WriteSTDTax:8        -
                      $WriteAddlTax:8       -
                      $EmplIdPr:10
    end-if   
  else
    write #count from $DetailRow:1          -
                      $EmplTaxNbr:10        -
                      $WifeCode:1           -
                      $EmplNameUC:60        -
                      $OldIcNbr:12          -
                      $NewIcNbr:12          -
                      $ICPassport:12        -
                      $EmplCitizen:2        -
                      $WriteSTDTax:8        -
                      $WriteAddlTax:8       -
                      $EmplIdPr:10

  end-if
  end-if

end-procedure

!***********************************************************************
!  Procedure: Get-Responsible-Person-IC
!             Gets the IC-Number from PERS_NID                         *
!                                         *
!***********************************************************************
begin-procedure Get-Responsible-Person-IC

let $ResponsibleIcNbr_New  = ' '
let $ResponsibleIcNbr_Old  = ' '

begin-SELECT
M.NATIONAL_ID        &responsible_ic
M.NATIONAL_ID_TYPE   &responsible_type

    if rtrim(&responsible_type,' ')='NEWIC'
        move &responsible_ic to $ResponsibleIcNbr_New
    else
        move &responsible_ic to $ResponsibleIcNbr_Old
    end-if

FROM PS_PERS_NID M

WHERE M.EMPLID = &F.GPMY_RESPONSIBLEID
AND M.COUNTRY='MYS'

end-SELECT

end-procedure


!***********************************************************************
!  Procedure: Get-IC-Nbr
!             Gets the IC-Number from PERS_NID                         *
!                                         *
!***********************************************************************
begin-procedure Get-IC-Nbr

let $NewIcNbr  = ' '
let $OldIcNbr = ' '

begin-SELECT
M.NATIONAL_ID
M.NATIONAL_ID_TYPE

    if rtrim(&M.NATIONAL_ID_TYPE,' ')='NEWIC'
        move &M.NATIONAL_ID to $NewIcNbr
    else
        move &M.NATIONAL_ID to $OldIcNbr
    end-if

FROM PS_PERS_NID M

WHERE M.EMPLID = $Emplid
AND M.COUNTRY='MYS'

end-SELECT

end-procedure

!***********************************************************************
! Procedure: GetICPassportInfo                                         *
!***********************************************************************
begin-Procedure GetICPassportInfo

let $ICPassport  = ' '
let $CountryNat  = ' '

begin-SELECT
CP.PASSPORT_NBR     &Passport
CP.DEPENDENT_ID     &DependId
CP.DT_ISSUED        &CPIssueDt
CP.EXPIRATN_DT      &CPExpireDt
C.COUNTRY_2CHAR     &Country1


          !if ($AsofToday <= &CPExpireDt OR rtrim(&CPExpireDt,' ') = '')
         !   if &DependId = '  '
              move &Passport to $ICPassport
              let $CountryNat  = &Country1
         !   end-if
         ! end-if

FROM  PS_CITIZEN_PSSPRT CP , PS_COUNTRY_TBL C
WHERE CP.EMPLID   = $Emplid
AND   CP.DT_ISSUED <= $AsOfToday
AND C.COUNTRY   = CP.COUNTRY
end-SELECT


end-Procedure


!*********************************
!Procedure : get-contrb-mmm                  ! Incd#1
!*********************************
begin-procedure GetMonth
  let $MonthCd=rtrim($MonthCd,' ')
  evaluate $MonthCd
    when = '01'
          let $mmStr = $JAN_LBL
    when = '02'
          let $mmStr = $FEB_LBL
    when = '03'
          let $mmStr = $MAR_LBL
    when = '04'
          let $mmStr = $APR_LBL
    when = '05'
          let $mmStr = $MAY_LBL
    when = '06'
          let $mmStr = $JUN_LBL
    when = '07'
          let $mmStr = $JUL_LBL
    when = '08'
          let $mmStr = $AUG_LBL
    when = '09'
          let $mmStr = $SEPT_LBL
    when = '1'



          let $mmStr = $JAN_LBL
    when = '2'
          let $mmStr = $FEB_LBL
    when = '3'
          let $mmStr = $MAR_LBL
    when = '4'
          let $mmStr = $APR_LBL
    when = '5'
          let $mmStr = $MAY_LBL
    when = '6'
          let $mmStr = $JUN_LBL
    when = '7'
          let $mmStr = $JUL_LBL
    when = '8'
          let $mmStr = $AUG_LBL
    when = '9'
          let $mmStr = $SEPT_LBL
    when = '10'
          let $mmStr = $OCT_LBL
    when = '11'
          let $mmStr = $NOV_LBL
    when = '12'
          let $mmStr = $DEC_LBL
    when-other
      let $mmStr = ' '
    end-evaluate

end-procedure
!
!***********************************************************************
! Procedure: Print-First-Page                                          *
!***********************************************************************
Begin-procedure Print-First-Page

  !*******************************************
  ! START OF FIRST SECTION OF THE FIRST PAGE *
  !*******************************************

  graphic () font 4 8
  if $found = 'Y'
   

   print $GP_CP39_TO_LBL                                (1,5)   ! 'Kepada:'
  
else
  Print 'Borang ini boleh difotokopi'                   (1,2)



  End-if
  graphic () font 3 8
  !print 'Muka Surat'                                   (1,101)
  !page-number (1,110)
  Let #PageNum = 0
  !print    #Pagenum                    (1,110) edit '99999'
  graphic () font 4 11
  print $GP_CP39_TITLE_LBL                             (1,44) bold

  if $found = 'Y'
  graphic () font 4 8
  !Print 'CP 39A'                                        (1,105) bold

  End-if
  graphic (2,1,27)   box 6
  graphic () font 4 8
  print $GP_CP39_TITLE1_LBL                            (2,3) bold
  graphic () font 4 10
  print $GP_CP39_TITLE2_LBL                            (2,41)
  graphic () font 4 8
  print $GP_CP39_TITLE3_LBL                            (3,3) bold
  
  !print $GP_CP39_TITLE4_LBL                            (2,85) bold
  graphic () font 4 9


  print $GP_CP39_1967_LBL                                  (3,39)
  graphic (3,78,33)  box 5

 
 if $found <> 'Y'

print $GP_CP39_TWO_LBL                                 (2,100) bold
else
print $GP_CP39A_TWO_LBL                                 (2,100) bold
end-if
                   






  print $GP_CP39_PEJABAT_LBL                           (3,86) bold
  graphic () font 4 8
  



if $found = 'Y'
  let $LBL1 = $GP_CP39_CAWANGAN_LBL ||' '|| $GP_CP39_FR_ADDR11_LBL
  else
  let $LBL1 = 'Cawangan Pungutan Kuala Lumpur'
  End-if
  


print $LBL1                                          (4,3)
  graphic () font 4 9
  print $GP_CP39_1994_LBL                                  (4,33)
  graphic () font 4 8
  print $GP_CP39_NO_K_LBL                                            (4,78)
  graphic                              (4,86,2) box 1 
  graphic                              (4,88,2) box 1 
  graphic                              (4,90,2) box 1
  graphic                              (4,92,2) box 1
  graphic                              (4,94,2) box 1
  graphic                              (4,96,2) box 1
  graphic                              (4,98,2) box 1
  graphic                              (4,100,2) box 1
  graphic                              (4,102,2) box 1
  graphic                              (4,104,2) box 1
  graphic                              (4,106,2) box 1
  graphic                              (4,108,2) box 1
 

  if $found = 'Y'
  print $GP_CP39_FR_ADDR12_LBL                          (5,3)
  else





  print 'Kaunter Bayaran Dan Tingkat 1,Blok 8A'                         (5,3)
  end-if






  if $found = 'Y'


  Let $LBL5 = $GP_CP39_FR_ADDR2_LBL  ||' '|| $GP_CP39_FR_ADDR4_LBL
  print $LBL5 (6,3)
  else
  print 'Kompleks Bangunan Kerajaan, Jalan Duta'    (6,3)

  Print '50990 KUALA LUMPUR'                          (7,3)
  end-if

  !print $GP_CP39_FR_ADDR3_LBL                          (6,30) bold
  graphic (6,46,15)  box 1 3

  if $found <> 'Y'
  print $GP_CP39_FR_ADDR3_LBL                          (6,30) bold

  else
  Print 'TUNGGAKAN BAGI BULAN'                         (6,30) bold
  end-if
  if $found='Y'
    print 'December'                                      (6,50) bold
   ! print $GP_CP39_BONUS_LBL                   (7,31)
  !  print $GP_CP39_BONUS_YR_LBL                        (7,66)


  else
  print $Month                                          (6,50) bold
  end-if

  print $GP_CP39_YEAR_LBL                                             (6,66) bold

  move $TaxYear to #TaxYear
 
  let #TaxYear1 = #TaxYear - 1
  move #TaxYear1 to $TaxYear1               
  let #TaxYear2 = #TaxYear - 2
  move #TaxYear2 to $TaxYear2                
  let #TaxYear3 = #TaxYear - 3
  move #TaxYear3 to $TaxYear3                
  let #TaxYear4 = #TaxYear - 4
  move #TaxYear4 to $TaxYear4               
  let #TaxYear5 = #TaxYear - 5
  move #TaxYear5 to $TaxYear5                

  graphic (6,71,6)   box 1 3
  if $found='Y'
  
    if #count_new = 1
      print $TaxYear1                                     (6,73) bold  edit 99999
    end-if

    if #count_new = 2
      print $TaxYear2                                      (6,73) bold  edit 99999
    end-if

    if #count_new = 3
      print $TaxYear3                                      (6,73) bold  edit 99999
    end-if

    if #count_new = 4
      print $TaxYear4                                      (6,73) bold  edit 99999
    end-if

    if #count_new = 5
      print $TaxYear5                                      (6,73) bold  edit 99999
    end-if

  else
   print $TaxYear                                             (6,73) bold
  end-if
  print $GP_CP39_RES_NO_LBL                                              (6,78)
  graphic                              (6,86,2) box 1 
  graphic                              (6,88,2) box 1
  graphic                              (6,90,2) box 1
  graphic                              (6,92,2) box 1
  graphic                              (6,94,2) box 1
  graphic                              (6,96,2) box 1
  graphic                              (6,98,2) box 1
  graphic                              (6,100,2) box 1
  graphic                              (6,102,2) box 1
  graphic                              (6,104,2) box 1
  graphic                              (6,106,2) box 1
  graphic                              (6,108,2) box 1
  

  if $found = 'Y'
  print $GP_CP39_FR_ADDR6_LBL                          (7,3)
  end-if
 ! print $GP_CP39_TANDANG_LBL                           (8,80)
 ! graphic (8,90,17)  horz-line 3
  !print $GP_CP39_FR_ADDR6_LBL                       (9,3)
  !print $GP_CP_39_PENANDA_LBL                          (9,80)

  !********************************************
  ! START OF SECOND SECTION OF THE FIRST PAGE *
  !********************************************


  graphic (8,1,110)  box 12 14
  graphic (8,1,110)  box 1 3 10
   graphic (7,44,12)  vert-line 12
      graphic (7,83,12)  vert-line 12
  print $GP_CP39_BUTIR_LBL                             (8,19) bold
  print $GP_CP39_BUTIR1_LBL                            (8,53) bold


 print $GP_CP39_PEGA_LBL                           (8,84) bold


  !print $GP_CP39_PEGAWAI_LBL                           (8,84) bold

  graphic (8,54,11)  vert-line 3
  graphic (8,65,11)  vert-line 3
  graphic () font 4 9
    graphic () font 4 8
 print $GP_CP39_PCB_LBL                               (9,59)  bold
  print $GP_CP39_CP_LBL                                (9,73) bold

 graphic (9,54,29)  horz-line 3
  print $GP_CP39_E_FILE_NBR_LBL                        (10,2)  bold


  print $GP_CP39_M_LBL                                 (10,4) bold
  print $GP_CP39_E_LBL                                 (10,9) bold
  
  graphic                              (10,10,3) box 1 
  graphic                              (10,13,3) box 1
  graphic                              (10,16,3) box 1
  graphic                              (10,19,3) box 1
  graphic                              (10,22,3) box 1
  graphic                              (10,25,3) box 1
  graphic                              (10,28,3) box 1
  graphic                              (10,31,3) box 1


  let #nCount = length($CompTaxRef)

  let #nLength = 7
  let #nFill   = 10
  if #nCount > 9
    let #nLength = 8
    let #nFill   = 6
  end-if

  let #nStart = 1
  let #PPos = 10
  while #nStart <= #nCount
     let $PChar = Substr($CompTaxRef,#nStart,1)
     !print $PChar                                      (10,#PPos) bold
     if #nStart = #nLength
        Add #nFill to #PPos                                  ! Incd#1
     else
        Add 2 to #PPos
     end-if
     Add 1 to #nStart
  end-while

  let $E_File_Nbr   = rtrim(ltrim($CompTaxRef,' '),' ')
   let $E_File_Nbr1 = substr($E_File_Nbr,1,1)
   let $E_File_Nbr2 = substr($E_File_Nbr,2,1)
   let $E_File_Nbr3 = substr($E_File_Nbr,3,1)
   let $E_File_Nbr4 = substr($E_File_Nbr,4,1)
   let $E_File_Nbr5 = substr($E_File_Nbr,5,1)
   let $E_File_Nbr6 = substr($E_File_Nbr,6,1)
   let $E_File_Nbr7 = substr($E_File_Nbr,7,1)
   let $E_File_Nbr8 = substr($E_File_Nbr,8,1)
   let $E_File_Nbr9 = substr($E_File_Nbr,9,1)
   let $E_File_Nbr10 = substr($E_File_Nbr,10,1)

   if ltrim(rtrim($E_File_Nbr10, ' '), ' ') = ''
        let $E_File_Nbr10 = $E_File_Nbr9
        let $E_File_Nbr9  = $E_File_Nbr8
        let $E_File_Nbr8  = ''
   end-if

   graphic                              (10,10,3) box 1
print $E_File_Nbr1                   (10,11) 
   graphic                              (10,13,3) box 1
print $E_File_Nbr2                   (10,14)
   graphic                              (10,16,3) box 1
print $E_File_Nbr3                   (10,17)
   graphic                              (10,19,3) box 1
print $E_File_Nbr4                   (10,20)
   graphic                              (10,22,3) box 1
print $E_File_Nbr5                   (10,23)
   graphic                              (10,25,3) box 1
print $E_File_Nbr6                   (10,26)
   graphic                              (10,28,3) box 1
print $E_File_Nbr7                   (10,29)
   graphic                              (10,31,3) box 1
print $E_File_Nbr8                   (10,32)


  print '-'                                              (10,35)

  graphic (10,36,3)  box 1 
 print $E_File_Nbr9                   (10,37)
 graphic (10,39,3)  box 1 
 print $E_File_Nbr10                   (10,40)

   print $GP_CP39_JUMLAH_LBL                            (10,45)
  print $GP_CP39_POTONGAN_LBL                           (11,45)
  print $GP_CP39_RM_LBL                                (10,55)
  print $GP_CP39_RM_LBL                                (10,70)
  graphic (11,44,39)  horz-line 3

  !if $found='Y'

    if #count_new = 1
       print #Page_total_std1                                       (10,57) edit '999,999,999.99' bold   !INCD#1
       print #EmplCount1                                            (13,56)  edit '99999'            !Incd#1
       let #tot_tax = #Page_total_std1
    end-if

    if #count_new = 2
       print #Page_total_std2                                      (10,57) edit '999,999,999.99' bold   !INCD#1
       print #EmplCount2                                            (13,56)  edit '99999'            !Incd#1
       let #tot_tax = #Page_total_std2
    end-if

    if #count_new = 3
       print #Page_total_std3                                       (10,57) edit '999,999,999.99' bold   !INCD#1
       print #EmplCount3                                            (13,56)  edit '99999'            !Incd#1
       let #tot_tax = #Page_total_std3
    end-if

    if #count_new = 4
       print #Page_total_std4                                      (10,57) edit '999,999,999.99' bold   !INCD#1
       print #EmplCount4                                            (13,56)  edit '99999'            !Incd#1
       let #tot_tax = #Page_total_std4
    end-if

    if #count_new = 5
       print #Page_total_std5                                       (10,57) edit '999,999,999.99' bold   !INCD#1
       print #EmplCount5                                            (13,56)  edit '99999'            !Incd#1
       let #tot_tax = #Page_total_std5
    end-if  

    if #count_new = 0
      !print  &CountPYTax                                 (13,56) edit '99999'             !Incd#1
    end-if

    if #count_new <> 0     
       Print #tot_tax                                      (14,73)   edit '999,999,999.99' bold   !INCD#1
    end-if    

  !else

    if #count_new = 0
      print &StdTax                                        (10,57) edit '999,999,999.99' bold   !INCD#1
      ! print &StdTax                                        (14,73) edit '999,999,999.99' bold   !INCD#1
                  Let #netamt = &StdTax  + &AddlTax 
                  Print #netamt                                             (14,73) edit '999,999,999.99' bold
    end-if
       
      print &AddlTax                                     (10,73) edit '999,999.99' bold     !Incd#1
     if #count_new = 0
      print &CountStdTax                                   (13,56)  edit '99999'            !Incd#1
     end-if
     print &CountAddlTax                                  (13,70) edit '99999'             !Incd#1

     let #tot_tax=&StdTax+&AddlTax
    ! Print #tot_tax                                      (14,73)
  !end-if

 print $GP_CP39_NAME_CMP_LBL                          (14,2)

    print $GP_CP39_NAME2_CMP_LBL                       (15,2)
  


graphic (15,9,34)  horz-line 3
  graphic (16,9,34)  horz-line 3
  graphic (17,9,34)  horz-line 3
  print $CompanyName                                   (15,12) bold
  print $GP_CP39_BILANGAN_LBL                          (12,45)
 print $GP_CP39_PEKERJA_LBL                          (13,45)
  graphic (13,44,39)  horz-line 3

  print $GP_CP39_ALAMAT_LBL                            (16,2)
   print $GP_CP39_NAME2_CMP_LBL                        (17,2)

 

 print $Co_AddrA                                      (16,12) bold WRAP 50 5
  print $GP_CP39_BUTIRS_LBL                            (14,45)
  print $GP_CP39_AMAUN_LBL                             (14,55) BOLD
  graphic (14,54,29)  horz-line 3
  print $GP_CP39_RM_LBL                                (14,70) BOLD


   print $GP_CP39_CEK_LBL                               (15,45)
    print $GP_CP39_BANK_LBL                               (16,45)
     print $GP_CP39_DERAF_LBL                               (17,45)
 




 print $GP_CP39_NOMBOR_LBL                            (15,55)


  print $Cheq_num                                      (15,70)
  graphic (15,54,29)  horz-line 3
 ! graphic (17,12,35)  horz-line 3
 ! print $Co_Addr3                                     (16,22) bold
  print $GP_CP39_KIRIMAN_LBL                           (18,45)

print $GP_CP39_WAN_LBL                           (19,45)

  




print $GP_CP39_CAWAN_LBL                         (16,55)


!print $GP_CP39_CAWANGAN1_LBL                         (16,55)




  !print $GP_CP39_PEJABATPOS_LBL                        (17,75)
  Let $Banks = $Bank1 || $Bank2
  Print $Banks                                             (16,66)  !WRAP 20 2
 
  !graphic (16,57,27)  horz-line 3
  !graphic (18,12,35)  horz-line 3
  print $GP_CP39_PENDAFTA_LBL                          (12,2)
  graphic (12,19,23)  box 1 3
  print $cregnumber                                    (18,25)
 graphic (17,54,29)  horz-line 3
  print $GP_CP39_TARIKH_LBL                            (18,55)
  print $Cheq_Date                                     (18,70) EDIT DD/MM/YYYY
  !graphic (18,58,45)  horz-line 3





    print $GP_CP39_TANDATANG_LBL  (10,87)
    graphic (10,96,11)   horz-line 5

    graphic (12,96,11)   horz-line 5
    print $GP_CP39_NAMAS_LBL   (12,87)

    if $NameMn1 <> '' and $NameMn2 <> ''
          print $NameMn1  (12,96)              !Incd#1
          print $NameMn2  (13,96)              !Incd#1
    else
          graphic (12,96,11)   horz-line 5
      print $NameMn  (12,96)              !Incd#1
    end-if

    print $GP_CP39_NOKP_LBL      (14,87)
    graphic (14,96,11)   horz-line 5
    print $ResponsibleIcNbr (14,96)                !Incd#1

    print $GP_CP39_JAWATAN_LBL      (16,87)
    graphic (16,96,11)   horz-line 5
    print $jobtitle   (16,96)              !Incd#1

    print $GP_CP39_TEL_LBL  (18,87)
    graphic (18,96,11)   horz-line 5
    print $registered_phone  (18,96)                !Incd#1





  !********************************************
  ! START OF THIRD SECTION OF THE FIRST PAGE  *
  !********************************************


 

 if $found <> 'Y'
 graphic (20,1,15)  box 1 3 10
 PRINT $TEXT0 (20,2) bold
 graphic () font 4 7
 print $TEXT1 (21,1)

 PRINT $TEXT3 (22,1)
 PRINT $TEXT4 (23,1)
 PRINT $TEXT5 (24,1)
 PRINT $TEXT6 (25,2)
 PRINT $TEXT7 (26,3) BOLD
 PRINT $TEXT8 (27,2)
 PRINT $TEXT9 (28,3)
 PRINT $TEXT10 (29,3)
 PRINT $TEXT11 (30,3)
 !PRINT $TEXT12 (31,3) BOLD
 PRINT $TEXT13 (31,1)
 PRINT $TEXT14 (32,2)
 PRINT $TEXT15 (33,2) bold
 PRINT $TEXT16 (34,1)
 PRINT $TEXT17 (35,3) BOLD
 PRINT $TEXT18 (36,1)
 PRINT $TEXT19 (37,6)



 graphic (21,57,15)  box 1 3 10
 PRINT $TEXT20 (21,58)  BOLD
 PRINT $TEXT21 (22,58)
 PRINT $TEXT22 (23,58)
 PRINT $TEXT23 (24,58) BOLD



  print $TEXT24 (25,58)
 PRINT $TEXT25 (26,59)
 PRINT $TEXT26 (27,58)
 PRINT $TEXT27 (28,58)
 PRINT $TEXT28 (29,59)
 PRINT $TEXT29 (30,58)
  PRINT $TEXT30 (31,59)



 PRINT $TEXT31 (32,58)


 PRINT $TEXT32 (33,59) bold
 PRINT $TEXT33 (34,59) bold
 PRINT $TEXT34 (35,59) bold
 PRINT $TEXT35 (36,59) bold

 







 PRINT $TEXT36 (37,58)

 
graphic (39,57,15)  box 1 3 10
PRINT $TEXT38 (39,58) bold
 PRINT $TEXT39 (40,58) 
 PRINT $TEXT40 (41,58) 


 else


 graphic (21,1,15)  box 1 3 10
 Print 'A. BORANG CP 39A' (21,2) bold
 
 print ' 1. Borang ini mesti diisi dengan lengkap dan betul.' (22,1)

 PRINT ' 2. Majikan digalakkan menghantar maklumat potongan melalui e-PCB/e-Data PCB/disket/cakera  ' (23,1)
 PRINT 'padat/pemacu flash mengikut format  yang ditentukan oleh LHDN bagi menggantikan Borang CP39.' (24,2)
 PRINT ' 3. No. Cukai Pendapatan.'(25,1)
 PRINT '  3.1 Isikan nombor  cukai pendapatan dalam ruangan yang telah disediakan.' (26,2)
 PRINT '   Contoh:SG 2506203-00(0) boleh diisi sebagai SG 02506203000 ' (27,3) 



 PRINT '  3.2 Bagi pekerja yang layak dikenakan PCB tetapi tiada nombor cukai pendapatan,' (28,2)

 PRINT ' pendaftaran boleh dibuat melalui :'(29,3)

 PRINT ' i.majikan atau pekerja boleh mendaftar secara atas talian melalui e-Daftar di www.hasil.gov.my, atau'(30,3)

 PRINT ' ii.Borang CP22 atau borang in lieu of CP39 dikemukakan ke cawangan LHDNM yang berdekatan.' (31,3)








 PRINT ' 4. Nama pekerja: ' (32,1)


 PRINT 'Isikan nama penuh pekerja seperti di kad pengenalan/pasport (Jangan senaraikan pekerja yang'(33,2)

 PRINT ' tidak layak dikenakan potongan bagi bulan berkenaan)' (34,2) bold

 PRINT ' 5. Nombor Pengenalan: Isikan kedua-dua nombor kad pengenalan baru dan lama (sekiranya ada).' (35,1)
 PRINT '      Contoh: 720403065235 atau A2172122'(36,3) BOLD

 PRINT ' 6. Jumlah Potongan Cukai:   PCB - Isikan amaun cukai mengikut Potongan Cukai Bulanan.' (37,1)
 PRINT '                                 CP38 - Isikan amaun potongan cukai mengikut arahan Borang ' (38,6)


 PRINT '                                  CP38 (jika ada).'(39,18)

 graphic (40,1,15)  box 1 3 10
 PRINT 'B.  PEMBAYARAN' (40,2)  BOLD
 PRINT '1. Bayaran dan Borang CP39A yang telah lengkap diisi mestilah sampai ke Cawangan Pungutan LHDN ' (41,2)
 PRINT '   selewat-lewatnya pada hari kesepuluh bulan berikutnya.' (42,2)
 PRINT 'Contoh:        PCB bagi tunggakan gaji 2011 yang dibayar dalam bulan April 2012, tarikh ' (21,56) BOLD


 PRINT 'akhirnya ialah pada 10 Mei 2012.'(22,56)

 PRINT '2.Sediakan borang CP39A beserta cek/bank draf/kiriman wang/wang pos (instrumen bayaran) yang berasingan'(23,55)


 PRINT 'untuk bulan atau tahun berlainan.'(24,56)

  print '3. Pastikan jumlah potongan PCB /CP38 adalah betul dan sama dengan nilai instrumen bayaran.'(25,55)

 PRINT '4.Instrumen bayaran hendaklah dibayar kepada Ketua Pengarah Hasil Dalam Negeri. Catatkan no rujukan majikan E,' (26,55)

 PRINT 'Nama Syarikat/Perniagaan dan alamat majikan di belakang instrumen bayaran.' (27,56)

 PRINT '5. Bayaran untuk Cukai Syarikat, Skim Ansurans (CP500), Penyelesaian Cukai (Pemberhentian Kerja) dan Cukai' (28,55)

 PRINT ' Keuntungan Harta Tanah tidak boleh dibayar bersama dengan bayaran yang menggunakan borang ini.' (29,56)
 PRINT '6. Untuk bayaran bagi Negeri Sabah, sila alamatkan ke :7.Untuk bayaran bagi Negeri Sarawak, sila alamatkan ke :' (30,55)

 PRINT 'Cawangan Pungutan Kota Kinabalu,                       Cawangan Pungutan Kuching,' (31,59)bold
 PRINT 'Wisma Hasil,                                                              Aras 1, Wisma Hasil,'(32,59)bold


 PRINT 'Jalan Tunku Abdul Rahman,                                     No. 1, Jalan Padungan,' (33,59)bold

 PRINT '88600 Kota Kinabalu, Sabah                                  93100 Kuching, Sarawak'(34,59)bold


PRINT  '8.Sila hubungi talian 1-800-88-LHDN (5436) untuk sebarang pertanyaan lanjut.'(35,55)

graphic (37,55,15)  box 1 3 10
 PRINT  ' C.   NOTA  ' (37,55) BOLD
 PRINT '*Tunggakan adalah termasuk ganjaran, pampasan, komisen atau apa-apa bayaran yang dibayar kepada pekerja' (38,55)
 PRINT 'bagi tahun terdahulu dalam tahun semasa.' (39,55)


! PRINT $TEXT41 (39,63) bold



  graphic (40,55,15)  box 1 3 10
 PRINT  ' D.   PERINGATAN  '(40,55) BOLD
 PRINT '1  Jika jumlah instrumen bayaran tidak sama dengan jumlah potongan, bayaran akan ditolak.'(41,55)
 PRINT '2  Sekiranya maklumat tidak lengkap dan tidak betul, majikan boleh dikenakan kompaun.'(42,55)
 end-if

 do Print-Another-Page

end-procedure
!***************************************************************


!***********************************************************************
! Procedure: Print-Employee-Details                                    *
!***********************************************************************
begin-Procedure Print-Employee-Details
  if $employee-found = 'Y' 


  
  if (#count_new = 0) or (#count_new = 1 and #EachSTDTax1 <> 0) or (#count_new = 2 and #EachSTDTax2 <> 0)
    or (#count_new = 3 and #EachSTDTax3 <> 0) or (#count_new = 4 and #EachSTDTax4 <> 0) or (#count_new = 5 and #EachSTDTax5 <> 0)

  let #Counter = #Counter + 1
  Let $PrintDetails = 'N'

  graphic () font 4 8

  if #count_new <> 0
    
    do write-file-details
    Add 1 to #TotEmpCount
    
  end-if

  Add 2 to #CurLine

  print #TotEmpCount      (#CurLine,1)    edit '9999'
  print $FrmEmplTaxNbr    (#CurLine,5)

  !let $EmplNameUC = 'ABCD' !&EmplName                            ! Incd#1
  if $EmplNameUC1 <> '' and $EmplNameUC2 <> ''
          let #CurLine = #CurLine - 1
       PRINT $EmplNameUC1 (#CurLine,18)
         add 1 to #CurLine
       PRINT $EmplNameUC2 (#CurLine,18)

  else
    print $EmplNameUC       (#CurLine,18)                  ! Incd#1
  end-if

  print $OldIcNbr         (#CurLine,42)
  print $NewIcNbr         (#CurLine,52)
  print $Emplid           (#CurLine,64)
  print $ICPassport       (#CurLine,76)
  print $CountryNat       (#CurLine,88)                           ! Incd#1

  end-if


  !let $space = '                  '

  if #count_new = 0
    print #EachSTDTax       (#CurLine,94)   edit 'B99,999,999.99'   ! Incd#1
  end-if

  if #count_new = 2
    let #count_in2 = #count_in2 + 1
    print #EachSTDTax2       (#CurLine,94)   edit 'B99,999,999.99'   ! Incd#1
    if #count_in2 = 1
      !print #Page_total_std2       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
    if #count_in2 <> 1
        print $space     (33,94)      ! Incd#1
        !print #Page_total_std2       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
  end-if

  if #count_new = 1
    let #count_in1 = #count_in1 + 1
    print #EachSTDTax1       (#CurLine,94)   edit 'B99,999,999.99'   ! Incd#1
    if #count_in1 = 1
       !print #Page_total_std1       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
    if #count_in1 <> 1
        print $space     (33,94)      ! Incd#1
        !print #Page_total_std1       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
  end-if  

  if #count_new = 3
    let #count_in3 = #count_in3 + 1
    print #EachSTDTax3       (#CurLine,94)   edit 'B99,999,999.99'   ! Incd#1
    if #count_in3 = 1
       !print #Page_total_std3       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
    if #count_in3 <> 1
        print $space     (33,94)      ! Incd#1
        !print #Page_total_std3       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
  end-if

  if #count_new = 4
    let #count_in4 = #count_in4 + 1
    print #EachSTDTax4       (#CurLine,94)   edit 'B99,999,999.99'   ! Incd#1
    if #count_in4 = 1
        !print #Page_total_std4       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
    if #count_in4 <> 1
        print $space     (33,94)      ! Incd#1
        !print #Page_total_std4       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
  end-if

  if #count_new = 5
    let #count_in5 = #count_in5 + 1
    print #EachSTDTax5       (#CurLine,94)   edit 'B99,999,999.99'   ! Incd#1
    if #count_in5 = 1
       ! print #Page_total_std5       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
    if #count_in5 <> 1
        print $space     (33,94)      ! Incd#1
        !print #Page_total_std5       (33,94)   edit 'B99,999,999.99'   ! Incd#1
    end-if
  end-if
  
  
  print #EachAddlTax      (#CurLine,102)  edit 'B99,999,999.99'   ! Incd#1
 
  !Add 2 to #CurLine

end-if
!**Check**!
     if #count_new = 0
        let #Page_Total=(#Page_total_std + #Page_total_addl)
        LET #Total_Tax= #TotEachSTDAmt+ #TotEachAddlAmt
        !LET #Total_TaxPY = #TotEachSTDAmt
     end-if

     if #count_new = 1
        let #Page_Total=(#Page_total_std1 + #Page_total_addl)
        LET #Total_Tax= #TotEachSTDAmt+ #TotEachAddlAmt
        LET #Total_TaxPY = #TotEachSTDAmtPY1
     end-if


     if #count_new = 2
        let #Page_Total=(#Page_total_std2 + #Page_total_addl)
        LET #Total_Tax= #TotEachSTDAmt+ #TotEachAddlAmt
        LET #Total_TaxPY = #TotEachSTDAmtPY2
     end-if


     if #count_new = 3
        let #Page_Total=(#Page_total_std3 + #Page_total_addl)
        LET #Total_Tax= #TotEachSTDAmt+ #TotEachAddlAmt
        LET #Total_TaxPY = #TotEachSTDAmtPY3
     end-if


     if #count_new = 4
        let #Page_Total=(#Page_total_std4 + #Page_total_addl)
        LET #Total_Tax= #TotEachSTDAmt+ #TotEachAddlAmt
        LET #Total_TaxPY = #TotEachSTDAmtPY4
     end-if


     if #count_new = 5
        let #Page_Total=(#Page_total_std5 + #Page_total_addl)
        LET #Total_Tax= #TotEachSTDAmt+ #TotEachAddlAmt
        LET #Total_TaxPY = #TotEachSTDAmtPY5
     end-if


     ! SHOW 'TOTAL TAX:' #Total_Tax
     ! SHOW 'TOTAL PREV TAX :' #Total_TaxPY


!****************************************************************************************************

  if #Counter = 13 and $FirstPage = 'Y'
    let $FirstPage = 'N'
    !graphic () font 3 8
    !print 'Muka Surat' (1,101)
    !page-number (1,110)
    !print    #Pagenum                      (1,110) edit '99999'


     if #count_new = 0
                 
         !print #Page_total_std  (33,94)      edit '999,999,999.99' bold
     end-if
     
     if #count_new = 1
         print #Page_total_std1  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 2
         print #Page_total_std2  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 3
         print #Page_total_std3  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 4
         print #Page_total_std4  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 5
         print #Page_total_std5  (33,94)      edit '999,999,999.99' bold
     end-if

     !print #Page_total_addl  (33,100)     edit '999,999,999.99' bold
                 !***Bug 22171106
     print #TotEachSTDAmt  (33,92)     edit '999,999,999.99' bold
     print #TotEachAddlAmt (33,102)    edit '999,999,999.99' bold
                
                 
    !*****End

    if ( #TotEmpCount < #EmplCount )
                
          !print  #Page_Total (35,100)    edit '999,999,999.99' bold
                                  Let #eachpagetot = #TotEachSTDAmt + #TotEachAddlAmt
                                  print  #eachpagetot (35,100)    edit '999,999,999.99' bold
    else
         if $found='Y'
         print  #Total_TaxPY  (35,100)    edit '999,999,999.99' bold
         else
         print  #Total_Tax  (35,100)    edit '999,999,999.99' bold
         end-if
    end-if

                !***Bug 22171106
                       
     Let  #TotEachSTDAmt   = 0
    Let #TotEachAddlAmt = 0

                 !***End

    do Print-Another-Page
    !graphic () font 3 8
    !print 'Muka Surat' (1,101)
    !page-number (1,110)
     ! print    #Pagenum                      (1,110) edit '99999'
    !graphic () font 4 8

  else

    if #TotEmpCount = #EmplCount

     if #count_new = 0
                 
                  !*****Bug 22171106****!
                  !print #Page_total_std  (33,94)      edit '999,999,999.99' bold
         !print #Page_total_addl  (33,100)     edit '999,999,999.99' bold
        ! print  #Total_Tax  (35,100)    edit '999,999,999.99' bold
                                
                                print #TotEachSTDAmt   (33,94)      edit '999,999,999.99' bold
                                print #TotEachAddlAmt    (33,100)     edit '999,999,999.99' bold
                                Let #eachpagetot = #TotEachSTDAmt + #TotEachAddlAmt
                                print  #eachpagetot (35,100)    edit '999,999,999.99' bold

     end-if

    end-if
       
    if #TotEmpCount = #EmplCount1    
     
     if #count_new = 1
         print #Page_total_std1  (33,94)      edit '999,999,999.99' bold
         print #Page_total_addl  (33,100)     edit '999,999,999.99' bold
         print  #Page_total_std1  (35,100)    edit '999,999,999.99' bold
     end-if
    end-if

    if #TotEmpCount = #EmplCount2

     if #count_new = 2
         print #Page_total_std2  (33,94)      edit '999,999,999.99' bold
         print #Page_total_addl  (33,100)     edit '999,999,999.99' bold
         print  #Page_total_std2  (35,100)    edit '999,999,999.99' bold
     end-if
    end-if

    if #TotEmpCount = #EmplCount3

     if #count_new = 3
         print #Page_total_std3  (33,94)      edit '999,999,999.99' bold
         print #Page_total_addl  (33,100)     edit '999,999,999.99' bold
         print  #Page_total_std3  (35,100)    edit '999,999,999.99' bold
     end-if
    end-if

    if #TotEmpCount = #EmplCount4
     if #count_new = 4
         print #Page_total_std4  (33,94)      edit '999,999,999.99' bold
         print #Page_total_addl  (33,100)     edit '999,999,999.99' bold
         print  #Page_total_std4  (35,100)    edit '999,999,999.99' bold
     end-if
    end-if


    if #TotEmpCount = #EmplCount5
     if #count_new = 5
         print #Page_total_std5  (33,94)      edit '999,999,999.99' bold
         print #Page_total_addl  (33,100)     edit '999,999,999.99' bold
         print  #Page_total_std5  (35,100)    edit '999,999,999.99' bold
     end-if
    end-if

        !print #Page_total_addl (33,100)    edit '999,999,999.99' bold

        ! if $found='Y'
        ! print  #Total_TaxPY  (35,100)    edit '999,999,999.99' bold
        ! else
        ! print  #Total_Tax  (35,100)    edit '999,999,999.99' bold
        ! end-if
!*****Bug 22171106 ****

end-if

  if ($FirstPage = 'N' and #Counter > 12)
    graphic () font 3 8
    !print 'Muka Surat' (1,101)
    !page-number (1,110)
    !print    #Pagenum                      (1,110) edit '99999'

    if #count_new = 0
        !print #Page_total_std  (33,94)      edit '999,999,999.99' bold
     end-if
     
     if #count_new = 1
         print #Page_total_std1  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 2
         print #Page_total_std2  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 3
         print #Page_total_std3  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 4
         print #Page_total_std4  (33,94)      edit '999,999,999.99' bold
     end-if

     if #count_new = 5
         print #Page_total_std5  (33,94)      edit '999,999,999.99' bold
     end-if


    !print #Page_total_addl    (33,100)     edit '999,999,999.99' bold

     if ( #TotEmpCount < #EmplCount  )
                      
                                  !print  #Page_Total (35,100)    edit '999,999,999.99' bold
                                  Let #eachpagetot = #TotEachSTDAmt + #TotEachAddlAmt
                                  print  #eachpagetot (35,100)    edit '999,999,999.99' bold
    else
         if $found='Y'
         print  #Total_TaxPY  (35,100)    edit '999,999,999.99' bold
         else
         print  #Total_Tax  (35,100)    edit '999,999,999.99' bold
         end-if
    end-if

!***Bug 22171106***!
   print #TotEachSTDAmt      (33,92)     edit '999,999,999.99' bold
    print #TotEachAddlAmt     (33,100)    edit '999,999,999.99' bold
                Let #TotEachSTDAmt = 0
                Let #TotEachAddlAmt =0
    Let #Page_Total = 0
                Let #Page_total_addl = 0
!***End*****!                
                 
                 
                 
    do Print-Another-Page
    graphic () font 3 8
    !print 'Muka Surat' (1,101)
    !page-number (1,110)
    !print    #Pagenum                      (1,110) edit '99999'
                
    !graphic () font 4 8

  end-if

let #EachSTDTax2= 0

end-procedure

!*********************************************************************************************

!***********************************************************************
! Procedure: Print-Another-Page                                        *
!***********************************************************************
begin-Procedure Print-Another-Page

  new-page
  
  Add 1 to #PageNum
  let #CurLine = 5
  let #Counter = 0

 !  let #Page_total_std=0
 !  let #Page_total_std1=0
 !  let #Page_total_std2=0
 !  let #Page_total_std3=0
 !  let #Page_total_std4=0
 !  let #Page_total_std5=0

   let #Page_total_addl=0


  do Print-Detail-Heading
  graphic () font 4 7



  graphic (2,4,29)     vert-line 12
  graphic (2,17,29)    vert-line 12
  graphic (2,41,29)    vert-line 12
  graphic (2,50,29)    vert-line 12
  graphic (2,62,29)    vert-line 12
  graphic (2,75,29)    vert-line 12
  graphic (3,85,28)    vert-line 12
  graphic (2,94,31)    vert-line 12
  graphic (3,103,30)   vert-line 12

  !graphic (5,1,110)   horz-line 12
  graphic (7,1,110)    horz-line 3
  graphic (9,1,110)    horz-line 3
  graphic (11,1,110)   horz-line 3
  graphic (13,1,110)   horz-line 3
  graphic (15,1,110)   horz-line 3
  graphic (17,1,110)   horz-line 3
  graphic (19,1,110)   horz-line 3
  graphic (21,1,110)   horz-line 3
  graphic (23,1,110)   horz-line 3
  graphic (25,1,110)   horz-line 3
  graphic (27,1,110)   horz-line 3
  graphic (29,1,110)   horz-line 3
  graphic (31,1,110)   horz-line 12

  graphic (32,75,36) BOX 2 12
     graphic (34,75,36) BOX 2 12
    graphic () font 4 7
                !***Bug 22171106***!
    print 'Muka Surat' (1,90)bold
   !graphic (1,105,3) box 1 
    !graphic (1,108,3) box 1 

    !page-number (1,110)
                !***Bug 22171106***!
    !print    #Pagenum                 (1,110) edit '99999'
                Let $pagen = #Pagenum
                Let $pagen = RTRIM((RTRIM($pagen,'0') ), '.')
                Let #max = 107
                Let #counter = length($pagen)
                Let #box = 108
                Let #len = length($pagen)
                
                while(#counter > 0)
                Let $str = substr($pagen, #counter, 1)
                graphic (1,#box,3) box 1 
                print  $str                 (1,#max) edit '99999'
                Let #max = #max - 3
                Let #box = #box - 3
                Let #counter = #counter - 1
                end-while
                
                
                
    graphic () font 4 11
    print 'JUMLAH'                            (33,80)
    print $GP_CP39_CHECKING1_LBL              (35,80)
    graphic () font 4 8
    !print #TotEachSTDAmt      (33,92)     edit '999,999,999.99' bold
    !print #TotEachAddlAmt     (33,102)    edit '999,999,999.99' bold
    !if #EmplCount = #TotEmpCount
     ! print #TotEachSTDAmt      (34,92)     edit '999,999,999.99' bold
     ! print #TotEachAddlAmt     (34,102)    edit '999,999,999.99' bold
    !end-if
                



end-procedure

!***********************************************************************
! Procedure: Print-Detail-Heading - Prints Column Heading in All Pages
!***********************************************************************
Begin-Procedure Print-Detail-Heading

graphic () font 4 7
  
  let #nCount = length($CompTaxRef)

  let #nLength = 7
  let #nFill   = 3
  if #nCount > 9
    let #nLength = 8
    let #nFill   = 3
  end-if

  let #nStart = 1
  let #PPos = 1
  while #nStart <= #nCount
     let $PChar = Substr($CompTaxRef,#nStart,1)
     !print $PChar                                      (2,#PPos) bold
     if #nStart = #nLength
        Add #nFill to #PPos                                  ! Incd#1
     else
        Add 2 to #PPos
     end-if
     Add 1 to #nStart
  end-while

 
let $E_File_Nbr   = rtrim(ltrim($CompTaxRef,' '),' ')
   let $E_File_Nbr1 = substr($E_File_Nbr,1,1)
   let $E_File_Nbr2 = substr($E_File_Nbr,2,1)
   let $E_File_Nbr3 = substr($E_File_Nbr,3,1)
   let $E_File_Nbr4 = substr($E_File_Nbr,4,1)
   let $E_File_Nbr5 = substr($E_File_Nbr,5,1)
   let $E_File_Nbr6 = substr($E_File_Nbr,6,1)
   let $E_File_Nbr7 = substr($E_File_Nbr,7,1)
   let $E_File_Nbr8 = substr($E_File_Nbr,8,1)
   let $E_File_Nbr9 = substr($E_File_Nbr,9,1)
   let $E_File_Nbr10 = substr($E_File_Nbr,10,1)
   
   if ltrim(rtrim($E_File_Nbr10, ' '), ' ') = ''
        let $E_File_Nbr10 = $E_File_Nbr9
        let $E_File_Nbr9  = $E_File_Nbr8
        let $E_File_Nbr8  = ''
    end-if
  
   graphic                              (1,10,3) box 1
print $E_File_Nbr1                   (1,11) 
   graphic                              (1,13,3) box 1
print $E_File_Nbr2                   (1,14)
   graphic                              (1,16,3) box 1
print $E_File_Nbr3                   (1,17)
   graphic                              (1,19,3) box 1
print $E_File_Nbr4                   (1,20)
   graphic                              (1,22,3) box 1
print $E_File_Nbr5                   (1,23)
   graphic                              (1,25,3) box 1
print $E_File_Nbr6                   (1,26)
   graphic                              (1,28,3) box 1
print $E_File_Nbr7                   (1,29)
   graphic                              (1,31,3) box 1
print $E_File_Nbr8                   (1,32)
print '-'                                              (1,35)
  graphic (1,36,3)  box 1 
 print $E_File_Nbr9                   (1,37)
 graphic (1,39,3)  box 1 
 print $E_File_Nbr10                   (1,40)


  

  graphic (3,1,110)  box 29 12
  graphic (3,1,110)  box 2 3 20
  graphic (3,75,36)  horz-line 3

  print 'No.Majikan E'  (1,1)bold
  print $GP_CP39_BIL_LBL                               (3,2)

  print $GP_CP39_E_FILE_NBR_LBL                        (3,4)
  print $GP_CP39_NAMA_LBL                              (3,23)
  print $GP_CP39_NO_KP_LBL                             (3,41)
  print $GP_CP39_NO_BARU_LBL                           (3,51)
    print 'NO. PEKERJA'                               (3,64)
  print $GP_CP39_BAGI_LBL                              (3,79)
  print $GP_CP39_JUMLAS_LBL                            (3,96)
  print $GP_CP39_CUKAI_LBL                             (3,6)
  print $GP_CP39_SEPERTI_LBL                           (4,17)
  print $GP_CP39_PSSPRT_NO_LBL                         (4,76)
  print $GP_CP39_KOD_LBL                               (4,86)
  print $GP_CP39_PCB_LBL                               (4,96)
   PRINT '(RM)'                                           (4,99)
  print $GP_CP39_CP_LBL                                (4,105)
    PRINT '(RM)'                                           (4,108)
end-procedure

!********************************************************************
!* Procedure for translation of language                            *
!********************************************************************

!*******************************
!malay
!***********************

Begin-Procedure MalayLanguageCode

        do Get_Field_Information ('GPMYTX04', 'GP_CP39_1967', $GP_CP39_1967_LBL,#DW)! from settrans.sqc
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BONUS', $GP_CP39_BONUS_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BONUS_YR', $GP_CP39_BONUS_YR_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_1994', $GP_CP39_1994_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_ALAMAT', $GP_CP39_ALAMAT_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_AMAUN', $GP_CP39_AMAUN_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BAGI', $GP_CP39_BAGI_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BIL', $GP_CP39_BIL_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BILANGAN', $GP_CP39_BILANGAN_LBL,#DW)
                 do Get_Field_Information ('GPMYTX04', 'GP_CP39_PEKERJA', $GP_CP39_PEKERJA_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BUTIR',$GP_CP39_BUTIR_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BUTIR1',  $GP_CP39_BUTIR1_LBL,#DW)


    do Get_Field_Information ('GPMYTX04', 'GP_CP39_PEGA',  $GP_CP39_PEGA_LBL,#DW)

        !do Get_Field_Information ('GPMYTX04', 'GP_CP39_PEGAWAI',  $GP_CP39_PEGAWAI_LBL,#DW)


        do Get_Field_Information ('GPMYTX04', 'GP_CP39_BUTIRS', $GP_CP39_BUTIRS_LBL ,#DW )
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CAWANGAN', $GP_CP39_CAWANGAN_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP_39_PENANDA', $GP_CP_39_PENANDA_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_YEAR',  $GP_CP39_YEAR_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TO', $GP_CP39_TO_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TITLE3',  $GP_CP39_TITLE3_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TITLE4',  $GP_CP39_TITLE4_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TITLE2',$GP_CP39_TITLE2_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TITLE4',  $GP_CP39_TITLE4_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TITLE5',$GP_CP39_TITLE5_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TITLE1', $GP_CP39_TITLE1_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TITLE', $GP_CP39_TITLE_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TARIKH', $GP_CP39_TARIKH_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TANDANG', $GP_CP39_TANDANG_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_SEPERTI D', $GP_CP39_SEPERTI_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_RM', $GP_CP39_RM_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_RES_NO',$GP_CP39_RES_NO_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_PSSPRT_NO',$GP_CP39_PSSPRT_NO_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_PENDAFTA',$GP_CP39_PENDAFTA_LBL,#DW)



do Get_Field_Information ('GPMYTX04', 'GP_CP39_CAWAN',$GP_CP39_CAWAN_LBL,#DW)

        !do Get_Field_Information ('GPMYTX04', 'GP_CP39_CAWANGAN1',$GP_CP39_CAWANGAN1_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_PEJABATPOS',$GP_CP39_PEJABATPOS_LBL,#DW)
        
do Get_Field_Information ('GPMYTX04', 'GP_CP39_TWO',$GP_CP39_TWO_LBL ,#DW)
do Get_Field_Information ('GPMYTX04', 'GP_CP39A_TWO',$GP_CP39A_TWO_LBL ,#DW)


    do Get_Field_Information ('GPMYTX04', 'GP_CP39_PEJABAT',$GP_CP39_PEJABAT_LBL ,#DW)

        do Get_Field_Information ('GPMYTX04', 'GP_CP39_PCB',$GP_CP39_PCB_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NO_KP',$GP_CP39_NO_KP_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NO_K',$GP_CP39_NO_K_LBL,#DW)
        !do Get_Field_Information ('GPMYTX04', 'GP_CP39_NO_FAIL',$GP_CP39_NO_FAIL_LBL,#DW)

do Get_Field_Information ('GPMYTX04', 'GP_CP39_NO_RUJUKAN',$GP_CP39_NO_RUJUKAN_LBL,#DW)

        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NO_BARU ',$GP_CP39_NO_BARU_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NOMBOR',$GP_CP39_NOMBOR_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NAME_CMP',$GP_CP39_NAME_CMP_LBL,#DW)
         do Get_Field_Information ('GPMYTX04', 'GP_CP39_NAME2_CMP',$GP_CP39_NAME2_CMP_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NAMA',$GP_CP39_NAMA_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_KOD',$GP_CP39_KOD_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_KIRIMAN',$GP_CP39_KIRIMAN_LBL ,#DW)

do Get_Field_Information ('GPMYTX04', 'GP_CP39_WAN',$GP_CP39_WAN_LBL ,#DW)
       
     do Get_Field_Information ('GPMYTX04', 'GP_CP39_JUMLAS',$GP_CP39_JUMLAS_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CEK ',$GP_CP39_CEK_LBL ,#DW)
         do Get_Field_Information ('GPMYTX04', 'GP_CP39_BANK ',$GP_CP39_BANK_LBL ,#DW)
          do Get_Field_Information ('GPMYTX04', 'GP_CP39_DERAF ',$GP_CP39_DERAF_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CHECKING1',$GP_CP39_CHECKING1_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CHECKING2',$GP_CP39_CHECKING2_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CHECKING',$GP_CP39_CHECKING_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_JUMLAH',$GP_CP39_JUMLAH_LBL ,#DW)
         do Get_Field_Information ('GPMYTX04', 'GP_CP39_POTONGAN',$GP_CP39_POTONGAN_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_POTOGAN',$GP_CP39_POTOGAN_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR1',$GP_CP39_FR_ADDR1_LBL   ,#DW)
      do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR11',$GP_CP39_FR_ADDR11_LBL   ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR2',$GP_CP39_FR_ADDR2_LBL,#DW)
      do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR12',$GP_CP39_FR_ADDR12_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR3',$GP_CP39_FR_ADDR3_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR4',$GP_CP39_FR_ADDR4_LBL ,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR5',$GP_CP39_FR_ADDR5_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_FR_ADDR6',$GP_CP39_FR_ADDR6_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_E_FILE_NBR',$GP_CP39_E_FILE_NBR_LBL,#DW)
    do Get_Field_Information ('GPMYTX04', 'GP_CP39_R',$GP_CP39_R_LBL,#DW)
do Get_Field_Information ('GPMYTX04', 'GP_CP39_M',$GP_CP39_M_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_E',$GP_CP39_E_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CUKAI',$GP_CP39_CUKAI_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CP',$GP_CP39_CP_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TEL',$GP_CP39_TEL_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NOKP',$GP_CP39_NOKP_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_FAX ',$GP_CP39_FAX_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_JAWATAN',$GP_CP39_JAWATAN_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_NAMAS',$GP_CP39_NAMAS_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_TANDATANG',$GP_CP39_TANDATANG_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_YANG',$GP_CP39_YANG_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_CP39_CP 38(RM)',$GP_CP39_CP_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_DECLARATION1',$GP_DECLARATION1_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_DECLARATION2',$GP_DECLARATION2_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'GP_DECLARATION3',$GP_DECLARATION3_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'JAN',$JAN_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'FEB',$FEB_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'MAR',$MAR_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'APR',$APR_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'MAY',$MAY_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'JUN',$JUN_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'JUL',$JUL_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'AUG',$AUG_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'SEPT',$SEPT_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'OCT',$OCT_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'NOV',$NOV_LBL,#DW)
        do Get_Field_Information ('GPMYTX04', 'DEC',$DEC_LBL,#DW)




 LET $TEXT0='A. BORANG CP 39'
 LET $TEXT1=' 1. Borang ini mesti diisi dengan lengkap dan betul.'
 LET $TEXT3=' 2. Majikan digalakkan menghantar maklumat potongan melalui e-PCB/e-Data PCB/disket/cakera padat/pemacu flash'
 LET $TEXT4='mengikut format yang ditentukan oleh LHDN bagi menggantikan Borang CP39.'
 LET $TEXT5=' 3. No. Cukai Pendapatan.'
 LET $TEXT6='  3.1 Isikan nombor cukai pendapatan dalam ruangan yang telah disediakan.'

 LET $TEXT7='      Contoh:SG 2506203-00(0) boleh diisi sebagai SG 02506203000'
 LET $TEXT8='  3.2 Bagi pekerja yang layak dikenakan PCB tetapi tiada nombor cukai pendapatan,'
 LET $TEXT9='
pendaftaran boleh dibuat melalui :'

 LET $TEXT10='     i.
majikan atau pekerja boleh mendaftar secara atas talian melalui e-Daftar di www.hasil.gov.my, atau'

 LET $TEXT11='     ii.
Borang CP22 atau borang in lieu of CP39 dikemukakan ke cawangan LHDNM yang berdekatan.'

 !LET $TEXT11=' 3.3 Pekerja wanita yang berkahwin hendaklah menggunakan nombor fail cukai pendapatan suami dan kod isteri'
 !LET $TEXT12='     Contoh: No. Fail SG 2506203-03(1)'
 LET $TEXT13=' 4. Nama pekerja: '
 LET $TEXT14='Isikan nama penuh pekerja seperti di kad pengenalan/pasport.'
 LET $TEXT15='(Jangan senaraikan pekerja yang tidak layak dikenakan potongan bagi bulan berkenaan)'
 LET $TEXT16=' 5. Nombor Pengenalan: Isikan kedua-dua nombor kad pengenalan  baru dan lama (sekiranya ada).'

 LET $TEXT17='      Contoh: 720403065235 atau A2172122'
 LET $TEXT18=' 6. Jumlah Potongan Cukai:   PCB - Isikan amaun cukai mengikut Potongan Cukai Bulanan'
 LET $TEXT19='                             CP38 - Isikan amaun potongan cukai mengikut arahan Borang CP38 (jika ada)'


 LET $TEXT20='B.  PEMBAYARAN'
 LET $TEXT21='1. Bayaran dan Borang CP39 yang telah lengkap diisi mestilah sampai ke Cawangan Pungutan '
 LET $TEXT22='   LHDN selewat- lewatnya pada hari kesepuluh bulan berikutnya.'
 LET $TEXT23='   Contoh: PCB/CP38 bagi bulan April 2012, tarikh akhirnya ialah pada 10 Mei 2012.'

  LET $TEXT24= '2.Sediakan borang CP39 beserta cek/bank draf/kiriman wang/wang pos (instrumen bayaran) yang berasingan'



 LET $TEXT25='untuk bulan atau tahun berlainan.'
  LET $TEXT26='3. Pastikan jumlah potongan PCB/CP38 adalah betul dan sama dengan nilai instrumen bayaran.'
  LET $TEXT27= '4. Instrumen bayaran hendaklah dibayar kepada Ketua Pengarah Hasil Dalam Negeri. Catatkan no majikan E,'


  LET $TEXT28=' Nama Syarikat/Perniagaan dan alamat majikan di belakang instrumen bayaran.'

  


  LET $TEXT29='5.Bayaran untuk Cukai Syarikat, Skim Ansurans (CP500), Penyelesaian Cukai (Pemberhentian Kerja) dan Cukai'


  LET $TEXT30= 'Keuntungan Harta Tanah tidak boleh dibayar bersama dengan bayaran yang menggunakan borang ini.'
  LET $TEXT31='6. Untuk bayaran bagi Negeri Sabah, sila alamatkan ke:7.Untuk bayaran bagi Negeri Sarawak, sila alamatkan ke : '


  LET $TEXT32= 'Cawangan Pungutan Kota Kinabalu                        Cawangan Pungutan Kuching,'            
  LET $TEXT33= 'Wisma Hasil                                                                Aras 1, Wisma Hasil,'                        
  LET $TEXT34= 'Jalan Tunku Abdul Rahman                                      No. 1, Jalan Padungan,'                       

  LET $TEXT35 = '88600 Kota Kinabalu,Sabah                                  93100 Kuching, Sarawak'                


  



  
  LET $TEXT36='8.
Sila hubungi talian 1-800-88-LHDN (5436) untuk sebarang pertanyaan lanjut.'

  LET $TEXT38= ' C.   PERINGATAN  '
  LET $TEXT39= '1  Jika jumlah instrumen bayaran tidak sama dengan jumlah potongan, bayaran akan ditolak.'
  LET $TEXT40= '2  Sekiranya maklumat tidak lengkap dan tidak betul, majikan akan dikenakan kompaun.'



End-Procedure


begin-Procedure Report-Parm-Clean
begin-sql
DELETE FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP2
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP3
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_RPT_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_PR_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_EMPL_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

end-Procedure


#include 'prcslng.sqc'
!#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'ldnumlit.sqc'  !Load-NumberLits-Array procedure
#include 'readxlat.sqc'  !enables xlat table read
#Include 'rotname1.sqc'  !Rotate-Name Procedure
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#Include 'datemath.sqc'  !Routines for date manipulat
#Include 'adformat.sqc'   !formating address added on 27th feb 2003
#include 'rellang.sqc' !

