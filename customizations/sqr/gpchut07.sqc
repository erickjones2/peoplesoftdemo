!***********************************************************************
!  GPCHUT07:  Log output Selection                                     *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.       !
! All Rights Reserved.                                          !
!          $Date:  2013/01/18:03:28:34                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! Create-Log-Array
! This procedure creates the array 'Log_Vars' which holds all the
! entries to be displayed in the log file. The maximum number of
! entries that can be held is currently 200.
!***********************************************************************
Begin-Procedure Create-Log-Array

  CREATE-ARRAY  NAME=Log_Vars SIZE=10000
        FIELD=log_item_name:CHAR:30
        FIELD=log_item_value:CHAR:35

  let #Log_Array_Counter = 0

End-Procedure

!***********************************************************************
! Append-Log
! This procedure populates the Log_Vars array with the information to
! be displayed in the log file.
!
!  Inputs : $Log_Item_Name  - This is the name/label of the item
!                             of information to appear in the log
!                             e.g. 'Operator ID'
!           $Log_Item_Value - The actual value, e.g. PSHR
!
!***********************************************************************
Begin-Procedure Append-Log($Log_Item_Name, $Log_Item_Value)

  if #_log_array_counter > 9999

        if #_log_array_counter = 10000

          Display 'Maximum size of Log Item Array has been exceeded.'
          Display '(Maximum number of array elements = 10000)'

        end-if

  else

        if length($Log_Item_Name) > 30

          let $Log_Item_Name = SUBSTR($Log_Item_Name, 1, 30)

        end-if

        if length($Log_Item_Value) > 35

          Do Trunc-log($Log_Item_Name,$Log_Item_Value)

        else

          let $Log_Item_Value = SUBSTR($Log_Item_Value, 1, 35)
          PUT $Log_Item_Name $Log_Item_Value INTO Log_Vars(#_Log_Array_Counter)

        end-if

        ADD 1 TO #_Log_Array_Counter

  end-if

End-Procedure

!************************************************************************
! Write-Log
! This procedure displays the contents of the Log_Vars array in the
! log file.
!************************************************************************
Begin-Procedure Write-Log

  Display ''
  Display '*****************************************************************************'
  Display $LG_REPLOG
  Display '*****************************************************************************'
  Display $LG_LOGITEM  noline
  Display '                        '  noline
  Display $LG_VALUE
  Display '-----------------------------------------------------------------------------'

  let #Ctr = 0

  WHILE #Ctr < #Log_Array_Counter

        GET $Log_Item_Name $Log_Item_Value FROM Log_Vars(#Ctr)

        let $Log_Display_Line = RPAD($Log_Item_Name, 30, ' ')||': '||$Log_Item_Value

        Display $Log_Display_Line

    ADD 1 TO #Ctr

  END-WHILE

  Display ''
  Display '*****************************************************************************'

  LET #Log_Array_Counter = 0

End-Procedure
!**********************************************************************
Begin-Procedure Employee-Log

   if MOD(#LG_Emp_count,100) = 0
      let $LG_Emp_count = to_char(#LG_Emp_count)
      Do Get-Current-DateTime
      Do Append-Log (' ',' ')
      Do Append-Log ($LG_PRGUPD  , $ReportTime)
      Do Append-Log ($LG_EMPPROC , $LG_Emp_count)
      Do Append-Log (' ',' ')
      Do Append-Log('----------------------------- ' , '------------------------------' )
   end-if


End-Procedure
!**********************************************************************

Begin-Procedure Trunc-log($Trun_Item_Name,$Trun_Item_Value)

  let #trun_length = length($Trun_Item_Value)
  let #trun_divide = #trun_length/35
  let #trun_round  = round(#trun_divide,0)
  let #trun_count  = #trun_round + 1

  let #trun_i      = 0
  let #trun_start  = 1
  let #trun_end    = 35

  while #trun_i <= #trun_count

     let $trun_cut = substr($Trun_Item_Value,#trun_start,#trun_end)

     if $trun_cut <> ''

        do Append-log($Trun_Item_Name,$trun_cut)

     end-if

     let #trun_i     = #trun_i + 1
     let #trun_start = #trun_start + 35

     let $Trun_Item_Name = ' '
     let $trun_cut       = ' '


  end-while


  let #trun_length = 0
  let #trun_divide = 0
  let #trun_round  = 0
  let #trun_count  = 0

  let #trun_i      = 0
  let #trun_start  = 0

End-Procedure
!****************************************************************************
begin-procedure Get-log
#debug show '       -> Get-log '

Begin-Select
L.PRCSINSTANCE
L.PRCSTYPE
L.PRCSNAME
L.RUNLOCATION
L.OPSYS
L.DBTYPE
L.DBNAME
L.OPRID
L.BEGINDTTM
L.ENDDTTM
L.RUNSTATUS
L.RUNCNTLID
L.OUTDESTTYPE
L.OUTDESTFORMAT
L.TIMEZONE
FROM PSPRCSRQST  L
WHERE PRCSINSTANCE = #prcs_process_instance
End-Select

  let $Process_Inst  = to_char(&L.PRCSINSTANCE)
  let $BeginDate     = datetostr(&L.BEGINDTTM,{PTRPTDATE})
  let $BeginTime     = datetostr(&L.BEGINDTTM,{PTRPTTIME})
  let $BeginDateTime = $BeginDate || '     ' || $BeginTime

  let $EndDate       = datetostr(&L.ENDDTTM,{PTRPTDATE})
  let $EndTime       = datetostr(&L.ENDDTTM,{PTRPTTIME})
  let $EndDateTime   = $EndDate || '     ' || $EndTime

  !do Subtract_Time_Time (&L.ENDDTTM,&L.BEGINDTTM,$TotalDuration)
  !do Subtract_Time_Time ($EndTime,$BeginTime,$TotalDuration)

  move 'RUNLOCATION'  to $FieldName
  move &L.RUNLOCATION to $FieldValue
  do Read-Translate-Table
  let $RUNLOCATION = rtrim(ltrim($XlatlongName,' '),' ')


  move 'OPSYS'  to $FieldName
  move &L.OPSYS to $FieldValue
  do Read-Translate-Table
  let $OPSYS = rtrim(ltrim($XlatlongName,' '),' ')

  move 'DBTYPE'  to $FieldName
  move &L.DBTYPE to $FieldValue
  do Read-Translate-Table
  let $DBTYPE = rtrim(ltrim($XlatlongName,' '),' ')


  move 'RUNSTATUS'  to $FieldName
  move &L.RUNSTATUS to $FieldValue
  do Read-Translate-Table
  let $RUNSTATUS = rtrim(ltrim($XlatlongName,' '),' ')

  move 'OUTDESTTYPE'  to $FieldName
  move &L.OUTDESTTYPE to $FieldValue
  do Read-Translate-Table
  let $OUTDESTTYPE = rtrim(ltrim($XlatlongName,' '),' ')

  move 'OUTDESTFORMAT'  to $FieldName
  move &L.OUTDESTFORMAT to $FieldValue
  do Read-Translate-Table
  let $OUTDESTFORMAT = rtrim(ltrim($XlatlongName,' '),' ')


  Do Append-Log($LG_PRCTYPE,    &L.PRCSTYPE)
  Do Append-Log($LG_PRCNM,      &L.PRCSNAME)
  Do Append-Log($LG_REPNM,      $TITLE1)
  Do Append-Log($LG_REPLNG,     $language_cd)
  Do Append-Log($LG_PRCINSTNUM, $Process_Inst)
  Do Append-Log(' ' , ' ' )

  Do Append-Log($LG_RUNLOC,     $RUNLOCATION)
  Do Append-Log($LG_OPERSYS,    $OPSYS)
  Do Append-Log($LG_DBTYPE,     $DBTYPE)
  Do Append-Log($LG_DBNAME,     &L.DBNAME)
  Do Append-Log(' ' , ' ' )

  Do Append-Log($LG_OPERID ,     &L.OPRID)
  Do Append-Log($LG_RUNCTLID ,   &L.RUNCNTLID)
  Do Append-Log(' ' , ' ' )

  Do Append-Log($LG_BDTTIME ,    $BeginDateTime)
  Do Append-Log($LG_EDTTIME ,    $EndDateTime)
  !Do Append-Log($LG_TOTDURA ,    $TotalDuration)
  Do Append-Log(' ' , ' ' )

  Do Append-Log($LG_OUTDESTTYPE, $OUTDESTTYPE)
  Do Append-Log($LG_OUTDESTFOR,  $OUTDESTFORMAT)
 ! Do Append-Log($LG_RUNSTAT,     $RUNSTATUS)
  Do Append-Log(' ' , ' ' )
  Do Append-Log('----------------------------- ' , '------------------------------' )

  do Get-Report-Log

#debug show '       <- Get-log '
end-procedure Get-log

!****************************************************************************
!-----------------------------
Begin-Procedure Get-Report-Log
#debug show '       -> Get-Report-Log '

   Do Append-Log($LG_RUNCTLPA, ' ')
   Do Append-Log(' ',' ')

!-----------------------------
 if $ReportID = 'GPCHSI06'

    Do Append-Log($HD_FROMDT , $Fromdt)
    Do Append-Log($HD_TODATE , $Todate)
    Do Append-Log($COMPANY   , $Ctl_Company)

 end-if

!-----------------------------
 if $ReportID = 'GPCHSI03'

    Do Append-Log($LG_CURRDT   , $Ctl_Curr_Pay_End_Dt)
    Do Append-Log($H_PAYENT    , $Ctl_PayEntity)
    Do Append-Log($LG_SRTORD   , $Sort_Order)
    Do Append-Log($Empl        , $Emplid-String)

 end-if

!-----------------------------

if $ReportID = 'GPCHAL07'

    move 'GPCH_RC_PRT_SIGN'  to $FieldName
    move &GPCH_RUN_CNTL.GPCH_RC_PRT_SIGN to $FieldValue
    do Read-Translate-Table
    let $ElementType = rtrim(ltrim($XlatlongName,' '),' ')

    Do Append-Log($LG_PAYENT   , $Ctl_PayEnt)
    Do Append-Log($HD_FROMDT   , $Ctl_From_Dt)
    Do Append-Log($HD_TODATE   , $Ctl_To_Dt)
    Do Append-Log($PRINTCLASS  , $Rep_Name)
    Do Append-Log($TXT_ACC_MBR , $Pin_Category)
    Do Append-Log($LG_PRINT_OPT, $ElementType)

 end-if

!-----------------------------

 if $ReportID = 'GPCHAL08'

    Do Append-Log($PRINTCLASS  , $Ctl_Print)
    Do Append-Log($LG_CURRDT   , $Ctl_Curr_Pay_End_Dt)
    Do Append-Log($LG_PAYENT   , $PR_Pay_Entity)

 end-if

!-----------------------------

 if $ReportID = 'GPCHAL10'

    move 'GPCH_IC_RUN_RETRO'  to $FieldName
    move &GPCH_RUN_CNTL.GPCH_IC_RUN_RETRO to $FieldValue
    do Read-Translate-Table
    let $PaySlipType = rtrim(ltrim($XlatlongName,' '),' ')

    Do Append-Log($LG_CURRDT    , $Ctl_Curr_Pay_End_Dt)
    Do Append-Log($PRINTCLASS   , $Ctl_Print)
    Do Append-Log($CURRENCY     , $Rpt_Cur)
    Do Append-Log($LG_PSTYPE    , $PaySlipType)
    Do Append-Log($LG_PAYENT    , $PayEntity_Crit)
    Do Append-Log($HD_PAYGROUP  , $PayGroup_Crit)
    Do Append-Log($DEPT         , $Dept_Crit)
    Do Append-Log($LOC          , $Location_Crit)
    Do Append-Log($LG_SRTORD    , $Sort_Order)
    Do Append-Log($HD_EMPLID    , $Emplid_Criteria )

 end-if
!-----------------------------

if $ReportID = 'GPCHTX06'


    move 'GPCH_IC_RUN_RETRO'  to $FieldName
    move &GPCH_RUN_CNTL.GPCH_IC_RUN_RETRO to $FieldValue
    do Read-Translate-Table
    let $ElementType2 = rtrim(ltrim($XlatlongName,' '),' ')


    Do Append-Log($LG_FORYR    , $Ctl_Year)
    Do Append-Log($PRINTCLASS  , $Ctl_Print)
    Do Append-Log(' '  , $ElementType2)
    Do Append-Log($LG_PAYENT     , $PR_Pay_Entity)
    Do Append-Log($HD_PAYGROUP   , $PayGroup_Crit_PS)
    Do Append-Log($HD_DEPT       , $Dept_Crit_PS)
    Do Append-Log($HD_LOCATION   , $Location_Crit_PS)
    Do Append-Log($HD_EMPLID     , $Emplid_Criteria_PS)

 end-if

!-----------------------------
 if $ReportID = 'GPCHTX04'

    Do Append-Log($LG_FORYR       , $Ctl_Year)
    Do Append-Log($LG_PAYENT      , $PayEntity_Crit)
    Do Append-Log($HD_PAYGROUP    , $Paygroup_Crit)
    Do Append-Log($HD_DEPT        , $Dept_Crit)
    Do Append-Log($HD_LOCATION    , $Location_Crit)
    Do Append-Log($HD_EMPLID      , $Emplid_Criteria )
    Do Append-log($LG_CALIDCR     , $Cal_Id_Criteria_PS)
    Do Append-log($LG_PINNM       , $PIN_NM1 )
    Do Append-log(' '             , $PIN_NM2 )
    Do Append-log(' '             , $PIN_NM3 )
    Do Append-log(' '             , $PIN_NM4 )
    Do Append-log(' '             , $PIN_NM5 )
    Do Append-log(' '             , $PIN_NM6 )
    Do Append-log(' '             , $PIN_NM7 )
    Do Append-log(' '             , $PIN_NM8 )
    Do Append-log(' '             , $PIN_NM9 )
    Do Append-log(' '             , $PIN_NM10 )
    Do Append-log(' '             , $PIN_NM11 )

 end-if

!-----------------------------

 if $ReportID = 'GPCHSI07'

    Do Append-Log($LG_FORYR  , $Ct_Year)
    Do Append-Log($LG_PAYENT , $comp)

 end-if

!-----------------------------

 if $ReportID = 'GPCHSI08'

    let $Serial_NBR = to_char(#Serial_NBR)
    let  $AHV = to_char(#Cntl_AHV_Amount)
    let  $ALV1 = to_char(#Cntl_ALV1_Amount)
    let  $ALV2 = to_char(#Cntl_ALV2_Amount)
    move 'GPCH_RC_LST_OPTION'  to $FieldName
    move $LST_Interface to $FieldValue
    do Read-Translate-Table
    let $LIST_Interface = rtrim(ltrim($XlatlongName,' '),' ')

    Do Append-Log($LG_FORYR  , $Ct_Year)
    Do Append-Log($LG_PAYENT , $comp)

    Do Append-Log($LG_SERIAL_NUM     , $Serial_NBR)
    Do Append-Log($LG_PRINT_OPT     , $LIST_Interface)
    Do Append-Log($LG_AHV_CONTR     , $AHV)
    Do Append-Log($LG_ALV1_CONTR     , $ALV1)
    Do Append-Log($LG_ALV2_CONTR     , $ALV2)

    Do Append-Log($LG_CANTON     , $Ctl_Canton)
    Do Append-Log($LG_ADJ_DATE     , $Adjusting_DT)


 end-if

!-----------------------------

 if $ReportID = 'GPCHSI09'

    Do Append-Log($LG_FORYR , $Ct_Year)
    Do Append-Log($LG_PAYENT, $comp)

 end-if


!-----------------------------

 if $ReportID = 'GPCHAL04'

    move 'GPCH_IC_RUN_RETRO'  to $FieldName
    move &GPCH_RUN_CNTL.GPCH_IC_RUN_RETRO to $FieldValue
    do Read-Translate-Table
    let $ElementType2 = rtrim(ltrim($XlatlongName,' '),' ')


    Do Append-Log('Current Pay End Dt' , $Ctl_Curr_Pay_End_Dt)
    Do Append-Log($LG_PAYENT           , $Ctl_PayEntity)
    Do Append-Log($HD_DEPT             , $Ctl_Department_Crit)
    Do Append-Log($CANTON_STR          , $Ctl_Canton_Crit)
    Do Append-log(' '                  , $ElementType2)
    Do Append-Log($HD_EMPLID           , $Emplid_Criteria1 )



 end-if
!-----------------------------

if $ReportID = 'GPCHAL03'

    move 'GPCH_RC_PRT_TYPE'  to $FieldName
    move &GPCH_RUN_CNTL.GPCH_RC_PRT_TYPE to $FieldValue
    do Read-Translate-Table
    let $ElementType = rtrim(ltrim($XlatlongName,' '),' ')

        if $Ctl_Year_Opt = 'Y'
           Do Append-Log($LG_FORYR            , $Ctl_Year)
        else
           Do Append-Log($HD_FROMDT            , $Ctl_FromDt)
           Do Append-Log($HD_TODATE            , $Ctl_ToDt)
        end-if

    Do Append-Log($LG_PAYENT           , $PayEntity_Crit)
    Do Append-Log($HD_DEPT             , $Dept_Crit)
    Do Append-Log($HD_EMPLID           , $Emplid_Criteria )


        Do Append-Log($LG_FINAL_PR           , $Ctl_Final_Pr)
    Do Append-Log($LG_LAW_CLOSE             , $Ctl_Close_Opt)
    Do Append-Log($LG_PRINT_TYPE           , $PRT_TYPE )
    Do Append-log($LG_SIGN1           , $Signature1)
        Do Append-log($LG_SIGN2           , $Signature2)

        Do Append-log($LG_CALIDCR           , $Cal_Id_Criteria_PS)
 end-if

!-----------------------------

if $ReportID = 'GPCHGL01'


    Do Append-Log($ACC_DATE            , $A_Account_dt)
    Do Append-Log($LG_PAYENT           , $B_Payentity)
    Do Append-Log($JOUR_TEMP           , $A_App_Jrnl_Id)
    Do Append-Log($BUSI_UNIT           , $A_Busi_Unit)
    Do Append-Log($BUSI_UNIT_GL        , $A_Busi_Unit_Gl )


 end-if

!-----------------------------

if $ReportID = 'GPCHGL02'


    Do Append-Log($ACC_DATE            , $A_Account_dt)
    Do Append-Log($LG_PAYENT           , $B_Payentity)
    Do Append-Log($JOUR_TEMP           , $A_App_Jrnl_Id)
    Do Append-Log($BUSI_UNIT           , $A_Busi_Unit)
    Do Append-Log($BUSI_UNIT_GL        , $A_Busi_Unit_Gl )


 end-if

!-----------------------------

if $ReportID = 'GPCHBK01'


    Do Append-Log($LG_CURRDT           , $ReportEndDate)
    Do Append-Log($LG_PAYENT           , $Ctl_PayEntity)
    Do Append-Log($HD_PAYGROUP         , $Ctl_Paygroup)
    Do Append-Log($SRC_BANK_STR        , $Ctl_Homebank)

 end-if

!-----------------------------

if $ReportID = 'GPCHBK02'

    move 'DISKETTE_TYPE'  to $FieldName
    move &GPCH_RUN_CNTL.DISKETTE_TYPE to $FieldValue
    do Read-Translate-Table
    let $ElementType = rtrim(ltrim($XlatlongName,' '),' ')


    Do Append-Log($LG_CURRDT           , $ReportEndDate)
    Do Append-Log($LG_TRAN_SEQ         , $BK_XFER_NBR )
    Do Append-Log($LG_DEP_SCHED        , $DEP_SCHED_ID )
    Do Append-Log($LG_PAYENT           , $Ctl_PayEntity)
    Do Append-Log($HD_PAYGROUP         , $Ctl_Paygroup)
    Do Append-Log($LG_DSK_TYPE         , $ElementType)


 end-if

!-----------------------------

if $ReportID = 'GPCHAL06'


    Do Append-Log($LG_CURRDT           , $Ctl_Curr_Pay_End_Dt)
    Do Append-Log($LG_PAYENT           , $Ctl_PayEntity)

 end-if

!-----------------------------

if $ReportID = 'GPCHEO01'


    Do Append-Log($LG_CURRDT           , $Ctl_Curr_Pay_End_Dt)
    Do Append-Log($LG_PAYENT           , $Ctl_PayEntity)

 end-if

 !------------------------------------------------------------------------------------

 if $ReportID = 'GPCHTX02'


    Do Append-Log('Current Pay End Dt' , $Ctl_Curr_Pay_End_Dt)
    Do Append-Log($LG_PAYENT           , $Ctl_PayEntity)
    Do Append-Log($TAX_CANTON_STR          , $Ctl_Canton_Crit)
    Do Append-Log($HD_EMPLID           , $Emplid_Criteria1)



 end-if
 !------------------------------------------------------------------------------------
 if $ReportID = 'GPCHTX01'

    Do Append-Log($LG_FORYR            , $Ctl_Year)
    Do Append-Log($LG_PAYENT           , $Ctl_PayEntity)
    Do Append-Log($LG_CANTON           , $Ctl_Canton_Crit)
    Do Append-Log($HD_EMPLID           , $Emplid_Criteria1)

    move 'GPCH_TX_CANTON_SRT'  to $FieldName
    move &GPCH_RUN_CNTL.GPCH_TX_CANTON_SRT to $FieldValue
    do Read-Translate-Table
    let $CH_TX_CANTON_SRT = rtrim(ltrim($XlatlongName,' '),' ')

        Do Append-Log($LG_FRENCH_CR, $Ctl_Cross_Type)
    if $Ctl_Cross_Type = 'Y'
       Do Append-Log($LG_MUNICIP_CODE        , $Ctl_Village_CD)
       Do Append-Log($LG_CANTON_SORT , $CH_TX_CANTON_SRT)
    end-if

 end-if

!------------------------------------------------------------------------------------

 if $ReportID = 'GPCHST02'

    do Append-Log('Counting method', $Ctl_Count_Meth)
    do Append-Log('Pay Entity'     , $Ctl_PayEntity)
    do Append-Log('Pay Entity'     , $Ctl_GPCH_RC_PAY_ENTITY)
    do Append-Log('Current Pay End', $Ctl_Curr_Pay_End_Dt)
    do Append-Log('Year'           , $Jahr)

 end-if

!------------------------------------------------------------------------------------

  Do Append-Log(' ',' ')
  Do Append-Log('----------------------------- ' , '------------------------------' )
  Do Write-log

End-Procedure Get-Report-Log
!*********************************************************************************



