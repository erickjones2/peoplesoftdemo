!***********************************************************************
!  GPMXRU01:  PTU - Eligible Payees                                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:53:20                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************

#define c1 1
#define c1a 11
#define c2 14
#define c2a 30
#define c3 45
#define c4 55
#define c4a 25
#define c5 83
#define c6 91
#define c6a 20
#define c7 113
#define c8 125
#define c9 137
#define c10 143
#define c10a 151
#define c11 160
#define c98 155
#define c99 164

#include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-report
    do Init-DateTime
    do Init-Number
    do Stdapi-Init
    do Get-Current-DateTime
    do Select-Parameters
    do Init-Report
    do Process-Main
    do Stdapi-Term
    do Reset
end-report

begin-procedure Init-Report
    move 'GPMXRU01' to $ReportID
    display $ReportID
    display 'EMPLEADOS CON DERECHO A REPARTO DE P.T.U.'
    date-time () hh:mi:ss &timeBegan
    display 'Report Began: ' noline
    display &timeBegan
end-procedure

begin-heading 10
    print 'PeopleSoft'          (1,) center
    print 'EMPLEADOS CON DERECHO A REPARTO DE P.T.U.'         (2,) center
    print 'Reporte:'              (3,1)
    print $ReportID             (,17)
    print 'Compañía:'             (4,1)
    print $Company              (,17)
    print '    '                ()
    print $CompanyName          ()
    print 'Año Procesado:'          (5,1)
    print $Year                 (,17)

    print 'Página:'  (3,{c98})
    page-number   (,{c99})    
    print 'Hora:'  (4,{c98})
    print $ReportTime  (,{c99})
    print 'Fecha:'  (5,{c98})
    print $ReportDate  (,{c99})

    print '='   (+1,1,173)fill
    print 'Número'  (+1,{c1})
    print 'Código'  (,{c3})
    print 'Descripción'  (,{c4})
    print 'Código'  (,{c5})
    print 'Descripción'  (,{c6})
    print 'Fecha'  (,{c7})
    print 'Fecha'  (,{c8})
    print 'Días'                (,{c9})
    print 'Sueldo'              (,{c10a})
    print 'Tipo'  (,{c11})

    print 'Empleado Reg'  (+1,{c1})
    print 'Nombre del Empleado' (,{c2})
    print 'Depto.'  (,{c3})
    print 'Departamento' (,{c4})
    print 'Puesto'  (,{c5})
    print 'Puesto'  (,{c6})
    print 'Ingreso'  (,{c7})
    print 'Baja'  (,{c8})
    print 'Base'                (,{c9})
    print 'Base'  (,{c10a})
    print 'Contrato'  (,{c11})
    print '='   (+1,1,173)fill
end-heading


begin-procedure Select-Parameters
begin-select
P.COMPANY
P.GPMX_BALANCE_YEAR
P.GPMX_DATE
P.LANGUAGE_CD
   let $Company   = rtrim(&P.COMPANY, ' ')
   let #Year      = &P.GPMX_BALANCE_YEAR
   let $Year      = to_char(&P.GPMX_BALANCE_YEAR)
   let $Date      = rtrim(&P.GPMX_DATE, ' ')
   let $Language  = rtrim(&P.LANGUAGE_CD, ' ')

FROM  PS_GPMX_RC_PTU P
WHERE P.OPRID = $prcs_oprid
AND   P.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

  let $BegDtDTU = $Year || '-01-01'
  do Convert-From-DTU-Date($BegDtDTU, $BegDt)
  let $EndDtDTU = $Year || '-12-31'
  do Convert-From-DTU-Date($EndDtDTU, $EndDt)
  let $AsOfDate = $Date
  do Get-Company-Data-Mex
!  Do Security-Param
  
end-procedure Select-Parameters


begin-procedure Process-Main
   let #Empl_Count_Comp = 0
begin-select
A.GPMX_BALANCE_YEAR
A.COMPANY
A.EMPLID
A.EMPL_RCD
A.REG_TEMP
SUM(A.GPMX_CEIL_DAY) &A.GPMX_CEIL_DAY
SUM(A.GPMX_CEIL_SALARY) &A.GPMX_CEIL_SALARY

   let $Emplid       = rtrim(&A.EMPLID,' ')
   let #Empl_rcd     = &A.EMPL_RCD
   Move &A.EMPL_RCD To $Empl_rcd  '0'   
   let $Reg_Temp    = rtrim(&A.REG_TEMP,' ')
   let #Ceil_Day     = &A.GPMX_CEIL_DAY
   let #Ceil_Salary  = &A.GPMX_CEIL_SALARY
   if $Reg_Temp = 'R'
     let $Reg_Temp_Desc = 'Regular'
   else
     let $Reg_Temp_Desc = 'Temporal'
   end-if
   do Find-Emplid-Job

FROM PS_GPMX_PTU A
!    ,PS_FAST_SQR_SEC_VW SCRTY
WHERE A.GPMX_BALANCE_YEAR = #Year
AND   A.COMPANY = $Company
AND   A.EFFDT = $Date
!AND   A.EMPLID = SCRTY.EMPLID 
![$SecurityClause] 
GROUP BY A.GPMX_BALANCE_YEAR, A.COMPANY, A.EMPLID, A.EMPL_RCD, A.REG_TEMP
ORDER BY A.GPMX_BALANCE_YEAR, A.COMPANY, A.EMPLID, A.EMPL_RCD, A.REG_TEMP
end-select

   do Print-Company-Total
end-procedure Process-Main


begin-procedure Find-Emplid-Job
begin-select
J.EMPL_STATUS
J.EFFDT
J.DEPTID
J.SETID_DEPT
J.LOCATION
J.SETID_LOCATION
J.SETID_JOBCODE
J.JOBCODE
J.TERMINATION_DT

   let #Empl_Count_Comp = #Empl_Count_Comp + 1
   let #Ceil_Day_Comp = #Ceil_Day_Comp + #Ceil_Day
   let #Ceil_Salary_Comp = #Ceil_Salary_Comp + #Ceil_Salary

   let $Empl_Status = rtrim(&J.EMPL_STATUS,' ')
   let $DeptId      = rtrim(&J.DEPTID,' ')
   let $SetId_Dept  = rtrim(&J.SETID_DEPT,' ')
   let $Location    = rtrim(&J.LOCATION,' ')
   let $SetId_Loc   = rtrim(&J.SETID_LOCATION,' ')
   Let $Effdt       = &J.EFFDT
   let $SetID_JobCode = rtrim(&J.SETID_JOBCODE,' ')
   let $JobCode     = rtrim(&J.JOBCODE,' ')
   
   let $Term_Date   = &J.TERMINATION_DT
   do Convert-To-DTU-Date($Term_Date,$Term_Date1)
   if rtrim($Term_Date,' ') <> ''
       let $Term_DateP = substr($Term_Date1,9,2) || '-' || substr($Term_Date1,6,2) || '-' || substr($Term_Date1,1,4)
   else
       let $Term_DateP = ''
   end-if   
   
   do Select-Emplid-Data
   do Select-Dept-Data
   do Get-JobCode-Descr
!  do Select-Location-Data
   do Print-Data

FROM PS_JOB J
WHERE J.EMPLID = $Emplid
AND   J.EMPL_RCD = #Empl_rcd
AND   J.COMPANY = $Company
AND   J.EFFDT = (SELECT MAX(J1.EFFDT) FROM PS_JOB J1
                 WHERE J1.EMPLID = J.EMPLID
                 AND   J1.EMPL_RCD = J.EMPL_RCD
                 AND   J1.EFFDT <= $EndDt)
AND   J.EFFSEQ = (SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
                  WHERE J2.EMPLID = J.EMPLID
                  AND   J2.EMPL_RCD = J.EMPL_RCD
                  AND   J2.EFFDT = J.EFFDT)
end-select
end-procedure Find-Emplid-Job


begin-procedure Select-Emplid-Data
begin-select
PA.EMPLID
PA.NAME_PSFORMAT
   let $Empl_Name = rtrim(&PA.NAME_PSFORMAT,' ')

FROM PS_PERSON_NAME PA
WHERE PA.EMPLID = $Emplid
ORDER BY PA.EMPLID
end-select

begin-select
E.HIRE_DT
E.TERMINATION_DT
E.ASGN_END_DT

  let $Hire_Date   = &E.HIRE_DT
  let $Term_Date   = &E.TERMINATION_DT
  do Convert-To-DTU-Date($Hire_Date,$Hire_Date1)
  do Convert-To-DTU-Date($Term_Date,$Term_Date1)

  if rtrim($Hire_Date,' ') <> ''
     let $Hire_DateP = substr($Hire_Date1,9,2) || '-' || substr($Hire_Date1,6,2) || '-' || substr($Hire_Date1,1,4)
  else
     let $Hire_DateP = ''
  end-if
  if rtrim($Term_Date,' ') <> ''
     let $Term_DateP = substr($Term_Date1,9,2) || '-' || substr($Term_Date1,6,2) || '-' || substr($Term_Date1,1,4)
  else
     let $Term_DateP = ''
     let $Term_Date   = &E.ASGN_END_DT
  end-if
  do Convert-To-DTU-Date($Term_Date,$Term_Date1)
    if rtrim($Term_Date,' ') <> ''
       let $Term_DateP = substr($Term_Date1,9,2) || '-' || substr($Term_Date1,6,2) || '-' || substr($Term_Date1,1,4)
    else
       let $Term_DateP = ''
  end-if  

FROM PS_PER_ORG_ASGN_VW E
WHERE E.EMPLID = $Emplid
AND E.EMPL_RCD = #Empl_rcd
end-select
end-procedure Select-Emplid_Data


begin-procedure Select-Dept-Data
begin-select
DD.DESCR
   let $Dept_Name = rtrim(&DD.DESCR,' ')
   do  Select-Dept-Data-Lang
   if $Dept_Name_Lang <> ''
      Let $Dept_Name = $Dept_Name_Lang
   end-if
   
FROM PS_DEPT_TBL DD
WHERE DD.DEPTID = $DeptId
AND   DD.SETID = $SetId_Dept
AND   DD.EFF_STATUS = 'A'
AND   DD.EFFDT = (SELECT MAX(DD1.EFFDT)
                  FROM PS_DEPT_TBL DD1
                  WHERE DD1.DEPTID = DD.DEPTID
                  AND   DD1.SETID = DD.SETID
                  AND   DD1.EFFDT <= $Effdt )
end-select
end-procedure Select-Dept-Data


begin-procedure Select-Dept-Data-Lang
begin-select
DDL.DESCR
   let $Dept_Name_Lang = rtrim(&DDL.DESCR,' ')

FROM PS_DEPT_TBL_LANG DDL
WHERE DDL.DEPTID = $DeptId
AND   DDL.SETID = $SetId_Dept
AND   DDL.LANGUAGE_CD = $Language
AND   DDL.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEPT_TBL_LANG
                  WHERE DEPTID = DDL.DEPTID
                  AND   SETID  = DDL.SETID
                  AND   EFFDT <= $Date)
end-select
end-procedure Select-Dept-Data-Lang


begin-procedure Select-Location-Data
begin-select
LL.DESCR
   let $Loc_Name = rtrim(&LL.DESCR,' ')
   do Select-Location-Data-Lang
   if $Loc_Name_Lang <> ''
      Let $Loc_Name = $Loc_Name_Lang
   end-if

FROM PS_LOCATION_TBL LL
WHERE LL.LOCATION = $Location
AND   LL.SETID = $SetId_Loc
AND   LL.EFF_STATUS = 'A'
AND   LL.EFFDT = (SELECT MAX(LL1.EFFDT)
                  FROM PS_LOCATION_TBL LL1
                  WHERE LL1.LOCATION = LL.LOCATION
                  AND   LL1.SETID    = LL.SETID
                  AND   LL1.EFFDT   <= $Effdt )
end-select
end-procedure Select-Location-Data


begin-procedure Select-Location-Data-Lang
begin-select
LLL.DESCR
   let $Loc_Name_Lang = rtrim(&LLL.DESCR,' ')

FROM PS_LOCATION_LANG LLL
WHERE LLL.LOCATION = $Location
AND   LLL.SETID = $SetId_Loc
AND   LLL.LANGUAGE_CD = $Language
AND   LLL.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_LANG
                  WHERE LOCATION = LLL.LOCATION
                  AND   SETID    = LLL.SETID
                  AND   EFFDT   <= $Date)
end-select
end-procedure Select-Location-Data-Lang


begin-procedure Get-JobCode-Descr
 let $JobCode_Descr = ''
begin-select
JC.DESCR
 MOVE &JC.DESCR TO $JobCode_Descr
from PS_JOBCODE_LANG JC
where JC.SETID = $SetID_JobCode
and   JC.JOBCODE = $JobCode
AND   JC.LANGUAGE_CD = $Curr_language_Cd
and   JC.EFFDT =  (SELECT MAX(EFFDT) FROM PS_JOBCODE_LANG
        WHERE SETID = JC.SETID
        and   JOBCODE = JC.JOBCODE
        AND   LANGUAGE_CD = JC.LANGUAGE_CD
        and   EFFDT <= $End_Dt)
end-select
IF $JobCode_Descr  = ''
begin-select
JC1.DESCR
 MOVE &JC1.DESCR TO $JobCode_Descr
from PS_JOBCODE_TBL JC1
where JC1.SETID = $SetID_JobCode
and   JC1.JOBCODE = $JobCode
and   JC1.EFFDT =  (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
        WHERE SETID = JC1.SETID
        and   JOBCODE = JC1.JOBCODE
        and   EFFDT <= $Date)
and   JC1.EFF_STATUS = 'A'
end-select
END-IF
end-procedure Get-JobCode-Descr


begin-procedure Print-Data
   print $Emplid          (+1,{c1})
   print $Empl_rcd        (,{c1a})
   print $Empl_Name       (,{c2},{c2a})
   print $DeptId          (,{c3})
   print $Dept_Name       (,{c4},{c4a})
   print $JobCode         (,{c5})
   print $JobCode_Descr   (,{c6},{c6a})
   print $Hire_DateP      (,{c7})
   print $Term_DateP      (,{c8})
   print #Ceil_Day        (,{c9})  edit 999,999
   print #Ceil_Salary     (,{c10}) edit 999,999,999.99
   print $Reg_Temp_Desc   (,{c11})
end-procedure Print-Data


begin-procedure Print-Company-Total
   print 'Total' (+2,1)
   print 'Compañía:' (,{c2})
   print $Company  (0,23)
   print 'Empleados:'  (0,{c6})
   print #Empl_Count_Comp (0,97) edit 9,999,999
   print #Ceil_Day_Comp  (0,{c9}) edit 999,999
   print #Ceil_Salary_Comp (0,{c10}) edit 999,999,999.99
   let #Ceil_Day_Comp = 0
   let #Ceil_Salary_Comp = 0
   let #Empl_Count_Comp = 0
end-procedure Print-Company-Total


#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields
#include 'hrsecty.sqc'   !Get SQR Security parameters
