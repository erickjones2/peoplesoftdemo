!***********************************************************************
! GPCNTX01.SQR     GLOBAL PAYROLL CHINA TAX SUMMARY AND DETAIL REPORT  *
!                                                                      *
!  Description:                                                        *
!                  This program will take the results from the main GP *
!                  result tables and  prints tax summary and detail    *
!                  report based on Run control parameters.             *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:04:37:55                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
  page-size 65 155

  declare printer
        type          = HPLASERJET
        orientation   = landscape
        top-margin    = .1
        left-margin   = 0.50
        font          = 4
        point-size    = 10
End-Setup

#DEFINE Col1     1
#DEFINE Col2     2
#DEFINE Col3     3
#DEFINE Col5     5
#DEFINE Col6     6
#DEFINE Col7     7
#DEFINE Col10   10
#DEFINE Col11   11
#DEFINE Col12   12
#DEFINE Col13   13
#DEFINE Col15   15
#DEFINE Col16   16
#DEFINE Col19   19
#DEFINE Col20   20
#DEFINE Col23   23
#DEFINE Col26   26
#DEFINE Col27   27
#DEFINE Col28   28
#DEFINE Col21   21
#DEFINE Col22   22
#DEFINE Col25   25
#DEFINE Col29   29
#DEFINE Col30   30
#DEFINE Col33   33
#DEFINE Col35   35
#DEFINE Col36   36
#DEFINE Col40   40
#DEFINE Col41   41
#DEFINE Col42   42
#DEFINE Col44   44
#DEFINE Col45   45
#DEFINE Col46   46
#DEFINE Col47   47
#DEFINE Col48   48
#DEFINE Col50   50
#DEFINE Col51   51
#DEFINE Col53   53
#DEFINE Col54   54
#DEFINE Col55   55
#DEFINE Col56   56
#DEFINE Col57   57
#DEFINE Col58   58
#DEFINE Col59   59
#DEFINE Col60   60
#DEFINE Col61   61
#DEFINE Col64   64
#DEFINE Col65   65
#DEFINE Col66   66
#DEFINE Col67   67
#DEFINE Col68   68
#DEFINE Col70   70
#DEFINE Col71   71
#DEFINE Col72   72
#DEFINE Col73   73
#DEFINE Col74   74
#DEFINE Col75   75
#DEFINE Col76   76
#DEFINE Col77   77
#DEFINE Col79   79
#DEFINE Col80   80
#DEFINE Col83   83
#DEFINE Col85   85
#DEFINE Col86   86
#DEFINE Col90   90
#DEFINE Col95   95
#DEFINE Col96   96
#DEFINE Col98   98
#DEFINE Col99   99
#DEFINE Col100 100
#DEFINE Col101 101
#DEFINE Col105 105
#DEFINE Col107 107
#DEFINE Col108 108
#DEFINE Col110 110
#DEFINE Col111 111
#DEFINE Col112 112
#DEFINE Col114 114
#DEFINE Col115 115
#DEFINE Col116 116
#DEFINE Col117 117
#DEFINE Col118 118
#DEFINE Col119 119
#DEFINE Col120 120
#DEFINE Col121 121
#DEFINE Col123 123
#DEFINE Col124 124
#DEFINE Col125 125
#DEFINE Col126 126
#DEFINE Col127 127
#DEFINE Col129 129
#DEFINE Col130 130
#DEFINE Col131 131
#DEFINE Col133 133
#DEFINE Col135 135
#DEFINE Col136 136
#DEFINE Col140 140
#DEFINE Col141 141
#DEFINE Col145 145
#DEFINE Col150 150

begin-report

  do Init-DateTime
  Do Get-Current-DateTime
  do Init-Report
  do Stdapi-Term
end-report

!**************************************************************************
!
! Procedure: Init-Report
!
! Description: Initialise header and run control variables.
!
!**************************************************************************
begin-procedure Init-Report


  do Stdapi-Init

#IFDEF DEBUGA
  Let $Prcs_OprID       = 'GPCNG'
  Let $Prcs_Run_Cntl_ID = 'RC'
#ENDIF

  let $Where_cond = ''



  Let $Report_ID = 'GPCNTX01'

!  SHOW '$Report_ID ' $Report_ID
!  SHOW '$curr_language_cd ' $curr_language_cd

  do Get-Language-Codes

  do Init_Report_Translation ($Report_ID, $curr_language_cd)
  do Add_Report_Translation  ($Report_ID, $curr_language_cd)
  do Append_Report_Translation ('GPCNTX01')
! do LanguageCode

  do Get_Field_Information ($Report_ID, 'ADDRESS'           , $ADDRESS          , #DW)
  do Get_Field_Information ($Report_ID, 'AMOUNT'            , $AMOUNT           , #DW)
  do Get_Field_Information ($Report_ID, 'DATE'              , $DATE             , #DW)
  do Get_Field_Information ($Report_ID, 'MONTH'             , $MONTH            , #DW)
  do Get_Field_Information ($Report_ID, 'RMB'               , $RMB              , #DW)
  do Get_Field_Information ($Report_ID, 'RMB_YUAN'          , $RMB_YUAN         , #DW)
  do Get_Field_Information ($Report_ID, 'SIGNATURE'         , $SIGNATURE        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AGENTS_NAME'   , $SUM_AGENTS_NAME  , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AGENT_NUM'     , $SUM_AGENT_NUM    , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AMT_TAX_WITH'  , $SUM_AMT_TAX_WITH , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CAT_INCOME'    , $SUM_CAT_INCOME   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CERT_NO'       , $SUM_CERT_NO      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_DATE_FILLING'  , $SUM_DATE_FILLING , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_DEDUCTIONS'    , $SUM_DEDUCTIONS   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EE_NAME'       , $SUM_EE_NAME      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EE_NO'         , $SUM_EE_NO        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EXCG_RATE'     , $SUM_EXCG_RATE    , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOR_CURRENCY'  , $SUM_FOR_CURRENCY , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_GEN_ACC'       , $SUM_GEN_ACC      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_HEADER'        , $SUM_HEADER       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INCOME_PRD'    , $SUM_INCOME_PRD   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO1'         , $SUM_INFO1        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO10'        , $SUM_INFO10       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO11'        , $SUM_INFO11       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO12'        , $SUM_INFO12       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO13'        , $SUM_INFO13       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO2'         , $SUM_INFO2        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO3'         , $SUM_INFO3        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO4'         , $SUM_INFO4        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO5'         , $SUM_INFO5        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO6'         , $SUM_INFO6        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO7'         , $SUM_INFO7        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO8'         , $SUM_INFO8        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO9'         , $SUM_INFO9        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_MON_UNIT'      , $SUM_MON_UNIT     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_NAME_CURR'     , $SUM_NAME_CURR    , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_PHONE_NO'      , $SUM_PHONE_NO     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_PYMT_DATE'     , $SUM_PYMT_DATE    , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_QCK_CALDED'    , $SUM_QCK_CALDED   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RECEIPTS'      , $SUM_RECEIPTS     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RES_OFF'       , $SUM_RES_OFF      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RMB_CON'       , $SUM_RMB_CON      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_TAX_INCOME'    , $SUM_TAX_INCOME   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_TAX_RATE'      , $SUM_TAX_RATE     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_UNIT_ADDR'     , $SUM_UNIT_ADDR    , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_WITH_AGENT'    , $SUM_WITH_AGENT   , #DW)
  do Get_Field_Information ($Report_ID, 'TOTAL'             , $TOTAL            , #DW)
  do Get_Field_Information ($Report_ID, 'SUB_TOTAL'         , $SUB_TOTAL        , #DW)
  do Get_Field_Information ($Report_ID, 'YEAR'              , $YEAR             , #DW)
  do Get_Field_Information ($Report_ID, 'YUAN'              , $YUAN             , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER1'       , $SUM_FOOTER1      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER2'       , $SUM_FOOTER2      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER3'       , $SUM_FOOTER3      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER4'       , $SUM_FOOTER4      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER5'       , $SUM_FOOTER5      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER6'       , $SUM_FOOTER6      , #DW)
  do Get_Field_Information ($Report_ID, 'AUDIT'             , $AUDIT            , #DW)
  do Get_Field_Information ($Report_ID, 'RECORDS'           , $RECORDS          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CAT_SALARY'    , $SUM_CAT_SALARY   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CAT_ANNUAL'    , $SUM_CAT_ANNUAL   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CAT_SEVERANCE' , $SUM_CAT_SEVERANCE, #DW)


  do Get_Field_Information ($Report_ID, 'DTL_HEADER1'       , $DTL_HEADER1      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_HEADER2'       , $DTL_HEADER2      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_HEADER3'       , $DTL_HEADER3      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_HEADER4'       , $DTL_HEADER4      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL1'          , $DTL_COL1         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL2'          , $DTL_COL2         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL3'          , $DTL_COL3         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL4'          , $DTL_COL4         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL5'          , $DTL_COL5         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL5_AB'       , $DTL_COL5_AB      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL5_SV'       , $DTL_COL5_SV      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL6'          , $DTL_COL6         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL7'          , $DTL_COL7         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL8'          , $DTL_COL8         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL9'          , $DTL_COL9         , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_COL10'         , $DTL_COL10        , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_FOOTER1'       , $DTL_FOOTER1      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_FOOTER2'       , $DTL_FOOTER2      , #DW)
  do Get_Field_Information ($Report_ID, 'DTL_FOOTER3'       , $DTL_FOOTER3      , #DW)

! do Test-Translated-Strings-Exist

  do Get-Language-Codes

  do Init_Report_Translation ($Report_ID, 'ZHS')
  do Add_Report_Translation  ($Report_ID, $curr_language_cd)
  do Append_Report_Translation ('GPCNTX01')


  do Get_Field_Information ($Report_ID, 'ADDRESS'           , $ADDRESS_C            , #DW)
  do Get_Field_Information ($Report_ID, 'AMOUNT'            , $AMOUNT_C             , #DW)
  do Get_Field_Information ($Report_ID, 'DATE'              , $DATE_C               , #DW)
  do Get_Field_Information ($Report_ID, 'MONTH'             , $MONTH_C              , #DW)
  do Get_Field_Information ($Report_ID, 'RMB'               , $RMB_C                , #DW)
  do Get_Field_Information ($Report_ID, 'RMB_YUAN'          , $RMB_YUAN_C           , #DW)
  do Get_Field_Information ($Report_ID, 'SIGNATURE'         , $SIGNATURE_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AGENTS_NAME'   , $SUM_AGENTS_NAME_C    , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AGENT_NUM'     , $SUM_AGENT_NUM_C      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AMT_TAX_WITH'  , $SUM_AMT_TAX_WITH_C   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CAT_INCOME'    , $SUM_CAT_INCOME_C     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CERT_NO'       , $SUM_CERT_NO_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_DATE_FILLING'  , $SUM_DATE_FILLING_C   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_DEDUCTIONS'    , $SUM_DEDUCTIONS_C     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EE_NAME'       , $SUM_EE_NAME_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EE_NO'         , $SUM_EE_NO_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EXCG_RATE'     , $SUM_EXCG_RATE_C      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOR_CURRENCY'  , $SUM_FOR_CURRENCY_C   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_GEN_ACC'       , $SUM_GEN_ACC_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_HEADER'        , $SUM_HEADER_C         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INCOME_PRD'    , $SUM_INCOME_PRD_C     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO1'         , $SUM_INFO1_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO10'        , $SUM_INFO10_C         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO11'        , $SUM_INFO11_C         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO12'        , $SUM_INFO12_C         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO13'        , $SUM_INFO13_C         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO2'         , $SUM_INFO2_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO3'         , $SUM_INFO3_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO4'         , $SUM_INFO4_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO5'         , $SUM_INFO5_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO6'         , $SUM_INFO6_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO7'         , $SUM_INFO7_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO8'         , $SUM_INFO8_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO9'         , $SUM_INFO9_C          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_MON_UNIT'      , $SUM_MON_UNIT_C       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_NAME_CURR'     , $SUM_NAME_CURR_C      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_PHONE_NO'      , $SUM_PHONE_NO_C       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_PYMT_DATE'     , $SUM_PYMT_DATE_C      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_QCK_CALDED'    , $SUM_QCK_CALDED_C     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RECEIPTS'      , $SUM_RECEIPTS_C       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RES_OFF'       , $SUM_RES_OFF_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RMB_CON'       , $SUM_RMB_CON_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_TAX_INCOME'    , $SUM_TAX_INCOME_C     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_TAX_RATE'      , $SUM_TAX_RATE_C       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_UNIT_ADDR'     , $SUM_UNIT_ADDR_C      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_WITH_AGENT'    , $SUM_WITH_AGENT_C     , #DW)
  do Get_Field_Information ($Report_ID, 'TOTAL'             , $TOTAL_C              , #DW)
  do Get_Field_Information ($Report_ID, 'YEAR'              , $YEAR_C               , #DW)
  do Get_Field_Information ($Report_ID, 'YUAN'              , $YUAN_C               , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER1'       , $SUM_FOOTER1_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER2'       , $SUM_FOOTER2_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER3'       , $SUM_FOOTER3_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER4'       , $SUM_FOOTER4_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER5'       , $SUM_FOOTER5_C        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER6'       , $SUM_FOOTER6_C        , #DW)
  do Get_Field_Information ($Report_ID, 'AUDIT'             , $AUDIT_C              , #DW)
  do Get_Field_Information ($Report_ID, 'RECORDS'           , $RECORDS_C            , #DW)


! English strings for Summary report

  do Get-Language-Codes

  do Init_Report_Translation ($Report_ID, 'ENG')
  do Add_Report_Translation  ($Report_ID, $curr_language_cd)
  do Append_Report_Translation ('GPCNTX01')


  do Get_Field_Information ($Report_ID, 'ADDRESS'           , $ADDRESS_E            , #DW)
  do Get_Field_Information ($Report_ID, 'AMOUNT'            , $AMOUNT_E             , #DW)
  do Get_Field_Information ($Report_ID, 'DATE'              , $DATE_E               , #DW)
  do Get_Field_Information ($Report_ID, 'MONTH'             , $MONTH_E              , #DW)
  do Get_Field_Information ($Report_ID, 'RMB'               , $RMB_E                , #DW)
  do Get_Field_Information ($Report_ID, 'RMB_YUAN'          , $RMB_YUAN_E           , #DW)
  do Get_Field_Information ($Report_ID, 'SIGNATURE'         , $SIGNATURE_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AGENTS_NAME'   , $SUM_AGENTS_NAME_E    , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AGENT_NUM'     , $SUM_AGENT_NUM_E      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_AMT_TAX_WITH'  , $SUM_AMT_TAX_WITH_E   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CAT_INCOME'    , $SUM_CAT_INCOME_E     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_CERT_NO'       , $SUM_CERT_NO_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_DATE_FILLING'  , $SUM_DATE_FILLING_E   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_DEDUCTIONS'    , $SUM_DEDUCTIONS_E     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EE_NAME'       , $SUM_EE_NAME_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EE_NO'         , $SUM_EE_NO_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_EXCG_RATE'     , $SUM_EXCG_RATE_E      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOR_CURRENCY'  , $SUM_FOR_CURRENCY_E   , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_GEN_ACC'       , $SUM_GEN_ACC_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_HEADER'        , $SUM_HEADER_E         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INCOME_PRD'    , $SUM_INCOME_PRD_E     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO1'         , $SUM_INFO1_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO10'        , $SUM_INFO10_E         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO11'        , $SUM_INFO11_E         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO12'        , $SUM_INFO12_E         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO13'        , $SUM_INFO13_E         , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO2'         , $SUM_INFO2_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO3'         , $SUM_INFO3_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO4'         , $SUM_INFO4_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO5'         , $SUM_INFO5_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO6'         , $SUM_INFO6_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO7'         , $SUM_INFO7_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO8'         , $SUM_INFO8_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_INFO9'         , $SUM_INFO9_E          , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_MON_UNIT'      , $SUM_MON_UNIT_E       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_NAME_CURR'     , $SUM_NAME_CURR_E      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_PHONE_NO'      , $SUM_PHONE_NO_E       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_PYMT_DATE'     , $SUM_PYMT_DATE_E      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_QCK_CALDED'    , $SUM_QCK_CALDED_E     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RECEIPTS'      , $SUM_RECEIPTS_E       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RES_OFF'       , $SUM_RES_OFF_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_RMB_CON'       , $SUM_RMB_CON_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_TAX_INCOME'    , $SUM_TAX_INCOME_E     , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_TAX_RATE'      , $SUM_TAX_RATE_E       , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_UNIT_ADDR'     , $SUM_UNIT_ADDR_E      , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_WITH_AGENT'    , $SUM_WITH_AGENT_E     , #DW)
  do Get_Field_Information ($Report_ID, 'TOTAL'             , $TOTAL_E              , #DW)
  do Get_Field_Information ($Report_ID, 'YEAR'              , $YEAR_E               , #DW)
  do Get_Field_Information ($Report_ID, 'YUAN'              , $YUAN_E               , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER1'       , $SUM_FOOTER1_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER2'       , $SUM_FOOTER2_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER3'       , $SUM_FOOTER3_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER4'       , $SUM_FOOTER4_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER5'       , $SUM_FOOTER5_E        , #DW)
  do Get_Field_Information ($Report_ID, 'SUM_FOOTER6'       , $SUM_FOOTER6_E        , #DW)
  do Get_Field_Information ($Report_ID, 'AUDIT'             , $AUDIT_E              , #DW)
  do Get_Field_Information ($Report_ID, 'RECORDS'           , $RECORDS_E            , #DW)


  do Select-Parameters                       ! select parameter from Run control page .



    if $Output_Opt = '2' OR $Output_Opt = '3'

     do Process-Main

    End-If


    if $Output_Opt = '1' OR $Output_Opt = '3'

     do Summary_Report

    End-If


end-procedure


!**************************************************************************
!
! Procedure: Main
!
! Description:Main processing section.
!
!**************************************************************************

begin-procedure Process-Main

   Let #Total_Empl    = 0
   let $First_EE = 'Y'

begin-SELECT DISTINCT

TAX.GPCN_TAX_AREA    &TAX.GPCN_TAX_AREA
PE.PAY_ENTITY        &PE.PAY_ENTITY

  Let $Tax_Area    =  rtrim(ltrim(&TAX.GPCN_TAX_AREA , ' '), ' ')
  Let $Pay_Entity  =  rtrim(ltrim(&PE.PAY_ENTITY , ' '), ' ')

#ifdef debugy
  SHOW  $Tax_Area
  SHOW  $Pay_Entity
#end-if

  do Get-Company-details

   if $Output_Opt = '2' OR $Output_Opt = '3'
     do Print_Dtl_Heading
   End-If

  Let #Total_Empl    = 0

  do Process-Payee
  if $Output_Opt = '2' OR $Output_Opt = '3'
    do Print_Dtl-Totaltax
    do Print_Dtl-Footer
  End-if

    NEW-PAGE



FROM    PS_GPCN_TAX_RPTG   TAX
      , PS_GP_PYENT        PE
      , PS_GP_PYGRP        PG

where  TAX.GPCN_MONTHCD       =  &RC.GPCN_MONTHCD
AND    TAX.GPCN_YEARCD        =  &RC.GPCN_YEARCD
AND    TAX.GPCN_TAX_AREA      =  &RC.GPCN_TAX_AREA
AND    TAX.GP_PAYGROUP        =  PG.GP_PAYGROUP
AND    PG.PAY_ENTITY          =  PE.PAY_ENTITY
AND    PE.PAY_ENTITY          LIKE  $Pay_Entity_Sel
AND    TAX.GPCN_INC_CATEGORY  =  $Cat_Inc_sel
[$Emp_Type_CAT]

end-SELECT

end-procedure


!**************************************************************************
!
! Procedure: Get-Company-details
!
! Description: Get-Company-details.
!
!**************************************************************************

begin-procedure Get-Company-details

begin-select DISTINCT

PE.DESCR           &PE.DESCR
PD.ADDRESS1        &PD.ADDRESS1
PD.ADDRESS2        &PD.ADDRESS2
PD.ADDRESS3        &PD.ADDRESS3
PD.ADDRESS4        &PD.ADDRESS4
PD.CITY            &PD.CITY
TR.GPCN_REG_NO     &TR.GPCN_REG_NO

   Let $Address_PE = rtrim(ltrim(&PD.ADDRESS1,' '),' ')||' , '||ltrim(rtrim(&PD.ADDRESS2,' '),' ')||' , '||ltrim(rtrim(&PD.ADDRESS3,' '),' ')||' , '||ltrim(rtrim(&PD.ADDRESS4,' '),' ')||' , '||ltrim(rtrim(&PD.CITY,' '),' ')
   Let $Tax_Reg_No = rtrim(ltrim(&TR.GPCN_REG_NO,' '),' ')
   If $curr_language_cd <> 'ENG'
      do Get-Trans-PayEntity
      If rtrim(ltrim($Pay_Entity_Name , ' '), ' ') = ''
         Let $Pay_Entity_Name = rtrim(ltrim(&PE.DESCR , ' '), ' ')
      End-if
   Else
      Let $Pay_Entity_Name = rtrim(ltrim(&PE.DESCR , ' '), ' ')
   End-if

FROM PS_GP_PYENT PE,
PS_GP_PYENT_DTL PD,
PS_GPCN_TAX_REG TR

where PE.PAY_ENTITY = PD.PAY_ENTITY
AND PE.PAY_ENTITY = TR.PAY_ENTITY
AND PE.PAY_ENTITY = $Pay_Entity
AND TR.GPCN_CONTRIB_AREA = &RC.GPCN_TAX_AREA
AND TR.EFFDT = (SELECT MAX(TR1.EFFDT)
                FROM PS_GPCN_TAX_REG TR1
                WHERE TR1.PAY_ENTITY = $Pay_Entity
                AND   TR1.GPCN_CONTRIB_AREA = &RC.GPCN_TAX_AREA
                AND   TR1.EFFDT <= &RC.END_DT)

end-select

end-procedure


!**************************************************************************
! Procedure: Print_Dtl_Heading
! Description:  Print the headings breakup accross page
!**************************************************************************

begin-procedure Print_Dtl_Heading

    ! NEW-PAGE

   print $DTL_HEADER1     ( 10 ,{Col65})  Bold

   print $DTL_HEADER2     (+2, {Col1})   Bold
   print $Pay_Entity_Name (  ,{Col19})

   print $DTL_HEADER4     (  ,{Col115})   Bold
   print $Year_Cd         (  ,{Col125})
   print $YEAR            (  ,{Col130})   Bold
   print $Month_Cd        (  ,{Col135})
   Print $MONTH           (  ,{Col140})   Bold

   print $DTL_HEADER3     (+2 ,{Col1})   Bold
   print $Tax_Reg_No      (  ,{Col19})

   Print $SUM_MON_UNIT    (  ,{Col115})   Bold
   Print $RMB_YUAN        (  ,{Col125})

   Let $Report_Type  = 'Detail'

        MOVE '{FILEPREFIX}' to $Filename
        let $Filename = $Filename || $Pay_Entity
        let $Filename = $Filename || '-'
        let $Filename = $Filename || $Tax_Area
        let $Filename = $Filename || '-'
        let $Filename = $Filename || $Month_Cd
        let $Filename = $Filename || $Year_Cd
        let $Filename = $Filename || '-'
        let $Filename = $Filename || $Report_Type
        let $Filename = $Filename || '.csv{FILESUFFIX}'

#ifdef debugy
        show '$Filename : ' $Filename
#end-if

        open $Filename as 1 for-writing record=9999:vary
        status = #filestat
        if #filestat != 0
            show 'Cannot open file ' $Filename
        end-if

        let $REPORT_HDR = $Pay_Entity_Name
        let $REPORT_HDR = $REPORT_HDR || ',' || $Year_Cd
        let $REPORT_HDR = $REPORT_HDR || ',' || $Month_Cd
        let $REPORT_HDR = $REPORT_HDR || ',' || $Tax_Reg_No
        let $REPORT_HDR = $REPORT_HDR || ',' || $RMB_YUAN
        write 1 from $REPORT_HDR


   graphic                                        (15,1,149) horz-line

   graphic                                        (15, {Col1}, 6) vert-line
   graphic                                        (15, {Col10}, 6) vert-line
   graphic                                        (15, {Col40}, 6) vert-line
   graphic                                        (15, {Col50}, 6) vert-line
   graphic                                        (15, {Col70}, 6) vert-line
   graphic                                        (15, {Col85}, 6) vert-line
   graphic                                        (15, {Col100},6) vert-line
   graphic                                        (15, {Col115},6) vert-line
   graphic                                        (15, {Col120},6) vert-line
   graphic                                        (15, {Col135},6) vert-line
   graphic                                        (15, {Col150},6) vert-line


   print $DTL_COL1                                (17, {Col1})  BOLD
   print $DTL_COL2                                (17, {Col11})  BOLD
   print $DTL_COL3                                (17, {Col41})  BOLD  WRAP 8  4
   print $DTL_COL4                                (17, {Col51})  BOLD  WRAP 18 4


   If $Cat_Income = '1'
     print $DTL_COL5                                  (17, {Col71})  BOLD  WRAP 13 4
   else
      If $Cat_Income = '2'
        print $DTL_COL5_AB                            (17, {Col71})  BOLD  WRAP 13 4
      else
        print $DTL_COL5_SV                            (17, {Col71})  BOLD  WRAP 13 4
      End-if
   End-if

   print $DTL_COL6                                (17, {Col86})  BOLD  WRAP 13 4
   print $DTL_COL7                                (17, {Col101}) BOLD  WRAP 13 4
   print $DTL_COL8                                (17, {Col116}) BOLD  WRAP 4  4
   print $DTL_COL9                                (17, {Col121}) BOLD  WRAP 13 4
   print $DTL_COL10                               (17, {Col136}) BOLD

   graphic                                        (21,1,149) horz-line

end-procedure


!**************************************************************************
! Procedure: Process-Payee
! Description: Payee processing section
!**************************************************************************
begin-procedure Process-Payee


let $First_EE = 'Y'
let #page-count = 1


Let #Tax_RATE1            =  0
Let #Emp_Count            =  0
Let #Monthly_Inc          =  0
Let #Exempt_Amt           =  0
Let #Taxable_Inc          =  0
Let #Quick_Cald           =  0
Let #Inc_Tax              =  0
Let #Total_Tax            =  0
Let #Total_Emp_Count      =  0
Let #Total_Monthly_Inc    =  0
Let #Total_Exempt_Amt     =  0
Let #Total_Taxable_Inc    =  0
Let #Total_Quick_Cald     =  0


begin-SELECT on-error=SQL-Error

TX.EMPLID
PERS.NAME
PERS.NAME_AC
PERS.NAME_FORMAL
!NID.NATIONAL_ID
TX.GPCN_MONTHCD
TX.GPCN_YEARCD
TX.GP_PAYGROUP
TX.GPCN_INC_CATEGORY            &TX.GPCN_INC_CATEGORY
TX.GPCN_EMP_TYPE                &TX.GPCN_EMP_TYPE
TX.GPCN_TAX_RATE                &TX.GPCN_TAX_RATE


SUM(TX.GPCN_TAX_TOT_GROSS)      &TX.GPCN_TAX_TOT_GROSS
SUM(TX.GPCN_TAX_EXEMPTION)      &TX.GPCN_TAX_EXEMPTION
SUM(TX.GPCN_TOT_TAXABLE)        &TX.GPCN_TOT_TAXABLE
SUM(TX.GPCN_TAX_QUICK_CAL)      &TX.GPCN_TAX_QUICK_CAL
SUM(TX.GPCN_TAX_AMT)            &TX.GPCN_TAX_AMT
PYE.PAY_ENTITY


  Let $Emplid         = rtrim(ltrim(&TX.EMPLID   , ' '), ' ')
  Let $EmployeeName   = rtrim(ltrim(&PERS.NAME   , ' '), ' ')
  Let $EmployeeACName = rtrim(ltrim(&PERS.NAME_AC, ' '), ' ')
  if $curr_language_cd = 'ZHS'
     Let $EmployeeName   = rtrim(ltrim(&PERS.NAME_FORMAL   , ' '), ' ')
  End-If
!  Let $Empl_Nid       = rtrim(ltrim(&NID.NATIONAL_ID, ' '), ' ')
  let $GP_Paygroup    = rtrim(ltrim(&TX.GP_PAYGROUP, ' '), ' ')
  Let $Employee_Type  = rtrim(ltrim(&TX.GPCN_EMP_TYPE, ' '), ' ')

  #ifdef debugy
    show '$Emplid           : ' $Emplid
    show '$EmployeeName     : ' $EmployeeName
    show '$EmployeeACName   : ' $EmployeeACName
  #endif


  Let #Tax_RATE           =    &TX.GPCN_TAX_RATE
  Let #TAX_TOT_GROSS      =    &TX.GPCN_TAX_TOT_GROSS
  Let #TAX_EXEMPTION      =    &TX.GPCN_TAX_EXEMPTION
  Let #TOT_TAXABLE        =    &TX.GPCN_TOT_TAXABLE
  Let #TAX_QUICK_CAL      =    &TX.GPCN_TAX_QUICK_CAL
  Let #TAX_AMT            =    &TX.GPCN_TAX_AMT



      If $Income_Category = 'AB'
       Let #Tax_EXEMPTION = 0
      End-If


      Let #Total_Empl  = #Total_Empl + 1


      If #Tax_RATE1     =   #Tax_RATE

        Let #Emp_Count   = #Emp_Count       + 1
     if #TAX_TOT_GROSS >= 0
        Let #Monthly_Inc = #Monthly_Inc     + #TAX_TOT_GROSS        ! v1
     End-If
        Let #Exempt_Amt  = #Exempt_Amt      + #TAX_EXEMPTION            ! v2
        Let #Taxable_Inc = #Taxable_Inc     + #TOT_TAXABLE              ! v3
        Let #Quick_Cald  = #Quick_Cald      + #TAX_QUICK_CAL        ! v4
        Let #Inc_Tax     = #Inc_Tax         + #TAX_AMT



      else

     if $Output_Opt = '2' OR $Output_Opt = '3'
       do Print_Dtl-Subtotal
     End-If

        Let #Emp_Count = 1
        Let #Monthly_Inc =  #TAX_TOT_GROSS              ! v1
        Let #Exempt_Amt  =  #TAX_EXEMPTION          ! v2
        Let #Taxable_Inc =  #TOT_TAXABLE                ! v3
        Let #Quick_Cald  =  #TAX_QUICK_CAL          ! v4
        Let #Inc_Tax     =  #TAX_AMT
        Let #Tax_RATE1  =   #Tax_RATE


     End-If


  #ifdef debugy
    show  #Total_Empl
    show  #Taxable_Income
    show  #Income_Tax
  #endif

!   LET $NID_Passport = $Empl_Nid

  if $Output_Opt = '2' OR $Output_Opt = '3'
     do Print_Empl_Details
  End-If


  FROM PS_GPCN_TAX_RPTG TX,
  PS_PERSON_NAME PERS,
!  PS_PERS_NID NID,
  PS_GP_PYGRP PYG,
  PS_GP_PYENT PYE


  WHERE TX.EMPLID = PERS.EMPLID
!  AND   TX.EMPLID = NID.EMPLID
  AND   TX.GPCN_MONTHCD = &RC.GPCN_MONTHCD
  AND   TX.GPCN_YEARCD =  &RC.GPCN_YEARCD
  AND   TX.GP_PAYGROUP =  PYG.GP_PAYGROUP
  AND   TX.GPCN_TAX_AREA  = &RC.GPCN_TAX_AREA
  AND   TX.GPCN_INC_CATEGORY = $Income_Category
  AND   PYG.PAY_ENTITY = PYE.PAY_ENTITY
  AND   PYE.PAY_ENTITY = $Pay_Entity

  [$Emp_Type_Sel]


  GROUP BY TX.EMPLID,
  PERS.NAME,
  PERS.NAME_AC,
  PERS.NAME_FORMAL,
!  NID.NATIONAL_ID,
  TX.GP_PAYGROUP,
  TX.GPCN_MONTHCD,
  TX.GPCN_YEARCD,
  TX.GPCN_TAX_RATE,
  TX.GPCN_EMP_TYPE,
  TX.GPCN_INC_CATEGORY,
  PYE.PAY_ENTITY

  [$sort_order]
 ! ORDER BY TX.GPCN_TAX_RATE

End-Select

  if $Output_Opt = '2' OR $Output_Opt = '3'
     do Print_Dtl-Subtotal
  End-If

End-Procedure


!**************************************************************************
! Procedure:  Print_Empl_Details
! Description: Print the headings
!**************************************************************************
begin-procedure Print_Empl_Details


  Let $Taxable_Month = rtrim(ltrim($Year_Cd,' '),' ')||'/'||ltrim(rtrim($Month_Cd,' '),' ')

  Let #Tax_Percent = 0

        !    let $First_EE = 'N'
        !show '#printline : ' #current-line

let #print-line-cnt = 0

        if #current-line <= 5 or #current-line >= 62
            let #print-line-cnt = #current-line
            new-page
            graphic                                        (6 ,1,149)       horz-line
            graphic                                        (6, {Col1} ,  1) vert-line
            graphic                                        (6, {Col10} ,  1) vert-line
            graphic                                        (6, {Col40} ,  1) vert-line
            graphic                                        (6, {Col50} ,  1) vert-line
            graphic                                        (6, {Col70} ,  1) vert-line
            graphic                                        (6, {Col85} ,  1) vert-line
            graphic                                        (6, {Col100} , 1) vert-line
            graphic                                        (6, {Col115} , 1) vert-line
            graphic                                        (6, {Col120} , 1) vert-line
            graphic                                        (6, {Col135} , 1) vert-line
            graphic                                        (6, {Col150} , 1) vert-line
            print $EmployeeName       (+1, {Col11})  WRAP 45 2
            let $First_EE = 'N'
        else


            graphic                                        (, {Col1},  1) vert-line
            graphic                                        (, {Col10},  1) vert-line
            graphic                                        (, {Col40},  1) vert-line
            graphic                                        (, {Col50},  1) vert-line
            graphic                                        (, {Col70},  1) vert-line
            graphic                                        (, {Col85},  1) vert-line
            graphic                                        (, {Col100}, 1) vert-line
            graphic                                        (, {Col115}, 1) vert-line
            graphic                                        (, {Col120}, 1) vert-line
            graphic                                        (, {Col135}, 1) vert-line
            graphic                                        (, {Col150}, 1) vert-line

            print $EmployeeName       (+1, {Col11})  WRAP 45 2
        end-if

           print $Emplid              (  , {Col2}, 20)


           LET  $NID_Passport = ' '
           LET  $NID_No = ' '
           LET  $Passport_No = ' '
            do Get_NID_Number
!             show  $Emplid ' '  $NID_No
            LET  $NID_Passport = $NID_No


           if $Employee_Type = 'EXP'
              do Get_Passport_Number
            LET  $NID_Passport = $Passport_No
           End-If


           print $NID_Passport        (  , {Col51}, 20)
           print $Taxable_Month       (  , {Col41})


           Let #Tax_Percent     =  #Tax_RATE  * 100
           Let $Tax_Per         =  #Tax_Percent



    If $Income_Category = 'AB'
       Let #Tax_EXEMPTION = 0
    End-If

           SHOW '#TAX_TOT_GROSS ' #TAX_TOT_GROSS
          If #TAX_TOT_GROSS < 0
             Let #TAX_TOT_GROSS = 0
             SHOW '#TAX_TOT_GROSS ' #TAX_TOT_GROSS
          End-If
           print #TAX_TOT_GROSS               (  , {Col71})      edit '9999999.99'
           print #TAX_EXEMPTION               (  , {Col86})      edit '9999999.99'
           print #TOT_TAXABLE                 (  , {Col101})     edit '9999999.99'
           print #Tax_Percent                 (  , {Col116})     edit '99'
           print '%'                          (  , {Col118})
           print #TAX_QUICK_CAL               (  , {Col121})     edit '9999999.99'
           print #TAX_AMT                     (  , {Col136})     edit '9999999.99'

           graphic                            (  , {Col1},149) horz-line



    move #LineNum           to $LineNum       000000000

    move #TAX_TOT_GROSS     to $Tax_Mon       0000000.00
    move #Tax_EXEMPTION     to $Tax_Exe       0000000.00
    move #TOT_TAXABLE       to $Tax_Inc       0000000.00
    move #Tax_Percent       to $Tax_Per            00
    move #TAX_QUICK_CAL     to $Tax_QDD       0000000.00
    move #TAX_AMT           to $Tax_Val       0000000.00




    let $Tax_Mon = rtrim(ltrim($Tax_Mon, ' '), ' ')
    let $Tax_Exe = rtrim(ltrim($Tax_Exe, ' '), ' ')
    let $Tax_Inc = rtrim(ltrim($Tax_Inc, ' '), ' ')
    let $Tax_Per = rtrim(ltrim($Tax_Per, ' '), ' ')
    let $Tax_QDD = rtrim(ltrim($Tax_QDD, ' '), ' ')
    let $Tax_Val = rtrim(ltrim($Tax_Val, ' '), ' ')



     let $NID_Passport = rtrim(ltrim($NID_Passport, ' '), ' ')
     if $NID_Passport <> ''
       Let $NID_Passport =  '''' || $NID_Passport
     end-if

    let $REPORT_DATA = $Emplid
    let $REPORT_DATA = $REPORT_DATA || ',' || $EmployeeName
    let $REPORT_DATA = $REPORT_DATA || ',' || $Taxable_Month
    let $REPORT_DATA = $REPORT_DATA || ',' || $NID_Passport
    let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Mon
    let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Exe
    let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Inc
    let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Per
    let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_QDD
    let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Val
    write 1 from $REPORT_DATA


end-procedure



!**************************************************************************
! Procedure: Print_Dtl-Subtotal
!            Print Subtotal if there is change in tax rate.
!**************************************************************************
Begin-procedure Print_Dtl-Subtotal


!   Let  $Subtotal = 'Subtotal'


       If  #Emp_Count > 0
            graphic                                        (, {Col1}, 2) vert-line
            graphic                                        (, {Col10}, 2) vert-line
!           graphic                                        (, {Col40}, 2) vert-line
!           graphic                                        (, {Col50}, 2) vert-line
            graphic                                        (, {Col70}, 2) vert-line
            graphic                                        (, {Col85}, 2) vert-line
            graphic                                        (, {Col100}, 2) vert-line
            graphic                                        (, {Col115}, 2) vert-line
            graphic                                        (, {Col120}, 2) vert-line
            graphic                                        (, {Col135}, 2) vert-line
            graphic                                        (, {Col150}, 2) vert-line


            print $SUB_TOTAL                         (+1, {Col60})
            print #Emp_Count                         (  , {Col3})      edit '9999999'
            print #Monthly_Inc                       (  , {Col71})      edit '9999999.99'
            print #Exempt_Amt                        (  , {Col86})      edit '9999999.99'
            print #Taxable_Inc                       (  , {Col101})     edit '9999999.99'
            print #Quick_Cald                        (  , {Col121})     edit '9999999.99'
            print #Inc_Tax                           (  , {Col136})     edit '9999999.99'



            Let #Total_Tax              =  #Total_Tax         +   #Inc_Tax
            Let #Total_Emp_Count        =  #Total_Emp_Count   +   #Emp_Count
            Let #Total_Monthly_Inc      =  #Total_Monthly_Inc +   #Monthly_Inc
            Let #Total_Exempt_Amt       =  #Total_Exempt_Amt  +   #Exempt_Amt
            Let #Total_Taxable_Inc      =  #Total_Taxable_Inc +   #Taxable_Inc
            Let #Total_Quick_Cald       =  #Total_Quick_Cald  +   #Quick_Cald



            graphic                                  (  ,1,149) horz-line


            move #LineNum           to $LineNum       000000000

            move #Emp_Count     to $Emp_cnt       0000000
            move #Monthly_Inc   to $Tax_Mon       0000000.00
            move #Exempt_Amt    to $Tax_Exe       0000000.00
            move #Taxable_Inc   to $Tax_Inc       0000000.00
            move #Quick_Cald    to $Tax_QDD       0000000.00
            move #Inc_Tax       to $Tax_Val       0000000.00


            Let $Emp_Count = rtrim(ltrim($Emp_cnt, ' '), ' ')
            let $Tax_Mon   = rtrim(ltrim($Tax_Mon, ' '), ' ')
            let $Tax_Exe   = rtrim(ltrim($Tax_Exe, ' '), ' ')
            let $Tax_Inc   = rtrim(ltrim($Tax_Inc, ' '), ' ')
            let $Tax_QDD   = rtrim(ltrim($Tax_QDD, ' '), ' ')
            let $Tax_Val   = rtrim(ltrim($Tax_Val, ' '), ' ')


            let $REPORT_DATA = $Emp_Count
            let $REPORT_DATA = $REPORT_DATA || ',' || ' '
            let $REPORT_DATA = $REPORT_DATA || ',' || ' '
            let $REPORT_DATA = $REPORT_DATA || ',' || $SUB_TOTAL
            let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Mon
            let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Exe
            let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Inc
            let $REPORT_DATA = $REPORT_DATA || ',' || ' '
            let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_QDD
            let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Val
            write 1 from $REPORT_DATA



       End-If


End-Procedure



!**************************************************************************
! Procedure: Print_Dtl-Totaltax
!            Print Total Income tax .
!**************************************************************************
Begin-procedure Print_Dtl-Totaltax

  graphic                                        ( ,{Col1}, 1)      vert-line
  graphic                                        ( ,{Col10}, 1)      vert-line
  graphic                                        (, {Col70}, 1)      vert-line
  graphic                                        (, {Col85}, 1)     vert-line
  graphic                                        (, {Col100}, 1)     vert-line
  graphic                                        (, {Col115}, 1)     vert-line
  graphic                                        (, {Col120}, 1)     vert-line
  graphic                                        ( ,{Col135}, 1)     vert-line
  graphic                                        ( ,{Col150}, 1)     vert-line

  print $TOTAL                                   (+1, {Col60})
  print #Total_Tax                               ( , {Col136})       edit '9999999.99'

  Print #Total_Emp_Count                         ( ,{Col3} )        edit '9999999'
  Print #Total_Monthly_Inc                       ( ,{Col71} )        edit '9999999.99'
  Print #Total_Exempt_Amt                        ( ,{Col86} )       edit '9999999.99'
  Print #Total_Taxable_Inc                       ( ,{Col101} )       edit '9999999.99'
  Print #Total_Quick_Cald                        ( ,{Col121} )       edit '9999999.99'



  move #LineNum             to $LineNum       000000000

  move #Total_Emp_Count     to $Tot_Emp_cnt   0000000
  move #Total_Monthly_Inc   to $Tax_Mon       0000000.00
  move #Total_Exempt_Amt    to $Tax_Exe       0000000.00
  move #Total_Taxable_Inc   to $Tax_Inc       0000000.00
  move #Total_Quick_Cald    to $Tax_QDD       0000000.00
  move #Total_Tax           to $Tax_Val       0000000.00


  Let $Tot_Emp_Count = rtrim(ltrim($Tot_Emp_cnt, ' '), ' ')
  let $Tax_Mon   = rtrim(ltrim($Tax_Mon, ' '), ' ')
  let $Tax_Exe   = rtrim(ltrim($Tax_Exe, ' '), ' ')
  let $Tax_Inc   = rtrim(ltrim($Tax_Inc, ' '), ' ')
  let $Tax_QDD   = rtrim(ltrim($Tax_QDD, ' '), ' ')
  let $Tax_Val   = rtrim(ltrim($Tax_Val, ' '), ' ')


  let $REPORT_DATA = $Tot_Emp_Count
  let $REPORT_DATA = $REPORT_DATA || ',' || ' '
  let $REPORT_DATA = $REPORT_DATA || ',' || ' '
  let $REPORT_DATA = $REPORT_DATA || ',' || $TOTAL
  let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Mon
  let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Exe
  let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Inc
  let $REPORT_DATA = $REPORT_DATA || ',' || ' '
  let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_QDD
  let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Val
  write 1 from $REPORT_DATA

  close 1



  graphic                                        ( ,1,149)    horz-line

End-Procedure




!**************************************************************************
! Procedure: Print_Dtl-Footer
!            Print Footer for Detail Report .
!**************************************************************************
Begin-procedure Print_Dtl-Footer


print $DTL_FOOTER1                        ( +3, {Col3}, )      BOLD
print $DTL_FOOTER2                        (   , {Col41}, )      BOLD
print $DTL_FOOTER3                        (   , {Col100}, )     BOLD
print $YEAR                               (   , {Col114}, )     BOLD
PRINT $MONTH                              (   , {Col121}, )     BOLD
PRINT $DATE                               (   , {Col129}, )     BOLD

print $Filling_Dt_day                     (   , {Col127}, )
PRINT $Filling_Dt_mon                     (   , {Col119}, )
PRINT $Filling_Dt_yr                      (   , {Col110}, )

End-Procedure


!**************************************************************************
! Procedure: Select-Parameters
!            Select-Parameters
!**************************************************************************
Begin-procedure Select-Parameters


begin-select
RC.GPCN_MONTHCD
RC.GPCN_YEARCD
RC.GPCN_RECREATE
RC.BGN_DT
RC.END_DT
RC.GPCN_TAX_AREA
RC.GPCN_CATGRY_INCOME
RC.GPCN_EMP_TYPE
RC.GPCN_OUTPUT_OPT
RC.GPCN_FILING_DT
RC.GPCN_PAYMNT_DT
RC.GPCN_PAY_ENTITY
RC.GPCN_TAXSORT_KEY1
RC.GPCN_TAXSORT_KEY2
RC.GPCN_TAXSORT_KEY3

  Let $Tax_Area      = &RC.GPCN_TAX_AREA
  Let $Month_Cd      = &RC.GPCN_MONTHCD
  Let $Year_Cd       = &RC.GPCN_YEARCD
  Let $Sort_Key1     = &RC.GPCN_TAXSORT_KEY1
  Let $Sort_Key2     = &RC.GPCN_TAXSORT_KEY2
  Let $Sort_Key3     = &RC.GPCN_TAXSORT_KEY3
  Let $Cat_Income    = &RC.GPCN_CATGRY_INCOME
  Let $Output_Opt    = &RC.GPCN_OUTPUT_OPT
  Let $Payment_Dt    = &RC.GPCN_PAYMNT_DT


  Let $Payment_Dt = edit(&RC.GPCN_PAYMNT_DT,'yyyy/mm/dd')


  If $Cat_Income = '1'
    let $Income_Category = 'SW'
    Let $Inc_Category    = $SUM_CAT_SALARY
  else
  If $Cat_Income = '2'
    let $Income_Category = 'AB'
    Let $Inc_Category    = $SUM_CAT_ANNUAL
  else
    let $Income_Category = 'SV'
    Let $Inc_Category    = $SUM_CAT_SEVERANCE
  End-if
  End-if


  Let $Emp_Type      = rtrim(ltrim(&RC.GPCN_EMP_TYPE, ' '), ' ')
  Let $Pay_Entity_RC = rtrim(ltrim(&RC.GPCN_PAY_ENTITY, ' '), ' ')

  Let $Pay_Entity_Sel = $Pay_Entity_RC || '%'

  If $Cat_Income = '1'
   Let $Cat_Inc_sel = 'SW'
  ELSE
   IF $Cat_Income = '2'
    Let $Cat_Inc_sel = 'AB'
   ELSE
    Let $Cat_Inc_sel = 'SV'
  END-IF
  END-IF


    evaluate $Emp_Type
        when = '1'
              let $Emp_Type_CAT  =  'AND (TAX.GPCN_EMP_TYPE = ''LOC'' OR TAX.GPCN_EMP_TYPE = ''DIS'')'
        when = '2'
              let $Emp_Type_CAT  =  'AND (TAX.GPCN_EMP_TYPE = ''EXP'')'
        when = '3'
              Let $Emp_Type_CAT  =  'AND (TAX.GPCN_EMP_TYPE = ''REM'')'
        when = '4'
              let $Emp_Type_CAT  =  'AND (TAX.GPCN_EMP_TYPE = ''LOC'' OR TAX.GPCN_EMP_TYPE = ''DIS'' OR TAX.GPCN_EMP_TYPE = ''EXP'' OR TAX.GPCN_EMP_TYPE = ''REM'')'
        when-other
              break
   end-evaluate


!  SHOW '$Pay_Entity_RC ' $Pay_Entity_RC
!  SHOW '$Emp_Type ' $Emp_Type

  do Sort-Order
  do Emp-Type
!  do Pay-Entity-Sel

  Let $Filling_Dt = edit(&RC.GPCN_FILING_DT,'ddmmyyyy')
  let $Filling_Dt_day = substr($Filling_Dt,1,2)
  let $Filling_Dt_mon = substr($Filling_Dt,3,2)
  let $Filling_Dt_yr = substr($Filling_Dt,5,4)

from PS_GPCN_TAX_RPT_RC RC

 WHERE  RC.OPRID          = $Prcs_OprID
 AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select

!SHOW '$Prcs_OprID       ' $Prcs_OprID
!SHOW '$Prcs_Run_Cntl_ID ' $Prcs_Run_Cntl_ID

end-procedure



!**************************************************************************
! Procedure: Emp-Type
!            Emp-Type selection for Detail Report.
!**************************************************************************

Begin-procedure Emp-Type

   evaluate $Emp_Type
        when = '1'
              let $Emp_Type_sel  =  'AND (TX.GPCN_EMP_TYPE = ''LOC'' OR TX.GPCN_EMP_TYPE = ''DIS'')'
        when = '2'
              let $Emp_Type_sel  =  'AND (TX.GPCN_EMP_TYPE = ''EXP'')'
        when = '3'
              Let $Emp_Type_sel  =  'AND (TX.GPCN_EMP_TYPE = ''REM'')'
        when = '4'
              let $Emp_Type_sel  =  'AND (TX.GPCN_EMP_TYPE = ''LOC'' OR TX.GPCN_EMP_TYPE = ''DIS'' OR TX.GPCN_EMP_TYPE = ''EXP'' OR TX.GPCN_EMP_TYPE = ''REM'')'
        when-other
              break
   end-evaluate

end-procedure

!**************************************************************************
! Procedure: Sort-Order
!            Sort Order selection for Detail Report.
!**************************************************************************

Begin-procedure Sort-Order


 Let $sort_order = 'ORDER BY TX.GPCN_TAX_RATE '

  If $Sort_Key1 <> '0'
     evaluate $Sort_Key1
          when = '1'
                let $Sort_Order1  = ',TX.GP_PAYGROUP '
          when = '2'
                let $Sort_Order1  = ',TX.EMPLID '
          when = '3'
                let $Sort_Order1  = ',PERS.NAME_AC '        !               ',PERS.NAME '
          when-other
                break
     end-evaluate
  End-if
!  SHOW  $Sort_Order1
  If $Sort_Key2 <> '0'
     evaluate $Sort_Key2
          when = '1'
                let $Sort_Order2  = ',TX.GP_PAYGROUP '
          when = '2'
                let $Sort_Order2  = ',TX.EMPLID '
          when = '3'
                let $Sort_Order2  = ',PERS.NAME_AC '        !               ',PERS.NAME '
          when-other
                break
     end-evaluate
  End-if
!   SHOW $Sort_Order2
  If $Sort_Key3 <> '0'
     evaluate $Sort_Key3
          when = '1'
                let $Sort_Order3  = ',TX.GP_PAYGROUP '
          when = '2'
                let $Sort_Order3  = ',TX.EMPLID '
          when = '3'
                let $Sort_Order3  = ',PERS.NAME_AC '        !               ',PERS.NAME '
          when-other
                break
     end-evaluate
  End-if
!   SHOW $Sort_Order3

  String $sort_order $Sort_order1 $Sort_order2 $Sort_order3 by ' ' into $sort_order
!  show   $sort_order

end-procedure

!**************************************************************************
! Procedure: Print_Sum_Heading
! Description:  Print the headings breakup accross page
!**************************************************************************

begin-procedure Print_Sum_Heading


!  NEW-PAGE


  graphic                                   ( 5, {Col3} ,147)     horz-line
  graphic                                   (  , {Col3}  , 59)      vert-line
  graphic                                   (  , {Col150}  , 59)      vert-line
  graphic                                   ( 64, {Col3} ,147)     horz-line



   print $SUM_HEADER_C                        ( 6 ,{Col65})         Bold
   print $SUM_HEADER_E                        ( 8 ,{Col65})         Bold

   graphic                                   (+1, {Col5}  ,65)     horz-line
   graphic                                   (  , {Col5}  , 3)      vert-line
   graphic                                   (  , {Col70}  , 3)      vert-line


   do Get_Agent_File_No
   do Get-Company-details


   print $SUM_AGENT_NUM_C                      (+1, {Col5})         Bold
   Print $Tax_Reg_no                         (  , {Col28})
   print $SUM_DATE_FILLING_C                   (  ,{Col100})         Bold
   print $YEAR_C                              (   , {Col114}, )     BOLD
   PRINT $MONTH_C                              (   , {Col121}, )     BOLD
   PRINT $DATE_C                                 (   , {Col129}, )     BOLD
   print $Filling_Dt_day                     (   , {Col127}, )
   PRINT $Filling_Dt_mon                     (   , {Col119}, )
   PRINT $Filling_Dt_yr                      (   , {Col110}, )
   print $SUM_DATE_FILLING_E                   ( +1,{Col100})        Bold
   print $YEAR_E                               (   , {Col114}, )     BOLD
   PRINT $MONTH_E                              (   , {Col121}, )     BOLD
   PRINT $DATE_E                                 (   , {Col129}, )     BOLD
   print $Filling_Dt_day                     (   , {Col127}, )
   PRINT $Filling_Dt_mon                     (   , {Col119}, )
   PRINT $Filling_Dt_yr                      (   , {Col110}, )
   print $SUM_AGENT_NUM_E                      (+1, {Col5})         Bold
   Print $Tax_Reg_no                         (  , {Col28})
   graphic                                   ( , {Col5}  ,65)     horz-line
   Print $SUM_MON_UNIT_C                         (  ,{Col100})         Bold
   Print $RMB_YUAN_C                           (  ,{Col110})
   Print $SUM_MON_UNIT_E                         ( +1,{Col100})        Bold
   Print $RMB_YUAN_E                           (  ,{Col110})


   String $SUM_INFO1_C $SUM_INFO2_C $SUM_INFO3_C $SUM_INFO4_C $SUM_INFO5_C by ' ' into $translation_1
   print $translation_1                        ( +2,{Col5})         Bold  wrap 196 5
   Print $SUM_INFO1_E                          ( +2,{Col5})         Bold
   print $SUM_INFO2_E                          (   ,{Col53})        Bold
   print $SUM_INFO3_E                          (   ,{Col98})        Bold
   print $SUM_INFO4_E                          ( ,{Col5})         Bold
   print $SUM_INFO5_E                          (   ,{Col58})        Bold


   graphic                                   (+1, {Col5}  ,145)     horz-line
   graphic                                   (  , {Col5}  , 1)      vert-line
   graphic                                   (  , {Col65} , 1)      vert-line
   graphic                                   (  , {Col125}, 1)      vert-line
   graphic                                   (  , {Col150}, 1)      vert-line



   Print $SUM_AGENTS_NAME_C                    ( +1 ,{Col5})
   Print $SUM_AGENTS_NAME_E                    (    ,{Col22})
   Print $Pay_Entity_Name                    (    ,{Col40})
   Print $ADDRESS_C                            (    ,{Col66})
   Print $ADDRESS_E                            (    ,{Col71})
   Print $Address_PE                         (    ,{Col77})
   Print $SUM_PHONE_NO_C                       (    ,{Col126})
   Print $SUM_PHONE_NO_E                       (    ,{Col133})


   graphic                                   ( ,5,145)          horz-line
   graphic                                   ( , {Col5},   11)   vert-line
   graphic                                   ( , {Col10},  11)   vert-line
   graphic                                   ( , {Col15},  11)   vert-line
   graphic                                   ( , {Col20},  11)   vert-line
   graphic                                   ( , {Col29},  11)   vert-line
   graphic                                   ( , {Col35},  11)   vert-line
   graphic                                   ( , {Col85},  11)  vert-line
   graphic                                   ( , {Col95},  11)  vert-line
   graphic                                   ( , {Col107}, 11)  vert-line
   graphic                                   ( , {Col111}, 11)  vert-line
   graphic                                   ( , {Col123}, 11)  vert-line
   graphic                                   ( , {Col135}, 11)  vert-line
   graphic                                   ( , {Col140}, 11)  vert-line
   graphic                                   ( , {Col150}, 11)  vert-line

   graphic                                   (23 ,35,50)        horz-line
   graphic                                   (23 , {Col47}, 10)  vert-line
   graphic                                   (23 , {Col73}, 10)  vert-line

   graphic                                   (24 ,47,26)        horz-line
   graphic                                   (24 , {Col54}, 9)  vert-line
   graphic                                   (24 , {Col59}, 9)  vert-line
   graphic                                   (24 , {Col66}, 9)  vert-line


  Print  $SUM_EE_NAME_C                      ( 23   ,{Col5})     WRAP  7 4
  Print  $SUM_EE_NO_C                        ( 23   ,{Col10})    WRAP  7 4
  Print  $SUM_UNIT_ADDR_C                    ( 23   ,{Col15})    WRAP  7 4
  Print  $SUM_CAT_INCOME_C                   ( 23   ,{Col20})    WRAP  10 3
  Print  $SUM_INCOME_PRD_C                   ( 23   ,{Col30})    WRAP  6 3
  Print  $SUM_RECEIPTS_C                     ( 23   ,{Col50})
  Print  $SUM_RECEIPTS_E                     ( 23   ,{Col60})
  Print  $SUM_DEDUCTIONS_C                   ( 23   ,{Col86})
  Print  $SUM_TAX_INCOME_C                   ( 23   ,{Col96})    WRAP  8 2
  Print  $SUM_TAX_RATE_C                     ( 23   ,{Col108})   WRAP  5 2
  Print  $SUM_QCK_CALDED_C                   ( 23   ,{Col112})   WRAP 12 3
  Print  $SUM_AMT_TAX_WITH_C                 ( 23   ,{Col124})   WRAP  10 3
  Print  $SUM_CERT_NO_C                      ( 23   ,{Col135})   WRAP  6 5
  Print  $SUM_PYMT_DATE_C                    ( 23   ,{Col141})   WRAP  10 3
  Print  $SUM_FOR_CURRENCY_C                 ( 24, {Col47})
  Print  $SUM_FOR_CURRENCY_E                 ( 24, {Col58})
  Print  $TOTAL_C                            ( 24, {Col74})
  Print  $RMB_C                              ( 25, {Col36})
  Print  $SUM_NAME_CURR_C                    ( 25, {Col47})      WRAP 8 3
  Print  $AMOUNT_C                           ( 25, {Col54})
  Print  $SUM_EXCG_RATE_C                    ( 25, {Col59})      WRAP 8 3
  Print  $SUM_RMB_CON_C                      ( 25, {Col66})      WRAP 9 3

  Print  $SUM_EE_NAME_E                        ( 29   ,{Col5})     WRAP  7 4
  Print  $SUM_EE_NO_E                          ( 29   ,{Col10})    WRAP  7 4
  Print  $SUM_UNIT_ADDR_E                      ( 29   ,{Col15})    WRAP  7 4
  Print  $SUM_CAT_INCOME_E                     ( 29   ,{Col20})    WRAP  10 3
  Print  $SUM_INCOME_PRD_E                     ( 29   ,{Col30})    WRAP  6 3
  Print  $SUM_DEDUCTIONS_E                     ( 29   ,{Col86})
  Print  $SUM_TAX_INCOME_E                     ( 29   ,{Col96})    WRAP  8 2
  Print  $SUM_TAX_RATE_E                       ( 29   ,{Col108})   WRAP  5 2
  Print  $SUM_QCK_CALDED_E                     ( 29   ,{Col112})   WRAP 12 3
  Print  $SUM_AMT_TAX_WITH_E                   ( 29   ,{Col124})   WRAP  10 3
  Print  $SUM_CERT_NO_E                        ( 29   ,{Col135})   WRAP  8 5
  Print  $SUM_PYMT_DATE_E                      ( 29   ,{Col141})   WRAP  10 3
  Print  $RMB_E                                ( 29   ,{Col36})
  Print  $TOTAL_E                              ( 29   ,{Col74})
  Print  $SUM_NAME_CURR_E                      ( 29   ,{Col47})    WRAP 8 3
  Print  $AMOUNT_E                             ( 29   ,{Col54})
  Print  $SUM_EXCG_RATE_E                        ( 29   ,{Col59})    WRAP 8 3
  Print  $SUM_RMB_CON_E                        ( 29   ,{Col66})    WRAP 9 3


  graphic                                    ( 32,5,145) horz-line

        Let $Report_Type  = 'Summary'

        MOVE '{FILEPREFIX}' to $Filename
        let $Filename = $Filename || $Pay_Entity1
        let $Filename = $Filename || '-'
        let $Filename = $Filename || $Tax_Area
        let $Filename = $Filename || '-'
        let $Filename = $Filename || $Month_Cd
        let $Filename = $Filename || $Year_Cd
        let $Filename = $Filename || '-'
        let $Filename = $Filename || $Report_Type
        let $Filename = $Filename || '.csv{FILESUFFIX}'

#ifdef debugy
        show '$Filename : ' $Filename
#end-if

        open $Filename as 1 for-writing record=9999:vary
        status = #filestat
        if #filestat != 0
            show 'Cannot open file ' $Filename
        end-if

        let $REPORT_HDR = $Tax_Reg_no
        let $REPORT_HDR = $REPORT_HDR || ',' || $Filling_Dt_yr
        let $REPORT_HDR = $REPORT_HDR || ',' || $Filling_Dt_mon
        let $REPORT_HDR = $REPORT_HDR || ',' || $Filling_Dt_day
        let $REPORT_HDR = $REPORT_HDR || ',' || $RMB_YUAN
        write 1 from $REPORT_HDR



end-procedure


!**************************************************************************
! Procedure: Summary_Report
! Description:  Summary_Report
!**************************************************************************

begin-procedure Summary_Report


     Let #Total_Empl    =  0
     let $First_EE      = 'Y'



begin-SELECT DISTINCT

TAX.GPCN_TAX_AREA    &TAX.GPCN_TAX_AREA1
PE.PAY_ENTITY        &PE.PAY_ENTITY1



  Let $Tax_Area1    =  rtrim(ltrim(&TAX.GPCN_TAX_AREA1 , ' '), ' ')
  Let $Pay_Entity1  =  rtrim(ltrim(&PE.PAY_ENTITY1 , ' '), ' ')
  Let $Pay_Entity   =  $Pay_Entity1


!  SHOW  $Tax_Area1
!  SHOW  $Pay_Entity1

 do Print_Sum_Heading

 ! Let #Total_Empl    = 0

 do Summary_Process

 do Print_Sum_Footer

    NEW-PAGE

FROM    PS_GPCN_TAX_RPTG   TAX
      , PS_GP_PYENT        PE
      , PS_GP_PYGRP        PG

where  TAX.GPCN_MONTHCD   =  &RC.GPCN_MONTHCD
AND    TAX.GPCN_YEARCD    =  &RC.GPCN_YEARCD
AND    TAX.GPCN_TAX_AREA  =  &RC.GPCN_TAX_AREA
AND    TAX.GP_PAYGROUP    =  PG.GP_PAYGROUP
AND    PG.PAY_ENTITY      =  PE.PAY_ENTITY
AND    PE.PAY_ENTITY      LIKE  $Pay_Entity_Sel
AND    TAX.GPCN_INC_CATEGORY  =  $Cat_Inc_sel
[$Emp_Type_CAT]

end-SELECT

end-procedure




!**************************************************************************
! Procedure: Summary_Process
! Description:  Summary_Process
!**************************************************************************
begin-procedure Summary_Process


Let #Total_Empl  = 0

Let #Tax_RATE1 = 0

!let #page-count = 1


Let #Tax_RATE1            =  0
Let #Emp_Count            =  0
Let #Monthly_Inc          =  0
Let #Exempt_Amt           =  0
Let #Taxable_Inc          =  0
Let #Quick_Cald           =  0
Let #Inc_Tax              =  0
Let #Total_Tax            =  0
Let #Total_Emp_Count      =  0
Let #Total_Monthly_Inc    =  0
Let #Total_Exempt_Amt     =  0
Let #Total_Taxable_Inc    =  0
Let #Total_Quick_Cald     =  0


begin-SELECT on-error=SQL-Error

TX.EMPLID                       &TX.EMPLID1
PERS.NAME                       &PERS.NAME1
PERS.NAME_AC                    &PERS.NAME_AC1
!NID.NATIONAL_ID                 &NID.NATIONAL_ID1
TX.GPCN_MONTHCD                 &TX.GPCN_MONTHCD1
TX.GPCN_YEARCD                  &TX.GPCN_YEARCD1
TX.GP_PAYGROUP                  &TX.GP_PAYGROUP1
TX.GPCN_INC_CATEGORY            &TX.GPCN_INC_CATEGORY1
TX.GPCN_EMP_TYPE                &TX.GPCN_EMP_TYPE1
TX.GPCN_TAX_RATE                &TX.GPCN_TAX_RATE1
SUM(TX.GPCN_TAX_TOT_GROSS)      &TX.GPCN_TAX_TOT_GROSS1  ! NEW
SUM(TX.GPCN_TAX_EXEMPTION)      &TX.GPCN_TAX_EXEMPTION1
SUM(TX.GPCN_TOT_TAXABLE)        &TX.GPCN_TOT_TAXABLE1    ! NEW
SUM(TX.GPCN_TAX_QUICK_CAL)      &TX.GPCN_TAX_QUICK_CAL1  ! NEW
SUM(TX.GPCN_TAX_AMT)            &TX.GPCN_TAX_AMT1        ! NEW
PYE.PAY_ENTITY                  &PYE.PAY_ENTITY1



  Let $Emplid         = rtrim(ltrim(&TX.EMPLID1   , ' '), ' ')
  Let $EmployeeName   = rtrim(ltrim(&PERS.NAME1   , ' '), ' ')
  Let $EmployeeACName = rtrim(ltrim(&PERS.NAME_AC1, ' '), ' ')
!  Let $Empl_Nid       = rtrim(ltrim(&NID.NATIONAL_ID1, ' '), ' ')
  let $GP_Paygroup    = rtrim(ltrim(&TX.GP_PAYGROUP1, ' '), ' ')



  Let #Tax_RATE           =    &TX.GPCN_TAX_RATE1
  Let #TAX_TOT_GROSS      =    &TX.GPCN_TAX_TOT_GROSS1
  Let #TAX_EXEMPTION      =    &TX.GPCN_TAX_EXEMPTION1
  Let #TOT_TAXABLE        =    &TX.GPCN_TOT_TAXABLE1
  Let #TAX_QUICK_CAL      =    &TX.GPCN_TAX_QUICK_CAL1
  Let #TAX_AMT            =    &TX.GPCN_TAX_AMT1



      If $Income_Category = 'AB'
       Let #Tax_EXEMPTION = 0
      End-If

    Let #Total_Empl      = #Total_Empl + 1


    If #Tax_RATE1   =   #Tax_RATE

        Let #Emp_Count   = #Emp_Count       + 1
     if #TAX_TOT_GROSS >= 0
        Let #Monthly_Inc = #Monthly_Inc     + #TAX_TOT_GROSS            ! v1
     end-if
        Let #Exempt_Amt  = #Exempt_Amt      + #TAX_EXEMPTION            ! v2
        Let #Taxable_Inc = #Taxable_Inc     + #TOT_TAXABLE              ! v3
        Let #Quick_Cald  = #Quick_Cald      + #TAX_QUICK_CAL            ! v4
     If #TAX_AMT > 0
        Let #Inc_Tax     = #Inc_Tax         + #TAX_AMT
     End-If


    else

        do Print_Summary_Value


        Let #Emp_Count = 1
        Let #Monthly_Inc =  #TAX_TOT_GROSS              ! v1
        Let #Exempt_Amt  =  #TAX_EXEMPTION              ! v2
        Let #Taxable_Inc =  #TOT_TAXABLE                ! v3
        Let #Quick_Cald  =  #TAX_QUICK_CAL              ! v4
        Let #Inc_Tax     =  #TAX_AMT
        Let #Tax_RATE1  =   #Tax_RATE


     End-If


  FROM PS_GPCN_TAX_RPTG TX,
  PS_PERSON_NAME PERS,
!  PS_PERS_NID NID,
  PS_GP_PYGRP PYG,
  PS_GP_PYENT PYE


  WHERE TX.EMPLID = PERS.EMPLID
!  AND   TX.EMPLID = NID.EMPLID
  AND   TX.GPCN_MONTHCD = &RC.GPCN_MONTHCD
  AND   TX.GPCN_YEARCD =  &RC.GPCN_YEARCD
  AND   TX.GP_PAYGROUP =  PYG.GP_PAYGROUP
  AND   TX.GPCN_TAX_AREA  = &RC.GPCN_TAX_AREA
  AND   TX.GPCN_INC_CATEGORY = $Income_Category
  AND   PYG.PAY_ENTITY = PYE.PAY_ENTITY
  AND   PYE.PAY_ENTITY = $Pay_Entity1

  [$Emp_Type_Sel]



  GROUP BY TX.EMPLID,
  PERS.NAME,
  PERS.NAME_AC,
!  NID.NATIONAL_ID,
  TX.GP_PAYGROUP,
  TX.GPCN_MONTHCD,
  TX.GPCN_YEARCD,
  TX.GPCN_TAX_RATE,
  TX.GPCN_EMP_TYPE,
  TX.GPCN_INC_CATEGORY,
  PYE.PAY_ENTITY

  [$sort_order]

End-Select

 do Print_Summary_Value
 do Print_Summary_Total


End-Procedure




!**************************************************************************
! Procedure: Print_Summary_Value
!            Print_Summary_Value
!**************************************************************************
Begin-procedure Print_Summary_Value


 Let $Taxable_Month = rtrim(ltrim($Year_Cd,' '),' ')||'/'||ltrim(rtrim($Month_Cd,' '),' ')

        If  #Emp_Count > 0

               graphic                                   ( , {Col5},   1)   vert-line
               graphic                                   ( , {Col10},  1)   vert-line
               graphic                                   ( , {Col15},  1)   vert-line
               graphic                                   ( , {Col20},  1)   vert-line
               graphic                                   ( , {Col29},  1)   vert-line
               graphic                                   ( , {Col35},  1)   vert-line
               graphic                                   ( , {Col85},  1)   vert-line
               graphic                                   ( , {Col95},  1)   vert-line
               graphic                                   ( , {Col107}, 1)   vert-line
               graphic                                   ( , {Col111}, 1)   vert-line
               graphic                                   ( , {Col123}, 1)   vert-line
               graphic                                   ( , {Col135}, 1)   vert-line
               graphic                                   ( , {Col140}, 1)   vert-line
               graphic                                   ( , {Col150}, 1)   vert-line
               graphic                                   ( , {Col47},  1)   vert-line
               graphic                                   ( , {Col54},  1)   vert-line
               graphic                                   ( , {Col59},  1)   vert-line
               graphic                                   ( , {Col66},  1)   vert-line
               graphic                                   ( , {Col73},  1)   vert-line


           Let #Tax_Percent     =  #Tax_RATE1  * 100
           Let $Tax_Per         =  #Tax_Percent

            print #Emp_Count                         (+1, {Col2})      edit '9999999'
            Print $Inc_Category                      (  , {Col20})
            Print $Taxable_Month                     (  , {Col30})
!           print #Monthly_Inc                       (  , {Col36})      edit '9999999.99'
            print #Monthly_Inc                       (  , {Col74})      edit '9999999.99'
            print #Exempt_Amt                        (  , {Col86})      edit '9999999.99'
            print #Taxable_Inc                       (  , {Col96})     edit '9999999.99'
            Print $Tax_Per                           (  , {Col108})     edit '99'
            Print '%'                                (  , {Col110})
            print #Quick_Cald                        (  , {Col112})     edit '9999999.99'
            print #Inc_Tax                           (  , {Col124})     edit '9999999.99'
            Print $Payment_Dt                        (  , {Col141})



            Let #Total_Tax              =  #Total_Tax         +   #Inc_Tax
            Let #Total_Emp_Count        =  #Total_Emp_Count   +   #Emp_Count
            Let #Total_Monthly_Inc      =  #Total_Monthly_Inc +   #Monthly_Inc
            Let #Total_Exempt_Amt       =  #Total_Exempt_Amt  +   #Exempt_Amt
            Let #Total_Taxable_Inc      =  #Total_Taxable_Inc +   #Taxable_Inc
            Let #Total_Quick_Cald       =  #Total_Quick_Cald  +   #Quick_Cald



            graphic                                  (  ,{Col5},145) horz-line


             move #LineNum        to $LineNum       000000000

             move #Emp_Count      to $Emp_cnt       0000000
             move #Monthly_Inc    to $Tax_Mon       0000000.00
             move #Exempt_Amt     to $Tax_Exe       0000000.00
             move #Taxable_Inc    to $Tax_Inc       0000000.00
             move #Quick_Cald     to $Tax_QDD       0000000.00
             move #Inc_Tax        to $Tax_Val       0000000.00


             Let $Emp_Count       =  rtrim(ltrim($Emp_cnt, ' '), ' ')
             let $Inc_Category    =  rtrim(ltrim($Inc_Category, ' '), ' ')
             let $Taxable_Month   =  rtrim(ltrim($Taxable_Month, ' '), ' ')
!            let $Tax_Mon         = rtrim(ltrim($Tax_Mon, ' '), ' ')
             let $Tax_Mon         = rtrim(ltrim($Tax_Mon, ' '), ' ')
             let $Tax_Exe         = rtrim(ltrim($Tax_Exe, ' '), ' ')
             let $Tax_Inc         = rtrim(ltrim($Tax_Inc, ' '), ' ')
             let $Tax_Per         = rtrim(ltrim($Tax_Per, ' '), ' ')
             let $Tax_QDD         = rtrim(ltrim($Tax_QDD, ' '), ' ')
             let $Tax_Val         = rtrim(ltrim($Tax_Val, ' '), ' ')
             let $Payment_Dt      = rtrim(ltrim($Payment_Dt, ' '), ' ')


             let $REPORT_DATA = $Emp_Count
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || $Inc_Category
             let $REPORT_DATA = $REPORT_DATA || ',' || $Taxable_Month
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '                  ! $Tax_Mon
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Mon
             let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Exe
             let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Inc
             let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Per
             let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_QDD
             let $REPORT_DATA = $REPORT_DATA || ',' || $Tax_Val
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || $Payment_Dt
             write 1 from $REPORT_DATA


       End-If

End-Procedure



!**************************************************************************
! Procedure: Print_Summary_Total
!            Print_Summary_Total
!**************************************************************************
Begin-procedure Print_Summary_Total

          graphic                                   ( , {Col5},   1)   vert-line
          graphic                                   ( , {Col10},  1)   vert-line
          graphic                                   ( , {Col85},  1)   vert-line
          graphic                                   ( , {Col95},  1)   vert-line
          graphic                                   ( , {Col107}, 1)   vert-line
          graphic                                   ( , {Col111}, 1)   vert-line
          graphic                                   ( , {Col123}, 1)   vert-line
          graphic                                   ( , {Col135}, 1)   vert-line
          graphic                                   ( , {Col150}, 1)   vert-line


          print #Total_Emp_Count                    (+1, {Col2})      edit '9999999'
          print $TOTAL_C                              ( , {Col54})
          print $TOTAL_E                              ( , {Col66})

          print #Total_Monthly_Inc                  (  , {Col74})      edit '9999999.99'
          print #Total_Exempt_Amt                   (  , {Col86})      edit '9999999.99'
          print #Total_Taxable_Inc              (  , {Col96})     edit '9999999.99'
          print #Total_Quick_Cald                   (  , {Col112})     edit '9999999.99'
          print #Total_Tax                          (  , {Col124})     edit '9999999.99'


         graphic                                        ( ,{Col5},145)    horz-line




             move #LineNum             to $LineNum                    000000000

             move #Total_Emp_Count     to $Total_Emp_cnt              0000000
             move #Total_Monthly_Inc   to $Total_Monthly_Inc          0000000.00
             move #Total_Exempt_Amt    to $Total_Exempt_Amt           0000000.00
             move #Total_Taxable_Inc   to $Total_Taxable_Inc          0000000.00
             move #Total_Quick_Cald    to $Total_Quick_Cald           0000000.00
             move #Total_Tax           to $Total_Tax                  0000000.00


             Let $Total_Emp_cnt       =  rtrim(ltrim($Total_Emp_cnt, ' '), ' ')
             let $Total_Monthly_Inc   =  rtrim(ltrim($Total_Monthly_Inc, ' '), ' ')
             let $Total_Exempt_Amt    =  rtrim(ltrim($Total_Exempt_Amt, ' '), ' ')
             let $Total_Taxable_Inc   =  rtrim(ltrim($Total_Taxable_Inc, ' '), ' ')
             let $Total_Quick_Cald    =  rtrim(ltrim($Total_Quick_Cald, ' '), ' ')
             let $Total_Tax           =  rtrim(ltrim($Total_Tax, ' '), ' ')



             let $REPORT_DATA = $Total_Emp_cnt
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || $TOTAL
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || $Total_Monthly_Inc
             let $REPORT_DATA = $REPORT_DATA || ',' || $Total_Exempt_Amt
             let $REPORT_DATA = $REPORT_DATA || ',' || $Total_Taxable_Inc
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || $Total_Quick_Cald
             let $REPORT_DATA = $REPORT_DATA || ',' || $Total_Tax
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             let $REPORT_DATA = $REPORT_DATA || ',' || ' '
             write 1 from $REPORT_DATA

             close 1


End-Procedure


!**************************************************************************
! Procedure: Print_Sum_Footer
!            Print_Sum_Footer
!**************************************************************************
Begin-procedure Print_Sum_Footer


String $SUM_INFO6_C $SUM_INFO7_C $SUM_INFO8_C  by ' ' into $translation_2
print  $translation_2            (+1,{Col27} )
Print $SUM_INFO6_E                (+1,{Col27})
Print $SUM_INFO7_E                (  ,{Col83})
Print $SUM_INFO8_E                (  ,{Col115})


graphic                         ( +1,5,145 )        horz-line
graphic                         (   ,{Col5},  4 )   vert-line
graphic                         (   ,{Col150},4 )   vert-line

Print $SUM_INFO9_C              (+1 ,{Col5})


String $SUM_INFO11_C $SUM_INFO2_C $SUM_INFO12_C  by ' ' into $translation_3
print  $translation_3            (,{Col40} )    wrap   116 40
If lengthp($SUM_INFO10_C) <> length($SUM_INFO10_C)
   Print $SUM_INFO10_C             (  ,{Col12} )
Else
   Print $SUM_INFO10_C             (  ,{Col5} )
End-If
Print $SIGNATURE_C              (   ,{Col120} )


Print $SUM_INFO9_E                ( +2, {Col5},)

Print $SUM_INFO11_E               (  , {Col40} )
Print $SUM_INFO2_E                (  , {Col74} )
Print $SUM_INFO12_E               (  +1, {Col40} )
Print $SUM_INFO10_E               (  ,{Col5})
Print $SIGNATURE_E                (  ,{Col120})

graphic                         ( ,5,145 )          horz-line


Print $SUM_GEN_ACC_C            ( +1 , {Col10} )
Print $SUM_RES_OFF_C            (    , {Col50} )
Print $SUM_WITH_AGENT_C         (    , {Col90} )

Print $SUM_GEN_ACC_E              ( +1 , {Col10} )
Print $SUM_RES_OFF_E              (    , {Col50} )
Print $SUM_WITH_AGENT_E           (    , {Col90} )

Print $SUM_FOOTER1_C              ( +1   , {Col10} )
Print $SUM_FOOTER1_E              (      , {Col30} )
graphic                         ( ,5,145 )          horz-line

graphic                         (   ,{Col5},4 )     vert-line
graphic                         (   ,{Col100},4 )   vert-line
graphic                         (   ,{Col150},4 )   vert-line
graphic                         (   ,{Col33},1 )    vert-line
graphic                         (   ,{Col67},1 )    vert-line

Print $SUM_FOOTER2_C            ( +1   , {Col7} )
Print $SUM_FOOTER3_C            (    , {Col35} )
Print $SUM_FOOTER4_C            (    , {Col68} )

graphic                         ( ,5,95 )           horz-line

graphic                         (   ,{Col40},3 )    vert-line
graphic                         (   ,{Col65},3 )    vert-line

graphic                         (   ,{Col13},3 )    vert-line

Print $AUDIT_C                  ( +1   , {Col6} )
Print $SUM_FOOTER5_C            (    , {Col101} )
Print $RECORDS_C                ( +1   , {Col6} )
Print $SUM_FOOTER6_C            (    , {Col101} )

graphic                         ( +1,5,145)          horz-line

Print $SUM_INFO13_C             ( +1   , {Col55} )
Print $SUM_INFO13_E               (    , {Col95} )


End-Procedure


!**************************************************************************
! Procedure: Get_Agent_File_No
!            Get_Agent_File_No
!**************************************************************************
Begin-procedure Get_Agent_File_No


Begin-Select DISTINCT
TX.PAY_ENTITY    &TX.PAY_ENTITY2
TX.GPCN_REG_NO   &TX.GPCN_REG_NO2


  Let $Tax_Reg_No =  &TX.GPCN_REG_NO2



from PS_GPCN_TAX_REG TX
,PS_GP_PYENT PE

Where TX.PAY_ENTITY = PE.PAY_ENTITY
AND   TX.PAY_ENTITY = $Pay_Entity1
AND   TX.GPCN_CONTRIB_AREA = &RC.GPCN_TAX_AREA
AND   TX.EFFDT      = (SELECT MAX(EFFDT)
                       FROM PS_GPCN_TAX_REG TX1
                       WHERE TX1.PAY_ENTITY = $Pay_Entity1
                       AND   TX1.GPCN_CONTRIB_AREA = &RC.GPCN_TAX_AREA
                       AND   TX1.EFFDT <= &RC.END_DT)

End-Select

End-Procedure


!**************************************************************************
! Procedure: Get_Passport_Number
!            Get_Passport_Number
!**************************************************************************


Begin-procedure Get_Passport_Number

Begin-Select DISTINCT
PASS.EMPLID                     &PASS.EMPLID
PASS.PASSPORT_NBR               &PASS.PASSPORT_NBR


  Let $Passport_No = ' '
  Let $Passport_No = rtrim(ltrim(&PASS.PASSPORT_NBR   , ' '), ' ')


   FROM  PS_CITIZEN_PSSPRT PASS
      ,  PS_CITIZENSHIP    CITI


  where CITI.EMPLID         = PASS.EMPLID
  AND   CITI.EMPLID         = $Emplid
  AND   CITI.DEPENDENT_ID   = PASS.DEPENDENT_ID
  AND   CITI.COUNTRY        = PASS.COUNTRY
  AND   CITI.COUNTRY        = 'CHN'

end-SELECT
end-procedure




!**************************************************************************
! Procedure: Get_NID_Number
!            Get_NID_Number
!**************************************************************************

Begin-procedure Get_NID_Number

Begin-Select DISTINCT
PNID.EMPLID               &PNID.EMPLID
PNID.NATIONAL_ID          &PNID.NATIONAL_ID

  Let $NID_No = ' '
  Let $NID_No = rtrim(ltrim(&PNID.NATIONAL_ID   , ' '), ' ')

!  SHOW '$NID_No ' $NID_No

    FROM PS_PERS_NID PNID,
         PS_NID_TYPE_TBL TNID

  where PNID.EMPLID = $Emplid
  AND PNID.COUNTRY  = TNID.COUNTRY
  AND PNID.COUNTRY  = 'CHN'
  AND PNID.NATIONAL_ID_TYPE = TNID.NATIONAL_ID_TYPE
  AND PNID.NATIONAL_ID_TYPE IN ('OLDNID','NID')

end-SELECT
end-procedure


!!**************************************************************************
!! Procedure Test-Translated-Strings-Exist
!!           ZHS = Simplified Chinese Language Translation
!!**************************************************************************
!Begin-procedure Test-Translated-Strings-Exist
!
!  Let $curr_language_cd = 'ZHS'
!  Let $LanguageStringsFound = 'N'
!Begin-select
!ZHS.PROGRAM_ID
!  Let $LanguageStringsFound = 'Y'
! FROM PS_STRINGS_LNG_TBL ZHS
!    WHERE PROGRAM_ID =  $Report_ID                          ! $Report_ID
!      AND LANGUAGE_CD = $curr_language_cd                  ! $curr_language_cd
!
!End-select
!
! ! Let $test12 = ' ZHS value exists '
! ! SHOW $test12
!
!
!End-Procedure

!**************************************************************************
! Procedure: Get-Trans-PayEntity
! Description: Get the pay entity details
!**************************************************************************
begin-procedure Get-Trans-PayEntity
  Let $Pay_Entity_Name = ''
begin-SELECT on-error=SQL-Error
PYELNG.DESCR

  Let $Pay_Entity_Name = rtrim(ltrim(&PYELNG.DESCR, ' '), ' ')

FROM PS_GP_PYENT_LANG PYELNG
WHERE PYELNG.PAY_ENTITY = $Pay_Entity
AND PYELNG.LANGUAGE_CD = $curr_language_cd
END-SELECT
end-procedure

#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'number.sqc'    !Routines to format numbers
#Include 'adformat.sqc'  !Routines to format address
#Include 'readxlat.sqc'  !Routines for Translate Table
#Include 'sqrtrans.sqc'  !Routines for Strings Table
#include 'prcslng.sqc'   !Routines for report language selection
!ePay Implementation Changes begins here
#Include 'gpsspslp.sqc'     ! ePay SQC with ePay procedures
!ePay Implementation Changes ends here








































