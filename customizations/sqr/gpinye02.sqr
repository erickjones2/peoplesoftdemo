!***************************************************************************************
!     GPINYE02: Form 16                                                                *
!***************************************************************************************
!************************************************************************************
!                                                                                   *
!                                                                                   *
!                                                                                   *
! This software and related documentation are provided under a                      *
! license agreement containing restrictions on use and                              *
! disclosure and are protected by intellectual property                             *
! laws. Except as expressly permitted in your license agreement                     *
! or allowed by law, you may not use, copy, reproduce,                              *
! translate, broadcast, modify, license, transmit, distribute,                      *
! exhibit, perform, publish or display any part, in any form or                     *
! by any means. Reverse engineering, disassembly, or                                *
! decompilation of this software, unless required by law for                        *
! interoperability, is prohibited.                                                  *
! The information contained herein is subject to change without                     *
! notice and is not warranted to be error-free. If you find any                     *
! errors, please report them to us in writing.                                      *
!                                                                                   *
!                                                                                   *
! Copyright (C) 1988, 2019, Oracle and/or its affiliates.                           *
! All Rights Reserved.                                                              *
!************************************************************************************
!                                                                                   !
!       $Release:  HR92                                                             !
!           $Bug:  29668678                                                         !
!                                                                                   *
!************************************************************************************
!  Modification History:                                                            *
!                                                                                   *
!  Date         Incident                                                            *
! ----------    -----------                                                         *
! DD/MM/YYYY                                                                        *
! 27/11/2003    143428   The SQR has been updated to make it run                    *
!                        for Terminated Employee. Form 16 was printing              *
!                        wrong values for Tax dedctions.                            *
!                                                                                   *
! 13/04/2004  697165000   The SQR has been updated to include the                   *
!                         legislative changes and print Form 16AA under             *
!                         certain conditions                                        *
!                         for Terminated Employee. Form 16 was printing             *
!                         wrong values for Tax dedctions.                           *
!                                                                                   *
! 13/09/2004  717416000   The SQR has been updated to avoid the                     *
!                         overlapping and printing the EMPLID                       *
!                         multiple times.                                           *
! 10/01/2008  1718927000  Form 16 - SQL in procedure Get-Employee-Details has been  *
!                         modified to fetch maximum effective dated employee's job  *
!                         designation.                                              *
!                                                                                   *
! 06/May/2008 1705540002  The SQR has been modified to print the                    *
!                         establishment name from GPIN_REG_NAME                     *
!                         from the ESTAB_TBL_GPIN record.                           *
!                                                                                   *
! 03/Apr/2012 13861781    Changes made for 2012 Budget Changes                      *
!                                                                                   *
! 24/Apr/2012 13999868    Changes made for Form16 format issue                      *
! 20/Jun/2012 14194103    AMENDMENTS TO FINANCE BILL 2012- INSERTION OF NEW SECTION *
!                         80CCG                                                     *
!************************************************************************************
#include 'setenv.sqc'    !Set environment
#include 'rellang.sqc'

   #define Col_1        9
   #define Col_2        04
   #define Col_2a       35
   #define Col_2b       40
   #define Col_2c       37
   #define Col_2d       43
   #define Col_2e       38
   #define Col_3        25
   #define Col_3a       45
   #define Col_3b       68
   #define Col_3c       71
   #define Col_3d       61
   #define Col_4        64
   #define Col_5        77
   #define Col_5b       70
   #define Col_5a       82
   #define Col_6        85
   #define Col_6a       90
   #define Col_6b       98
   #define Col_6c       95
   #define Col_6d       105
   #define Col_7        11
   #define Col_7a       15
   #define Col_7b       20
   #define Col_7c       22
   #define Col_8        91
   #define Col_8a       103
   #define Col_9        94

Begin-Setup
  #Include 'ptset01.sqc'   ! Printer and page-size initialization
  Declare-Variable
   DATE $TERM_END_DATE
   DATE $TERM_BEG_DATE
 End-Declare
End-Setup

Begin-Program
    do Init-Processing
    do Process-Main
    !do Clear-Temp-Tables
    do stdapi-term
    do Reset
End-Program

!**************************************************************************

Begin-Procedure Init-Processing
    do Init-Datetime                ! called from datetime.sqc
    do Init-Number                  ! called from number.sqc
    do Stdapi-Init                  ! called stdapi.sqc
    do Get-Language-Codes           ! called from prcslng.sqc
    do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)
    do Get-Strings-Table
    do Get-Run-Cntrl-Dtls
    do Get-Assessment-Year
    do Get-Qua-Amt-6a
End-Procedure  !Init-Processing

!************************************************************************************!
!Purpose : This procedure gets the run control values from the run control record    !
!************************************************************************************!

Begin-Procedure Get-Run-Cntrl-Dtls
LET $Order_Clause = ''
LET $Estab_Where_Clause = ''
Begin-Select
RNCT.GPIN_REPORT_ID
RNCT.ESTABID
RNCT.CAL_PRD_ID
RNCT.BGN_DT
RNCT.END_DT
RNCT.GP_GENRPT_SORT_OPT
RNCT.CREATION_DT

       MOVE &RNCT.GP_GENRPT_SORT_OPT TO #FieldVal
       IF #FieldVal = 10
         LET $Order_Clause = 'A.EMPLID, '
       ELSE
         !LET $Order_Clause = 'NAMES2.FIRST_NAME, '
         LET $Order_Clause = 'NAMES2.FIRST_NAME,A.EMPLID,'
       END-IF
       MOVE &RNCT.ESTABID TO $EstabID
       let $EstabID = rtrim($EstabID,' ')
       MOVE &RNCT.CREATION_DT TO $Creation_Dt 'DD/MM/YYYY'
       let $Creation_Dt = rtrim($Creation_Dt,' ')

FROM PS_GPIN_PR_RC RNCT
WHERE  RNCT.OPRID = $prcs_oprid
AND RNCT.RUN_CNTL_ID = $prcs_run_cntl_id
End-Select
End-Procedure    ! Get-Run-Cntrl-Dtls

!********************************************************************************
Begin-Procedure Rep-Header
    alter-printer  point-size=11 font=5
  print 'FORM NO.16' (1,64) BOLD

    alter-printer  point-size=8 font=4
  print '[See rule 31(1)(a)]' (+1,64)
  print 'PART A' (+1,68) BOLD
  print 'Certificate under section 203 of the Income-tax Act,1961 for tax deducted at source'(+2,35) bold
  print 'on Salary'(+1,68) bold
    alter-printer  point-size=8 font=4
End-Procedure   !Rep-Header

!*******************************************************************************

Begin-Procedure Rep-Header-Form16AA

   graphic (+1,7,127) box 80
  alter-printer  point-size=10 font=5
  print 'FORM NO.16AA' (4,61) BOLD

    alter-printer  point-size=8 font=5
  print '[See third proviso to rule 12(1)(b) and rule 31(1)(a)]' (+1,51)

  alter-printer  point-size=9 font=5
  print 'Certificate for tax deducted at source from income chargeable' (+3,38) bold
  print ' under the head "Salaries"- cum- Return of income' (+1,44) bold

  alter-printer  point-size=8 font=5
  LET $declare0 ='For an individual, resident in India, where-'
  LET $declare1  = '(a) his total income includes income chargeable to income-tax under the head "Salaries";'
  LET $declare2  = '(b) the income from salaries before allowing deductions under section 16 of the Income Tax Act, 1961 does not exceed rupees one lakh fifty thousand;'
  LET $declare3  = '(c) his total income does not include income chargeable to income-tax under the head "Profits and gains of business or profession" or "Capital gains"'
  LET $declare32 =  ' or "Agricultural income"; and'
  LET $declare4  = '(d) he is not in receipt of any other income from which tax has been deducted at source by any person other than the employer.'
  let $declare2  = ltrim(rtrim($declare2,' '),' ')

  print $declare0  (+3,8)
  print $declare1  (+1,8)
  print $declare2  (+1,8)
  print $declare3  (,8)
  print $declare32 (,10)
  print $declare4  (+1,8)
End-Procedure   !Rep-Header-Form16AA


!*******************************************************************************
Begin-Procedure Check-accum-values
Begin-Select
ACCUM.CALC_RSLT_VAL
PIN.PIN_NM
!ACCUM.CAL_ID

  Move &ACCUM.CALC_RSLT_VAL TO #VALUE
  Move &PIN.PIN_NM to $PIN_NM

  Let $PIN_NM = ltrim(rtrim($PIN_NM,' '),' ')

  if $Form <> '16'
  Evaluate $PIN_NM
   when = 'TDS GROSS SALARY'
    if #VALUE <= 150000
    Let $Form='16AA'
    else
    Let $Form='16'
    end-if
   break
    when = 'TDS SALARY INCOME'
    if $Form='16AA'
     if #VALUE >0
     Let $Form='16AA'
     else
     Let $Form='16'
    end-if
    end-if
  break
  End-Evaluate
  end-if
FROM PS_GP_RSLT_ACUM_VW ACCUM, PS_GP_PIN_NM_VW PIN
WHERE ACCUM.EMPLID     =   $emplid
AND ACCUM.EMPL_RCD     =   &A.EMPL_RCD
AND ACCUM.CAL_RUN_ID   =   &A.CAL_RUN_ID
AND ACCUM.CAL_ID       =   &A.CAL_ID
AND ACCUM.GP_PAYGROUP  =   &A.GP_PAYGROUP
AND ACCUM.PIN_NUM      =   PIN.PIN_NUM
AND PIN.PIN_NM IN ('TDS GROSS SALARY' ,'TDS SALARY INCOME')
end-select


end-procedure !Check-accum-values


!*******************************************************************************
Begin-procedure Check-TDS-Tot-Tax-Income
Let $Flag='T'
BEGIN-SELECT
EARN.PIN_NUM
EARN.CALC_RSLT_VAL

       Let $Flag='F'

FROM PS_GP_RSLT_ED_VW EARN, PS_GP_PIN_NM_VW PIN1
WHERE EARN.EMPLID=&A.EMPLID
AND EARN.EMPL_RCD=&A.EMPL_RCD
AND EARN.CAL_RUN_ID=&A.CAL_RUN_ID
AND EARN.GP_PAYGROUP=&A.GP_PAYGROUP
AND EARN.CAL_ID=&A.CAL_ID
AND EARN.PIN_NUM = PIN1.PIN_NUM
AND ( PIN1.PIN_NM IN ('PREV EDU EXM','PREV HRA EXM','PREV CON EXM','INC CAP GAIN','PREV HOS EXM','LOSS CAPGAIN','INC BUS PROF','LOSS BUSPROF')
OR PIN1.PIN_NM IN ('PREV SAL','PREV PT','PREV TDS','PREV HRA','PREV LIC','PREV SAL HRA','PREV MA EXM','PREV PF'))
End-Select
If $Flag='T'
  Let $Form='16AA'
else
  Let $Form='16'
end-if
End-Procedure!Check-TDS-Tot-Tax-Income

!*******************************************************************************
Begin-Procedure Check-Pan-number

BEGIN-SELECT
PAN.NATIONAL_ID_TYPE
PAN.NATIONAL_ID

    Move &PAN.NATIONAL_ID_TYPE to $pan_type
    Move &PAN.NATIONAL_ID to $pan_num
    Let $pan_type= rtrim($pan_type,' ')
    Let $pan_num= rtrim($pan_num,' ')
    IF ($pan_type='PAN' and $pan_num <> '')
     LET $Form='16AA'
    else
     LET $Form='16'
    END-IF
FROM PS_PERS_NID PAN
where PAN.EMPLID=&A.EMPLID
END-SELECT

End-Procedure  !Check-Pan-number

!*******************************************************************************

Begin-Procedure Get-Tax-Employer
let #PERQ_EMPL = 0
Begin-select
T.CALC_RSLT_VAL

      Move &T.CALC_RSLT_VAL to #PERQ_EMPL


FROM PS_GP_RSLT_ED_VW T, PS_GP_PIN_NM_VW PIN2
where T.EMPLID=&A.EMPLID
AND T.EMPL_RCD=&A.EMPL_RCD
AND T.CAL_RUN_ID=&A.CAL_RUN_ID
AND T.GP_PAYGROUP=&A.GP_PAYGROUP
AND T.CAL_ID=&A.CAL_ID
AND T.PIN_NUM = PIN2.PIN_NUM
AND PIN2.PIN_NM='PERQ EMPL'
end-select

End-Procedure !Get-Tax-Employer

!*******************************************************************************

Begin-Procedure Get-SECT80EE-DECLAMT
let #sect80eedecl = 0
Begin-select
A.GPIN_TAX_DECL_AMT

      Move &A.GPIN_TAX_DECL_AMT to #sect80eedecl

FROM PS_GPIN_TDS_OTH A, PS_GP_PIN B 
WHERE A.PIN_NUM=B.PIN_NUM 
AND B.PIN_NM='SECT 80EE' 
AND A.GPIN_TAX_YEAR=#ASSMT_BGN_YEAR 
AND A.EMPLID=$EMPLID
end-select

End-Procedure !Get-SECT80EE-DECLAMT
!********************************************************************************
Begin-Procedure Check-Run-Empl
!********************************************************************************
Begin-Select
EMPLRC.EMPLID

  if ltrim(rtrim(&EMPLRC.EMPLID, ' '), ' ') <> ''
      let #EmplCnt = #EmplCnt + 1
  end-if

FROM PS_GPIN_EMPL_RC EMPLRC
WHERE EMPLRC.OPRID = $prcs_oprid
AND EMPLRC.RUN_CNTL_ID = $prcs_run_cntl_id
ORDER BY EMPLRC.EMPLID
End-Select
End-Procedure !Check-Run-Empl

!*******************************************************************************
Begin-Procedure Process-Main
    let $Empl_Status = ''
    let $emplid      = ''
    let $Form        = ''
    let #PERQ_EMPL   = 0
    let #EmplCnt     = 0
    let $FromClause  = ''
    let $WhereClause = ''

    let $ACK_no_lbl=$ACK_NUM_lbl||' '||$ACK_NUM2_lbl

    if rtrim($EstabID, ' ') <> ''
         let $Estab_Where_Clause = 'AND ESTAB.ESTABID = '''|| $EstabID ||''''
    else
         let $Estab_Where_Clause = ''
    end-if

    DO Check-Run-Empl

    if #EmplCnt > 0
        let $FromClause = ', PS_GPIN_EMPL_RC B '
        let $WhereClause = ' AND B.OPRID = ''' || $prcs_oprid || ''' AND B.RUN_CNTL_ID = ''' || $prcs_run_cntl_id || ''' AND A.EMPLID = B.EMPLID'
    end-if
  let $emplid      = ''
  do initilize-tds-vals
Begin-Select
ESTAB.GPIN_IT_PAN_NBR
A.JOBINSTANCE
A.EMPLID
NAMES2.FIRST_NAME
A.CAL_RUN_ID
A.EMPL_RCD
A.GP_PAYGROUP
A.CAL_ID
A.ORIG_CAL_RUN_ID
A.RSLT_SEG_NUM
A.RSLT_VER_NUM
A.RSLT_REV_NUM
A.GP_GENRPT_BREAK1
A.PRD_END_DT
A.PRD_BGN_DT

    if $emplid = ''
        let $emplid  = &A.EMPLID
        Move &A.GP_GENRPT_BREAK1 To $Tmp_Estab
    end-if
    if ( (ltrim(rtrim ($emplid,' '),' ') <> &A.EMPLID)
         and (ltrim(rtrim($Form,' '),' ')<> ''))
        Do Get-Tax-Employer
        do Get_Employee_Dates

        do Print-Form16
        !let #edu_cess = 0
        Move &A.GP_GENRPT_BREAK1 To $tmpestab
        Move &A.GP_GENRPT_BREAK1 To $Tmp_Estab
       
    end-if

    let $emplid = &A.EMPLID

    Move &A.PRD_END_DT to $prd_end_dt  'mm-dd-yyyy'
    extract $prd_month from $prd_end_dt 0 2

    IF $PrevEmplid <> $emplid
     do initilize-tds-vals
        Let $PrevEmplid = $emplid
        Do Get-Employee-Term-Det
    END-IF
    DO Get-Nbr-Child
    Do Get-Rpt-Fields
    Let $Form1 = ''
    Move $Form1 to $Form

    do Check-accum-values

    if $Form='16AA'
        do Check-Pan-number
        do Check-TDS-Tot-Tax-Income
    end-if
FROM PS_GPIN_PR_TMP A , PS_ESTAB_TBL_GPIN ESTAB, PS_NAMES NAMES2
[$FromClause]
WHERE A.GP_GENRPT_BREAK1 = ESTAB.ESTABID
AND   A.JOBINSTANCE = #prcs_job_instance
AND A.EMPLID = NAMES2.EMPLID
AND NAMES2.EFFDT = (SELECT MAX(NAMES1.EFFDT)
                    FROM PS_NAMES NAMES1
                     WHERE NAMES1.EMPLID = NAMES2.EMPLID
                     AND NAMES1.EFFDT <= &RNCT.END_DT)
AND   ESTAB.EFFDT = (SELECT MAX(E.EFFDT)
                    FROM PS_ESTAB_TBL_GPIN E
                     WHERE E.ESTABID = ESTAB.ESTABID
                     AND E.EFFDT <= &RNCT.END_DT)
     [$Estab_Where_Clause]
[$WhereClause]
ORDER BY [$Order_Clause]ESTAB.GPIN_IT_PAN_NBR ,ESTAB.GPIN_IT_TAN_NBR,A.RSLT_SEG_NUM
    End-Select


    do Print-Form16

End-Procedure   !Process-Main

!************************************************************************
!  Procedure: Get-Nbr-Child
!  Description: To retrieve the number of children
!************************************************************************

Begin-Procedure Get-Nbr-Child
Begin-Select
CHLD.GPIN_NBR_CHILD
    move &CHLD.GPIN_NBR_CHILD to #Nbr_chld
from PS_GPIN_TDS_GEN CHLD
where CHLD.EMPLID = $EMPLID
AND CHLD.ESTABID = $EstabID
AND CHLD.EFFDT = (SELECT MAX(EFFDT) from  PS_GPIN_TDS_GEN CHLD1
                             where CHLD1.EMPLID = CHLD.EMPLID
                             and CHLD1.ESTABID = CHLD.ESTABID
                             and CHLD1.EFFDT <= &RNCT.END_DT)
End-Select
End-Procedure ! end

!*********************************************************************************
Begin-Procedure Get-Employee-Term-Det
Begin-Select
JOB2.EMPLID
JOB2.EFFDT &JOB2.EFFDT

    do Compare-Term-Date

 FROM PS_JOB JOB2
WHERE JOB2.EMPLID = $EMPLID
 AND JOB2.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_JOB JOB3
                   WHERE JOB3.EMPLID = $EMPLID
                    AND JOB3.EMPL_RCD = JOB2.EMPL_RCD
                    AND JOB3.ACTION = 'TER')
 AND JOB2.ACTION = 'TER'
End-Select
End-Procedure !Employee-Action

!*********************************************************************************
Begin-Procedure Get-Employee-Hire-Det
Begin-Select
JOB4.EMPLID
JOB4.EFFDT &JOB4.EFFDT

 FROM PS_JOB JOB4
 WHERE JOB4.EMPLID = $EMPLID
 AND JOB4.EFFDT = (SELECT MAX(JOB5.EFFDT)
                    FROM PS_JOB JOB5
                   WHERE JOB5.EMPLID = $EMPLID
                    AND JOB5.EMPL_RCD = JOB4.EMPL_RCD
                    AND JOB5.ACTION = 'HIR')
 AND JOB4.ACTION = 'HIR'
 End-Select
End-Procedure !Employee-Action
!*******************************************************************************
Begin-Procedure Compare-Term-Date

LET #Date_Diff = datediff( &PRTMP.PRD_END_DT, &A.PRD_BGN_DT, 'MONTH')
  LET #Date_Diff = ROUND(#Date_Diff,0)

Begin-Select
MAX(PRTMP.PRD_END_DT) &PRTMP.PRD_END_DT

      if ((&JOB2.EFFDT > &RNCT.BGN_DT) AND (&JOB2.EFFDT < &RNCT.END_DT))
         if(&JOB2.EFFDT < &A.PRD_END_DT)
            LET $Empl_Status = 'T'
            LET $TERM_END_DATE = &JOB2.EFFDT
            do Get-Employee-Hire-Det
            if(&JOB4.EFFDT > &RNCT.BGN_DT)
               LET $TERM_BEG_DATE = &JOB4.EFFDT
               LET #Date_Diff = datediff( $TERM_END_DATE, $TERM_BEG_DATE, 'MONTH')
               LET #Date_Diff = ROUND(#Date_Diff,0)
            else
               LET #Date_Diff = datediff( $TERM_END_DATE, &RNCT.BGN_DT, 'MONTH')
               LET #Date_Diff = ROUND(#Date_Diff,0)
            end-if
         END-IF
      END-IF


   FROM PS_GPIN_PR_TMP PRTMP
        WHERE PRTMP.JOBINSTANCE = #prcs_job_instance
        AND PRTMP.EMPLID = $EMPLID

End-Select
End-Procedure !Date-Comparison
!**************************************************************************

!****************************************************************************
!  Procedure:   Get_Employee_Dates                                          *
!  Description: To get employee's begin and end dates                       *
!****************************************************************************
Begin-Procedure Get_Employee_Dates

  LET #Date_Diff = datediff( &A.PRD_END_DT, &A.PRD_BGN_DT, 'MONTH')
  LET #Date_Diff = ROUND (#Date_Diff,0)

Begin-Select
MAX(PRTMP.PRD_END_DT) &EMP.PRD_END_DT
         do Get-Employee-Term-Det

      if ((&JOB2.EFFDT > &RNCT.BGN_DT) AND (&JOB2.EFFDT < &RNCT.END_DT))

         if(&JOB2.EFFDT < &RNCT.END_DT)
            LET $TERM_END_DATE = &JOB2.EFFDT
         else
            LET $TERM_END_DATE = &RNCT.END_DT
         end-if
       ELSE
           LET $TERM_END_DATE = &RNCT.END_DT
       END-IF

       do Get-Employee-Hire-Det

       if(&JOB4.EFFDT > &RNCT.BGN_DT)
          LET $TERM_BEG_DATE = &JOB4.EFFDT
          LET #Date_Diff = datediff( $TERM_END_DATE, $TERM_BEG_DATE, 'MONTH')
          LET #Date_Diff = ROUND(#Date_Diff,0)
       else
          LET #Date_Diff = datediff( $TERM_END_DATE, &RNCT.BGN_DT, 'MONTH')
          LET #Date_Diff = ROUND(#Date_Diff,0)
       end-if

    let #Date_Diff = round (#Date_Diff,1)
FROM PS_GPIN_PR_TMP PRTMP
WHERE PRTMP.JOBINSTANCE = #prcs_job_instance
      AND PRTMP.EMPLID = $EMPLID
End-Select
End-Procedure !end of Get_Employee_Dates
!************************************************************************
!  Procedure: initilize-tds-vals
!  Description: To retrieve the number of children
!************************************************************************

begin-procedure initilize-tds-vals
let #tds_apr = 0
let #sur_apr = 0
let #edu_apr = 0
let #tds_may = 0
let #sur_may = 0
let #edu_may = 0
let #tds_jun = 0
let #sur_jun = 0
let #edu_jun = 0
let #tds_jul = 0
let #sur_jul = 0
let #edu_jul = 0
let #tds_aug = 0
let #sur_aug = 0
let #edu_aug = 0
let #tds_sep = 0
let #sur_sep = 0
let #edu_sep = 0
let #tds_oct = 0
let #sur_oct = 0
let #edu_oct = 0
let #tds_nov = 0
let #sur_nov = 0
let #edu_nov = 0
let #tds_dec = 0
let #sur_dec = 0
let #edu_dec = 0
let #tds_jan = 0
let #sur_jan = 0
let #edu_jan = 0
let #tds_feb = 0
let #sur_feb = 0
let #edu_feb = 0
let #tds_mar = 0
let #sur_mar = 0
let #edu_mar = 0

    let #etax_apr = 0
    let #etax_may = 0
    let #etax_jun = 0
    let #etax_jul = 0
    let #etax_aug = 0
    let #etax_sep = 0
    let #etax_oct = 0
    let #etax_nov = 0
    let #etax_dec = 0
    let #etax_jan = 0
    let #etax_feb = 0
    let #etax_mar = 0

end-procedure




!************************************************************************
!  Procedure: Get-Nbr-Child
!  Description: To retrieve the number of children
!************************************************************************


!****************************************************************************
!  Procedure:   Get-Rpt-Fields                                              *
!  Description:                                                             *
!****************************************************************************
Begin-Procedure Get-Rpt-Fields
Begin-Select
TMP3.GPIN_FLD_NAME
TMP3.CALC_RSLT_VAL
    Move &tmp3.gpin_fld_name to $rptfldname
    Move &tmp3.calc_rslt_val to #repval
    let $rptfldname        = ltrim(rtrim($rptfldname ,' ' ),' ')
    let #surcharge_monthly = 0
    let #educess_monthly   = 0
    let #tds_monthly  = 0
    let #empl_perq_tax = 0 

    evaluate $rptfldname
        when = 'F16_TDS'
           add #repval to #tds_monthly
           add #repval to #tds
           do Aggregate-Monthly-Tds
        break
   when = 'F16_TAX_LIAB_M'
      !add #repval to #tds_monthly

    !do Aggregate-Monthly-Tds
      break
    when = 'F16_EDU_CESS_M'
           add #repval to #educess_monthly
           do Aggregate-Monthly-Educess
        break
    when = 'F16_SURCHARGE_M'
           add #repval to #surcharge_monthly
           do Aggregate-Monthly-Surcharge
        break

    when = 'F16_EMPLR_TAX'
           add #repval to #empl_perq_tax
           add #repval to #tds
           do Aggregate-Monthly-EmplyrTax
        break

  End-Evaluate
FROM PS_GPIN_PR_TMP3 TMP3
    WHERE  TMP3.JOBINSTANCE  = #prcs_job_instance
AND TMP3.EMPLID          = &a.emplid
AND TMP3.CAL_RUN_ID      = &a.cal_run_id
AND TMP3.EMPL_RCD        = &a.empl_rcd
AND TMP3.GP_PAYGROUP     = &a.gp_paygroup
AND TMP3.CAL_ID          = &a.cal_id
AND TMP3.ORIG_CAL_RUN_ID =&A.ORIG_CAL_RUN_ID
AND TMP3.RSLT_SEG_NUM    = &a.rslt_seg_num
AND TMP3.RSLT_VER_NUM    = &a.rslt_ver_num
AND TMP3.RSLT_REV_NUM    = &a.rslt_rev_num
End-Select
End-Procedure   !Get-Rpt-Fields
!***********************************************************
Begin-Procedure Print-Form16
let #t1=0
let #t2=0
let #t3=0
let $Tax-Year-End-Date=''

    do Get-Employer-Det
    do Get-Employee-Details
    do Get-Annual-Amts
    do Get-SECT80EE-DECLAMT
   
   if $Form = '16'

      !do Rep-Header
      !do Print_Form16_Section1

      alter-printer  point-size=7 font=5
      let $emp_id= 'Emp Id : '|| $EMPLID
      print ' ' (1, 110) bold
      print $emp_id (+1, 110) bold


      graphic (+1,8,125) box 3 10
      alter-printer  point-size=9 font=5
      print ' ' (, 66)
      print 'PART B (Annexure)' (+1, 66) bold 
      print ' ' (+1, 66)
      graphic (+1,8,125) box 3 10
      alter-printer  point-size=8 font=5
      print ' ' (,10) 
      print $DetailHeader_lbl (+1,10) bold 
      print ' ' (+1,10) 

      do Print_Form16_Data
      do Print-Trailer
      
      !do Print_Form16_Section2

   else

      do Rep-Header-Form16AA
      do Print_Form16AA_Section1
      print $DetailHeader_lbl  (+3,36) bold
      do Print_Form16AA_Data
      do Print_Form16_Section2
      !do Print_Form16AA_tax_dtls
      do Print_Form16AA_Section2
      do Print-Form16-assessee
   end-if

   do Reset-Employee-Loop-Vars
   new-page
End-Procedure  !Print-Form16

!****************************************************************************
!  Procedure:   Print_Form16_Section1                                       *
!  Description: To Print Employee and employer namd and other information   *
!****************************************************************************
Begin-Procedure  Print_Form16_Section1

    let #Col_1 = 9
    let #Col_2 = 74

    graphic (+3,8,126) box 11

    print $EMPLOYER_ADDRESS_lbl (,26)
    print $EMPLOYEE_ADDRESS_lbl (,89)
    graphic (-1, 73,12) vert-line 
    graphic (+2,8,126) horz-line 1

     if $est_company <> ''
       print $est_company     (+1,#Col_1)
       print $NAME1           (,#Col_2)
     else
       print $NAME1           (+1,#Col_2)
     end-if

    if $EST_ADDRESS1 <> ''
       print $EST_ADDRESS1    (+1,#Col_1)
       print $DESCR1          (,#Col_2)
    else
       print $DESCR1          (+1,#Col_2)
    end-if

    if $EST_ADDRESS2<> ''
      print $EST_ADDRESS2     (+1,#Col_1)
    end-if

    if $EST_ADDRESS3<> ''
       print $EST_ADDRESS3                   (+1,#Col_1)
    end-if

    if $EST_ADDRESS4 <> ''
       print $EST_ADDRESS4                   (+1,#Col_1)
    end-if

    if $EST_CITY <> ''
       print $EST_CITY                       (+1,#Col_1)
    end-if

    if $EST_STATE <> ''
       print $EST_STATE                      (+1,#Col_1)
    end-if

    if $EST_COUNTRY <> ''
       print $EST_COUNTRY                    (+1,#Col_1)
    end-if

!   graphic (+2,8,126) box 4
!   graphic (-1,73,6)  vert-line 1
   graphic (+2,8,126) box 9
   graphic (-1,73,9)  vert-line
   graphic (+2,8,126) horz-line 1
   graphic (-2,40,4)  vert-line 

   print $EMPLYR_PAN_lbl       (+1,14)
   print $EMPLYR_TAN_lbl       (,45)
   print $EMPLYE_PAN_lbl       (,94)
   print $ESTPAN               (+2,9)
   print $ESTTAN               (,42)
   print $EMPPAN               (,74)

   graphic (,8,126) box 2    ! 73 - 8 = 101 - 30 
   graphic (+2,73,61) box 2
   graphic (-1,108,5)  vert-line 
   
   ! print $ACK_no_lbl         (-4,9) wrap 60 5  !jjj
   print $ASSESS_YEAR_lbl         (+1,76) wrap 20 2
   print $PERIOD_lbl              (,112)
   
   graphic (+1,120,3)  vert-line 
   print $From_lbl                (+1,109)
   print $To_lbl                  (,122)
   graphic (,108,26) horz-line 1
   

   print $ASSESS_YEAR             (+1,76)   
   print $hrdt                    (+1,109)  edit 'dd-mm-yyyy'
   print $termntdt                (,122)   edit 'dd-mm-yyyy'
   
   
   print 'CIT(TDS)'          (-4, 37)
   print $estab_cir_address1      (+1, 10)
   print $estab_cir_address2      (+1, 10)
   print $estab_cir_city      (+1, 10)
   print $estab_cir_postal      (,41)

   do Get-Ack-Details

   print '' (+10,)

End-Procedure

!****************************************************************************
!  Procedure:   Print_Ack_Details                                     *
!  Description: To Print Acknowledgement Details  *
!****************************************************************************
Begin-Procedure  Print_Ack_Details
   print $Qtr (#curr-Line,15)
   print  $Ack_num (,42)
   print  #tds_quarter_ded (,82) edit 9,99,99,99,999.99    
   print  #tds_quarter_ded (,115) edit 9,99,99,99,999.99
   
   graphic (,8,126) box 1
   graphic (,8,18) box 1
   graphic (,26,46) box 1
   graphic (, 72,31) box 1
   graphic (, 103,31) box 1
   add 1 to #curr-Line
End-Procedure
!**************************************************************************************


!****************************************************************************
!  Procedure:   Print_Form16AA_Section1                                     *
!  Description: To Print Employee and employer namd and other information   *
!****************************************************************************
Begin-Procedure  Print_Form16AA_Section1

    let #Col_1 = 8
    let #Col_2 = 73

    graphic (+3,7,127) box 11

    print $EMPLOYER_ADDRESS_lbl (,26)
    print $EMPLOYEE_ADDRESS_lbl (,89)
    graphic (-1, 72,12) vert-line 1
    graphic (+2,7,127) horz-line 1

     if $est_company <> ''
       print $est_company     (+1,#Col_1)
       print $NAME1           (,#Col_2)
     else
       print $NAME1           (+1,#Col_2)
     end-if

    if $EST_ADDRESS1 <> ''
       print $EST_ADDRESS1    (+1,#Col_1)
       print $DESCR1          (,#Col_2)
    else
       print $DESCR1          (+1,#Col_2)
    end-if

    if $EST_ADDRESS2<> ''
      print $EST_ADDRESS2     (+1,#Col_1)
    end-if

    if $EST_ADDRESS3<> ''
       print $EST_ADDRESS3                   (+1,#Col_1)
    end-if

    if $EST_ADDRESS4 <> ''
       print $EST_ADDRESS4                   (+1,#Col_1)
    end-if

     if $EST_CITY <> ''
       print $EST_CITY                       (+1,#Col_1)
    end-if

    if $EST_STATE <> ''
       print $EST_STATE                      (+1,#Col_1)
    end-if

    if $EST_COUNTRY <> ''
       print $EST_COUNTRY                    (+1,#Col_1)
    end-if

   graphic (+2,7,127) box 4
   graphic (-1,72,6)  vert-line 1
   graphic (+2,7,127) horz-line 1
   graphic (-2,40,4)  vert-line 1

   print $PAN_NO_lbl       (+1,19)
   print  $TAN_NO_lbl       (,53)
   print  $PAN_NO_lbl      (,100)
   print $ESTPAN               (+2,9)
   print $ESTTAN               (,41)
   print $EMPPAN               (,73)

   graphic (+2,7,127) box 6
   graphic (-4,72,9)  vert-line 1
   graphic (+3,72,34) horz-line 1
   graphic (+4,7,127) horz-line 1
   graphic (+2,72,62) horz-line 1
   graphic (-6,106,6) vert-line 1
   graphic (+2,72,34) horz-line 1
   graphic (,89,4)    vert-line 1

   print $TDS_CIRCLE_lbl          (-1,9) wrap 43 2
   print $PERIOD_lbl              (-1,86)
   print $ASSESS_YEAR_lbl         (,112) !wrap 11 2
   print $From_lbl                (+2,78)
   print $To_lbl                  (,96)
   print $ESTTDS                  (+2,9)
   print $hrdt                    (,76)  edit 'dd-mm-yyyy'
   print $termntdt                (,93)  edit 'dd-mm-yyyy'
   print $ASSESS_YEAR             (,115)

End-Procedure


begin-procedure Print_F16_Line_Borders(#depth)
    graphic (,8, #depth) vert-line
    graphic (,67, #depth) vert-line
    graphic (,90, #depth)  vert-line
    graphic (,111, #depth) vert-line
    graphic (,133, #depth) vert-line
end-procedure

!****************************************************************************
!  Procedure:   Print_Form16_Data                                           *
!  Description: To Print Employee tax data                                  *
!****************************************************************************
Begin-Procedure  Print_Form16_Data

   let #Col_a1 = 69
   let #Col_a2 = 71
   let #Col_b1 = 91
   let #Col_b2 = 93
   let #Col_c1 = 112
   let #Col_c2 = 113
   let #sl_no  = 0
   let #totexemp1 = 0
   let #totexemp2 = 0

   !let #sec17pro = 0
   !let #sec17val = 0
   let #initialamt = 0

   graphic (,8,125) horz-line
   graphic (,67,37) vert-line

 
   do Print_F16_Line_Borders(1)
   print '1.'                        (+1,9) bold
   print $GROSS_SAL_lbl              (,13)
   print $Rs_lbl                     (,#Col_b1)
   print $Rs_lbl                     (,#Col_c1)

   do Print_F16_Line_Borders(2)
   
   print $SALARY_AS_PER_lbl          (+2,13)
   

   print $Rs_lbl                     (,#Col_a1)
   print #sec17sal                   (,#Col_a2)  edit 9,99,99,99,99,999.99
   Add   #sec17sal to #gross_tot

   do Print_F16_Line_Borders(1)
   print ' '          (+1,13)
   print ' '                    (,#Col_a1)
   print ' '                    (,#Col_a2)


   do Print_F16_Line_Borders(2)
   
   print $VALUE_PER_lbl              (+1,13)
   print $VALUE_PER1_lbl             (+1,16)
   

   print $Rs_lbl                     (,#Col_a1)
   print #sec17val                   (,#Col_a2)  edit 9,99,99,99,99,999.99
   Add   #sec17val to #gross_tot

   do Print_F16_Line_Borders(1)
   print ' '          (+1,13)
   print ' '                    (,#Col_a1)
   print ' '                    (,#Col_a2)

   do Print_F16_Line_Borders(2)
   
   print $PROFITS_lbl                (+1,13)
   print $PROFITS1_lbl               (+1,16)
   
   print $Rs_lbl                     (,#Col_a1)
   print #sec17pro                   (,#Col_a2)  edit 9,99,99,99,99,999.99
   Add   #sec17pro to #gross_tot

   do Print_F16_Line_Borders(1)
   print ' '          (+1,13)
   print ' '                    (,#Col_a1)
   print ' '                    (,#Col_a2)

   do Print_F16_Line_Borders(1)
   print $TOTAL_lbl                  (+1,13)
   print $Rs_lbl                     (,#Col_c1)
   print #gross_tot                  (,#Col_c2)   edit 9,99,99,99,99,999.99
   
   do Print_F16_Line_Borders(2)
   print '(e)'                             (+2,13)
   print $Othemrsal_lbl                    (,+0)
   
   print $Rs_lbl                     (,#Col_c1)
   print #initialamt                 (,#Col_c2)   edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(2)
   print '2.'                        (+2,9) bold
   print $LESS_lbl                   (,13)
   
   do Print_F16_Line_Borders(2)
   print '(a)'                               (+2,13)
   print $Travelconcs_lbl                    (,+1)
   
   if #f16lta_exm <> 0
   !do Print_F16_Line_Borders(1)
   print $Rs_lbl                     (,#Col_a1)
   print #f16lta_exm                 (,#Col_a2) edit 9,99,99,99,99,999.99
   add #f16lta_exm to #totexemp2
   end-if
   
   do Print_F16_Line_Borders(2)
   print '(b)'                               (+2,13)
   print $Deathretrm_lbl                    (,+1)
   print $Rs_lbl                     (,#Col_a1)
   print #initialamt                 (,#Col_a2)   edit 9,99,99,99,99,999.99 
   
   do Print_F16_Line_Borders(2)
   print '(c)'                               (+2,13)
   print $Commutval_lbl                    (,+1)
   print $Rs_lbl                     (,#Col_a1)
   print #initialamt                 (,#Col_a2)   edit 9,99,99,99,99,999.99 
   
   do Print_F16_Line_Borders(2)
   print '(d)'                               (+2,13)
   print $Casheqvlnt_lbl                    (,+1)
   print $Rs_lbl                     (,#Col_a1)
   print #initialamt                 (,#Col_a2)   edit 9,99,99,99,99,999.99 
      
   do Print_F16_Line_Borders(2)
   print '(e)'                               (+2,13)
   print $Houserent_lbl                    (,+1)
   
   if #f16hra_exm <> 0
   !do Print_F16_Line_Borders(1)
   print $Rs_lbl                 (,#Col_a1)
   print #f16hra_exm             (,#Col_a2) edit 9,99,99,99,99,999.99
   add #f16hra_exm to #totexemp2
   end-if
   
   do Print_F16_Line_Borders(2)
   print '(f)'                               (+2,13)
   print $Othexamt_lbl                    (,+1)
    
   do Print_F16_Line_Borders(2)
   graphic (+2,13,54) box 1 10
   graphic (-1,47,1) vert-line
   print $Rs_lbl (+1,55)
   
   print $Allowance_lbl (,23)
   if #f16edu_exm <> 0
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
       do Print_F16_Line_Borders(1)
   
       print $Child_Edu_lbl (+1,14)
    
       print #f16edu_exm (,50) edit 99,99,999.99
   
       add #f16edu_exm to #totexemp1
   end-if

   if #f16hst_exm <> 0
       do Print_F16_Line_Borders(1)
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
   
       print $Child_Hostel_lbl (+1,14)
    
       print #f16hst_exm (,50) edit 99,99,999.99
   
       add #f16hst_exm to #totexemp1
   end-if

   if #f16pre_hos_exm <> 0
       do Print_F16_Line_Borders(1)
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
       do Print_F16_Line_Borders(1)
   
       print $Prev_hostel_exm_lbl (+1,14)
   
       print #f16pre_hos_exm (,50) edit 99,99,999.99
   
       add #f16pre_hos_exm to #totexemp1
   end-if

   if #f16con_exm <> 0
       do Print_F16_Line_Borders(1)
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
   
       print $Conv_exm_lbl (+1,14)    
       print #f16con_exm (,50) edit 99,99,999.99
   
       add #f16con_exm to #totexemp1
   end-if
   if #f16med_exm <> 0
       do Print_F16_Line_Borders(1)
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
   
       print $Med_exm_lbl (+1,14)
    
       print #f16med_exm (,50) edit 99,999.99
   
       add #f16med_exm to #totexemp1
   end-if

   if #f16pre_con_exm <> 0
       do Print_F16_Line_Borders(1)
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
   
       print $Prev_conv_exm_lbl (+1,14)
   
       print #f16pre_con_exm (,50) edit 99,99,999.99
   
       add #f16pre_con_exm to #totexemp1
   end-if

   if #f16pre_hra_exm <> 0
       do Print_F16_Line_Borders(1)
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
   
       print $Prev_hra_exm_lbl (+1,14)
       print #f16pre_hra_exm   (,50) edit 99,99,999.99
   
       add #f16pre_hra_exm to #totexemp1
   end-if

    if #f16pre_edu_exm <> 0
        do Print_F16_Line_Borders(1)
       graphic (+1,13,54) box 1 10
       graphic (-1,47,1) vert-line
   
       print $Prev_edu_exm_lbl (+1,14)
  
       print #f16pre_edu_exm   (,50) edit 99,99,999.99
   
       add #f16pre_edu_exm to #totexemp1
   end-if
   
   do Print_F16_Line_Borders(2)
   print '(g)'                               (+2,13)
   print $Tothexmpt_lbl                    (,+1)
   
   print $Rs_lbl                     (,#Col_a1)
   print #totexemp1                   (,#Col_a2)  edit 9,99,99,99,99,999.99
      
   
   do Print_F16_Line_Borders(2)
   print '(h)'                               (+2,13)
   print $Totexmpt_lbl                    (,+1)
   do Print_F16_Line_Borders(1)
   print $Totexmpt1_lbl                    (+1,17)
   
   
   add #totexemp2 to #totexemp1
   print $Rs_lbl                     (,#Col_b1)
   print #totexemp1                         (,#Col_b2)     edit 9,99,99,99,99,999.99
   
   do Print_F16_Line_Borders(2)
   print '3.'              (+2,9)      bold
   print $BALANCE_lbl      (,13)

   let   #gross_tot1 = #gross_tot-#totexemp1
   if #gross_tot1 < 0
      LET #gross_tot1 = 0
   end-if

   print $Rs_lbl                             (,#Col_c1)
   print #gross_tot1                         (,#Col_c2)     edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(2)
   print '4.'                                (+2,9)         bold
   print $DEDUCTIONS_lbl                     (,13)
   
   do Print_F16_Line_Borders(2)
   
   LET #std_ded_amt = 0
   if #ASSMT_BGN_YEAR > 2018
   
   evaluate #ASSMT_BGN_YEAR
       when = 2019
          let #std_ded_amt =  40000
       break
       when >= 2020
          let #std_ded_amt =  50000          
       break
   end-evaluate
   
   print '(a)'                               (+2,13)
   print $DEDUCTIONS1_lbl                    (,+1)
   print $Rs_lbl                             (,#Col_a1)
   print #std_ded_amt                        (,#Col_a2)  edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(1)
   print ' '          (+1,13)
   print ' '                    (,40)
   print ' '                    (,43)
 
   do Print_F16_Line_Borders(1)
   
   print '(b)'                               (+1,13)
   print $DEDUCTIONS2_lbl                    (,+1)
   print $Rs_lbl                     (,#Col_a1)
   print '0.00'                   (,#Col_a2)  edit 9,99,99,99,99,999.99   

   do Print_F16_Line_Borders(1)
   print ' '          (+1,13)
   print ' '                    (,40)
   print ' '                    (,43)

   do Print_F16_Line_Borders(1)
   
   print '(c)'                               (+1,13)
   print $DEDUCTIONS3_lbl                    (,+1)
   print $Rs_lbl                     (,#Col_a1)
   print #ptded                      (,#Col_a2)  edit 9,99,99,99,99,999.99    
  
   Add #std_ded_amt to #gross_tot2
   Add #ptded to #gross_tot2
   
   else
   
   print '(a)'                               (+2,13)
   print $DEDUCTIONS2_lbl                    (,+1)
   print $Rs_lbl                     (,#Col_a1)
   print '0.00'                   (,#Col_a2)  edit 9,99,99,99,99,999.99
   
   do Print_F16_Line_Borders(1)
   print ' '          (+1,13)
   print ' '                    (,40)
   print ' '                    (,43)

   do Print_F16_Line_Borders(1)
   
   print '(b)'                               (+1,13)
   print $DEDUCTIONS3_lbl                    (,+1)
   print $Rs_lbl                     (,#Col_a1)
   print #ptded                      (,#Col_a2)  edit 9,99,99,99,99,999.99
   
   Add   #ptded to #gross_tot2
   
   end-if  

   do Print_F16_Line_Borders(2)
   print '5.'                                (+2,9)         bold
   print $AGGREGATE_lbl                      (,16)
   print $Rs_lbl                             (,#Col_b1)
   print #gross_tot2                         (,#Col_b2)     edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(2)
   print '6.'                                (+2,9)         bold
   print $INCOME_lbl                         (,13)

   let   #gross_tot3 = #gross_tot1-#gross_tot2
   IF #gross_tot3 < 0
      LET #gross_tot3 = 0
   END-IF
   print $Rs_lbl                             (,#Col_c1)
   print #gross_tot3                         (,#Col_c2)   edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(2)
   print '7.'                                (+2,9)       bold
   print $ADD_lbl                            (,13)

   do Print_F16_Line_Borders(2)
   graphic (+2,13,54) box 1 10
   graphic (-1,47,1) vert-line
   print $Rs_lbl (+1,55)
   print 'Income' (,23)
   
   if #incprop > 0
         let   $gen_lbl = 'Income from House Property'
         graphic (+1,13,54) box 1 10
         graphic (-1,47,1) vert-line
         do Print_F16_Line_Borders(1)
   
         print $gen_lbl                      (+1,14)

         print #incprop                      (,50)        edit 99,99,999.99

         add   #incprop to #anyincome
   end-if

   if #losprop > 0
         let   $gen_lbl = 'Loss from House Property'
         do Print_F16_Line_Borders(1)
         graphic (+1,13,54) box 1 10
         graphic (-1,47,1) vert-line
         do Print_F16_Line_Borders(1)

         print $gen_lbl                      (+1,14)

         print #losprop                      (,50)        edit 99,99,999.99

         subtract  #losprop from #anyincome
   end-if

   if #inccap > 0
         let   $gen_lbl = 'Income from Capital Gains'
         do Print_F16_Line_Borders(1)
         graphic (+1,13,54) box 1 10
         graphic (-1,47,1) vert-line
         do Print_F16_Line_Borders(1)

         print $gen_lbl                      (+1,14)

         print #inccap                       (,50)        edit 99,99,999.99

         add   #inccap to #anyincome
   end-if

   if #loscapgain > 0
         let   $gen_lbl = 'Loss from Capital Gains'
         do Print_F16_Line_Borders(1)
         graphic (+1,13,54) box 1 10
         graphic (-1,47,1) vert-line
         do Print_F16_Line_Borders(1)

         print $gen_lbl                      (+1,14)

         print #loscapgain                   (,50)        edit 99,99,999.99

         subtract   #loscapgain from #anyincome
   end-if

   if #incbusprof > 0
         let   $gen_lbl = 'Income from Buss & Profn'
         do Print_F16_Line_Borders(1)
         graphic (+1,13,54) box 1 10
         graphic (-1,47,1) vert-line
         do Print_F16_Line_Borders(1)

         print $gen_lbl                      (+1,14)

         print #incbusprof                   (,50)        edit 99,99,999.99

         add   #incbusprof to #anyincome
   end-if

   if #losbusprof > 0
         let   $gen_lbl = 'Loss from Buss & Profn'
         do Print_F16_Line_Borders(1)
         graphic (+1,13,54) box 1 10
         graphic (-1,47,1) vert-line
         do Print_F16_Line_Borders(1)

         print $gen_lbl                      (+1,14)

         print #losbusprof                   (,50)        edit 99,99,999.99

         subtract   #losbusprof from #anyincome
   end-if

   if #otherinc > 0
         let   $gen_lbl = 'Income from Other Sources'
         do Print_F16_Line_Borders(1)
         graphic (+1,13,54) box 1 10
         graphic (-1,47,1) vert-line
         do Print_F16_Line_Borders(1)

         print $gen_lbl                      (+1,14)

         print #otherinc                     (,50)        edit 99,99,999.99

         add   #otherinc to #anyincome
   end-if
   do Print_F16_Line_Borders(2)
   print '8.'                                (+2,9)       bold
   print $Totothinc_lbl                    (,13)
   do Print_F16_Line_Borders(1)
   print $Totothinc1_lbl                   (+1,13)
   print $Rs_lbl                             (,#Col_c1)
   print #anyincome                          (,#Col_c2)   edit 9,99,99,99,99,999.99

   
   do Print_F16_Line_Borders(2)
   print '9.'                                (+2,9)       bold
   print $GROSS_TOTAL_lbl                    (,13)
   print $Rs_lbl                             (,#Col_c1)
   let   #gross_tot4 = #gross_tot3+#anyincome
   print #gross_tot4                         (,#Col_c2)   edit 9,99,99,99,99,999.99
   do Print_F16_Line_Borders(1)
   graphic (+1,8,125)     horz-line 1 10 1
   
   new-page
  ! do Print_F16_Line_Borders(1)
   print '10.'                                (+2,9)      bold
   print $DEDUCTIONS_UNDER_lbl               (,13)

   !do Print_F16_Line_Borders(1)
   print $Sections1_lbl                      (+1,13)
   do Print_F16_Line_Borders(2)
   print $CALCULATION1_lbl                   (+1,94)
   print $CALCULATION2_lbl                   (,115)
   print '(a)'                               (+1,15)
   print $Sections_80C_lbl                   (,19)

   let #totreb = 0

   let   $gen_lbl = 'PF'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   do Print_F16_Line_Borders(1)

   print $sl_no1                             (+1,19)
   print $gen_lbl                            (,23)

   print $Rs_lbl                             (,#Col_a1)
   print #f16pf                              (,#Col_a2)   edit 9,99,99,99,99,999.99
   add   #f16pf to #totreb

   do Check-page-end

   let   $gen_lbl = ''
   if #ppfreb > 0
    let   $gen_lbl = 'PPF'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)

     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)

     print $Rs_lbl                           (,#Col_a1)
     print #ppfreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #ppfreb to #totreb
    do Check-page-end
   end-if

   if #nscreb > 0
    let   $gen_lbl = 'NSC Deposits'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)

     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #nscreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #nscreb to #totreb
    do Check-page-end
   end-if

   if #nssreb > 0
    let   $gen_lbl = 'NSS Deposits'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #nssreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #nssreb to #totreb
    do Check-page-end
   end-if

   if #fixdep > 0
    let   $gen_lbl = 'Fixed Deposits'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #fixdep                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #fixdep to #totreb
    do Check-page-end
   end-if

   if #ctdreb > 0
    let   $gen_lbl = 'CTD'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #ctdreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #ctdreb to #totreb
    do Check-page-end
   end-if

   if #lisareb > 0 or #lisareb10 > 0 or #lisareb15 > 0
     let   $gen_lbl = 'LIC Premium'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     let #totlic = #lisareb + #lisareb10 + #lisareb15
     print #totlic                         (,#Col_a2)   edit 9,99,99,99,99,999.99
     add   #totlic to #totreb
     !do Check-page-end

     alter-printer  point-size=6 font=5
     if #lisareb > 0
     do Print_F16_Line_Borders(1)
     print ' '                             (+1,23)

     print '- LIC Prem 20%'              ( ,23)
     print  $Rs_lbl                         (,40)
     print #lisareb                       ( ,42)   edit 9,99,99,99,99,999.99
     do Check-page-end
     end-if

     if #lisareb10 > 0
     do Print_F16_Line_Borders(1)
     print ' '                             (+1,23)

     print '- LIC Prem 10%'              ( ,23)
     print  $Rs_lbl                         (,40)
     print #lisareb10                       ( ,42)   edit 9,99,99,99,99,999.99
     do Check-page-end
     end-if


     if #lisareb15 > 0
     do Print_F16_Line_Borders(1)
     print ' '                             (+1,23)

     print '- LIC Prem 15%'              ( ,23)
     print  $Rs_lbl                         (,40)
     print #lisareb15                      ( ,42)   edit 9,99,99,99,99,999.99
     do Check-page-end
     end-if

   end-if
   alter-printer  point-size=8 font=5

   if #defreb > 0
     let   $gen_lbl = 'Deferred Annuity'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #defreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
     add   #defreb to #totreb
     do Check-page-end
   end-if

   if #licreb > 0
     let   $gen_lbl = 'LIC Annuity'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #licreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #licreb to #totreb
    do Check-page-end
   end-if

   if #ulipreb > 0
     let   $gen_lbl = 'ULIP'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)
     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #ulipreb                          (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #ulipreb to #totreb
    do Check-page-end
   end-if

   if #mfureb  > 0
     let   $gen_lbl = 'Mutual Funds'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #mfureb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #mfureb  to #totreb
    do Check-page-end
   end-if

   if #nhbsreb  > 0
     let   $gen_lbl = 'NHB Scheme'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #nhbsreb                          (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #nhbsreb  to #totreb
    do Check-page-end
   end-if

   if #prreb > 0
     let   $gen_lbl = 'Principal Repayment'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #prreb                            (,#Col_a2)   edit 9,99,99,99,99,999.99
     add   #prreb to #totreb
     do Check-page-end
   end-if

   if #cedreb  > 0
     let   $gen_lbl = 'Child Education Rebate'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #cedreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
    add   #cedreb  to #totreb
    do Check-page-end
   end-if

   if #infreb  > 0
     let   $gen_lbl = 'Infrastructure Bonds'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #infreb                           (,#Col_a2)   edit 9,99,99,99,99,999.99
     add   #infreb  to #totreb

    do Check-page-end
   end-if
   if #f16po_dep_ac  > 0
     let   $gen_lbl = 'Five Year Post Office Time Deposit Account'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #f16po_dep_ac                           (,#Col_a2)   edit 9,99,99,99,99,999.99
     add   #f16po_dep_ac  to #totreb

   do Check-page-end

      end-if
   if #f16sr_ctz_sav  > 0
     let   $gen_lbl = 'Senior Citizens Savings Scheme'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no1                             (+1,19)

     print $gen_lbl                            (,23)
     print $Rs_lbl                           (,#Col_a1)
     print #f16sr_ctz_sav                           (,#Col_a2)   edit 9,99,99,99,99,999.99
     add   #f16sr_ctz_sav  to #totreb
     do Check-page-end
   end-if


   do Check-page-end
     do Print_F16_Line_Borders(1)
     print $Rs_lbl                           (+1,#Col_b1)
     print  #totreb                          (,#Col_b2)   edit 9,99,99,99,99,999.99



  if #totreb > #lim_sec80c
     print $Rs_lbl                           (,#Col_c1)

    print #lim_sec80c                       (,#Col_c2)   edit 9,99,99,99,99,999.99

     add #lim_sec80c to #sec80c_tot
   else
     if #totreb <> 0
     print $Rs_lbl                           (,#Col_c1)
     print #totreb                           (,#Col_c2)   edit 9,99,99,99,99,999.99
     add #totreb to #sec80c_tot
    end-if
    do Check-page-end
   end-if


   let #sec80cce = 0

   if #sec80cccdecl >= 0
    do Print_F16_Line_Borders(1)
    print '(b)'                              (+1,15)

    print $Sections_80CCC_lbl                (,19)
    print $Rs_lbl                            (,#Col_b1)
    print #sec80cccdecl                      (,#Col_b2)   edit 9,99,99,99,99,999.99
   end-if

   if #sec80cccdecl > #lim_sec80ccc
      print $Rs_lbl                          (,#Col_c1)
      print #lim_sec80ccc                    (,#Col_c2)   edit 9,99,99,99,99,999.99
     add #lim_sec80ccc to #totsec
      add #lim_sec80ccc to #sec80cce
     else
    if #sec80cccdecl <> 0
      print $Rs_lbl                          (,#Col_c1)
      print #sec80cccdecl                    (,#Col_c2)   edit 9,99,99,99,99,999.99
     add #sec80cccdecl to #totsec
      add #sec80cccdecl to #sec80cce
    end-if
    do Check-page-end
  end-if
  
    do Print_F16_Line_Borders(1)
    print '(c)'                              (+1,15)

    print $Sections_80CCD_lbl                (,19)
    print $Rs_lbl                            (,#Col_b1)
    print #sec80ccd                          (,#Col_b2)   edit 9,99,99,99,99,999.99
    print $Rs_lbl                             (,#Col_c1)
    print #sec80ccd                           (,#col_c2)    edit 9,99,99,99,99,999.99
    do Check-page-end

    let #sec80cce = #sec80c_tot + #sec80ccd + #sec80ccc
    let #80cce = 0

    if #sec80cce > #lim_sec80cce
       let #80cce = #lim_sec80cce
    else
       let #80cce = #sec80cce
    end-if
    

    do Print_F16_Line_Borders(1)
    print ' '                 (+1,16)
 
    alter-printer  point-size=7 font=5

    do Print_F16_Line_Borders(1)
    print $Sections_80CCE_lbl                 (+1,15) 

    do Print_F16_Line_Borders(1)
    print $Sections_80CCE_lbl1                (+1,15) 

    alter-printer  point-size=8 font=5

    do Print_F16_Line_Borders(3)
    !graphic (+3,8,125)     horz-line 1 10 1
    !new-page

    let $emp_id= 'Emp Id : '|| $EMPLID
    print $emp_id (1, 110) bold
    print ' ' (+1, 110) bold

    graphic (,8,125)     horz-line 1 10 1
    graphic (,67,1) vert-line 
    graphic (,90, 1)  vert-line
    graphic (,111, 1) vert-line

    do Print_F16_Line_Borders(2)
    print $Sections2_lbl                     (+14,13)
    do Print_F16_Line_Borders(1)
    print $CALCULATION1_lbl                  (+1,72)
    print $CALCULATION_lbl                   (,94)
    print $CALCULATION2_lbl                  (,115)
    do Print_F16_Line_Borders(1)
    print ''                                 (+1,)
    let #sl_no  = 0
    let #totsec = 0

    let #sec80ddeclared = 0
    let #sec80dqualamt = 0
    let  #sec80amount = 0



   if #sec80D >  0
   let #flag1 = 1
   let #sec80ddeclared = #sec80ddecl
   let #sec80dqualamt = #lim_sec80d
   let #sec80amount = #sec80D
   if  $empsnr = 'Y' or $depsnr = 'Y'
   let #sec80dqualamt = #lim_sec80dsr
   end-if

   end-if

   if #sec80dpr > 0
   let #flag1 = 1
   let #sec80ddeclared = #sec80ddeclared + #sec80dpardecl
   let #sec80amount = #sec80amount + #sec80dpr

   if $snrparen = 'Y'
   let #sec80dqualamt = #sec80dqualamt + #lim_sec80dprsr

   else
    if $snrparen <> 'Y'
    let #sec80dqualamt = #sec80dqualamt +  #lim_sec80dpr


   end-if

   end-if

  end-if

   let #sec80d_hlth_declared = 0
   let #sec80d_hlth_amount = 0
   let #sec80d_hlth_qual = 0

   if #sec80D_hlth > 0
      let #flag1 = 1
      let #sec80d_hlth_declared = #sec80d_hlth_decl
      let #sec80d_hlth_amount = #sec80D_hlth
      if #sec80dqualamt > #sec80amount
         let #sec80d_hlth_qual = #sec80dqualamt - #sec80amount
         if #sec80d_hlth_qual > #lim_sec80d_hlth
            let #sec80d_hlth_qual = #lim_sec80d_hlth
         end-if
      end-if

         if #sec80dqualamt > (#sec80amount + #lim_sec80d_hlth)
            let #sec80dqualamt = #sec80dqualamt - #lim_sec80d_hlth
         else
            let #sec80dqualamt = #sec80dqualamt - #sec80d_hlth_qual
         end-if

   end-if


   if #sec80amount > 0
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   do Print_F16_Line_Borders(1)
   print $sl_no2                           (+1,15)
   print $Sections_80D_lbl                 (,19)
   print $Rs_lbl                           (,#Col_a1)
   print  #sec80ddeclared                    (,#Col_a2)   edit 9,99,99,99,99,999.99


   print $Rs_lbl                        (,#Col_b1)
   print #sec80dqualamt                    (,#Col_b2)   edit 9,99,99,99,99,999.99
   print $Rs_lbl                        (,#Col_c1)
   print  #sec80amount                    (,#Col_c2)   edit 9,99,99,99,99,999.99
   add  #sec80amount to #totsec

   end-if

   if #sec80d_hlth_amount > 0

   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   do Print_F16_Line_Borders(1)
   print $sl_no2                           (+1,15)
   print $Sections_80D_hlth_lbl                 (,19)
   print $Rs_lbl                           (,#Col_a1)
   print  #sec80d_hlth_declared                    (,#Col_a2)   edit 9,99,99,99,99,999.99


   print $Rs_lbl                        (,#Col_b1)
   print #sec80d_hlth_qual                    (,#Col_b2)   edit 9,99,99,99,99,999.99
   print $Rs_lbl                        (,#Col_c1)
   print  #sec80d_hlth_amount                    (,#Col_c2)   edit 9,99,99,99,99,999.99
   add  #sec80d_hlth_amount to #totsec

   end-if


   if #sec80dddecl > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                            (+1,15)
     print $Sections_80DD_lbl                 (,19)
     print $Rs_lbl                            (,#Col_a1)
     print #sec80dddecl                       (,#Col_a2)  edit 9,99,99,99,99,999.99
     print $Rs_lbl                            (,#Col_b1)
     print #lim_sec80dd                       (,#Col_b2)  edit 9,99,99,99,99,999.99
     let #flag1 = 1
   end-if
! code commented and modified for the ICE 1485932000
   if #sec80dddecl > 0!#lim_sec80dd
        print $Rs_lbl                        (,#Col_c1)
         print #lim_sec80dd                  (,#Col_c2)   edit 9,99,99,99,99,999.99
        add #lim_sec80dd to #totsec
   end-if

   if #sec80ddbdecl > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80DDB_lbl               (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sec80ddbdecl                     (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #sec80ddblim                      (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80ddb                         (,#Col_c2)   edit 9,99,99,99,99,999.99
     add #sec80ddb to #totsec
     let #flag1 = 1
   end-if

  ! Section 80E
   if #sec80edecl > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80E_lbl                 (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sec80edecl                       (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #sec80edecl                       (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80edecl                       (,#Col_c2)   edit 9,99,99,99,99,999.99
          add #sec80edecl to #totsec
     let #flag1 = 1
   end-if

 ! Section 80G
   let #temp3 = 0
   if #sec80g > 0

     let #temp3  = #sec80g_50 * 2
     let #temp3  = #temp3 + #sec80g_100
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80G_lbl                 (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #temp3                            (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #sec80g                           (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80g                           (,#Col_c2)   edit 9,99,99,99,99,999.99
     add #sec80g to #totsec
     let #flag1 = 1
   end-if

 ! Section 80GG
   if #sec80gg > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80GG_lbl                (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sec80gg                          (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #sec80gg                          (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80gg                          (,#Col_c2)   edit 9,99,99,99,99,999.99
     add #sec80gg to #totsec
     let #flag1 = 1
   end-if

 ! Section 80GGA
   if #sec80gga > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80GGA_lbl               (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sec80gga                         (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #sec80gga                         (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80gga                         (,#Col_c2)   edit 9,99,99,99,99,999.99
     add #sec80gga to #totsec
     let #flag1 = 1
   end-if

    ! Section 80CCF
    if #sec80CCF > 0
    add 1 to #sl_no
    do num-conv(#sl_no,$sl_no1,$sl_no2)
    do Print_F16_Line_Borders(1)
    print $sl_no2                           (+1,15)
    print $Sections_80ccf_lbl               (,19)
    print $Rs_lbl                           (,#Col_a1)
    print #sec80CCFdecl                     (,#Col_a2)   edit 9,99,99,99,99,999.99

    If #lim_sec80ccf >#sec80CCFdecl
    print $Rs_lbl                           (,#Col_b1)
    print #sec80CCFdecl                     (,#Col_b2)   edit 9,99,99,99,99,999.99
    else
    print #lim_sec80ccf                     (,#Col_b2)   edit 9,99,99,99,99,999.99
    end-if

    print $Rs_lbl                           (,#Col_c1)
    print #sec80CCF                         (,#Col_c2)   edit 9,99,99,99,99,999.99
    add #sec80CCF to #totsec
     let #flag1 = 1
   end-if

    if #sec80TTA > 0
    add 1 to #sl_no
    do num-conv(#sl_no,$sl_no1,$sl_no2)
    do Print_F16_Line_Borders(1)
    print $sl_no2                           (+1,15)
    print $Sections_80tta_lbl               (,19)
    print $Rs_lbl                           (,#Col_a1)
    print #sec80TTAdecl                     (,#Col_a2)   edit 9,99,99,99,99,999.99

    If #lim_sec80tta >#sec80TTAdecl
    print $Rs_lbl                           (,#Col_b1)
    print #sec80TTAdecl                     (,#Col_b2)   edit 9,99,99,99,99,999.99
    else
    print #lim_sec80tta                     (,#Col_b2)   edit 9,99,99,99,99,999.99
    end-if

    print $Rs_lbl                           (,#Col_c1)
    print #sec80TTA                         (,#Col_c2)   edit 9,99,99,99,99,999.99
    add #sec80TTA to #totsec
     let #flag1 = 1
   end-if


   ! Section 80L
   if #sec80ldecl > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80L_lbl                 (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sec80ldecl                       (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #lim_sec80l                       (,#Col_b2)   edit 9,99,99,99,99,999.99
     let #flag1 = 1
   end-if

   if #sec80ldecl > #lim_sec80l
      print $Rs_lbl                          (,#Col_c1)
      print #lim_sec80l                      (,#Col_c2)   edit 9,99,99,99,99,999.99

      add #lim_sec80l to #totsec
         else
     if #sec80ldecl <> 0
        print $Rs_lbl                        (,#Col_c1)
        print #sec80ldecl                    (,#Col_c2)   edit 9,99,99,99,99,999.99
        add #sec80ldecl to #totsec
     end-if
   end-if

   if #sec80udecl > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80U_lbl                 (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sec80udecl                       (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #lim_sec80u                       (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80u                           (,#Col_c2)   edit 9,99,99,99,99,999.99
     ! code commented and modified for the ICE 1485932000
     add #sec80u to #totsec
     let #flag1 = 1
   end-if

  ! Section 80EE
   if #sect80eedecl > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80EE_lbl                 (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sect80eedecl                     (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #sec80ee                       (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80ee                       (,#Col_c2)   edit 9,99,99,99,99,999.99
          add #sec80ee to #totsec
     let #flag1 = 1
   end-if


  ! Section 80CCG
   if #sec80CCGdecl > 0
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     do Print_F16_Line_Borders(1)
     print $sl_no2                           (+1,15)
     print $Sections_80ccg_lbl                 (,19)
     print $Rs_lbl                           (,#Col_a1)
     print #sec80CCGdecl                     (,#Col_a2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_b1)
     print #sec80CCG                       (,#Col_b2)   edit 9,99,99,99,99,999.99
     print $Rs_lbl                           (,#Col_c1)
     print #sec80CCG                       (,#Col_c2)   edit 9,99,99,99,99,999.99
          add #sec80CCG to #totsec
     let #flag1 = 1
   end-if


! code commented and modified for the ICE 1485932000
   if #flag1 = 0
      print $Rs_lbl                           (,#Col_a1)
      print '0.0'                             (,#col_a2)   edit 9,99,99,99,99,999.99
      print $Rs_lbl                           (,#Col_b1)
      print '0.0'                             (,#col_b2)   edit 9,99,99,99,99,999.99
      print $Rs_lbl                           (,#Col_c1)
      print '0.0'                             (,#col_c2)   edit 9,99,99,99,99,999.99
      let #flag1 = 0
   end-if

   let #Chapter_VIA_Agg = 0
   let #Chapter_VIA_Agg = #80cce + #totsec
   do Print_F16_Line_Borders(2)
   print '11.'                                 (+2,9) bold
   print $AGGREGATE_DED_lbl                    (,13)
   print $Rs_lbl                               (,#Col_c1)
   print #Chapter_VIA_Agg                      (,#Col_c2)    edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(2)
   print '12.'                                 (+2,9) bold
   print $TOTAL_INCOME_lbl                     (,13)
   print $Rs_lbl                               (,#Col_c1)
   if #taxtotinc < 0
       print '0.00'                            (,#Col_c2)    edit 9,99,99,99,99,999.99
   else
       print #taxtotinc                        (,#Col_c2)    edit 9,99,99,99,99,999.99
   end-if


   do Print_F16_Line_Borders(2)
   print '13.'                                 (+2,9) bold
   print $TAX_TOTAL_lbl                        (,13)
   print $Rs_lbl                               (,#Col_c1)
   let #tottaxsur = #taxtot + #tdssur 
   print #tottaxsur                            (,#Col_c2)    edit 9,99,99,99,99,999.99 
   
   do Print_F16_Line_Borders(2)
   print '14.'                                 (+2,9) bold
   print $Rebtsec89_lbl                        (,13)
   print $Rs_lbl                               (,#Col_c1)
   let #Rebtsec89 = 0 
   print #Rebtsec89                            (,#Col_c2)    edit 9,99,99,99,99,999.99 

   do Print_F16_Line_Borders(2)
   print '15.'                                (+2,9)       bold
   print $Edu_cess_lbl                        (,13)
   print $Rs_lbl                              (,#Col_c1)
   print #educess                             (,#Col_c2)   edit 9,99,99,99,99,999.99

   let #tax_payable = #taxtot  + #educess + #tdssur 
   do Print_F16_Line_Borders(2)
   print '16.'                                (+2,9)       bold
   print $Tax_Payable1_lbl                    (,13)
   print $Rs_lbl                              (,#Col_c1)
   print #tdspay                              (,#Col_c2)   edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(2)
   print '17.'                                (+2,9)       bold
   print $REB89_lbl                           (,13)    !new-Rebate under 89-16
   print $Rs_lbl                              (,#Col_c1)
   print #sec89reb                            (,#Col_c2)   edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(2)
   print '18.'                                (+2,9)       bold
   print $TAX_PAYABLE_lbl                     (,13)
   print $Rs_lbl                              (,#Col_c1)
   Let #Tax-Pay = #tdspay - #sec89reb
   print #Tax-Pay                             (,#Col_c2)   edit 9,99,99,99,99,999.99

   do Print_F16_Line_Borders(3)
   graphic (+3,8,125)     horz-line 1 10 1
End-Procedure ! end of Print_Form16_Data

!****************************************************************************
Begin-Procedure Check-page-end
 if #row > 75
       do Print_F16_Line_Borders(3)
       graphic (+3,8,125)     horz-line 1
       new-page
         alter-printer  point-size=8 font=4
         let $emp_id= 'Emp Id:'|| $EMPLID
         print $emp_id (1, 100) bold
         print ' ' (+1, 110) bold
       graphic (,8,125)     horz-line 1
       graphic (,67,1) vert-line
       graphic (,90, 1)  vert-line
       graphic (,112, 1) vert-line
       let #flag = 1
   end-if

End-Procedure ! end of procedure check-page-end

!****************************************************************************
!  Procedure:   num-conv                                                    *
!  Description: To convert integer seriel numbers to alphabets              *
!****************************************************************************
Begin-Procedure  num-conv(#sl_no,:$sl_no1,:$sl_no2)

    let $sl_no1 = ''
    let $sl_no2 = ''

    evaluate #sl_no
       when = 1
          let $sl_no1 = '(i)'
          let $sl_no2 = '(a)'
       break
       when = 2
          let $sl_no1 = '(ii)'
          let $sl_no2 = '(b)'
       break
       when = 3
          let $sl_no1 = '(iii)'
          let $sl_no2 = '(c)'
       break
       when = 4
          let $sl_no1 = '(iv)'
          let $sl_no2 = '(d)'
       break
       when = 5
          let $sl_no1 = '(v)'
          let $sl_no2 = '(e)'
       break
       when = 6
          let $sl_no1 = '(vi)'
          let $sl_no2 = '(f)'
       break
       when = 7
          let $sl_no1 = '(vii)'
          let $sl_no2 = '(g)'
       break
       when = 8
          let $sl_no1 = '(viii)'
          let $sl_no2 = '(h)'
       break
       when = 9
          let $sl_no1 = '(ix)'
          let $sl_no2 = '(i)'
       break
       when = 10
          let $sl_no1 = '(x)'
          let $sl_no2 = '(j)'
       break
       when = 11
          let $sl_no1 = '(xi)'
          let $sl_no2 = '(k)'
       break
       when = 12
          let $sl_no1 = '(xii)'
          let $sl_no2 = '(l)'


       break

       when = 13
          let $sl_no1 = '(xiii)'
          let $sl_no2 = '(m)'
       break
       when = 14
          let $sl_no1 = '(xiv)'
          let $sl_no2 = '(n)'
       break
       when = 15
          let $sl_no1 = '(xv)'
          let $sl_no2 = '(o)'
       break
       when = 16
          let $sl_no1 = '(xvi)'
          let $sl_no2 = '(p)'
       break
       when = 17
          let $sl_no1 = '(xvii)'
          let $sl_no2 = '(q)'
       break
       when = 18
          let $sl_no1 = '(xviii)'
          let $sl_no2 = '(r)'
       break

   end-evaluate

End-Procedure ! end of num-conv

!****************************************************************************
!  Procedure:   Print_Form16_Section2                                       *
!  Description: To Print Employee and employer namd and other information   *
!****************************************************************************
Begin-Procedure  Print_Form16_Section2

   let #depth = 18
   let #Sl_No = 0
   let #Col_1 = 9
   let #Col_2 = 14
   let #Col_3 = 28
   let #Col_4 = 44
   let #Col_5 = 61
   let #Col_6 = 77
   let #Col_7 = 90
   let #COl_8 = 115
   let #Col_9 = 120

   let $BSR_code     = ''
   let $Date_deposit = ''
   let $Challan_No   = ''

   new-page

   !print $NAME1_lbl                       (+3,33) bold
   
   print 'ANNEXURE-B' (+2,60) bold
   print 'DETAILS OF TAX DEDUCTED AND DEPOSITED INTO CENTRAL GOVERNMENT ACCOUNT THROUGH CHALLAN'                       (+1,24) bold
   print '(The Employer to provide payment wise details of tax deducted and deposited with respect to the employee)'                       (+1,28)
   
   graphic (+2,8,126)     box #depth
   graphic (+3,8,126)     horz-line 1
   graphic (-4,13,#depth) vert-line
   
   graphic (,57,#depth)   vert-line 1
   print 'Challan identification number (CIN)'  (+1, 82)
   graphic (+1,57,77) horz-line 1
   let #depth2 = #depth - 2
   !graphic (,77,#depth2)   vert-line 1
   graphic (,84,#depth2)  vert-line 1
   graphic (,108,#depth2)  vert-line 1

   print $Sr_no_lbl      (,9)   wrap 3 2  keep-top
   print 'Tax deducted in respect ' (,14)
   print 'of the employee (Rs.)'         (+1,14)
   !print $Cheque_lbl     (-1,58)  wrap 19 2
   print $BSR_Code_lbl   (,58)  wrap 25 2
   print $Date_lbl       (,85)  wrap 25 2
   print $Challan_lbl    (-1,109) wrap 28 2
   print ' ' (+1, )


   do Get-Tds-Voucher-Det


      let #tds_apr = #tds_apr + #etax_apr
      let #tds_may = #tds_may + #etax_may
      let #tds_jun = #tds_jun + #etax_jun
      let #tds_jul = #tds_jul + #etax_jul
      let #tds_aug = #tds_aug + #etax_aug
      let #tds_sep = #tds_sep + #etax_sep
      let #tds_oct = #tds_oct + #etax_oct
      let #tds_nov = #tds_nov + #etax_nov
      let #tds_dec = #tds_dec + #etax_dec
      let #tds_jan = #tds_jan + #etax_jan
      let #tds_feb = #tds_feb + #etax_feb
      let #tds_mar = #tds_mar + #etax_mar



   if (#tds_apr > 0 )



              let #tax_deposit = 0
            let  #tax_deposit = #tds_apr -  #sur_apr - #edu_apr

            add 1 to #Sl_No
            print #Sl_No            (+1,#Col_1) edit 99
            print #tds_apr          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_apr     (,#Col_5)
            print $vch_dt_apr       (,#Col_7)
            print $vch_num_apr      (,#Col_8)
        end-if
        if (#tds_may > 0)

             let #tax_deposit = 0
            let  #tax_deposit = #tds_may - #sur_may - #edu_may




            add 1 to #Sl_No
            print #Sl_No            (+1,#Col_1) edit 99
            print #tds_may          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_may     (,#Col_5)
            print $vch_dt_may       (,#Col_7)
            print $vch_num_may      (,#Col_8)
        end-if
        if (#tds_jun > 0)
                        let #tax_deposit = 0
            let  #tax_deposit = #tds_jun -  #sur_jun - #edu_jun



            add 1 to #Sl_No
            print #Sl_No            (+1,#Col_1) edit 99

!            print #tds_jun          (,#Col_5)   edit 9,99,99,99,99,999.99
            print #tds_jun          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_jun     (,#Col_5)
            print $vch_dt_jun       (,#Col_7)
            print $vch_num_jun      (,#Col_8)
        end-if
        if (#tds_jul > 0)



                   let #tax_deposit = 0
            let  #tax_deposit = #tds_jul -  #sur_jul - #edu_jul



            add 1 to #Sl_No
            print #Sl_No            (+1,#Col_1) edit 99
            print #tds_jul          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_jul     (,#Col_5)
            print $vch_dt_jul       (,#Col_7)
            print $vch_num_jul      (,#Col_8)
        end-if
        if (#tds_aug > 0)




            add 1 to #Sl_No
               let #tax_deposit = 0
            let  #tax_deposit = #tds_aug -  #sur_aug - #edu_aug

            print #Sl_No            (+1,#Col_1) edit 99
            print #tds_aug          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_aug     (,#Col_5)
            print $vch_dt_aug       (,#Col_7)
            print $vch_num_aug      (,#Col_8)
        end-if
        if (#tds_sep > 0)





            add 1 to #Sl_No
            print #Sl_No            (+1,#Col_1) edit 99
            let #tax_deposit = 0
            let  #tax_deposit = #tds_sep -  #sur_sep - #edu_sep

            print #tds_sep          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_sep     (,#Col_5)
            print $vch_dt_sep       (,#Col_7)
            print $vch_num_sep      (,#Col_8)
        end-if
        if (#tds_oct > 0)



            add 1 to #Sl_No

            let #tax_deposit = 0
            let  #tax_deposit = #tds_oct -  #sur_oct - #edu_oct
            print #Sl_No            (+1,#Col_1) edit 99


!            print #tds_oct          (,#Col_5)   edit 9,99,99,99,99,999.99
            print #tds_oct          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_oct     (,#Col_5)
            print $vch_dt_oct       (,#Col_7)
            print $vch_num_oct      (,#Col_8)
        end-if
        if (#tds_nov > 0)





            add 1 to #Sl_No

                let #tax_deposit = 0
            let  #tax_deposit = #tds_nov -  #sur_nov - #edu_nov

            print #Sl_No            (+1,#Col_1) edit 99

!            print #tds_nov          (,#Col_5)   edit 99,99,999.99
            print #tds_nov          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_nov     (,#Col_5)
            print $vch_dt_nov       (,#Col_7)
            print $vch_num_nov      (,#Col_8)
        end-if
        if (#tds_dec > 0)





            add 1 to #Sl_No

                let #tax_deposit = 0
            let  #tax_deposit = #tds_dec -  #sur_dec - #edu_dec
            print #Sl_No            (+1,#Col_1) edit 99


!            print #tds_dec          (,#Col_5)   edit 99,99,999.99
            print #tds_dec          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_dec     (,#Col_5)
            print $vch_dt_dec       (,#Col_7)
            print $vch_num_dec      (,#Col_8)
        end-if
        if (#tds_jan > 0)



                      add 1 to #Sl_No

                        let #tax_deposit = 0
            let  #tax_deposit = #tds_jan -  #sur_jan - #edu_jan

            print #Sl_No            (+1,#Col_1) edit 99

            print #tds_jan          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_jan     (,#Col_5)
            print $vch_dt_jan       (,#Col_7)
            print $vch_num_jan      (,#Col_8)
        end-if
        if (#tds_feb > 0)



            add 1 to #Sl_No


            let #tax_deposit = 0
            let  #tax_deposit = #tds_feb -  #sur_feb - #edu_feb
            print #Sl_No            (+1,#Col_1) edit 99

!            print #tds_feb          (,#Col_5)   edit 99,99,999.99
            print #tds_feb          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_feb     (,#Col_5)
            print $vch_dt_feb       (,#Col_7)
            print $vch_num_feb      (,#Col_8)
        end-if
        if (#tds_mar > 0)


            add 1 to #Sl_No

             let #tax_deposit = 0
            let  #tax_deposit = #tds_mar -  #sur_mar - #edu_mar

            print #Sl_No            (+1,#Col_1) edit 99

            print #tds_mar          (,#Col_2)   edit 9,99,99,99,99,999.99
            print $BSR_code_mar     (,#Col_5)
            print $vch_dt_mar       (,#Col_7)
            print $vch_num_mar      (,#Col_8)
        end-if

        print 'Total' (+1,8)
        let #total_tds = #tds_apr + #tds_may + #tds_jun + #tds_jul + #tds_aug + #tds_sep + #tds_oct + #tds_nov + #tds_dec + #tds_jan + #tds_feb + #tds_mar
        print #total_tds (, #Col_2) edit 9,99,99,99,99,999.99

End-Procedure ! end of Print_Form16_Section2

!****************************************************************************
!  Procedure:   Get-TDS                                                     *
!  Description:                                                             *
!****************************************************************************


!******************************************************************************
!****************************************************************************
!  Procedure:   Print_Form16AA_tax_dtls                                       *
!  Description: To Print Employee and employer namd and other information   *
!****************************************************************************
Begin-Procedure  Print_Form16AA_tax_dtls

   let #depth = 16
   let #Sl_No = 0
   let #Col_1 = 13
   let #Col_2 = 14
   let #Col_3 = 28
   let #Col_4 = 40
   let #Col_5 = 61
   let #Col_6 = 77
   let #Col_7 = 80
   let #COl_8 = 115
   let #Col_9 = 120

   new-page

   print $NAME1_lbl                       (+3,33) bold
   graphic (+2,8,126)     box #depth
   graphic (-1,29,#depth)   vert-line 
   graphic (,61,#depth)   vert-line 
   graphic (+2,8,126)     horz-line 1

   print $PAY_AMT_lbl    (,13)
   print  $PAY_DATE_lbl       (,38)
   print $NAME_BANK_lbl   (,79)

   do  Get-Tds-Voucher-Det

         if ( #vch_amt_apr > 0)
            print  #vch_amt_apr (+1,#Col_1)
            print $vch_dt_apr     (,#Col_4)
            print $bank_apr       (,#Col_7)

        end-if

         if ( #vch_amt_may > 0)
            print  #vch_amt_may (+1,#Col_1)
            print $vch_dt_may     (,#Col_4)
            print $bank_may       (,#Col_7)

        end-if

          if ( #vch_amt_jun > 0)
            print  #vch_amt_jun (+1,#Col_1)
            print $vch_dt_jun    (,#Col_4)
            print $bank_jun      (,#Col_7)

        end-if

         if ( #vch_amt_jul > 0)
            print  #vch_amt_jul  (+1,#Col_1)
            print $vch_dt_jul     (,#Col_4)
            print $bank_jul       (,#Col_7)

        end-if

         if ( #vch_amt_aug > 0)
            print  #vch_amt_aug  (+1,#Col_1)
            print $vch_dt_aug     (,#Col_4)
            print $bank_aug       (,#Col_7)

        end-if

         if ( #vch_amt_sep > 0)
            print  #vch_amt_sep (+1,#Col_1)
            print $vch_dt_sep     (,#Col_4)
            print $bank_sep       (,#Col_7)

        end-if

         if ( #vch_amt_oct > 0)
            print  #vch_amt_oct (+1,#Col_1)
            print $vch_dt_oct     (,#Col_4)
            print $bank_oct       (,#Col_7)

        end-if

         if ( #vch_amt_nov > 0)
            print  #vch_amt_nov (+1,#Col_1)
            print $vch_dt_nov    (,#Col_4)
            print $bank_nov      (,#Col_7)

        end-if

          if ( #vch_amt_dec> 0)
            print  #vch_amt_dec (+1,#Col_1)
            print $vch_dt_dec    (,#Col_4)
            print $bank_dec    (,#Col_7)

        end-if

          if ( #vch_amt_jan> 0)
            print  #vch_amt_jan (+1,#Col_1)
            print $vch_dt_jan   (,#Col_4)
            print $bank_jan     (,#Col_7)

        end-if

          if ( #vch_amt_feb > 0)
            print  #vch_amt_feb (+1,#Col_1)
            print $vch_dt_feb   (,#Col_4)
            print $bank_feb     (,#Col_7)

        end-if

          if ( #vch_amt_mar > 0)
            print  #vch_amt_mar (+1,#Col_1)
            print $vch_dt_mar (,#Col_4)
            print $bank_mar     (,#Col_7)

        end-if

        do Print_Form16AA_Section2

End-Procedure ! end of Print_Form16AA_tax_dtls

!****************************************************************************
!  Procedure:   Print_Form16AA_Data                                          *
!  Description: To Print Employee tax data                                  *
!****************************************************************************
Begin-Procedure  Print_Form16AA_Data

   let #Col_a1 = 10
   let #Col_b1 = 74
   let #Col_b2 = 77
   let #Col_c  = 90
   let #Col_c1 = 96
   let #Col_c2 = 99
   let #Col_d1 = 113
   let #Col_d2 = 121

   !let #sec17pro = 0
   !let #sec17val = 0

   graphic (+1,7,127) horz-line
   graphic (,67,37)   vert-line 
   graphic (,90,37)   vert-line 
   graphic (,112,37)  vert-line 

   print '1.'                         (+2,9) bold
   print $GROSS_SAL_lbl               (,12)

   print $SALARY_AS_PER_lbl           (+1,#Col_a1)
   print $Rs_lbl                      (,#Col_b1)
   print #sec17sal                    (,#Col_b2)    edit 99,99,999.99
   Add   #sec17sal to #gross_tot

   print $VALUE_PER_lbl               (+1,#Col_a1)
   print $VALUE_PER1_lbl              (+1,13)
   print $Rs_lbl                      (,#Col_b1)
   print #sec17val                    (,#Col_b2)    edit 99,99,999.99
   Add   #sec17val to #gross_tot

   print $PROFITS_lbl                 (+1,#Col_a1)
   print $PROFITS1_lbl                (+1,13)
   print $Rs_lbl                      (,#Col_b1)
   print #sec17pro                    (,#Col_b2)    edit 99,99,999.99
   Add   #sec17pro to #gross_tot

   print $TOTAL_lbl                   (+1,#Col_a1)
   print $Rs_lbl                      (,#Col_c1)
   print #gross_tot                   (,#Col_c2)    edit 99,99,999.99


   print '2.'                         (+2,9) bold
   print $LESS_lbl                    (,12)

   if #f16edu_exm    <> 0
       print $Child_Edu_lbl        (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16edu_exm           (,#Col_b2) edit 99,99,999.99
       add #f16edu_exm to #totexemp1
   end-if
   
   if #f16hst_exm <> 0
       print $Child_Hostel_lbl     (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16hst_exm           (,#Col_b2) edit 99,99,999.99
       add #f16hst_exm to #totexemp1
   end-if

   if #f16pre_hos_exm <> 0
       print $Prev_hostel_exm_lbl  (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16pre_hos_exm       (,#Col_b2) edit 99,99,999.99
       add #f16pre_hos_exm to #totexemp1
   end-if

   if #f16hra_exm <> 0
       print $HRA_exm_lbl          (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16hra_exm           (,#Col_b2) edit 99,99,999.99
       add #f16hra_exm to #totexemp1
   end-if

   if #f16con_exm <> 0
       print $Conv_exm_lbl         (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16con_exm           (,#Col_b2) edit 99,99,999.99
       add #f16con_exm to #totexemp1
   end-if

   if #f16pre_con_exm <> 0
       print $Prev_conv_exm_lbl    (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16pre_con_exm       (,#Col_b2) edit 99,99,999.99
       add #f16pre_con_exm to #totexemp1
   end-if

   if #f16pre_hra_exm <> 0
       print $Prev_hra_exm_lbl     (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16pre_hra_exm       (,#Col_b2) edit 99,99,999.99
       add #f16pre_hra_exm to #totexemp1
     end-if

    if #f16pre_edu_exm <> 0
       print $Prev_edu_exm_lbl     (+1,14)
       print $Rs_lbl               (,#Col_b1)
       print #f16pre_edu_exm       (,#Col_b2) edit 99,99,999.99
       add #f16pre_edu_exm to #totexemp1
     end-if

    print $Rs_lbl                  (+1,#Col_c1)
    print #totexemp1                (,#Col_c2)  edit 99,99,999.99

   print '3.'                                (+2,9) bold
   print $BALANCE_lbl                        (,12)
   print $Rs_lbl                             (,#Col_c1)

   let   #gross_tot1 = #gross_tot-#totexemp1
   if #gross_tot1 < 0
      LET #gross_tot1 = 0
     end-if
   print #gross_tot1                         (,#Col_c2)   edit 99,99,999.99
   
   print '4.'                                (+2,9) bold

   print $Ded_16_lbl                         (,12)
   print '(a)'                               (+1,12)
   print $DEDUCTIONS1_lbl                    (,15)
   print 'Rs'                                (,#Col_b1)
   print #std_ded_amt                        (,#Col_b2)  edit 99,99,999.99
   print '(b)'                               (+1,12)
   print $DEDUCTIONS2_lbl                    (,15)
   print 'Rs'                                (,#Col_b1)
   print '0.00'                              (,#Col_b2)  edit 99,99,999.99
   print '(c)'                               (+1,12)
   print $DEDUCTIONS3_lbl                    (,15)
   print $Rs_lbl                             (,#Col_b1)
   print #ptded                              (,#Col_b2)  edit 99,99,999.99
   Add #std_ded_amt to #gross_tot2
   Add   #ptded to #gross_tot2

   print '5.'                                (+2,9) bold
   print $AGGREGATE_lbl                      (,12)
   print $Rs_lbl                             (,#Col_c1)
   print #gross_tot2                         (,#Col_c2)   edit 99,99,999.99

   print '6.'                                (+2,9) bold
   print $INCOME_lbl                         (,12)
   print '701'                               (,113) bold
   print $Rs_lbl                             (,+1)

   let   #gross_tot3 = #gross_tot1-#gross_tot2
   IF #gross_tot3 < 0
      LET #gross_tot3 = 0
   END-IF
   print #gross_tot3                         (,+1)   edit 99,99,999.99


  print '7.'                                (+2,9) bold
   print $ADD_lbl                            (,12)

   if #incprop > 0
         add   #incprop to #houseincome
   end-if

   if #losprop > 0
         subtract  #losprop from #houseincome
   end-if
   let   $gen_lbl = '(a) Income under the head "Income from House Property"'
         print $gen_lbl                        (+1,12)
          print '702'                          (,68) bold
         print $Rs_lbl                         (,+3)
         print #houseincome                    (,+1)  edit 99,99,999.99

   if #inccap > 0
         add   #inccap to #anyincome
   end-if

   if #loscapgain > 0
         subtract   #loscapgain from #anyincome
   end-if

   if #incbusprof > 0
         add   #incbusprof to #anyincome
   end-if

   if #losbusprof > 0
         subtract   #losbusprof from #anyincome
   end-if

   if #otherinc > 0
        add   #otherinc to #anyincome
   end-if

   let   $gen_lbl = '(b) Income under the head "Income from Other Sources"'
   print $gen_lbl                                (+1,12)
   print '706'                                   (,68) bold
   print $Rs_lbl                                 (,+3)
   print #anyincome                              (,+1)   edit 99,99,999.99

   let #anyincome1 = #anyincome + #houseincome

   let   $gen_lbl = '(c) Total of (a)+(b)'
   print $gen_lbl                                (+1,12)
   
   print '8.'                                    (+2,9) bold
   print $Rs_lbl                                 (,117)
   print #anyincome1                              (,+1)        edit 99,99,999.99
   
  

   print '9.'                                    (+2,9) bold
   


   print $GROSS_TOTAL_lbl                        (,12)
   print '746'                                   (,113) bold
   print $Rs_lbl                                 (,+1)
   let   #gross_tot4 = #gross_tot3+#anyincome1
   print #gross_tot4                             (,+1)        edit 99,99,999.99
   
    new-page

   
   graphic (+1,7,127) box 80
   graphic (-1,67,80) vert-line
   graphic (,90,  80) vert-line
   graphic (,112, 80) vert-line

   print '10.'                                   (+2,9) bold
   print $DEDUCTIONS_UNDER_lbl                  (,12)
   print $Sections1_lbl                         (+1,12)
   print $CALCULATION1_lbl                      (+1,95)
   print $CALCULATION2_lbl                      (,+8)
   print '(Rs.)'                                (+1,99)
   print '(Rs.)'                                (,+16)

   print '(a)'                                  (+1,15)
   print $Sections_80C_lbl                      (,+1)

   let #totreb     = 0
   let #sec80c_tot = 0

   let   $gen_lbl = ''
   if #f16pf > 0
     graphic (+1,7,127) box 1
   let   $gen_lbl = 'PF'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #f16pf                              (,#Col_b2)   edit 99,99,999.99
      add   #f16pf to #totreb
   end-if

   let   $gen_lbl = ''
   if #ppfreb > 0
     graphic (+1,7,127) box 1
    let   $gen_lbl = 'PPF'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #ppfreb                             (,#Col_b2)   edit 99,99,999.99
    add   #ppfreb to #totreb
   end-if

   if #nscreb > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'NSC Deposits'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #nscreb                             (,#Col_b2)   edit 99,99,999.99
    add   #nscreb to #totreb
   end-if


   if #nssreb > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'NSS Deposits'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #nssreb                             (,#Col_b2)   edit 99,99,999.99
    add   #nssreb to #totreb
   end-if

   if #ctdreb > 0
     graphic (+1,7,127) box 1
    let   $gen_lbl = 'CTD'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #ctdreb                             (,#Col_b2)   edit 99,99,999.99
    add   #ctdreb to #totreb
   end-if

   if #lisareb > 0 or #lisareb10 > 0 or #lisareb15 > 0
       let #lisarebtot = 0
       let #lisarebtot = #lisareb + #lisareb10 + #lisareb15
       graphic (+1,7,127) box 1
       let   $gen_lbl = 'LIC Premium'
       print $gen_lbl                             (,19)
       print $Rs_lbl                              (,#Col_b1)
       print #lisarebtot   (,#Col_b2)   edit 99,99,999.99
       add   #lisarebtot to #totreb
   end-if


   if #defreb > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'Deferred Annuity'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #defreb                             (,#Col_b2)   edit 99,99,999.99
     add   #defreb to #totreb
   end-if

   if #licreb > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'LIC Annuity'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #licreb                             (,#Col_b2)   edit 99,99,999.99
    add   #licreb to #totreb
   end-if

   if #ulipreb > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'ULIP'
     print $gen_lbl                             (,19)
     print $Rs_lbl                              (,#Col_b1)
     print #ulipreb                             (,#Col_b2)   edit 99,99,999.99
    add   #ulipreb to #totreb
   end-if

   if #mfureb  > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'Mutual Funds'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #mfureb                             (,#Col_b2)   edit 99,99,999.99
    add   #mfureb  to #totreb
   end-if

   if #nhbsreb  > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'NHB Scheme'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #nhbsreb                            (,#Col_b2)   edit 99,99,999.99
    add   #nhbsreb  to #totreb
   end-if

   if #prreb > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'Principal Repayment'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #prreb                              (,#Col_b2)   edit 99,99,999.99
    add   #prreb to #totreb
   end-if

   if #cedreb  > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'Child Education Rebate'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #cedreb                             (,#Col_b2)   edit 99,99,999.99
    add   #cedreb  to #totreb
   end-if

   if #infreb  > 0
     graphic (+1,7,127) box 1
     let   $gen_lbl = 'Infrastructure Bonds'
     print $gen_lbl                            (,19)
     print $Rs_lbl                             (,#Col_b1)
     print #infreb                             (,#Col_b2)   edit 99,99,999.99
     add   #infreb  to #totreb
   end-if

   print '' (+1,)
     graphic (,7,127) box 1
     print  #totreb                            (,#Col_c2)   edit 99,99,999.99
   if #totreb > #lim_sec80c
     print #lim_sec80c                         (,+10)   edit 99,99,999.99
     add #lim_sec80c to #sec80c_tot
   else
     print #totreb                             (,#Col_d2)   edit 99,99,999.99
     add #totreb to #sec80c_tot
  end-if

! Section 80CCC, 80CCD and 80CCE
    let #sec80cce     = 0
    let #sec80ccc     = 0
    let #80cce        = 0

    graphic (+1,7,127) box 1
    print '(b)'                                (,15)
    print $Sections_80CCC_lbl                  (,+1)
    print #sec80cccdecl                        (,#Col_c2)   edit 99,99,999.99

   if #sec80cccdecl > #lim_sec80ccc
      print '235'                              (,113)   bold
      print #lim_sec80ccc                      (,+5)        edit 99,99,999.99
      add #lim_sec80ccc to #sec80ccc
   else
      print '235'                              (,113)   bold
      print #sec80cccdecl                      (,+5)    edit 99,99,999.99
      add #sec80cccdecl to #sec80ccc
   end-if

    graphic (+1,7,127) box 1
    print '(c)'                                (,15)
    print $Sections_80CCD_lbl                  (,+1)
    print #sec80ccd                            (,#Col_c2)   edit 99,99,999.99
    print #sec80ccd                            (,#Col_d2)   edit 99,99,999.99

    let #sec80cce = #sec80c_tot + #sec80ccd + #sec80ccc

    !graphic (+1,7,127) box 1
    !print '(d)'                                (,15)
    !print $Sections_80CCE_lbl                  (,+1)

    !if #sec80cce > #lim_sec80cce
    !   let #80cce = #lim_sec80cce
    !   print #80cce                            (,#Col_d2)   edit 99,99,999.99
    !else
    !    let #80cce = #sec80cce
    !    print #80cce                           (,#Col_d2)   edit 99,99,999.99
    ! end-if

    print $Sections2_lbl                       (+2,12)
    print $CALCULATION1_lbl                    (+1,72)
    print $CALCULATION_lbl                     (,+9)
    print $CALCULATION2_lbl                    (,+5)
    print '(Rs.)'                              (+1,76)
    print '(Rs.)'                              (,+18)
    print '(Rs.)'                              (,+16)

    let #sl_no = 4

!Section 80D
   let $temp = ''
   graphic (+1,7,127) box 1
   let $temp = '80D'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                               (,15)
   print $temp                                 (,19)
   print '236'                                 (,#Col_d1)  bold


    let #sec80ddeclared = 0
    let #sec80dqualamt = 0
    let  #sec80amount = 0




   if #sec80D >  0
   let #flag1 = 1
   let #sec80ddeclared = #sec80ddecl
   let #sec80dqualamt = #lim_sec80d
   let #sec80amount = #sec80D
   if  $empsnr = 'Y' or $depsnr = 'Y'
   let #sec80dqualamt = #lim_sec80dsr
   end-if

   end-if

   if #sec80dpr > 0
   let #flag1 = 1
   let #sec80ddeclared = #sec80ddeclared + #sec80dpardecl
   let #sec80amount = #sec80amount + #sec80dpr

   if $snrparen = 'Y'
   let #sec80dqualamt = #sec80dqualamt + #lim_sec80dprsr

   else
    if $snrparen <> 'Y'
    let #sec80dqualamt = #sec80dqualamt +  #lim_sec80dpr


   end-if

   end-if

  end-if

  let #sec80d_hlth_declared = 0
   let #sec80d_hlth_amount = 0
   let #sec80d_hlth_qual = 0

   if #sec80D_hlth > 0
   let #flag1 = 1
      let #sec80d_hlth_declared = #sec80d_hlth_decl
      let #sec80d_hlth_amount = #sec80D_hlth
      if #sec80dqualamt > #sec80amount
         let #sec80d_hlth_qual = #sec80dqualamt - #sec80amount
         if #sec80d_hlth_qual > #lim_sec80d_hlth
            let #sec80d_hlth_qual = #lim_sec80d_hlth
         end-if
      end-if
!To reduce and show the qualifying amount of 80D as there is a preventive health checkup amount
         if #sec80dqualamt > (#sec80amount + #lim_sec80d_hlth)
            let #sec80dqualamt = #sec80dqualamt - #lim_sec80d_hlth
         else
            let #sec80dqualamt = #sec80dqualamt - #sec80d_hlth_qual
         end-if

   end-if


    print #sec80ddeclared                          (,#Col_b2)   edit 99,99,999.99
    print #sec80dqualamt                      (,#Col_c2)   edit 99,99,999.99
    print  #sec80amount                       (,#Col_d2)       edit 99,99,999.99

   add #sec80amount  to #totsec


   let $temp = ''
   graphic (+1,7,127) box 1
   let $temp = 'Preventive Health Checkup'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                               (,15)
   print $temp                                 (,19)


    print #sec80d_hlth_declared               (,#Col_b2)   edit 99,99,999.99
    print #sec80d_hlth_qual                   (,#Col_c2)   edit 99,99,999.99
    print #sec80d_hlth_amount                (,#Col_d2)       edit 99,99,999.99

    add #sec80d_hlth_amount   to #totsec






! Section 80DD
   let $temp = ''
   if #sec80dddecl > 0
     graphic (+1,7,127) box 1
     let $temp = '80DD'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     print $sl_no2                              (,15)
     print $temp                                (,19)
     print #sec80dddecl                         (,#Col_b2)  edit 99,99,999.99
     print #lim_sec80dd                         (,#Col_c2)  edit 99,99,999.99
     print #sec80dd                             (,#Col_d2)  edit 99,99,999.99
     add #sec80dd to #totsec
      end-if

! Section 80DDB
   let $temp = ''
   if #sec80ddbdecl > 0
     graphic (+1,7,127) box 1
     let $temp = '80DDB'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     print $sl_no2                             (,15)
     print $temp                               (,19)
     print #sec80ddbdecl                       (,#Col_b2)   edit 99,99,999.99
     print #sec80ddblim                        (,#Col_c2)   edit 99,99,999.99
     print #sec80ddb                           (,#Col_d2)       edit 99,99,999.99
     add #sec80ddb to #totsec
   end-if

! Section 80E
   let $temp  = ''
   let #temp2 = 0
   graphic (+1,7,127) box 1
   let $temp = '80E'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                               (,15)
   print $temp                                 (,19)

   if #sec80edecl > 0
     print #sec80edecl                         (,#Col_b2)  edit 99,99,999.99
     print #sec80edecl                         (,#Col_c2)  edit 99,99,999.99
     print '239'                               (,#Col_d1)  bold
     print #sec80edecl                         (,#Col_d2)       edit 99,99,999.99
     add #sec80edecl to #totsec
   else
     print #temp2                              (,#Col_b2)  edit 99,99,999.99
     print #temp2                              (,#Col_c2)  edit 99,99,999.99
     print '239'                               (,#Col_d1)  bold
     print #temp2                              (,#Col_d2)       edit 99,99,999.99
   end-if

 ! Section 80G
   let $temp  = ''
   let #temp2 = 0
   graphic (+1,7,127) box 1
   let $temp = '80G'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                               (,15)
   print $temp                                 (,19)

   if #sec80g > 0
     let #temp3  = 0
     let #temp3  = #sec80g_50 * 2
     let #temp3  = #temp3 + #sec80g_100
     print #temp3                              (,#Col_b2)   edit 99,99,999.99
     print #sec80g                             (,#Col_c2)   edit 99,99,999.99
     print '242'                               (,#Col_d1)   bold
     print #sec80g                             (,#Col_d2)        edit 99,99,999.99
     add #sec80g to #totsec
      end-if

   if #sec80g = 0
     print #temp2                              (,#Col_b2)  edit 99,99,999.99
     print #temp2                              (,#Col_c2)  edit 99,99,999.99
     print '242'                               (,#Col_d1)  bold
     print #temp2                              (,#Col_d2)       edit 99,99,999.99
      end-if


! Section 80GG
   let $temp  = ''

   if #sec80gg > 0
     graphic (+1,7,127) box 1
     let $temp = '80GG'
     print $temp                              (,15)
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     print $sl_no2                            (,19)
     print #sec80gg                           (,#Col_b2)   edit 99,99,999.99
     print #lim_sec80gg                       (,#Col_c2)   edit 99,99,999.99
      end-if

   if #sec80gg > #lim_sec80gg
       print #lim_sec80gg                     (,#Col_d2)   edit 99,99,999.99
       add #lim_sec80gg to #totsec
   else
     if #sec80gg <> 0
          print #sec80gg                      (,#Col_d2)  edit 99,99,999.99
          add #sec80gg to #totsec
      end-if
    end-if


! Section 80GGA
   let $temp  = ''

   if #sec80gga > 0
     graphic (+1,7,127) box 1
     let $temp = '80GGA'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     print $sl_no2                            (,15)
     print $temp                              (,19)
     print #sec80gga                          (,#Col_b2)   edit 99,99,999.99
     print #lim_sec80gga                      (,#Col_c2)   edit 99,99,999.99
      end-if

   if #sec80gga > #lim_sec80gga
       print #lim_sec80gga                    (,#Col_d2)   edit 99,99,999.99
       add #lim_sec80gga to #totsec
   else
     if #sec80gga <> 0
          print #sec80gga                     (,#Col_d2)  edit 99,99,999.99
          add #sec80gga to #totsec
        end-if
        end-if


! Section 80L
   let $temp  = ''
   let #tmep2 = 0

   graphic (+1,7,127) box 1
   let $temp = '80L'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                            (,15)
   print $temp                              (,19)

   if #sec80ldecl > 0
     print #sec80ldecl                        (,#Col_b2)   edit 99,99,999.99
     print #lim_sec80l                        (,#Col_c2)   edit 99,99,999.99
        end-if

   if #sec80ldecl > #lim_sec80l
      print '260'                             (,#Col_d1)
      print #lim_sec80l                       (,#Col_d2)        edit 99,99,999.99
      add #lim_sec80l to #totsec
   else
     if #sec80ldecl <> 0
        print '260'                             (,#Col_d1)
        print #sec80ldecl                       (,#Col_d2)    edit 99,99,999.99
        add #sec80ldecl to #totsec
        end-if
        end-if

   if #sec80ldecl = 0
     print #temp2                              (,#Col_b2)  edit 99,99,999.99
     print #temp2                              (,#Col_c2)  edit 99,99,999.99
     print '260'                               (,#Col_d1)  bold
     print #temp2                              (,#Col_d2)       edit 99,99,999.99
        end-if

! Section 80QQB
   let $temp  = ''
   let #tmep2 = 0

   graphic (+1,7,127) box 1
   let $temp = '80QQB'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                              (,15)
   print $temp                                (,19)
   print #temp2                               (,#Col_b2)  edit 99,99,999.99
   print #temp2                               (,#Col_c2)  edit 99,99,999.99
   print '275'                                (,#Col_d1)  bold
   print #temp2                               (,#Col_d2)       edit 99,99,999.99

! Section 80RRB
   let $temp  = ''
   let #temp2 = 0

   graphic (+1,7,127) box 1
   let $temp = '80RRB'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                              (,15)
   print $temp                                (,19)
   print #temp2                               (,#Col_b2)  edit 99,99,999.99
   print #temp2                               (,#Col_c2)  edit 99,99,999.99
   print '282'                                (,#Col_d1)  bold
   print #temp2                               (,#Col_d2)       edit 99,99,999.99


  ! Section 80EE
   if #sec80ee > 0

   let $temp  = ''
   let #temp2 = 0

   graphic (+1,7,127) box 1
   let $temp = '80EE'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                              (,15)
   print $temp                                (,19)
   print #sect80eedecl                               (,#Col_b2)  edit 99,99,999.99
   print #sec80ee                               (,#Col_c2)  edit 99,99,999.99
   print ' '                                (,#Col_d1)  bold
   print #sec80ee                               (,#Col_d2)       edit 99,99,999.99
   end-if


! Section 80CCF
   let $temp  = ''
   let #temp2 = 0
  If #sec80CCFdecl > 0
   graphic (+1,7,127) box 1
   let $temp = '80CCF'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                              (,15)
   print $temp                                (,19)
   print #sec80CCFdecl                        (,#Col_b2)  edit 99,99,999.99

   if #lim_sec80ccf > #sec80CCFdecl
   print #sec80CCFdecl                        (,#Col_c2)  edit 99,99,999.99
   else
   print #lim_sec80ccf                        (,#Col_c2)  edit 99,99,999.99
   end-if

   print #sec80CCF                            (,#Col_d2)  edit 99,99,999.99
   add #sec80CCF to #totsec
   end-if


! Section 80CCG
   let $temp  = ''
   let #temp2 = 0
  If #sec80CCGdecl > 0
   graphic (+1,7,127) box 1
   let $temp = '80CCG'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                              (,15)
   print $temp                                (,19)
   print #sec80CCGdecl                        (,#Col_b2)  edit 99,99,999.99

   print #sec80CCG                        (,#Col_c2)  edit 99,99,999.99

   print #sec80CCG                            (,#Col_d2)  edit 99,99,999.99
   add #sec80CCG to #totsec
   end-if

! Section 80TTA
   let $temp  = ''
   let #temp2 = 0
  If #sec80TTAdecl > 0
   graphic (+1,7,127) box 1
   let $temp = '80TTA'
   add 1 to #sl_no
   do num-conv(#sl_no,$sl_no1,$sl_no2)
   print $sl_no2                              (,15)
   print $temp                                (,19)
   print #sec80TTAdecl                        (,#Col_b2)  edit 99,99,999.99

   if #lim_sec80tta > #sec80TTAdecl
   print #sec80TTAdecl                        (,#Col_c2)  edit 99,99,999.99
   else
   print #lim_sec80tta                        (,#Col_c2)  edit 99,99,999.99
   end-if

   print #sec80TTA                            (,#Col_d2)  edit 99,99,999.99
   add #sec80TTA to #totsec
   end-if


! Section 80U
   let $temp  = ''
   if #sec80udecl > 0
     graphic (+1,7,127) box 1
     let $temp = '80U'
     add 1 to #sl_no
     do num-conv(#sl_no,$sl_no1,$sl_no2)
     print $sl_no2                             (,15)
     print $temp                               (,19)
     print #sec80udecl                         (,#Col_b2)   edit 99,99,999.99
     print #lim_sec80u                         (,#Col_c2)    edit 99,99,999.99
     print #sec80u                             (,#Col_d2)   edit 99,99,999.99
        end-if
   let #totsec = #80cce + #totsec + #sec80ee

!******************************
   let #Col_d3 = 117


   print '10.'                                 (+2,9)        bold
   print $AGGREGATE_DED_lbl                    (,+1)
   print '747'                                 (,#Col_d1)    bold
   print $Rs_lbl                               (,+1)
   print #totsec                               (,+1)         edit 99,99,999.99

   print '11.'                                 (+1,9)        bold
   print $TOTAL_INCOME_lbl                     (,+1)
   print '760'                                 (,#Col_d1)    bold
   print $Rs_lbl                               (,+1)
     if #taxtotinc < 0
       print '0.00'                            (,+1)         edit 99,99,999.99
   else
       print #taxtotinc                        (,+1)         edit 99,99,999.99
        end-if


   print '12.'                                 (+1,9)        bold
   print $TAX_TOTAL_lbl                        (,+1)
   print '810'                                 (,#Col_d1)    bold
   print $Rs_lbl                               (,+1)
   print #taxtot                               (,+1)         edit 99,99,999.99

   print '13.'                                 (+1,9)        bold
   print $REB_VIII                             (,+1)
    graphic (,7,127)     horz-line
    print $SEC_88_lbl                          (+1,22)
    print $CALCULATION1_lbl                    (,72)
    print $CALCULATION_lbl                     (,+9)
    print $CALCULATION3_lbl                    (,+8)
    print $PLZ_SPC_lbl                         (+1,24)
    print '(Rs.)'                              (,76)
    print '(Rs.)'                              (,+18)
    print '(Rs.)'                              (,+16)
    graphic (+1,7,127) box 1
    Print  '(a)'                               (,12)

    graphic (+1,7,127) box 1
    Print  '(b)'                                (,12)
   graphic (,7,127) box 1
      Print  '(c)'                             (+1,12)
   graphic (,7,127) box 1
      Print  '(d)'                             (+1,12)
   graphic (,7,127) box 1
      Print  '(e)'                             (+1,12)
   graphic (,7,127) box 1
      Print  '(f)'                             (+1,12)
    graphic (+1,7,127) box 1
      Print  '(g)'                             (+1,12)
      Print  $TOTAL_88_lbl                     (,18)         point-size=6
      print '812'                              (,#Col_d1)    bold
    graphic (,7,127) box 1


   print 'II. '                                 (+1,15)
   print $REB88B_lbl                            (,18)
   print '813'                                 (,#Col_d1)     bold
   print $Rs_lbl                               (,#Col_d3)
   print '0.00'                                (,+1)          edit 99,99,999.99
   print $REB88C_lbl                            (+1,18)
   print '814'                                 (,#Col_d1)     bold
   print $Rs_lbl                               (,#Col_d3)
   print '0.00'                                (,+1)          edit 99,99,999.99
   print $REB88D_lbl                            (+1,18)
   print '815'                                 (,#Col_d1)     bold
   print $Rs_lbl                               (,#Col_d3)
   print '0.00'                                (,+1)          edit 99,99,999.99

   print '14.'                                 (+1,9)         bold
   print $AGGREGATE_TAX_lbl                    (,13)          wrap 33 2
   print '820'                                 (,#Col_d1)     bold
   print $Rs_lbl                               (,#Col_d3)
   print '0.00'                                (,+1)          edit 99,99,999.99


   print '15.'                                 (+1,9)         bold
   print $TAX_PAY_lbl                          (,+1)          wrap 40 2
   print '832'                                 (,#Col_d1)     bold
   print $Rs_lbl                               (,#Col_d3)
   let  #tax_payable = #taxtot + #tdssur
   print #tax_payable                           (,+1)         edit 99,99,999.99

   print '15A.'                                (+1,9)         bold
   print $Edu_cess1_lbl                         (,+1)
   print '834'                                 (,#Col_d1)     bold
   print $Rs_lbl                               (,+1)
   print #educess                              (,+1)          edit 99,99,999.99

   print '16.'                                (+1,9)          bold
   print $REB89_lbl                           (,+1)    !new-Rebate under 89-16
   print '837'                                (,#Col_d1)      bold
   print $Rs_lbl                              (,#Col_d3)
   print #sec89reb                            (,+1)           edit 99,99,999.99
   let #temp16aa = #tax_payable + #educess - #sec89reb
   print '17.'                                (+1,9)          bold
   print $Tax_Payble_lbl                    (,+1)
   print '841'                                (,#Col_d1)      bold
   print $Rs_lbl                              (,#Col_d3)
   print #temp16aa                            (,+1)           edit 99,99,999.99


   print '18.'                                 (+1,9)         bold
   print $LESS_TAX_lbl                         (,+1)

   IF #tds < 0
     LET #tds = 0
   END-IF

   print '868'                                 (,91)         bold
   print $Rs_lbl                               (,+1)
   print #tds                                  (,+1)         edit 99,99,999.99
   Let #tax_18 = #tds

   print $TAX_EMPL_lbl                         (+1,18)       WRAP 55 8 keep-top
   print '872'                                 (+1,91)       bold
   print $Rs_lbl                               (,+1)
   print #PERQ_EMPL                            (,+1)         edit 99,99,999.99

   Let #tax_18= #tax_18 + #PERQ_EMPL

   print '873'                                 (+1,#Col_d1)  bold
   print $Rs_lbl                               (,#Col_d3)
   print #tax_18                               (,+1)         edit 99,99,999.99

   let   #gross_tot7 = #temp16aa - #tax_18

   print '19.'                                 (+1,9)        bold
   print $TAX_PAY_REF_lbl                      (,13)
   print '891'                                 (,#Col_d1)    bold
   print $Rs_lbl                               (,#Col_d3)
   print #gross_tot7                           (,+1)         edit 99,99,999.99

End-Procedure ! end of Print_Form16AA_Data


!****************************************************************************
!  Procedure:   Print_Form16AA_section2                                       *
!  Description: To Print Employee and employer namd and other information   *
!****************************************************************************
Begin-Procedure  Print_Form16AA_Section2

   let #Col_a1 = 17
   let #Col_b1 = 39
   let #Col_c1 = 54
  
    LET $NetInWords = ''

    LET $RECNAME = ''

BEGIN-SELECT
RDF1.RECNAME 
   LET $RECNAME = &RDF1.RECNAME   
FROM PSRECDEFN RDF1
WHERE RECNAME='GPIN_DS_SIG_TBL'
END-SELECT

    if $RECNAME='GPIN_DS_SIG_TBL' 
       !DO Get-Authority-Info-SS
    end-if

    IF LENGTH($AuthName) = 0 or LENGTH($AuthName) = 0 or LENGTH($AuthDesig) = 0 or LENGTH(rtrim($NetInWords, ' ')) = 0
       DO Get-Authority-Info
    end-if

    move #tds to $Tax_Deduct 99,99,999.99
    DO Net-Pay-In-Words-GPIN (#tds, $NetInWords)
    IF LENGTH($AuthFatherName) = 0
       LET $AuthFatherName = '.................................'
    END-IF
    IF LENGTH($AuthName) = 0
       LET $AuthName = '.................................'
    END-IF
    IF LENGTH($AuthDesig) = 0
       LET $AuthDesig = '...........................'
    END-IF
    IF LENGTH(rtrim($NetInWords, ' ')) = 0
       LET $NetInWords = '...............................................'
    END-IF
    LET $declare1 = 'I, '||$AuthName|| ' son of ' || $AuthFatherName || ' working in the capacity of ' ||$AuthDesig || ' (designation) do hereby certify '
    LET $declare1 = ltrim(rtrim($declare1,' '),' ') || ' that a sum of Rs ' || $Tax_Deduct || ' [Rupees ' ||$NetInWords|| ' (in words)] has been deducted at source and '
    LET $declare1 = $declare1 || 'paid to the credit of the Central Government. I further certify that the information given above is '
    LET $declare1 = $declare1 || 'true and correct based on the books of account, documents and other available records.'
    LET $fullname = 'Full Name:   '||$AuthName
    LET $desgn    = 'Designation: '||$AuthDesig
    let $place    =  'Place '
    let $signature = 'Signature of the person responsible for deduction of tax'
    let $date     =  'Date  '

    print $declare1          (28,8) WRAP 145 3 keep-top
    print $place             (+4,8)
    print $EST_CITY          ( ,+1)
    print $date              (+2,8)
    print $Creation_Dt       ( ,+1)
      print $signature         (-2,78)
      print $fullname         (+1,78)
    print $desgn             (+1,78)

End-Procedure ! end of Print_Form16AA_Section2


!**********************************************************************
Begin-Procedure Get-Annual-Amts
LET #f16hra_sal = 0
LET #f16hra_rent = 0
LET #f16hra = 0
let #f16hra_exm = 0
Begin-Select

MP3.GPIN_FLD_NAME
MP3.CALC_RSLT_VAL
MP2.GP_CALC_TS
MP.LAST_SEG_IND
  Move &mp3.GPIN_FLD_NAME To $rptfldname
  Move &mp3.CALC_RSLT_VAL To #repval
   let $rptfldname = ltrim($rptfldname ,' ' )
   let $rptfldname = rtrim($rptfldname ,' ' )

  Evaluate $rptfldname
   when = 'F16_CTD_REB'
      move #repval to #ctdreb
      break
   when = 'F16_DEF_REB'
      move #repval to #defreb
      break
   when = 'F16_EDU_CESS'
      move #repval to #educess
      break
   when = 'F16_INF_REB'
     move #repval to #infreb
      break
   when = 'F16_LIC_REB'
      move #repval to #licreb
      break
   when = 'F16_LIP_REB'
     move #repval to #lipreb
      break
   when = 'F16_MFU_REB'
      move #repval to #mfureb
      break
   when = 'F16_NHBS_REB'
      move #repval to #nhbsreb
      break
   when = 'F16_NSC_REB'
      move #repval to #nscreb
      break
   when = 'F16_NSS_REB'
      move #repval to #nssreb
      break
   when = 'F16_FIX_DEP'
      move #repval to #fixdep
      break
   when = 'F16_INC_HS_PROP'
      move #repval to #incprop
      break
   when = 'F16_LOS_HS_PROP'
     move #repval to #losprop
      break
   when = 'F16_LOS_CAP_GNS'
      move #repval to #loscapgain
      break
   when = 'F16_SECPR80D'
        move #repval to #sec80dpr
        break

   when = 'F16_SECPRDECL'
   move #repval to #sec80dpardecl
   break


  when = 'LIM VR PR80D SR'
  Move &A.MONETARY_VALUE to #lim_sec80dprsr
  break


   when = 'F16_INC_BUS_PRO'
      move #repval to #incbusprof
      break
   when = 'F16_LOS_BUS_PRO'
      move #repval to #losbusprof
      break
   when = 'F16_INC_CAP_GNS'
      move #repval to #inccap
      break
   when = 'F16_OTHER_INC'
      move #repval to #otherinc
      break
   when = 'F16_PPF_REB'
      move #repval to #ppfreb
      break
   when = 'F16_PR_REB'
      move #repval to #prreb
      break
   when = 'F16_SEC17_SAL'
       move #repval to #sec17sal
      break
   when = 'F16_PT_DEDUCT'

      add #repval to #ptded
      break
   when = 'F16_SEC17_PROFT'
      move #repval to #sec17pro
      break
   when = 'F16_SEC17_VAL'
      move #repval to #sec17val
      break
   when = 'F16_SEC80CCC'
      move #repval to #sec80ccc
      break
   when = 'F16_80CCC_DECL'
      move #repval to #sec80cccdecl
      break
   when = 'F16_SEC80D'
      move #repval to #sec80d
      break
   when = 'F16_80D_DECL'
      move #repval to #sec80ddecl
      break
   when = 'F16_80DHLT_DECL'
      move #repval to #sec80d_hlth_decl
      break
   when = 'F16_80D_HLTCHK'
      move #repval to #sec80d_hlth
      break
   when = 'F16_80DD_DECL'
      move #repval to #sec80dddecl
      break
   when = 'F16_SEC80DD'
      move #repval to #sec80dd
      break
   when = 'F16_SEC80DDB'
      move #repval to #sec80ddb
      break
   when = 'F16_80DDB_DECL'
      move #repval to #sec80ddbdecl
      break
   when = 'F16_SEC80E'
      move #repval to #sec80e
      break
   when = 'F16_SEC80EE'
      move #repval to #sec80ee
      break

   when = 'F16_80E_DECL'
      move #repval to #sec80edecl
      break
   when = 'F16_SEC80G'
      move #repval to #sec80g
      break !
   when = 'F16_SEC80CCF'
      move #repval to #sec80CCF
      break
   when = 'F16_SEC80CCG'
      move #repval to #sec80CCG
      break
   when = 'F16_SEC80TTA'
      move #repval to #sec80TTA
      break
    when = 'F16_80TTA_DECL'
      move #repval to #sec80TTAdecl
      break
    when = 'F16_80CCF_DECL'
      move #repval to #sec80CCFdecl
      break
    when = 'F16_80CCG_DECL'
      move #repval to #sec80CCGdecl
      break
   when = 'F16_80G_50PCT'
      move #repval to #sec80g_50
      break
   when = 'F16_80G_100PCT'
      move #repval to #sec80g_100
      break
   when = 'F16_SEC80GG'
      move #repval to #sec80gg
      break
   when = 'F16_SEC80GGA'
      move #repval to #sec80gga
      break
   when = 'F16_SEC80L'
      move #repval to #sec80l
      break
   when = 'F16_80L_DECL'
      move #repval to #sec80ldecl
      break
   when = 'F16_SEC80U'
      move #repval to #sec80u
      break
   when = 'F16_80U_DECL'
      move #repval to #sec80udecl
      break
   when = 'F16_SEC88B_REB'
      move #repval to #sec88breb
      break
   when = 'F16_SURCHARGE'
      move #repval to #tdssur
      break
   when = 'F16_SEC88C_REB'
      move #repval to #sec88creb
      break
   when = 'F16_SEC89_REB'
      move #repval to #sec89reb
      break
   when = 'F16_STD_DEDUCT'
     move #repval to #stdded
      break
   when = 'F16_TAX_TOT_INC'
      move #repval to #taxtot
      break

   when = 'F16_TOT_TAX_INC'
      move #repval to #taxtotinc
      break
   when = 'F16_TDS_TAX_PAY'
      move #repval to #tdspay
      break
   when = 'F16_TOT_EXEMP'
      move #repval to #totexemp
      break
   when = 'F16_ULIP_REB'
      move #repval to #ulipreb
      break
   when = 'F16_TOT_REB88'
      move #repval to #tot_rebate_sec_88
      break
   when = 'F16_CED_REB'
      move #repval to #cedreb
      break
   when = 'F16_LISA_REB'
      move #repval to #lisareb
      break

   when = 'F16_LISA_REB10'
      move #repval to #lisareb10
      break

   when = 'F16_LISA_REB15'
      move #repval to #lisareb15
      break


   when = 'F16_80DDB_LIM'
      move #repval to #sec80ddblim
      break
   when = 'F16_PF'

       add #repval to #f16pf
      break
      ! code modified for the ice 1485932000
   when = 'F16_80CCD_DECL'
    move #repval to #Sec80ccd
    break
   ! code modified for the ice 1485932000
   when = 'F16_CHL_ED_EXM'

        let #f16edu_exm = #repval
       let #f16edu_exm_max_lim = 200 * #Date_Diff
       if  #f16edu_exm > #f16edu_exm_max_lim
           let #f16edu_exm = #f16edu_exm_max_lim
       end-if
      break
   when = 'F16_CHL_HST_EXM'

       if #Nbr_chld >= 2
          let #f16hst_exm_max_lim = 2 * 100 * #Date_Diff
       else
          let #f16hst_exm_max_lim = 100 * #Date_Diff
       end-if
       if #repval > #f16hst_exm_max_lim
         let #f16hst_exm = #f16hst_exm_max_lim
       else
          LET #f16hst_exm = #repval
       end-if
      break

   when = 'F16_CONVEY_EXM'
       add #repval to #f16con_exm
      break
   when = 'F16_MED_EXM'
       add #repval to #f16med_exm
      break
   when = 'F16_LTA_EXM'
       add #repval to #f16lta_exm
      break
   when = 'F16_HRA_EXM'
    add #repval to #f16hra_exm
    break
   when = 'F16_PRE_CON_EXM'
       LET #f16pre_con_exm = #repval

      break
   when = 'F16_PRE_EDU_EXM'
       LET #f16pre_edu_exm = #repval
      break
   when = 'F16_PRE_HOS_EXM'
       LET #f16pre_hos_exm = #repval
      break
   when = 'F16_PRE_HRA_EXM'
       LET #f16pre_hra_exm = #repval
      break

        when = 'F16_PO_DEP_AC'
            LET #f16po_dep_ac = #repval
        break
        when = 'F16_SR_CTZ_SAV'
            LET #f16sr_ctz_sav = #repval
        break

  End-Evaluate

FROM PS_GPIN_PR_TMP3 MP3 ,PS_GPIN_PR_TMP MP, PS_GP_PYE_SEG_STAT MP2
WHERE  MP3.JOBINSTANCE = MP.JOBINSTANCE
AND MP3.EMPLID = MP.EMPLID
AND MP.EMPLID = MP2.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP.CAL_RUN_ID = MP2.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = MP2.EMPL_RCD
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP.GP_PAYGROUP = MP2.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP.CAL_ID = MP2.CAL_ID
AND MP3.ORIG_CAL_RUN_ID = MP.ORIG_CAL_RUN_ID !KEY MAP
AND MP.ORIG_CAL_RUN_ID = MP2.ORIG_CAL_RUN_ID !KEY MAP
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP.RSLT_SEG_NUM  = MP2.RSLT_SEG_NUM
AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
AND MP.RSLT_VER_NUM  = MP2.RSLT_VER_NUM
AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
AND MP.RSLT_REV_NUM  = MP2.RSLT_REV_NUM
AND MP3.EMPLID = $emplid
AND MP.PRD_END_DT  = (Select MAX(PRD_END_DT) FROM PS_GPIN_PR_TMP
                      WHERE JOBINSTANCE = #prcs_job_instance
                      and GP_GENRPT_BREAK1=$Tmp_Estab !added to get transfer employees
                      AND EMPLID = $emplid)
AND MP3.JOBINSTANCE = #prcs_job_instance
AND MP.LAST_SEG_IND = 'Y'
ORDER BY MP3.GPIN_FLD_NAME, MP2.GP_CALC_TS ASC
End-Select

end-procedure !Get-Annual-Amts

!************************************************************************


!*************************************************************************

Begin-Procedure Get-Employee-Details
Let $var_Mar='03'
Let $var_date='31'

!IF RTRIM($EstabID, ' ') <> ''
         !let $Estab_Where_Clause = 'AND JOB.ESTABID = '''|| $EstabID ||''''
       ! ELSE
          !  MOVE &JOB.ESTABID TO $EstabID
          !  let $Estab_Where_Clause = ''
      ! END-IF


      IF RTRIM($EstabID, ' ') <> ''
         let $Estab_Where_Clause = 'AND JOB.ESTABID = '''|| $EstabID ||''''
        ELSE
            MOVE &JOB.ESTABID TO $EstabID
            let $Estab_Where_Clause = ''
       END-IF
Begin-Select
PNID.NATIONAL_ID
  Move &PNID.NATIONAL_ID To $EMPPAN
FROM PS_PERS_NID PNID
WHERE PNID.COUNTRY = 'IND'
AND PNID.NATIONAL_ID_TYPE = 'PAN'
AND PNID.EMPLID = $EMPLID
End-Select

Begin-Select
JOBCD.DESCR
JOB.ESTABID

        MOVE &JOBCD.DESCR TO $DESCR1

FROM PS_JOB JOB, PS_JOBCODE_TBL JOBCD
WHERE JOB.JOBCODE=JOBCD.JOBCODE AND
      JOB.EMPLID = $EMPLID AND
      JOB.EMPL_RCD = 0 AND
      JOB.EFFDT <=(SELECT MAX(EFFDT) FROM PS_JOB WHERE
                EMPLID=JOB.EMPLID AND
                EFFDT <= &RNCT.END_DT) AND
        JOB.EFFSEQ <= (SELECT MAX(EFFSEQ) FROM PS_JOB  WHERE
                EMPLID=JOB.EMPLID AND
                EMPL_RCD=JOB.EMPL_RCD AND
                EFFDT = JOB.EFFDT)
AND    JOBCD.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
                       WHERE JOBCODE  = JOBCD.JOBCODE
                       AND   EFFDT <= &RNCT.END_DT)
![$Estab_Where_Clause]
[$Estab_Where_Clause]
ORDER BY JOB.EMPLID
End-Select

Begin-Select
GEN.GPIN_IND_PAR_SNR
GEN.GPIN_SR_CITIZEN
GEN.GPIN_SNR_CTZ_DPNDT
    move &GEN.GPIN_IND_PAR_SNR to $Snrparen
    move &GEN.GPIN_SR_CITIZEN to $empsnr
    move &GEN.GPIN_SNR_CTZ_DPNDT to $depsnr
from PS_GPIN_TDS_GEN GEN
where GEN.EMPLID = $EMPLID
AND GEN.EFFDT = (SELECT MAX(EFFDT) from  PS_GPIN_TDS_GEN GEN1
                             where GEN1.EMPLID = GEN.EMPLID
                             and GEN1.EFFDT <= &RNCT.END_DT)



End-Select



Begin-Select
EMPNM.NAME
EMPNM.FIRST_NAME
EMPNM.MIDDLE_NAME
EMPNM.LAST_NAME
EMP.HIRE_DT
EMP.REHIRE_DT
EMP.TERMINATION_DT

    If (&emp.hire_dt >= &RNCT.BGN_DT) and (&emp.hire_dt <= &RNCT.END_DT)
     Move &emp.hire_dt To $hrdt
  Else
       If (&emp.rehire_dt >= &RNCT.BGN_DT) and (&emp.rehire_dt <= &RNCT.END_DT)
       Move &emp.rehire_dt To $hrdt
      Else
        let $hrdt = &RNCT.BGN_DT
     End-If
  End-If

      If (&emp.termination_dt <> '') and (&emp.termination_dt <= &RNCT.END_DT)
         Move &emp.termination_dt To $termntdt
       Else
         let $termntdt = &RNCT.END_DT
      End-If

    let $Name1 = ''
    let $Name1 = ltrim(rtrim(&EMPNM.FIRST_NAME,' '),' ')
    let $Name1 = ltrim(rtrim($Name1,' '),' ') || ' ' || ltrim(rtrim(&EMPNM.MIDDLE_NAME,' '),' ')
    let $Name1 = ltrim(rtrim($Name1,' '),' ') || ' ' || ltrim(rtrim(&EMPNM.LAST_NAME,' '),' ')

FROM PS_NAMES  EMPNM ,PS_EMPLOYMENT EMP
WHERE EMP.EMPLID = EMPNM.EMPLID
AND EMP.EMPLID = $EMPLID
AND EMPNM.NAME_TYPE  = 'PRI'
AND EMPNM.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
                        WHERE EMPLID = EMPNM.EMPLID
                        AND   NAME_TYPE = 'PRI'
                        AND   EFFDT <= &RNCT.END_DT)
End-Select

BEGIN-SELECT DISTINCT
D1.NAME
D1.FIRST_NAME
D1.MIDDLE_NAME
D1.LAST_NAME
         LET $FatherName = ''
         let $FatherName = ltrim(rtrim(&D1.FIRST_NAME,' '),' ')
         let $FatherName = ltrim(rtrim($FatherName,' '),' ') || ' ' || ltrim(rtrim(&D1.MIDDLE_NAME,' '),' ')
         let $FatherName = ltrim(rtrim($FatherName,' '),' ') || ' ' || ltrim(rtrim(&D1.LAST_NAME,' '),' ')

FROM PS_DEPENDENT_BENEF D1
WHERE D1.EMPLID = $EMPLID
AND D1.RELATIONSHIP = 'P'
END-SELECT

End-Procedure ! Get-Employee-Details
!**********************************************************************
Begin-Procedure Get-Assessment-Year
           LET $ASSESS_YEAR = ''
           LET $TODAY_DATE = $CURRENT-DATE
           let $CURRENT_YR  = edit (&RNCT.BGN_DT,'dd-mm-yyyy')
           let $CURRENT_YR2 = edit (&RNCT.END_DT,'dd-mm-yyyy')
           let $rpt_date = edit($CURRENT-DATE,'dd-mm-yyyy')
           EXTRACT $CURRENT_YEAR1 FROM $CURRENT_YR 6 4
           EXTRACT $CURRENT_YEAR2 FROM $CURRENT_YR2 6 4
           EXTRACT $CURRENT_MTH1 FROM $CURRENT_YR 3 2
           LET #ASSMT_BGN_MTH  = to_number($CURRENT_MTH1)
           LET #ASSMT_BGN_YEAR = to_number($CURRENT_YEAR1)
           LET #ASSMT_END_YEAR = to_number($CURRENT_YEAR2)
           IF #ASSMT_BGN_MTH > 3
           ADD 1 TO #ASSMT_BGN_YEAR
           END-IF
           LET #ASSMT_END_YEAR = #ASSMT_BGN_YEAR + 1
           LET $ASSESS_YEAR    = edit(#ASSMT_BGN_YEAR,'9999')
           LET $ASSESS_YEAR1   = edit(#ASSMT_END_YEAR,'9999')
           LET $ASSESS_YEAR    = LTRIM(RTRIM($ASSESS_YEAR,' '),' ')||' - '|| LTRIM(RTRIM($ASSESS_YEAR1,' '),' ')

End-Procedure !Get-Assessment-Year
!**********************************************************************
Begin-Procedure  Get-Employer-Det

Begin-Select
ESTBL.GPIN_IT_PAN_NBR
   Move &ESTBL.GPIN_IT_PAN_NBR To $ESTPAN
ESTBL.GPIN_IT_TAN_NBR
   Move &ESTBL.GPIN_IT_TAN_NBR To $ESTTAN
ESTBL.GPIN_IT_TDS_CIRCLE
   Move &ESTBL.GPIN_IT_TDS_CIRCLE To $ESTTDS
ESTBL.GPIN_REG_NAME
   Move &ESTBL.GPIN_REG_NAME To $est_company
EST.COUNTRY
   move &EST.COUNTRY to $est_country
EST.ADDRESS1
   move &EST.ADDRESS1 to $est_address1
EST.ADDRESS2
   if rtrim(&EST.ADDRESS2,' ')<>''
      move &EST.ADDRESS2 to $est_address2
   else
      move '' to $est_address2
   end-if
EST.ADDRESS3
   if rtrim(&EST.ADDRESS3,' ')<>''
      move &EST.ADDRESS3 to $est_address3
   else
      move '' to $est_address3
   end-if
EST.ADDRESS4
   if rtrim(&EST.ADDRESS4,' ')<>''
      move &EST.ADDRESS4 to $est_address4
   else
      move '' to $est_address4
   end-if
EST.CITY
   if rtrim(&EST.CITY,' ')<>''
         move &EST.CITY to $est_city
   else
         move '' to $est_city
   end-if
EST.STATE
   if rtrim(&EST.STATE,' ')<>''
         move &EST.STATE to $est_state
   else
         move '' to $est_state
   end-if
EST.NUM1
   if rtrim(&EST.NUM1,' ')<>''
      move &EST.NUM1 to $est_num1
   else
      move '' to $est_num1
   end-if
EST.NUM2
   if rtrim(&EST.NUM2,' ')<>''
      move &EST.NUM2 to $est_num2
   else
      move '' to $est_num2
   end-if
EST.HOUSE_TYPE
   if rtrim(&EST.HOUSE_TYPE,' ')<>''
      move &EST.HOUSE_TYPE to $est_house_type
   else
      move '' to $est_house_type
   end-if
EST.ADDR_FIELD1
   if rtrim(&EST.ADDR_FIELD1,' ')<>''
      move &EST.ADDR_FIELD1 to $est_afield1
   else
      move '' to $est_afield1
   end-if
EST.ADDR_FIELD2
   if rtrim(&EST.ADDR_FIELD2,' ')<>''
      move &EST.ADDR_FIELD2 to $est_afield2
   else
      move '' to $est_afield2
   end-if
EST.ADDR_FIELD3
   if rtrim(&EST.ADDR_FIELD3,' ')<>''
      move &EST.ADDR_FIELD3 to $est_afield3
   else
      move '' to $est_afield3
   end-if
ESTBL.ADDRESS1
    move &ESTBL.ADDRESS1 to $estab_cir_address1
ESTBL.ADDRESS2
    move &ESTBL.ADDRESS2 to $estab_cir_address2
ESTBL.CITY
    move &ESTBL.CITY to $estab_cir_city
ESTBL.POSTAL
    move &ESTBL.POSTAL to $estab_cir_postal

FROM PS_ESTAB_TBL EST, PS_ESTAB_TBL_GPIN ESTBL
WHERE ESTBL.ESTABID = EST.ESTABID
AND EST.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
                        WHERE ESTABID = EST.ESTABID
                        AND   EFFDT <= &RNCT.END_DT)
AND ESTBL.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
                        WHERE ESTABID = EST.ESTABID
                        AND   EFFDT <= &RNCT.END_DT)
AND (
(EST.ESTABID = $Tmp_Estab
AND NOT EXISTS (SELECT 'X' FROM PS_ESTAB_TBL_GPIN  ESTBL_IN 
                WHERE ESTBL_IN.ESTABID IN (SELECT EST_TBL.ESTABID FROM PS_ESTAB_TBL EST_TBL 
                                            WHERE EST_TBL.EFFDT = (SELECT MAX(E_EST_TBL.EFFDT) FROM PS_ESTAB_TBL E_EST_TBL 
                                                                    WHERE E_EST_TBL.ESTABID = EST_TBL.ESTABID 
                                                                    AND E_EST_TBL.EFFDT <= &RNCT.END_DT) 
                                            AND EST_TBL.COMPANY = (SELECT COMP.COMPANY FROM PS_ESTAB_TBL COMP 
                                                                    WHERE COMP.ESTABID = $Tmp_Estab 
                                                                    AND COMP.EFFDT = (SELECT MAX(ECOMP.EFFDT) FROM PS_ESTAB_TBL ECOMP WHERE COMP.ESTABID = ECOMP.ESTABID AND ECOMP.EFFDT <= &RNCT.END_DT))
                                            )
                AND ESTBL_IN.GPIN_CENTRAL_HQ = 'Y' 
                AND ESTBL_IN.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN E_ESTBL_IN WHERE E_ESTBL_IN.ESTABID = ESTBL_IN.ESTABID AND E_ESTBL_IN.EFFDT <= &RNCT.END_DT)
                AND ESTBL_IN.GPIN_IT_TAN_NBR =(SELECT GPIN_IT_TAN_NBR FROM PS_ESTAB_TBL_GPIN TAN_ESTBL_IN 
                                                WHERE TAN_ESTBL_IN.ESTABID = $Tmp_Estab 
                                                AND TAN_ESTBL_IN.EFFDT = (SELECT MAX(ETAN_ESTBL_IN.EFFDT) FROM PS_ESTAB_TBL_GPIN ETAN_ESTBL_IN 
                                                                        WHERE ETAN_ESTBL_IN.ESTABID = TAN_ESTBL_IN.ESTABID 
                                                                        AND ETAN_ESTBL_IN.EFFDT <= &RNCT.END_DT))))
OR 
(EST.ESTABID = (SELECT ESTABID FROM PS_ESTAB_TBL_GPIN ESTBL_IN 
                    WHERE ESTBL_IN.GPIN_CENTRAL_HQ = 'Y'
                    AND ESTBL_IN.ESTABID IN    (SELECT EST_TBL.ESTABID FROM PS_ESTAB_TBL EST_TBL 
                                                WHERE EST_TBL.EFFDT = (SELECT MAX(E_EST_TBL.EFFDT) FROM PS_ESTAB_TBL E_EST_TBL 
                                                                        WHERE E_EST_TBL.ESTABID = EST_TBL.ESTABID 
                                                                        AND E_EST_TBL.EFFDT <= &RNCT.END_DT) 
                                                AND EST_TBL.COMPANY = (SELECT COMP.COMPANY FROM PS_ESTAB_TBL COMP 
                                                                        WHERE COMP.ESTABID = $Tmp_Estab 
                                                                        AND COMP.EFFDT = (SELECT MAX(ECOMP.EFFDT) FROM PS_ESTAB_TBL ECOMP 
                                                                                            WHERE COMP.ESTABID = ECOMP.ESTABID 
                                                                                            AND ECOMP.EFFDT <= &RNCT.END_DT)))
                    AND ESTBL_IN.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN 
                                                WHERE ESTABID = ESTBL_IN.ESTABID 
                                                AND EFFDT <= &RNCT.END_DT)
                    AND ESTBL_IN.GPIN_IT_TAN_NBR = (SELECT GPIN_IT_TAN_NBR FROM PS_ESTAB_TBL_GPIN TAN_ESTBL_IN 
                                                WHERE TAN_ESTBL_IN.ESTABID = $Tmp_Estab 
                                                AND TAN_ESTBL_IN.EFFDT = (SELECT MAX(ETAN_ESTBL_IN.EFFDT) FROM PS_ESTAB_TBL_GPIN ETAN_ESTBL_IN 
                                                                        WHERE ETAN_ESTBL_IN.ESTABID = TAN_ESTBL_IN.ESTABID 
                                                                        AND ETAN_ESTBL_IN.EFFDT <= &RNCT.END_DT)))))

End-Select
End-Procedure   !Get-Employer-det
!****************************************************************************
Begin-Procedure Get-Qua-Amt-6a
  lET $VAR1 = ''
  lET $VAR2 = ''
  lET $VAR3 = ''
  lET $ALLVARS = ''
  lET $Var1 = '(''LIM VR MED 80D'',''LIM VR LOAN 80GGA'',''LIM VR LOAN 80G'',''LIM VR LOAN 80GG'','
  lET $Var2 = '''LIM VR MED80D SR'',''LIM VR MED 80DD'',''LIM VR MED80D HLTH'',''LIM VR MED 80DDB'',''LIM VR PEN 80CCC'',''LIM VR PR80D SR'','
  lET $Var3 = '''LIM VR PHY DIS 80U'',''LIM VR LOAN 80E'',''LIM VR INT SEC 80L'',''LIM VR SECT 80C'',''LIM VR SECT 80CCE'',''LIM VR PARS 80D'',''LIM VR INF 80CCF'',''LIM VR SEC 80TTA'',''LIM VR 80CCG ESS'')'
  lET $ALLVARS = $VAR1 || $VAR2 || $VAR3
Begin-Select
B.PIN_NM
A.MONETARY_VALUE
  let $pin_name = ltrim(rtrim(&B.PIN_NM,' '),' ')
  evaluate $pin_name
  when = 'LIM VR PEN 80CCC'
      Move &A.MONETARY_VALUE to #lim_sec80ccc
      break
  when = 'LIM VR SECT 80CCE'
      Move &A.MONETARY_VALUE to #lim_sec80cce
      break

  when =  'LIM VR MED 80D'
      Move &A.MONETARY_VALUE to #lim_sec80d
      break
  when =  'LIM VR MED80D HLTH'
      Move &A.MONETARY_VALUE to #lim_sec80d_hlth
      break
  when = 'LIM VR SEC 80TTA'
      Move &A.MONETARY_VALUE to #lim_sec80tta
      break

   when = 'LIM VR PR80D SR'
  Move &A.MONETARY_VALUE to #lim_sec80dprsr
  break

  when =   'LIM VR PARS 80D'
  Move &A.MONETARY_VALUE to #lim_sec80dpr
  break

  when = 'LIM VR MED80D SR'
      Move &A.MONETARY_VALUE to #lim_sec80dsr
      break
  when = 'LIM VR MED 80DD'
      Move &A.MONETARY_VALUE to #lim_sec80dd
      break
  when = 'LIM VR MED 80DDB'
      Move &A.MONETARY_VALUE to #lim_sec80ddb
      break
  when = 'LIM VR LOAN 80E'
      Move &A.MONETARY_VALUE to #lim_sec80e
      break
  when = 'LIM VR LOAN 80G'
      Move &A.MONETARY_VALUE to #lim_sec80g
      break
  when =  'LIM VR LOAN 80GG'
      Move &A.MONETARY_VALUE to #lim_sec80gg
      break
  when = 'LIM VR LOAN 80GGA'
      Move &A.MONETARY_VALUE to #lim_sec80gga
      break
  when = 'LIM VR INT SEC 80L'
      Move &A.MONETARY_VALUE to #lim_sec80l
      break
  when = 'LIM VR PHY DIS 80U'
      Move &A.MONETARY_VALUE to #lim_sec80u
      break
  when = 'LIM VR INF 80CCF'
      Move &A.MONETARY_VALUE to #lim_sec80ccf
      break
  when = 'LIM VR 80CCG ESS'
      Move &A.MONETARY_VALUE to #lim_sec80ccg
      break
  End-Evaluate
A.DECIMAL_VALUE
  let $pin_name = ltrim(rtrim(&B.PIN_NM,' '),' ')
  evaluate $pin_name
  when = 'LIM VR SECT 80C'
  Move &A.DECIMAL_VALUE to #lim_sec80c
  break
  End-Evaluate


FROM PS_GP_VARIABLE A, PS_GP_PIN_NM_VW B
WHERE A.PIN_NUM = B.PIN_NUM
AND B.PIN_NM IN [$ALLVARS]
AND   A.EFFDT = (SELECT MAX(VAR.EFFDT) FROM PS_GP_VARIABLE VAR
                    WHERE VAR.PIN_NUM = A.PIN_NUM
                and VAR.EFFDT <= &RNCT.BGN_DT)
End-Select
End-Procedure    !Get-Qua-Amt-6a
!******************************************************************************
Begin-Procedure Print-Trailer
    LET $NetInWords = ''

    LET $RECNAME = ''

BEGIN-SELECT
RDF.RECNAME 
   LET $RECNAME = &RDF.RECNAME   
FROM PSRECDEFN RDF
WHERE RECNAME='GPIN_DS_SIG_TBL'
END-SELECT


    if $RECNAME='GPIN_DS_SIG_TBL' 
       !DO Get-Authority-Info-SS
    end-if

    IF LENGTH($AuthName) = 0 or LENGTH($AuthName) = 0 or LENGTH($AuthDesig) = 0 or LENGTH(rtrim($NetInWords, ' ')) = 0
       DO Get-Authority-Info
    end-if

    move #tds to $Tax_Deduct 9,99,99,99,99,999.99
   !DO Net-Pay-In-Words-GPIN (#tds, $NetInWords)
    IF LENGTH($AuthFatherName) = 0
       LET $AuthFatherName = '.................................'
    END-IF
    IF LENGTH($AuthName) = 0
       LET $AuthName = '.................................'
    END-IF
    IF LENGTH($AuthDesig) = 0
       LET $AuthDesig = '...........................'
    END-IF
    IF LENGTH(rtrim($NetInWords, ' ')) = 0
       LET $NetInWords = '...............................................'
    END-IF
    alter-printer  point-size=8 font=5
    graphic (+1,8,125) box 3 10
    print ' ' (,66)
    print 'Verification' (+1,66) bold

    graphic (+2,8,125) box 7 10   
    LET $declare1 = 'I '||$AuthName|| ' son/daughter of ' || $AuthFatherName || ' working in the capacity of ' ||$AuthDesig || ' (designation) do hereby certify that'
    print $declare1 (+1,10) bold
    LET $declare2 = 'the information given above is true, complete and correct and is based on the books of account, documents, TDS statements and other available '
    print $declare2 (+1,10) bold
    LET $declare3 = 'records.'
    print $declare3 (+1,10) bold

    print 'Place '                           (+2,9) bold
    print $EST_CITY                          ( ,+1) bold
    graphic (,8,125) box 6 10
    graphic (,8,50) box 3 10
    graphic (,8,6) box 3 10    

    print 'Date  '                       (+3,9) bold
    print $Creation_Dt                   ( ,+1) bold
    graphic (,8,50) box 3 10
    graphic (,8,6) box 3 10
    print '(Signature of the person responsible for deduction of tax)'(+2,75) bold


    graphic (+1,8,125) box 3 10
    graphic (,8,50) box 3 10
    LET $signature2 = 'Designation : '||$AuthDesig
    print $signature2                                          (+1,9) bold 
    
    LET $signature1 = 'Full Name : '||$AuthName
    print $signature1                                           (,75) bold
End-Procedure !Print-Trailer
!********************************************************************************

Begin-Procedure draw-box

 GRAPHIC (+#xcord,#bcord,#cwid) BOX 1 1
 GRAPHIC (-1,+2,1) VERT-LINE
 while #cnt<#cnt_val
  GRAPHIC (0,+2,1) VERT-LINE  1
  Add #inc to #cnt
 end-while
 Let #cnt=1
End-Procedure draw-box

!********************************************************************************
begin-Procedure Print-Form16-assessee
Let #cnt=1
Let #inc=1
Let #bcord=0
Let #cwid=0
Let #cdep=0
Let #xcord=0


   Let #line = 40
   let #Col1 = 9

   print 'TO BE FILLED IN BY THE ASSESSEE' (#line,55) bold
   Print '1. Name of the assessee     '    (+2,#Col1)

Let #bcord=33
   Let #cwid=92
   Let #cnt_val=45
Do draw-box
   Let #xcord = +3
Do draw-box
   Let #xcord = 0

   Print '2. Address                  '     (+3,#Col1)
   Let #bcord=33
   Let #cwid=92
   Let #cnt_val=45
   do draw-box
Let #xcord=+3
   do draw-box

   Print 'PIN  '                            (+3,35)
Let #xcord=0
   Let #bcord   = 40
Let #cwid=12
Let #cnt_val=5
Do draw-box

   Print 'Telephone '                       (+1,91)
   Let #bcord   = 103
Let #cwid=22
Let #cnt_val=10
Do draw-box

   Print '3. Date of birth '                (+3,#Col1)
   graphic                                  (0,29,4)       box 1 2
   graphic                                  (-1,+2,1)      vert-line
   print ' - '                              (+1,33)

   graphic                                  (0,35,4)       box 1 2
   graphic                                  (-1,+2,1)      vert-line
   print ' - '                              (+1,39)

   Let #bcord=41
Let #cwid=8
Let #cnt_val=3
Do draw-box

   Print '4. Sex M/F:  '  (+1,91)
   GRAPHIC (0,103,3) BOX 1 2

   Print '5. Assessment year '             (+2,#Col1)
   let #bcord   = 33
   let #cwid    = 8
   let #cnt_val = 3
   do draw-box
   print ' - '                              (+1,41)
   graphic                                  (,43,4)       box 1 2
   graphic                                  (-1,+2,1)      vert-line

   Print '6. Ward/Circle/Special Range:'    (+1,67)
   Print '7. Return: Original or revised'   (+2,#Col1)
   Print '8. Particulars of Bank Account (Mandatory in Refund cases)'  (+2,#Col1)

   graphic (+2,9,120)     box 7  2
   graphic (+2,9,120)     horz-line
   graphic (-3,34,7)      vert-line
   graphic (,52,7)        vert-line
   graphic (,87,7)        vert-line
   graphic (,104,7)       vert-line
   graphic (,118,7)       vert-line
   print 'Name of the Bank'                 (+1,14)
   print 'MICR Code (9 digit)'              (,+5)
   print 'Address of Bank Branch'           (,+5)
   print 'Type of Account'                  (,+8)
   print 'Account'                          (,+4)
   print 'ECS'                              (,+7)
   print '(Savings/Current)'                (+1,88)
   print 'Number'                           (,+3)
   print '(Y/N)'                            (,+8)


   do Print-Trail
end-Procedure Print-Form16-assessee
!********************************************************************************


!********************************************************************************
begin-Procedure Print-Trail

    let #Col_start = 9

    if length($AuthFatherName1) = 0
       let $AuthFatherName = '.................................'
    end-if
    if length($AuthName) = 0
       let $AuthName = '.................................'
    end-if
    if length($AuthDesig) = 0
       let $AuthDesig = '.................................'
    end-if
    if length(rtrim($NetInWords, ' ')) = 0
       let $NetInWords = '...............................................'
    end-if

    let $nametmp = ''
    let $nametmp =  ltrim(rtrim($Name1,' '),' ')
    uppercase $nametmp

    let $declare1 = 'I, '||$nametmp||' (Name in full and in block letters),'|| ' son/daughter of Shri ' || $FatherName
    let $declare1 = $declare1 || ' solemnly declare that to the best of my knowledge and belief, the information given in this '
    let $declare1 = $declare1 || 'return is correct, complete and truly stated and in accordance with the provisions of '
    let $declare1 = $declare1 || 'the Income-tax Act,1961, in respect of income chargeable to income-tax for the previous '
    let $declare1 = $declare1 || 'year relevant to the assessment year ' || $ASSESS_YEAR ||'.'

    let $heading    = 'Verification by the assessee'
    let $receipt    = 'Receipt No.'
    let $date       = 'Date'
    let $signature1 = 'Signature of the assessee'
    let $seal       = 'SEAL'
    LET $place      = 'Place '
    let $signature4 = 'Signature of the receiving official'

    print $heading             (68,55)             bold
    print $declare1            (+2,#Col_start)     wrap 150 4 keep-top
    print $receipt             (+4,#Col_start)
    print $date                (,+18)
    print $seal                (+2,#Col_start)
    print $signature1          (,+65)
    print $date                (+2,50)
    print $place               (+1,50)
    print $signature4          (+1,#Col_start)

end-Procedure Print-Trail


!***********************************************************************
begin-procedure Get-Authority-Info

BEGIN-SELECT DISTINCT
NAMES.FIRST_NAME
NAMES.MIDDLE_NAME
NAMES.LAST_NAME
JOBCODE.DESCR
         MOVE &JOBCODE.DESCR TO $AuthDesig
         LET $AuthDesig = RTRIM($AuthDesig, ' ')
         let $AuthName = ''
         let $AuthName = ltrim(rtrim(&NAMES.FIRST_NAME,' '),' ')
         let $AuthName = ltrim(rtrim($AuthName,' '),' ') || ' ' || ltrim(rtrim(&NAMES.MIDDLE_NAME,' '),' ')
         let $AuthName = ltrim(rtrim($AuthName,' '),' ') || ' ' || ltrim(rtrim(&NAMES.LAST_NAME,' '),' ')

FROM PS_ESTAB_TBL_GPIN E, PS_NAMES NAMES, PS_JOB JOB, PS_JOBCODE_TBL JOBCODE
WHERE E.EMPLID = NAMES.EMPLID

AND E.ESTABID = $Tmp_Estab
AND E.EMPLID = JOB.EMPLID
AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
               WHERE ESTABID = E.ESTABID
               AND EFFDT <= &RNCT.END_DT)
AND JOB.EMPL_RCD = 0
AND JOB.JOBCODE = JOBCODE.JOBCODE
AND JOB.EMPLID = NAMES.EMPLID
AND NAMES.NAME_TYPE = 'PRI'
AND JOBCODE.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
               WHERE SETID = JOBCODE.SETID
               AND JOBCODE = JOBCODE.JOBCODE
               AND EFFDT <= &RNCT.END_DT)
AND NAMES.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
               WHERE EMPLID = NAMES.EMPLID
               AND NAME_TYPE = NAMES.NAME_TYPE
               AND EFFDT <= &RNCT.END_DT)
AND JOB.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = E.EMPLID
               AND EMPL_RCD = 0
               AND EFFDT <= &RNCT.END_DT)  !$END_DT
AND JOB.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
                WHERE EMPLID = E.EMPLID
                AND EMPL_RCD = 0
                AND EFFDT = JOB.EFFDT)
END-SELECT

BEGIN-SELECT DISTINCT
D.NAME
D.FIRST_NAME
D.MIDDLE_NAME
D.LAST_NAME
         LET $AuthFatherName = ''
         let $AuthFatherName = ltrim(rtrim(&D.FIRST_NAME,' '),' ')
         let $AuthFatherName = ltrim(rtrim($AuthFatherName,' '),' ') || ' ' || ltrim(rtrim(&D.MIDDLE_NAME,' '),' ')
         let $AuthFatherName = ltrim(rtrim($AuthFatherName,' '),' ') || ' ' || ltrim(rtrim(&D.LAST_NAME,' '),' ')

FROM PS_ESTAB_TBL_GPIN E, PS_DEPENDENT_BENEF D
WHERE E.EMPLID = D.EMPLID
AND D.RELATIONSHIP = 'P'

AND E.ESTABID = $Tmp_Estab
AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
               WHERE ESTABID = E.ESTABID
               AND EFFDT <= &RNCT.END_DT)
END-SELECT

End-Procedure !Get-Authority-Info




Begin-Procedure Get-Strings-Table
   do Init_Report_Translation ($ReportID,$Language_Code)
   do Append_Report_Translation ('GPINYE02')
   do Get_Field_Information ('GPINYE02','REPORT_TITLE', $REC_RPT,                      #DW)
   do Get_Field_Information ('GPINYE02','EMPLYR_AD',    $EMPLOYER_ADDRESS_lbl,         #DW)
   do Get_Field_Information ('GPINYE02','EMPLYE_AD',    $EMPLOYEE_ADDRESS_lbl,         #DW)
   do Get_Field_Information ('GPINYE02','NAME',         $DetailHeader_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','GROSS_SALARY', $GROSS_SAL_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','SALARY_AS_PER',$SALARY_AS_PER_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','VALUE_PER',    $VALUE_PER_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','VALUE_PER1',   $VALUE_PER1_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','PROFITS',      $PROFITS_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','PROFITS1',     $PROFITS1_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','TOTAL',        $TOTAL_lbl,                    #DW)
   do Get_Field_Information ('GPINYE02','TOTAL1',       $TOTAL1_lbl,                   #DW)
   do Get_Field_Information ('GPINYE02','LESS',         $LESS_lbl,                     #DW)
   do Get_Field_Information ('GPINYE02','BALANCE',      $BALANCE_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','DEDUCTIONS',   $DEDUCTIONS_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','DEDUCTIONS1',  $DEDUCTIONS1_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','DEDUCTIONS2',  $DEDUCTIONS2_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','DEDUCTIONS3',  $DEDUCTIONS3_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','AGGREGATE',    $AGGREGATE_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','AGGREGATE2',   $AGGREGATE2_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','INCOME',       $INCOME_lbl,                   #DW)
   do Get_Field_Information ('GPINYE02','ADD',          $ADD_lbl,                      #DW)
   do Get_Field_Information ('GPINYE02','GROSS_TOTAL',  $GROSS_TOTAL_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','DEDUCTIONS_UNDER',  $DEDUCTIONS_UNDER_lbl,    #DW)
   do Get_Field_Information ('GPINYE02','CALCULATION',  $CALCULATION_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','CALCULATION1',  $CALCULATION1_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','CALCULATION2',  $CALCULATION2_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','CALCULATION3',  $CALCULATION3_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','PLZ_SPC',       $PLZ_SPC_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','SEC_88',        $SEC_88_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','TOTAL_88',      $TOTAL_88_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','AGGREGATE_DED', $AGGREGATE_DED_lbl,           #DW)
   do Get_Field_Information ('GPINYE02','TOTAL_INCOME',  $TOTAL_INCOME_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','TAX_TOTAL',     $TAX_TOTAL_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','REBATE',        $REBATE_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','CALCULATION1',  $CALCULATION1_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','AGGREGATE_TAX', $AGGREGATE_TAX_lbl,           #DW)
   do Get_Field_Information ('GPINYE02','TAX_PAY',       $TAX_PAY_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','LESS_TAX',      $LESS_TAX_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','TAX_PAY_REF',   $TAX_PAY_REF_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','NAME1',         $NAME1_lbl,                   #DW)
   do Get_Field_Information ('GPINYE02','PAY_AMT',       $PAY_AMT_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','PAY_DATE',      $PAY_DATE_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','NAME_BANK',     $NAME_BANK_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','TOTAL_REB88',   $TOTAL_REB88_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','REB88B',        $REB88B_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','REB88C',        $REB88C_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','REB88D',        $REB88D_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','REB89',         $REB89_lbl,                   #DW)
   do Get_Field_Information ('GPINYE02','EMPLR_PAN',     $EMPLYR_PAN_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','EMPLR_TAN',     $EMPLYR_TAN_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','EMPLY_PAN',     $EMPLYE_PAN_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','ASSESS_YEAR',   $ASSESS_YEAR_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','TDS_CIRCLE',    $TDS_CIRCLE_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','ACK_NUM2_DTL',  $ACK_NUM2_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','ACK_NUM_DTL',  $ACK_NUM_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','PAN_NO',  $PAN_NO_lbl,                        #DW)
   do Get_Field_Information ('GPINYE02','TAN_NO',  $TAN_NO_lbl,                        #DW)
   do Get_Field_Information ('GPINYE02','PERIOD',        $PERIOD_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','TO',            $TO_lbl,                      #DW)
   do Get_Field_Information ('GPINYE02','TAX_PAYABLE',   $TAX_PAYABLE_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','TAX_EMPL',      $TAX_EMPL_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','FROM',          $From_lbl,                    #DW)
   do Get_Field_Information ('GPINYE02','RS',            $Rs_lbl,                      #DW)
   do Get_Field_Information ('GPINYE02','PREV_EDU_EXM',  $Prev_edu_exm_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','PREV_HRA_EXM',  $Prev_hra_exm_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','PREV_CA',       $Prev_conv_exm_lbl,           #DW)
   do Get_Field_Information ('GPINYE02','SR_CTZ_SS   ',  $sr_ctz_ss_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','REB_VIII',      $Reb_VIII,                    #DW)
   do Get_Field_Information ('GPINYE02','PO_TIM_DEP',    $po_tim_dep_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','CONV_EXM',      $Conv_exm_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','MED_EXM',       $Med_exm_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','LTA_EXM',       $Lta_exm_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','HRA_EXM',       $HRA_exm_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','PREV_HOSTEL_EXM',$Prev_hostel_exm_lbl,        #DW)
   do Get_Field_Information ('GPINYE02','CHLD_EDU_EXM',  $Child_Edu_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','CHLD_HOSTEL_EXM', $Child_Hostel_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTIONS1',     $Sections1_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','SECTIONS2',     $Sections2_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80C',   $Sections_80C_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80CCC', $Sections_80CCC_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80CCD', $Sections_80CCD_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80CCE', $Sections_80CCE_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80CCE1',$Sections_80CCE_lbl1,         #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80D',   $Sections_80D_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80D_HLTH', $Sections_80D_hlth_lbl,    #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80TTA', $Sections_80tta_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80CCF', $Sections_80ccf_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80CCG', $Sections_80ccg_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80D_SR',$Sections_80DSR_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80DD',  $Sections_80DD_lbl,           #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80DDB', $Sections_80DDB_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80E',   $Sections_80E_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80EE',  $Sections_80EE_lbl,           #DW)
   do Get_Field_Information ('GPINYE02','TAX_CREDIT_87A',$Taxcr87A_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','EMPL_PERQ',     $EmployerTax_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80G',   $Sections_80G_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80GG',  $Sections_80GG_lbl,           #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80GGA', $Sections_80GGA_lbl,          #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80L',   $Sections_80L_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','SECTION_80U',   $Sections_80U_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','SURCHARGE',     $Surgharge_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','EDU_CESS',      $Edu_cess_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','TAX_PAYABLE1',  $Tax_Payable1_lbl,            #DW)
   do Get_Field_Information ('GPINYE02','TAX_PAYBLE',    $Tax_Payble_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','SR_NO',         $Sr_no_lbl,                   #DW)
   do Get_Field_Information ('GPINYE02','TDS',           $Tds_lbl,                     #DW)
   do Get_Field_Information ('GPINYE02','SURCHARGE1',    $Surcharge1_lbl,              #DW)
   do Get_Field_Information ('GPINYE02','EDU_CESS1',     $Edu_cess1_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','TOT_TAX2',      $Tot_tax2_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','CHEQUE_NO',     $Cheque_lbl,                  #DW)
   do Get_Field_Information ('GPINYE02','BSR_CODE',      $BSR_Code_lbl,                #DW)
   do Get_Field_Information ('GPINYE02','DATE_DEPOSIT',  $Date_lbl,                    #DW)
   do Get_Field_Information ('GPINYE02','CHALLAN_NO',    $Challan_lbl,                 #DW)
   do Get_Field_Information ('GPINYE02','DEDUCTIONS_US_16', $Ded_16_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','ALLOWANCE',     $Allowance_lbl,               #DW)
   do Get_Field_Information ('GPINYE02','QTR',           $Qtr_lbl,                     #DW)
   do Get_Field_Information ('GPINYE02','ACK_NO',        $Ack_lbl,                     #DW)
   do Get_Field_Information ('GPINYE02','TRAVEL_CONCS',  $Travelconcs_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','DEATH_RETR',     $Deathretrm_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','COMMUT_VAL',      $Commutval_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','CASH_EQVLNT',    $Casheqvlnt_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','HOUSE_RENT',      $Houserent_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','TOTOTH_EXM_AMT',  $Tothexmpt_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','TOT_EXEMAMT',      $Totexmpt_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','TOT_EXEMAMT1',    $Totexmpt1_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','OTH_EXAMT',        $Othexamt_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','OTHEMR_SAL',      $Othemrsal_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','TOTOTH_INC',      $Totothinc_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','TOTOTH_INC1',    $Totothinc1_lbl,             #DW)
   do Get_Field_Information ('GPINYE02','REBATE_SEC89',    $Rebtsec89_lbl,             #DW)

  let $ReportID       = 'Form16'
  let $ReportTitle    = $REC_RPT
  let $ReportDate     = $AsOfToday
End-Procedure !Get-Strings-Table
!******************************************************************
Begin-Procedure Reset-Employee-Loop-Vars
let #ctdreb = 0
let #cedreb = 0
let #defreb = 0
let #infreb = 0
let #licreb = 0
let #lipreb = 0
let #lisareb = 0
let #lisareb10 = 0
let #lisareb15 = 0
let #mfureb = 0
let #nhbsreb = 0
let #nscreb = 0
let #nssreb = 0
let #fixdep = 0
let #totreb = 0
let #sec80c_tot = 0
let #loscapgain = 0
let #incbusprof = 0
let #losbusprof = 0
let #otherinc = 0
let #anyincome = 0
let #anyincome1 = 0
let #houseincome =0
let #incprop = 0
let #losprop = 0
let #inccap = 0
let #ppfreb = 0
let #prreb = 0
let #ptded = 0
let #sec17pro = 0
let #sec17sal = 0
let #sec17val = 0
let #sec80ccc = 0
let #sec80cccdecl = 0
let #sec80d = 0
let #sec80ddecl = 0
let #sec80dd = 0
let #sec80dddecl = 0
let #sec80ddb = 0
let #sec80ddbdecl = 0
let #sec80CCF = 0
let #sec80TTA = 0
let #sec80TTAdecl=0
let #sec80D_hlth = 0
let #sec80d_hlth_decl = 0
let #sec80CCFdecl=0
let #sec80CCG = 0
let #sec80CCGdecl=0
let #sec80e = 0
let #sec80ee = 0
let #sec80edecl = 0
let #sec80g = 0
let #sec80g_50 = 0
let #sec80g_100 = 0
let #sec80gg = 0
let #sec80gga = 0
let #sec80l = 0
let #sec80ldecl = 0
let #sec80u = 0
let #sec80udecl = 0
let #sec88breb = 0
let #tdssur = 0
let #tdssur1 = 0
let #sec88creb = 0
let #sec89reb = 0
let #stdded = 0
let #sec80ddblim = 0
let #taxtot = 0
let #tdspay = 0
let #tax_payable = 0
let #tds = 0
let #totexemp = 0
let #ulipreb = 0
let #gross_tot = 0
let #gross_tot1 = 0
let #gross_tot2 = 0
let #gross_tot3 = 0
let #anyincome = 0
let #gross_tot4 = 0
let #gross_tot5 = 0
let #gross_tot6 = 0
let #gross_tot7 = 0
let #totexemp1 = 0
let #totsec = 0
let #gross_reb = 0
let #tot_rebate_sec_88 = 0
let #lessexemp = 0
let #tds_apr = 0
let #tds_may = 0
let #tds_jun = 0
let #tds_jul = 0
let #tds_aug = 0
let #tds_sep = 0
let #tds_oct = 0
let #tds_nov = 0
let #tds_dec = 0
let #tds_jan = 0
let #tds_feb = 0
let #tds_mar = 0

let #f16pf = 0
LET #f16edu_exm = 0
LET #hra_exm = 0
let #f16edu_exm_max_lim = 0
let #Nbr_chld = 0
let #f16hst_exm_max_lim = 0
let #f16hst_exm_max_lim = 0
let #f16hst_exm = 0
LET #f16con_exm = 0
let #f16con_exm_temp = 0
LET #f16con_exm_max_lim = 0
let #f16lta_exm = 0
let #f16med_exm = 0
let #less = 0
LET $emplid = 0

LET #f16hra_rent = 0
LET #f16hra  = 0
LET #f16hra_sal = 0
LET #f16pre_con_exm = 0
LET #f16pre_edu_exm = 0
LET #f16pre_hos_exm = 0
LET #f16pre_hra_exm = 0
LET #F16po_dep_ac   = 0
LET #f16sr_ctz_sav  = 0
LET $Empl_Status = ''
let #educess = 0
let #educess1 = 0
let #flag = 0
let #flag1 = 0
let #temp16aa = 0
let #empl_perq_tax = 0 

End-Procedure   !Reset-Employee-Loop-Vars
!*******************************************************************
Begin-Procedure Aggregate-Monthly-Tds
Evaluate $prd_month

when = '04'
let #tds_apr = 0
   let #tds_apr = #tds_apr + #tds_monthly            !repval + #tds_apr
break

when = '05'

let #tds_may  = 0

    let #tds_may = #tds_may + #tds_monthly

    break

when = '06'

 let #tds_jun  = 0


!    let #tds_jun = #tds_jun + #tds
    let #tds_jun = #tds_jun + #tds_monthly

    break


when = '07'
let #tds_jul = 0
!let #tds_jul = #tds_jul + #tds
let #tds_jul = #tds_jul + #tds_monthly
break


when = '08'
let #tds_aug = 0
let #tds_aug = #tds_aug + #tds_monthly
break

when = '09'
let #tds_sep = 0
let #tds_sep = #tds_sep + #tds_monthly
break

when = '10'

let #tds_oct = 0
let #tds_oct = #tds_oct + #tds_monthly
break


when = '11'
let #tds_nov = 0
let #tds_nov = #tds_nov + #tds_monthly
break


when = '12'
let #tds_dec = 0
let #tds_dec = #tds_dec + #tds_monthly
break

when = '01'

let #tds_jan = 0
let #tds_jan = #tds_jan + #tds_monthly
break


when = '02'
let #tds_feb = 0
let #tds_feb = #tds_feb + #tds_monthly
break

when = '03'
let #tds_mar = 0
let #tds_mar = #tds_mar + #tds_monthly
break

End-Evaluate
End-Procedure  !Aggregate-Monthly-Tds


!*******************************************************************


!*******************************************************************
Begin-Procedure Aggregate-Monthly-EmplyrTax
Evaluate $prd_month

when = '04'
    let #etax_apr = #empl_perq_tax
    break

when = '05'
    let #etax_may = #empl_perq_tax
    break

when = '06'
    let #etax_jun = #empl_perq_tax
    break


when = '07'
    let #etax_jul = #empl_perq_tax
    break


when = '08'
    let #etax_aug = #empl_perq_tax
    break

when = '09'
    let #etax_sep = #empl_perq_tax
    break

when = '10'
    let #etax_oct = #empl_perq_tax
    break


when = '11'
    let #etax_nov = #empl_perq_tax
    break


when = '12'
    let #etax_dec = #empl_perq_tax
    break

when = '01'
    let #etax_jan = #empl_perq_tax
    break


when = '02'
    let #etax_feb = #empl_perq_tax
    break

when = '03'
    let #etax_mar = #empl_perq_tax
    break
break

End-Evaluate
End-Procedure  !Aggregate-Monthly-EmplyrTax


!*******************************************************************




Begin-Procedure Aggregate-Monthly-Surcharge
Evaluate $prd_month

when = '04'
let #sur_apr =   0
 let #sur_apr = #sur_apr + #surcharge_monthly
  break


when = '05'
let #sur_may  = 0
  let #sur_may = #sur_may + #surcharge_monthly
   break


when = '06'
let #sur_jun  = 0
 let #sur_jun = #sur_jun + #surcharge_monthly
 break


when = '07'
let #sur_jul = 0
let #sur_jul = #sur_jul + #surcharge_monthly
break

when = '08'

let #sur_aug = 0
  let #sur_aug = #sur_aug + #surcharge_monthly
 break


when = '09'
let #sur_sep = 0
let #sur_sep = #sur_sep + #surcharge_monthly
 break


when = '10'
let #sur_oct = 0
let #sur_oct = #sur_oct + #surcharge_monthly
 break


when = '11'

let #sur_nov = 0
let #sur_nov = #sur_nov + #surcharge_monthly
 break


when = '12'

let #sur_dec = 0
let #sur_dec = #sur_dec + #surcharge_monthly
break

when = '01'


let #sur_jan = 0
let #sur_jan = #sur_jan + #surcharge_monthly
break


when = '02'
let #sur_feb = 0
let #sur_feb = #sur_feb + #surcharge_monthly
break


when = '03'
let #sur_mar = 0
let #sur_mar = #sur_mar + #surcharge_monthly
break

End-Evaluate
End-Procedure  !Aggregate-Monthly-Surcharge
!********************************************************************************************

!*******************************************************************
Begin-Procedure Aggregate-Monthly-Educess
Evaluate $prd_month

when = '04'
   let #edu_apr =   0
    let #edu_apr = #edu_apr + #educess_monthly
    break


when = '05'

let #edu_may  = 0
let #edu_may = #edu_may + #educess_monthly
break


when = '06'
   let #edu_jun  = 0
     let #edu_jun = #edu_jun + #educess_monthly
  break


when = '07'
let #edu_jul = 0
let #edu_jul = #edu_jul + #educess_monthly
 break

when = '08'
let #edu_aug = 0
let #edu_aug = #edu_aug + #educess_monthly
break

when = '09'
let #edu_sep = 0
let #edu_sep = #edu_sep + #educess_monthly
 break


when = '10'
let #edu_oct = 0
let #edu_oct = #edu_oct + #educess_monthly
break


when = '11'
let #edu_nov = 0
let #edu_nov = #edu_nov + #educess_monthly
break

when = '12'
  let #edu_dec = 0
   let #edu_dec = #edu_dec + #educess_monthly
 break

when = '01'
let #edu_jan = 0
let #edu_jan = #edu_jan + #educess_monthly
break


when = '02'
let #edu_feb = 0
let #edu_feb = #edu_feb + #educess_monthly
break

when = '03'
let #edu_mar = 0
let #edu_mar = #edu_mar + #educess_monthly
break

End-Evaluate
End-Procedure  !Aggregate-Monthly-Educess


!*************************************************************************
Begin-Procedure Get-Tds-Voucher-Det

Begin-Select
A.GPIN_VCHR_AMT
A.GPIN_VCHR_DT
A.GPIN_VCHR_NBR
A.BRANCH_EC_CD
BRANCH.DESCR
A.CAL_PRD_ID
D.PRD_END_DT
BK.BANK_NM
A.GPIN_CHEQUE_NO

  Move &A.GPIN_VCHR_DT to $vchrdt  'dd-mm-yyyy'
  Move &A.GPIN_VCHR_AMT to $VchrAmt

  let $bnkdescr = ltrim(rtrim(&BK.BANK_NM, ' '), ' ') || ' - ' || ltrim(rtrim(&BRANCH.DESCR, ' '), ' ')
  let $bnkdescr = ltrim(rtrim($bnkdescr,' '),' ')
  let $BSR_code     = ltrim(rtrim(&A.BRANCH_EC_CD,' '),' ')

  let $Challan_num  = ltrim(rtrim(&A.GPIN_VCHR_NBR,' '),' ')
  let $cheque_no    = edit(&A.GPIN_CHEQUE_NO,'99999999999')
  let $cheque_no    = ltrim(rtrim($cheque_no,' '),' ')
  do Determine-Month

FROM  PS_GPIN_YE_F24_F16 A,
      PS_BANK_BRANCH_TBL BRANCH,
      PS_GP_CAL_PRD D,
      PS_BANK_EC_TBL BK,
      PS_GPIN_PANTAN_VCR PT
WHERE BRANCH.COUNTRY_CD = 'IND'
AND BRANCH.BANK_CD = A.BANK_CD
AND A.BANK_CD = BK.BANK_CD
AND BRANCH.BRANCH_EC_CD = A.BRANCH_EC_CD
AND D.PRD_BGN_DT >= &RNCT.BGN_DT
AND D.PRD_END_DT <= &RNCT.END_DT
AND A.GPIN_IT_PAN_NBR = &estbl.gpin_it_pan_nbr
AND A.GPIN_IT_TAN_NBR = &estbl.gpin_it_tan_nbr
AND A.GPIN_IT_PAN_NBR = PT.GPIN_IT_PAN_NBR
AND A.GPIN_IT_TAN_NBR = PT.GPIN_IT_TAN_NBR
AND A.GPIN_PERIOD_ID = PT.GPIN_PERIOD_ID
AND A.CAL_PRD_ID = D.CAL_PRD_ID
ORDER BY D.PRD_END_DT
End-Select
End-Procedure ! Get-Tds-Voucher-Det
!***********************************************************************

!*************************************************************************
Begin-Procedure Get-Ack-Details

   graphic (+2,8,126) box 2
   print 'Summary of Tax Deducted at Source'    (,56)
  
   graphic (+2,8,18) box 3
   print 'Quarter'     (,10)
   
   graphic (,26,46) box 3
   print 'Reciept Numbers of original statements of ' (,28)
   print 'TDS under sub-section (3) of section 200'   (+1,28)

   graphic (-1, 72,31) box 3
   print 'Amount of tax deducted in' (, 74)
   print 'respect of the employee'   (+1,74)

   graphic (-1, 103,31) box 3
   print 'Amount of tax deposited/remitted' (,105)
   print 'in respect of the employee' (,105)

  Let #curr-Line=(#current-line + 1)   
  
Begin-Select
AK.GPIN_QUARTER_ID
AK.GPIN_ACK_NUM


  Move &AK.GPIN_QUARTER_ID   to #QTR
  Move &AK.GPIN_ACK_NUM   to $Ack_num
   let $Ack_num=ltrim(rtrim($Ack_num,' ' ),' ')


  evaluate   #QTR
      when =10
     Let $Qtr='Quarter 1'
     let #tds_quarter_ded = #tds_apr + #tds_may + #tds_jun ! - (#sur_apr + #sur_may + #sur_jun + #edu_apr + #edu_may + #edu_jun)
     let #tds_quarter_ded = #tds_quarter_ded + #etax_apr + #etax_may + #etax_jun 
     when =20
     Let $Qtr='Quarter 2'
     let #tds_quarter_ded = #tds_jul + #tds_aug + #tds_sep ! - (#sur_jul + #sur_aug + #sur_sep + #edu_jul + #edu_aug + #edu_sep)
     let #tds_quarter_ded = #tds_quarter_ded + #etax_jul + #etax_aug + #etax_sep 
     when =30
     Let $Qtr='Quarter 3'
     let #tds_quarter_ded = #tds_oct + #tds_nov + #tds_dec ! - (#sur_oct + #sur_nov + #sur_dec + #edu_oct + #edu_nov + #edu_dec)
     let #tds_quarter_ded = #tds_quarter_ded + #etax_oct + #etax_nov + #etax_dec 
     when =40 
      Let $Qtr='Quarter 4'
      let #tds_quarter_ded = #tds_jan + #tds_feb + #tds_mar ! - (#sur_jan + #sur_feb + #sur_mar + #edu_jan + #edu_feb + #edu_mar)
      let #tds_quarter_ded = #tds_quarter_ded + #etax_jan + #etax_feb + #etax_mar 
   end-evaluate
   do  Print_Ack_Details


FROM  PS_GPIN_F16_AK_DTL  AK

WHERE
AK.GPIN_IT_PAN_NBR =$ESTPAN
AND AK.GPIN_IT_TAN_NBR=$ESTTAN
AND AK.GPIN_PERIOD_ID =&RNCT.CAL_PRD_ID
ORDER BY AK.GPIN_QUARTER_ID
End-Select

move ' ' to $Ack_num
let $Qtr = 'Total'
let #tds_quarter_ded = #tds_apr + #tds_may + #tds_jun + #tds_jul + #tds_aug + #tds_sep +  #tds_oct + #tds_nov + #tds_dec + #tds_jan + #tds_feb + #tds_mar
let #tds_quarter_ded = #tds_quarter_ded + #etax_apr + #etax_may + #etax_jun + #etax_jul + #etax_aug + #etax_sep +  #etax_oct + #etax_nov + #etax_dec + #etax_jan + #etax_feb + #etax_mar 
do Print_Ack_Details

End-Procedure ! Get-Ack-Details
!***********************************************************************
Begin-Procedure Determine-Month

  Move &D.PRD_END_DT to $prd_end_dt_vchr  'mm-dd-yyyy'

  extract $prd_month_vchr from $prd_end_dt_vchr 0 2
evaluate $prd_month_vchr
when = '04'
    let #vch_amt_apr=$VchrAmt
    let $vch_dt_apr = $vchrdt
    let $bank_apr =   $bnkdescr
    let $vch_num_apr   = $Challan_num
    let $BSR_code_apr  = $BSR_code
    let $cheque_no_apr = $cheque_no
    break
when = '05'
     let #vch_amt_may=$VchrAmt
    let $vch_dt_may = $vchrdt
    let $bank_may = $bnkdescr
    let $vch_num_may   = $Challan_num
    let $BSR_code_may  = $BSR_code
    let $cheque_no_may = $cheque_no
    break
when = '06'
     let #vch_amt_jun=$VchrAmt
    let $vch_dt_jun = $vchrdt
    let $bank_jun = $bnkdescr
    let $vch_num_jun   = $Challan_num
    let $BSR_code_jun  = $BSR_code
    let $cheque_no_jun = $cheque_no
    break
when = '07'
     let #vch_amt_jul=$VchrAmt
    let $vch_dt_jul = $vchrdt
    let $bank_jul = $bnkdescr
    let $vch_num_jul   = $Challan_num
    let $BSR_code_jul  = $BSR_code
    let $cheque_no_jul = $cheque_no
when = '08'
     let #vch_amt_aug=$VchrAmt
    let $vch_dt_aug = $vchrdt
    let $bank_aug = $bnkdescr
    let $vch_num_aug   = $Challan_num
    let $BSR_code_aug  = $BSR_code
    let $cheque_no_aug = $cheque_no
when = '09'
     let #vch_amt_sep=$VchrAmt
    let $vch_dt_sep = $vchrdt
    let $bank_sep = $bnkdescr
    let $vch_num_sep   = $Challan_num
    let $BSR_code_sep  = $BSR_code
    let $cheque_no_sep = $cheque_no
when = '10'
    let #vch_amt_oct=$VchrAmt
    let $vch_dt_oct = $vchrdt
    let $bank_oct = $bnkdescr
    let $vch_num_oct   = $Challan_num
    let $BSR_code_oct  = $BSR_code
    let $cheque_no_oct = $cheque_no
when = '11'
     let #vch_amt_nov=$VchrAmt
    let $vch_dt_nov = $vchrdt
    let $bank_nov = $bnkdescr
    let $vch_num_nov  = $Challan_num
    let $BSR_code_nov  = $BSR_code
    let $cheque_no_nov = $cheque_no
when = '12'
    let #vch_amt_dec=$VchrAmt
    let $vch_dt_dec = $vchrdt
    let $bank_dec = $bnkdescr
    let $vch_num_dec   = $Challan_num
    let $BSR_code_dec  = $BSR_code
    let $cheque_no_dec = $cheque_no
when = '01'
    let #vch_amt_jan=$VchrAmt
    let $vch_dt_jan = $vchrdt
    let $bank_jan = $bnkdescr
    let $vch_num_jan   = $Challan_num
    let $BSR_code_jan  = $BSR_code
    let $cheque_no_jan = $cheque_no
when = '02'
    let #vch_amt_feb=$VchrAmt
    let $vch_dt_feb = $vchrdt
    let $bank_feb = $bnkdescr
    let $vch_num_feb   = $Challan_num
    let $BSR_code_feb  = $BSR_code
    let $cheque_no_feb = $cheque_no
when = '03'
     let #vch_amt_mar=$VchrAmt
    let $vch_dt_mar = $vchrdt
    let $bank_mar = $bnkdescr
    let $vch_num_mar   = $Challan_num
    let $BSR_code_mar  = $BSR_code
    let $cheque_no_mar = $cheque_no 
End-Evaluate
End-Procedure  !Determine-Month

!***********************************************************************
Begin-Procedure  Clear-Temp-Tables
!Show 'inside Clear tables'

Begin-SQL
DELETE FROM PS_GPIN_PR_TMP WHERE JOBINSTANCE= #prcs_job_instance;

DELETE FROM PS_GPIN_PR_TMP2 WHERE JOBINSTANCE=#prcs_job_instance;

DELETE FROM PS_GPIN_PR_TMP3  WHERE JOBINSTANCE=#prcs_job_instance
End-Sql
End-Procedure !Clear-Temp-Tables

!***********************************************************************
! Additional SQCs included in the report                               *
!***********************************************************************
#include 'datetime.sqc'     !Routines for date and time formatting
#include 'datemath.sqc'     !Date conversion procedures
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
#include 'prcsapi.sqc'      !Replaces stdapi.sqc
#include 'stdapi.sqc'
#include 'prcslng.sqc'      !Replaces getrplng.sqc
#include 'readxlat.sqc'     !Procedure to read values from xlattable
#include 'reset.sqc'        !Reset printer procedure
#include 'number.sqc'       !Routines to format numbers
#include 'gpinninw.sqc'         !GPINNINWD:  Convert Net Pay to Words in Rupees
