!***********************************************************************
!  GPCHUT04 :  Procedures to get all Addresses                         *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!       $Release:  HR92                                                !
!           $Bug:  26422143                                            !
!                                                                      *
!***********************************************************************

Begin-Procedure Get-Emp-Address($Ctl_Emplid,$Ctl_Addr_Effdt,$Ctl_Addr_Type,:$ADDLINE1, :$ADDLINE2, :$ADDLINE3,
                                :$ADDLINE31, :$ADDLINE4,:$ADDLINE5,:$ADDLINE6,:$Full_Name,
                                :$FirstName,:$LastName,:$NAME_PREFIX,:$NAME_TITLE,
                                :$NAME_ROYAL_PREFIX,:$NAME_ROYAL_SUFFIX,:$Phone,:$Email,
                                :$CITY,:$STATE,:$POSTAL)
#DEBUG show '-> Get-Emp-Address '
  move $_User_lang to $language_cd
if $Ctl_Addr_Effdt = ''  !if no As-Of-Date is specified, default to Today
    move $_AsOfToday to $Ctl_Addr_Effdt
end-if

  do Get_Type_Options($Name_Type,$Addr_Type,$Phone_Type,$Email_Type,$BirthName_Type,$Security_Type)

  if $Ctl_Addr_Type <> $Addr_Type
     let $Addr_Type = $Ctl_Addr_Type
  end-if

begin-SELECT
LCD1.LANGUAGE_CD
  let $BASE_LANG = rtrim(ltrim(&LCD1.LANGUAGE_CD,' '),' ')
FROM  PSOPTIONS LCD1
end-SELECT

  if  ($BASE_LANG <>  $language_cd) and ($language_cd <> '')
Begin-Select
NML1.NAME
FROM PS_NAMES_LNG NML1 , PS_PERSON NM1
WHERE NML1.EMPLID    = $Ctl_Emplid
AND   NML1.NAME_TYPE = $Name_Type
AND   NML1.LANGUAGE_CD = $language_cd
AND   NML1.EMPLID    = NM1.EMPLID
AND   NML1.EFFDT     =(SELECT MAX(NML2.EFFDT) FROM PS_NAMES_LNG NML2 WHERE
                     NML2.EMPLID    = NML1.EMPLID AND
                     NML2.NAME_TYPE = NML1.NAME_TYPE AND
                     NML2.LANGUAGE_CD = NML1.LANGUAGE_CD AND
                     NML2.EFFDT    <= $Ctl_Addr_Effdt)
end-SELECT
  
 if &NML1.NAME = ''
 do Get-BaseLang-Name($Ctl_Emplid,$Name_Type,$Ctl_Addr_Effdt,$NAME,$NAME_PREFIX,$NAME_TITLE,$NAME_ROYAL_PREFIX,$NAME_ROYAL_SUFFIX)
 end-if
 else
 do Get-BaseLang-Name($Ctl_Emplid,$Name_Type,$Ctl_Addr_Effdt,$NAME,$NAME_PREFIX,$NAME_TITLE,$NAME_ROYAL_PREFIX,$NAME_ROYAL_SUFFIX)
 end-if
 
 if &NML1.NAME <> ''
    let $NAME = &NML1.NAME  
 end-if

  let $NAME              = rtrim($NAME,' ')
  let $NAME_PREFIX       = rtrim($NAME_PREFIX,' ')
  let $NAME_TITLE        = rtrim($NAME_TITLE, ' ')
  let $NAME_ROYAL_PREFIX = rtrim($NAME_ROYAL_PREFIX, ' ')
  let $NAME_ROYAL_SUFFIX = rtrim($NAME_ROYAL_SUFFIX, ' ')

  do Get-Full-Name($NAME,$NAME_ROYAL_PREFIX,$NAME_ROYAL_SUFFIX, $Full_Name,$FirstName,$LastName)

!------------------------------------------------------------------

Begin-Select

AD.COUNTRY
AD.ADDRESS1
AD.ADDRESS2
AD.ADDRESS3
AD.ADDRESS4
AD.CITY
AD.NUM1
AD.NUM2
AD.HOUSE_TYPE
AD.ADDR_FIELD1
AD.ADDR_FIELD2
AD.ADDR_FIELD3
AD.COUNTY
AD.STATE
AD.POSTAL
AD.GEO_CODE
AD.IN_CITY_LIMIT

FROM PS_ADDRESSES AD , PS_PERSON AD1
WHERE AD.EMPLID       = $Ctl_Emplid
AND   AD.ADDRESS_TYPE = $Addr_Type
AND   AD.EMPLID       = AD1.EMPLID
AND   AD.EFFDT        = (SELECT MAX(AD2.EFFDT) FROM PS_ADDRESSES AD2 WHERE
                         AD2.EMPLID       = AD.EMPLID AND
                         AD2.ADDRESS_TYPE = AD.ADDRESS_TYPE AND
                         AD2.EFFDT       <= $Ctl_Addr_Effdt)
end-SELECT

     let $COUNTRY             = rtrim(&AD.COUNTRY,' ')
     let $ADDRESS1            = rtrim(&AD.ADDRESS1,' ')
     let $ADDRESS2            = rtrim(&AD.ADDRESS2,' ')
     let $ADDRESS3            = rtrim(&AD.ADDRESS3,' ')
     let $ADDRESS4            = rtrim(&AD.ADDRESS4,' ')
     let $CITY                = rtrim(&AD.CITY,' ')
     let $NUM1                = rtrim(&AD.NUM1,' ')
     let $NUM2                = rtrim(&AD.NUM2,' ')
     let $HOUSE_TYPE          = rtrim(&AD.HOUSE_TYPE,' ')
     let $ADDR_FIELD1         = rtrim(&AD.ADDR_FIELD1,' ')
     let $ADDR_FIELD2         = rtrim(&AD.ADDR_FIELD2,' ')
     let $ADDR_FIELD3         = rtrim(&AD.ADDR_FIELD3,' ')
     let $COUNTY              = rtrim(&AD.COUNTY,' ')
     let $STATE               = rtrim(&AD.STATE,' ')
     let $POSTAL              = rtrim(&AD.POSTAL,' ')
     let $GEO_CODE            = rtrim(&AD.GEO_CODE,' ')
     let $IN_CITY_LIMIT       = rtrim(&AD.IN_CITY_LIMIT,' ')


     if $COUNTRY <> 'CHE'
        do Get-Zip($POSTAL,$COUNTRY, $Eurozip)
        let $POSTAL = $Eurozip
     end-if

!------------------------------------------------------------------

Begin-Select
PN.PHONE
FROM PS_PERSONAL_PHONE PN , PS_PERSON PN1
WHERE PN.EMPLID     = $Ctl_Emplid
AND   PN.PHONE_TYPE = $Phone_Type
AND   PN.EMPLID     = PN1.EMPLID
end-SELECT

  let $Phone = rtrim(&PN.PHONE,' ')

!------------------------------------------------------------------

Begin-Select
EM.EMAIL_ADDR
FROM  PS_EMAIL_ADDRESSES EM , PS_PERSON EM1
WHERE EM.EMPLID      = $Ctl_Emplid
AND   EM.E_ADDR_TYPE = $Email_Type
AND   EM.EMPLID      = EM1.EMPLID

end-SELECT

  let $Email = rtrim(&EM.EMAIL_ADDR,' ')

  let $NAME       = substr($NAME,1,35)
  let $ADDRESS1   = substr($ADDRESS1,1,32)
  let $ADDRESS2   = substr($ADDRESS2,1,32)
  let $ADDRESS3   = substr($ADDRESS3,1,32)
  let $ADDRESS4   = substr($ADDRESS4,1,32)
  let $CITY       = substr($CITY,1,27)
  let $Full_Name  = substr($Full_Name,1,35)
  let $FirstName  = substr($FirstName,1,35)
  let $LastName   = substr($LastName,1,35)


  do ADFORMAT($NAME,$ADDRESS1,$ADDRESS2,$ADDRESS3,$ADDRESS4,$NUM1,$NUM2,$HOUSE_TYPE,$POSTAL,
              $CITY,$STATE,$COUNTY,$COUNTRY,$GEO_CODE,$ADDR_FIELD1,$ADDR_FIELD2,
              $ADDR_FIELD3,$IN_CITY_LIMIT,$ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31,
              $ADDLINET4,$ADDLINET5,$ADDLINET6)

  do Compress-Address($ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31, $ADDLINET4,$ADDLINET5,
                      $ADDLINET6,$ADDLINE1,$ADDLINE2,$ADDLINE3,$ADDLINE31,$ADDLINE4,
                      $ADDLINE5,$ADDLINE6)

#DEBUG show '<- Get-Emp-Address '
End-Procedure Get-Emp-Address

!**********************************************************
begin-procedure Get-BaseLang-Name($Ctl_Emplid,$Name_Type,$Ctl_Addr_Effdt,:$NAME,:$NAME_PREFIX,:$NAME_TITLE,:$NAME_ROYAL_PREFIX,:$NAME_ROYAL_SUFFIX)
#DEBUG show '-> Get-BaseLang-Name '

Begin-Select
NM.NAME
NM.NAME_PREFIX
NM.NAME_TITLE
NM.NAME_ROYAL_PREFIX
NM.NAME_ROYAL_SUFFIX
FROM PS_NAMES NM , PS_PERSON NM1
WHERE NM.EMPLID    = $Ctl_Emplid
AND   NM.NAME_TYPE = $Name_Type
AND   NM.EMPLID    = NM1.EMPLID
AND   NM.EFFDT     =(SELECT MAX(NM2.EFFDT) FROM PS_NAMES NM2 WHERE
                     NM2.EMPLID    = NM.EMPLID AND
                     NM2.NAME_TYPE = NM.NAME_TYPE AND
                     NM2.EFFDT    <= $Ctl_Addr_Effdt)
end-SELECT
  
  let $NAME              = &NM.NAME
  let $NAME_PREFIX       = &NM.NAME_PREFIX
  let $NAME_TITLE        = &NM.NAME_TITLE
  let $NAME_ROYAL_PREFIX = &NM.NAME_ROYAL_PREFIX
  let $NAME_ROYAL_SUFFIX = &NM.NAME_ROYAL_SUFFIX

end-procedure Get-BaseLang-Name


!**********************************************************
begin-procedure Get-Full-Name($NAME,$NAME_ROYAL_PREFIX,$NAME_ROYAL_SUFFIX,:$full_name,:$FirstName,:$LastName)
#DEBUG show '-> Get-Full-Name '

  !**build name string in $Full_Name



  !find last name
  let $field = rtrim($Name,' ')
  find ',' in $Name 0 #locn
  extract $LastName from $Name 0 #locn

  !find first name
  add 2 to #locn
  let $Name = substr($Name,#locn,50 - #locn)
  find ',' in $Name 0 #locn
  if #locn <> -1
    extract $FirstName from $Name 0 #locn
    add 1 to #locn
    extract $PrefixName from $Name #locn 50
  else
    let $Firstname = $Name
    let $PrefixName = ''
  end-if

  let $Full_Name = rtrim ($LastName, ' ')

 ! if rtrim ($NAME_ROYAL_SUFFIX, ' ') <> ''
 !   concat ' ' with $Full_Name
 !   concat ' ' with $Letter_Name
 !   concat $NAME_ROYAL_SUFFIX with $Full_Name
 !   concat $NAME_ROYAL_SUFFIX with $Letter_Name
 ! end-if

 ! if rtrim ($NAME_ROYAL_PREFIX, ' ') <> ''
 !   concat ' ' with $Full_Name
 !   concat $NAME_ROYAL_PREFIX with $Full_Name
 ! end-if

  concat ', ' with $Full_Name
  concat $FirstName with $Full_Name


#DEBUG show '<- Get-Full-Name($full_name=' $full_name ')'
end-procedure Get-Full-Name

!**********************************************
begin-procedure Get-Zip($postal, $country, :$zip)
#DEBUG show '-> Get-Zip($postal=' $postal ', $country=' $country ')'

  do CountryPrefixArray
  do Get-Country-Prefix($COUNTRY,$Addr_Prefix)

  let $tmp = rtrim($Addr_Prefix, ' ')
  let $zip = $tmp || $postal


#DEBUG show '<- Get-Zip($zip=' $zip ')'
end-procedure Get-Zip
!**********************************************
Begin-Procedure Get-Location-Address($Ctl_Location,$Ctl_Addr_Effdt, :$ADDLINE1, :$ADDLINE2, :$ADDLINE3,
                                    :$ADDLINE31, :$ADDLINE4,:$ADDLINE5,:$ADDLINE6,
                                    :$LOCATION_DESCR,:$LOCATION_DESCRSHORT,:$CITY,:$STATE,:$POSTAL)
#DEBUG show '-> Get-Location-Address'

if $Ctl_Addr_Effdt = ''  !if no As-Of-Date is specified, default to Today
    move $_AsOfToday to $Ctl_Addr_Effdt
end-if

Begin-Select
L1.DESCR
L1.DESCRSHORT
L1.COUNTRY
L1.ADDRESS1
L1.ADDRESS2
L1.ADDRESS3
L1.ADDRESS4
L1.CITY
L1.NUM1
L1.NUM2
L1.HOUSE_TYPE
L1.ADDR_FIELD1
L1.ADDR_FIELD2
L1.ADDR_FIELD3
L1.COUNTY
L1.STATE
L1.POSTAL
L1.GEO_CODE
L1.IN_CITY_LIMIT
FROM  PS_LOCATION_TBL L1
WHERE L1.LOCATION = $Ctl_Location
AND   L1.EFFDT    = (SELECT MAX(EFFDT)
                     FROM  PS_LOCATION_TBL L2
                     WHERE L1.LOCATION = L2.LOCATION
                     AND   L2.EFFDT   <= $Ctl_Addr_Effdt)
End-Select


     let $LOCATION_DESCR      = rtrim(&L1.DESCR,' ')
     let $LOCATION_DESCRSHORT = rtrim(&L1.DESCRSHORT,' ')
     let $NAME                = rtrim($Ctl_Location,' ')
     let $COUNTRY             = rtrim(&L1.COUNTRY,' ')
     let $ADDRESS1            = rtrim(&L1.ADDRESS1,' ')
     let $ADDRESS2            = rtrim(&L1.ADDRESS2,' ')
     let $ADDRESS3            = rtrim(&L1.ADDRESS3,' ')
     let $ADDRESS4            = rtrim(&L1.ADDRESS4,' ')
     let $CITY                = rtrim(&L1.CITY,' ')
     let $NUM1                = rtrim(&L1.NUM1,' ')
     let $NUM2                = rtrim(&L1.NUM2,' ')
     let $HOUSE_TYPE          = rtrim(&L1.HOUSE_TYPE,' ')
     let $ADDR_FIELD1         = rtrim(&L1.ADDR_FIELD1,' ')
     let $ADDR_FIELD2         = rtrim(&L1.ADDR_FIELD2,' ')
     let $ADDR_FIELD3         = rtrim(&L1.ADDR_FIELD3,' ')
     let $COUNTY              = rtrim(&L1.COUNTY,' ')
     let $STATE               = rtrim(&L1.STATE,' ')
     let $POSTAL              = rtrim(&L1.POSTAL,' ')
     let $GEO_CODE            = rtrim(&L1.GEO_CODE,' ')
     let $IN_CITY_LIMIT       = rtrim(&L1.IN_CITY_LIMIT,' ')

     if $COUNTRY <> 'CHE'
        do Get-Zip($POSTAL,$COUNTRY, $Eurozip)
        let $POSTAL = $Eurozip
     end-if

     let $LOCATION_DESCR      = substr($LOCATION_DESCR,1,35)
     let $ADDRESS1            = substr($ADDRESS1,1,32)
     let $ADDRESS2            = substr($ADDRESS2,1,32)
     let $ADDRESS3            = substr($ADDRESS3,1,32)
     let $ADDRESS4            = substr($ADDRESS4,1,32)
     let $CITY                = substr($CITY,1,27)


   do ADFORMAT($NAME,$ADDRESS1,$ADDRESS2,$ADDRESS3,$ADDRESS4,$NUM1,$NUM2,$HOUSE_TYPE,$POSTAL,
               $CITY,$STATE,$COUNTY,$COUNTRY,$GEO_CODE,$ADDR_FIELD1,$ADDR_FIELD2,
               $ADDR_FIELD3,$IN_CITY_LIMIT,$ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31,
               $ADDLINET4,$ADDLINET5,$ADDLINET6)


   do Compress-Address($ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31, $ADDLINET4,$ADDLINET5,
                       $ADDLINET6,$ADDLINE1,$ADDLINE2,$ADDLINE3,$ADDLINE31,$ADDLINE4,
                       $ADDLINE5,$ADDLINE6)


#DEBUG show '<- Get-Location-Address'
End-Procedure Get-Location-Address
!**********************************************************
Begin-Procedure Get-PayEnt-Address($Ctl_PayEntity,$Ctl_Addr_Effdt, :$ADDLINE1, :$ADDLINE2, :$ADDLINE3,
                                   :$ADDLINE31, :$ADDLINE4,:$ADDLINE5,:$ADDLINE6,
                                   :$PAYENTITY_DESCR,:$PAYENTITY_DESCRSHORT,:$CITY,:$STATE,:$POSTAL)
#DEBUG show '-> Get-PayEnt-Address'

if $Ctl_Addr_Effdt = ''  !if no As-Of-Date is specified, default to Today
    move $_AsOfToday to $Ctl_Addr_Effdt
end-if

Begin-Select
P.DESCR
P.DESCRSHORT
P1.COUNTRY
P1.ADDRESS1
P1.ADDRESS2
P1.ADDRESS3
P1.ADDRESS4
P1.CITY
P1.NUM1
P1.NUM2
P1.HOUSE_TYPE
P1.ADDR_FIELD1
P1.ADDR_FIELD2
P1.ADDR_FIELD3
P1.COUNTY
P1.STATE
P1.POSTAL
P1.GEO_CODE
P1.IN_CITY_LIMIT
FROM  PS_GP_PYENT P, PS_GP_PYENT_DTL P1
WHERE P.PAY_ENTITY = P1.PAY_ENTITY
AND   P.PAY_ENTITY = $Ctl_PayEntity
AND   P1.EFFDT = (SELECT MAX(EFFDT)
                  FROM   PS_GP_PYENT_DTL P2
                  WHERE  P2.PAY_ENTITY = P1.PAY_ENTITY
                  AND    P2.EFFDT     <= $Ctl_Addr_Effdt)
End-Select


     let $PAYENTITY_DESCR     = rtrim(&P.DESCR,' ')
     let $PAYENTITY_DESCRSHORT= rtrim(&P.DESCRSHORT,' ')
     let $NAME                = rtrim($Ctl_PayEntity,' ')
     let $COUNTRY             = rtrim(&P1.COUNTRY,' ')
     let $ADDRESS1            = rtrim(&P1.ADDRESS1,' ')
     let $ADDRESS2            = rtrim(&P1.ADDRESS2,' ')
     let $ADDRESS3            = rtrim(&P1.ADDRESS3,' ')
     let $ADDRESS4            = rtrim(&P1.ADDRESS4,' ')
     let $CITY                = rtrim(&P1.CITY,' ')
     let $NUM1                = rtrim(&P1.NUM1,' ')
     let $NUM2                = rtrim(&P1.NUM2,' ')
     let $HOUSE_TYPE          = rtrim(&P1.HOUSE_TYPE,' ')
     let $ADDR_FIELD1         = rtrim(&P1.ADDR_FIELD1,' ')
     let $ADDR_FIELD2         = rtrim(&P1.ADDR_FIELD2,' ')
     let $ADDR_FIELD3         = rtrim(&P1.ADDR_FIELD3,' ')
     let $COUNTY              = rtrim(&P1.COUNTY,' ')
     let $STATE               = rtrim(&P1.STATE,' ')
     let $POSTAL              = rtrim(&P1.POSTAL,' ')
     let $GEO_CODE            = rtrim(&P1.GEO_CODE,' ')
     let $IN_CITY_LIMIT       = rtrim(&P1.IN_CITY_LIMIT,' ')
      if $COUNTRY <> 'CHE'
        do Get-Zip($POSTAL,$COUNTRY, $Eurozip)
        let $POSTAL = $Eurozip
      end-if


     let $PAYENTITY_DESCR      = substr($PAYENTITY_DESCR,1,35)
     let $ADDRESS1             = substr($ADDRESS1,1,32)
     let $ADDRESS2             = substr($ADDRESS2,1,32)
     let $ADDRESS3             = substr($ADDRESS3,1,32)
     let $ADDRESS4             = substr($ADDRESS4,1,32)
     let $CITY                 = substr($CITY,1,27)

    do ADFORMAT($NAME,$ADDRESS1,$ADDRESS2,$ADDRESS3,$ADDRESS4,$NUM1,$NUM2,$HOUSE_TYPE,$POSTAL,
                $CITY,$STATE,$COUNTY,$COUNTRY,$GEO_CODE,$ADDR_FIELD1,$ADDR_FIELD2,
                $ADDR_FIELD3,$IN_CITY_LIMIT,$ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31,
                $ADDLINET4,$ADDLINET5,$ADDLINET6)


    do Compress-Address($ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31, $ADDLINET4,$ADDLINET5,
                        $ADDLINET6,$ADDLINE1,$ADDLINE2,$ADDLINE3,$ADDLINE31,$ADDLINE4,
                        $ADDLINE5,$ADDLINE6)


#DEBUG show '<- Get-PayEnt-Address'
End-Procedure Get-PayEnt-Address

!**********************************************************
Begin-Procedure Get-Company-Address($Ctl_Company,$Ctl_Addr_Effdt,$language_cd,:$ADDLINE1,:$ADDLINE2,:$ADDLINE3,
                                    :$ADDLINE31,:$ADDLINE4,:$ADDLINE5,:$ADDLINE6,:$COMPANY_DESCR,:$COMPANY_DESCRSHORT,
                                    :$CITY,:$STATE,:$POSTAL,:$Busn_Phone,:$Fax_Phone,:$Otr_Phone)
#DEBUG show '-> Get-Company-Address'

if $Ctl_Addr_Effdt = ''  !if no As-Of-Date is specified, default to Today
    move $_AsOfToday to $Ctl_Addr_Effdt
end-if

begin-SELECT

C5.LANGUAGE_CD

  let $Base_Lang = rtrim(ltrim(&C5.LANGUAGE_CD,' '),' ')

FROM  PSOPTIONS C5


end-SELECT

Begin-Select
C1.DESCR
C1.DESCRSHORT
C1.COUNTRY
C1.ADDRESS1
C1.ADDRESS2
C1.ADDRESS3
C1.ADDRESS4
C1.CITY
C1.NUM1
C1.NUM2
C1.HOUSE_TYPE
C1.ADDR_FIELD1
C1.ADDR_FIELD2
C1.ADDR_FIELD3
C1.COUNTY
C1.STATE
C1.POSTAL
C1.GEO_CODE
C1.IN_CITY_LIMIT
FROM  PS_COMPANY_TBL C1
WHERE C1.COMPANY  = $Ctl_Company
AND   C1.EFFDT    = (SELECT MAX(EFFDT)
                     FROM  PS_COMPANY_TBL C2
                     WHERE C1.COMPANY  = C2.COMPANY
                     AND   C2.EFFDT   <= $Ctl_Addr_Effdt)
End-Select

     let $COMPANY_DESCR        = rtrim(&C1.DESCR,' ')
     let $COMPANY_DESCRSHORT   = rtrim(&C1.DESCRSHORT,' ')
     let $NAME                 = rtrim($Ctl_Company ,' ')
     let $COUNTRY              = rtrim(&C1.COUNTRY,' ')
     let $ADDRESS1             = rtrim(&C1.ADDRESS1,' ')
     let $ADDRESS2             = rtrim(&C1.ADDRESS2,' ')
     let $ADDRESS3             = rtrim(&C1.ADDRESS3,' ')
     let $ADDRESS4             = rtrim(&C1.ADDRESS4,' ')
     let $CITY                 = rtrim(&C1.CITY,' ')
     let $NUM1                 = rtrim(&C1.NUM1,' ')
     let $NUM2                 = rtrim(&C1.NUM2,' ')
     let $HOUSE_TYPE           = rtrim(&C1.HOUSE_TYPE,' ')
     let $ADDR_FIELD1          = rtrim(&C1.ADDR_FIELD1,' ')
     let $ADDR_FIELD2          = rtrim(&C1.ADDR_FIELD2,' ')
     let $ADDR_FIELD3          = rtrim(&C1.ADDR_FIELD3,' ')
     let $COUNTY               = rtrim(&C1.COUNTY,' ')
     let $STATE                = rtrim(&C1.STATE,' ')
     let $POSTAL               = rtrim(&C1.POSTAL,' ')
     let $GEO_CODE             = rtrim(&C1.GEO_CODE,' ')
     let $IN_CITY_LIMIT        = rtrim(&C1.IN_CITY_LIMIT,' ')


if $Base_Lang <> $language_cd

   let #ci = 0

Begin-Select
C3.DESCR
C3.DESCRSHORT

 let #ci = #ci + 1

FROM PS_COMPNY_TBL_LANG C3
WHERE C3.COMPANY     = $Ctl_Company
AND   C3.LANGUAGE_CD = $language_cd
AND   C3.EFFDT       = (SELECT MAX(EFFDT) FROM  PS_COMPNY_TBL_LANG C4
                        WHERE C4.COMPANY     = C3.COMPANY
                        AND   C4.LANGUAGE_CD = C3.LANGUAGE_CD
                        AND   C4.EFFDT      <= $Ctl_Addr_Effdt)
End-Select

     if #ci <> 0
        let $COMPANY_DESCR      = rtrim(&C3.DESCR,' ')
        let $COMPANY_DESCRSHORT = rtrim(&C3.DESCRSHORT,' ')
     end-if
end-if

     if $COUNTRY <> 'CHE'
        do Get-Zip($POSTAL,$COUNTRY, $Eurozip)
        let $POSTAL = $Eurozip
     end-if

        do CountryPrefixArray
        do Get-Country-Prefix($COUNTRY,$Addr_Prefix)

     let $COMPANY_DESCR        = substr($COMPANY_DESCR,1,35)
     let $ADDRESS1             = substr($ADDRESS1,1,32)
     let $ADDRESS2             = substr($ADDRESS2,1,32)
     let $ADDRESS3             = substr($ADDRESS3,1,32)
     let $ADDRESS4             = substr($ADDRESS4,1,32)
     let $CITY                 = substr($CITY,1,27)

     do ADFORMAT($NAME,$ADDRESS1,$ADDRESS2,$ADDRESS3,$ADDRESS4,$NUM1,$NUM2,$HOUSE_TYPE,$POSTAL,
               $CITY,$STATE,$COUNTY,$COUNTRY,$GEO_CODE,$ADDR_FIELD1,$ADDR_FIELD2,
               $ADDR_FIELD3,$IN_CITY_LIMIT,$ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31,
               $ADDLINET4,$ADDLINET5,$ADDLINET6)


     do Compress-Address($ADDLINET1,$ADDLINET2,$ADDLINET3,$ADDLINET31, $ADDLINET4,$ADDLINET5,
                       $ADDLINET6,$ADDLINE1,$ADDLINE2,$ADDLINE3,$ADDLINE31,$ADDLINE4,
                       $ADDLINE5,$ADDLINE6)

     do Get-Company-Phone($Ctl_Company,'BUSN',$Ctl_Addr_Effdt, $Busn_Phone)
     do Get-Company-Phone($Ctl_Company,'FAX' ,$Ctl_Addr_Effdt, $Fax_Phone)
     do Get-Company-Phone($Ctl_Company,'OTR' ,$Ctl_Addr_Effdt, $Otr_Phone)


#DEBUG show '<- Get-Company-Address'
End-Procedure Get-Company-Address
!**********************************************************
Begin-Procedure Get-Company-Phone($Ctl_Company,$Ctl_Phone_Type,$Ctl_Addr_Effdt, :$Comp_Phone)
#DEBUG show '-> Get-Company-Phone'


Begin-Select
CP1.PHONE
FROM  PS_COMP_PHONE_TBL CP1
WHERE CP1.COMPANY    = $Ctl_Company
AND   CP1.PHONE_TYPE = $Ctl_Phone_Type
AND   CP1.EFFDT      = (SELECT MAX(EFFDT)
                        FROM  PS_COMP_PHONE_TBL CP2
                        WHERE CP1.COMPANY    = CP2.COMPANY
                        AND   CP1.PHONE_TYPE = CP2.PHONE_TYPE
                        AND   CP2.EFFDT     <= $Ctl_Addr_Effdt)
End-Select


  let $Comp_Phone    = rtrim(&CP1.PHONE,' ')




#DEBUG show '<- Get-Company-Phone'
End-Procedure Get-Company-Phone
!**********************************************************

begin-procedure Get_Type_Options(:$Name_Type,:$Addr_Type,:$Phone_Type,:$Email_Type,:$BirthName_Type,:$Security_Type)

let $Name_Type       = ''
let $Addr_Type       = ''
let $Phone_Type      = ''
let $Email_Type      = ''
let $BirthName_Type  = ''

begin-select distinct
INST.NAME_TYPE
INST.ADDRESS_TYPE
INST.PHONE_TYPE
INST.E_ADDR_TYPE
INST.GPCH_BIRTH_NM_TYPE
INST.GPCH_AL_SECURITY

   let $Name_Type      = rtrim(&INST.NAME_TYPE,' ')
   let $Addr_Type      = rtrim(&INST.ADDRESS_TYPE,' ')
   let $Phone_Type     = rtrim(&INST.PHONE_TYPE,' ')
   let $Email_Type     = rtrim(&INST.E_ADDR_TYPE,' ')
   let $BirthName_Type = rtrim(&INST.GPCH_BIRTH_NM_TYPE,' ')
   let $Security_Type  = rtrim(&INST.GPCH_AL_SECURITY,' ')

from PS_GPCH_AL_INSTALL INST
end-select
end-procedure
!************************************************************
begin-procedure Get-Country-Prefix($Country_from,:$Addr_Prefix)
#DEBUG show '-> Get-Country-Prefix '

let #Prefix_cnt     = 0
let $Prefix_Country = ''
let $Addr_Prefix    = ''

while #Prefix_cnt < 200
  get $Prefix_Country $Addr_Prefix from CountryPrefixArray(#Prefix_cnt)
  if $Prefix_Country = $Country_from
     break
  end-if
  let #Prefix_cnt = #Prefix_cnt + 1
end-while

clear-array  name = CountryPrefixArray

#DEBUG show '<- Get-Country-Prefix ' $Addr_Prefix
end-procedure Get-Country-Prefix
!******************************************************************************************
begin-procedure Get-PayEntity-Company
#DEBUG show '-> Get-PayEntity-Company '

create-array name=PayEntCompany size= 200
field=COMPANY:char
field=ADDLINE1:char
field=ADDLINE2:char
field=ADDLINE3:char
field=ADDLINE31:char
field=ADDLINE4:char
field=ADDLINE5:char
field=ADDLINE6:char
field=COMPANY_DESCR:char
field=COMPANY_DESCRSHORT:char
field=CITY:char
field=STATE:char
field=POSTAL:char
field=Busn_Phone:char
field=Fax_Phone:char
field=Otr_Phone:char


let #PyCmp = 0
let #count_company  = 0

Begin-Select
B.DATA_KEY1
B.DATA_VAL2

   let $Company = rtrim(&B.DATA_KEY1,' ')

   do Get-Company-Address($Company,$Company_Dt,$language_cd,$ADDLINE1,$ADDLINE2,$ADDLINE3,$ADDLINE31,
                          $ADDLINE4,$ADDLINE5,$ADDLINE6,$COMPANY_DESCR,$COMPANY_DESCRSHORT,
                          $CITY,$STATE,$POSTAL,$Busn_Phone,$Fax_Phone,$Otr_Phone)

   put $Company $ADDLINE1 $ADDLINE2 $ADDLINE3 $ADDLINE31 $ADDLINE4 $ADDLINE5 $ADDLINE6 $COMPANY_DESCR
       $COMPANY_DESCRSHORT $CITY $STATE $POSTAL $Busn_Phone $Fax_Phone $Otr_Phone into PayEntCompany(#PyCmp)

   let #PyCmp = #PyCmp + 1


   let $Companycnt = $Company

   if $Companycnt <> ''
      let $temp-value        = rtrim($Companycnt,' ')
      let $Company-String-PY = $Company-String-PY || '''' || $temp-value || '''' || ','
      let #count_company     = #count_company + 1
   end-if

FROM PS_GP_BRACKET A,PS_GP_BRACKET_DTL B , PS_GP_PIN C
WHERE A.PIN_NUM   = B.PIN_NUM
AND   C.PIN_NUM   = A.PIN_NUM
AND   A.EFFDT     = B.EFFDT
AND   A.EFFDT     = (SELECT MAX(A1.EFFDT) FROM PS_GP_BRACKET A1
                     WHERE A1.PIN_NUM = A.PIN_NUM
                     AND   A1.EFFDT  <= $Ctl_Addr_Effdt)
AND   C.PIN_NM    = 'CH_00_BLENTITY'
AND   B.DATA_VAL2 = $Ctl_PayEntity
[$Company_Criteria_B]
End-Select

 let $Company-String-PY = rtrim($Company-String-PY,',')

 if #count_company <> 0
     let $Company_Criteria_PY    = ' CD.COMPANY IN ( ' || $Company-String-PY || ')'
 else
     let $Company_Criteria_PY    = ' CD.COMPANY = ''' || $Ctl_PayEntity || ''' '
 end-if

#DEBUG show '<- Get-PayEntity-Company ' #PyCmp
end-procedure Get-PayEntity-Company
!******************************************************************************************

begin-procedure Get-Company-Address-Array($Ctl_Company,:$ADDLINE1, :$ADDLINE2, :$ADDLINE3,:$ADDLINE31,
                                          :$ADDLINE4,:$ADDLINE5,:$ADDLINE6,:$COMPANY_DESCR,:$COMPANY_DESCRSHORT,
                                          :$CITY,:$STATE,:$POSTAL,:$Busn_Phone,:$Fax_Phone,:$Otr_Phone)
#DEBUG show '-> Get-Company-Address-Array ' #_PyCmp  ' , ' $Ctl_Company

   let #PyCmpi = 0

while #PyCmpi <= #_PyCmp

    get $Company from PayEntCompany(#PyCmpi)company

    if $Company = $Ctl_Company

         get $Company $ADDLINE1 $ADDLINE2 $ADDLINE3 $ADDLINE31 $ADDLINE4 $ADDLINE5 $ADDLINE6 $COMPANY_DESCR
             $COMPANY_DESCRSHORT $CITY $STATE $POSTAL $Busn_Phone $Fax_Phone $Otr_Phone from PayEntCompany(#PyCmpi)

    end-if

   let #PyCmpi = #PyCmpi + 1

end-while


#DEBUG show '<- Get-Company-Address-Array ' $COMPANY_DESCR
end-procedure Get-Company-Address-Array

!******************************************************************************************
begin-procedure Load_Company_Description
#Debug Show 'Load_Company_Description -> ' $Ctl_Curr_Pay_End_Dt ' , ' $Company_Criteria_PY
begin-SELECT

LCD1.LANGUAGE_CD

  let $BASE_LANG = rtrim(ltrim(&LCD1.LANGUAGE_CD,' '),' ')


FROM  PSOPTIONS LCD1

end-SELECT

   ! To load Base Pins
   let $Where_Base_Company_Descr = $Company_Criteria_PY
                                || ' AND CD.EFFDT = (SELECT MAX(CD1.EFFDT) FROM PS_COMPANY_TBL CD1  '
                                || ' WHERE CD1.COMPANY  = CD.COMPANY '
                                || ' AND   CD1.EFFDT <= CAST(' ||''''||$Ctl_Curr_Pay_End_Dt||''''||' AS DATE))'

   #Debug show $Where_Base_Company_Descr

   Load-Lookup name = Base_Company_Descr
   Table            = 'PS_COMPANY_TBL CD'
   Key              = 'CD.COMPANY'
   Return_Value     = 'CD.DESCR'
   Where            = $Where_Base_Company_Descr

   !-----------------------------------------------------------------------------
   ! When a particular language is requested.

   if  ($BASE_LANG <>  $Language_cd) and ($Language_cd <> '')

       let $Where_Trans_Company_Descr = $Company_Criteria_PY
                              || ' AND CD.LANGUAGE_CD = '||''''|| $language_cd ||''''
                              || ' AND CD.EFFDT = (SELECT MAX(CD1.EFFDT) FROM PS_COMPANY_TBL CD1  '
                              || ' WHERE CD1.COMPANY  = CD.COMPANY '
                              || ' AND   CD1.EFFDT <= CAST(' ||''''||$Ctl_Curr_Pay_End_Dt||''''||' AS DATE))'


       Load-Lookup name = Trans_Company_Descr
       Table            = 'PS_COMPNY_TBL_LANG CD'
       Key              = 'CD.COMPANY'
       Return_Value     = 'CD.DESCR'
       Where            = $Where_Trans_Company_Descr

   end-if

   !-----------------------------------------------------------------------------
   ! When a no language is selected , meaning Company specific language is wanted.


   if  ($BASE_LANG <>  $Language_cd) and ($Language_cd = '')

       let $Where_Trans_Company_Descr_All = $Company_Criteria_PY
                              || ' AND CD.LANGUAGE_CD in ('||''''||'GER'||''''||','||''''||'FRA'||''''||','||''''||'ITA'||''''||','||''''||'ENG'||''''||')'
                              || ' AND CD.EFFDT = (SELECT MAX(CD1.EFFDT) FROM PS_COMPANY_TBL CD1  '
                              || ' WHERE CD1.COMPANY  = CD.COMPANY '
                              || ' AND   CD1.EFFDT <= CAST(' ||''''||$Ctl_Curr_Pay_End_Dt||''''||' AS DATE))'


       #Debug show $Where_Trans_Company_Descr_All

       #ifdef MICROSOFT
              Load-Lookup name = Trans_Company_Descr_All
              Table            = 'PS_COMPNY_TBL_LANG CD'
              Key              = 'CD.COMPANY + CD.LANGUAGE_CD'
              Return_Value     = 'CD.DESCR'
              Where            = $Where_Trans_Company_Descr_All
       #else
              Load-Lookup name = Trans_Company_Descr_All
              Table            = 'PS_COMPNY_TBL_LANG CD'
              Key              = 'CD.COMPANY || CD.LANGUAGE_CD'
              Return_Value     = 'CD.DESCR'
              Where            = $Where_Trans_Company_Descr_All
       #end-if

   end-if

#Debug Show 'Load_Company_Description <- '
end-procedure Load_Company_Description
!***********************************************************************
begin-procedure CountryPrefixArray
#DEBUG show '-> CountryPrefixArray '


create-array name=CountryPrefixArray size= 200
field=Prefix_Country:char
field=Addr_Prefix:char

put 'DEU' 'D-' into CountryPrefixArray(0)
put 'ALB' 'AL-' into CountryPrefixArray(1)
put 'BIH' 'BOS-' into CountryPrefixArray(2)
put 'AND' 'AND-' into CountryPrefixArray(3)
put 'BEL' 'B-' into CountryPrefixArray(4)
put 'BGR' 'BG-' into CountryPrefixArray(5)
put 'DNK' 'DK-' into CountryPrefixArray(6)
put 'EST' 'EW-' into CountryPrefixArray(7)
put 'FIN' 'FIN-' into CountryPrefixArray(8)
put 'FRA' 'F-' into CountryPrefixArray(9)
put 'HRV' 'HR-' into CountryPrefixArray(10)
put 'SVN' 'SLO-' into CountryPrefixArray(11)
put 'GRC' 'GR-' into CountryPrefixArray(12)
put 'IRL' 'IRL-' into CountryPrefixArray(13)
put 'ISL' 'IS-' into CountryPrefixArray(14)
put 'ITA' 'I-' into CountryPrefixArray(15)
put 'YUG' 'YU-' into CountryPrefixArray(16)
put 'LVA' 'LV-' into CountryPrefixArray(17)
put 'LIE' 'FL-' into CountryPrefixArray(18)
put 'LTU' 'LT-' into CountryPrefixArray(19)
put 'LUX' 'L-' into CountryPrefixArray(20)
put 'MAC' 'MAK-' into CountryPrefixArray(21)
put 'MLT' 'M-' into CountryPrefixArray(22)
put 'MDA' 'MOL-' into CountryPrefixArray(23)
put 'MCO' 'MC-' into CountryPrefixArray(24)
put 'NLD' 'NL-' into CountryPrefixArray(25)
put 'NOR' 'N-' into CountryPrefixArray(26)
put 'AUT' 'A-' into CountryPrefixArray(27)
put 'POL' 'PL-' into CountryPrefixArray(28)
put 'PRT' 'P-' into CountryPrefixArray(29)
put 'ROM' 'RO-' into CountryPrefixArray(30)
put 'SVK' 'SK-' into CountryPrefixArray(31)
put 'SMR' 'RSM-' into CountryPrefixArray(32)
put 'SWE' 'S-' into CountryPrefixArray(33)
put 'CHE' 'CH-' into CountryPrefixArray(34)
put 'RUS' 'RUS-' into CountryPrefixArray(35)
put 'ESP' 'E-' into CountryPrefixArray(36)
put 'TUR' 'TR-' into CountryPrefixArray(37)
put 'CZE' 'CZ-' into CountryPrefixArray(38)
put 'HUN' 'H-' into CountryPrefixArray(39)
put 'UKR' 'UA-' into CountryPrefixArray(40)
put 'VAT' 'V-' into CountryPrefixArray(41)
put 'GBR' 'GB-' into CountryPrefixArray(42)
put 'BLR' 'BY-' into CountryPrefixArray(43)
put 'CYP' 'CY-' into CountryPrefixArray(44)
put 'DZA' 'DZ-' into CountryPrefixArray(45)
put 'AGO' 'AGO-' into CountryPrefixArray(46)
put 'ERI' 'XXX-' into CountryPrefixArray(47)
put 'ETH' 'ETH-' into CountryPrefixArray(48)
put 'LSO' 'LS-' into CountryPrefixArray(49)
put 'BWA' 'RB-' into CountryPrefixArray(50)
put 'BEN' 'DY-' into CountryPrefixArray(51)
put 'DJI' 'XXX-' into CountryPrefixArray(52)
put 'CIV' 'CI-' into CountryPrefixArray(53)
put 'NGA' 'WAN-' into CountryPrefixArray(54)
put 'ZWE' 'ZW-' into CountryPrefixArray(55)
put 'GAB' 'GAB-' into CountryPrefixArray(56)
put 'GMB' 'WAG-' into CountryPrefixArray(57)
put 'GHA' 'GH-' into CountryPrefixArray(58)
put 'MRT' 'RIM-' into CountryPrefixArray(59)
put 'CPV' 'CV-' into CountryPrefixArray(60)
put 'KEN' 'EAK-' into CountryPrefixArray(61)
put 'COM' 'XXX-' into CountryPrefixArray(62)
put 'COG' 'RCB-' into CountryPrefixArray(63)
put 'LBR' 'LB-' into CountryPrefixArray(64)
put 'LBY' 'LAR-' into CountryPrefixArray(65)
put 'MDG' 'RM-' into CountryPrefixArray(66)
put 'MLI' 'RMM-' into CountryPrefixArray(67)
put 'MAR' 'MA-' into CountryPrefixArray(68)
put 'MUS' 'MS-' into CountryPrefixArray(69)
put 'MOZ' 'MOZ-' into CountryPrefixArray(70)
put 'NER' 'RN-' into CountryPrefixArray(71)
put 'MWI' 'MW-' into CountryPrefixArray(72)
put 'ZMB' 'Z-' into CountryPrefixArray(73)
put 'BFA' 'HV-' into CountryPrefixArray(74)
put 'GNB' 'XXX-' into CountryPrefixArray(75)
put 'GIN' 'RG-' into CountryPrefixArray(76)
put 'CMR' 'CAM-' into CountryPrefixArray(77)
put 'ZAF' 'ZA-' into CountryPrefixArray(78)
put 'RWA' 'RWA-' into CountryPrefixArray(79)
put 'NAM' 'SWA-' into CountryPrefixArray(80)
put 'STP' 'STP-' into CountryPrefixArray(81)
put 'SEN' 'SN-' into CountryPrefixArray(82)
put 'SYC' 'SY-' into CountryPrefixArray(83)
put 'SLE' 'WAL-' into CountryPrefixArray(84)
put 'SOM' 'SP-' into CountryPrefixArray(85)
put 'GNQ' 'XXX-' into CountryPrefixArray(86)
put 'SDN' 'SUD-' into CountryPrefixArray(87)
put 'SWZ' 'SD-' into CountryPrefixArray(88)
put 'TZA' 'EAT-' into CountryPrefixArray(89)
put 'TGO' 'TG-' into CountryPrefixArray(90)
put 'TCD' 'CHD-' into CountryPrefixArray(91)
put 'TUN' 'TN-' into CountryPrefixArray(92)
put 'UGA' 'EAU-' into CountryPrefixArray(93)
put 'EGY' 'ET-' into CountryPrefixArray(94)
put 'CAF' 'RCA-' into CountryPrefixArray(95)
put 'BDI' 'RU-' into CountryPrefixArray(96)
put 'ATG' 'ANT-' into CountryPrefixArray(97)
put 'BRB' 'BDS-' into CountryPrefixArray(98)
put 'ARG' 'AR-' into CountryPrefixArray(99)
put 'BHS' 'BS-' into CountryPrefixArray(100)
put 'BOL' 'BOL-' into CountryPrefixArray(101)
put 'BRA' 'BR-' into CountryPrefixArray(102)
put 'GUY' 'GUY-' into CountryPrefixArray(103)
put 'BLZ' 'BH-' into CountryPrefixArray(104)
put 'CHL' 'RCH-' into CountryPrefixArray(105)
put 'DMA' 'WD-' into CountryPrefixArray(106)
put 'CRI' 'CR-' into CountryPrefixArray(107)
put 'DOM' 'DOM-' into CountryPrefixArray(108)
put 'ECU' 'EC-' into CountryPrefixArray(109)
put 'SLV' 'ES-' into CountryPrefixArray(110)
put 'GRD' 'WG-' into CountryPrefixArray(111)
put 'GTM' 'GCA-' into CountryPrefixArray(112)
put 'HTI' 'RH-' into CountryPrefixArray(113)
put 'HND' 'HCA-' into CountryPrefixArray(114)
put 'CAN' 'CDN-' into CountryPrefixArray(115)
put 'COL' 'CO-' into CountryPrefixArray(116)
put 'CUB' 'C-' into CountryPrefixArray(117)
put 'MEX' 'MEX-' into CountryPrefixArray(118)
put 'NIC' 'NA-' into CountryPrefixArray(119)
put 'JAM' 'JA-' into CountryPrefixArray(120)
put 'PAN' 'PA-' into CountryPrefixArray(121)
put 'PRY' 'PY-' into CountryPrefixArray(122)
put 'PER' 'PE-' into CountryPrefixArray(123)
put 'SUR' 'SME-' into CountryPrefixArray(124)
put 'URY' 'ROU-' into CountryPrefixArray(125)
put 'LCA' 'WL-' into CountryPrefixArray(126)
put 'USA' 'USA-' into CountryPrefixArray(127)
put 'VCT' 'WV-' into CountryPrefixArray(128)
put 'KNA' 'SCN-' into CountryPrefixArray(129)
put 'TTO' 'TT-' into CountryPrefixArray(130)
put 'VEN' 'YV-' into CountryPrefixArray(131)
put 'YEM' 'AND-' into CountryPrefixArray(132)
put 'ARM' 'ARM-' into CountryPrefixArray(133)
put 'AFG' 'AFG-' into CountryPrefixArray(134)
put 'BHR' 'BRN-' into CountryPrefixArray(135)
put 'AZE' 'ASE-' into CountryPrefixArray(136)
put 'BTN' 'BHT-' into CountryPrefixArray(137)
put 'MMR' 'BUR-' into CountryPrefixArray(138)
put 'BRN' 'BRU-' into CountryPrefixArray(139)
put 'GEO' 'GEO-' into CountryPrefixArray(140)
put 'LKA' 'CL-' into CountryPrefixArray(141)
put 'VNM' 'VN-' into CountryPrefixArray(142)
put 'PRK' 'XXX-' into CountryPrefixArray(143)
put 'IND' 'IND-' into CountryPrefixArray(144)
put 'IDN' 'RI-' into CountryPrefixArray(145)
put 'IRQ' 'IRQ-' into CountryPrefixArray(146)
put 'IRN' 'IR-' into CountryPrefixArray(147)
put 'ISR' 'IL-' into CountryPrefixArray(148)
put 'JPN' 'J-' into CountryPrefixArray(149)
put 'KAZ' 'KAS-' into CountryPrefixArray(150)
put 'JOR' 'JOR-' into CountryPrefixArray(151)
put 'KHM' 'K-' into CountryPrefixArray(152)
put 'QAT' 'Qat-' into CountryPrefixArray(153)
put 'KWT' 'KWT-' into CountryPrefixArray(154)
put 'LAO' 'LAO-' into CountryPrefixArray(155)
put 'KGZ' 'KIS-' into CountryPrefixArray(156)
put 'LBN' 'RL-' into CountryPrefixArray(157)
put 'MDV' 'BIO-' into CountryPrefixArray(158)
put 'OMN' 'MAO-' into CountryPrefixArray(159)
put 'MNG' 'XXX-' into CountryPrefixArray(160)
put 'NPL' 'NEP-' into CountryPrefixArray(161)
put 'BGD' 'BD-' into CountryPrefixArray(162)
put 'PAK' 'PK-' into CountryPrefixArray(163)
put 'PHL' 'RP-' into CountryPrefixArray(164)
put 'TWN' 'RC-' into CountryPrefixArray(165)
put 'KOR' 'ROK-' into CountryPrefixArray(166)
put 'ARE' 'UAE-' into CountryPrefixArray(167)
put 'TJK' 'TAD-' into CountryPrefixArray(168)
put 'TKM' 'TUR-' into CountryPrefixArray(169)
put 'SAU' 'SAU-' into CountryPrefixArray(170)
put 'SGP' 'SGP-' into CountryPrefixArray(171)
put 'SYR' 'SYR-' into CountryPrefixArray(172)
put 'THA' 'T-' into CountryPrefixArray(173)
put 'UZB' 'USB-' into CountryPrefixArray(174)
put 'CHN' 'TJ-' into CountryPrefixArray(175)
put 'MYS' 'MAL-' into CountryPrefixArray(176)
put 'AUS' 'AUS-' into CountryPrefixArray(177)
put 'SLB' 'SOL-' into CountryPrefixArray(178)
put 'FJI' 'FJI-' into CountryPrefixArray(179)
put 'KIR' 'XXX-' into CountryPrefixArray(180)
put 'NRU' 'NAU-' into CountryPrefixArray(181)
put 'VUT' 'XXX-' into CountryPrefixArray(182)
put 'NZL' 'NZ-' into CountryPrefixArray(183)
put 'PNG' 'PNG-' into CountryPrefixArray(184)
put 'TUV' 'XXX-' into CountryPrefixArray(185)
put 'TON' 'TON-' into CountryPrefixArray(186)
put 'WSM' 'WS-' into CountryPrefixArray(187)
put 'MHL' 'XXX-' into CountryPrefixArray(188)
put 'FSM' 'FSM-' into CountryPrefixArray(189)
put 'HKG' 'HKG-' into CountryPrefixArray(190)
put 'CYM' 'CYM-' into CountryPrefixArray(191)

#DEBUG show '<- CountryPrefixArray '
end-procedure CountryPrefixArray
!********************************************************************************

#include 'gpchut05.sqc'  !Formatting Address Globally
