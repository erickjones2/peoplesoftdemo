!**********************************************************************!
!  gpnlyee:  Year-end Employee Report (NLD)                            !
!**********************************************************************!
!**********************************************************************!
!                                                                      !
!                                                                      !
!                                                                      !
!                                                                      !
! This software and related documentation are provided under a         !
! license agreement containing restrictions on use and                 !
! disclosure and are protected by intellectual property                !
! laws. Except as expressly permitted in your license agreement        !
! or allowed by law, you may not use, copy, reproduce,                 !
! translate, broadcast, modify, license, transmit, distribute,         !
! exhibit, perform, publish or display any part, in any form or        !
! by any means. Reverse engineering, disassembly, or                   !
! decompilation of this software, unless required by law for           !
! interoperability, is prohibited.                                     !
! The information contained herein is subject to change without        !
! notice and is not warranted to be error-free. If you find any        !
! errors, please report them to us in writing.                         !
!                                                                      !
!                                                                      !
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              !
! All Rights Reserved.                                                 !
!**********************************************************************!
!                                                                      !
!          $Date:  2013/10/21:05:56:31                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc' !Set environment

Begin-Setup
#Include 'ptset01.sqc'   !Printer and page-size initialization
End-Setup

#define  COMPANY_TBL
#include 'rellang.sqc'   ! Translations File
#include 'hrctlnld.sqc'  !Get run control parameter values (NLD)

#define iFrameA        1
#define jFrameA        1

#define iFrameM        {jFrameA}
#define jFrameM        8

#define iFrameN        {jFrameA}
#define jFrameN        73

#define iCol1          2
#define iCol2          60
#define iCol3          90
#define iColLast       133

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

!***********************************************************************
!  Init-Report
!***********************************************************************
begin-procedure Init-Report
  move 'GPNLYEE' to $ReportID

  let $flag_tax_credit_2013 = 'Y'


  alter-locale
   thousand-separator = '.'
   decimal-separator  = ','

  do Stdapi-Init
  let $language_cd = $CURR_LANGUAGE_CD
  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)
  if $prcs_process_instance = ''
     !No Prompt
  else
     let #prcs_process_instance = To_number($prcs_process_instance)
     Do Get-values
  end-if

  let $eur = chr(128)
end-procedure

!***********************************************************************
!  Get-Values
!***********************************************************************
begin-procedure Get-Values

  let $sql-statement = 'gpnlyee,Select,Get-Values (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
{DATETIMEOUT-PREFIX}BEGIN_DT{DATETIMEOUT-SUFFIX}   &BEGIN_DT
{DATETIMEOUT-PREFIX}END_DT{DATETIMEOUT-SUFFIX}     &END_DT
GPNL_YEARCD
GPNL_YEE_ORDER
        Do Format-DateTime(&BEGIN_DT, $BEGIN_DT, {DEFDMY},'','')
        Do Format-DateTime(&END_DT, $END_DT, {DEFDMY},'','')
FROM PS_GPNL_RC_YEE
WHERE OPRID = $prcs_oprid
AND RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT

end-procedure

!***********************************************************************
! Get_Tranlat_Info                                                     *
!***********************************************************************
begin-procedure Get_Tranlat_Info
   do Init_Report_Translation($ReportID, $language_cd)
end-procedure

!***********************************************************************
!  Process-Main
!***********************************************************************
begin-procedure Process-Main

  let $sql-statement = 'gpnlyee,Select,Process-Main (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
MAX(JOBINSTANCE) &INSTANCE
FROM PS_GPNL_YEE1_TMP
END-SELECT

  if &GPNL_YEE_ORDER = '1'
     let $Order_Clause = 'ORDER BY COMPANY, LAST_NAME, NAME_ROYAL_PREFIX, FIRST_NAME'
  end-if
  if &GPNL_YEE_ORDER = '2'
     let $Order_Clause = 'ORDER BY DEPTID, LAST_NAME, NAME_ROYAL_PREFIX, FIRST_NAME'
  end-if
  if &GPNL_YEE_ORDER = '3'
     let $Order_Clause = 'ORDER BY LAST_NAME, NAME_ROYAL_PREFIX, FIRST_NAME'
  end-if
  if &GPNL_YEE_ORDER = '4'
     let $Order_Clause = 'ORDER BY POSTAL, LAST_NAME, NAME_ROYAL_PREFIX, FIRST_NAME'
  end-if

  let $sql-statement = 'gpnlyee,Select,Process-Main (2)'
BEGIN-SELECT ON-ERROR = SQL-Error
EMPLID
EMPL_RCD
COMPANY
SETID_DEPT
DEPTID
POSTAL
NATIONAL_ID
NAME_INITIALS
NAME_PREFIX
FIRST_NAME
LAST_NAME
NAME_ROYAL_PREFIX
GPNL_ZFW_CNTR_MTHD
GPNL_WAO_CNTR_MTHD
GPNL_TAX_TABLE
GPNL_TAX_EXCEPTION
GPNL_ANONYM_RT
GPNL_TAX_CREDITS
EFFDT_USED
GPNL_COLUMN_12
GPNL_COLUMN_14
GPNL_COLUMN_15
GPNL_COLUMN_16
GPNL_ZVW_CT_EE_1E
GPNL_COLUMN_19
GPNL_TAXLAB_RED
GPNL_HINS_PREM
GPNL_Y_N
GPNL_TRAVEL_DATA

  let $Emplid = rtrim(&DEPTID, ' ') || '/' || rtrim(&EMPLID, ' ')
  let $Name = rtrim(&LAST_NAME, ' ') || ', ' || rtrim(&FIRST_NAME, ' ') || ' ' || rtrim(&NAME_ROYAL_PREFIX, ' ')
  let $NationalID = rtrim(&NATIONAL_ID, ' ')

  do Print-Page

FROM PS_GPNL_YEE1_TMP
WHERE JOBINSTANCE = &INSTANCE
[$Order_Clause]
END-SELECT

  let $sql-statement = 'gpnlyee,Delete,Process-Main (3)'
BEGIN-SQL ON-ERROR=SQL-Error
DELETE FROM PS_GPNL_YEE1_TMP
WHERE JOBINSTANCE = &INSTANCE
END-SQL

  let $sql-statement = 'gpnlyee,Delete,Process-Main (4)'
BEGIN-SQL ON-ERROR=SQL-Error
DELETE FROM PS_GPNL_YEE2_TMP
WHERE JOBINSTANCE = &INSTANCE
END-SQL

end-procedure

!***********************************************************************
!  Print-Header
!***********************************************************************
begin-procedure Print-Header

  alter-printer font=4 point-size=12
  print 'JAAROPGAAF'     (1,1) bold
  print &GPNL_YEARCD (1,25) bold

  Let #Jaar = &GPNL_YEARCD

  Let $Jaar_2006 = 'N' 
  Let $Jaar_2007 = 'N' 
  If #Jaar >= 2006
    Let $Jaar_2006 = 'Y' 
    If #Jaar >= 2007
      Let $Jaar_2007 = 'Y' 
    end-if
  end-if

  alter-printer font=5 point-size=9

  print $Emplid (5,10)

  alter-printer font=5 point-size=12

  print $CompDescr (+4,70)
  print $CompAddress (+2,70)
  print $CompPostal (+2,70)

  print $NationalID (+4,10)
  print $Name (+2,10)
  print $EmplAddress (+2,10)
  print $EmplPostal (+2,10)

  let #precision = 0

!NLD: 2013.  print 'Loon' (+10,10)
  print 'Loon voor loonbelasting/volksverz.' (+10,10)
  print $eur (,79)
  let #COLUMN_14 = &GPNL_COLUMN_14

! Rounding Always Down
  let #COLUMN_14 = trunc(#COLUMN_14, #precision)
  print #COLUMN_14 (,80) edit 999,999,999


  print 'Ingehouden loonheffing' (+2,10)
  print $eur (,79)
  let #COLUMN_15 = &GPNL_COLUMN_15

! Rounding Always Up
  let #trunc_COLUMN_15 = trunc(#COLUMN_15, #precision) 
  let #diff_COLUMN_15 = #COLUMN_15 - #trunc_COLUMN_15

  if #diff_COLUMN_15 > 0
    add 1 to #trunc_COLUMN_15
    let #COLUMN_15 = #trunc_COLUMN_15
  end-if

  print #COLUMN_15 (,80) edit 999,999,999

  print 'Toegepaste arbeidskorting' (+2,10)
  print $eur (,79)
  let #TAXLAB_RED = &GPNL_TAXLAB_RED

! Rounding Always Down
  let #TAXLAB_RED = trunc(#TAXLAB_RED, #precision) 
  print #TAXLAB_RED (,80) edit 999,999,999



  if  $Jaar_2006 = 'Y' 
    print 'Loon Zorgverzekeringswet' (+2,10)
    print $eur (,79)
    let #COLUMN_12 = &GPNL_COLUMN_12

  ! Rounding Always Down
    let #COLUMN_12 = trunc(#COLUMN_12, #precision)
    print #COLUMN_12 (,80) edit 999,999,999
  end-if



  if  $Jaar_2006 = 'Y' 
    print 'Ingehouden bijdrage Zorgverzekeringswet' (+2,10)
  else
    print 'Premie ziektekostenverz. / ZFW' (+2,10)
  end-if 

  print $eur (,79)

  if #Jaar < 2013

    let #HINS_PREM = &GPNL_HINS_PREM

! Rounding Always Up
    let #trunc_HINS_PREM = trunc(#HINS_PREM, #precision) 
    let #diff_COLUMN_15 = #HINS_PREM - #trunc_HINS_PREM

    if #diff_#HINS_PREM > 0
      add 1 to #trunc_HINS_PREM
      let #HINS_PREM = #trunc_HINS_PREM
    end-if

    print #HINS_PREM (,80) edit 999,999,999

  else
    let #COLUMN_16 = &GPNL_COLUMN_16
      print #COLUMN_16 (,80) edit 999,999,999
  end-if


  if  $Jaar_2006 = 'N' 
    print 'WAO verzekerd' (+2,10)
    if rtrim(&GPNL_WAO_CNTR_MTHD, ' ') <> '' and &GPNL_WAO_CNTR_MTHD <> '00'
      print 'J' (,100)
    else
      print 'N' (,100)
    end-if

    print 'ZFW verzekerd' (+2,10)
    if rtrim(&GPNL_ZFW_CNTR_MTHD, ' ') <> '' and &GPNL_ZFW_CNTR_MTHD <> '00' and &GPNL_ZFW_CNTR_MTHD <> '04'
      print 'J' (,100)
    else
      print 'N' (,100)
    end-if
  end-if


!  if  $Jaar_2007 = 'Y' 
  if ($Jaar_2007 = 'Y' and #Jaar < 2013) or (#Jaar >= 2013 and &GPNL_COLUMN_19 <> 0)

    print 'Levensloopverlofkorting' (+2,10)
    print $eur (,79)
    let #COLUMN_19 = &GPNL_COLUMN_19

  ! Rounding Always Down
    let #COLUMN_19 = trunc(#COLUMN_19, #precision)
    print #COLUMN_19 (,80) edit 999,999,999
  end-if 




  if #Jaar >= 2013
    print 'Werkgeversheffing Zorgverzekeringswet' (+2,10)
    print $eur (,79)
    print &GPNL_ZVW_CT_EE_1E (,80) edit 999,999,999
  end-if

  print 'Code premie volksverzekeringen' (+2,10)
  print &GPNL_TAX_EXCEPTION (,100)


  if (#Jaar < 2013) or (#Jaar >= 2013 and ($flag_tax_credit_2013 = 'Y' OR $flag_tax_credit_2013 = 'y'))

    print 'Code heffingskorting / met ingang van' (+2,10)
    if &GPNL_TAX_CREDITS = 'Y'
      print 'J' (,100)
    else
      print 'N' (,100)
    end-if
  
    if $EETAXCREDIT.EFFDT < $BEGIN_DT 
      print $BEGIN_DT (,110)
    else
      print $EETAXCREDIT.EFFDT (,110)
    end-if
  end-if  



  print 'Auto / Van de Zaak' (+2,10) 
  if &GPNL_Y_N = 'Y' or &GPNL_TRAVEL_DATA='01'
    print 'J' (,100)
  else
    print 'N' (,100)
  end-if

  print '' (+1,10)

end-procedure

!***********************************************************************
!  Print-Footer
!***********************************************************************
begin-procedure Print-Footer

  let $sql-statement = 'gpnlyee,Select,Print-Footer (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
TXR.DESCR &DESCR
  let $DESCR = &DESCR
  let $flag_DESCR = 'Y'
TXR.PIN_NUM &PIN_NUM
  let #PIN_NUM = &PIN_NUM
GP.PIN_CODE &GP_PIN_CODE
  let $PIN_CODE = &GP_PIN_CODE
FROM PS_GPNL_TXR_DTL TXR, PS_GP_PIN GP
WHERE (TXR.COMPANY = &COMPANY
AND TXR.SEQNUM = &SEQNUM)
AND TXR.PIN_NUM = GP.PIN_NUM
END-SELECT



  let $sql-statement = 'gpnlyee,Select,Print-Footer (2)'
BEGIN-SELECT ON-ERROR = SQL-Error
DESCR &DESCRLNG
  let $DESCR = &DESCRLNG
FROM PS_GPNL_TXR_DT_LNG
WHERE COMPANY = &COMPANY
AND SEQNUM = &SEQNUM
AND LANGUAGE_CD = $language_cd
END-SELECT


  print $DESCR (+2,10)

  if $PIN_CODE = 'SOC AC AFD JTHB NLD' 
    print $eur (,79)
  end-if

  print &CALC_RSLT_VAL (,80) edit 999,999,999

end-procedure

!***********************************************************************
!  Print-Page
!***********************************************************************
begin-procedure Print-Page

  let $CompDescr = ''
  let $CompAddress = ''
  let $CompPostal = ''
  let $Company = &COMPANY

  let $sql-statement = 'gpnlyee,Select,Print-Page (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
ADCOMP.EFFDT
   let $Company-Effdt = &ADCOMP.EFFDT
ADCOMP.DESCR
   do Get_Related_COMPANY_TBL($Company,$Company-Effdt)
   let $CompDescr =  rtrim($COMPANY_TBL-DESCR, ' ')
   if $CompDescr = ''
      let $CompDescr =  rtrim(&ADCOMP.DESCR,' ')
   end-if
ADCOMP.ADDRESS1
ADCOMP.ADDRESS2
ADCOMP.ADDRESS3
ADCOMP.ADDRESS4
ADCOMP.CITY
ADCOMP.NUM1
ADCOMP.NUM2
ADCOMP.POSTAL

  let $CompAddress = rtrim(ltrim(rtrim(&ADCOMP.ADDRESS1, ' ')
                     || ' ' || rtrim(&ADCOMP.ADDRESS2, ' ')
                     || ' ' || rtrim(&ADCOMP.ADDRESS3, ' ')
                     || ' ' || rtrim(&ADCOMP.ADDRESS4, ' ')
                     || ' ' || rtrim(&ADCOMP.NUM1, ' ')
                     || ' ' || rtrim(&ADCOMP.NUM2, ' '), ' '), ' ')
  let $CompPostal =  rtrim(&ADCOMP.POSTAL, ' ')
                     || ' ' || rtrim(&ADCOMP.CITY, ' ')

FROM PS_COMPANY_TBL ADCOMP
WHERE ADCOMP.COMPANY = &COMPANY
AND ADCOMP.EFFDT = (
  SELECT MAX(EFFDT)
  FROM PS_COMPANY_TBL B
  WHERE B.COMPANY = ADCOMP.COMPANY
  AND B.EFFDT <= {DATETIMEIN-PREFIX}&END_DT{DATETIMEIN-SUFFIX}
)
END-SELECT

  let $EmplAddress = ''
  let $EmplPostal = ''

  let $sql-statement = 'gpnlyee,Select,Print-Page (2)'
BEGIN-SELECT ON-ERROR = SQL-Error
ADEMP.ADDRESS1
ADEMP.ADDRESS2
ADEMP.ADDRESS3
ADEMP.ADDRESS4
ADEMP.CITY
ADEMP.NUM1
ADEMP.NUM2
ADEMP.POSTAL

  let $EmplPostal =  rtrim(&ADEMP.POSTAL, ' ') || ' ' || rtrim(&ADEMP.CITY, ' ')
  let $EmplAddress = rtrim(ltrim(rtrim(&ADEMP.ADDRESS1, ' ')
                     || ' ' || rtrim(&ADEMP.ADDRESS2, ' ')
                     || ' ' || rtrim(&ADEMP.ADDRESS3, ' ')
                     || ' ' || rtrim(&ADEMP.ADDRESS4, ' ')
                     || ' ' || rtrim(&ADEMP.NUM1, ' ')
                     || ' ' || rtrim(&ADEMP.NUM2, ' '), ' '), ' ')

FROM PS_ADDRESSES ADEMP
WHERE ADEMP.EMPLID = &EMPLID
AND ADEMP.EFF_STATUS = 'A'
AND ((ADEMP.ADDRESS_TYPE = 'MAIL'
    AND ADEMP.EFFDT = (
      select MAX(EFFDT)
      FROM PS_ADDRESSES B
      WHERE B.EMPLID = ADEMP.EMPLID
      AND B.ADDRESS_TYPE = ADEMP.ADDRESS_TYPE
      AND B.EFFDT <= $AsOfToday))
  OR (ADEMP.ADDRESS_TYPE = 'HOME'
    AND ADEMP.EFFDT = (
      select MAX(EFFDT)
      FROM PS_ADDRESSES B
      WHERE B.EMPLID = ADEMP.EMPLID
      AND B.ADDRESS_TYPE = ADEMP.ADDRESS_TYPE
      AND B.EFFDT <= $AsOfToday)
    AND NOT EXISTS( 
      SELECT 'X' 
      FROM PS_ADDRESSES B 
      WHERE B.EMPLID = ADEMP.EMPLID 
      AND B.ADDRESS_TYPE = 'MAIL' 
      AND B.EFFDT = (
        select MAX(EFFDT)
        FROM PS_ADDRESSES BB
        WHERE BB.EMPLID = B.EMPLID
        AND BB.ADDRESS_TYPE = B.ADDRESS_TYPE
        AND BB.EFFDT <= $AsOfToday) 
      AND B.EFF_STATUS = 'A')))
END-SELECT

  let $sql-statement = 'gpnlyee,Select,Print-Page (2)'
BEGIN-SELECT ON-ERROR = SQL-Error
{DATETIMEOUT-PREFIX}LAST_HIRE_DT{DATETIMEOUT-SUFFIX}     &HIRE_DT
{DATETIMEOUT-PREFIX}TERMINATION_DT{DATETIMEOUT-SUFFIX}     &TERMINATION_DT

  Do Format-DateTime(&HIRE_DT, $HIRE_DT, {DEFDMY},'','')
  Do Format-DateTime(&TERMINATION_DT, $TERMINATION_DT, {DEFDMY},'','')

FROM PS_PER_ORG_ASGN_VW
WHERE EMPLID = &EMPLID
AND EMPL_RCD = &EMPL_RCD
END-SELECT

  let $sql-statement = 'gpnlyee,Select,Print-Page (3)'
BEGIN-SELECT ON-ERROR = SQL-Error
{DATETIMEOUT-PREFIX}MIN(EETAXCREDIT.EFFDT){DATETIMEOUT-SUFFIX}     &EETAXCREDIT.EFFDT

  Do Format-DateTime(&EETAXCREDIT.EFFDT, $EETAXCREDIT.EFFDT, {DEFDMY},'','')
  if $EETAXCREDIT.EFFDT = ''
     let $EETAXCREDIT.EFFDT = $HIRE_DT
  end-if
  let $EETAXCREDIT.EFFDT = $EETAXCREDIT.EFFDT

FROM PS_GPNL_EE_TAX EETAXCREDIT



WHERE EETAXCREDIT.EMPLID = &EMPLID
AND EETAXCREDIT.EMPL_RCD = &EMPL_RCD
AND EETAXCREDIT.GPNL_TAX_CREDITS = &GPNL_TAX_CREDITS
AND EETAXCREDIT.EFFDT <= {DATETIMEIN-PREFIX}&END_DT{DATETIMEIN-SUFFIX}
AND (EETAXCREDIT.EFFDT > (
   SELECT MAX(B.EFFDT)
   FROM PS_GPNL_EE_TAX B
   WHERE B.EMPLID = EETAXCREDIT.EMPLID
   AND B.EMPL_RCD = EETAXCREDIT.EMPL_RCD
   AND B.GPNL_TAX_CREDITS <> &GPNL_TAX_CREDITS
   AND B.EFFDT <= {DATETIMEIN-PREFIX}&END_DT{DATETIMEIN-SUFFIX}
)
OR NOT EXISTS (
   SELECT 'X'
   FROM PS_GPNL_EE_TAX B
   WHERE B.EMPLID = EETAXCREDIT.EMPLID
   AND B.EMPL_RCD = EETAXCREDIT.EMPL_RCD
   AND B.GPNL_TAX_CREDITS <> &GPNL_TAX_CREDITS
   AND B.EFFDT <= {DATETIMEIN-PREFIX}&END_DT{DATETIMEIN-SUFFIX}
))
END-SELECT

  do Print-Header

  let $flag_DESCR = ''
  let $PIN_CODE = ''
  let #PIN_NUM = ''
  let $sql-statement = 'gpnlyee,Select,Print-Page (4)'
BEGIN-SELECT ON-ERROR = SQL-Error
SEQNUM
CALC_RSLT_VAL
  do Print-Footer

FROM PS_GPNL_YEE2_TMP
WHERE JOBINSTANCE = &INSTANCE
AND EMPLID = &EMPLID
AND EMPL_RCD = &EMPL_RCD
AND COMPANY = &COMPANY
ORDER BY SEQNUM
END-SELECT

  if ($flag_DESCR = '' or ( $flag_DESCR = 'Y' and $PIN_CODE <> 'SOC AC AFD JTHB NLD')) and #Jaar >= 2013


BEGIN-SELECT ON-ERROR = SQL-Error

TXR1.DESCR &TXR1_DESCR
TXR1.PIN_NUM &TXR1_PIN_NUM
VW1.PIN_NM &VW1_PIN_NM
  let $VW1_PIN_NM = &VW1_PIN_NM

   if $VW1_PIN_NM = 'SOC AC AFD JTHB'
     print &TXR1_DESCR (+2,10)
     print $eur (,79)
     print 0 (,80) edit 999,999,999
   end-if

FROM PS_GPNL_TXR_DTL TXR1 , PS_GP_PIN_NM_VW VW1
WHERE TXR1.PIN_NUM = VW1.PIN_NUM
AND COMPANY = &COMPANY

END-SELECT


  end-if

  print 'Deze jaaropgaaf wordt eenmalig verstrekt.' (+10,10)

  NEW-PAGE

end-procedure

!************************************************************************
!End of the SQR statements                                              *
!************************************************************************
#include 'stdapi.sqc'    !Routines to update run status
#include 'readmsgc.sqc'  !Read the Message Catalog Table
#Include 'reset1.sqc'    !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#Include 'getprimj.sqc'  !Routines for selecting EE's primary job
