!************************************************************************
!  STSU020:  Stock Option
!************************************************************************                                                                      !
!
!                                                                 
!   This software and related documentation are provided under a  
!   license agreement containing restrictions on use and          
!   disclosure and are protected by intellectual property         
!   laws. Except as expressly permitted in your license agreement 
!   or allowed by law, you may not use, copy, reproduce,          
!   translate, broadcast, modify, license, transmit, distribute,  
!   exhibit, perform, publish or display any part, in any form or 
!   by any means. Reverse engineering, disassembly, or            
!   decompilation of this software, unless required by law for    
!   interoperability, is prohibited.                              
!   The information contained herein is subject to change without 
!   notice and is not warranted to be error-free. If you find any 
!   errors, please report them to us in writing.                  
!                                                                 
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.       
!   All Rights Reserved.                                          
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2013/01/18:02:57:18                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!
!************************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
   #include 'ptpsp125.sqc'  !Printer and page-size init
end-setup

#define  col2    5
#define  col3    8
#define  col4    10
#define  col5    40
#define  col6    31
#define  col7    75
#define  col8    100
#define  col9    26
#define  col10   39
#define  col11   52
#define  col12   68
#define  col13   84
#define  col14   102


!************************************************************************
begin-program
!************************************************************************

  do Init-DateTime         !procedure in datetime.sqc
  do Init-Number           !procedure in number.sqc
  do Get-Current-DateTime  !procedure in currdttm.sqc
  do Init-Report           !procedure in SQR

  let $timebegan =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Began: '  $timebegan  ' '

  do Process-Main          !does all report processing in SQR
  do Reset                 !procedure in reset.sqc
  do Stdapi-term           !procedure in stdapi.sqc

  let $timeEnded =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Ended: '  $timeEnded  ' '

end-program

!************************************************************************
begin-procedure Init-Report
!************************************************************************

  do Stdapi-Init

  let     $ReportID     =   'STSU020'

  do Get-Report-Language

  if $prcs_process_instance = ''
     do Prompts             !Prompt user

  else
     do Get-SQR-Parms
     do Get-Values
  end-if

  show    'FLOW: Init-Report'
  show    'Report Title: ' $REPORTTITLE

end-procedure

!******************************************************************************
begin-procedure Prompts
!******************************************************************************

!-----------------------------------------------------------------------------!
! Procedure: Prompts                                                          !
! Descr:     Prompts for all input parameters in the event the program is run !
!            directly from SQR.  In normal use, this should not happen.       !
!-----------------------------------------------------------------------------!

end-procedure

!************************************************************************
begin-procedure Get-Values
!************************************************************************

end-procedure

!************************************************************************
begin-procedure Report-Translation
!************************************************************************

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!

  do Init_Report_Translation ('STOCK',$language_cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK','STOCK_PLAN',         $STOCK_PLAN,         #DW)
  do Get_Field_Information ('STOCK','STOCK_PLAN_TYPE',    $STOCK_PLAN_TYPE,    #DW)
  do Get_Field_Information ('STOCK','STOCK_ID',           $STOCK_ID,           #DW)
  do Get_Field_Information ('STOCK','SHARES',             $SHARES,             #DW)
  do Get_Field_Information ('STOCK','FMV_MTHD',           $FMV_MTHD,           #DW)
  do Get_Field_Information ('STOCK','GRANT',              $GRANT,              #DW)
  do Get_Field_Information ('STOCK','EXERCISE',           $EXERCISE,           #DW)
  do Get_Field_Information ('STOCK','RELEASE',            $RELEASE,            #DW)
  do Get_Field_Information ('STOCK','REPURCHASE',         $REPURCHASE,         #DW)
  do Get_Field_Information ('STOCK','CANCELLATIONS',      $CANCELLATIONS,      #DW)
  do Get_Field_Information ('STOCK','EXPIRATIONS',        $EXPIRATIONS,        #DW)

  do Get_Field_Information ('STSU020','STSU020',            $REPORTTITLE,        #DW)
  do Get_Field_Information ('STSU020','EFFECTIVE_DT',       $EFFECTIVE_DT,       #DW)
  do Get_Field_Information ('STSU020','OPTION_TYPE_ALLW',   $OPTION_TYPE_ALLW,   #DW)
  do Get_Field_Information ('STSU020','DEFINITION',         $DEFINITION,         #DW)
  do Get_Field_Information ('STSU020','PAYMNT_INC_MTHD',    $PAYMNT_INC_MTHD,    #DW)
  do Get_Field_Information ('STSU020','TAXES',              $TAXES,              #DW)
  do Get_Field_Information ('STSU020','INCOME_MTHD',        $INCOME_MTHD,        #DW)
  do Get_Field_Information ('STSU020','SHARE_MTHDS',        $SHARE_MTHDS,        #DW)
  do Get_Field_Information ('STSU020','FRACTION_SHARE_RLE', $FRACTION_SHARE_RLE, #DW)
  do Get_Field_Information ('STSU020','OPTIONEE_SHARE',     $OPTIONEE_SHARE,     #DW)
  do Get_Field_Information ('STSU020','NON_TRADE_DAY_RLE',  $NON_TRADE_DAY_RLE,  #DW)
  do Get_Field_Information ('STSU020','OPTION_PARMS',       $OPTION_PARMS,       #DW)
  do Get_Field_Information ('STSU020','ALLOW_NQ',           $ALLOW_NQ,           #DW)
  do Get_Field_Information ('STSU020','ALLOW_ISO',          $ALLOW_ISO,          #DW)
  do Get_Field_Information ('STSU020','ALLOW_RSA',          $ALLOW_RSA,          #DW)
  do Get_Field_Information ('STSU020','ALLOW_NSAR',         $ALLOW_NSAR,         #DW)
  do Get_Field_Information ('STSU020','ALLOW_ISAR',         $ALLOW_ISAR,         #DW)
  do Get_Field_Information ('STSU020','TRANSFER_ALLOW',     $TRANSFER_ALLOW,     #DW)
  do Get_Field_Information ('STSU020','EXER_BFR_VEST',      $EXER_BFR_VEST,      #DW)
  do Get_Field_Information ('STSU020','REPURCH_COST_MTHD',  $REPURCH_COST_MTHD,  #DW)
  do Get_Field_Information ('STSU020','DAYS_REPURCH',       $DAYS_REPURCH,       #DW)
  do Get_Field_Information ('STSU020','CASH',               $CASH,               #DW)
  do Get_Field_Information ('STSU020','LOAN',               $LOAN,               #DW)
  do Get_Field_Information ('STSU020','PAY_DEDCT',          $PAY_DEDCT,          #DW)
  do Get_Field_Information ('STSU020','SAME_DAY_SALE',      $SAME_DAY_SALE,      #DW)
  do Get_Field_Information ('STSU020','SELL_COVER',         $SELL_COVER,         #DW)
  do Get_Field_Information ('STSU020','SWAP_SHARE',         $SWAP_SHARE,         #DW)
  do Get_Field_Information ('STSU020','SWAP_TAXES',         $SWAP_TAXES,         #DW)
  do Get_Field_Information ('STSU020','SWAP_ROUNDING_RULE', $SWAP_ROUNDING_RULE, #DW)
  do Get_Field_Information ('STSU020','NQ_SALE',            $NQ_SALE,            #DW)
  do Get_Field_Information ('STSU020','ISO_DD_INC_MTHD',    $ISO_DD_INC_MTHD,    #DW)
  do Get_Field_Information ('STSU020','RSA_SALE',           $RSA_SALE,           #DW)
  do Get_Field_Information ('STSU020','SAR_EXERCISE',       $SAR_EXERCISE,       #DW)
  do Get_Field_Information ('STSU020','SWAPS',              $SWAPS,              #DW)
  do Get_Field_Information ('STSU020','DEC_PLACES',         $DEC_PLACES,         #DW)
  do Get_Field_Information ('STSU020','ROUNDING_RULE',      $ROUNDING_RULE,      #DW)
  do Get_Field_Information ('STSU020','GRANT_SHARES_LIM',   $GRANT_SHARES_LIM,   #DW)
  do Get_Field_Information ('STSU020','SWAP',               $SWAP,               #DW)
  do Get_Field_Information ('STSU020','HOLIDAY',            $HOLIDAY,            #DW)
  do Get_Field_Information ('STSU020','WEEKEND',            $WEEKEND,            #DW)
  do Get_Field_Information ('STSU020','TYPE',               $TYPE,               #DW)
  do Get_Field_Information ('STSU020','PARM_ID',            $PARM_ID,            #DW)
  do Get_Field_Information ('STSU020','EXPIRE_BASIS',       $EXPIRE_BASIS,       #DW)
  do Get_Field_Information ('STSU020','OPTION_LIFE_MM',     $OPTION_LIFE_MM,     #DW)
  do Get_Field_Information ('STSU020','DFLT_VEST_ID',       $DFLT_VEST_ID,       #DW)
  do Get_Field_Information ('STSU020','AGREEMENT_ID',       $AGREEMENT_ID,       #DW)
  do Get_Field_Information ('STSU020','DFLT_PARMS',         $DFLT_PARMS,         #DW)
  do Get_Field_Information ('STSU020','GOV_BODY',           $GOV_BODY,           #DW)
  do Get_Field_Information ('STSU020','TREASURY_ID',        $TREAS_ID_LBL,       #DW)
  do Get_Field_Information ('STSU020','REL_MTHD_TRADE',     $REL_MTHD_TRADE,     #DW)
  do Get_Field_Information ('STSU020','EXERCISES',          $EXERCISES,          #DW)
  do Get_Field_Information ('STSU020','RELEASES',           $RELEASES,           #DW)
    
end-procedure

!************************************************************************
begin-heading 3
!************************************************************************

#include 'stdhdgtr.sqc'

end-heading

!************************************************************************
begin-procedure Process-Main
!************************************************************************

!----------------------------------------------------------------------!
! Procedure:  Process-Main                                             !
! Descr:      This is where all required data is selected              !
!----------------------------------------------------------------------!

  display 'FLOW: Process-Main'

begin-Select

C.STOCK_ID                 
C.STOCK_PLAN               
C.EFFDT                    
C.STOCK_PLAN_TYPE
A.DESCR
B.DESCRSHORT
C.DEC_PLACES
C.ST_ROUNDING_RULE
C.EXER_BFR_VEST
C.REPURCH_COST_MTHD
C.REPURCHASE_DAYS
C.TRANSFER_ALLOW
C.NQ_ORD_INC_MTHD
C.ISO_DD_INC_MTHD
C.RSA_INC_MTHD
C.EXERCISE_MTHD_CASH
C.EXERCISE_MTHD_SDS
C.EXERCISE_MTHD_STC
C.EXERCISE_MTHD_LOAN
C.EXERCISE_MTHD_SWAP
C.TRADE_FOR_TAXES
C.RELEASE_MTHD_CASH
C.RELEASE_MTHD_LOAN
C.RELEASE_MTHD_SDS
C.RELEASE_MTHD_STC
C.RELEASE_MTHD_TRADE
C.SWAP_ROUNDING_RULE
C.GRANT_SHARES_LIM
C.CANCEL_SHARES_MTHD
C.EXPIRED_SHARE_MTHD
C.SAR_EXERCISE_MTHD
C.SWAP_SHARES_MTHD
C.REPURCH_SHARE_MTHD
C.GRANT_FMV_MTHD
C.EXERCISE_FMV_MTHD
C.RELEASE_FMV_MTHD
C.REPURCH_FMV_MTHD
C.SWAP_FMV_MTHD
C.FMV_HOLIDAY_RULE
C.FMV_WEEKEND_RULE
C.ST_OPTION_NQ
C.ST_OPTION_ISO
C.ST_OPTION_RSA
C.ST_OPTION_NSAR
C.ST_OPTION_ISAR
C.ST_GOVERN_CD
C.ST_TREASURY_ID

  do Print-Detail
  do Select-LowerDetail

  new-page

from   PS_STOCK_PLAN_TBL  A,
       PS_STOCK_TBL       B,
       PS_ST_OPTION_PLAN  C
where  A.STOCK_ID         = B.STOCK_ID
  and  A.STOCK_ID         = C.STOCK_ID
  and  A.STOCK_PLAN       = C.STOCK_PLAN
  and  C.STOCK_PLAN_TYPE  = 'O'
order by  1,2,3

end-Select

end-procedure

!************************************************************************
begin-procedure Select-LowerDetail
!************************************************************************

begin-Select

M.OPTION_PARMS_ID

 from  PS_ST_OPTION_PARMS  M
where  M.STOCK_ID          =  &C.STOCK_ID
  and  M.STOCK_PLAN_TYPE   =  &C.STOCK_PLAN_TYPE
  and  M.STOCK_PLAN        =  &C.STOCK_PLAN
  and  M.EFFDT             =  &C.EFFDT

end-Select

 if rtrim(&M.OPTION_PARMS_ID,' ') <> ''
    do Print-heading
 end-if


begin-Select

D.STOCK_ID
D.STOCK_PLAN_TYPE
D.STOCK_PLAN
D.EFFDT
D.OPTION_PARMS_ID
D.ST_OPTION_TYPE
D.DFLT_OPTION_PARMS
D.EXPIRE_BASIS_CD
D.OPTION_LIFE_MM
D.VEST_SCHED_ID
D.AGREEMENT_ID
D.DESCR100

  do Print-LowerDetail

 from  PS_ST_OPTION_PARMS  D
where  D.STOCK_ID          =  &C.STOCK_ID
  and  D.STOCK_PLAN_TYPE   =  &C.STOCK_PLAN_TYPE
  and  D.STOCK_PLAN        =  &C.STOCK_PLAN
  and  D.EFFDT             =  &C.EFFDT

end-Select

end-procedure

!***********************************************************************
begin-procedure Print-Detail
!***********************************************************************

  print $STOCK_ID               (+2,1,08)
  print ':'                     (,,1)
  print &C.STOCK_ID             (0,18,10)
  print &B.DESCRSHORT           (0,+5,10)

  print $STOCK_PLAN             (+1,1,13)
  print ':'                     (,,1)
  print &C.STOCK_PLAN           (0,18,10)
  print &A.DESCR                (0,+5,30)

  do Format-DateTime(&C.EFFDT, $EFFDT1, {DEFYMD}, '', '')

  print $EFFECTIVE_DT           (+1,01,15)
  print ':'                     (,,1)  
  print $EFFDT1                 (0,18,10)

  print $OPTION_TYPE_ALLW       (+3,{col2},20)       !Option Types Allowed

  print $ALLOW_NQ               (+1,{col4},09)
  print ':'                     (,,1)
  print &C.ST_OPTION_NQ         (0,25,01)

  print $GOV_BODY               (0,{col7},14)
  print ':'                     (,,1)
  print &C.ST_GOVERN_CD         (0,103,04)

  print $ALLOW_ISO              (+1,{col4},10)
  print ':'                     (,,1)
  print &C.ST_OPTION_ISO        (0,25,01)

  do Get-Data

  print $REPURCH_COST_MTHD      (0,{col7},23)
  print ':'                     (,,1)
  print  $RepurchCostMthd       (0,103,10)

  print $ALLOW_RSA              (+1,{col4},10)
  print ':'                     (,,1)
  print &C.ST_OPTION_RSA        (0,25,01)

  print $DAYS_REPURCH           (0,{col7},18)
  print ':'                     (,,1)
  print &C.REPURCHASE_DAYS      (0,103,03)

  print $ALLOW_NSAR             (+1,{col4},13)
  print ':'                     (,,1)
  print &C.ST_OPTION_NSAR       (0,25,01)

  print $EXER_BFR_VEST          (0,{col7},27)
  print ':'                     (,,1)
  print &C.EXER_BFR_VEST        (0,103,01)

  print $ALLOW_ISAR             (+1,{col4},14)
  print ':'                     (,,1)
  print &C.ST_OPTION_ISAR       (0,25,01)

  print $TRANSFER_ALLOW         (0,{col7},27)
  print ':'                     (,,1)
  print &C.TRANSFER_ALLOW       (0,103,01)

  print $PAYMNT_INC_MTHD        (+2,{col2},22)      !Payment/Income Methods
  print $EXERCISES              (+2,{col4},09)      !Shares
  print $RELEASES               (0,{col7},08)       !Taxes
 
  print $CASH                   (+2,{col4},05)
  print ':'                     (,,1)
  print &C.EXERCISE_MTHD_CASH   (0,+1,01)

  print $SAME_DAY_SALE          (0,{col5},14)
  print ':'                     (,,1)
  print &C.EXERCISE_MTHD_SDS    (0,58,01)

  print $CASH                   (0,{col7},05)
  print ':'                     (,,1)
  print &C.RELEASE_MTHD_CASH    (0,+1,1)

  print $SAME_DAY_SALE          (0,{col8},14)
  print ':'                     (,,1)
  print &C.RELEASE_MTHD_SDS     (0,117,01)

  print $LOAN                   (+1,{col4},05)
  print ':'                     (,,1)
  print &C.EXERCISE_MTHD_LOAN   (0,+1,01)

  print $SELL_COVER             (0,{col5},14)
  print ':'                     (,,1)
  print &C.EXERCISE_MTHD_STC    (0,58,01)

  print $LOAN                   (0,{col7},05)
  print ':'                     (,,1)
  print &C.RELEASE_MTHD_LOAN    (0,+1,01)

  print $SELL_COVER             (0,{col8},14)
  print ':'                     (,,1)
  print &C.RELEASE_MTHD_STC          (0,117,01)
  
  print $SWAP_SHARE             (+1,{col4},14)
  print ':'                     (,,1)
  print &C.EXERCISE_MTHD_SWAP       (0,+1,01)

  print $REL_MTHD_TRADE         (0,{col7},5)
  print ':'                     (,,1)
  print &C.RELEASE_MTHD_TRADE          (0,+1,01)

  print $SWAP_TAXES             (+2,{col4},18)
  print ':'                     (,,1)
  print &C.TRADE_FOR_TAXES      (0,+1,01)

  print $SWAP_ROUNDING_RULE     (+2,{col4},18)
  print ':'                     (,,1)
  print $RoundingRule           (0,+1,10)

  print $INCOME_MTHD            (+2,{col2},14)     !Income Methods

  print $NQ_SALE                (+1,{col4},07)
  print ':'                     (,,1)
  print $ORD_INC_MTHD           (0,23,10)

  print $ISO_DD_INC_MTHD        (+1,{col4},12)
  print ':'                     (,,1)
  print $DD_INC_MTHD            (0,23,10)

  print $RSA_SALE               (+1,{col4},08)
  print ':'                     (,,1)
  print $RsaIncMthd             (0,23,10)

  print $SHARE_MTHDS            (+2,{col2},13)     !Share Methods

  print $CANCELLATIONS          (+1,{col4},13)
  print ':'                     (,,1)
  print $CancelSharesMthd       (0,25,10)

  print $EXPIRATIONS            (+1,{col4},11)
  print ':'                     (,,1)
  print $ExpiredShareMthd       (0,25,10)

  print $SAR_EXERCISE           (+1,{col4},14)
  print ':'                     (,,1)
  print $SarExerciseMthd        (0,25,10)

  print $REPURCHASE             (+1,{col4},10)
  print ':'                     (,,1)
  print $RepurchShareMthd       (0,25,10)

  print $SWAPS                  (+1,{col4},05)
  print ':'                     (,,1)
  print $SwapSharesMthd         (0,25,10)

  print $FRACTION_SHARE_RLE     (+2,{col2},21)    !Fractional Share Rules

  print $DEC_PLACES             (+1,{col4},15)
  print ':'                     (,,1)
  print &C.DEC_PLACES           (0,26,03)

  print $ROUNDING_RULE          (+1,{col4},14)
  print ':'                     (,,1)
  print $STRoundingRule         (0,26,10)

  print $OPTIONEE_SHARE         (+2,{col2},14)    !Optionee Share

  print $GRANT_SHARES_LIM       (+1,{col4},06)
  print ':'                     (,,1)
  
  do Format-Number(&C.GRANT_SHARES_LIM, $out, '9,999,999')
  let $out = ltrim($out,' ')  
  print $out                    (0,+6,09)
  
  print $TREAS_ID_LBL           (+1,{col4},11)
  print ':'                     (,,1)
  print &C.ST_TREASURY_ID       (0,+1,10)

  print $FMV_MTHD               (+2,{col2},10)    !FMV Method

  do Get-Descr

  print $GRANT                  (+1,{col4},05)
  print ':'                     (,,1)
  print &D.DESCRSHORT           (0,22,10)

  print $EXERCISE               (+1,{col4},08)
  print ':'                     (,,1)
  print &F.DESCRSHORT           (0,22,10)

  print $RELEASE                (+1,{col4},07)
  print ':'                     (,,1)
  print &H.DESCRSHORT           (0,22,10)

  print $REPURCHASE             (+1,{col4},10)
  print ':'                     (,,1)
  print &J.DESCRSHORT           (0,22,10)

  print $SWAP                   (+1,{col4},04)
  print ':'                     (,,1)
  print &L.DESCRSHORT           (0,22,10)

  print $NON_TRADE_DAY_RLE      (+2,{col2},21)    !NON Trading Day Rules

  print $HOLIDAY                (+1,{col4},07)
  print ':'                     (,,1)
  print $FMVHolidayRule         (0,+1,10)

  print $WEEKEND                (+1,{col4},07)
  print ':'                     (,,1)
  print $FMVWeekendRule         (0,+1,10)

end-procedure

!************************************************************************
begin-procedure Print-heading
!************************************************************************

  print $OPTION_PARMS            (+2,{col2},17)
  print $PARM_ID                 (+2,{col4},12)
  print $TYPE                    (0,+4,4)
  print $DFLT_PARMS              (0,+4,13)
  print $EXPIRE_BASIS            (0,+4,12)
  print $OPTION_LIFE_MM          (0,+4,13)
  print $DFLT_VEST_ID            (0,+4,15)
  print $AGREEMENT_ID            (0,+3,12)

end-procedure

!************************************************************************
begin-procedure Print-LowerDetail
!************************************************************************

 print &D.OPTION_PARMS_ID       (+1,{col4},10)

 do Get-Data

 print $STOptionType            (0,{col9},10)
 print &D.DFLT_OPTION_PARMS     (0,{col10},01)
 print $STExpireBasis           (0,{col11},10)

 print &D.OPTION_LIFE_MM        (0,{col12},04)

 do Get-Descr

 print &N.DESCRSHORT            (0,{col13},10)
 print &O.DESCRSHORT            (0,{col14},10)

end-procedure

!************************************************************************
begin-procedure Get-Descr
!************************************************************************

begin-Select

O.DESCRSHORT

from   PS_STOCK_AGREEMENT  O
where  O.AGREEMENT_ID      =  &D.AGREEMENT_ID
and    O.STOCK_ID          =  &D.STOCK_ID
and    O.AGREEMENT_TYPE   IN ('O', 'B')

end-Select


begin-Select

N.DESCRSHORT

from  PS_ST_VEST_SCHED N
where N.VEST_SCHED_ID = &D.VEST_SCHED_ID


end-Select


begin-Select

D.DESCRSHORT

 from  PS_ST_FMV_MTHD_TBL  D
where  D.FMV_METHOD        =  &C.GRANT_FMV_MTHD
  and  D.EFFDT             =  (Select  MAX(E.EFFDT)
                                 from  PS_ST_FMV_MTHD_TBL  E
                                where  E.FMV_METHOD        =   D.FMV_METHOD
                                  and  E.EFFDT             <=  &C.EFFDT)

end-Select


begin-Select

F.DESCRSHORT

 from  PS_ST_FMV_MTHD_TBL    F
where  F.FMV_METHOD          =   &C.EXERCISE_FMV_MTHD
  and  F.EFFDT               =   (Select  MAX(G.EFFDT)
                                    from  PS_ST_FMV_MTHD_TBL  G
                                   where  G.FMV_METHOD        =    F.FMV_METHOD
                                     and  G.EFFDT            <=    &C.EFFDT)
end-Select



begin-Select

H.DESCRSHORT

 from  PS_ST_FMV_MTHD_TBL   H
where  H.FMV_METHOD         =  &C.RELEASE_FMV_MTHD
  and  H.EFFDT              =  (Select  MAX(I.EFFDT)
                                  from  PS_ST_FMV_MTHD_TBL  I
                                 where  I.FMV_METHOD    =   H.FMV_METHOD
                                   and  I.EFFDT         <=  &C.EFFDT)
end-Select



begin-Select

J.DESCRSHORT

 from  PS_ST_FMV_MTHD_TBL  J
where  J.FMV_METHOD        =   &C.REPURCH_FMV_MTHD
  and  J.EFFDT             =   (Select   MAX(K.EFFDT)
                                  from   PS_ST_FMV_MTHD_TBL  K
                                 where   K.FMV_METHOD        =  J.FMV_METHOD
                                   and   K.EFFDT            <=  &C.EFFDT)
end-Select


begin-Select

L.DESCRSHORT

 from  PS_ST_FMV_MTHD_TBL    L
where  L.FMV_METHOD          =  &C.SWAP_FMV_MTHD
  and  L.EFFDT               =  (Select  MAX(M.EFFDT)
                                   from  PS_ST_FMV_MTHD_TBL   M
                                  where  M.FMV_METHOD         =   L.FMV_METHOD
                                    and  M.EFFDT             <=   &C.EFFDT)
end-Select

end-procedure

!************************************************************************
begin-procedure Get-Data
!************************************************************************

!-------------------------------------------------------------------!
! Procedure:  Get-Data                                              !
! Descr:      This procedure gets the value of the specific field   !
!             from the Translate Table                              !
!-------------------------------------------------------------------!

  let $FieldName = 'REPURCH_COST_MTHD'
  let $FieldValue = &C.REPURCH_COST_MTHD

  do Read-Translate-Table

  let $RepurchCostMthd = RTRIM($XlatLongName,' ')


  let $FieldName = 'SWAP_ROUNDING_RULE'
  let $FieldValue = &C.SWAP_ROUNDING_RULE

  do Read-Translate-Table

  let $RoundingRule = RTRIM($XlatShortName,' ')


  let $FieldName = 'NQ_ORD_INC_MTHD'
  let $FieldValue = &C.NQ_ORD_INC_MTHD

  do Read-Translate-Table

  let $ORD_INC_MTHD = RTRIM($XlatShortName,' ')


  let $FieldName = 'ISO_DD_INC_MTHD'
  let $FieldValue = &C.ISO_DD_INC_MTHD

  do Read-Translate-Table

  let $DD_INC_MTHD = RTRIM($XlatShortName,' ')


  let $FieldName = 'RSA_INC_MTHD'
  let $FieldValue = &C.RSA_INC_MTHD

  do Read-Translate-Table

  let $RsaIncMthd = RTRIM($XlatShortName,' ')


  let $FieldName = 'CANCEL_SHARES_MTHD'
  let $FieldValue = &C.CANCEL_SHARES_MTHD

  do Read-Translate-Table

  let $CancelSharesMthd = RTRIM($XlatShortName,' ')


  let $FieldName = 'EXPIRED_SHARE_MTHD'
  let $FieldValue = &C.EXPIRED_SHARE_MTHD

  do Read-Translate-Table

  let $ExpiredShareMthd = RTRIM($XlatShortName,' ')


  let $FieldName = 'REPURCH_SHARE_MTHD'
  let $FieldValue = &C.REPURCH_SHARE_MTHD

  do Read-Translate-Table

  let $RepurchShareMthd = RTRIM($XlatShortName,' ')


  let $FieldName = 'SAR_EXERCISE_MTHD'
  let $FieldValue = &C.SAR_EXERCISE_MTHD

  do Read-Translate-Table

  let $SarExerciseMthd = RTRIM($XlatShortName,' ')


  let $FieldName = 'SWAP_SHARES_MTHD'
  let $FieldValue = &C.SWAP_SHARES_MTHD

  do Read-Translate-Table

  let $SwapSharesMthd = RTRIM($XlatShortName,' ')


  let $FieldName = 'ST_ROUNDING_RULE'
  let $FieldValue = &C.ST_ROUNDING_RULE

  do Read-Translate-Table

  let $STRoundingRule = RTRIM($XlatShortName,' ')


  let $FieldName = 'FMV_HOLIDAY_RULE'
  let $FieldValue = &C.FMV_HOLIDAY_RULE

  do Read-Translate-Table

  let $FMVHolidayRule = RTRIM($XlatShortName,' ')


  let $FieldName = 'FMV_WEEKEND_RULE'
  let $FieldValue = &C.FMV_WEEKEND_RULE

  do Read-Translate-Table

  let $FMVWeekendRule = RTRIM($XlatShortName,' ')


  let $FieldName = 'ST_OPTION_TYPE'
  let $FieldValue = &D.ST_OPTION_TYPE

  do Read-Translate-Table

  let $STOptionType = RTRIM($XlatShortName,' ')


  let $FieldName = 'EXPIRE_BASIS_CD'
  let $FieldValue = &D.EXPIRE_BASIS_CD

  do Read-Translate-Table

  let $STExpireBasis = RTRIM($XlatShortName,' ')

end-procedure

!************************************************************************
!  SQC Include Files
!************************************************************************

#include 'stdapi.sqc'
#include 'curdttim.sqc'  !Get-Current-Date-Time
#include 'datetime.sqc'  !Get-Date-Time
#include 'datemath.sqc'  !Date Math Routines
#include 'reset.sqc'     !Reset printer procedure
#include 'number.sqc'    !Routines to format numbers
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read the Translate Table for the desired values.
#include 'strunctl.sqc'  !Get run control parameter values
