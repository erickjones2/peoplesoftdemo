!**********************************************************************!
!  gprgstrc.sqc: Retrieve Run Control for the parameters of the        !
!                Global Payroll Result Register Report                 !
!**********************************************************************!
!                                                                      !
!                                                                      !
!                                                                      !
!                                                                      !
! This software and related documentation are provided under a         !
! license agreement containing restrictions on use and                 !
! disclosure and are protected by intellectual property                !
! laws. Except as expressly permitted in your license agreement        !
! or allowed by law, you may not use, copy, reproduce,                 !
! translate, broadcast, modify, license, transmit, distribute,         !
! exhibit, perform, publish or display any part, in any form or        !
! by any means. Reverse engineering, disassembly, or                   !
! decompilation of this software, unless required by law for           !
! interoperability, is prohibited.                                     !
! The information contained herein is subject to change without        !
! notice and is not warranted to be error-free. If you find any        !
! errors, please report them to us in writing.                         !
!                                                                      !
!                                                                      !
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              !
! All Rights Reserved.                                                 !
!**********************************************************************!
!                                                                      !
!          $Date:  2013/01/18:04:11:13                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

!***********************************************************************
!                                                                      *
!   NOTE - Throughout this report, debugw, debugy, and debugz flags    *
!          are used. debugw tracks the report execution/flow, debugy   *
!          tracks variable values, and debugz prevents the guide and   *
!          and detail tables from Report Data being deleted.           *
!          For information on how to use these flags for debugging,    *
!          refer to SQR documentation.                                 *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                                                                      *
! Select-Parameters                                                    *
!                                                                      *
!                                                                      *
! Description:  Selects level zero information off of run control.     *
!               Calls the appropriate sub-procedure, if necessary,     *
!               to string the selected paygroup or employee data.      *
!                                                                      *
!***********************************************************************

begin-procedure Select-Parameters


#ifdef debugw
    show 'Entering gprgstrc.SQC'
    show 'Inside procedure Select-Parameters'
#end-if

begin-SELECT

#ifdef debugw
    show 'Inside SELECT procedure Select-Parameters'
#end-if

LVL0.OPRID                    &LVL0.OPRID
LVL0.RUN_CNTL_ID              &LVL0.RUN_CNTL_ID
LVL0.CAL_RUN_ID               &LVL0.CAL_RUN_ID
LVL0.GP_RGST_RUN_TYPE         &LVL0.GP_RGST_RUN_TYPE
LVL0.GP_RGST_RPT_TYPE         &LVL0.GP_RGST_RPT_TYPE
LVL0.GP_RGST_PRD_TYPE         &LVL0.GP_RGST_PRD_TYPE
LVL0.DATE_FROM                &LVL0.DATE_FROM
LVL0.DATE_TO                  &LVL0.DATE_TO 
LVL0.GP_RGST_YEAR             &LVL0.GP_RGST_YEAR
LVL0.GP_RGST_QTR              &LVL0.GP_RGST_QTR
LVL0.GP_RGST_POPUL_TYPE       &LVL0.GP_RGST_POPUL_TYPE
LVL0.GB_GROUP_ID              &LVL0.GB_GROUP_ID
LVL0.VERSIONGBQDM             &LVL0.VERSIONGBQDM
LVL0.GB_EFFDT                 &LVL0.GB_EFFDT
LVL0.GB_REFINE_DATE           &LVL0.GB_REFINE_DATE
LVL0.GP_GENRPT_BLD_GRP        &LVL0.GP_GENRPT_BLD_GRP
LVL0.GROUP_LIST_ID            &LVL0.GROUP_LIST_ID
LVL0.GP_RGST_SRT_CALG         &LVL0.GP_RGST_SRT_CALG
LVL0.GP_RGST_SRT_COMP         &LVL0.GP_RGST_SRT_COMP
LVL0.GP_RGST_SRT_DEPTID       &LVL0.GP_RGST_SRT_DEPTID
LVL0.GP_RGST_SRT_ESTAB        &LVL0.GP_RGST_SRT_ESTAB
LVL0.GP_RGST_SRT_LOCN         &LVL0.GP_RGST_SRT_LOCN
LVL0.GP_RGST_SRT_PAYG         &LVL0.GP_RGST_SRT_PAYG
LVL0.GP_RGST_SRT_PYENT        &LVL0.GP_RGST_SRT_PYENT
LVL0.GP_RGST_SRT_RUNTYP       &LVL0.GP_RGST_SRT_RUNTYP
LVL0.GP_RGST_SRT_CURR         &LVL0.GP_RGST_SRT_CURR
LVL0.GP_RGST_SRT_EMPL         &LVL0.GP_RGST_SRT_EMPL
LVL0.COUNTRY                  &LVL0.COUNTRY
LVL0.GP_ELN_SET               &LVL0.GP_ELN_SET

    let $Oprid                = &LVL0.OPRID
    let $Run_Cntl_ID          = &LVL0.RUN_CNTL_ID
    let $Cal_Run_ID           = &LVL0.CAL_RUN_ID
    let $Rpt_Run_By           = RTRIM(LTRIM(&LVL0.GP_RGST_RUN_TYPE,' '),' ')
    let $Rpt_Type             = RTRIM(LTRIM(&LVL0.GP_RGST_RPT_TYPE,' '),' ')
    let $Prd_Type             = RTRIM(LTRIM(&LVL0.GP_RGST_PRD_TYPE,' '),' ')
    let $Pop_Method           = RTRIM(LTRIM(&LVL0.GP_RGST_POPUL_TYPE,' '),' ')
    let $HRGroup              = &LVL0.GB_GROUP_ID
    let $GrpDt                = datetostr(&LVL0.GB_EFFDT,DATE)
    let $Rebuild              = &LVL0.GP_GENRPT_BLD_GRP
    let $RefineDt             = datetostr(&LVL0.GB_REFINE_DATE,DATE)
    let $DateFrom             = &LVL0.DATE_FROM
    let $DateTo               = &LVL0.DATE_TO
    let $GPGroup              = &LVL0.GROUP_LIST_ID
    
    let #CalGrp_Sort          = &LVL0.GP_RGST_SRT_CALG
    let #PayEnt_Sort          = &LVL0.GP_RGST_SRT_PYENT
    let #PayGrp_Sort          = &LVL0.GP_RGST_SRT_PAYG
    let #Comp_Sort            = &LVL0.GP_RGST_SRT_COMP
    let #Dept_Sort            = &LVL0.GP_RGST_SRT_DEPTID
    let #Locn_Sort            = &LVL0.GP_RGST_SRT_LOCN
    let #Estab_Sort           = &LVL0.GP_RGST_SRT_ESTAB
    let #RunType_Sort         = &LVL0.GP_RGST_SRT_RUNTYP
    let #Curr_Sort            = &LVL0.GP_RGST_SRT_CURR
    let #Rpt_Year             = &LVL0.GP_RGST_YEAR
    let $Rpt_Qtr              = &LVL0.GP_RGST_QTR
    let $Empl_Sort            = &LVL0.GP_RGST_SRT_EMPL
    let $ELNCountry           = &LVL0.COUNTRY
    let $ELNSet               = rtrim(ltrim(&LVL0.GP_ELN_SET,' '),' ')
       
   
FROM PS_GP_RGST_RC LVL0
WHERE LVL0.OPRID        = $PRCS_OPRID
  AND LVL0.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
end-select

let $CntryFound = 'N'
!*************************************************************************
! Retrieve the country of the Report Data definition used                *
!*************************************************************************
begin-SELECT
RPTD.COUNTRY

   let $CntryFound = 'Y'

FROM PS_GP_RPT_TBL RPTD
WHERE RPTD.GP_RPT_ID = 'GP000001'
AND RPTD.COUNTRY = $ELNCountry
end-SELECT

if $CntryFound = 'N'
   let $RptCountry = 'ALL'
else
   let $RptCountry = $ELNCountry
end-if
   
let $date = datenow()
let $SortUpdated = 'N'

!*************************************************************************
!  If Currency is not included as a sort, add it as the high level sort  *
!*************************************************************************

if #Curr_Sort = 0
      and $Rpt_Type <> '10'
   let #Curr_Sort = 1
   let $SortUpdated = 'Y'
   if #CalGrp_Sort <> 0
      let #CalGrp_Sort = #CalGrp_Sort + 1
   end-if
   if #PayEnt_Sort <> 0
      let #PayEnt_Sort = #PayEnt_Sort + 1
   end-if
   if #PayGrp_Sort <> 0
      let #PayGrp_Sort = #PayGrp_Sort + 1
   end-if
   if #Comp_Sort <> 0
      let #Comp_Sort = #Comp_Sort + 1
   end-if
   if #Dept_Sort <> 0
      let #Dept_Sort = #Dept_Sort + 1
   end-if
   if #Estab_Sort <> 0
      let #Estab_Sort = #Estab_Sort + 1
   end-if
   if #Locn_Sort <> 0
      let #Locn_Sort = #locn_Sort + 1
   end-if
   if #RunType_Sort <> 0
      let #RunType_Sort = #RunType_Sort + 1
   end-if
end-if
   
show $RptStart_lbl noline
show ' ' $date
show $SubmitBy_lbl noline
show ' ' $PRCS_OPRID
show $RunCntrl_lbl noline
show ' ' $PRCS_RUN_CNTL_ID
show $Lang_lbl noline
show ' ' $curr_language_cd
show ' '

!***********************************************************************
! Set Calendar Header Parameters.  Print Pay Entity, Pay Group, and    *
! Run Type if not selected as a sort since they wont print anywhere    *
! else on the report.
!***********************************************************************
  
   let #Cal_pos = 0
   
   if #PayEnt_Sort = 0
      let #Cal_pos = #Cal_pos + 1
      let #PayEnt_Cal = #Cal_pos
   else
      let #PayEnt_Cal = 0
   end-if
   
   if #PayGrp_Sort = 0
      let #Cal_pos = #Cal_pos + 1
      let #PayGrp_Cal = #Cal_pos
   else
      let #PayGrp_Cal = 0
   end-if
   
   let #Cal_pos = #Cal_pos + 1
   let #CalId_Cal = #Cal_pos
     
   if #RunType_Sort = 0
      let #Cal_pos = #Cal_pos + 1
      let #RunType_Cal = #Cal_pos
   else
      let #RunType_Cal = 0
   end-if
     
   let #max_col_head =  round((#Cal_pos / 2),0)
   let #max_col_head = #max_col_head + 1
   
!***********************************************************************
!                                                                      *
! Read-Translate-Table reads in a field name and value, and returns    *
!   $XlatShortName and XlatLongName from XLATTABLE.                    *
!                                                                      *
!***********************************************************************

let $FieldName = 'GP_RGST_RUN_TYPE'
let $FieldValue = $Rpt_Run_By
do Read-Translate-Table
let $Rpt_Run_By_Descr = $XlatLongName

let $FieldName = 'GP_RGST_RPT_TYPE'
let $FieldValue = $Rpt_Type
do Read-Translate-Table
let $Rpt_Type_Descr = $XlatLongName

let $FieldName = 'GP_RGST_PRD_TYPE'
let $FieldValue = $Prd_Type
do Read-Translate-Table
let $Prd_Type_Descr = $XlatLongName

let $FieldName = 'GP_RGST_POPUL_TYPE'
let $FieldValue = $Pop_Method
do Read-Translate-Table
let $Pop_Method_Descr = $XlatLongName

let $FieldName = 'GP_RGST_SRT_EMPL'
let $FieldValue = $Empl_Sort
do Read-Translate-Table
let $Empl_Sort_Descr = $XlatLongName

let $FieldName = 'GP_RGST_QTR'
let $FieldValue = $Rpt_Qtr
do Read-Translate-Table
let $Qtr_Descr = $XlatLongName

show $RunBy_lbl noline
show ' ' $Rpt_Run_By_Descr
show $RptType_lbl noline
show ' '  $Rpt_Type_Descr

if $Rpt_Run_By = '10'
   show $CalGrp_lbl noline
   show ' ' $Cal_Run_ID
else
   show $PrdType_lbl noline
   show ' ' $Prd_Type_Descr
   
   if $Prd_Type = '40'
      do Format-Number(#Rpt_Year, $Rpt_Year, '9999')
      show $Year_lbl noline 
      show ' '  $Rpt_Year 
      show $Qtr_lbl noline
      show ' '  $Qtr_Descr
   else
     show $FromDt_lbl noline
     show ' ' $DateFrom 
     show $ToDt_lbl noline
     show ' ' $DateTo
   end-if
end-if

show ' '
show $Country_lbl noline
show ' ' $ELNCountry noline
show '  ' $ListSet_lbl noline
show ' ' $ELNSet
show ' '
show $Sort_lbl 
show '-----------------------------'
!****************************************************************
! Determine the maximum number of heading lines and box size    *
!****************************************************************

let #max_sort = #CalGrp_Sort
if #PayEnt_Sort > #CalGrp_Sort
   let #max_sort = #PayEnt_Sort
end-if
if #PayGrp_Sort > #max_sort
   let #max_sort = #PayGrp_Sort
end-if
if #Comp_Sort > #max_sort
   let #max_sort = #Comp_Sort
end-if
if #Dept_Sort > #max_sort
   let #max_sort = #Dept_Sort
end-if
if #Locn_Sort > #max_sort
   let #max_sort = #Locn_Sort
end-if
if #Estab_Sort > #max_sort
   let #max_sort = #Estab_Sort
end-if
if #RunType_Sort > #max_sort
   let #max_sort = #RunType_Sort
end-if
if #Curr_Sort > #max_sort
   let #Max_sort = #curr_Sort
end-if

do Print-Sort-Sequence
show ' '

show $PayeeSort_lbl noline
show ' '  $Empl_Sort_Descr
show ' '

show $PopMethod_lbl noline
show ' '  $Pop_Method_Descr
if $Pop_Method = '30'
   show $GPGroup_lbl noline
   show ' '  $GPGroup
end-if
if $Pop_Method = '20'
   show $HRGroup_lbl noline
   show ' '  $HRGroup
   show $Rebuild_lbl noline
   show ' ' $Rebuild
   do Format-DateTime($GrpDt, $GrpDtOut, {DEFDATE}, '', '')
   show $GrpAsof_lbl noline
   show ' ' $GrpDtOut
   do Format-DateTime($RefineDt,$RefineDtOut, {DEFDATE}, '', '')
   show $RefineDt_lbl noline
   show ' ' $RefineDtOut
end-if
show ' '

if $Pop_Method = '40'
   show $Payees_lbl
   show '---------------------------------------------'
   do Print-Payees
   show ' '
end-if

do Print-Org-Selection

show $Country_lbl2 noline
show ' '$RptCountry
show $RptData_lbl noline
show ' GP000001'
  
let #boxsize = #max_sort 
if #CalGrp_Sort > 0
   let #boxsize = #boxsize + 1
end-if

if #CalGrp_Sort = 2 or #CalGrp_Sort = 4 or #CalGrp_Sort = 6 
   let #boxsize = #boxsize + 1
end-if

let #boxsize = round((#boxsize / 2),0)   

evaluate $Rpt_Type
  when = '10'
     let #MaxHeadLines = trunc(#boxsize,0) + 13
     break
  when = '20'
     let #MaxHeadLines = trunc(#boxsize,0) + 6
     break
  when = '30'
     let #MaxHeadLines = trunc(#boxsize,0) + 4
     break
end-evaluate


#ifdef debugy
    show '#max_sort= ' #max_sort
    show '#cal_pos=  ' #cal_pos
    show '#max_cal_lines= ' #max_cal_lines
    show '#boxsize=  ' #boxsize
    show '#MaxHeadLines= '#MaxHeadLines
#end-if

! 
! Alter the report for the calculated number of heading lines
!
alter-report heading-size = #MaxHeadLines

end-procedure ! Select-Parameters


begin-procedure Print-Sort-Sequence

#ifdef debugw
   show 'Inside procedure Print-Sort-Sequence'
#end-if

   let #i = 1
   while #i <= #max_sort
      if #CalGrp_Sort = #i
         show $CalGrp2_lbl
      end-if
      if #PayEnt_Sort = #i
         show $PayEnt2_lbl
      end-if
      if #PayGrp_Sort = #i
         show $PayGrp2_lbl
      end-if
      if #Comp_Sort = #i
         show $Comp2_lbl
      end-if
      if #Dept_Sort = #i
         show $Dept2_lbl
      end-if
      if #Locn_Sort = #i
         show $Locn2_lbl
      end-if
      if #Estab_Sort = #i
         show $Estab2_lbl
      end-if
      if #RunType_Sort = #i
         show $RunType2_lbl
      end-if
      if #Curr_Sort = #i
         if $SortUpdated = 'Y'
            show $Curr2_lbl noline
            show ' **'
         else
            show $Curr2_lbl
         end-if
      end-if
      let #i = #i + 1
    end-while
    
    if $SortUpdated = 'Y'
       show ' '
       show '** ' $SortMsg
    end-if
 
end-procedure ! Print-Sort-Sequence


begin-procedure Print-Org-Selection

#ifdef debugw
   show 'Inside procedure Print-Org-Selection'
#end-if

let $OrgFirst = 'Y'
begin-SELECT
#ifdef debugw
   show 'Inside SELECT procedure Print-Org-Selection'
#end-if

ORG.GP_RGST_SEG_SELECT         &ORG.GP_RGST_SEG_SELECT
ORG.BUSINESS_UNIT              &ORG.BUSINESS_UNIT
ORG.ORG_LINK_UNIT              &ORG.ORG_LINK_UNIT

   if $OrgFirst = 'Y'
      let $Org_lbl1 = $org_lbl1 || '            '
      let $Org_lbl1 = substr($Org_lbl1,1,12)
      let $Org_lbl2 = $Org_lbl2 || '            '
      let $Org_lbl2 = substr($Org_lbl2,1,12)
      
      let $Bus_lbl1 = $Bus_lbl1 || '        '
      let $Bus_lbl1 = substr($Bus_lbl1,1,8)
      let $Bus_lbl2 = $Bus_lbl2 || '        '
      let $Bus_lbl2 = substr($Bus_lbl2,1,8)
      
      show $Org_lbl1 noline
      show '  ' $Bus_lbl1
      show $Org_lbl2 noline
      show '  ' $Bus_lbl2 noline
      show '  ' $Value_lbl
      show '------------  --------  -------------'
      let $OrgFirst = 'N'
   end-if
   
   let $SegSel = &ORG.GP_RGST_SEG_SELECT 
   let $BusUnit = &ORG.BUSINESS_UNIT || '        '
   let $BusUnit = substr($BusUnit,1,8)
   let $LinkUnit = &ORG.ORG_LINK_UNIT
   
   let $FieldName = 'GP_RGST_SEG_SELECT'
   let $FieldValue = $SegSel
   do Read-Translate-Table
   let $Seg_Descr = $XlatShortName || '            '
   let $Seg_Descr = substr($Seg_Descr,1,12)
   
   show $Seg_Descr noline
   show '  ' $BusUnit noline
   show '  ' $LinkUnit

FROM PS_GP_RGST_RC_ORG ORG
WHERE ORG.OPRID        = $PRCS_OPRID
  AND ORG.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
end-select

if $OrgFirst = 'N'
   show ' '
end-if

end-procedure ! Print-Org-Selection

begin-procedure Print-Payees

#ifdef debugw
   show 'Inside procedure Print-Payees'
#end-if

begin-SELECT
#ifdef debugw
   show 'Inside SELECT procedure Print-Payees'
#end-if

PAY.EMPLID                     &PAY.EMPLID
NAM.NAME                       &NAM.NAME

   let $PayID = &PAY.EMPLID
   let $PayName = &NAM.NAME
   
   show $PayID noline
   show '  ' $PayName
   
FROM PS_GP_RGST_RC_EMPL PAY,
     PS_PERSON_NAME NAM
WHERE PAY.OPRID        = $PRCS_OPRID
  AND PAY.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
  AND NAM.EMPLID = PAY.EMPLID
end-select

end-procedure ! Print-Payees