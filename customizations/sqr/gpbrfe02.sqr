!***********************************************************************
!  GPBRFE02:  Vacation Credit Report                                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:20:47                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'

Begin-Setup
    #include 'setupdb.sqc' 
    Declare-Printer     THIS_REPORT
        Type=PS
        Font=4
        !Symbol-Set=0U     ! ASCII symbol set   
    End-Declare 

    Declare-Layout THIS_REPORT  
        paper-size= (letter)
        Orientation   = Portrait
        Top-margin    = 10 mm
        Left-margin   = 10 mm 
        Right-margin  = 10 mm
    End-Declare                        

    Declare-Report THIS_REPORT
        Printer-Type=HPLASERJET
        LayOut=THIS_REPORT
    End-Declare
End-Setup

Begin-Program
    do Init-report
    do Process-Main
    do Stdapi-Term
    do Reset
    date-time () hh:mi:ss &timeEnded
    display 'Report Ended: ' noline 
    display &timeEnded 
End-Program

Begin-Procedure Init-Report
    #debug Show 'Begin-Procedure: Init-Report'
    do Init-DateTime 
    do Init-Number
    do Stdapi-Init
End-Procedure Init-Report

Begin-Procedure Process-Main
    Do GetParameters
    
    #debug show '$AsOfToday ' $AsOfToday 
    Do convert-to-dtu-date($AsOfToday, $Today)
    
    Evaluate $ReportOption
        When = '1'
        !Create
        Let $RCBeginDt = $RCYearCD || '-01-01'
        Let $RCEndDt   = $RCYearCD || '-11-01'
        
        Do Convert-From-DTU-Date($RCBeginDt,$RCBeginDt)
        Do Convert-From-DTU-Date($RCEndDt  ,$RCEndDt)
        
        
        Do GetCreateEmployees

        break
        When = '2'
        !Clear

        break

        When = '3'
        !Print
        Do GetPrintEmployees

        break
    End-Evaluate 
    
    !Do GetPrintEmployees

End-Procedure Process-Main

!**************************************
Begin-Procedure GetParameters
#debug show 'Procedure:GetParameters'
#debug show '$prcs_oprid       : ' $prcs_oprid
#debug show '$prcs_run_cntl_id : ' $prcs_run_cntl_id

!**************************************
Begin-Select
RC.GPBR_OPTION_VAC_CR
RC.BEGIN_DT
RC.END_DATE
RC.YEARCD
RC.GPBR_BATCH_CODE

    Let $ReportOption = Rtrim(&RC.GPBR_OPTION_VAC_CR, ' ')
    Let $RCBeginDt    = Rtrim(&RC.BEGIN_DT, ' ')
    Let $RCEndDt      = Rtrim(&RC.END_DATE, ' ')
    Let $RCYearCD     = Rtrim(&RC.YEARCD, ' ')
    Let $RCBatchCode  = Rtrim(&RC.GPBR_BATCH_CODE, ' ')

FROM PS_GPBR_RC_VAC_CR RC
WHERE RC.OPRID = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
End-Select
End-Procedure GetParameters

!**************************************
Begin-Procedure GetCreateEmployees
#debug show 'Procedure:GetCreateEmployees'
#debug show '$RCBeginDt       : ' $RCBeginDt
#debug show '$RCEndDt         : ' $RCEndDt
#debug show '$RCBatchCode     : ' $RCBatchCode

!**************************************

!List Employees in Criteria

Display 'OprID          : '    Noline
Display  $prcs_oprid
Display 'Run Control ID : '    Noline
Display  $prcs_run_cntl_id
Display ' '
Display '                Empregados nos critérios'
Display ' '
Display '----------- --- ------------------------------------------------------------ ---------- ---------- -------- ---------------'
Display '            Rec                                                                     Período'
Display 'EmplID       #  Nome                                                               Aquisitivo      Impresso Código do grupo'
Display '----------- --- ------------------------------------------------------------ ---------- ---------- -------- ---------------'

Let #CriteriaEmployees = 0

Begin-Select
PScre.EMPLID
PScre.EMPL_RCD
PScre.BEGIN_DT
PScre.END_DATE
PScre.GPBR_BATCH_CODE
PScre.GPBR_CHECK_DIGIT

    Let $Emplid    = Rtrim(&PScre.EMPLID, ' ')
    Let #EmplRcd   = &PScre.EMPL_RCD
    Let $Begin_dt  = Rtrim(&PScre.BEGIN_DT, ' ')
    Let $End_date  = Rtrim(&PScre.END_DATE, ' ')
    Let $Printed   = Rtrim(&PScre.GPBR_CHECK_DIGIT, ' ')
    Let $BatchCode = Rtrim(&PScre.GPBR_BATCH_CODE, ' ')
    
    Do convert-to-dtu-date($Begin_dt, $BGNdate)
    Do convert-to-dtu-date($End_date, $ENDdate)
    
    Do ConvertDates
    Do GetEmployeeData
    
    !Write to log List of employees in criteria
    Display $Emplid         XXXXXXXXXXX Noline
    Display ' '                         Noline
    Display #EmplRcd        999         Noline
    Display ' '                         Noline
    Display $EmpName        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Noline
    Display ' '                         Noline
    Display $BGNStringDate  XXXXXXXXXX  Noline
    Display ' '                         Noline
    Display $ENDStringDate  XXXXXXXXXX  Noline
    Display ' '                         Noline
    Display $Printed        XXXXXXXX    Noline
    Display ' '                         Noline
    Display $BatchCode      XXXXXXXXXXXXXXX 

    Let #CriteriaEmployees = #CriteriaEmployees + 1

FROM PS_GPBR_PYE_VAC_CR PScre
WHERE PScre.EMPLID = (SELECT MAX(PScretmp.EMPLID) 
                  FROM PS_GPBR_PYEVAC_TMP PScretmp 
                  WHERE PScretmp.EMPLID = PScre.EMPLID 
                  AND PScretmp.EMPL_RCD = PScre.EMPL_RCD 
                  AND PScretmp.BEGIN_DT = PScre.BEGIN_DT 
                  AND PScretmp.END_DATE = PScre.END_DATE 
                  AND PScretmp.OPRID = $prcs_oprid
                  AND PScretmp.RUN_CNTL_ID = $prcs_run_cntl_id) 
AND PScre.BEGIN_DT >= $RCBeginDt 
AND PScre.BEGIN_DT <= $RCEndDt
ORDER BY PScre.EMPLID, PScre.EMPL_RCD
End-Select

Display '---------------------------------------------------------------------------------------------------------------------------'
Display ' Total : ' Noline
Display #CriteriaEmployees 9999999


!List Employees in Batchcode

Display '***************************************************************************************************************************'
Display ' '
Display '                Empregados no código do grupo: ' Noline
Display $RCBatchCode
Display ' '
Display '----------- --- ------------------------------------------------------------ ---------- ---------- -------- ---------------'
Display '            Rec                                                                     Período'
Display 'EmplID       #  Nome                                                               Aquisitivo      Impresso Código do grupo'
Display '----------- --- ------------------------------------------------------------ ---------- ---------- -------- ---------------'

Let #BatchcodeEmployees = 0

Begin-Select
PSBatch.EMPLID
PSBatch.EMPL_RCD
PSBatch.BEGIN_DT
PSBatch.END_DATE
PSBatch.GPBR_BATCH_CODE
PSBatch.GPBR_CHECK_DIGIT

    Let $Emplid    = Rtrim(&PSBatch.EMPLID, ' ')
    Let #EmplRcd   = &PSBatch.EMPL_RCD
    Let $Begin_dt  = Rtrim(&PSBatch.BEGIN_DT, ' ')
    Let $End_date  = Rtrim(&PSBatch.END_DATE, ' ')
    Let $Printed   = Rtrim(&PSBatch.GPBR_CHECK_DIGIT, ' ')
    Let $BatchCode = Rtrim(&PSBatch.GPBR_BATCH_CODE, ' ')

    Do convert-to-dtu-date($Begin_dt, $BGNdate)
    Do convert-to-dtu-date($End_date, $ENDdate)
    
    Do ConvertDates
    Do GetEmployeeData

    !Write to log List of employees in criteria
    Display $Emplid         XXXXXXXXXXX Noline
    Display ' '                         Noline
    Display #EmplRcd        999         Noline
    Display ' '                         Noline
    Display $EmpName        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Noline
    Display ' '                         Noline
    Display $BGNStringDate  XXXXXXXXXX  Noline
    Display ' '                         Noline
    Display $ENDStringDate  XXXXXXXXXX  Noline
    Display ' '                         Noline
    Display $Printed        XXXXXXXX    Noline
    Display ' '                         Noline
    Display $BatchCode      XXXXXXXXXXXXXXX 
  
    Let #BatchcodeEmployees = #BatchcodeEmployees + 1  

FROM PS_GPBR_PYE_VAC_CR PSBatch
WHERE PSBatch.GPBR_BATCH_CODE = $RCBatchCode
AND PSBatch.BEGIN_DT >= $RCBeginDt 
AND PSBatch.BEGIN_DT <= $RCEndDt
ORDER BY PSBatch.EMPLID, PSBatch.EMPL_RCD
End-Select

Display '---------------------------------------------------------------------------------------------------------------------------'
Display ' Total : ' Noline
Display #BatchcodeEmployees 9999999


End-Procedure GetCreateEmployees

!**************************************
Begin-Procedure GetPrintEmployees
#debug show 'Procedure:GetPrintEmployees'
#debug show '$RCBeginDt       : ' $RCBeginDt
#debug show '$RCEndDt         : ' $RCEndDt
!**************************************
!Write Header to log 

Display 'OprID          : '    Noline
Display  $prcs_oprid
Display 'Run Control ID : '    Noline
Display  $prcs_run_cntl_id
Display ' '
Display '                Empregados Impressos'
Display ' '
Display '----------- --- ------------------------------------------------------------ ---------- ---------- ------- -----'
Display '            Rec                                                                     Período            CTPS'
Display 'EmplID       #  Nome                                                               Aquisitivo      Número  Serie'
Display '----------- --- ------------------------------------------------------------ ---------- ---------- ------- -----'

Let #PrintedEmployees = 0

Begin-Select
PE.EMPLID
PE.EMPL_RCD
PE.BEGIN_DT
PE.END_DATE
PE.GPBR_BATCH_CODE
PE.GPBR_CHECK_DIGIT

    Let $Emplid   = Rtrim(&PE.EMPLID, ' ')
    Let #EmplRcd  = &PE.EMPL_RCD
    Let $Begin_dt = Rtrim(&PE.BEGIN_DT, ' ')
    Let $End_date = Rtrim(&PE.END_DATE, ' ')
    
    Do convert-to-dtu-date($Begin_dt, $BGNdate)
    Do convert-to-dtu-date($End_date, $ENDdate)
    
    Do ConvertDates
    Do GetCompanyName
    Do GetEmployeeData
    Do PrintLetter

    new-page

FROM PS_GPBR_PYE_VAC_CR PE
WHERE PE.EMPLID = (SELECT MAX(PT.EMPLID) 
                  FROM PS_GPBR_PYEVAC_TMP PT 
                  WHERE PT.EMPLID = PE.EMPLID 
                  AND PT.EMPL_RCD = PE.EMPL_RCD 
                  AND PT.BEGIN_DT = PE.BEGIN_DT 
                  AND PT.END_DATE = PE.END_DATE 
                  AND PT.OPRID = $prcs_oprid
                  AND PT.RUN_CNTL_ID = $prcs_run_cntl_id) 
AND PE.BEGIN_DT >= $RCBeginDt 
AND PE.BEGIN_DT <= $RCEndDt
End-Select

Display '----------------------------------------------------------------------------------------------------------------'
Display ''
Display ' Total : ' Noline
Display #PrintedEmployees 9999999

End-Procedure GetPrintEmployees


!**************************************
Begin-Procedure GetCompanyName
#debug show 'Procedure:GetCompanyName'
#debug show '$Emplid          : ' $Emplid
#debug show '#EmplRcd         : ' #EmplRcd
#debug show '$End_date        : ' $End_date
!**************************************
#debug Show ''
Begin-Select
PSJob.EMPLID
PSJob.EMPL_RCD
PSJob.EFFDT
PScom.COMPANY
PScom.DESCR
PSloc.LOCATION
PSloc.CITY
PSloc.STATE


    Let $CompanyDescr  = Rtrim(&PScom.DESCR, ' ')
    Let $LocationCity  = Rtrim(&PSloc.CITY, ' ')
    Let $LocationState = Rtrim(&PSloc.STATE, ' ')
    
    #debug show '&PScom.COMPANY   : ' &PScom.COMPANY
    #debug show '$CompanyDescr    : ' $CompanyDescr
    
    #debug show '&PSloc.LOCATION  : ' &PSloc.LOCATION
    #debug show '$LocationCity    : ' $LocationCity
    #debug show '$LocationState   : ' $LocationState

FROM PS_JOB PSJob,
PS_COMPANY_TBL PScom,
PS_LOCATION_TBL PSloc
WHERE PSJob.EMPLID = $Emplid
AND PSJob.EMPL_RCD = #EmplRcd
AND PSJob.EFFDT = (SELECT MAX(PSJob2.EFFDT)
                FROM PS_JOB PSJob2
                WHERE PSJob2.EMPLID = PSJob.EMPLID
                AND PSJob2.EMPL_RCD = PSJob.EMPL_RCD
                AND PSJob2.EFFDT <= $End_date
                AND PSJob2.EFFSEQ = PSJob.EFFSEQ)
AND PSJob.EFFSEQ = (SELECT MAX(PSJob3.EFFSEQ)
                 FROM PS_JOB PSJob3
                 WHERE PSJob3.EMPLID = PSJob.EMPLID
                 AND PSJob3.EMPL_RCD = PSJob.EMPL_RCD
                 AND PSJob3.EFFDT = PSJob.EFFDT)
AND PSJob.COMPANY = PScom.COMPANY
AND PScom.EFFDT = (SELECT MAX(PScom2.EFFDT)
                FROM PS_COMPANY_TBL PScom2
                WHERE PScom2.COMPANY = PScom.COMPANY
                AND PScom2.EFFDT <= PSJob.EFFDT
                AND PScom2.EFF_STATUS = PScom.EFF_STATUS)
AND PScom.EFF_STATUS = 'A'
AND PSloc.LOCATION = PSJob.LOCATION
AND PSloc.EFFDT = (SELECT MAX(PSloc2.EFFDT)
                 FROM PS_LOCATION_TBL PSloc2
                 WHERE PSloc2.LOCATION = PSloc.LOCATION
                 AND PSloc2.EFFDT <= PSJob.EFFDT
                 AND PSloc2.EFF_STATUS = PSloc.EFF_STATUS)
AND PSloc.EFF_STATUS = 'A'
End-Select

End-Procedure GetCompanyName

!**************************************
Begin-Procedure GetEmployeeData
#debug show 'Procedure:GetEmployeeData'
#debug show '$Emplid          : ' $Emplid
#debug show '$End_date        : ' $End_date
!**************************************
Begin-Select
PSnid.NATIONAL_ID
PSper.CTPS_SERIES_BRA

    Let $ctpsNumber = Rtrim(&PSnid.NATIONAL_ID, ' ')
    Let $ctpsSeries = Rtrim(&PSper.CTPS_SERIES_BRA, ' ')
    
    #debug show '$ctpsNumber      : ' $ctpsNumber
    #debug show '$ctpsSeries      : ' $ctpsSeries

FROM PS_PERS_NID PSnid,
PS_PERSON_BRA PSper
WHERE PSnid.EMPLID = $Emplid
AND PSnid.COUNTRY = 'BRA'
AND PSnid.NATIONAL_ID_TYPE = 'CTPS'
AND PSnid.EMPLID = PSper.EMPLID 
End-Select

Begin-Select
PSname.NAME_FORMAL

    Let $EmpName = Rtrim(&PSname.NAME_FORMAL, ' ')    
    #debug show '$EmpName         : ' $EmpName

FROM PS_NAMES PSname
WHERE PSname.EMPLID = $Emplid
AND PSname.NAME_TYPE = 'PRI'
AND PSname.EFFDT = (SELECT MAX(PSname2.EFFDT)
                     FROM PS_NAMES PSname2
                     WHERE PSname2.EMPLID = PSname.EMPLID
                     AND PSname2.NAME_TYPE = PSname.NAME_TYPE
                     AND PSname2.EFFDT <= $End_date)
End-Select

End-Procedure GetEmployeeData

!**************************************
Begin-Procedure PrintLetter
#debug show 'Procedure:PrintLetter'
!**************************************



    Do dtu-parse-date ($Today, #MyYear, #MyMonth, #MyDay)
        Move #MyYear  to $MyYear  '0000'
        Move #MyMonth to $MyMonth '00'
        Move #MyDay   to $MyDay   '00'

        !Months
        !Janeiro     - Jan
        !Fevereiro   - Fev
        !Março       - Mar
        !Abril       - Abr
        !Maio        - Mai
        !Junho       - Jun
        !Julho       - Jul
        !Agosto      - Ago
        !Setembro    - Set
        !Outubro     - Out
        !Novembro    - Nov
        !Dezembro    - Dez
      
    Evaluate $MyMonth
    When = '01'
        Let $MonthDescr = 'Janeiro'
    When = '02'
        Let $MonthDescr = 'Fevereiro'
    When = '03'
        Let $MonthDescr = 'Março'
    When = '04'
        Let $MonthDescr = 'Abril'
    When = '05'
        Let $MonthDescr = 'Maio'
    When = '06'
        Let $MonthDescr = 'Junho'
    When = '07'
        Let $MonthDescr = 'Julho'
    When = '08'
        Let $MonthDescr = 'Agosto'
    When = '09'
        Let $MonthDescr = 'Setembro'
    When = '10'
        Let $MonthDescr = 'Outubro'
    When = '11'
        Let $MonthDescr = 'Novembro'
    When = '12'
        Let $MonthDescr = 'Dezembro'
    End-Evaluate  
    
    Let $LongDate = ''
    Let $LongDate = $LongDate || $LocationCity 
    Let $LongDate = $LongDate || ', ' 
    Let $LongDate = $LongDate || $LocationState 
    Let $LongDate = $LongDate ||' ' 
    Let $LongDate = $LongDate || $MyDay
    Let $LongDate = $LongDate || ' de '
    Let $LongDate = $LongDate || $MonthDescr
    Let $LongDate = $LongDate || ' de '
    Let $LongDate = $LongDate || $MyYear
    
    Let $text = ''
    Let $text = $text || 'Nos termos das disposições legais, solicito-lhe(s) '
    Let $text = $text || 'a conversão de 1/3 (um terço) de minhas férias relativas '
    Let $text = $text || 'ao período aquisitivo de '
    Let $text = $text || $BGNStringDate
    Let $text = $text || ' à '
    Let $text = $text || $ENDStringDate
    Let $text = $text || ', em abono pecuniário.'
    
    Let $text2 = ''
    Let $text2 = $text2 || 'CTPS Nº '
    Let $text2 = $text2 || $ctpsNumber
    Let $text2 = $text2 || ' Série '
    Let $text2 = $text2 || $ctpsSeries
    
    Let $Note  = ''
    Let $Note  = $Note || 'Nota: O abono de férias deverá ser requerido até 15 '
    Let $Note  = $Note || 'dias antes do término do período aquisitivo.'

    Print 'SOLICITAÇÃO DE ABONO DE FÉRIAS'              (  3) center

    Print $LongDate                                     (+12, 1)
    
    Print $CompanyDescr                                 ( +2, 1)

    Print 'Prezado(s) Senhor(es)'                       ( +2,  1)

    Print $text                                         ( +2,  1) wrap 75 10

    Print 'Favor dar o seu ciente na cópia deste.'      ( +2,  1)

    Print $text2                                        ( +2,  1)

    Print 'Atenciosamente'                              ( +8,  8)
    Print 'Data: _____ / _____ / _____'                 (   , 40)
    
    
    Print '____________________________'                (+10,  5)
    Print '____________________________'                (   , 40)
    
    Print $EmpName                                      ( +1,  5)
    Print $CompanyDescr                                 (   , 40)
    
    Print $Note                                         (55,  1) wrap 75 2

    
    !Write to log List of employees printed
    Display $Emplid         XXXXXXXXXXX Noline
    Display ' '                         Noline
    Display #EmplRcd        999         Noline
    Display ' '                         Noline
    Display $EmpName        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Noline
    Display ' '                         Noline
    Display $BGNStringDate  XXXXXXXXXX  Noline
    Display ' '                         Noline
    Display $BGNStringDate  XXXXXXXXXX  Noline
    Display ' '                         Noline
    Display $ctpsNumber     XXXXXXX     Noline
    Display ' '                         Noline
    Display $ctpsSeries     XXXXX       

    Let #PrintedEmployees = #PrintedEmployees + 1
    
    !Print &PE.EMPLID                (+1,1)
    !Print &PE.EMPL_RCD              (,+1)
    !Print &PE.BEGIN_DT              (,+1)
    !Print &PE.END_DATE              (,+1)
    !Print &PE.GPBR_BATCH_CODE       (,+1)
    !Print &PE.GPBR_CHECK_DIGIT      (,+1)
    
End-Procedure PrintLetter

!**************************************
Begin-Procedure ConvertDates
#debug show 'Procedure:ConvertDates'
!**************************************
    Do dtu-parse-date ($BGNdate, #BGNyear, #BGNmonth, #BGNday)
        Move #BGNyear  to $BGNyear  '0000'
        Move #BGNmonth to $BGNmonth '00'
        Move #BGNday   to $BGNday   '00'
        Let $BGNStringDate = $BGNday || '/' || $BGNmonth || '/' || $BGNyear
        
    Do dtu-parse-date ($ENDdate, #ENDyear, #ENDmonth, #ENDday)
        Move #ENDyear  to $ENDyear  '0000'
        Move #ENDmonth to $ENDmonth '00'
        Move #ENDday   to $ENDday   '00'
        Let $ENDStringDate = $ENDday || '/' || $ENDmonth || '/' || $ENDyear

End-Procedure ConvertDates




!************************************************************************
#Include 'reset.sqc'     !Reset Printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Routines for date
#include 'prcslng.sqc'   !Process Language
#Include 'useprntr.sqc'  !Indicate which Printer to use for reports
#include 'getcombr.sqc'  !Get selected fields from Company Table and Brazil Fields