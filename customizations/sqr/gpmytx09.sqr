!***********************************************************************
!  gpmytx09: Form E - Annual return by employers.                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  26563314                                            *
!                                                                      *
!***********************************************************************


#Include 'setenv.sqc'  !Set environment
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'
#include 'sqrtrans.sqc'  ! Translate SQR strings to given language
#Include 'curdttim.sqc'  ! Current date time routines
#include 'datemath.sqc'  ! Translate SQR strings to given language
#include 'adformat.sqc'

begin-setup
    declare-layout FORM_E
         paper-size    = (a4)  !(8.27in,11.69in)
         orientation   = portrait
         left-margin   = 0.1
         top-margin    = 0.3
         max-columns   = 108
         max-lines     = 96
         char-width    = 5.5 !7.2
         line-height   = 12.5
    end-declare

    declare-report FORM_E_RPT
        layout = FORM_E
    end-declare
    
    declare-variable
        date $Tax_Yr_End
        date $Tax_Yr_start
        date $where_date
        date $where_date1
    end-declare

end-setup


begin-report
    do Init-DateTime
    do Init-Number
    do Init-Report ! user defined
    do Main   !user defined
    do Report-Parm-Clean
    do Stdapi-Term
end-Report


!***********************************************************************
!  Procedure: Init-Report                                              *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Init-Report

    do Stdapi-Init
    do Select-Parameters   ! user defined

    move 'GPMYTX09' to $ReportID

    do Get-Language-Codes ! get the current language in which user wants to print the report
    do Init_Report_Translation($ReportID, $curr_language_cd)
    do Append_Report_Translation($ReportID)
    do Get_Translat_Info
    do Array-Initialisation
    do Get-TxYr-End

    !***********************************************************************
    !  Setup printer and font size                                         *
    !***********************************************************************

    let #StdFont       = 4 !5  ! Standard font used in the body of the report (Times Roman)
    let #HeadingFont   = 4  ! Font used for headings (Helvetica)

    let #HdrPntSize    = 10  ! Font size used for main heading
    let #LawPntSize    = 7    !Law text point-size
    let #PntSize8      = 8
    let #PntSize10     = 10
    let #PntSize6      = 6
    let #PntSize9      = 9
    let #PntSize20     = 20
    let #StdPntSize    = 8  ! Standard font size used in the body of the report
    let #StartCol      = 4  ! The starting column no

end-procedure


begin-procedure Array-Initialisation

  create-array  name=Totals size=12
   field=Month_Name:char
   field=Total_Earns_Bal:number
   field=Total_Earns_Bal1:number
   field=Total_Allow:number
   field=Total_Allow1:number
   field=Total_Earns:number
   field=Total_Earns1:number
   field=Total_Gross:number
   field=Total_Gross1:number
   field=Total_Taxes:number
   field=Total_Taxes1:number
   field=Total_Remitted:number
   field=Total_Remitted1:number
   field=Total_Zakat:number
   field=Total_Zakat1:number
   field=Receipt_Nbr:number
   field=no_of_rcpts:number


  put $Jan_Lbl into Totals(0)
  put $Feb_Lbl into Totals(1)
  put $Mar_Lbl into Totals(2)
  put $Apr_Lbl into Totals(3)
  put $May_Lbl into Totals(4)
  put $Jun_Lbl into Totals(5)
  put $Jul_Lbl into Totals(6)
  put $Aug_Lbl into Totals(7)
  put $Sep_Lbl into Totals(8)
  put $Oct_Lbl into Totals(9)
  put $Nov_Lbl into Totals(10)
  put $Dec_Lbl into Totals(11)

end-procedure


!***********************************************************************
! Procedure: Select-Parameters                                         *
!            Retrieves Run Control data for report parameters needed   *
!            for Malaysian Inland Revenue Reporting.                   *
!***********************************************************************
begin-procedure Select-Parameters
begin-SELECT
MYS.GPMY_ORG_LINK_OPTN
MYS.ORG_LINK_UNIT
MYS.GPMY_TAX_NBR
MYS.GPMY_CONTRIB_YEAR
MYS.COMPANY
MYS.GPMY_STATUS_CODE
MYS.GPMY_TAX_REF_CODE

! code added here to find the dates
MYS.GPMY_FROM_DT
MYS.GPMY_TO_DT
! code added here to find the dates
FROM PS_GPMY_RPT_RC MYS
WHERE MYS.OPRID = $Prcs_OprID
AND MYS.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SELECT

    let $ORG_LINK_OPTN         =  rtrim(&MYS.GPMY_ORG_LINK_OPTN, ' ')
    let $ORG_LINK_UNIT         =  &MYS.ORG_LINK_UNIT
    let $Org_Clause = ' '

    if rtrim($ORG_LINK_UNIT,' ') = ''
        let $ORG_LINK_UNIT ='%'
        let $Org_Clause ='AND TAX1.ORG_LINK_UNIT LIKE ''' ||$ORG_LINK_UNIT||''''
    else
        let $Org_Clause ='AND TAX1.ORG_LINK_UNIT = '''||$ORG_LINK_UNIT||''''
    end-if
    let $GPMY_TAX_NBR  =  &MYS.GPMY_TAX_NBR
    let $Tax_Clause = ' '
    if rtrim($GPMY_TAX_NBR,' ') = ''
        let $GPMY_TAX_NBR = '%'
        let $Tax_Clause = 'AND TAX1.GPMY_TAX_NBR LIKE ''' ||$GPMY_TAX_NBR||''''
    else
        let $Tax_Clause = 'AND TAX1.GPMY_TAX_NBR = '''||$GPMY_TAX_NBR||''''
    end-if

    let $Company = rtrim(&MYS.ORG_LINK_UNIT,' ')
    move &MYS.GPMY_CONTRIB_YEAR   to #Tax_Year

    let $Status_Code = &MYS.GPMY_STATUS_CODE
    let $Tax_Ref_Code = &MYS.GPMY_TAX_REF_CODE


end-procedure



!***********************************************************************
! Procedure: Get-TxYr-End                                              *
!            Get the tax year end. formatting the start and end dates  *
!            (Initilized using Init Report)                            *
!***********************************************************************
begin-procedure Get-TxYr-End

    do Format-Number(#Tax_Year,$Tax_Year,'9999')

    let $Tax_Yer_End   = '31/12/'|| $Tax_Year
    LET $Tax_Yr_End = STRTODATE($Tax_Yer_End,'DD/MM/YYYY')
    
    let $Tax_Yer_Start = '01/01/'|| $Tax_Year
    LET $Tax_Yr_start = STRTODATE($Tax_Yer_Start,'DD/MM/YYYY')
    

end-procedure



!***********************************************************************
! Procedure: Main                                                      *
!            The main driving procedure                                *
!                                                                      *
!***********************************************************************
begin-Procedure Main
begin-SELECT DISTINCT
TAX1.GPMY_TAX_NBR

    let   $E_File_Nbr =  &TAX1.GPMY_TAX_NBR

     let #emplcount = 0
    let #cnt = 0
    while #cnt < 12
        let Totals.Total_Earns_Bal(#cnt)    = 0
        let Totals.Total_Allow(#cnt) = 0
        let Totals.Total_Earns(#cnt) = 0
        let Totals.Total_Gross(#cnt) = 0
        let Totals.Total_Taxes(#cnt) = 0
        let Totals.Total_Remitted(#cnt) = 0
        let Totals.Total_Zakat(#cnt) = 0
        let Totals.Total_Earns_Bal1(#cnt) = 0
        let Totals.Total_Allow1(#cnt) = 0
        let Totals.Total_Earns1(#cnt) = 0
        let Totals.Total_Gross1(#cnt) = 0
        let Totals.Total_Taxes1(#cnt) = 0
        let Totals.Total_Remitted1(#cnt) = 0
        let Totals.Total_Zakat1(#cnt) = 0
        let Totals.no_of_rcpts(#cnt) = 0
        let Totals.Receipt_Nbr(#cnt) = 0


        add 1 to #cnt
    end-while
     do Get-TxReceipt-Details
    do ProcessTaxNumber
    new-page

FROM PS_GPMY_TAX_ORG_VW TAX1
WHERE TAX1.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
[$Org_Clause]
[$Tax_Clause]
AND TAX1.EFFDT <= $Tax_Yr_End
end-SELECT
end-procedure


begin-Procedure Get-TxReceipt-Details

begin-SELECT
MONTHCD &Mnth_Cd

  move &Mnth_Cd to #MonthCD
  let #Element = #MonthCD - 1



    do get_largtxreceipt
    do get_countofpay





FROM PS_GPMY_CP159_RCT
WHERE COMPANY = $Company
AND GPMY_CONTRIB_YEAR = #Tax_Year
AND GPMY_TAX_NBR = $E_File_Nbr

end-SELECT

end-Procedure

begin-Procedure get_largtxreceipt

begin-SELECT
GPMY_RECEIPT_NBR &Rcpt_Nbr

    let Totals.Receipt_Nbr(#Element) = &Rcpt_Nbr


FROM PS_GPMY_CP159_RCT
WHERE COMPANY = $Company
AND GPMY_CONTRIB_YEAR = #Tax_Year
AND GPMY_TAX_NBR = $E_File_Nbr
AND MONTHCD = #MonthCD
AND GPMY_REMITTED_AMT = (SELECT MAX(GPMY_REMITTED_AMT)
                        FROM PS_GPMY_CP159_RCT
                        WHERE COMPANY = $Company
                        AND GPMY_CONTRIB_YEAR = #Tax_Year
                        AND GPMY_TAX_NBR = $E_File_Nbr
                        AND MONTHCD = #MonthCD
                        AND GPMY_REMITTED_AMT <> 0)

end-SELECT

end-Procedure


Begin-Procedure get_countofpay

begin-SELECT
count(*) &cnt_Nbr
    Let #cnt_Nbr = &cnt_Nbr

    if #cnt_Nbr > 3

    let #cnt_Nbr = 3

    end-if



    let Totals.no_of_rcpts(#Element) = #cnt_Nbr

FROM PS_GPMY_CP159_RCT
WHERE COMPANY = $Company
AND GPMY_CONTRIB_YEAR = #Tax_Year
AND GPMY_TAX_NBR = $E_File_Nbr
AND MONTHCD = #MonthCD

end-SELECT

end-Procedure


!***********************************************************************
! Procedure: ProcessTaxNumber                                          *
!            Process for each tax number   (called from Main)          *
!                                                                      *
!***********************************************************************
begin-Procedure ProcessTaxNumber

    do Get-Company-Details

!    do Get-FirstTime-Empls
!    do Get-Term-Empls
!    do Get-PrevRptd-Empls

    Let #cnt1 = 1
    while #cnt1 < 13
    if #cnt1 < 10
    Let $cnt2 = edit(#cnt1,'X')
    Let $Tax1_Year =edit(#Tax_year,'XXXX')
    Let $datestrng = $Tax1_Year || '0'  || $cnt2 || '01'
    else
    Let $cnt2 = edit(#cnt1,'XX')
    Let $Tax1_Year =edit(#Tax_year,'XXXX')
    Let $datestrng = $Tax1_Year || $cnt2 || '01'
    end-if

    Let $where_date = strtodate($datestrng)

    Let $where_date1 = strtodate($datestrng)

    Let $where_date = dateadd($where_date,'Month',1)
    
    

    do Get-Earns-Balance
     do Empl-Gross-WithPCB
    Let #cnt1 = #cnt1 +1
    end-while

    do get_YTD_Valuesperiod

    move 2 to $PartC_A
    move 2 to $PartC_B
    do Check-Left-Country

    do Get-Passport-Nbr
    do Get-Nid-No
    do Get-Email
    do Get-Active-Empl-Cnt
    do CountEmplSTDTax
   ! do Empl-With-STDTax
    do Get-New-Empl-Cnt
    do Get-Terminated-Empl-Cnt

    do Print-Form !Print-Totals

end-procedure


begin-procedure get_YTD_Valuesperiod
Let Totals.Total_Earns_Bal1(0) = Totals.Total_Earns_Bal(0)
Let Totals.Total_Allow1(0) = Totals.Total_Allow(0)
Let Totals.Total_Remitted1(0) = Totals.Total_Remitted(0)
Let Totals.Total_Taxes1(0) = Totals.Total_Taxes(0)
Let Totals.Total_Zakat1(0) = Totals.Total_Zakat(0)
Let Totals.Total_Gross1(0) = Totals.Total_Gross(0)

Let #cnt3 = 1

while #cnt3 < 12



let #cnt5 = #cnt3 - 1

if Totals.Total_Earns_Bal(#cnt3) <> 0
let Totals.Total_Earns_Bal1(#cnt3) = Totals.Total_Earns_Bal(#cnt3) - Totals.Total_Earns_Bal(#cnt5)
end-if
if Totals.Total_Allow(#cnt3) <> 0
let Totals.Total_Allow1(#cnt3) = Totals.Total_Allow(#cnt3) - Totals.Total_Allow(#cnt5)
end-if
if Totals.Total_Remitted(#cnt3) <> 0
let Totals.Total_Remitted1(#cnt3) = Totals.Total_Remitted(#cnt3) -  Totals.Total_Remitted(#cnt5)
end-if

if  Totals.Total_Taxes(#cnt3) <> 0
let Totals.Total_Taxes1(#cnt3) =  Totals.Total_Taxes(#cnt3) -  Totals.Total_Taxes(#cnt5)
end-if

if Totals.Total_Gross(#cnt3) <> 0
let Totals.Total_Gross1(#cnt3) =  Totals.Total_Gross(#cnt3) -  Totals.Total_Gross(#cnt5)
end-if

if Totals.Total_Zakat(#cnt3) <> 0
let Totals.Total_Zakat1(#cnt3) =  Totals.Total_Zakat(#cnt3) -  Totals.Total_Zakat(#cnt5)
end-if

Let #cnt3 = #cnt3 + 1


end-while


Let #cnt4 = 0

while #cnt4 < 12

let Totals.Total_Earns1(#cnt4) = Totals.Total_Earns_Bal1(#cnt4) - Totals.Total_Allow1(#cnt4)
Let #cnt4 = #cnt4 + 1


end-while




end-procedure



!***********************************************************************
! Procedure: Get-Company-Details                                       *
!            Gets the Company Details that are reported on the form.   *
!***********************************************************************
begin-procedure Get-Company-Details

begin-SELECT
C.GPMY_REGISTERED_NM
C.COUNTRY
C.ADDRESS1
C.ADDRESS2
C.ADDRESS3
C.ADDRESS4
C.CITY
C.NUM1
C.NUM2
C.HOUSE_TYPE
C.ADDR_FIELD1
C.ADDR_FIELD2
C.ADDR_FIELD3
C.COUNTY
C.STATE
C.POSTAL
C.GEO_CODE
C.IN_CITY_LIMIT
C.GPMY_TAX_NBR
C.GPMY_RESPONSIBLEID
C.NAME
C.PHONE
C.JOBTITLE
FROM PS_GPMY_TAX_TBL C
WHERE C.GPMY_TAX_NBR = $E_File_Nbr
AND C.EFF_STATUS = 'A'
AND C.EFFDT = (SELECT MAX(C1.EFFDT)
               FROM PS_GPMY_TAX_TBL C1
               WHERE C1.GPMY_TAX_NBR = C.GPMY_TAX_NBR
               AND C1.EFFDT <= $Tax_Yr_End)
end-SELECT

    let $COUNTRY  = &C.COUNTRY
    let $ADDRESS1 = &C.ADDRESS1
    let $ADDRESS2 = &C.ADDRESS2
    let $ADDRESS3 = &C.ADDRESS3
    let $ADDRESS4 = &C.ADDRESS4
    let $HOUSE_TYPE = &C.HOUSE_TYPE
    let $ADDR_FIELD1 = &C.ADDR_FIELD1
    let $ADDR_FIELD2 = &C.ADDR_FIELD2
    let $ADDR_FIELD3 = &C.ADDR_FIELD3
    let $NUM1 = &C.NUM1
    let $NUM2 = &C.NUM1
    let $CITY = &C.CITY
    let $STATE_TEMP =&C.STATE
    let $POSTAL = &C.POSTAL
    let $COUNTY = &C.COUNTY
    let $GEO_CODE = &C.GEO_CODE
    let $Phone = &C.PHONE
    let $IN_CITY_LIMIT = &C.IN_CITY_LIMIT
    let $Tax_Ref_No = &C.GPMY_TAX_NBR
    let $Responsible_Id = &C.GPMY_RESPONSIBLEID
    let $Employer_Name = &C.NAME
    let $designation = &C.JOBTITLE

    let $CITY = substr($CITY,0,15)
    let $CITY = ltrim(rtrim($CITY,' '),' ')

    let $POSTAL = substr($POSTAL,0,5)
    let $POSTAL = ltrim(rtrim($POSTAL,' '),' ')

    let $ADDRESS = $ADDRESS1
    let $Address = ltrim(rtrim($Address,' '),' ')

    if $ADDRESS2 <> ''
        Let $ADDRESS = $ADDRESS || ', ' || $ADDRESS2
        let $Address = ltrim(rtrim($Address,' '),' ')
        let $Address = ltrim(rtrim($Address,','),',')
    end-if

    if $ADDRESS3 <> ''
        let $ADDRESS = $ADDRESS || ', ' || $ADDRESS3
        let $Address = ltrim(rtrim($Address,' '),' ')
        let $Address = ltrim(rtrim($Address,','),',')
    end-if

    if $ADDRESS4 <> ''
        let $ADDRESS = $ADDRESS || ', ' || $ADDRESS4
        let $Address = ltrim(rtrim($Address,' '),' ')
        let $Address = ltrim(rtrim($Address,','),',')
    end-if

    do Get-State

    let $Registered_Name = rtrim(&C.GPMY_REGISTERED_NM,' ')
    LET $TAX_REF_NBR = $Tax_Ref_No

    do Get-Reg-Nbr
end-procedure



!***********************************************************************
! Procedure: Get-State                                                 *
!            Gets the state from the state code                        *
!***********************************************************************

begin-procedure Get-State
BEGIN-SELECT
DESCR
    let $State = &DESCR
    let $State = substr($State,0,25)
    let $State = ltrim(rtrim($State,' '),' ')

FROM PS_STATE_TBL
WHERE COUNTRY = 'MYS'
AND STATE = $STATE_TEMP
END-SELECT
end-procedure


!***********************************************************************
! Procedure: Get-Email                                                 *
!            Gets the Email Id of the company                          *
!***********************************************************************

begin-procedure Get-Email
begin-SELECT
A.EMAIL_ADDR
    let $Email = &A.EMAIL_ADDR

FROM PS_EMAIL_ADDRESSES A, PS_GPMY_TAX_TBL B
WHERE A.EMPLID = B.GPMY_RESPONSIBLEID
AND B.GPMY_TAX_NBR = $Tax_ref_temp
AND B.EFFDT = (SELECT MAX (EFFDT)
                                 FROM PS_GPMY_TAX_TBL BB
                                 WHERE BB.GPMY_TAX_NBR = B.GPMY_TAX_NBR
                                 AND BB.EFFDT <= $Tax_Yr_End)
AND A.E_ADDR_TYPE = 'BUSN'
end-SELECT

end-procedure



!***********************************************************************
! Procedure: Get-Reg-Nbr                                               *
!            Gets the Refernce Number and Registration Number          *
!             of the  company                                          *
!***********************************************************************

begin-procedure Get-Reg-Nbr

begin-SELECT
CO.CFILE_NBR_MYS
CO.COMPANY_REGNBR_MYS

     let $Ref_No = ltrim(rtrim(&CO.CFILE_NBR_MYS, ' '), ' ')
     let $Reg_No = &CO.COMPANY_REGNBR_MYS

FROM PS_COMPANY_TBL_MYS CO, PS_COMPANY_TBL C
WHERE CO.COMPANY = $Company
AND CO.COMPANY = C.COMPANY
AND C.EFF_STATUS = 'A'
AND C.EFFDT = (SELECT MAX(EFFDT)
               FROM PS_COMPANY_TBL C1
               WHERE C1.COMPANY = C.COMPANY)

AND CO.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_COMPANY_TBL_MYS CO1
                WHERE CO1.COMPANY = CO.COMPANY)

end-SELECT

    let $ref_temp = $Ref_No
    let #Ref_length = length($Ref_No)
    let #Ref_length1= #Ref_length - 2
    let #Ref_length2= #Ref_length1+1
    let $Ref_No = substr($Ref_No,0,#Ref_length1)
    let $Ref_No = ltrim(rtrim($Ref_No,' '),' ')
    let $Ref_No = $Ref_No || '-'
    let $Ref_No = ltrim(rtrim($Ref_No,' '),' ')
    let $ref_temp2 = substr($ref_temp,#Ref_length2,2)
    let $Ref_No = $Ref_No || $ref_temp2
    let $Ref_No = ltrim(rtrim($Ref_No,' '),' ')
    !let $Ref_No = ltrim(rtrim($Ref_No,'-'),'-')
    
    If ( #Ref_length = 1 )
    
    let $Ref_No = '-' || ' ' || $ref_temp2
        
    End-If
    
    If ( #Ref_length = 0 )
    
    let $Ref_No = ''
        
    End-If
    


end-procedure


!***********************************************************************
! Procedure: Get-Active-Empl-Cnt                                       *
!            Gets the count of all active employees.                   *
!***********************************************************************
begin-procedure Get-Active-Empl-Cnt

begin-SELECT
COUNT(DISTINCT X.EMPLID)  &Empl_Count

  move &Empl_Count to $Empl_Count
  move &Empl_Count to #Empl_Count

FROM PS_JOB X, PS_GPMY_TAX_PYE Y2
WHERE X.COMPANY = $Company

AND X.EFFDT = (SELECT MAX(Y.EFFDT)
               FROM PS_JOB Y
               WHERE Y.EMPLID = X.EMPLID
               AND Y.EMPL_RCD = X.EMPL_RCD
               AND Y.EFFDT <= $Tax_Yr_End)
AND X.EFFSEQ = (SELECT MAX(Z.EFFSEQ)
               FROM PS_JOB Z
               WHERE Z.EMPLID = X.EMPLID
               AND Z.EMPL_RCD = X.EMPL_RCD
               AND Z.EFFDT = X.EFFDT)
AND X.EMPL_STATUS = 'A'
AND Y2.GPMY_TAX_NBR = $TAX_REF_NBR
AND Y2.EMPLID = X.EMPLID
AND Y2.EMPL_RCD = X.EMPL_RCD
AND Y2.EFFDT = (SELECT MAX(Y3.EFFDT)
              FROM PS_GPMY_TAX_PYE Y3
            WHERE Y3.EMPLID = Y2.EMPLID
            AND Y3.EMPL_RCD = Y2.EMPL_RCD
            AND Y3.EFFDT <= $Tax_Yr_End )

end-SELECT

end-procedure



!***********************************************************************
! Procedure: Get-New-Empl-Cnt                                       *
!            Gets the count of all new employees.                   *
!***********************************************************************
begin-procedure Get-New-Empl-Cnt
let #New_trsfr_Count = 0
let #New_Empl_Count1 = 0
let #New_Empl_Count = 0

BEGIN-SELECT
COUNT(DISTINCT J21.EMPLID) &New_Empl_Count

    move &New_Empl_Count to #New_Empl_Count
FROM PS_JOB J21, PS_GPMY_TAX_PYE Y
WHERE J21.COMPANY = $Company
AND J21.ACTION ='HIR'
AND (J21.EFFDT between $Tax_Yr_Start AND $Tax_Yr_End)
AND Y.GPMY_TAX_NBR = $TAX_REF_NBR
AND Y.EMPLID = J21.EMPLID
AND Y.EMPL_RCD = J21.EMPL_RCD
AND Y.EFFDT = J21.EFFDT
AND Y.EFFDT<= $Tax_Yr_End
END-SELECT




BEGIN-SELECT
DISTINCT J22.EMPLID &J22.EMPLID
J22.EFFDT

    move &J22.EMPLID to $J22EMPLID


    let #New_trsfr_Count = #New_trsfr_Count + 1
FROM PS_JOB J22, PS_GPMY_TAX_PYE Y3
WHERE J22.COMPANY = $Company
AND J22.ACTION ='XFR'
AND (J22.EFFDT between $Tax_Yr_Start AND $Tax_Yr_End)
AND Y3.GPMY_TAX_NBR = $TAX_REF_NBR
AND Y3.EMPLID = J22.EMPLID
AND Y3.EMPL_RCD = J22.EMPL_RCD
AND Y3.EFFDT = J22.EFFDT
AND Y3.EFFDT<= $Tax_Yr_End
END-SELECT

!THe maximum check is removed such a way that employee count should be added for the no of times he gets rehired in to the company

BEGIN-SELECT
DISTINCT J23.EMPLID &J23.EMPLID
J23.EFFDT


    move &J23.EMPLID to $J23EMPLID
    let #New_Empl_Count1 =  #New_Empl_Count1  +  1


FROM PS_JOB J23, PS_GPMY_TAX_PYE Y2
WHERE J23.COMPANY = $Company
AND J23.EFFDT <= $Tax_Yr_End
AND J23.EFFSEQ = (SELECT MAX(J41.EFFSEQ)
                 FROM PS_JOB J41
                 WHERE J41.EMPLID = J23.EMPLID
                 AND J41.EMPL_RCD = J23.EMPL_RCD
                 AND J41.EFFDT = J23.EFFDT)
AND  J23.ACTION ='REH'
AND (J23.EFFDT between $Tax_Yr_Start AND $Tax_Yr_End)
AND Y2.GPMY_TAX_NBR = $TAX_REF_NBR
AND Y2.EMPLID = J23.EMPLID
AND Y2.EMPL_RCD = J23.EMPL_RCD
AND Y2.EFFDT = J23.EFFDT
AND Y2.EFFDT <= $Tax_Yr_End

END-SELECT
! The below code is written if employee has multiple records. In case customer does not have multiple assignments they can remove the piece of code so that performance enhances in the report
BEGIN-SELECT
DISTINCT J24.EMPLID &J24.EMPLID
J24.EFFDT &J24EFFDT

    move &J24.EMPLID to $J24EMPLID
    move &J24EFFDT to $J24EFFDT
    Let #New_Empl_Count1_mult =#New_Empl_Count1_mult + 1


FROM PS_JOB J24, PS_GPMY_TAX_PYE Y4
WHERE J24.COMPANY = $Company
AND J24.EFFDT <= $Tax_Yr_End
AND J24.EFFSEQ = (SELECT MAX(J41.EFFSEQ)
               FROM PS_JOB J41
               WHERE J41.EMPLID = J24.EMPLID
               AND J41.EMPL_RCD = J24.EMPL_RCD
               AND J41.EFFDT = J24.EFFDT)
AND  J24.ACTION ='REH'
AND (J24.EFFDT between $Tax_Yr_Start AND $Tax_Yr_End)
AND Y4.GPMY_TAX_NBR = $TAX_REF_NBR
AND Y4.EMPLID = J24.EMPLID
AND Y4.EMPL_RCD = J24.EMPL_RCD
AND Y4.EFFDT = J24.EFFDT
AND Y4.EFFDT <= $Tax_Yr_End
AND( 'REH'in (SELECT DISTINCT ACTION
          FROM PS_JOB X5
          WHERE X5.EMPLID=J24.EMPLID AND X5.EMPL_RCD<>J24.EMPL_RCD
          AND (X5.EFFDT = (SELECT MAX(X6.EFFDT)
                           FROM PS_JOB X6
                           WHERE X6.EMPLID=X5.EMPLID
                           AND X6.EMPL_RCD = X5.EMPL_RCD
                           AND X6.EFFDT <= J24.EFFDT))))
END-SELECT

    let #New_Empl_Count = #New_Empl_Count + #New_Empl_Count1 + #New_trsfr_Count + #New_Empl_Count1_mult
    move #New_Empl_Count to $New_Empl_Count
    let $New_Empl_Count = rtrim(rtrim($New_Empl_Count,'0')'.')


end-procedure

!***********************************************************************
! Procedure: CountEmplSTDTax                                           *
!***********************************************************************
begin-Procedure CountEmplSTDTax
begin-SELECT
COUNT(DISTINCT T3.EMPLID) &CountStdTax
  move &CountStdTax to $CountStdTax
FROM PS_GPMY_PY_TMP3 T3, PS_GPMY_PY_TMP T1
    WHERE T3.GPMY_FLD_NAME='EMPL_STDTAX_E'
AND T3.PROCESS_INSTANCE= (#prcs_process_instance - 1)
AND T3.ORIG_CAL_RUN_ID =  T1.ORIG_CAL_RUN_ID
AND T3.PROCESS_INSTANCE = T1.PROCESS_INSTANCE
AND T3.EMPLID = T1.EMPLID
AND T3.CAL_RUN_ID =  T1.CAL_RUN_ID
AND T3.EMPL_RCD = T1.EMPL_RCD
AND T3.GP_PAYGROUP = T1.GP_PAYGROUP
AND T3.CAL_ID = T1.CAL_ID
AND T3.RSLT_SEG_NUM = T1.RSLT_SEG_NUM
AND T1.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
                    FROM PS_GPMY_PY_TMP
                    WHERE PROCESS_INSTANCE=T1.PROCESS_INSTANCE
                    AND EMPLID=T1.EMPLID
                    AND EMPL_RCD = T1.EMPL_RCD
                    AND GP_GENRPT_BREAK2 = $E_File_Nbr)
    AND USER_KEY1=$E_File_Nbr
    AND T1.GP_GENRPT_BREAK2 =  $E_File_Nbr
end-SELECT
end-procedure
!***********************************************************************
! Procedure: EmplWithSTDTax                                           *
!***********************************************************************
!begin-Procedure Empl-With-STDTax
!LET #Total_Gross_WithPCB    = 0
!begin-SELECT
!DISTINCT T1.EMPLID &EMPLID1
 !move &EMPLID1 to $EMPLID1
 !do Empl-Gross-WithPCB
!FROM PS_GPMY_PY_TMP3 T3, PS_GPMY_PY_TMP T1
 !   WHERE T3.GPMY_FLD_NAME='EMPL_STDTAX_E'
!AND T3.PROCESS_INSTANCE= (#prcs_process_instance - 1)
!AND T3.ORIG_CAL_RUN_ID =  T1.ORIG_CAL_RUN_ID
!AND T3.PROCESS_INSTANCE = T1.PROCESS_INSTANCE
!AND T3.EMPLID = T1.EMPLID
!AND T3.CAL_RUN_ID =  T1.CAL_RUN_ID
!AND T3.EMPL_RCD = T1.EMPL_RCD
!AND T3.GP_PAYGROUP = T1.GP_PAYGROUP
!AND T3.CAL_ID = T1.CAL_ID
!AND T3.RSLT_SEG_NUM = T1.RSLT_SEG_NUM
!AND T1.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
    !                FROM PS_GPMY_PY_TMP
   !                 WHERE PROCESS_INSTANCE=T1.PROCESS_INSTANCE
  !                  AND EMPLID=T1.EMPLID )
 !   AND USER_KEY1=$E_File_Nbr
!GROUP BY T1.EMPLID

!end-SELECT

!end-procedure
!***********************************************************************
! Procedure: Gross of emp with PCB          *
!***********************************************************************
begin-Procedure Empl-Gross-WithPCB
Let $Bgn_Dt3 = ' '
Let #dtu_yr3 = 0
Let #Month_Cd3 = 0
let #dtu_da3 = 0
begin-SELECT
MP.PRD_BGN_DT &Prd_Bgn3_Dt
MP3.GPMY_FLD_NAME
MP3.CALC_RSLT_VAL &GrsPCB_YTD

    move &MP3.GPMY_FLD_NAME to $Report_Fld_name1

   let $Bgn_Dt3 = &Prd_Bgn3_Dt
   do Format-DateTime(&Prd_Bgn3_Dt, $out3, {DEFYMD}, '', '')
   do dtu-parse-date($out3,#dtu_yr3,  #Month_Cd3, #dtu_da3)
   let #Element3 = #Month_Cd3 - 1

   if rtrim($Report_Fld_name1,' ') = 'TAX_GROSS_E'
            let Totals.Total_Gross(#Element3) = Totals.Total_Gross(#Element3) + &GrsPCB_YTD
   end-if


FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP
WHERE  MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
!AND MP3.EMPLID = $EMPLID1
AND MP3.EMPLID = MP.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = SEG.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = SEG.RSLT_REV_NUM
AND MP3.USER_KEY1 = $E_File_Nbr

AND MP3.EMPLID in (SELECT DISTINCT EMPLID from
                    PS_GPMY_PY_TMP3 TMP4
                    where
                    TMP4.PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND TMP4.EMPLID = MP3.EMPLID
                    AND TMP4.CAL_RUN_ID = MP3.CAL_RUN_ID
                    AND TMP4.EMPL_RCD = MP3.EMPL_RCD
                    AND TMP4.GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND TMP4.CAL_ID       =MP3.CAL_ID
                    AND TMP4.ORIG_CAL_RUN_ID = MP3.ORIG_CAL_RUN_ID
                    AND TMP4.USER_KEY1 = $E_File_Nbr
                    AND TMP4.GPMY_FLD_NAME = 'EMPL_STDTAX_E'
                    )

AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
                        FROM PS_GPMY_PY_TMP TMP1
                        WHERE TMP1.PROCESS_INSTANCE=MP.PROCESS_INSTANCE
                        AND TMP1.EMPLID=MP.EMPLID
                        AND TMP1.PRD_END_DT < $where_date
                        AND TMP1.PRD_BGN_DT >= $where_date1 )

AND MP.PRD_END_DT < $where_date
AND MP.PRD_BGN_DT >= $where_date1
ORDER by MP.PRD_END_DT, MP3.GPMY_FLD_NAME

end-SELECT

!let #Total_Gross_WithPCB = #Total_Gross_WithPCB + #GrosswithPCB
end-procedure
!
!***********************************************************************
! Procedure: Get-STD-Empl-Cnt                                         *
!            Gets the count of all employees under STD scheme.        *
!***********************************************************************
!begin-procedure Get-STD-Empl-Cnt

!begin-SELECT
!COUNT(DISTINCT X.EMPLID)  &STD_Empl_Count
 ! move &STD_Empl_Count to $STD_Empl_Count

!FROM PS_JOB X,PS_GPMY_TAX_PYE Y
!WHERE X.COMPANY = $Company
!AND X.EMPLID = Y.EMPLID
!AND X.EMPL_RCD = Y.EMPL_RCD
!
!AND X.EFFDT = (SELECT MAX(Y.EFFDT)
!               FROM PS_JOB Y
!               WHERE Y.EMPLID = X.EMPLID
!               AND Y.EMPL_RCD = Y.EMPL_RCD
 !              AND Y.EFFDT <= $Tax_Yr_End)
!AND X.EFFSEQ = (SELECT MAX(Z.EFFSEQ)
 !              FROM PS_JOB Z
  !             WHERE Z.EMPLID = X.EMPLID
  !             AND Z.EMPL_RCD = X.EMPL_RCD
   !            AND Z.EFFDT = X.EFFDT)
!AND X.EMPL_STATUS = 'A'
!AND Y.EFFDT = (SELECT MAX(Y1.EFFDT)
 !              FROM PS_GPMY_TAX_PYE Y1
  !             WHERE Y1.EMPLID = Y.EMPLID
   !            AND Y1.EMPL_RCD = Y.EMPL_RCD
    !           AND Y1.EFFDT <= $Tax_Yr_End)
!AND Y.GPMY_TAX_NBR = $TAX_REF_NBR
!AND Y.EFFDT = X.EFFDT

!end-SELECT

!end-procedure



!***********************************************************************
! Procedure: Get-Terminated-Empl-Cnt                                   *
!            Gets the count of all terminated employees.               *
!***********************************************************************

begin-procedure Get-Terminated-Empl-Cnt
!SQL to find Terminated employees with single employee records
let #transfer = 0
let  #Term_Empl_Count_Multi_Rcd = 0
let #Term_Empl_Count = 0
Begin-select
DISTINCT (U.EMPLID) &U.EMPLID
U.EFFDT
    ! let #Term_Empl_Count =  #Term_Empl_Count +  1

    move &U.EMPLID to $UEMPLID
    let #Term_Empl_Count =  #Term_Empl_Count +  1
FROM PS_JOB U,PS_GPMY_TAX_ORG_VW ORGS,PS_GPMY_TAX_PYE PY
WHERE U.COMPANY = $Company
AND U.EMPL_STATUS = 'T'
AND U.EFFDT-1 BETWEEN $Tax_Yr_Start AND $Tax_Yr_End
AND U.EFFDT-1 <= $Tax_Yr_End
AND ORGS.ORG_LINK_UNIT =  $Company
AND ORGS.GPMY_TAX_NBR = $TAX_REF_NBR
AND ORGS.EFFDT = (SELECT MAX(W.EFFDT)
                FROM PS_GPMY_TAX_ORG_VW W
                WHERE
                W.ORG_LINK_UNIT = $Company)
AND PY.EMPLID = U.EMPLID
AND PY.GPMY_TAX_NBR = $E_File_Nbr
AND PY.EFFDT = (SELECT MAX(PY1.EFFDT)
                FROM PS_GPMY_TAX_PYE PY1
                WHERE PY1.EMPLID = PY.EMPLID
                AND PY1.EFFDT <= $Tax_Yr_End)



!AND Y.EFFDT = X.EFFDT
End-select


!Sql to find if the employees is transferred from this organisation
Begin-select
DISTINCT U1.EMPLID &U1.EMPLID
U1.EFFDT &U1EFFDT

    move &U1.EMPLID to $EMPLID12
    move &U1EFFDT to $EFFDT13


       let $EFFDT14 = DATEADD(&U1EFFDT, 'day', -1)

       do get-transfer-employee
FROM PS_JOB U1, PS_GPMY_TAX_ORG_VW ORGS1
WHERE U1.COMPANY <> $Company
AND U1.ACTION  = 'XFR'
AND U1.EFFDT BETWEEN $Tax_Yr_Start AND $Tax_Yr_End
AND U1.EFFDT <= $Tax_Yr_End
AND ORGS1.ORG_LINK_UNIT =  U1.COMPANY
AND ORGS1.EFFDT = (SELECT MAX(VW.EFFDT)
                FROM PS_GPMY_TAX_ORG_VW VW
                WHERE
                VW.ORG_LINK_UNIT = U1.COMPANY)
End-select




!SQL to find Terminated employees with multiple employee records
begin-SELECT
DISTINCT (X7.EMPLID) &X7.EMPLID
X7.EFFDT
            move &X7.EMPLID to $XXEMPLID

            Let #Term_Empl_Count_Multi_Rcd = #Term_Empl_Count_Multi_Rcd + 1

FROM PS_JOB X7
WHERE X7.COMPANY = $Company

AND X7.EFFSEQ = (SELECT MAX(Z.EFFSEQ)
               FROM PS_JOB Z
               WHERE Z.EMPLID = X7.EMPLID
               AND Z.EMPL_RCD = X7.EMPL_RCD
               AND Z.EFFDT = X7.EFFDT)
AND X7.EMPL_STATUS = 'T'
AND X7.EFFDT BETWEEN $Tax_Yr_Start AND $Tax_Yr_End
AND( 'T'in(SELECT DISTINCT EMPL_STATUS
          FROM PS_JOB X9
          WHERE X9.EMPLID=X7.EMPLID AND X9.EMPL_RCD<>X7.EMPL_RCD
          AND (X9.EFFDT = (SELECT MAX(X8.EFFDT)
                           FROM PS_JOB X8
                           WHERE X8.EMPLID=X7.EMPLID
                           AND X8.EMPL_RCD = X7.EMPL_RCD
                           AND X8.EFFDT <= X7.EFFDT))))
end-SELECT

!SQL to find Terminated employees who has left Malaysia
begin-SELECT
COUNT(DISTINCT X.EMPLID) &Term_Empl_left_MYS_Count

   move &Term_Empl_left_MYS_Count to #Term_Empl_left_MYS_Count


FROM PS_GPMY_TER_PYE Y,
     PS_JOB X,
     PS_GPMY_TAX_PYE PY
WHERE X.COMPANY = $Company
AND X.EFFDT = (SELECT MAX(Y.EFFDT)
               FROM PS_JOB Y
               WHERE Y.EMPLID = X.EMPLID
               AND Y.EMPL_RCD = Y.EMPL_RCD
               AND Y.EFFDT-1 <= $Tax_Yr_End)

AND X.EFFSEQ = (SELECT MAX(Z.EFFSEQ)
               FROM PS_JOB Z
               WHERE Z.EMPLID = X.EMPLID
               AND Z.EMPL_RCD = X.EMPL_RCD
               AND Z.EFFDT = X.EFFDT)
AND X.EMPL_STATUS = 'T'
AND Y.GPMY_CTRY_LFT_FLG = 'Y'
AND X.EFFDT >= $Tax_Yr_Start
AND Y.EMPL_RCD = X.EMPL_RCD
AND Y.EMPLID = X.EMPLID
AND Y.EFFDT = (SELECT MAX(Z.EFFDT)
               FROM PS_GPMY_TER_PYE Z
               WHERE Z.EMPLID = Y.EMPLID
               AND Z.EMPL_RCD = Y.EMPL_RCD)
AND PY.EMPLID = X.EMPLID
AND PY.GPMY_TAX_NBR = $E_File_Nbr
AND PY.EFFDT = (SELECT MAX(PY1.EFFDT)
                FROM PS_GPMY_TAX_PYE PY1
                WHERE PY1.EMPLID = PY.EMPLID
                AND PY1.EFFDT <= $Tax_Yr_End)


end-select




    let #Term_Empl_Count = #Term_Empl_Count + #Term_Empl_Count_Multi_Rcd + #transfer
    move #Term_Empl_Count to $Term_Empl_Count
    let $Term_Empl_Count = rtrim(rtrim($Term_Empl_Count,'0')'.')
    let #Total_Empl_Count = #Term_Empl_Count + #Empl_Count
    move #Total_Empl_Count to $Total_Empl_Count
 !  let $Total_Empl_Count = edit(#Total_Empl_Count,9999)
    let $Total_Empl_Count = rtrim(rtrim($Total_Empl_Count,'0')'.')

    move #Term_Empl_left_MYS_Count to $Term_Empl_left_MYS_Count
    Let $Term_Empl_left_MYS_Count = rtrim(rtrim($Term_Empl_left_MYS_Count,'0')'.')

end-procedure

begin-procedure get-transfer-employee



begin-SELECT
DISTINCT X.EMPLID &X.EMPLID
X.EFFDT

 move &X.EMPLID to $YYEMPLID
 let #transfer = #transfer + 1

FROM PS_JOB X, PS_GPMY_TAX_ORG_VW ORG
WHERE
X.EMPLID = $EMPLID12
AND X.COMPANY =  $Company
AND X.ACTION not in ( 'T', 'U', 'V')
AND $EFFDT14 between $Tax_Yr_Start AND $Tax_Yr_End
AND X.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               where EMPLID = X.EMPLID
               AND EMPL_RCD = X.EMPL_RCD
               AND ACTION not in ( 'T', 'U', 'V')
               AND EFFDT <=  $EFFDT14
               )
AND X.EFFDT <= $Tax_Yr_End
AND ORG.ORG_LINK_UNIT =  $Company
AND ORG.GPMY_TAX_NBR = $TAX_REF_NBR
AND ORG.EFFDT = (SELECT MAX(EFFDT)
               FROM PS_GPMY_TAX_ORG_VW
               WHERE
               ORG_LINK_UNIT = $Company)
AND ORG.GPMY_TAX_NBR in (SELECT GPMY_TAX_NBR
                       FROM PS_GPMY_TAX_PYE
                       where EMPLID = $EMPLID12
                       AND GPMY_TAX_NBR =$TAX_REF_NBR)
end-SELECT

let $EFFDT12 = ''
let $EFFDT13 = ''
let $EMPLID12 = ''
let $EFFDT14 = ''
end-procedure



!     Gets total headcount of all active and terminated employees as at end of the tax year

!   move &Term_Empl_Count to #Term_Empl_Count
!  move &Empl_Count to #Empl_Count
!  let #Total_Empl_Count = #Term_Empl_Count + #Empl_Count
!  move #Total_Empl_Count to


!*********************************************************************************
!  Procedure: Check-Left-Country                                                 *
!             Check whether the employee has left the country.                   *
!*********************************************************************************
begin-procedure Check-Left-Country

begin-SELECT
N.EMPLID
Y.GPMY_CTRY_LFT_FLG
Y.GPMY_CESSN_RPT_FLG

   move &Y.GPMY_CTRY_LFT_FLG to $temp
   if $temp = 'Y'
       move 1 to $PartC_A
   end-if

   move &Y.GPMY_CESSN_RPT_FLG to $temp
   if $temp = 'Y'
       move 1 to $PartC_B
   end-if

FROM PS_GPMY_TER_PYE Y,
     PS_JOB N,
     PS_GPMY_TAX_PYE PY
WHERE N.COMPANY = $Company
AND N.EFFDT = (SELECT MAX(Y.EFFDT)
               FROM PS_JOB Y
               WHERE Y.EMPLID = N.EMPLID
               AND Y.EMPL_RCD = Y.EMPL_RCD
               AND Y.EFFDT <= $Tax_Yr_End)

AND N.EFFSEQ = (SELECT MAX(Z.EFFSEQ)
               FROM PS_JOB Z
               WHERE Z.EMPLID = N.EMPLID
               AND Z.EMPL_RCD = N.EMPL_RCD
               AND Z.EFFDT = N.EFFDT)
AND N.EMPL_STATUS = 'T'
AND N.EFFDT >= $Tax_Yr_Start
AND Y.EMPL_RCD = N.EMPL_RCD
AND Y.EMPLID = N.EMPLID
AND Y.EFFDT = (SELECT MAX(Z.EFFDT)
               FROM PS_JOB Z
               WHERE Z.EMPLID = Y.EMPLID
               AND Z.EMPL_RCD = Y.EMPL_RCD)
AND PY.EMPLID = N.EMPLID
AND PY.GPMY_TAX_NBR = $E_File_Nbr
AND PY.EFFDT = (SELECT MAX(PY1.EFFDT)
                FROM PS_GPMY_TAX_PYE PY1
                WHERE PY1.EMPLID = PY.EMPLID
                AND PY1.EFFDT <= $Tax_Yr_End)


end-select
end-procedure


!***********************************************************************
!  Procedure: Get-Nid-No                                               *
!             Select the form E value to determine whether the employee*
!             has been previously reported or not.                     *
!***********************************************************************

begin-procedure Get-Nid-No
let $National_Id_Type = ''
let $PrevNID = ''
begin-SELECT
A.EMPLID
A.NATIONAL_ID  &ICNbr
A.NATIONAL_ID_TYPE &National_Id_Type

     move &National_Id_Type to $National_Id_Type
     let $National_Id_Type = rtrim($National_Id_Type,' ')
     let $National_Id_Type = ltrim($National_Id_Type,' ')
     if $National_Id_Type = 'NEWIC'
        let $New_Ic_Nbr = &ICNbr
        let $PrevNID = $National_Id_Type
     end-if

     if $National_Id_Type= 'OLDIC'
        let $Old_IC_Nbr = &ICNbr
     end-if

FROM PS_PERS_NID A, PS_GPMY_TAX_TBL B
WHERE A.EMPLID = B.GPMY_RESPONSIBLEID
AND B.GPMY_TAX_NBR = $Tax_Ref_No
AND B.EFFDT = (SELECT MAX (EFFDT)
                                 FROM PS_GPMY_TAX_TBL BB
                                 WHERE BB.GPMY_TAX_NBR = B.GPMY_TAX_NBR
                                 AND BB.EFFDT <= $Tax_Yr_End)

end-SELECT

     let $Tax_ref_temp = $Tax_Ref_No
     let $Tax_Ref_No = replace($Tax_Ref_No, '-', '')
     let $Tax_Ref_No = rtrim(ltrim($Tax_Ref_No, ' '), ' ')
     let #slen = length($Tax_Ref_No)
     let $Tax_Ref_No1 = substr($Tax_Ref_No, 1, #slen - 3)
     let $Tax_Ref_No2 = substr($Tax_Ref_No, #slen - 2, 2)
     let $Tax_Ref_No3 = substr($Tax_Ref_No, #slen, 1)
     let $Tax_Ref_No = $Tax_Ref_No1 || '-' || $Tax_Ref_No2 || '(' || $Tax_Ref_No3 || ')'

     let $ID_temp = $New_Ic_Nbr
     let $New_Ic_Nbr = substr($New_Ic_Nbr,0,6)
     let $New_Ic_Nbr = ltrim(rtrim($New_Ic_Nbr,' '),' ')
     let $New_Ic_Nbr = $New_Ic_Nbr ||'-'
     let $New_Ic_Nbr = ltrim(rtrim($New_Ic_Nbr,' '),' ')
     let $id_temp2 = substr($id_temp,6,2)
     let $New_Ic_Nbr = $New_Ic_Nbr || $id_temp2
     let $New_Ic_Nbr = ltrim(rtrim($New_Ic_Nbr,' '),' ')
     let $New_Ic_Nbr = $New_Ic_Nbr ||'-'
     let $New_Ic_Nbr = ltrim(rtrim($New_Ic_Nbr,' '),' ')
     let $id_temp2 = substr($id_temp,9,4)
     let $New_Ic_Nbr = $New_Ic_Nbr || $id_temp2
     let $New_Ic_Nbr = ltrim(rtrim($New_Ic_Nbr,' '),' ')

     let $Old_IC_Nbr = substr($Old_IC_Nbr,0,8)

end-procedure


!***********************************************************************
!  Procedure: Get-FormE-Value                                          *
!             Select the form E value to determine whether the employee*
!             has been previously reported or not.                     *
!***********************************************************************
begin-procedure Get-FormE-Value
   let #FormE = 0

   begin-SELECT
PYE.GPMY_TAX_FORME_YR
PYE.GPMY_EMPL_TAX_NBR
   move &PYE.GPMY_TAX_FORME_YR to #FormE
   move &PYE.GPMY_EMPL_TAX_NBR to $ItFileNbr

FROM PS_GPMY_TAX_PYE PYE
WHERE PYE.EMPLID = $Emplid
AND PYE.GPMY_TAX_NBR = $E_File_Nbr
AND PYE.EFFDT = (SELECT MAX(PYE1.EFFDT)
                FROM PS_GPMY_TAX_PYE PYE1
                WHERE PYE1.EMPLID = PYE.EMPLID
                AND PYE1.EFFDT <= $Tax_Yr_End)
end-SELECT

end-procedure

!***********************************************************************
!  Procedure: Check-Start-Date                                         *
!             Checks for the existance of at least one unterminated job*
!             for the employee within the same company.                *
!***********************************************************************
begin-procedure Check-Start-Date

   let $Empl_Active = 'N'

begin-SELECT
'X'
  let $Empl_Active = 'Y'

FROM PS_EMPLOYMENT
WHERE EMPLID = $Emplid
AND EMPL_RCD = #Occurrence
AND HIRE_DT <= $Tax_Yr_End
AND TERMINATION_DT IS NULL
end-SELECT

end-procedure



!***********************************************************************
!  Procedure: Check-End-Date                                           *
!             Checks to make sure all jobs are terminated for the empl *
!             within the same company.                                 *
!***********************************************************************
begin-procedure Check-End-Date
   let $Empl_Termd = 'N'

begin-SELECT
'Y'
  let $Empl_Termd = 'Y'

FROM PS_EMPLOYMENT
WHERE EMPLID = $Emplid
AND EMPL_RCD = #Occurrence
AND HIRE_DT <= $Tax_Yr_End
AND TERMINATION_DT BETWEEN $Tax_Yr_Start AND $Tax_Yr_End
end-SELECT
end-procedure



!***********************************************************************
!  Procedure: Get-Earns-Balance                                        *
!             Gets the employees earnings balances for the tax year    *
!             being reported.                                          *
!***********************************************************************
begin-procedure Get-Earns-Balance
LET #Total_Zakat        = 0
LET #Total_Earns_Bal    = 0
LET #Total_Allow        = 0
LET #Total_Tax_Gross    = 0
LET #Total_Tax_Bal      = 0
LET #Total_Empl_Std_tax = 0
LET $Bgn_Dt = ' '
LET #Month_Cd = 0
LET #dtu_yr = 0
LET #dtu_da = 0
LET $Bgn_Dt2 = ' '
LET #Month_Cd1 = 0
LET #dtu_yr1 = 0
LET #dtu_da1 = 0
begin-SELECT
MP.PRD_BGN_DT &Prd_Bgn1_Dt
MP3.GPMY_FLD_NAME &MP3.Earns_Name
MP3.CALC_RSLT_VAL &Grs_YTD


    move &MP3.Earns_Name to $Report_Fld_name
    move &Grs_YTD to #Grs_YTD

   let $Bgn_Dt = &Prd_Bgn1_Dt
   do Format-DateTime(&Prd_Bgn1_Dt, $out, {DEFYMD}, '', '')
   do dtu-parse-date($out,#dtu_yr,  #Month_Cd, #dtu_da)
   let #Element = #Month_Cd - 1

   if rtrim($Report_Fld_name,' ') = 'GRS_YTD_E'
            let Totals.Total_Earns_Bal(#Element) = Totals.Total_Earns_Bal(#Element) + #Grs_YTD
   end-if

   if rtrim($Report_Fld_name,' ') = 'ALLOWANCES_E'
          let Totals.Total_Allow(#Element) = Totals.Total_Allow(#Element) + #Grs_YTD
   end-if

   if rtrim($Report_Fld_name,' ') = 'EMPL_STDTAX_E'
          let Totals.Total_Remitted(#Element) = Totals.Total_Remitted(#Element) + #Grs_YTD
   end-if

   if rtrim($Report_Fld_name,' ') = 'TX_YTD_E'

          let Totals.Total_Taxes(#Element) = Totals.Total_Taxes(#Element) + #Grs_YTD
   end-if

    Let #Grs_YTD = 0

FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP
WHERE  MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP3.EMPLID = MP.EMPLID

AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                  FROM PS_GPMY_PY_TMP
                  WHERE EMPLID           = MP.EMPLID
                  AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                  AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                  AND   CAL_ID           = MP.CAL_ID
                  AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = SEG.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = SEG.RSLT_REV_NUM
AND MP3.USER_KEY1 = $E_File_Nbr
AND MP.PRC_ORD_TS=(SELECT MAX(TMP1.PRC_ORD_TS)
                    FROM PS_GPMY_PY_TMP TMP1
                    WHERE TMP1.PROCESS_INSTANCE=MP.PROCESS_INSTANCE
                    AND TMP1.EMPLID=MP.EMPLID
                    AND TMP1.PRD_END_DT < $where_date
                    AND TMP1.PRD_BGN_DT >= $where_date1)

AND MP.PRD_END_DT < $where_date
AND MP.PRD_BGN_DT >= $where_date1
ORDER by MP.PRD_END_DT, MP3.GPMY_FLD_NAME
end-SELECT

 !  let #Total_Earns = #Total_Earns_Bal - #Total_Allow   ! GRS_YTD_E - ALLOWANCES_E
begin-SELECT
MP1.PRD_BGN_DT &Prd_Bgn2_Dt
MP31.CALC_RSLT_VAL &Zakat_YTD






   let $Bgn_Dt2 = &Prd_Bgn2_Dt
   do Format-DateTime(&Prd_Bgn2_Dt, $out1, {DEFYMD}, '', '')
   do dtu-parse-date($out1,#dtu_yr1,  #Month_Cd1, #dtu_da1)
   let #Element1 = #Month_Cd1 - 1


            let Totals.Total_Zakat(#Element1) = Totals.Total_Zakat(#Element1) + &Zakat_YTD



FROM PS_GPMY_PY_TMP3  MP31,PS_GPMY_PY_TMP MP1, PS_GPMY_TAX_PYE PYB
WHERE  MP31.PROCESS_INSTANCE  = (#prcs_process_instance - 1)
AND MP31.PROCESS_INSTANCE     = MP1.PROCESS_INSTANCE
AND MP31.EMPLID          = MP1.EMPLID
AND MP31.CAL_RUN_ID      = MP1.CAL_RUN_ID
AND MP31.EMPL_RCD        = MP1.EMPL_RCD
AND MP31.GP_PAYGROUP     = MP1.GP_PAYGROUP
AND MP31.CAL_ID          = MP1.CAL_ID
AND MP31.RSLT_SEG_NUM    = MP1.RSLT_SEG_NUM
AND MP31.ORIG_CAL_RUN_ID =  MP1.ORIG_CAL_RUN_ID
AND MP1.PRC_ORD_TS=(SELECT MAX(TMP2.PRC_ORD_TS)
                    FROM PS_GPMY_PY_TMP TMP2
                    WHERE TMP2.PROCESS_INSTANCE=MP1.PROCESS_INSTANCE
                    AND TMP2.EMPLID=MP1.EMPLID
                    AND TMP2.PRD_END_DT <$where_date
                    AND TMP2.PRD_BGN_DT >= $where_date1 )
!AND MP31.RSLT_VER_NUM    = MP1.RSLT_VER_NUM
!AND MP1.RSLT_VER_NUM     = SEG1.RSLT_VER_NUM
!AND MP31.RSLT_REV_NUM    = MP1.RSLT_REV_NUM
!AND MP1.RSLT_REV_NUM     = SEG1.RSLT_REV_NUM
AND MP31.GPMY_FLD_NAME   =  'ZAKAT_E'
AND MP31.USER_KEY1 = $E_File_Nbr
AND PYB.EMPLID = MP31.EMPLID
AND PYB.GPMY_TAX_NBR = $E_File_Nbr
AND PYB.EFFDT = (SELECT MAX(PYB1.EFFDT)
                FROM PS_GPMY_TAX_PYE PYB1
                WHERE PYB1.EMPLID = PYB.EMPLID
                AND PYB1.EFFDT <= $Tax_Yr_End)

AND MP1.PRD_END_DT < $where_date
AND MP1.PRD_BGN_DT >= $where_date1
ORDER by MP1.PRD_END_DT

end-SELECT

end-procedure




!***********************************************************************
!  Procedure: Get-Passport-Nbr                                         *
!             Gets the passport number for those employees without an  *
!             IC number.                                               *
!***********************************************************************
begin-procedure Get-Passport-Nbr
begin-SELECT
CP.EMPLID
CP.PASSPORT_NBR
     !if &CP.EMPLID <> $PrevEmpl
        move &CP.PASSPORT_NBR to $Passport_Nbr
     !end-if

FROM PS_CITIZEN_PSSPRT CP, PS_GPMY_TAX_TBL B
WHERE !CP.EMPLID = $Responsible_Id
CP.DEPENDENT_ID = ' '
AND CP.DT_ISSUED <= $Tax_Yr_End
AND CP.EXPIRATN_DT >= $Tax_Yr_End
AND CP.EMPLID = B.GPMY_RESPONSIBLEID
AND B.GPMY_TAX_NBR = $Tax_Ref_No
AND B.EFFDT = (SELECT MAX (EFFDT)
                                 FROM PS_GPMY_TAX_TBL BB
                                 WHERE BB.GPMY_TAX_NBR = B.GPMY_TAX_NBR
                                 AND BB.EFFDT <= $Tax_Yr_End)
end-SELECT

end-procedure



!***********************************************************************
!  Procedure: Print-Form                                               *
!             Prints the body of the report.                           *
!***********************************************************************
begin-procedure Print-Form  !Print-Totals

    do Print-Header
    do Print-Intro
    do Print-officeuse
    do Print-PartA
    !do Print-officeuse
    !do Print-PartB
    !do Print-PartB2
    !new-page
    !do Print-PartC
    !do Print-PartD
    do Print-PartB_New          !New part B section
    !do Print-Reminder           !New Reminder section added ! Remove in 2009 legislative change
    !do Print-PartE

end-procedure




!***********************************************************************
!  Procedure: Print-Header                                             *
!             Prints the heading of the report.                        *
!***********************************************************************

begin-Procedure Print-Header

          Let #Row_nbr = 1
          alter-printer font = #HeadingFont point-size = #HdrPntSize

          if $curr_language_cd = 'ENG'
              print $TitleMain_1_lbl (#Row_Nbr,37)bold
          else
              print $TitleMain_1_lbl (#Row_Nbr,35)bold
          end-if

          alter-printer font = #HeadingFont point-size = #LawPntSize
          print $TitleLeft_1_lbl (#Row_Nbr,2)
          alter-printer font = #HeadingFont point-size = #PntSize8
          print $TitleLeft_2_lbl (#Row_Nbr,15)  !Form
          alter-printer font = #HeadingFont point-size = #LawPntSize
          print $TitleRight_1_lbl (#Row_Nbr,87)
          add 1 to #Row_Nbr
          alter-printer font = #HeadingFont point-size = #PntSize8      !#HdrPntSize

          if $curr_language_cd = 'ENG'
              print $TitleMain_3_lbl (#Row_Nbr,40)bold
          else
              print $TitleMain_3_lbl (#Row_Nbr,42)bold

          end-if
          alter-printer font = #HeadingFont point-size = #HdrPntSize
          add 1 to #Row_Nbr

        if $curr_language_cd = 'ENG'
              print $TitleMain_4_lbl (#Row_Nbr,31)bold
          else
              print $TitleMain_4_lbl (#Row_Nbr,29)bold
          end-if


          alter-printer font = #HeadingFont point-size = #PntSize20 !#PntSize12
          print $TitleLeft_3_lbl (#Row_Nbr,15)bold
          alter-printer font = #HeadingFont point-size = #PntSize20 !#PntSize12
          do Format-Number(#Tax_Year,$Tax_Year_lbl,'9999')
          print $Tax_Year_lbl (#Row_Nbr,91)bold

          add 1 to #Row_Nbr
          alter-printer font = #HeadingFont point-size = #PntSize8
          if $curr_language_cd = 'ENG'
            print $TitleMain_2_lbl (#Row_Nbr,34) !wrap 60 2
          else
            print $TitleMain_2_lbl (#Row_Nbr,31) !wrap 60 2
          end-if

          add 1 to #Row_Nbr
          graphic (#Row_Nbr, 2, 101)  horz-line 25

end-procedure



!***********************************************************************
!  Procedure: Print-Intro                                              *
!             Prints the Employer information                          *
!***********************************************************************
begin-procedure Print-Intro ! Employer Intro info

! Printing the Intro text

    Let #CurrentRow = 7
    alter-printer font = #StdFont point-size = #StdPntSize
    graphic (#CurrentRow, 2,3) box 1
    print '1' (#CurrentRow,3) bold
    print $NameOfEmplr_lbl (#CurrentRow,6)
    add 1 to #CurrentRow
    print $NameOfEmplr_1_lbl (#CurrentRow,6)
    if $curr_language_cd = 'ENG'
        add 3 to #CurrentRow
    else
        add 3 to #CurrentRow
    end-if

    graphic (#CurrentRow, 2,3) box 1
    print '2' (#CurrentRow,3) bold
    print $RefNo_lbl (#CurrentRow,6)

    alter-printer font = #HeadingFont point-size = #PntSize10
    print $TitleLeft_3_lbl (#CurrentRow,16) bold   ! E lbl
    alter-printer font = #StdFont point-size = #StdPntSize

    graphic (#CurrentRow, 65,3) box 1
    print '3' (#CurrentRow,66) bold
    print $Status_lbl (#CurrentRow,69)
    alter-printer font = #StdFont point-size = #LawPntSize !#PntSize6
    print $StatusCode_lbl (#CurrentRow,88)

    do Print_Field($Status_Code,#CurrentRow,76,82)


    if $curr_language_cd = 'ENG'

        add 1 to #CurrentRow
    else
        add 2 to #CurrentRow
    end-if
    alter-printer font = #StdFont point-size = #PntSize6
    add 1 to #CurrentRow
    print $TaxRefNo1_lbl (#CurrentRow,19)
    add 1 to #CurrentRow

    alter-printer font = #StdFont point-size = #StdPntSize
    graphic (#CurrentRow, 2,3) box 1
    print '4' (#CurrentRow,3) bold
    print $TaxRefNo_lbl (#CurrentRow,6)
    alter-printer font = #StdFont point-size = #PntSize6
    print $TaxRefNo2_lbl (#CurrentRow,19)
    add 1 to #currentRow
    !print $TaxRefNo3_lbl (#CurrentRow,19)
    add 2 to #CurrentRow

    alter-printer font = #StdFont point-size = #StdPntSize
    graphic (#CurrentRow, 2,3) box 1
    print '5' (#CurrentRow,3) bold
    print $NewID_lbl (#CurrentRow,6)
    graphic (#CurrentRow, 65,3) box 1
    print '6' (#CurrentRow,66) bold
    IF $curr_language_cd = 'ENG'
        print $OldID_lbl (#CurrentRow,69)
    else
        print $OldID_lbl (#CurrentRow,69)
        add 1 to #CurrentRow
        print $OldID_lbl1 (#CurrentRow,69)
    end-if
    add 1 to #CurrentRow
    print $CardNo_lbl (#CurrentRow,6)
    print $CardNo_lbl (#CurrentRow,69)
    add 2 to #CurrentRow
    IF $curr_language_cd = 'ENG'
        graphic (#CurrentRow, 2,3) box 1
        print '7' (#CurrentRow,3) bold
        print $PassportNo_lbl (#CurrentRow,6)
    else
        add -1 to #CurrentRow
        graphic (#CurrentRow, 2,3) box 1
        print '7' (#CurrentRow,3) bold
        print $PassportNo_lbl (#CurrentRow,6)
    end-if

    IF $curr_language_cd = 'ENG'
       add 3 to #CurrentRow
    else
        add 3 to #CurrentRow
    end-if

    graphic (#CurrentRow, 2,3) box 1
    print '8' (#CurrentRow,3) bold
    add -1 to #currentRow
    print $RegNo_lbl (#CurrentRow,6)
    add 1 to #CurrentRow
    print $OfCompany_lbl (#CurrentRow,6)
    add 1 to #CurrentRow
    print $OpSoc_lbl (#CurrentRow,6)
    add 1 to #currentRow
    print $Mys_othlbl (#CurrentRow,6)


    IF $curr_language_cd = 'ENG'
       add 2 to #CurrentRow
    else
        add 2 to #CurrentRow
    end-if

    graphic (#CurrentRow, 2,3) box 1
    print '9' (#CurrentRow ,3) bold
    print $CorrAddress_lbl (#CurrentRow,6)
    add 6 to #CurrentRow
    IF $curr_language_cd = 'ENG'
        graphic (#CurrentRow, 16,8) box 1
        print $PostCode_lbl (#CurrentRow,17)
        graphic (#CurrentRow, 48,6) box 1
        print $Town_lbl (#CurrentRow,49)
        add 2 to #CurrentRow
        graphic (#CurrentRow, 16,8) box 1
        print $State1_lbl (#CurrentRow,18)
    else
        graphic (#CurrentRow, 16,8) box 1
        print $PostCode_lbl (#CurrentRow,17)
        graphic (#CurrentRow, 48,6) box 1
        print $Town_lbl (#CurrentRow,49)
        add 2 to #CurrentRow
        graphic (#CurrentRow, 16,8) box 1
        print $State1_lbl (#CurrentRow,17)
    end-if

    add 2 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print '10' (#CurrentRow,3) bold
    print $TelNo_lbl (#CurrentRow,7)
    add 2 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print '11' (#CurrentRow,3) bold
    print $Email_lbl (#CurrentRow,7)

! Print the data part
    Let #CurrentRow = 7
    alter-printer font = #StdFont point-size = #StdPntSize
    do Print_Name($Registered_Name,#CurrentRow,19,101)

    if  $curr_language_cd = 'ENG'
        add 4 to #CurrentRow
    else
        add 4 to #CurrentRow
    end-if

    do Print_Field_Num($Ref_No,#CurrentRow,19,61)

    if $curr_language_cd = 'ENG'
        add 2 to #CurrentRow
    else
        add 3 to #CurrentRow
    end-if

    !do Print_Field($Status_Code,#CurrentRow,19,25)         !  ****
    !do Print_Field($Status_Code,#CurrentRow,56,70)
    add 1 to #CurrentRow

    do Print_Field($Tax_Ref_Code,#CurrentRow,53,59)
    do Print_Field_Num($Tax_Ref_No,#CurrentRow,62,101)


    if  $curr_language_cd = 'ENG'
       add 3 TO #CurrentRow
    else
       add 3 to #CurrentRow
    end-if

    do Print_Field_3(#CurrentRow,19,61)

    !do Print_Field_Num($New_Ic_Nbr,#CurrentRow,19,61)
    !add 1 to #CurrentRow
    !do Print_Field_3(#CurrentRow,19,43)
    do Print_Field_3(#CurrentRow,77,101)

   !do Print_Field($Old_IC_Nbr,#CurrentRow,77,101)

   ! add 3 TO #CurrentRow
     if  $curr_language_cd = 'ENG'
       add 3 TO #CurrentRow
    else
       add 3 to #CurrentRow
    end-if

    do Print_Field_3(#CurrentRow,19,61)

    !do Print_Field_Num($Passport_Nbr,#CurrentRow,19,61)

    IF $curr_language_cd = 'ENG'
        add 3 to #CurrentRow
    else
        add 3 to #CurrentRow
    end-if



    do Print_Field_Num($Reg_No,#CurrentRow,19,61)
    if $curr_language_cd = 'ENG'
        let #CurrentRow = 27
    else
        let #CurrentRow = 28
    end-if

    alter-printer font = #StdFont point-size = #StdPntSize
    do Print_Address($ADDRESS,#CurrentRow,25,100)
    if $curr_language_cd = 'ENG'
        add 6 to #CurrentRow
    else
        add 6 to #CurrentRow
    end-if

    do Print_Field($POSTAL,#CurrentRow,25,40)

    do Print_Field($CITY,#CurrentRow,55,100)
    if $curr_language_cd = 'ENG'
        add 2 to #CurrentRow
    else
        add 2 to #CurrentRow
    end-if
    do Print_Field($STATE,#CurrentRow,25,100)
    add 2 to #CurrentRow
    do Print_Field($Phone,#CurrentRow,19,64)
    add 2 to #CurrentRow
    do Print_Email_Name($Email,#CurrentRow,19,100)


end-procedure

!***********************************************************************
!  Procedure: Print_Email_Name                                               *
!             Prints the Email in the box                               *
!***********************************************************************
begin-procedure Print_Email_Name($Email,#Row,#col,#len)

    let $Email = ltrim(rtrim($Email,' '),' ')
    let #len_of_email = length($Email)
    let #max_size = (#len - #col)/3

    if ( (#len_of_email ) > #max_size)

        let #temp = (#max_size) !+1

        let $Email1 = substr($Email,0,#temp)   ! extracting email for 1st line
        let $Email1 = ltrim(rtrim($Email1,' '),' ')
        do Print_field($Email1,#Row,#Col,#Len)

        add 2 to #Row
        let #temp = #temp + 1

        let #len_of_email = length($Email)
        let $Email = substr($Email,#temp,#len_of_email)
        let $Email = ltrim(rtrim($Email,' '),' ')

        let #len_of_email = length($Email)
        let #temp = (#max_size) !+1

        if ( (#len_of_email) > #max_size)  ! extracting the 2nd line of email

            let $Email2 = substr($Email,0,#temp)   ! extracting email for 1st line
            let $Email2 = ltrim(rtrim($Email2,' '),' ')
            do Print_field($Email2,#Row,#Col,#Len)

        else
            do Print_field($Email,#Row,#Col,#Len)

        end-if

    else
        do Print_field($Email,#Row,#Col,#Len)
        add 2 to #Row
        do print_field_3(#Row,#Col,#Len)
        !add 2 to #Row
        !do print_field_3(#Row,#Col,#Len)

   end-if

end-procedure

!***********************************************************************
!  Procedure: Print_Name                                               *
!             Prints the name in the box                               *
!***********************************************************************
begin-procedure Print_Name($name,#CurrentRow,#col,#len)

    let $name = ltrim(rtrim($name,' '),' ')
    let #len_of_name = length($name)
    let #max_size = #len - #col
    let #temp = #len_of_name

    if( (#len_of_name*3) > #max_size)

        let #temp = (#max_size/3)+1
        let $temp = substr($name,#temp,1)

        while ( $temp <> ' ' )
            let $temp = substr($name,#temp,1)
            let #temp = #temp - 1
        end-while

       let $name1 = substr($name,0,#temp)
       let $name1 = ltrim(rtrim($name1,' '),' ')

       let #temp = #temp + 1
       let $name2 = substr($name,#temp,#len_of_name)
       let $name2 = ltrim(rtrim($name2,' '),' ')

       do Print_Field($name1,#CurrentRow,#col,100)
       add 2 to #CurrentRow
       do Print_Field($name2,#CurrentRow,#col,100)

   else
        do Print_Field($name,#CurrentRow,#col,100)
        add 2 to #CurrentRow
        do Print_Field_3(#CurrentRow,#col,100)

   end-if

   end-procedure



!***********************************************************************
!  Procedure: Print-PartA                                              *
!             Prints Part-A of the form                                *
!***********************************************************************
begin-procedure Print-PartA

! Printing the Part-A text

    new-page
    Let #CurrentRow = 3
    alter-printer font = #StdFont point-size = #StdPntSize
    print $PartBName_lbl (#CurrentRow,#StartCol)
    graphic (#CurrentRow, 9, 32)  horz-line 5
    print $RefNo_lbl (#CurrentRow,47)
    alter-printer font = #HeadingFont point-size = #PntSize10
    print $TitleLeft_3_lbl (#CurrentRow,59)
    add 1 to #CurrentRow
    graphic (#CurrentRow, 9, 32)  horz-line 5


    Let #CurrentRow = 3
    alter-printer font = #StdFont point-size = #StdPntSize
    print $Registered_Name (#CurrentRow,13)
    
    do Print_Field_Num($Ref_No,#CurrentRow,61,100)

    IF $curr_language_cd = 'ENG'
        Let #CurrentRow = 6
    else
        let #CurrentRow = 6
    end-if
    graphic (#CurrentRow, 2,100) box 3 4 15!25        !*****************
    add 1 to #CurrentRow
    alter-printer font = #HeadingFont point-size = #PntSize9

    if $curr_language_cd = 'ENG'
    print $PartAHead_lbl (#CurrentRow,8)bold
    print $Tax_Year_lbl (#CurrentRow,86)bold

    else
    print $PartAHead_lbl (#CurrentRow,8)bold
    print $Tax_Year_lbl (#CurrentRow,81)bold

    end-if
 add 4 to #CurrentRow

    alter-printer font = #StdFont point-size = #StdPntSize
    graphic (#CurrentRow, 2,4) box 1
    print 'A1' (#CurrentRow,3) bold
    print $NoOfEmp_lbl (#CurrentRow,7)
    !add 2 to #CurrentRow

    graphic (#CurrentRow, 56,4) box 1
    print 'A2' (#CurrentRow,57) bold
    !add -1 to #CurrentRow
    !if $curr_language_cd = 'ENG'
    do Print_Field_Num($CountStdTax,#CurrentRow,82,100)
    If $curr_language_cd = 'ENG'
    print $NoOfEmp_lbl (#CurrentRow,61)
    add 1 to #CurrentRow
    print $NoOfEmpSTD_lbl (#CurrentRow,61)

    else
    print $NoOfEmp_lbl (#CurrentRow,61)
    print $NoOfEmpSTD_lbl (#CurrentRow,72)
    add 1 to #CurrentRow
    print $NoOfEmpSTD2_lbl (#CurrentRow,61)
    end-if


     add 2 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print 'A3' (#CurrentRow,3) bold
    print $NoOfNewEmp_lbl (#CurrentRow,7)
    !add 1 to #CurrentRow
    if $curr_language_cd = 'ENG'
       !print $NoOfEmp_lbl (#CurrentRow,7)
       print $NoOfEmp_lbl (#CurrentRow,61)
       graphic (#CurrentRow, 56,4) box 1
       print 'A4' (#CurrentRow,57) bold
       do Print_Field_Num($Term_Empl_Count,#CurrentRow,82,100)
       add 1 to #CurrentRow
       !print $NoOfEmpSTD_lbl (#CurrentRow,7)
       print $NoOfCesdEmp_lbl (#CurrentRow,61)
       !do Print_Field_Num($Term_Empl_Count,#CurrentRow,82,100)

     else

       print $NoOfEmp_lbl (#CurrentRow,61)  !modified
       graphic (#CurrentRow, 56,4) box 1
       print 'A4' (#CurrentRow,57) bold
       print $NoOfCesdEmp_lbl (#CurrentRow,61)
       do Print_Field_Num($Term_Empl_Count,#CurrentRow,82,100)
       !do Print_Field_Num($Term_Empl_Count,#CurrentRow,82,100)
       add 1 to #currentrow
       !print $NoOfEmpSTD2_lbl (#CurrentRow,7)
       !do Print_Field_Num($Term_Empl_Count,#CurrentRow,82,100)

    end-if

    add 2 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print 'A5' (#CurrentRow,3) bold
    If $curr_language_cd = 'ENG'
        print $NoOfEmp_lbl (#CurrentRow,7)
        do Print_Field_Num($Term_Empl_left_MYS_Count,#CurrentRow,27,45)
        add 1 to #CurrentRow
        print $NoOfCesdEmp_lbl (#CurrentRow,7)
        add 1 to #CurrentRow
        print $PartC1_lbl (#CurrentRow,7)
    else
        print $PartC5_lbl (#CurrentRow,7)
        do Print_Field_Num($Term_Empl_left_MYS_Count,#CurrentRow,27,45)
        add 1 to #CurrentRow
        print $PartC6_lbl (#CurrentRow,7)
        add 1 to #CurrentRow
        print $PartC7_lbl (#CurrentRow,7)
    end-if
    add -2 to #CurrentRow
    If $curr_language_cd = 'ENG'
        graphic (#CurrentRow, 56,4) box 1
        print 'A6' (#CurrentRow,57) bold
        graphic (#CurrentRow, 82,3) box 2 10     ! Yes/No      ! **************
        print $PartC2_lbl (#CurrentRow,61)
        print $PartC_YN_lbl (#CurrentRow,87)
        add 1 to #CurrentRow
        print $PartC3_lbl (#CurrentRow,61)
        print $PartC_YN_2bl (#CurrentRow,87)

        add 1 to #CurrentRow

        let #col_tmp = #StartCol + 2
    !print $PartC_2_1_lbl (#CurrentRow,#col_tmp)
        if $curr_language_cd = 'ENG'
        print '(If A5 is applicable)' (#CurrentRow,61)

        end-if
        ! data
     !Let #CurrentRow = 13
        subtract 2 from #CurrentRow
        !print $PartC_A (#CurrentRow,83)
        !MOVE 1 TO  $PartC_A
        !print $PartC_A (#CurrentRow,45)

        !add 2 to #CurrentRow

        if($PartC_A = '1')
         print $PartC_B (#CurrentRow,83)
        !print $PartC_B (#CurrentRow,42)
        end-if
    else
        graphic (#CurrentRow, 56,4) box 1
        print 'A6' (#CurrentRow,57) bold
        graphic (#CurrentRow, 88,3) box 2 10     ! Yes/No      ! **************
        print $PartC2_lbl (#CurrentRow,61)
        print $PartC_YN_lbl (#CurrentRow,92)
        add 1 to #CurrentRow
        print $PartC4_lbl (#CurrentRow,61)
        print $PartC_YN2_lbl (#CurrentRow,92)

    ! data
     !Let #CurrentRow = 13
     subtract 1 from #CurrentRow
     !print $PartC_A (#CurrentRow,89)

     !add 2 to #CurrentRow

     if($PartC_A = '1')
         print $PartC_B (#CurrentRow,89)
     end-if
    End-If
! Printing the Part-A data

    IF $curr_language_cd = 'ENG'
        Let #CurrentRow = 11
    else
        Let #CurrentRow = 11
    end-if
    alter-printer font = #StdFont point-size = #StdPntSize

    do Print_Field_Num($Total_Empl_Count,#CurrentRow,27,45)
    !add 1 to #CurrentRow
    add 3 to #CurrentRow
    !do Print_Field_Num($New_Empl_Count,#CurrentRow,82,100)
    do Print_Field_Num($New_Empl_Count,#CurrentRow,27,45)
    add 2 to #CurrentRow
    !do Print_Field_Num($CountStdTax,#CurrentRow,27,45)
    !do Print_Field_Num($Term_Empl_Count,#CurrentRow,82,100)

end-procedure

begin-procedure print-officeuse

    if $curr_language_cd = 'ENG'
        Let #CurrentRow = 48
    else
        Let #CurrentRow = 48
    end-if

 graphic (#CurrentRow, 2, 101)  horz-line 25

 add 3 to #CurrentRow
    !if  $curr_language_cd = 'ENG'
     !   add 3 to #CurrentRow
      !  graphic (#CurrentRow, 18,74) box 5 4 0 !25
       ! alter-printer font = #HeadingFont point-size = #PntSize8
        !print $OffUse_lbl (#CurrentRow,48)bold
    !else
     !     add 2 to #CurrentRow
      !    graphic (#CurrentRow, 18,74) box 5 4 0 !25
       !   alter-printer font = #HeadingFont point-size = #PntSize8
        !  print $OffUse_lbl (#CurrentRow,46)bold
    !end-if

        IF $curr_language_cd = 'ENG'
        let $Office_Use_Label = 'FOR OFFICE USE'
        let $Office_Use_Label = ltrim(rtrim($Office_Use_Label,' '),' ')
        let $date_received_label = 'Date received(1)'
        let $date_received_label = ltrim(rtrim($date_received_label,' '),' ')
        let $date_processed_label = 'Date received(2)'
        let $date_processed_label = ltrim(rtrim($date_processed_label,' '),' ')
        let $Status_of_assessment_label = 'Date received(3) '
        let $Status_of_assessment_label = ltrim(rtrim($Status_of_assessment_label,' '),' ')
    else
       let $Office_Use_Label = 'Untuk Kegunaan Pejabat'
       let $date_received_label = 'Tarikh terima(1)'
       let $date_processed_label = 'Tarikh terima(2)'
       let $Status_of_assessment_label = 'Tarikh terima(3)'
   end-if


    print $Office_Use_Label (#CurrentRow,7)bold
    !graphic (#CurrentRow, 25,56) box 1 10
    !let #VertLine = #CurrentRow - 1
    !let #index = 28

    !while #index <= 81
    !     graphic (#VertLine, #index, 1)  vert-line 1
    !     add 3 to #index
    !end-while
    !print '--' (#CurrentRow,35)bold
    !print '--' (#CurrentRow,62)bold
    !print '--' (#CurrentRow,77)bold

    ! commented the office use only part
    add 2 to #CurrentRow
   graphic (#CurrentRow, 8,89) box 5 6
    let #VertLine = #CurrentRow - 1
    graphic (#VertLine, 33,5)  vert-line 1
    graphic (#VertLine, 63,5)  vert-line 1      !*******

    add 5 to  #CurrentRow




    alter-printer font = #StdFont point-size = #StdPntSize
    print $date_received_label (#CurrentRow,12)
    print $date_processed_label (#CurrentRow,43)
    print $Status_of_assessment_label (#CurrentRow,72)

end-procedure



!***********************************************************************
!  Procedure: Print-PartB                                              *
!             Prints Part-B of the form                                *
!***********************************************************************
begin-procedure Print-PartB

      new-page

    Let #CurrentRow = 3
    alter-printer font = #StdFont point-size = #StdPntSize
    print $PartBName_lbl (#CurrentRow,#StartCol)
    graphic (#CurrentRow, 9, 32)  horz-line 5
    print $RefNo_lbl (#CurrentRow,47)
    alter-printer font = #HeadingFont point-size = #PntSize10
    print $TitleLeft_3_lbl (#CurrentRow,59)
    add 1 to #CurrentRow
    graphic (#CurrentRow, 9, 32)  horz-line 5


     Let #CurrentRow = 3
    alter-printer font = #StdFont point-size = #StdPntSize
    print $Registered_Name (#CurrentRow,13)
    do Print_Field_Num($Ref_No,#CurrentRow,61,100)




    add 3 to #currentRow
    graphic (#CurrentRow, 2,100) box 4 4 15!25 !********************
    add 1 to #CurrentRow


    alter-printer font = #HeadingFont point-size = #PntSize9
    print $PartBHead1_lbl (#CurrentRow,8)bold
    add 1 to #CurrentRow
    if $curr_language_cd = 'ENG'
        print $PartBHead2_lbl (#CurrentRow,33)bold
    else
        print $PartBHead2_lbl (#CurrentRow,31)bold
    end-if

! Printing the Part-B data

    add 2 to #CurrentRow
   graphic                     (#CurrentRow, 17, 48) vert-line
   graphic                     (#CurrentRow, 45, 48) vert-line
   graphic                     (#CurrentRow, 73, 48) vert-line


   add 1 to #CurrentRow
       alter-printer font = #HeadingFont point-size = #PntSize8
   graphic                     (#CurrentRow, 2,100) box 48

   Print 'B1' (#currentRow,30) Bold
   print 'B2' (#currentRow,58) Bold
   Print 'B3' (#currentRow,86) Bold
   add 1 to #currentRow
   graphic                     (#currentRow, 2, 100) horz-line

   add 2 to #currentRow

   if $curr_language_cd = 'ENG'

   Print 'Month' (#currentRow,5)
   Print 'Total gross remuneration(excluding' (#currentRow,20)
   Print 'Total gross remuneration subject' (#currentRow,48)
   Print 'Total income tax to be deducted as' (#currentRow,76)
   add 1 to #currentRow
   Print 'Benefits-in-kind and value of living' (#currentRow,20)
   Print 'To the Income Tax Rules'      (#currentRow,48)
   Print 'Required under the Income Tax Rules' (#currentRow,76)
   add 1 to #currentRow
   Print 'Accomodation provided)' (#currentRow, 20)
   Print '(Deduction from Remuneration)' (#currentRow,48)
   Print '(Deduction from Remuneration)1994'(#currentRow,76)
   add 1 to #currentRow
   Print '1994' (#currentRow,48)

   else

   Print 'Bulan' (#currentRow,5)
   Print 'Jumlah Saraan Kasar(tidak'(#currentRow,20)
   Print 'Jumlah saraan kasar yang' (#currentRow,48)
   Print 'Jumlah cukai pendapatan yang patut' (#currentRow,76)
   add 1 to #currentRow
   Print 'termasuk manfaat berupa' (#currentRow,20)
   Print 'tertakluk kepada kaedah-kaedah' (#currentRow,48)
   print 'dipotong di bawah kaedah-kaedah'(#currentRow,76)

   add 1 to #currentRow
   Print 'barangan dan nilai tempat' (#currentRow, 20)
   print 'cukai pendapatan (potongan'(#currentRow,48)
   print 'Cukai Pendapatan (Potongan' (#currentRow,76)


   add 1 to #currentRow

   Print 'kediaman)' (#currentRow, 20)
   Print 'daripada Saraan)1994' (#currentRow,48)
   Print 'daripada Saraan)1994' (#currentRow,76)


   end-if

   add 1 to #currentRow
   graphic                       (#currentRow, 2, 100) horz-line




   let #J = 0

   let #Total_Earnings = 0
   let #Total_Gross = 0
   let #Total_Tax = 0

   while #J < 12
     get $Month #Earnings #Gross #Tax  from Totals(#J) Month_Name Total_Earns1 Total_Gross1 Total_Taxes1


     add 3 to #currentrow

     print $Month              (#currentrow, 5)
     print #Earnings           (0, 20, 20) edit 9,999,999,999,999.99
     print #Gross              (0, 48, 20) edit 9,999,999,999,999.99
     print #Tax                (0, 76, 20) edit 9,999,999,999,999.99

     graphic                   (0, 2, 100) horz-line
     let #J = #J + 1
     let #Total_Earnings = #Total_Earnings + #Earnings
     let #Total_Gross = #Total_Gross + #Gross
     let #Total_Tax = #Total_Tax + #Tax
   end-while

     add 2 to #currentrow



   print $total_lbl (#currentrow, 5) BOLD
   print #Total_Earnings       (0, 20, 20) edit 9,999,999,999,999.99
   print #Total_Gross          (0, 48, 20) edit 9,999,999,999,999.99
   print #Total_Tax            (0, 76, 20) edit 9,999,999,999,999.99

   add 5 to #currentRow

    graphic (#currentRow, 2,4) box 1
    print 'B7' (#CurrentRow,3) bold
    add -1 to #currenRow
    if $curr_language_cd  = 'ENG'
    Print 'Total Income tax deducted under the Income Tax Rules'(#currentRow,10)
    add 1 to #currentRow
    Print '(Deduction from Remuneration)1994 in respect of the' (#currentRow,10)
    add 1 to #currentRow
    Print 'granting of shares to employees and remitted to LHDNM' (#currentRow,10)

    add -1 to #currentRow



    do Print_Field_Num($shares,#CurrentRow,52,100)

    else
    print 'Jumlah cukai pendapatan yang dipotong di bawah kaedah-kaedah' (#currentRow,8)

    add 1 to #currentRow
    print 'Cukai pendapatan (potongan daripada saraan) 1994 berkaitan skim'(#currentRow,8)

    add 1 to #currentRow

    print 'pemberian saham kepada pekerja dan diremitkan kepada LHDNM' (#currentRow,8)

    add -1 to #currentRow

    do Print_Field_Num($shares,#CurrentRow,52,100)

    end-if




end-procedure
begin-procedure Print-PartB2
    new-page

    Let #CurrentRow = 3
    alter-printer font = #StdFont point-size = #StdPntSize
    print $PartBName_lbl (#CurrentRow,#StartCol)
    graphic (#CurrentRow, 9, 32)  horz-line 5
    print $RefNo_lbl (#CurrentRow,47)
    alter-printer font = #HeadingFont point-size = #PntSize10
    print $TitleLeft_3_lbl (#CurrentRow,59)
    add 1 to #CurrentRow
    graphic (#CurrentRow, 9, 32)  horz-line 5


     Let #CurrentRow = 3
    alter-printer font = #StdFont point-size = #StdPntSize
    print $Registered_Name (#CurrentRow,13)
    do Print_Field_Num($Ref_No,#CurrentRow,61,100)




    add 3 to #currentRow
    graphic (#CurrentRow, 2,100) box 4 4 15!25 !********************
    add 1 to #CurrentRow


    alter-printer font = #HeadingFont point-size = #PntSize9
    print $PartBHead1_lbl (#CurrentRow,8)bold
    add 1 to #CurrentRow
    if $curr_language_cd = 'ENG'
        print $PartBHead2_lbl (#CurrentRow,33)bold
    else
        print $PartBHead2_lbl (#CurrentRow,31)bold
    end-if

! Printing the Part-B data

    add 2 to #CurrentRow
   graphic                     (#CurrentRow, 28, 50) vert-line
   graphic                     (#CurrentRow, 45, 50) vert-line
   graphic                     (#CurrentRow, 72, 50) vert-line


   add 1 to #CurrentRow
       alter-printer font = #HeadingFont point-size = #PntSize8
   graphic                     (#CurrentRow, 2,100) box 50

   Print 'B4' (#currentRow,14) Bold
   print 'B5' (#currentRow,58) Bold
   Print 'B6' (#currentRow,86) Bold
   add 1 to #currentRow
   graphic                     (#currentRow, 2, 100) horz-line

   add 2 to #currentRow

   if $curr_language_cd = 'ENG'

   Print 'Total Income tax deducted under the' (#currentRow,4)
   Print 'No of Payments'   (#currentRow,31)
   Print 'Total Zakat deducted and remitted' (#currentRow,48)
   Print 'Receipt No' (#currentRow,82)


   add 1 to #currentRow
   Print 'Income Tax Rules (Deduction from' (#currentRow,4)
   Print 'Made in one'      (#currentRow,32)
   Print 'to Pusat Pungutan Zakat' (#currentRow,48)
   Print '(If payment is made more than once in one' (#currentRow,74)
   add 1 to #currentRow
   Print 'Remuneration) 1994 and remitted to' (#currentRow, 4)
   Print 'Month' (#currentRow, 33)
   Print 'month,enter the receipt no. for the largest'(#currentRow,74)
   add 1 to #currentRow
   Print 'LHDNM' (#currentRow,4)
   Print 'Enter:'(#currentRow,31)
   Print 'amount only)'(#currentRow, 74)
   add 1 to #currentRow
   Print '1 = once' (#currentRow,31)
   add 1 to #currentRow
   Print '2 = twice' (#currentRow, 31)
   add 1 to #currentRow
   Print '3 = thrice & above' (#currentRow,31)

   else

   Print 'Jumlah cukai pendapatan yang' (#currentRow,4)
   Print 'Bilangan' (#currentRow,33)
   Print 'Jumlah Potongan Zakat yang diremit'(#currentRow,47)
   Print 'No.Resit' (#currentRow,82)
   add 1 to #currentRow
   Print 'dipotong di bawah kaedah-kaedah' (#currentRow,4)
   Print 'bayaran dibuat' (#currentRow,32)
   Print 'Kepada Pusat Pungutan Zakat' (#currentRow,47)
   print '(Jika bayaran dibuat lebih dari sekali dalam'(#currentRow,73)

   add 1 to #currentRow
   Print 'Cukai Pendapatan (Potongan' (#currentRow, 4)
   Print 'dalam sebulan' (#currentRow, 32)
   print 'Sebulan, isikan no.resit bagi jumlah bayaran' (#currentRow,73)



   add 1 to #currentRow
   Print 'daripada Saraan)1994 dan diremit' (#currentRow, 4)
   Print 'lsi: 1= 1 kali' (#currentRow, 32)
   Print 'yang terbesar sahaja)' (#currentRow,73)

   add 1 to #currentRow
   Print 'Kepada LHDNM' (#currentRow, 4)
   Print '2 = 2 Kali' (#currentRow,34)
   add 1 to #currentRow
   Print '3 = 3 Kali &' (#currentRow,34)
   add 1 to #currentRow
   Print 'seterusnya' (#currentRow, 34)


   end-if
   add 1 to #currentRow


   graphic                       (#currentRow, 2, 100) horz-line



   let #J = 0

   let #Total_Remitted = 0
   let #Total_Zakat = 0



   while #J < 12
     get #Remitted #no_rcpts #Zakat #receipt_nbr  from Totals(#J)Total_Remitted1 no_of_rcpts Total_Zakat1 Receipt_Nbr


     add 3 to #currentRow

     if #no_rcpts > 0
     do Format-Number(#no_rcpts,$norcpts, '9')
     print $norcpts            (#currentRow, 40)

     end-if

     if  #receipt_nbr > 0
     do Format-Number(#receipt_nbr,$receiptnbr,'9999999999')
     print $receiptnbr               (#currentRow, 76)
     end-if

     print #Remitted           (#currentRow, 5,20) edit 9,999,999,999,999.99



     print #Zakat              (0, 48, 20) edit 9,999,999,999,999.99


     graphic                   (0, 2, 100) horz-line
     let #J = #J + 1
     let #Total_Remitted = #Total_Remitted + #Remitted
     let #Total_Zakat = #Total_Zakat + #Zakat

   end-while

     add 2 to #currentrow

   print #Total_Remitted       (#currentrow, 5, 20 ) edit 9,999,999,999,999.99
   print #Total_Zakat          (0, 48, 20) edit 9,999,999,999,999.99




end-procedure



!***********************************************************************
!  Procedure: Print-PartC                                              *
!             Prints Part-C of the form                                *
!***********************************************************************
begin-procedure Print-PartC

    Let #CurrentRow = 7
    graphic (#CurrentRow, 2,100) box 3 4 15!25           ! *****************
    add 1 to #CurrentRow
    alter-printer font = #HeadingFont point-size = #PntSize9
    print $PartCHead_lbl (#CurrentRow,8)bold

    alter-printer font = #StdFont point-size = #StdPntSize
    add 4 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print 'C1' (#CurrentRow,3) bold
    print $PartC1_lbl (#CurrentRow,7)
    graphic (#CurrentRow, 69,3) box 1 10     ! Yes/No            ! *************
    print $PartC_YN_lbl (#CurrentRow,77)
    add 2 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print 'C2' (#CurrentRow,3) bold
    print $PartC2_lbl (#CurrentRow,7)
    graphic (#CurrentRow, 69,3) box 1 10     ! Yes/No      ! **************
    print $PartC_YN_lbl (#CurrentRow,77)
    add 1 to #CurrentRow

    let #col_tmp = #StartCol + 2
    !print $PartC_2_1_lbl (#CurrentRow,#col_tmp)
    if $curr_language_cd = 'ENG'
        print '(If C1 = 1)' (#CurrentRow,7)
    end-if

    ! data
     !Let #CurrentRow = 13
     subtract 3 from #CurrentRow
     print $PartC_A (#CurrentRow,70)

     add 2 to #CurrentRow

     if($PartC_A = '1')
         print $PartC_B (#CurrentRow,70)
     end-if


end-procedure





!***********************************************************************
!  Procedure: Print-PartD                                              *
!             Prints Part-D of the form                                *
!***********************************************************************
begin-procedure Print-PartD

! Printing the Part-D text

    if $curr_language_cd = 'ENG'
        Let #CurrentRow = 18
    else
        Let #CurrentRow = 17
        end-if

    graphic (#CurrentRow, 2,100) box 3 4 15!25        !  ****************
    add 1 to #CurrentRow
    alter-printer font = #HeadingFont point-size = #PntSize9

    print $PartDHead_lbl (#CurrentRow,8)bold
    if $curr_language_cd = 'ENG'
    else
        print $PartDHead2_lbl (#CurrentRow,46)bold
    end-if

    add 4 to #CurrentRow
    alter-printer font = #StdFont point-size = #StdPntSize
    graphic (#CurrentRow, 2,4) box 1
    print 'D1' (#CurrentRow,3) bold
    print $CorrAddress_lbl (#CurrentRow,7)
    add 6 to #CurrentRow

    IF $curr_language_cd = 'ENG'
        print $PostCode_lbl (#CurrentRow,17)
        print $Town_lbl (#CurrentRow,49)
        add 2 to #CurrentRow
        print $State1_lbl (#CurrentRow,20)
    else
        print $PostCode_lbl (#CurrentRow,17)
        print $Town_lbl (#CurrentRow,49)
        add 2 to #CurrentRow
        print $State1_lbl (#CurrentRow,17)
    end-if


    add 2 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print 'D2' (#CurrentRow,3) bold
    print $TelNo_lbl (#CurrentRow,7)
    add 2 to #CurrentRow
    graphic (#CurrentRow, 2,4) box 1
    print 'D3' (#CurrentRow,3) bold
    print $Email_lbl (#CurrentRow,7)

! Printing the Part-D data

    if $curr_language_cd = 'ENG'
        let #CurrentRow = 23
    else
        let #CurrentRow = 22
    end-if

    alter-printer font = #StdFont point-size = #StdPntSize
    do Print_Address($ADDRESS,#CurrentRow,25,100)
    add 6 to #CurrentRow
    do Print_Field($POSTAL,#CurrentRow,25,40)
    do Print_Field($CITY,#CurrentRow,55,100)
    add 2 to #CurrentRow
    do Print_Field($STATE,#CurrentRow,25,100)
    add 2 to #CurrentRow
    do Print_Field($Phone,#CurrentRow,25,64)
    add 2 to #CurrentRow
    do Print_Field($Email,#CurrentRow,25,100)

end-procedure



!***********************************************************************
!  Procedure: Print-PartB_New                                             *
!             Prints Part-B of the form                                *
!***********************************************************************
begin-procedure Print-PartB_New

! Printing the Part-E text

    if $curr_language_cd = 'ENG'
        Let #CurrentRow = 25            !19
    else
        Let #CurrentRow = 23            !17
    end-if

    graphic (#CurrentRow, 2,100) box 3 4 15!25        !  ***********
    add 1 to #CurrentRow                !20
    alter-printer font = #HeadingFont point-size = #PntSize9
    print $PartBHead_lbl (#CurrentRow,8)bold

    if $curr_language_cd = 'ENG'
    else
        !print $PartEHead2_lbl (#CurrentRow,51)bold
        print $PartBHead2_lbl (#CurrentRow,51)bold
    end-if

    add 4 to #CurrentRow                !24
    alter-printer font = #StdFont point-size = #StdPntSize
    !print $PartE_I_lbl (#CurrentRow,2)
    print $PartB_I_lbl (#CurrentRow,2)
    add 4 to #CurrentRow                !28
    print $IDNo_PassportNo_lbl (#CurrentRow,2)
    add 1 to #CurrentRow                !29
    print $ArmyNo_lbl (#CurrentRow,2)
    add 1 to #CurrentRow                !30

     print $Del_lbl (#CurrentRow,2)

    add 2 to #CurrentRow

    if $curr_language_cd = 'ENG'
       print $Decl_1_lbl (#CurrentRow,2)
       print $Decl_2_lbl (#CurrentRow,65)
    else
       print $Decl_1_lbl (#CurrentRow,2)
       add 1 to #CurrentRow
       print $Decl_2_lbl (#CurrentRow,2)
    end-if

    add 3 to #CurrentRow
    print $Date_lbl (#CurrentRow,64)
    graphic (#CurrentRow, 69,6) box 1 10
    let #VertLine = #CurrentRow - 1
    graphic (#VertLine, 72, 1)  vert-line 1
    print ' --' (#CurrentRow,76)bold
    graphic (#CurrentRow, 78,6) box 1 10
    graphic (#VertLine,81, 1)  vert-line 1
    print ' --' (#CurrentRow,85)bold
    graphic (#CurrentRow, 87,12) box 1 10
    graphic (#VertLine, 90, 1)  vert-line 1
    graphic (#VertLine, 93, 1)  vert-line 1
    graphic (#VertLine, 96, 1)  vert-line 1
    !graphic (#CurrentRow, 76, 20)  horz-line 5  ! signature      !  *******************
    !graphic (#CurrentRow, 47, 20)  horz-line 5  ! designation      !  ********

    if $curr_language_cd = 'ENG'
    print $Signature_lbl (#CurrentRow,2)
    else
    print $Signature_lbl (#CurrentRow,2)

    end-if

    graphic (#CurrentRow, 16,24) box 4


    add 1 to #CurrentRow
    alter-printer font = #StdFont point-size = 6
    if $curr_language_cd = 'ENG'
        print $Day_lbl (#CurrentRow,71)
        print $Month_lbl (#CurrentRow,80)
        print $Year_lbl (#CurrentRow,92)
        alter-printer font = #StdFont point-size = #StdPntSize

        !print $Designation_lbl (#CurrentRow,82)
    else

        print $Day_lbl (#CurrentRow,71)
        print $Month_lbl (#CurrentRow,80)
        print $Year_lbl (#CurrentRow,92)
        alter-printer font = #StdFont point-size = #StdPntSize

        !print $Designation_lbl (#CurrentRow,83)
    end-if

    add 4 to #currentRow
    print $Designation_lbl (#CurrentRow,2)

   do Print_Name($designation,#CurrentRow,16,100)

    !add 1 to #CurrentRow
    !graphic (#CurrentRow,2,100)  horz-line 10
    !IF $curr_language_cd = 'ENG'
    !    let $Office_Use_Label = 'For Office Use Only'
     !   let $Office_Use_Label = ltrim(rtrim($Office_Use_Label,' '),' ')
      !  let $date_received_label = 'Date received'
       ! let $date_received_label = ltrim(rtrim($date_received_label,' '),' ')
        !let $date_processed_label = 'Date processed'
       ! let $date_processed_label = ltrim(rtrim($date_processed_label,' '),' ')
        !let $Status_of_assessment_label = 'Status of assessment'
        !let $Status_of_assessment_label = ltrim(rtrim($Status_of_assessment_label,' '),' ')
    !else
     !  let $Office_Use_Label = 'Untuk Kegunaan Pejabat'
      ! let $date_received_label = 'Tarikh terima'
      ! let $date_processed_label = 'Tarikh proses'
      ! let $Status_of_assessment_label = 'Status taksiran'
   !end-if

    !add 2 to #CurrentRow
    !alter-printer font = #HeadingFont point-size = #StdPntSize
    !print $Office_Use_Label (#CurrentRow,2) bold

    !add 2 to #CurrentRow

    !graphic (#CurrentRow, 2,89) box 3 4
    !let #VertLine = #CurrentRow - 1
    !graphic (#VertLine, 33,3)  vert-line 1
    !graphic (#VertLine, 63,3)  vert-line 1      !*******

   ! add 3 to  #CurrentRow
    !alter-printer font = #StdFont point-size = #StdPntSize
    !print $date_received_label (#CurrentRow,12)
    !print $date_processed_label (#CurrentRow,43)
    !print $Status_of_assessment_label (#CurrentRow,72)

! Printing the Part-B data

    IF $curr_language_cd = 'ENG'
        Let #CurrentRow = 30
    else
        Let #CurrentRow = 28
    end-if

    do Print_Name($Employer_Name,#CurrentRow,10,100)
    add 4 to #CurrentRow
    do Print_Field_Num($New_Ic_Nbr,#CurrentRow,28,70)

end-procedure

!***********************************************************************
! Function:    Print_Reminder                                          *
!                                                                      *
! Description: Prints the reminder section                             *
!***********************************************************************
begin-procedure Print-Reminder

    new-page
    Let #CurrentRow = 3
    graphic (#CurrentRow, 8,90) box 20 20
    alter-printer font = #HeadingFont point-size = #PntSize9

    add 2 to #CurrentRow
    if $curr_language_cd = 'ENG'
        print $RemHead_lbl (#CurrentRow , 45) BOLD
    else
        print $RemHead_lbl (#CurrentRow , 45) BOLD
    end-if
    add 2 to #CurrentRow
    !alter-printer font = #StdFont point-size = #StdPntSize
    alter-printer font = #StdFont point-size = #PntSize9
    if $curr_language_cd = 'ENG'
        print $Rem_1_lbl (#CurrentRow , 14)
        print '....................................' (#CurrentRow , 40)
        print $Rem_content_lbl (#CurrentRow , 44)
        print $Rem_2_lbl (#CurrentRow , 58)
        print '....................................' (#CurrentRow , 62)
        print $Rem_3_lbl (#CurrentRow , 78)
    else
        print $Rem_1_lbl (#CurrentRow , 14)
        print '....................................' (#CurrentRow , 40)
        print $Rem_content_lbl (#CurrentRow , 42)
        print $Rem_2_lbl (#CurrentRow , 58)
        print '....................................' (#CurrentRow , 66)
        print ' , ' (#CurrentRow , 86)
        !print $Rem_3_lbl (#CurrentRow , 86)
    end-if

    add 1 to #CurrentRow
    if $curr_language_cd = 'ENG'
        print $Rem_4_lbl (#CurrentRow , 14)
        print $Rem_5_lbl (#CurrentRow , 64)
    else
        print $Rem_4_lbl (#CurrentRow , 14)
    end-if
    add 1 to #CurrentRow
    if $curr_language_cd = 'ENG'
        print $Rem_6_lbl (#CurrentRow , 14)
    else
        print $Rem_5_lbl (#CurrentRow , 14)
    end-if

    add 2 to #CurrentRow
    if $curr_language_cd = 'ENG'
        print $Rem_Add1 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add2 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add3 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add4 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add5 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add6 (#CurrentRow ,38) bold
    else
        print $Rem_Add1 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add2 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add3 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add4 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add5 (#CurrentRow ,38) bold
        add 1 to #CurrentRow
        print $Rem_Add6 (#CurrentRow ,38) bold
    end-if
end-procedure

!***********************************************************************
! Function:    Print_Field                                             *
!                                                                      *
! Description: Prints the field in box                                 *
!***********************************************************************

begin-procedure Print_Field($Field,#Row,#Col,#Col_End)

    let $field =  ltrim(rtrim($field,' '),' ')
    let #length_of_field = (length($Field) )
    let #pos = 1
    let $char = substr($Field,1,1)
    let #Col1 = #Col - 3
    let #length_of_box = #Col_End - #Col

    !alter-printer point-size = 11
    graphic (#Row, #Col, #length_of_box) box 1 10            !**********************

    let #Col = #Col + 1
    !while $char <> ''
    while #Col1 < #Col_End
        print $char (#Row,#Col)
        let #Col = #Col + 3
        let #Col1 = #Col1 + 3
        let #VertLine =  #Row - 1
        graphic (#VertLine, #Col1,1)  vert-line 1    !  ****************
        let #pos = #pos + 1
        let $char = substr($Field,#pos,1)
    end-while

end-procedure



!***********************************************************************
! Function:    Print_Address                                           *
!                                                                      *
! Description: Prints the address                                      *
!***********************************************************************

begin-procedure Print_Address($ADDRESS,#Row,#Col,#Len)
    ! graphic () font #StdFont #StdPntSize

    !subtract 1 from #Col
    let $Address = ltrim(rtrim($Address,' '),' ')
    let #len_of_add = length($Address)
    let #max_size = (#len - #col)/3

    if ( (#len_of_add ) > #max_size)

        let #temp = (#max_size) !+1
        !let $temp = substr($Address,#temp,1)
        !while ($temp <> ' ')   ! extracting address for 1st line
        !    let $temp = substr($Address,#temp,1)
        !    let #temp = #temp - 1
        !end-while
        let $Add1 = substr($Address,0,#temp)   ! extracting address for 1st line
        let $Add1 = ltrim(rtrim($Add1,' '),' ')
        do Print_field($Add1,#Row,#Col,#Len)

        add 2 to #Row
        let #temp = #temp + 1
        !let $temp = substr($Address,#temp,#len_of_add)
        let #len_of_add = length($Address)
        let $Address = substr($Address,#temp,#len_of_add)
        let $Address = ltrim(rtrim($Address,' '),' ')

        let #len_of_add = length($Address)
        let #temp = (#max_size) !+1

        if ( (#len_of_add) > #max_size)  ! extracting the 2nd line of addrtess
         !   let $temp = substr($Address,#temp,1)
         !   while ($temp <> ' ')
           !     let $temp = substr($Address,#temp,1)
           !     let #temp = #temp - 1
           ! end-while
            let $Add2 = substr($Address,0,#temp)   ! extracting address for 1st line
            let $Add2 = ltrim(rtrim($Add2,' '),' ')
            do Print_field($Add2,#Row,#Col,#Len)

            let #temp = #temp + 1

            let #len_of_add = length($Address)
            let $Address = substr($Address,#temp,#len_of_add)
            let $Address = ltrim(rtrim($Address,' '),' ')
            let $Add3 = substr($Address,0,#max_size)   !extracting line 3 od address
            let $Add3 = ltrim(rtrim($Add3,' '),' ')

            add 2 to #Row
            do Print_field($Add3,#Row,#Col,#Len)

        else
            do Print_field($Address,#Row,#Col,#Len)
            add 2 to #Row
            do print_field_3(#Row,#Col,#Len)
        end-if

    else
        do Print_field($Address,#Row,#Col,#Len)
        add 2 to #Row
        do print_field_3(#Row,#Col,#Len)
        add 2 to #Row
        do print_field_3(#Row,#Col,#Len)

   end-if

end-procedure



!***********************************************************************
! Function:    Print_Field_3                                             *
!                                                                      *
! Description: Prints the field in box                                 *
!***********************************************************************

begin-procedure Print_Field_3(#Row,#Col,#Col_End)


     let #length_of_box = #Col_End - #Col
     graphic (#Row, #Col, #length_of_box) box 1 10         ! *************
     let #VertLine =  #Row - 1

      while #Col < #Col_End
        let #Col = #Col + 3
      graphic (#VertLine, #Col,1)  vert-line 1    !***********
     end-while

end-procedure



!***********************************************************************
! Function:    Print_Field_Num                                             *
!                                                                      *
! Description: Prints the field in box                                 *
!***********************************************************************

begin-procedure Print_Field_Num($field,#Row,#Col,#Col_End)

    do Print_Field_3(#Row,#Col,#Col_End)

    let $field =  ltrim(rtrim($field,' '),' ')
    let #length_of_field = (length($field) * 3 )
    let #index1 = #length_of_field / 3
    let #pos = 1
    let $char = substr($field,1,1)
    let #length_of_box = #Col_End - #Col
    let #Start_Col = #Col + #length_of_box - #length_of_field + 1


    while #pos <= #index1

        print $char (#Row,#Start_Col)
        let #Start_Col = #Start_Col + 3
        let #pos = #pos + 1
        let $char = substr($Field,#pos,1)
    end-while

end-procedure



!***********************************************************************
! Function:    Get_Translat_Info                                       *
!                                                                      *
! Description: Gets the strings printed in this report                 *
!              (Initilized using Init-Report)                          *
!***********************************************************************

begin-procedure Get_Translat_Info
IF $curr_language_cd = 'ENG'

   do Get_Field_Information ('GPMYTX09', 'GPMYTX09_TITLE1',      $TitleMain_1_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'GPMYTX09_TITLE2',      $TitleMain_2_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'GPMYTX09_TITLE3',      $TitleMain_3_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'GPMYTX09_TITLE4',      $TitleMain_4_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'CP_8_PIN',             $TitleLeft_1_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'FORM',                 $TitleLeft_2_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'E',                    $TitleLeft_3_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'REMUN_FOR',            $TitleRight_1_lbl,    #DW)
   do Get_Field_Information ('GPMYTX09', 'EMPLOYER1',            $NameOfEmplr_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'EMPLOYER1_2',          $NameOfEmplr_1_lbl,     #DW)

   do Get_Field_Information ('GPMYTX09', 'REF_NBR',              $RefNo_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'STATUS',               $Status_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'USE_STAT_CODE',        $StatusCode_lbl,      #DW)
   do Get_Field_Information ('GPMYTX09', 'TAX_REF_NBR',          $TaxRefNo_lbl,        #DW)
   do Get_Field_Information ('GPMYTX09', 'TAX_REF_NBR_1',        $TaxRefNo1_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'TAX_REF_NBR_2',        $TaxRefNo2_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'TAX_REF_NBR_3',        $TaxRefNo3_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'NEW_ID',               $NewID_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'CARD_NBR',             $CardNo_lbl,          #DW)   ! 5_1 & 6_1
   do Get_Field_Information ('GPMYTX09', 'OLD_ID',               $OldID_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'PASSPORT_NBR',         $PassportNo_lbl,      #DW)
   do Get_Field_Information ('GPMYTX09', 'REG_NBR',              $RegNo_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'COMPANY',              $OfCompany_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'COOP_SOC',             $OpSoc_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'MYS_OTH',              $Mys_othlbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'OFFICE_USE',           $OffUse_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'PARTA_HEADING',        $PartAHead_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'NBR_EMP',              $NoOfEmp_lbl,         #DW)
   do Get_Field_Information ('GPMYTX09', 'STD_SCHEME',           $NoOfEmpSTD_lbl,      #DW)
   do Get_Field_Information ('GPMYTX09', 'NBR_NEW_EMP',          $NoOfNewEmp_lbl,      #DW)
   do Get_Field_Information ('GPMYTX09', 'CEASE_EMP',            $NoOfCesdEmp_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'PARTB_HEADING1',       $PartBHead1_lbl,      #DW)
   do Get_Field_Information ('GPMYTX09', 'DED_FRM_REMUN_2',       $PartBHead2_lbl,      #DW)
   do Get_Field_Information ('GPMYTX09', 'TOT_GROS_REMUN',       $Total_Gross_Remuneration_lbl,             #DW)
   do Get_Field_Information ('GPMYTX09', 'TOT_GROSS_REMUN_2',    $Total_Gross_Remun_ITR_lbl,                #DW)
   do Get_Field_Information ('GPMYTX09', 'RULES',                $Total_Gross_Remun_ITR2_lbl,               #DW)
   do Get_Field_Information ('GPMYTX09', 'TOT_IT_DED',           $Total_Income_Tax_ITR_lbl,                 #DW)
   do Get_Field_Information ('GPMYTX09', 'DED_FRM_REMUN',        $Total_Income_Tax_ITR2_lbl,                #DW)
   do Get_Field_Information ('GPMYTX09', 'TOT_IT_DED_REMIT',     $IRB_lbl,             #DW)
   do Get_Field_Information ('GPMYTX09', 'TOT_ZAKAT_DED',        $ZAKAT_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'NAME',                 $PartBName_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'PARTC_HEADING',        $PartCHead_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'EMP_CEASE',            $PartC1_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'CEASE_RPT',            $PartC2_lbl,          #DW)

   do Get_Field_Information ('GPMYTX09', 'CEASE_RPT_A',          $PartC3_lbl,          #DW)

   do Get_Field_Information ('GPMYTX09', 'YES_NO1',              $PartC_YN_2bl,        #DW)

   do Get_Field_Information ('GPMYTX09', 'YES_NO',               $PartC_YN_lbl,        #DW)
   do Get_Field_Information ('GPMYTX09', 'IF_A',                 $PartC_2_1_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'PARTD_HEADING',        $PartDHead_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'CORR_ADDY',            $CorrAddress_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'POSTCODE',             $PostCode_lbl,        #DW)
   do Get_Field_Information ('GPMYTX09', 'TOWN',                 $Town_lbl,            #DW)
   do Get_Field_Information ('GPMYTX09', 'STATE',                $State1_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'TEL_NBR',              $TelNo_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'EMAIL',                $Email_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'PARTB_HEADING',        $PartBHead_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'I',                    $PartB_I_lbl,         #DW)
   do Get_Field_Information ('GPMYTX09', 'ID_PSSPRT_NBR',        $IDNo_PassportNo_lbl, #DW)
   do Get_Field_Information ('GPMYTX09', 'POLICE_ARMY_NBR',      $ArmyNo_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'DECL_INFO',            $Decl_1_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'DECL_INFO_2',          $Decl_2_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'PARTE_4_2',            $Decl_3_lbl,          #DW)
   do Get_Field_Information ('GPMYTX09', 'DATE',                 $Date_lbl,            #DW)
   do Get_Field_Information ('GPMYTX09', 'DAY',                  $Day_lbl,             #DW)
   do Get_Field_Information ('GPMYTX09', 'MONTH',                $Month_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'YEAR',                 $Year_lbl,            #DW)
   do Get_Field_Information ('GPMYTX09', 'SIGNATURE',            $Signature_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'DESIGNATION',          $Designation_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_HEADING',          $RemHead_lbl,         #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_INFO',             $Rem_1_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_INFO1',            $Rem_2_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_INFO2',            $Rem_3_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_INFO3',            $Rem_4_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_INFO5',            $Rem_5_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_INFO4',            $Rem_6_lbl,           #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_CONTENT',          $Rem_content_lbl,     #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_ADDRESS1',         $Rem_Add1,            #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_ADDRESS2',         $Rem_Add2,            #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_ADDRESS3',         $Rem_Add3,            #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_ADDRESS4',         $Rem_Add4,            #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_ADDRESS5',         $Rem_Add5,            #DW)
   do Get_Field_Information ('GPMYTX09', 'REM_ADDRESS6',         $Rem_Add6,            #DW)
   do Get_Field_Information ('GPMYTX09', 'DEL_NOT_REQ',          $Del_lbl,             #DW)
   do Get_Field_Information ('GPMYTX09', 'RCPT_NBR',             $Rcpt_Nbr_Lbl,        #DW)
       do Get_Field_Information ('GPMYTX09', 'JAN',     $Jan_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'FEB',     $Feb_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'MAR',     $Mar_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'APR',     $Apr_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'MAY',     $May_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'JUNE',     $Jun_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'JULY',     $Jul_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'AUG',     $Aug_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'SEP',     $Sep_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'OCT',     $Oct_Lbl,     #DW)
        do Get_Field_Information ('GPMYTX09', 'NOV',     $nov_Lbl,     #DW)
       do Get_Field_Information ('GPMYTX09', 'DEC',     $Dec_Lbl,     #DW)
        do Get_Field_Information ('GPMYTX09', 'TOT',    $total_lbl,     #DW)

ELSE

   let $TitleMain_1_lbl   = 'LEMBAGA HASIL DALAM NEGERI MALAYSIA'
   let $TitleMain_2_lbl   = 'Borang ini ditetapkan di bawah seksyen 152 Akta Cukai Pendapatan 1967'
   let $TitleMain_3_lbl   = 'PENYATA OLEH MAJIKAN'
   Let $TitleMain_4_lbl   = 'Dl BAWAH SUBSEKSYEN 83(1) AKTA CUKAI PENDAPATAN 1967'
   let $TitleLeft_1_lbl   = 'CP 8-Pin. 2009'
   let $TitleLeft_2_lbl   = 'Borang'
   let $TitleLeft_3_lbl   = 'E'
   let $TitleRight_1_lbl  = 'SARAAN BAGI TAHUN'
   let $NameOfEmplr_lbl   = 'Nama Majikan'
   let $NameOfEmplr_1_lbl = 'Seperti Didaftarkan'
   let $RefNo_lbl         = 'No. Rujukan'
   let $Status_lbl        = 'Status'
   let $StatusCode_lbl    = '(gunakan kod status)'
   let $TaxRefNo_lbl      = 'No. Rujukan'

   do Get_Field_Information ('GPMYTX09', 'TAX_REF_NBR_1',        $TaxRefNo1_lbl,       #DW)
   let $TaxRefNo2_lbl     = '02=OG    04=C    06=F    08=TA    10=CS    12=Lain-Lain'
   !do Get_Field_Information ('GPMYTX09', 'TAX_REF_NBR_2',        $TaxRefNo2_lbl,       #DW)
   do Get_Field_Information ('GPMYTX09', 'TAX_REF_NBR_3',        $TaxRefNo3_lbl,       #DW)

   let $NewID_lbl         = 'No. K/P Baru'

   let $OldID_lbl         = 'No. K/P'
   let $OldID_lbl1        = 'Lama'
   let $PassportNo_lbl    = 'No. Pasport'
   let $RegNo_lbl         = 'No. Pendaftaran'
   let $OfCompany_lbl     = 'Dengan SSM'
   let $OpSoc_lbl         = 'Atau Lain-Lain'
   let $OffUse_lbl        = 'Untuk Kegunaan Pejabat'
   let $PartAHead_lbl     = 'BAHAGIAN A:        MAKLUMAT BILANGAN PEKERJA BAGI TAHUN BERAKHIR 31 DISEMBER'
   let $NoOfEmp_lbl       = 'Bilangan pekerja'
   let $NoOfEmpSTD_lbl    = 'tertakluk '
   let $NoOfEmpSTD2_lbl   = 'kepada PCB'
   let $NoOfNewEmp_lbl    = 'Bilangan pekerja baru'
   let $NoOfCesdEmp_lbl   = 'Bilangan pekerja berhenti'
   let $PartBHead1_lbl    = 'BAHAGIAN B:                     MAKLUMAT MENGENAI POTONGAN CUKAI DI BAWAH KAEDAH-KAEDAH'
   let $PartBHead2_lbl    = 'CUKAI PENDAPATAN (POTONGAN DARIPADA SARAAN)1994'
   let $Total_Gross_Remuneration_lbl = 'Jumlah saraan kasar ( tidak termasuk manfaat berupa'
   let $Total_Gross_Remuneration2_lbl = 'barangan )'
   let $Total_Gross_Remun_ITR_lbl =  'Jumlah saraan kasar yang tertakluk kepada Kaedah Cukai'
   let $Total_Gross_Remun_ITR2_lbl = 'Pendapatan ( potongan daripada saraan )'
   let $Total_Income_Tax_ITR_lbl = 'Jumlah cukai pendapatan yang patut dipotong di'
   let $Total_Income_Tax_ITR2_lbl = 'bawah Kaedah Cukai Pendapatan ( potongan daripada saraan )'
   let $IRB_lbl =   'Jumlah cukai pendapatan yang dipotong dan diremit kepada'
   let $IRB2_lbl = 'LHDNM'
   let $ZAKAT_lbl =   'Jumlah potongan zakat yang diremit kepada Pusat'
   let $ZAKAT2_lbl = 'Pungutan Zakat'
   let $PartBName_lbl = 'Nama'
   let $PartCHead_lbl = 'BAHAGIAN C:     MAKLUMAT PEKERJA YANG BERHENTI KERJA UNTUK MENINGGALKAN MALAYSIA'
   !let $PartC1_lbl =   'Ada pekerja yang berhenti kerja dan meninggalkan Malaysia?'
   !let $PartC2_lbl = 'Telah melaporkan kepada LHDNM? (jika C1 = 1)'
   !let $PartC_YN_lbl =  '1 = Ya    2 = Tidak'
   let $PartC5_lbl = 'Bilangan pekerja yang'
   let $PartC6_lbl = 'berhenti kerja untuk'
   let $PartC7_lbl = 'meninggalkan Malaysia'
   let $PartC2_lbl = 'Telah melaporkan kepada LHDNM?'
   Let $PartC4_lbl = '(Jika A5 berkaitan)'
   let $PartC_YN_lbl =  '1 = Ya'
   let $PartC_YN2_lbl =  '2 = Tidak'

   let $PartDHead_lbl =  'BAHAGIAN D:'
   let $PartDHead2_lbl = 'MAKLUMAT MAJIKAN'
   let $CorrAddress_lbl = 'Alamat Surat-menyurat'
   let $PostCode_lbl =   'Poskod'
   let $Town_lbl =       'Bandar'
   let $State1_lbl =      'Negeri'
   let $TelNo_lbl =       'No. Telefon'
   let $Email_lbl =       'e-mel'
   !let $PartEHead_lbl =    'BAHAGIAN E:'
   let $PartBHead_lbl =    'BAHAGIAN B:'
   let $PartBHead2_lbl = 'AKUAN'
   let $PartB_I_lbl =       'Saya'
   let $IDNo_PassportNo_lbl = 'No. Kad Pengenalan / No. Pasport /'
   let $ArmyNo_lbl = 'No. Polis / No. Tentera*'
   let $Decl_1_lbl =  'dengan ini mengakui bahawa penyata oleh majikan ini mengandungi maklumat yang benar, lengkap dan betul seperti mana yang dikehendaki'
   let $Decl_2_lbl =  'di bawah Akta Cukai Pendapatan 1967.'

   let $RemHead_lbl = 'PERINGATAN'
   let $Rem_1_lbl = 'Menurut kuasa Pemberitahu Warta'
   let $Rem_2_lbl = 'bertarikh'
   let $Rem_4_lbl = 'tuan/puan dikehendaki melengkapkan dan menyerahkan kembali borang ini dalam tempoh yang ditetapkan oleh'
   let $Rem_5_lbl = 'LHDNM ke alamat seperti berikut:'

   let $Date_lbl =   'Tarikh:'
   let $Day_lbl =       'Hari'
   let $Month_lbl =     'Bulan'
   let $Year_lbl =      'Tahun'
   let $Signature_lbl = 'Tandatangan'
   let $Designation_lbl =  'Jawatan'
   let $Del_lbl =   '* Potong yang mana tidak berkenaan'
   let $Office_Use_lbl = 'Untuk Kegunaan Pejabat'
   let $Date_Recv_lbl = 'Tarikh terima'
   let $Date_Proc_lbl = 'Tarikh proses'
   let $Status_Assmnt_lbl = 'Status taksiran'

   let $Rem_Add1 = 'LEMBAGA HASIL DALAM NEGERI MALAYSIA'
   let $Rem_Add2 = 'PUSAT PEMPROSESAN'
   let $Rem_Add3 = 'ARAS 10-18,MENARA C,PERSIARAN MPAJ'
   let $Rem_Add4 = 'JALAN PANDAN UTAMA,PANDAN INDAH'
   let $Rem_Add5 = 'KARUNG BERKUNCI 11054'
   let $Rem_Add6 = '50990 KUALA LUMPUR'
   let $Rem_content_lbl = 'P.U.(A)5'


    Let $Jan_Lbl = 'Januari'
    Let $Feb_Lbl = 'Februari'
    Let $Mar_Lbl = 'Mac'
    Let $Apr_Lbl = 'April'
    Let $May_Lbl = 'Mei'
    Let $Jun_Lbl = 'Jun'
    Let $Jul_Lbl = 'Julai'
    Let $Aug_Lbl = 'Ogos'
    Let $Sep_Lbl = 'September'
    Let $Oct_Lbl = 'Oktober'
    Let $Nov_Lbl = 'November'
    Let $Dec_Lbl = 'Disember'
    Let $total_lbl = 'Jumlah'




 end-if

 end-procedure


begin-Procedure Report-Parm-Clean

begin-sql
DELETE FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP2
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP3
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_RPT_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_PR_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_EMPL_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

end-Procedure
