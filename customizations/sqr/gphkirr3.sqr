!***********************************************************************
!  GPHKIRR3:  IR56E                                                    *
!             Notification by Employer of an Employee commencing work  *
!***********************************************************************
!                                                                      *
!                                                                      *
!
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!       $Release:  HR92                                                !
!           $Bug:  25996997                                            !
!                                                                      *
!***********************************************************************
!ICE #    Issue / Resolution                                           !
!----------------------------------------------------------------------!
!66309001 Changes in Layout, New rows added, Processing Overseas Amt   !
!18/4/02  Processing by Tax Reference Number & Mult currency processing!
!         Incorrect Salary printed on the report                       !
!                                                                      !
!         The SQR has been modified to allow multi currency processing !
!         Also processing is done by tax reference number.             !
!         The layout has also been changed                             !
!         The Where clause has been changed to get the salary on the   !
!         Primary hire record or the latest rehire record.             !
!                                                                      !
!681383000  Report should print creation date instead of print date.   !
!14/06/04   SQR modified to use CREATION_DT from GPSG_IR56_TBL record  !
!            to print Creation date on the IR reports.                 !
!                                                                      !
!717800000  Modified the report to handle refund of rent               !
!10/08/04                                                              !
!                                                                      !
!***********************************************************************
!
#include 'setenv.sqc'    !Set environment
    
#define PAGEWIDTH  200
begin-setup
#include 'setupdb.sqc'
  page-size 80 295

  declare printer
        type          = HPLASERJET
        orientation   = portrait
        chars-inch    = 28.0
        top-margin    = 1.0
        left-margin   = 1.0
        font          = 5
        point-size    = 12
        lines-inch    = 5.0
End-Setup
!
!********************************************************************
! Procedure :   Report
!********************************************************************
begin-report

  let $ReportHead   = 'NOTIFICATION'
  Let $ReportTitle  = '(Under Section 52(4) of the Inland Revenue Ordinance Chapter 112)'
  Let $ReportTitle1 = 'BY AN EMPLOYER OF AN EMPLOYEE WHO COMMENCES TO BE EMPLOYED'
  Let $ReportType   = 'W'

  let #Font_Num = 5
  let #Font_Num1 = 32
  let #Font_OldSize = 12
  let #Font_NewSize = 12
  let #Font_Fixed = 1
  let #Font_Pitch = 5

  Do Stdapi-Init
  Do Init-DateTime
  Do Get-Current-DateTime
  Do Get-RC-Parm

  Let $ER_FileNumber  = ''
  Let $ER_Signatory   = ''
  Let $ER_Designation = ''

  Do Get-TaxRef-Details
  Do Get-TaxRef-PayEntity

  Do Pay-Entity-Details

  Do Check-EE-RC-List
  if #EEList
     Do Process-EE-In-List
  else
     Do Process-Dynamic-List
  End-if

  Do Delete-RC-Parms
  Do Stdapi-Term
end-report
!
!********************************************************************
! Procedure :   Get-RC-Parm
!********************************************************************
Begin-Procedure Get-RC-Parm
Begin-SELECT
GPHK_TAX_REF_NUM
GPHK_TAX_YEAR
GPHK_REPRINT_YN
GPHK_IR56B_TYPE
PRINT_DATE
GPHK_TXYR_EDT
GPHK_TXYR_BDT
GPHK_PRD_BGN_DT
GPHK_PRD_END_DT
CURRENCY_CD

      Let $TaxRefNum = &GPHK_TAX_REF_NUM
      let #TaxYear   = &GPHK_TAX_YEAR
      let $RePrintYN = &GPHK_REPRINT_YN
      let $IR56BType = &GPHK_IR56B_TYPE
     ! let $PrintDate = &PRINT_DATE
      let $FromDate  = &GPHK_PRD_BGN_DT
      let $ThruDate  = &GPHK_PRD_END_DT
      Let $Tax_Yr_March = &GPHK_TXYR_EDT
      Let $CurrencyCd = &CURRENCY_CD

      if rtrim($ThruDate,' ') = ''
         Let $ThruDate  = &GPHK_TXYR_EDT
      End-if
      Do Convert-To-DTU-Date(&GPHK_TXYR_EDT,$TaxYrEDT_DTU)
      Do dtu-Parse-Date($TaxYrEDT_DTU,#D_YR,#D_MN,#D_DY)

    !  Do Format-DateTime($PrintDate, $PrintDate, {DEFDATE},'','')

      Let $TXYR_Day = edit(#D_DY,'99')
      Let $TXYR_YR  = edit(#D_YR,'9999')

      Evaluate #D_MN
         When = 1
               Let $Month_Print = ' January '
               break
         When = 2
               Let $Month_Print = ' February '
               break
         When = 3
               Let $Month_Print = ' March '
               break
         When = 4
               Let $Month_Print = ' April '
               break
         When = 5
               Let $Month_Print = ' May '
               break
         When = 6
               Let $Month_Print = ' June '
               break
         When = 7
               Let $Month_Print = ' July '
               break
         When = 8
               Let $Month_Print = ' August '
               break
         When = 9
               Let $Month_Print = ' September '
               break
         When = 10
               Let $Month_Print = ' October '
               break
         When = 11
               Let $Month_Print = ' November '
               break
         When = 12
               Let $Month_Print = ' December '
               break
      End-Evaluate
      Let $PrnTxYrDt = $TXYR_Day || $Month_Print || $TXYR_YR

      If $RePrintYN = 'N'
         Let $WhereClause = ' AND PM.GPHK_ISSUE_STATUS = ''2'''
      Else
         Let $WhereClause = ' AND PM.GPHK_ISSUE_STATUS IN (''1'',''2'')'
      End-if

      Let $CurrencyClause = ''
      if rtrim($CurrencyCd,' ') <> ''
         Let $CurrencyClause = ' AND AMT.CURRENCY_CD = ' || '''' || $CurrencyCd || ''''
         Let $CurrLbl = '(' || $CurrencyCd || ')'
         Let $CurrLbl1 = 'Amount (' || $CurrencyCd || ')'
      else
         Let $CurrLbl1 = 'Amount (HK$)'
      End-if

     FROM PS_GPHK_I56_RUNCTL
    WHERE OPRID       = $PRCS_OPRID
      AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT
End-Procedure   !Get-RC-Parm
!
!********************************************************************
! Procedure :   Check-EE-RC-List
!********************************************************************
Begin-Procedure Check-EE-RC-List
  Let #EEList = 0
Begin-SELECT
CHK.EMPLID
       Let #EEList = 1
     FROM PS_GPHK_I56_EE_RC CHK
    WHERE CHK.OPRID       = $PRCS_OPRID
      AND CHK.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT
End-Procedure   Check-EE-RC-List
!
!********************************************************************
! Procedure :   Process-EE-In-List
!********************************************************************
Begin-Procedure Process-EE-In-List
Begin-SELECT
A1.GPHK_SHEET_NUM   &PEL_SheetNum
CHK.EMPLID          &PEL_Emplid
A1.GPHK_SERIAL_NUM  &PEL_SerialNum
C.HIRE_DT           &Hire_Dt1
C.LAST_HIRE_DT      &Rehire_Dt1

     Let $Emplid    = &PEL_Emplid
     Let #SerialNum = &PEL_SerialNum
     if &Rehire_Dt1 > &Hire_Dt1
        Let $JobCmncDt = &Rehire_Dt1
     else
        Let $JobCmncDt = &Hire_Dt1
     End-if

     if rtrim($CurrencyCd,' ') <> ''
        Do Check-Currency-Payment
        if $PaidInSelected = 'Y'   ! Process Employee if the selected currency has been used to pay the employee.
           Do Process-Main
        end-if
     else
        Do Process-Main
     end-if

  FROM PS_GPHK_I56_EE_RC CHK, PS_GPHK_IR56_TBL A1, PS_JOB C
    WHERE CHK.OPRID           = $PRCS_OPRID
      AND CHK.RUN_CNTL_ID     = $PRCS_RUN_CNTL_ID
      AND CHK.EMPLID          = A1.EMPLID
      AND A1.EMPLID           = C.EMPLID
      AND A1.GPHK_REPORT_TYPE = $ReportType
      AND A1.GPHK_TAX_YEAR    = #TaxYear
      AND A1.GPHK_TAX_REF_NUM = $TaxRefNum

      AND C.EMPL_RCD = (SELECT MIN(B1.EMPL_RCD) FROM PS_JOB B1
                                   WHERE B1.EMPLID = C.EMPLID
                               )
      AND C.EFFDT             = (SELECT MAX(J11.EFFDT) FROM PS_JOB J11
                                   WHERE J11.EMPLID = C.EMPLID
                                     AND J11.EMPL_RCD = C.EMPL_RCD
                                     AND J11.EFFDT   <= $ThruDate)
      AND A1.GPHK_SERIAL_NUM  = (SELECT MAX(A11.GPHK_SERIAL_NUM) FROM PS_GPHK_IR56_TBL A11
                                   WHERE A11.GPHK_REPORT_TYPE = A1.GPHK_REPORT_TYPE
                                     AND A11.GPHK_TAX_YEAR    = A1.GPHK_TAX_YEAR
                                     AND A11.GPHK_TAX_REF_NUM = A1.GPHK_TAX_REF_NUM
                                     AND A11.EMPLID           = A1.EMPLID
                                )
 ORDER BY A1.GPHK_SHEET_NUM

End-SELECT
End-Procedure   Process-EE-In-List
!
!********************************************************************
! Procedure :   Process-Dynamic-List
!********************************************************************
Begin-Procedure Process-Dynamic-List
Begin-SELECT
A.GPHK_SHEET_NUM   &PDL_SheetNum
A.EMPLID           &PDL_Emplid
A.GPHK_SERIAL_NUM  &PDL_SerialNum
C.HIRE_DT          &Hire_Dt2
C.LAST_HIRE_DT     &Rehire_Dt2

     let $Emplid    = &PDL_Emplid
     Let #SerialNum = &PDL_SerialNum

     if &Rehire_Dt2 > &Hire_Dt2
        Let $JobCmncDt = &Rehire_Dt2
     else
        Let $JobCmncDt = &Hire_Dt2
     End-if

     if rtrim($CurrencyCd,' ') <> ''
        Do Check-Currency-Payment
        if $PaidInSelected = 'Y'   ! Process Employee if the selected currency has been used to pay the employee.
           !show 'Processing ID : ' $Emplid
           Do Process-Main
        end-if
     else
        !show 'Processing ID : ' $Emplid
        Do Process-Main
     end-if

   FROM PS_GPHK_IR56_TBL A, PS_JOB C
    WHERE A.GPHK_REPORT_TYPE = $ReportType
      AND A.GPHK_TAX_YEAR    = #TaxYear
      AND A.GPHK_TAX_REF_NUM = $TaxRefNum
      AND A.EMPLID           = C.EMPLID
      AND C.EMPL_RCD = (SELECT MIN(B1.EMPL_RCD) FROM PS_JOB B1
                                   WHERE B1.EMPLID = C.EMPLID
                               )
      AND C.EFFDT             = (SELECT MAX(J11.EFFDT) FROM PS_JOB J11
                                   WHERE J11.EMPLID = C.EMPLID
                                     AND J11.EMPL_RCD = C.EMPL_RCD
                                     AND J11.EFFDT   <= $ThruDate)
      AND ((C.HIRE_DT BETWEEN $FromDate AND $ThruDate) OR (C.LAST_HIRE_DT BETWEEN $FromDate AND $ThruDate))
      AND A.GPHK_SERIAL_NUM  = (SELECT MAX(A1.GPHK_SERIAL_NUM) FROM PS_GPHK_IR56_TBL A1
                                   WHERE A1.GPHK_REPORT_TYPE = A.GPHK_REPORT_TYPE
                                     AND A1.GPHK_TAX_YEAR    = A.GPHK_TAX_YEAR
                                     AND A1.GPHK_TAX_REF_NUM = A.GPHK_TAX_REF_NUM
                                     AND A1.EMPLID           = A.EMPLID
                               )
 ORDER BY A.GPHK_SHEET_NUM
End-SELECT
End-Procedure   Process-Dynamic-List
!
!********************************************************************
! Procedure :   Process-Main
!********************************************************************
Begin-Procedure Process-Main
Let #TotRefundRent = 0
Begin-SELECT
PM.GPHK_PRD_BGN_DT
PM.GPHK_PRD_END_DT
PM.GPHK_SHEET_NUM
PM.GPHK_WITHHELD_AMT
PM.GPHK_IR56_STATUS
PM.GPHK_FLUCTE_AMT
PM.GPHK_MTH_ALW_RT
PM.GPHK_OVS_CNC_CD
PM.GPHK_OVSEAS_AMT
PM.NATIONAL_ID_TYPE
PM.NATIONAL_ID
PM.PASSPORT_NBR
PM.GPHK_SHARE_GRANTED
PM.GPHK_SHARE_EXER
PM.GRANT_DT
PM.CREATION_DT

    Do Init-Prn-Var

    Do Format-DateTime($Jobcmncdt, $Jobcmncdt, {DEFDATE},'','')

    Let $PrintDate    = &PM.CREATION_DT
    Let $PrdBeginDt   = &PM.GPHK_PRD_BGN_DT
    Let $PrdEndDt     = &PM.GPHK_PRD_END_DT
    Let #SheetNumber  = &PM.GPHK_SHEET_NUM
    Let #WithheldAmt  = trunc(&PM.GPHK_WITHHELD_AMT,0)
    Let $CopyVersion  = &PM.GPHK_IR56_STATUS
    Let #MthAlwRate   = trunc(&PM.GPHK_MTH_ALW_RT,0)
    Let #FlucuateAmt  = trunc(&PM.GPHK_FLUCTE_AMT,0)
    Let $OvseasCode   = &PM.GPHK_OVS_CNC_CD
    Let #OvseasAmt    = &PM.GPHK_OVSEAS_AMT
    Let #OvseasAmt    = Trunc(#OvseasAmt,0)

    Let $EE_PassPort  = &PM.PASSPORT_NBR
    Let $EE_ID_No     = &PM.NATIONAL_ID

    Let $ShareGranted_YN = &PM.GPHK_SHARE_GRANTED
    Let #ShareExer       = &PM.GPHK_SHARE_EXER
    Let $GrantDate       = &PM.GRANT_DT

    Do Format-DateTime($PrintDate, $PrintDate, {DEFDATE},'','')

    if rtrim($OvseasCode,' ') <> ''
       Do Get-Overseas-Concern
    end-if

    Do Get-EE-Details
    Do Get-EE-Quarter-Count
    Do Get-Prev-Employer
    Do Retrieve-EE-Amounts
    Do Print-Document
    Do Update-Issue-Status

    FROM PS_GPHK_IR56_TBL PM
    WHERE PM.EMPLID           = $Emplid
      AND PM.GPHK_SERIAL_NUM  = #SerialNum
      AND PM.GPHK_REPORT_TYPE = $ReportType
      AND PM.GPHK_TAX_YEAR    = #TaxYear
      AND PM.GPHK_TAX_REF_NUM = $TaxRefNum
[$WhereClause]
End-SELECT
End-Procedure   Process-Main
!
!********************************************************************
! Procedure :   Get-Overseas-Concern
!********************************************************************
Begin-Procedure Get-Overseas-Concern
Begin-SELECT
OS.GPHK_OVSEAS_ADR        &OvseasAdr
OS.GPHK_OVSEAS_CMPNY      &OvseasCmpny

    Let $OvseasAdr   = &OvseasAdr
    Let $OvseasCmpny = &OvseasCmpny

    FROM PS_GPHK_OVS_CNCRN OS
   WHERE OS.GPHK_OVS_CNC_CD = $OvseasCode
End-SELECT
End-Procedure   Get-Overseas-Concern
!
!***********************************************************************
! Procedure:    Update-Issue-Status
!***********************************************************************
begin-procedure Update-Issue-Status
begin-SQL
UPDATE PS_GPHK_IR56_TBL
  SET GPHK_ISSUE_STATUS = '1'
   WHERE EMPLID           = $Emplid
     AND GPHK_REPORT_TYPE = $ReportType
     AND GPHK_TAX_YEAR    = #TaxYear
     AND GPHK_TAX_REF_NUM = $TaxRefNum
     AND GPHK_SERIAL_NUM  = #SerialNum
end-SQL
end-procedure   Update-Issue-Status
!
!********************************************************************
! Procedure :   Delete-RC-Parms
!********************************************************************
Begin-Procedure Delete-RC-Parms
begin-SQL
DELETE FROM PS_GPHK_I56_RUNCTL
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SQL
begin-SQL
DELETE FROM PS_GPHK_I56_EE_RC
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SQL
End-Procedure   Delete-RC-Parms
!
!********************************************************************
! Procedure :   Init-Prn-Var
!********************************************************************
Begin-Procedure Init-Prn-Var
    Let $PrdBeginDt   = ''
    Let $PrdEndDt     = ''
    Let #SheetNumber  =  0

    Let $EE_ID_No                = ''
    Let $EE_Tax_No               = ''
    Let $EE_SurName              = ''
    Let $EE_Maiden_SurName       = ''
    Let $EE_Full_Name            = ''
    Let $EE_Name_AC              = ''
    Let $EE_PassPort             = ''
    Let $EE_PP_Cntry_Issue       = ''
    Let $EE_Sex                  = ''
    Let $EE_MarStatus            = ''
    Let $EE_SpouseName           = ''
    Let $EE_Spouse_PP_No         = ''
    Let $EE_Spouse_ID_No         = ''
    Let $EE_Spouse_PP_CntryIssue = ''
    Let $EE_Resid_Address        = ''
    Let $EE_Corr_Address         = ''
    Let $EE_Job_Descr            = ''
    Let $EE_Job_FP_Time          = ''
    Let $EE_JobCode              = ''
    Let $EE_PT_Employer          = ''

    Let #TotalWages        = 0
    Let #TotalCommission   = 0
    Let #TotalBonus        = 0
    Let #TotalBP_TA_Graty  = 0

    Let #TotalAllowance1   = 0
    Let #TotalAllowance2   = 0
    Let #TotalAllowance3   = 0

    Let $IR56_Remarks      = ''
    Let $OvseasCmpny       = ''
    Let #OvseasAmt         = 0
    Let $OvseasAdr         = ''

    Let $Qtrs_1_Address    = ''
    Let $Qtrs_1_Nature     = ''
    Let $Qtrs_1_Prd_Begin  = ''
    Let $Qtrs_1_Prd_End    = ''
    Let #Amt_Qtrs_1_ER2LL  = 0
    Let #Amt_Qtrs_1_EE2LL  = 0
    Let #Amt_Qtrs_1_ER2EE  = 0
    Let #Amt_Qtrs_1_EE2ER  = 0

End-Procedure   Init-Print-Variables
!
!********************************************************************
! Procedure :   Get-EE-Personal-Data
!********************************************************************
Begin-Procedure Get-EE-Personal-Data
Begin-SELECT
PDA.SEX           &SexType
PDA.MAR_STATUS    &MarStatusType

    Let $EE_Sex       = &SexType
    Let $EE_MarStatus = &MarStatusType

    if $EE_Sex = 'F' and $EE_MarStatus ='M'
       Do Get-EE-Maiden-Name
    End-if

    FROM PS_PERS_DATA_EFFDT PDA
   WHERE PDA.EMPLID = $Emplid
     AND PDA.EFFDT = (SELECT MAX(PDA1.EFFDT) FROM PS_PERS_DATA_EFFDT PDA1
                        WHERE PDA1.EMPLID = PDA.EMPLID
                          AND PDA1.EFFDT <= $AsofToday)

End-SELECT
End-Procedure   Get-EE-Personal-Data
!
!********************************************************************
! Procedure :   Get-EE-Names
!********************************************************************
Begin-Procedure Get-EE-Names
   Let $Key_Full_Name = ''
Begin-SELECT
NM.NAME_PREFIX
NM.NAME
NM.FIRST_NAME
NM.MIDDLE_NAME
NM.LAST_NAME
NM.PREF_FIRST_NAME
NM.NAME_AC

    Let $EE_FirstName = RTRIM(&NM.FIRST_NAME,' ')
    Let $EE_SurName   = RTRIM(&NM.LAST_NAME,' ')
    Let $EE_LstName   = RTRIM(&NM.LAST_NAME,' ')
    Let $EE_MidName   = RTRIM(&NM.MIDDLE_NAME,' ')
    Let $EE_Pref_frstName   = RTRIM(&NM.PREF_FIRST_NAME,' ')
    Let $EE_SurName   = translate($EE_SurName,' ','-')
    Let $EE_Name_AC   = &NM.NAME_AC
    let $Name         = $EE_SurName || ', ' || $EE_FirstName || $EE_MidName

    Let $EE_Full_Name = rtrim(&NM.NAME_PREFIX,' ') || '.' || ' ' || $EE_SurName || ' ' || $EE_FirstName
    Let $Key_Full_Name = $EE_SurName || ',' || $EE_FirstName
       Let $Alt_Full_Name = $EE_SurName || ',' || ' ' ||$EE_FirstName
       let $Alt_Full_Name = upper($Alt_Full_Name)
    if rtrim($EE_MidName,' ') <>''
       Let $EE_Full_Name = $EE_Full_Name || ' ' || $EE_MidName
       Let $Key_Full_Name = rtrim($Name,' ') || '*' || $EE_MidName
          Let $Alt_Full_Name = $Alt_Full_Name || ' ' || $EE_MidName
          let $Alt_Full_Name = upper($Alt_Full_Name)
    End-if

     if rtrim($EE_Pref_frstName,' ') <>''
       Let $EE_Full_Name = $EE_Full_Name || ',' || ' ' || $EE_Pref_frstName
       Let $Alt_Full_Name =  $Alt_Full_Name || '*' || $EE_Pref_frstName
       let $Alt_Full_Name = upper($Alt_Full_Name)
    End-if

   FROM PS_NAMES NM
  WHERE NM.EMPLID = $Emplid
    AND NM.NAME_TYPE = 'PRI'
End-SELECT
End-Procedure Get-EE-Names
!
!********************************************************************
! Procedure :   Get-EE-Maiden-Name
!********************************************************************
Begin-Procedure Get-EE-Maiden-Name
   Let $FemaleName = ''
Begin-SELECT
MLN.LAST_NAME
    Let $EE_Maiden_SurName   = RTRIM(&MLN.LAST_NAME,' ')
    Let $EE_Maiden_SurName   = translate($EE_Maiden_SurName,' ','-')

    Let $FemaleName = $EE_Maiden_SurName || ',' || rtrim(&NM.FIRST_NAME,' ')
    if rtrim(&NM.MIDDLE_NAME,' ') <> ''
       let $FemaleName = $FemaleName || rtrim(&NM.MIDDLE_NAME,' ')
    end-if
    if rtrim(&NM.PREF_FIRST_NAME,' ') <> ''
       Let $FemaleName = $FemaleName || '*' || rtrim(&NM.PREF_FIRST_NAME,' ')
    end-if

   FROM PS_NAMES MLN
  WHERE MLN.EMPLID = $Emplid
    AND MLN.NAME_TYPE = 'MDN'
End-SELECT
End-Procedure   Get-EE-Maiden-Name
!
!********************************************************************
! Procedure :   Get-EE-ID
!********************************************************************
Begin-Procedure Get-EE-ID
Begin-SELECT
EID.NATIONAL_ID
     Let $EE_ID_No = rtrim(&EID.NATIONAL_ID,' ')

   FROM PS_GPHK_EE_NID_VW EID
  WHERE EID.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-EE-ID
!
!********************************************************************
! Procedure :   Get-Spouse-ID
!********************************************************************
Begin-Procedure Get-Spouse-ID
Begin-SELECT
ESID.NATIONAL_ID
    Let $EE_Spouse_ID_No = rtrim(&ESID.NATIONAL_ID,' ')

   FROM PS_GPHK_SPS_NID_VW ESID
  WHERE ESID.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-Spouse-ID
!
!********************************************************************
! Procedure :   Get-EE-PassPort-Detail
!********************************************************************
Begin-Procedure Get-EE-PassPort-Detail
Begin-SELECT
EPD.PASSPORT_NBR
EPD.COUNTRY_PASSPORT
    Let $EE_PassPort       = &EPD.PASSPORT_NBR
    Let $EE_PP_Cntry_Issue = &EPD.COUNTRY_PASSPORT

   FROM PS_GPHK_EE_PP_VW EPD
  WHERE EPD.EMPLID = $Emplid
  AND EPD.DT_ISSUED <= $PrdEndDt
  AND (EPD.EXPIRATN_DT >= $PrdEndDt
  OR EPD.EXPIRATN_DT IS NULL)
End-SELECT
End-Procedure   Get-EE-PassPort-Detail
!
!********************************************************************
! Procedure :   Get-EE-Spouse-Detail
!********************************************************************
Begin-Procedure Get-EE-Spouse-Detail
Begin-SELECT
ESN.NAME
    Let $EE_SpouseName = &ESN.NAME

   FROM PS_GPHK_EE_SPS_VW ESN
  WHERE ESN.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-EE-Spouse-Detail
!
!********************************************************************
! Procedure :   Get-Spouse-PassPort-Detail
!********************************************************************
Begin-Procedure Get-Spouse-PassPort-Detail
Begin-SELECT
ESPD.PASSPORT_NBR
ESPD.COUNTRY_PASSPORT
    Let $EE_Spouse_PP_No         = &ESPD.PASSPORT_NBR
    Let $EE_Spouse_PP_CntryIssue = &ESPD.COUNTRY_PASSPORT
   FROM PS_GPHK_EESP_PP_VW ESPD
  WHERE ESPD.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-Spouse-PassPort-Detail
!
!********************************************************************
! Procedure :   Part-Time-ER-Name
!********************************************************************
Begin-Procedure Part-Time-ER-Name
Begin-SELECT
PTER.EMPLOYER

    Let $EE_PT_Employer = &PTER.EMPLOYER

   FROM PS_GPHK_PT_ER_DTL PTER
  WHERE PTER.EMPLID = $Emplid
End-SELECT
End-Procedure   Part-Time-ER-Name
!
!********************************************************************
! Procedure :   EE-Job-Detail
!********************************************************************
Begin-Procedure EE-Job-Detail
Begin-SELECT
EEJV.JOBCODE
EEJV.FULL_PART_TIME
EEJV.SETID_JOBCODE

    Let $EE_Job_FP_Time = &EEJV.FULL_PART_TIME
    Let $EE_JobCode     = &EEJV.JOBCODE
    Let $Job_Setid      = &EEJV.SETID_JOBCODE

    Do  EE-Job-Description

   FROM PS_JOB EEJV
    WHERE EEJV.EMPLID = $Emplid
    AND EEJV.JOB_INDICATOR = 'P'
    AND EEJV.EFFDT = (SELECT MAX(EEJV1.EFFDT) FROM PS_JOB EEJV1
                        WHERE EEJV1.EMPLID = EEJV.EMPLID
                          AND EEJV1.EFFDT <= &PM.GPHK_PRD_END_DT
                    )
End-SELECT
End-Procedure   EE-Job-Detail
!
!********************************************************************
! Procedure :   EE-Job-Description
!********************************************************************
Begin-Procedure EE-Job-Description
Begin-SELECT
JBD.DESCR

    Let $EE_Job_Descr = &JBD.DESCR

    FROM PS_JOBCODE_TBL JBD
       WHERE JBD.JOBCODE = $EE_JObCode
         AND JBD.SETID = $Job_Setid
         AND JBD.EFFDT = (SELECT MAX(JBD1.EFFDT) FROM PS_JOBCODE_TBL JBD1
                             WHERE JBD1.JOBCODE = JBD.JOBCODE
                               AND JBD1.SETID   = JBD.SETID
                               AND JBD1.EFFDT <= &PM.GPHK_PRD_END_DT
                         )
End-SELECT
End-Procedure   EE-Job-Description

!
!********************************************************************
! Procedure :   Print-Document
!********************************************************************
Begin-procedure Print-Document
   Let #CR  = 1
   Let #PC  = 1
   Let #PC1 = 5
   Let #PC2 = 9
   Let #StCol = 280
   Let #TermCol = 260
 
  ! graphic () font :#Font_Num :#Font_OldSize :#Font_Fixed :#Font_Pitch

   Let #BDtPos  = 70
   Let #DashPos = 82
   Let #EDtPos  = 84
   Let #AmtPos  = #TermCol - 20
   ! Print 'Appendix A'                (#Cr, 206) underline
   
  
   ! Addition of a Box a top right corner
   Graphic (#Cr,268,24) BOX 4 0 0 
   
    ! New Printer settings
    ! Alter-Printer  point-size=10
    ! end Printer setup

    Print 'E' (+2,276) POINT-SIZE=35

   ! End of addition of Box
   
   ! Restore Printer setup
   ! Alter-printer point-size=10
       
        
   
   Let #Headlen = length($ReportHead)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)
   Let #CC = #CC + 10
   Print $ReportHead                 (#Cr,#CC) BOLD

   
   Let #Cr = #Cr + 1
   Let #Headlen = length($ReportTitle)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)
   Let #CC = #CC - 16
   Print $ReportTitle                (#Cr,#CC) BOLD

   Let #Headlen = length($ReportTitle1)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)
   Let #Cr = #Cr + 1
   Let #CC = #CC - 43
   Print $ReportTitle1                (#Cr,#CC) BOLD

   Let #Cr = #Cr + 3
   print 'Employer''s File No. :'  (#Cr,#PC1)
   print $ER_FileNumber                   (#Cr,65) !******************COMMENTED THIS LINE
   Let #TotLen = length($ER_FileNumber)
   Let #VarLen = length($ER_FileNumber) - 9
   Let $Prn_ER_FileNumber = substr($ER_FileNumber,#VarLen,10)
   Let #PrintLen = Length($Prn_ER_FileNumber) * 2
   Let #PCCol = #TermCol - #PrintLen + 10

   Let $Prn_ER_FileNumber = substr($Prn_ER_FileNumber,3,#TotLen)
   print $Prn_ER_FileNumber     (#Cr,#PCCol) Bold point-size = 17

   Print '****'                 (#Cr,#StCol) Bold point-size = 17

   Let #Cr = #Cr + 1
   print 'Name of Employer:'    (#Cr,#PC1)
   Print $EntityName         (#Cr,48)

   Let #Cr = #Cr + 1
   print 'Address of employer :'            (#Cr,#PC1)
   let $Addr_Print_Str = ''
   let $Addr_Rem_Str = $PE_Address
   let #Addr_Col_Pos = 48
   let #MaxNoCharInLn = 89

   do Print-Addr-Mult-Lines

   print 'Particulars of the Employee : -' (#Cr,#PC)
   Let #Cr = #Cr + 1

   print '1.   Name of Employee : ' (#Cr,#PC)
   print $EE_Full_Name             (#Cr,50)

   Let #Chklen = length($EE_Full_Name) + 50

   if #Chklen >= 83
    Let #Cr = #Cr + 1
   end-if
   
   Let #PrnLen = length($Alt_Full_Name) * 2.7
   Let #PCCol = #TermCol - (#PrnLen + 4)
   !*******************************************************
   !*********************RIGHT JUSTIFICATION*********************
   Let $Rev_Surname = ''
   Let #surlenght = length($Alt_Full_Name ) + 1
   Let #counter = #surlenght - 1
   Let $temp = ''
   Let #rightjustcol = 276
   Let #allign = 0
   Let $first = 'Y'
   
   GRAPHIC () FONT 5 17 0 22
   While(#counter > 0)
   Let $temp = substr( $Alt_Full_Name ,#counter,1)   !*****getting one character from the end
   Let #allign = 0
   
   
   
        If($temp = 'I' or $temp = 'J'  or $temp = ',' )
    
          Let #allign = -3 !SMALL
        
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 4
            Print $temp (#Cr,#rightjustcol )  BOLD
          else
            Print $temp (#Cr, -4)  BOLD
          end-if
        End-If
    
        If($temp = 'M' or $temp = 'W' ) !BIG
        Let #allign = -5        
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 6
            Print $temp (#Cr,#rightjustcol )  BOLD
          else
            if($prev = 'I' or $prev = 'J')
            Print $temp (#Cr, -7)  BOLD 
            else
            Print $temp (#Cr, -6)  BOLD
            end-if
          end-if
        End-If
        
        If($temp = 'H' or $temp = 'G' OR $TEMP = 'O' ) !BIG
        Let #allign = -5        
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 5
            Print $temp (#Cr,#rightjustcol )  BOLD
          else
            !if($prev = 'I' or $prev = 'J')
            Print $temp (#Cr, -6)  BOLD 
            !else
            !Print $temp (#Cr, -6)  BOLD
            !end-if
          end-if
        End-If
    
        If($temp = 'B' or $temp = 'E' or $temp = 'F' or $temp = 'K' or $temp = 'L' or $temp = 'P' or $temp = 'R' or $temp ='S' or $temp ='T' or $temp ='X' or $temp ='Y' or $temp = 'Z' ) !LESS THAN EXACT FIT
          Let #allign = -3
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 5
            Print $temp (#Cr,#rightjustcol )  BOLD
          else 
           ! if($prev = 'I' or $prev = 'J')
           ! Print $temp (#Cr, -4)  BOLD 
            !else
            Print $temp (#Cr, -5)  BOLD
            !End-If
          end-if
        
        END-IF
        
        if #allign = 0
            if $first = 'Y' 
                let #rightjustcol = #rightjustcol - 5
                Print $temp (#Cr,#rightjustcol )  BOLD
            else 
                if($prev = 'I' or $prev = 'J' )
                Print $temp (#Cr, -6)  BOLD 
                else
                Print $temp (#Cr, -5)  BOLD
                End-If
            end-if
        end-if
    
        Let $prev  = $temp
    
    !Let #rightjustcol = #rightjustcol - #allign
    
    !Let $temp = ' '|| $temp
    
    
   Let $first = 'N'    
   
   Let #counter = #counter - 1
   Let $temp = ''
  
   End-While
   
   !Put back the graphics
     GRAPHIC () FONT 5 12 0 28
    !*********************************************************
   
   !*******************************************************
   !Print $Alt_Full_Name            (#Cr,#PCCol) Bold
   Print '****'                    (#Cr,#StCol) Bold point-size = 17

   Let #Cr = #Cr + 2
   print '2.   H.K. Identity Card Number :'    (#Cr,#PC)

   Let #PCCol = #TermCol - 22

   if rtrim($EE_ID_No,' ') <> ''
      Let $EE_ID_No = translate($EE_ID_No, ' ','')
      Let #EEIDLen = length($EE_ID_No)
      if #EEIDLen < 9
         Let $EE_ID_No = lpad($EE_ID_No,9,' ')
      end-if
!      graphic () font :#Font_Num :#Font_NewSize
      If(#EEIDLen = 9)
      Let #PCCol = #TermCol - 20
      else
      Let #PCCol = #TermCol - 18
      End-If
      
      Print $EE_ID_No                               (#Cr,#PCCol) Bold point-size = 17 edit 'XXXXXXXX(X)'
      Print '****'                                  (#Cr,#StCol) Bold point-size = 17
!      graphic () font :#Font_Num :#Font_OldSize
   end-if

   Print '****'                                  (#Cr,#StCol) Bold point-size = 17

   Let #Cr = #Cr + 1
   print '3.   Passport number and place of issue (if Employee has no HK Identity Card) :' (#Cr,#PC)
   if rtrim($EE_ID_No,' ') = ''
      if rtrim($EE_Passport,' ') <> ''
         Let $CountryCode = $EE_PP_Cntry_Issue
         Do Get-Country-Name

         Let $PrintValue = rtrim($EE_PassPort,' ') || ' - ' || $CountryName
         Print $PrintValue                             (#Cr,180)
      end-if
   end-if

   Let #Cr = #Cr + 1
   print '4.   Sex (M = Male, F = Female) :'            (#Cr,#PC)
   Let #PCCol = #TermCol + 11

!   graphic () font :#Font_Num :#Font_NewSize
   If($EE_Sex = 'M')
   Let #PCCol = #PCCol - 1
   end-if
   
   Print $EE_Sex                                 (#Cr,#PCCol) Bold point-size = 17
   Print '****'                                  (#Cr,#StCol) Bold point-size = 17

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '5.   Marital status (1=Single / Widowed / Divorced / Living Apart, 2=Married):' (#Cr,#PC)
  Let #PCCol = #TermCol + 12

!   graphic () font :#Font_Num :#Font_NewSize

   if $EE_MarStatus = 'S' or $EE_MarStatus = 'W' or $EE_MarStatus = 'D' or $EE_MarStatus = 'E' or $EE_MarStatus = 'U'
      Print '1'                                  (#Cr,#PCCol) Bold point-size = 17
   else
      Print '2'                                  (#Cr,#PCCol) Bold point-size = 17
   end-if

   Print '****'                                  (#Cr,#StCol) Bold point-size = 17

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '6.   (a) If married, full name of spouse:'   (#Cr,#PC)
   Print $EE_SpouseName                               (#Cr,75)

   Let #Cr = #Cr + 1
   print '      (b) Spouse''s H.K. Identity Card Number:'  (#Cr,#PC)
   if rtrim($EE_Spouse_ID_No,' ') <> ''
      Let #EEIDLen = length($EE_Spouse_ID_No)
      if #EEIDLen < 9
         Let $EE_Spouse_ID_No = lpad($EE_Spouse_ID_No,9,' ')
         Print $EE_Spouse_ID_No                            (#Cr,95) edit 'XXXXXXXX(X)'
      else
         Print $EE_Spouse_ID_No                            (#Cr,95) edit 'XXXXXXXX(X)'
      end-if
   end-if

   Let #Cr = #Cr + 1
   print '   / Passport Number and place of issue (if known):' (#Cr,#PC2)

   if rtrim($EE_Spouse_ID_No,' ') = ''
      if rtrim($EE_Spouse_PP_No,' ') <> ''
         Let $CountryCode = $EE_Spouse_PP_CntryIssue
         Do Get-Country-Name

         Let $PrintValue = rtrim($EE_Spouse_PP_No,' ') || ' - ' || $CountryName
         Print $PrintValue                                 (#Cr,120)
      end-if
   end-if

   Let #Cr = #Cr + 1
   print '7.   Residential address:'                   (#Cr,#PC)
!   Let #Cr = #Cr + 1
!   Print $EE_Resid_Address                           (#Cr,50)

   let $Addr_Print_Str = ''
   let $Addr_Rem_Str = $EE_Resid_Address
   let #Addr_Col_Pos = 52
   let #MaxNoCharInLn = 85

   do Print-Addr-Mult-Lines

   Let #Cr = #Cr + 1
   print '8.   Postal address (if different from (7) above):'                (#Cr,#PC)
!   Let #Cr = #Cr + 1
   if rtrim($EE_Corr_Address,' ') <> ''
!     Print $EE_Corr_Address                             (#Cr,#PC2)

      let $Addr_Print_Str = ''
      let $Addr_Rem_Str = $EE_Resid_Address
      let #Addr_Col_Pos = 90
      let #MaxNoCharInLn = 47

      do Print-Addr-Mult-Lines
   else
      Print 'Same as above'                              (#Cr,90)
      Let #Cr = #Cr + 1
   end-if

   Let #Cr = #Cr + 1
   print '9.   (a) Capacity in which employed :'        (#Cr,#PC)
   Print $EE_Job_DesCr                                (#Cr,80)

   Let #Cr = #Cr + 1
   print '      (b) If part time, the business name of his / her principal employer (if known):'   (#Cr,#PC)
!   Let #Cr = #Cr + 1
   Print $EE_PT_Employer                                               (#Cr,180)

   Let #Cr = #Cr + 1
   print '10.  Date of commencement of employment :'    (#Cr,#PC)
   Let #PCCol = #TermCol - 15

!   graphic () font :#Font_Num :#Font_NewSize
   let $temp = $JobCmncDt
   do Convert-date
   let $JobCmncDt = $temp
   Print $JobCmncDt                                  (#Cr,#PCCol) Bold point-size = 17 !edit 'DD/MM/YYYY' !*******EDIT WAS COMMENTED
   Print '****'                                      (#Cr,#StCol) Bold point-size = 17
!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '11.  Terms of employment '  (#Cr,#PC)
   Let #PCCol = #TermCol - 25

   Let #Cr = #Cr + 1
   print '  (a) Monthly rate of fixed-income : ' (#Cr,#PC1)

!   graphic () font :#Font_Num :#Font_NewSize

   Let #comp_row = #Cr
    !print #TotalSalary                (#Cr,#AmtPos) Bold edit '999,999,999'
    ! print 'HK$'                       (#Cr,200)
    !Print '****'                      (#Cr,#StCol)  Bold

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   
   print '  (b) Monthly rate of allowances (e.g. cost of living) : ' (#Cr,#PC1)
   if #MthAlwRate > 0
      Print #MthAlwRate                 (#Cr,200)  
   end-if

   Let #Cr = #Cr + 1
   print '  (c) Fluctuating-income (e.g. commission, bonus, gratuity) : ' (#Cr,#PC1)

   if #FlucuateAmt > 0
      print #FlucuateAmt                 (#Cr,200) edit '999,999,999'
   end-if

   Let #Cr = #Cr + 1
   print '  (d) Particulars of place of residence provided: ' (#Cr,#PC1)
   Let #Cr = #Cr + 1
   print '    (0 = No Place of Residence provided, 1 = Place of Residence provided by employer)' (#Cr,#PC2)

!   graphic () font :#Font_Num :#Font_NewSize
     Let #PCCol = #TermCol + 12
   if #QtrCount > 0
      
      Print '1'                      (#Cr,#PCCol) Bold point-size =17
      Print '****'                   (#Cr,#StCol) Bold point-size =17
   else
      
      Print '0'                      (#Cr,#PCCol) Bold point-size =17
      Print '****'                   (#Cr,#StCol) Bold point-size =17
   End-if

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1

   Do Get-EE-Quarters
   if #TotalQtrPrinted = 0
      Do Qtr-Blank-Label
   end-if

   IF #TotRefundRent <> 0
      Subtract #TotRefundRent from #TotalSalary
   end-if
   Let #AmtPos = #AmtPos + 2 
   print #TotalSalary                (#comp_row,#AmtPos) Bold  point-size =17 edit '999,999,999'
   print 'HK$'                       (#comp_row,180) 
   Print '****'                      (#comp_row,#StCol) Bold point-size =17


!   Let #Cr = #Cr + 1
   print '12.  Business Name and address of previous Hong Kong employer :' (#Cr,#PC)
   Let #Cr = #Cr + 1
   PRINT $PrevEmployer                       (#Cr,#PC1)
   Let #Cr = #Cr + 2

   print '13.  Whether the employee was wholly or partly paid by a non-Hong Kong company'  (#Cr,#PC)
   Let #Cr = #Cr + 1
   Let #tempcol = #PC + 7
   print '   either in Hong Kong or elsewhere : (0=No, 1=Yes) ' (#Cr,#PC1)
   Let #PCCol = #TermCol + 12

!   graphic () font :#Font_Num :#Font_NewSize

   if #OvseasAmt > 0
      Print '1'                               (#Cr,#PCCol) Bold point-size =17
   End-if

   if #OvseasAmt <= 0
      Print '0'                               (#Cr,#PCCol) Bold point-size =17
   End-if

   Print '****'                               (#Cr,#StCol) Bold point-size =17
!   graphic () font :#Font_Num :#Font_OldSize

   Let #tempcol = #PC + 8
   Let #Cr = #Cr + 1
   Print 'If yes, please state : '   (#Cr,#tempcol)
   Let #Cr = #Cr + 1
   print 'Name of the non-Hong Kong company:' (#Cr,#tempcol)
   Print $OvseasCmpny                (#Cr,70)

   Let #Cr = #Cr + 1
   print 'Address:'  (#Cr,#tempcol)
   Let #Cr = #Cr + 1
   Print $OvseasAdr                  (#Cr,#PC2)

   Let #Cr = #Cr + 4
   print '14.  Whether the employee has been                          granted a share option prior to commencing to be' (#Cr,#PC)
   graphic () font :#Font_Num1
   print 'conditionally' (#Cr, 71) BOLD
   GRAPHIC () FONT 5 12 0 28
   Let #Cr = #Cr + 1
   print '   employed in Hong Kong, which can be exercised after rendering services in Hong Kong' (#Cr,#PC1)
   Let #Cr = #Cr + 1
   print '   (0 = No, 1 = Yes) ..... (THIS BOX MUST BE COMPLETED) ' (#Cr,#PC1)

   graphic (#Cr,133,5) box 1

   if $ShareGranted_YN = 'Y'
      Print '1'  (#Cr,135)
   else
      Print '0'  (#Cr,135)
   end-if

   Let #Cr = #Cr + 1
   print '   If yes, supply information, as an attachment, on details of the number and type of shares covered by the ' (#Cr,#PC1)
   Let #Cr = #Cr + 1
   print '    option, the consideration (if any) paid for the grant of the option, the consideration required to exercise' (#Cr,#PC1)
   Let #Cr = #Cr + 1
   print '    the option and the period within which the option must be exercised.' (#Cr,#PC1)


   Do Print-Page-Bottom-Dtl
   new-page

End-Procedure
!
!********************************************************************
! Procedure :   Address-Details
!********************************************************************
Begin-Procedure Address-Details
  Let $EE_Address = ''
Begin-SELECT
ADR.ADDRESS1
ADR.ADDRESS2
ADR.ADDRESS3
ADR.ADDRESS4
ADR.COUNTY
ADR.STATE
ADR.CITY
ADR.POSTAL
ADR.COUNTRY

    if &ADR.Country = 'HKG'
         Let $EE_Address = RTrim(&ADR.ADDRESS1,' ')

         If RTRIM(&ADR.ADDRESS2,' ') <> ''
            Let $EE_Address = $EE_Address || ', ' || RTrim(&ADR.ADDRESS2,' ')
         End-If
         If RTRIM(&ADR.ADDRESS3,' ') <> ''
            Let $EE_Address = $EE_Address || ', ' || RTrim(&ADR.ADDRESS3,' ')
         End-If

         Let $StateCode = &ADR.STATE

         Let $StateDescr = ''
         Do Get-State-Descr

         If RTRIM(&ADR.CITY,' ') <> ''
            Let $EE_Address = $EE_Address || ', ' || RTrim(&ADR.CITY,' ')
         End-If
         if RTRIM($StateDescr,' ') <> ''
            Let $EE_Address = $EE_Address || ', ' || $StateDescr
         end-if



    Else
         Let $EE_Address = RTrim(&ADR.ADDRESS1,' ')
         If RTRIM(&ADR.ADDRESS2,' ') <> ''
            Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS2,' ')
         End-If
         If RTRIM(&ADR.ADDRESS3,' ') <> ''
            Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS3,' ')
         End-If
         If RTRIM(&ADR.ADDRESS4,' ') <> ''
            Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS4,' ')
         End-If

         Let $StateCode = &ADR.STATE

         Let $StateDescr = ''
         Do Get-State-Descr

         Let $CountryCode = ''
         Let $CountryCode = &ADR.COUNTRY
         Do Get-Country-Name

         Let $EE_Address =$EE_Address || ' ' || $StateDescr
         If RTRIM(&ADR.CITY,' ') <> ''
            Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.CITY,' ')
         End-If

         If RTRIM(&ADR.POSTAL,' ') <> ''
            Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.POSTAL,' ')
         End-If
         Let $EE_Address = $EE_Address || ' ' || rtrim($CountryName,' ')
    End-If

    FROM PS_ADDRESSES ADR
   WHERE ADR.EMPLID = $Emplid
     AND ADR.ADDRESS_TYPE = $AddressType
End-SELECT
End-Procedure   Address-Details
!
!********************************************************************
! Procedure :   Get-State-Descr
!********************************************************************
Begin-Procedure Get-State-Descr
Begin-SELECT
SCD.DESCR
   LET $StateDescr = rtrim(&SCD.DESCR,' ')
    FROM PS_STATE_NAMES_TBL SCD
  WHERE SCD.STATE = $StateCode
   AND  SCD.COUNTRY = 'HKG'
End-SELECT
End-Procedure  Get-State-Descr
!
!********************************************************************
! Procedure :   Get-Global-State-Descr
!********************************************************************
Begin-Procedure Get-Global-State-Descr
   Let $StateDescr = ''
Begin-SELECT
SCD1.DESCR
   LET $StateDescr = &SCD1.DESCR
    FROM PS_STATE_NAMES_TBL SCD1
  WHERE SCD1.STATE = $StateCode
   AND  SCD1.COUNTRY = $StateCountry
End-SELECT
End-Procedure  Get-Global-State-Descr
!
!********************************************************************
! Procedure :   Get-Prev-Employer
!********************************************************************
Begin-Procedure Get-Prev-Employer
   Let $PrevEmployer = ''
   Let $PrevEmplAdr  = ''
Begin-SELECT
PREV.EMPLOYER
PREV.CITY
PREV.STATE
PREV.COUNTRY
   Let $PrevEmployer = &PREV.EMPLOYER
   Let $PrevEmplAdr  = &PREV.CITY
   Let $StateCode    = &PREV.STATE
   Let $StateCountry = &PREV.COUNTRY

   if rtrim($StateCode,' ') <> ''
      LET $StateDescr = ''
      Do Get-Global-State-Descr
      Let $PrevEmplAdr  = $PrevEmplAdr || ',' || $StateDescr || ' ' || $StateCountry
      Let $PrevEmployer = $PrevEmployer || ',' || $PrevEmplAdr
   end-if

  FROM PS_PRIORWORK_EXPER PREV
   WHERE PREV.EMPLID = $Emplid
     AND PREV.COUNTRY = 'HKG'
     AND PREV.SEQUENCE_NBR = (SELECT MAX(PREV1.SEQUENCE_NBR)
                                FROM PS_PRIORWORK_EXPER PREV1
                                   WHERE PREV1.EMPLID = PREV.EMPLID)
End-SELECT
End-Procedure  Get-Prev-Employer
!
!********************************************************************
! Procedure :   Pay-Entity-Details
!********************************************************************
Begin-procedure Pay-Entity-Details
Begin-SELECT
PED.DESCR
GPD.ADDRESS1
GPD.ADDRESS2
GPD.ADDRESS3
GPD.CITY
GPD.STATE

    Let $StateCode = &GPD.STATE

    Let $StateDescr = ''
    Do Get-State-Descr
    Let $PE_Address = rtrim(&GPD.ADDRESS1,' ')
    if rtrim(&GPD.ADDRESS2,' ') <> ''
       Let $PE_Address =$PE_Address || ', ' || rtrim(&GPD.ADDRESS2,' ')
    End-if
    if rtrim(&GPD.ADDRESS3,' ') <> ''
       Let $PE_Address =$PE_Address || ', ' || rtrim(&GPD.ADDRESS3,' ')
    End-if

    if rtrim(&GPD.CITY,' ') <> ''
        Let $PE_Address = $PE_Address || ', ' || rtrim(&GPD.CITY,' ')
    End-if
    if rtrim($StateDescr,' ') <> ''
       Let $PE_Address =$PE_Address || ', ' || $StateDescr
    end-if
    !Let $PE_Address =$PE_Address || ' ' || $StateDescr !****************MADE THIS COMMENTED AND PUT IT BEFORE CITY

    FROM PS_GP_PYENT PED, PS_GP_PYENT_DTL GPD
         WHERE PED.PAY_ENTITY = GPD.PAY_ENTITY
           AND PED.PAY_ENTITY = $PrimaryPE
           AND GPD.EFFDT = (SELECT MAX(GPD1.EFFDT) FROM PS_GP_PYENT_DTL GPD1
                              WHERE GPD1.PAY_ENTITY = GPD.PAY_ENTITY
                           )
End-SELECT
End-Procedure   Pay-Entity-Details
!
!********************************************************************
! Procedure :   Get-EE-Quarters
!********************************************************************
Begin-Procedure Get-EE-Quarters
   Let #TotalQtrPrinted = 0
Begin-SELECT
QADR.ADDRESS1
QADR.ADDRESS2
QADR.ADDRESS3
QADR.CITY
QADR.COUNTRY
QADR.STATE
QADR.GPHK_QTR_DESC
QADR.GPHK_QTR_BGN_DT
QADR.GPHK_QTR_END_DT
QADR.GPHK_QTR_ER2L_AMT
QADR.GPHK_QTR_EE2L_AMT
QADR.GPHK_QTR_ER2EE_AMT
QADR.GPHK_QTR_EE2ER_AMT
QADR.GPHK_RFND_RENT

    Let $SrchCountry = &QADR.COUNTRY
    Let $StateCode = &QADR.STATE

    Let $StateDescr = ''
    Do Get-State-Descr

    Let $Qtrs_1_Address = rtrim(&QADR.ADDRESS1,' ')
    if rtrim(&QADR.ADDRESS2,' ') <> ''
       Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || rtrim(&QADR.ADDRESS2,' ')
    End-if
    if rtrim(&QADR.ADDRESS3,' ') <> ''
       Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || rtrim(&QADR.ADDRESS3,' ')
    End-if
    Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || $StateDescr
    if rtrim(&QADR.CITY,' ') <> ''
       Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || rtrim(&QADR.CITY,' ')
    End-if


    Let $Qtrs_1_Nature     = &QADR.GPHK_QTR_DESC
    Let $Qtrs_1_Prd_Begin  = &QADR.GPHK_QTR_BGN_DT
    Let $Qtrs_1_Prd_End    = &QADR.GPHK_QTR_END_DT
    Let #Amt_Qtrs_1_ER2LL  = &QADR.GPHK_QTR_ER2L_AMT
    Let #Amt_Qtrs_1_EE2LL  = &QADR.GPHK_QTR_EE2L_AMT
    Let #Amt_Qtrs_1_ER2EE  = &QADR.GPHK_QTR_ER2EE_AMT
    Let #Amt_Qtrs_1_EE2ER  = &QADR.GPHK_QTR_EE2ER_AMT
    If &QADR.GPHK_RFND_RENT = 'Y'
       Let #TotRefundRent  = #TotRefundRent + #Amt_Qtrs_1_ER2EE
    end-if


    if rtrim($Qtrs_1_Prd_Begin,' ') <> ''
       Do Format-DateTime($Qtrs_1_Prd_Begin, $Qtrs_1_Prd_Begin, {DEFDATE},'','')
    end-if

    if rtrim($Qtrs_1_Prd_End,' ') <> ''
       Do Format-DateTime($Qtrs_1_Prd_End, $Qtrs_1_Prd_End, {DEFDATE},'','')
    end-if

    Let $AlphaChar = chr(#AlphaChar)
    Let $SeqStr = to_char(#Seq)
    Let $SeqStr = rtrim($SeqStr,' ')
    Let $SeqStr = ltrim($SeqStr,' ')

    print 'Address :'      (#Cr,#PC2)
    Print $Qtrs_1_Address            (#Cr,38)

    Let #Cr = #Cr + 2
    print 'Nature :'      (#Cr,#PC2)
    Print $Qtrs_1_Nature      (#Cr,32)

!    print 'Period provided:'  (#Cr,65)

!    if rtrim($Qtrs_1_Prd_Begin,' ') <> ''
!       Print $Qtrs_1_Prd_Begin                 (#Cr,85) !edit 'DD/MM/YYYY'
!       Print ' - '                             (#Cr,97)
!    end-if

!    if rtrim($Qtrs_1_Prd_End,' ') <> ''
!       Print $Qtrs_1_Prd_End                   (#Cr,99) !edit 'DD/MM/YYYY'
!    end-if

    Let #Cr = #Cr + 2
    print 'Rent paid to landlord by employer:' (#Cr,#PC2)
    if #Amt_Qtrs_1_ER2LL <> 0
       print 'HK$'                                (#Cr,90)
       Print #Amt_Qtrs_1_ER2LL                    (#Cr,95) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1
    print 'Rent paid to landlord by employee:' (#Cr,#PC2)
    if #Amt_Qtrs_1_EE2LL <> 0
       print 'HK$'                                (#Cr,90)
       Print #Amt_Qtrs_1_EE2LL                    (#Cr,95) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1
    print 'Rent refunded to employee :'         (#Cr,#PC2)
    if #Amt_Qtrs_1_ER2EE <> 0
       print 'HK$'                                (#Cr,90)
       Print #Amt_Qtrs_1_ER2EE                    (#Cr,95) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1
    print 'Rent paid to employer by employee :' (#Cr,#PC2)
    if #Amt_Qtrs_1_EE2ER <> 0
       print 'HK$'                                (#Cr,90)
       Print #Amt_Qtrs_1_EE2ER                 (#Cr,95) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1

    Let #TotalQtrPrinted = #TotalQtrPrinted + 1

    if #Cr > 58
       Do Print-Page-Bottom-Dtl
       New-page
       Let #Cr = 1
    End-if

    FROM PS_GPHK_IR56_QTR QADR
   WHERE QADR.EMPLID           = $Emplid
     AND QADR.GPHK_REPORT_TYPE = $ReportType
     AND QADR.GPHK_TAX_REF_NUM = $TaxRefNum
     AND QADR.GPHK_TAX_YEAR    = #TaxYear
     AND QADR.GPHK_SERIAL_NUM  = #SerialNum
End-SELECT
End-Procedure   Get-EE-Quarters
!
!********************************************************************
! Procedure :   Get-EE-Details
!********************************************************************
Begin-procedure Get-EE-Details

   Do Get-EE-Personal-Data
   Do Get-EE-Names
   Do Get-EE-ID
   Do Get-EE-Tax-File-No
   Do EE-Job-Detail
!   do Get-EE-Salary

   Let $AddressType = 'MAIL'
   Do Address-Details
   Let $EE_Corr_Address = $EE_Address

   Let $AddressType = 'HOME'
   Do Address-Details
   Let $EE_Resid_Address = $EE_Address

   Do Get-EE-PassPort-Detail
   if $EE_MarStatus = 'M'
      Do Get-EE-Spouse-Detail
      Do Get-Spouse-ID
      Do Get-Spouse-PassPort-Detail
   End-if
   Do Part-Time-ER-Name

End-Procedure   Get-EE-Details
!
!********************************************************************
! Procedure :   Get-EE-Tax-File-No
!********************************************************************
Begin-Procedure Get-EE-Tax-File-No
Begin-SELECT
ETD.NATIONAL_ID
    Let $EE_Tax_No    = rtrim(&ETD.NATIONAL_ID,' ')

   FROM PS_PERS_NID ETD
  WHERE ETD.EMPLID = $Emplid
   AND  ETD.NATIONAL_ID_TYPE ='TAX_NO'
End-SELECT
End-Procedure   Get-EE-Tax-File-No
!
!***********************************************************************
! Procedure:    Retrieve-EE-Amounts
!***********************************************************************
begin-procedure Retrieve-EE-Amounts
    Let #TotalSalary = 0
Begin-SELECT
SUM(JOB.COMPRATE)  &TotSal
    Let #TotalSalary = &TotSal
   FROM PS_JOB JOB
    WHERE JOB.EMPLID = $EMPLID
      AND JOB.EMPL_STATUS ='A'
      AND JOB.EFFDT  = (SELECT MAX(JOB1.EFFDT) FROM PS_JOB JOB1
                             WHERE JOB1.EMPLID = JOB.EMPLID
                               AND JOB1.EFFDT <= $ThruDate
                               AND JOB1.ACTION IN ('HIR','REH'))
      AND JOB.EFFSEQ = (SELECT MAX(JOB2.EFFSEQ) FROM PS_JOB JOB2
                             WHERE JOB2.EMPLID = JOB.EMPLID
                                AND JOB2.EFFDT = JOB.EFFDT)
GROUP BY JOB.EMPLID
End-SELECT
End-Procedure   Retrieve-EE-Amounts
!
!
!***********************************************************************
! Procedure: Get-Country-Name
!***********************************************************************
begin-Procedure Get-Country-Name
  Let $CountryName = ''
begin-SELECT
CO.DESCR     &CountryName

     Move &CountryName to $CountryName

   FROM PS_COUNTRY_TBL CO
  WHERE CO.COUNTRY = $CountryCode
end-SELECT
end-Procedure   Get-Country-Name
!
!********************************************************************
! Procedure :   Check-Currency-Payment
!********************************************************************
Begin-procedure Check-Currency-Payment
   Let $PaidInSelected = 'N'
Begin-SELECT
OS.CURRENCY_CD

    Let $PaidInSelected = 'Y'

    FROM PS_GPHK_IR56_DTL OS
    WHERE OS.GPHK_REPORT_TYPE = $ReportType
      AND OS.GPHK_TAX_YEAR    = #TaxYear
      AND OS.GPHK_TAX_REF_NUM = $TaxRefNum
      AND OS.EMPLID           = $Emplid
      AND OS.CURRENCY_CD      = $CurrencyCd
      AND OS.GPHK_SERIAL_NUM  = #SerialNum
End-SELECT
End-Procedure   Check-Currency-Payment
!
!********************************************************************
! Procedure :   Get-TaxRef-Details
!********************************************************************
Begin-procedure Get-TaxRef-Details
Begin-SELECT
PED.DESCR50
PED.GPHK_DESIGNATION
PED.GPHK_EMPLR_REF_NUM
PED.GPHK_SIGNATORY

    Let $EntityName     = &PED.DESCR50
    Let $ER_FileNumber  = &PED.GPHK_EMPLR_REF_NUM
    Let $ER_Designation = &PED.GPHK_DESIGNATION
    Let $ER_Signer      = &PED.GPHK_SIGNATORY

    Let $ER_FileNumber  = rtrim($ER_FileNumber,' ')

    if rtrim(&PED.GPHK_SIGNATORY,' ') <> ''
       Do Get-Signatory-Name
    End-if

    FROM PS_GPHK_TAXREF_TBL PED
     WHERE PED.GPHK_TAX_REF_NUM = $TaxRefNum
      AND PED.EFFDT = (SELECT MAX(PED1.EFFDT) FROM PS_GPHK_TAXREF_TBL PED1
                           WHERE PED1.GPHK_TAX_REF_NUM = PED.GPHK_TAX_REF_NUM
                             AND PED1.EFFDT <= $Tax_Yr_March
                      )
End-SELECT
End-Procedure   Get-TaxRef-Details
!
!********************************************************************
! Procedure :   Get-TaxRef-PayEntity
!********************************************************************
Begin-procedure Get-TaxRef-PayEntity
  let $PrimaryPE = ''
Begin-SELECT
PEDD.PAY_ENTITY

    let $PrimaryPE = &PEDD.PAY_ENTITY

    FROM PS_GPHK_TAXREF_DTL PEDD
     WHERE PEDD.GPHK_TAX_REF_NUM = $TaxRefNum
      AND PEDD.PRIMARY_INDICATOR = 'Y'
      AND PEDD.EFFDT = (SELECT MAX(PEDD1.EFFDT) FROM PS_GPHK_TAXREF_TBL PEDD1
                           WHERE PEDD1.GPHK_TAX_REF_NUM = PEDD.GPHK_TAX_REF_NUM
                             AND PEDD1.EFFDT <= $Tax_Yr_March
                      )
End-SELECT
End-Procedure   Get-TaxRef-PayEntity
!
!***********************************************************************
! Procedure: Get-Signatory-Name
!***********************************************************************
Begin-Procedure Get-Signatory-Name
Begin-SELECT
GSN.NAME

    Let $ER_Signatory   = &GSN.NAME

   FROM PS_NAMES GSN
    WHERE GSN.EMPLID = $ER_Signer
      AND GSN.NAME_TYPE = 'PRI'
End-SELECT
End-Procedure Get-Signatory-Name
!
!***********************************************************************
! Procedure: Print-Page-Bottom-Dtl
!***********************************************************************

Begin-Procedure Print-Page-Bottom-Dtl
   Let #Cr= 67
   print 'Signature: '  (#Cr,#PC1)
   
   print 'Designation:'   (,85)
   
   Print $ER_Designation  (,115)    wrap 20 3
   
    print '  '             (+1,85)
     print 'Name: '       (+1,#PC1)
     print 'Date:'          (,85)
   let $temp = $PrintDate
   do Convert-date
   let $PrintDate = $temp
   Print $PrintDate       (,115)
   Print $ER_Signatory    (,30)       wrap 15 3
   
   
   
   !Let #Cr = #Cr + 2
      
   Graphic (68,200,95) BOX 11 0 0
   Print 'For Official Use'   (80,230)  point-size = 14
   Graphic (79,200,95) BOX 2 0 0


   let #Cr = #Cr + 9
   print 'IR56E'     (#Cr,#PC1)


End-Procedure Print-Page-Bottom-Dtl
!
!***********************************************************************
! Procedure: Qtr-Blank-Label
!***********************************************************************
Begin-Procedure Qtr-Blank-Label

    Let #tempcol = #PC1 + 8
    Let #Cr = #Cr + 1
    print 'Address :'      (#Cr,#tempcol)

    Let #Cr = #Cr + 3
    print 'Nature :'      (#Cr,#tempcol)

    Let #Cr = #Cr + 3
    print 'Rent paid to landlord by employer:' (#Cr,#tempcol)

    Let #Cr = #Cr + 1
    print 'Rent paid to landlord by employee:' (#Cr,#tempcol)

    Let #Cr = #Cr + 1
    print 'Rent refunded to employee:'         (#Cr,#tempcol)

    Let #Cr = #Cr + 1
    print 'Rent paid to employer by employee:' (#Cr,#tempcol)

    Let #Cr = #Cr + 2

End-Procedure
!
!********************************************************************
! Procedure :   Get-EE-Quarter-Count
!********************************************************************
Begin-Procedure Get-EE-Quarter-Count
   Let #QtrCount = 0
Begin-SELECT
QCNT.GPHK_QTR_NUM

   Let #QtrCount = &QCNT.GPHK_QTR_NUM

    FROM PS_GPHK_IR56_QTR QCNT
   WHERE QCNT.EMPLID           = $Emplid
     AND QCNT.GPHK_REPORT_TYPE = $ReportType
     AND QCNT.GPHK_TAX_REF_NUM = $TaxRefNum
     AND QCNT.GPHK_TAX_YEAR    = #TaxYear
     AND QCNT.GPHK_SERIAL_NUM  = (SELECT MAX(QCNT1.GPHK_SERIAL_NUM) FROM PS_GPHK_IR56_TBL QCNT1
                                   WHERE QCNT1.GPHK_REPORT_TYPE = QCNT.GPHK_REPORT_TYPE
                                     AND QCNT1.GPHK_TAX_YEAR    = QCNT.GPHK_TAX_YEAR
                                     AND QCNT1.GPHK_TAX_REF_NUM = QCNT.GPHK_TAX_REF_NUM
                                     AND QCNT1.EMPLID           = QCNT.EMPLID
                                )
End-SELECT
End-Procedure   Get-EE-Quarter-Count
!
!***********************************************************************
! Procedure: Print-Addr-Mult-Lines
!***********************************************************************
begin-procedure Print-Addr-Mult-Lines
   let #CurrCharPosn = 0
   while 1
       ! Find the character position <= #MaxNoCharInLn that completes a word (use a space character to mark end of word)
       if length($Addr_Rem_Str) > #MaxNoCharInLn
          let #WrapLineAt = #MaxNoCharInLn
          let #CurrCharPosn = #MaxNoCharInLn
          while #CurrCharPosn >= 1
             if substr($Addr_Rem_Str , #CurrCharPosn , 1) = ' '
                let #WrapLineAt = #CurrCharPosn
                break
             end-if
             let #CurrCharPosn = #CurrCharPosn  - 1
          end-while
          let $Addr_Print_Str = substr($Addr_Rem_Str , 1 , #WrapLineAt )
          let $Addr_Print_Str = ltrim(rtrim($Addr_Print_Str,' '),' ')
       else
          let $Addr_Print_Str = $Addr_Rem_Str
       end-if
       Print $Addr_Print_Str                            (#Cr,#addr_col_pos)
       Let #Cr = #Cr + 1
       if length($Addr_Rem_Str) > #MaxNoCharInLn
          let $Addr_Rem_Str = substr($Addr_Rem_Str , #WrapLineAt + 1 , length($Addr_Rem_Str) - #WrapLineAt)
       else
          break
       end-if
   end-while
End-procedure

!*********************************************************************
!Procedure : Convert-date
!*********************************************************************
begin-procedure Convert-date
let $dd=''
let $mm=''
let $yyyy=''
let $mm=substr($temp,1,2)
let $dd=substr($temp,4,2)
let $yyyy=substr($temp,7,10)
let $temp=''
let $temp=$dd||'/'||$mm||'/'||$yyyy
end-procedure

!
#include 'number.sqc'   ! routines for formatting numbers.
#include 'datetime.sqc' ! routines for formatting dates and times.
#include 'stdapi.sqc'   ! routines for process scheduler manipulation.
#include 'curdttim.sqc'  !get-current-datetime procedure
#include 'datemath.sqc'  !function for date-calculation
