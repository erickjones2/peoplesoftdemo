!***********************************************************************
! GPCHTX01.SQC:  Fetching SQC for Report                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!          $Date:  2013/12/12:21:53:00                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!***********************************************************************

Begin-Procedure Get_Data
#Debug Show '-> Get_Data '

   do Fetch_Report_data_tx011
   do Fetch_Report_data_tx012


#Debug Show '<- Get_Data '
End-Procedure Get_Data
!*************************************************************************************
begin-procedure GetMaxPeriodCalc
#DEBUG SHOW '-> GetMaxPeriodCalc '

  let $MaxPeriodCalcCmp = ''

Begin-select
MAX(MXP.PRD_END_DT) &MxPeriodC

    let $MaxPeriodCalc = &MxPeriodC
    do Format-DateTime($MaxPeriodCalc,$MaxPeriodCalcCmp,{DEFCMP},'','')

FROM PS_GP_CAL_RUN GCR,PS_GP_CAL_RUN_DTL MXP
WHERE GCR.CAL_RUN_ID        = MXP.CAL_RUN_ID
AND   MXP.PRD_END_DT between $Ctl_Start_Dt and $Ctl_End_Dt
AND  (GCR.RUN_FINALIZED_IND ='Y' OR GCR.RUN_OPEN_IND ='Y')
AND   MXP.PAY_ENTITY        = $Ctl_PayEntity
End-select

#DEBUG SHOW '<- GetMaxPeriodCalc ' $MaxPeriodCalc
end-procedure
!*********************************************************************************************
begin-procedure  Fetch_Report_data_tx012
#DEBUG SHOW '-> Fetch_Report_data_tx012  '

   do GetMaxPeriodCalc

   let $FirstRow              = 'Y'
   let $FirstRowRep           = 'Y'
   let $Empl_ID_Ins           = ' '
   let $Tax_Tariff_Type_INSD  =  'AND INSD.GPCH_TX_TRF_TYPE IN (''D'',''A'',''I'',''S'',''O'')'

  
begin-select
#ifdef ORACLE
/*+ INDEX(INSD PS_GPCH_RP_0001)*/
#endif
INSD.EMPLID
INSD.EMPL_RCD
INSD.PRD_END_DT
INSD.GPCH_AL_CPAY_ENDDT
INSD.SEG_END_DT
INSD.SEG_BGN_DT
INSD.HIRE_DT
INSD.TERMINATION_DT
INSD.BIRTHDATE
INSD.MAR_STATUS
INSD.SEX
INSD.GPCH_TX_VILLAGE_CD
INSD.GPCH_TX_EXEMPT_TAX
INSD.GPCH_TX_TRF_CD
INSD.GPCH_TX_CANTON
INSD.POSTAL
INSD.GPCH_TX_VILLAGE_L
INSD.GPCH_RP_AMOUNT1
INSD.GPCH_RP_AMOUNT2
INSD.GPCH_RP_AMOUNT3
INSD.GPCH_RP_AMOUNT10
INSD.GPCH_RP_AMOUNT14
INSD.GPCH_RP_AMOUNT15
INSD.GPCH_RP_AMOUNT19
INSD.GPCH_RP_AMOUNT20
INSD.GPCH_RP_AMOUNT21
INSD.GPCH_RP_AMOUNT24
INSD.GPCH_RP_AMOUNT25
INSD.GPCH_RP_AMOUNT27
INSD.NATIONAL_ID
INSD.GPCH_AH_NNSS
INSD.COUNTRY_FROM
INSD.GPCH_TX_TRF_TYPE
INSD.SPOUSE_NAME
INSD.GPCH_TX_SPOUSE_WL
INSD.VISA_PERMIT_TYPE
INSD.CONTRACT_TYPE
INSD.REG_TEMP
INSD.LOCATION
INSD.FTE
INSD.SETID_LOCATION


  if $Empl_ID_Ins  <>  rtrim(&INSD.EMPLID,' ')  and  $Empl_ID_Ins <> ' '
     let $FirstRow   = 'Y'

     if $FirstRowRep = 'N'
       do Format-DateTime($Seg_E_Ins,$Seg_E_Ins_tmp1,{DEFCMP},'','')

       if $MaxPeriodCalcCmp > $Seg_E_Ins_tmp1

          let $EndDat = $Seg_E_Ins
          let $GPCH_RC_AL01_S2 = 'A'

       end-if
     end-if

         do InsertData

  end-if

  !------------------------------------------------------------------


  if $FirstRow = 'N'

     do GetDate_PlusDays($Seg_E_Ins, +1, $Seg_E_Ins_tmp)
     do Format-DateTime($Seg_E_Ins_tmp,$Seg_E_Ins_tmp1,{DEFCMP},'','')
     do Format-DateTime($E_DT_Ins       ,$E_DT_Ins_Cmp,{DEFCMP},'','')
     do Format-DateTime(&INSD.SEG_BGN_DT,$INSD.SEG_BGN_DT_tmp,{DEFCMP},'','')
     do Format-DateTime(&INSD.SEG_END_DT,$INSD.SEG_END_DT_tmp,{DEFCMP},'','')


     if  ($E_DT_Ins_Cmp < $INSD.SEG_END_DT_tmp ) AND  $E_DT_Ins_Cmp <> '' AND
         (&INSD.GPCH_RP_AMOUNT1 <> 0 or &INSD.GPCH_RP_AMOUNT2  <> 0  or
          &INSD.GPCH_RP_AMOUNT3 <> 0 or &INSD.GPCH_RP_AMOUNT14 <> 0 or
          &INSD.GPCH_RP_AMOUNT15 <> 0 )

          let $InsertRow       = 'Y'

     end-if

     ! Luecke in RP_0001, dann Austritt
     ! Vergleich aktuelle altes segment Ende Datum + 1
     if $INSD.SEG_BGN_DT_tmp <> $Seg_E_Ins_tmp1

         let $InsertRow       = 'Y'
         let $EndDat          = $Seg_E_Ins
         let $GPCH_RC_AL01_S2 = 'A'
     end-if

     ! Grenzgaenger- , Village- oder Cantonwechsel dann Austritt
     ! Vergleich aktuelle gegen zukuenftige Zeile
     if rtrim(&INSD.GPCH_TX_TRF_TYPE  ,' ') <> $Tax_Tariff_Type_Ins or
        rtrim(&INSD.GPCH_TX_VILLAGE_CD,' ') <> $Village_CD_Ins
        or ( &INSD.GPCH_TX_CANTON='GE' and (rtrim(&INSD.LOCATION,' ') <> $Work_Location) )
           let $InsertRow       = 'Y'
           let $EndDat          = $Seg_E_Ins
           let $GPCH_RC_AL01_S2 = 'A'
     end-if

     ! Tarifwechsel
     ! Vergleich aktuelle gegen alte Zeile
     if $Tariff_CD_Ins      <> rtrim(&INSD.GPCH_TX_TRF_CD  ,' ') and
        $Tax_Tariff_Type_Ins = rtrim(&INSD.GPCH_TX_TRF_TYPE,' ')

        let $InsertRow = 'Y'
     end-if

     ! Wenn einer der vorgenannten Faelle, dann fuer alte Zeile ein Eintrag in GPCHTX012_TMP
     if $InsertRow = 'Y'

        do InsertData
     end-if

     ! Initialisieren von Tarifwechsel und Eintritt fuer neue Zeile
     ! Tarifwechsel, wenn lueckenlos und kein Wechsel im Grenzgaengerstatus
     if $Tariff_CD_Ins      <> rtrim(&INSD.GPCH_TX_TRF_CD    ,' ')  and
        $Tax_Tariff_Type_Ins = rtrim(&INSD.GPCH_TX_TRF_TYPE  ,' ')  and
        $INSD.SEG_BGN_DT_tmp = $Seg_E_Ins_tmp1
            let $BegDat          = &INSD.SEG_BGN_DT
            let $GPCH_RC_AL01_S1 = 'T'
     end-if

     ! Wenn Luecke, dann Eintritt
     if $INSD.SEG_BGN_DT_tmp <> $Seg_E_Ins_tmp1
            let $BegDat          = &INSD.SEG_BGN_DT
            let $GPCH_RC_AL01_S1 = 'E'
     end-if

     ! Wenn Luecke, dann Eintritt
     ! Grenzgaenger- , Village- oder Cantonwechsel dann Eintritt
     ! Vergleich aktuelle gegen alte Zeile
     if rtrim(&INSD.GPCH_TX_TRF_TYPE  ,' ') <> $Tax_Tariff_Type_Ins or
        rtrim(&INSD.GPCH_TX_VILLAGE_CD,' ') <> $Village_CD_Ins 
        or ( &INSD.GPCH_TX_CANTON='GE' and (rtrim(&INSD.LOCATION,' ') <> $Work_Location) )
            let $BegDat          = &INSD.SEG_BGN_DT
            let $GPCH_RC_AL01_S1 = 'E'
     end-if

  else
     do Format-DateTime($Ctl_Start_Dt,$Ctl_B_tmp,{DEFCMP},'','')
     do Format-DateTime(&INSD.SEG_BGN_DT,$INSD.SEG_BGN_tmp,{DEFCMP},'','')

     if $Ctl_B_tmp <> $INSD.SEG_BGN_tmp
        let $GPCH_RC_AL01_S1 = 'E'
     end-if
     let $BegDat = &INSD.SEG_BGN_DT
  end-if
  !----------------------------------------------------------
  let $Empl_ID_Ins                 =  rtrim(&INSD.EMPLID,' ')
  let #Empl_RCD_Ins                =  &INSD.EMPL_RCD
  let $Canton_Ins                  =  rtrim(&INSD.GPCH_TX_CANTON,' ')
  let $Postal_Lok_Ins              =  rtrim(&INSD.POSTAL,' ')
  let $Village_L_Ins               =  rtrim(&INSD.GPCH_TX_VILLAGE_L,' ')
  let $Village_CD_Ins              =  rtrim(&INSD.GPCH_TX_VILLAGE_CD,' ')
  let $Tariff_CD_Ins               =  rtrim(&INSD.GPCH_TX_TRF_CD,' ')
  let $B_DT_Ins                    =  &INSD.HIRE_DT
  let $E_DT_Ins                    =  &INSD.TERMINATION_DT
  let $Birthdate_Ins               =  &INSD.BIRTHDATE
  let $Sex_Ins                     =  &INSD.SEX
  let $Mar_Status_Ins              =  rtrim(&INSD.MAR_STATUS,' ')
  let #Amount1_Ins                 =  #Amount1_Ins + &INSD.GPCH_RP_AMOUNT1
  let #Amount2_Ins                 =  #Amount2_Ins + &INSD.GPCH_RP_AMOUNT2
  let #Amount3_Ins                 =  #Amount3_Ins + &INSD.GPCH_RP_AMOUNT3
  let #Amount10_Ins                =  #Amount10_Ins + &INSD.GPCH_RP_AMOUNT10
  let #Amount14_Ins                =  #Amount14_Ins + &INSD.GPCH_RP_AMOUNT14
  !let #Amount15_Ins                =  #Amount15_Ins + &INSD.GPCH_RP_AMOUNT15
  let #Amount15_Ins                =  &INSD.GPCH_RP_AMOUNT15
  let #Amount19_Ins                =  #Amount19_Ins + &INSD.GPCH_RP_AMOUNT19
  let #Amount20_Ins                =  &INSD.GPCH_RP_AMOUNT20
  let #Amount21_Ins                =  #Amount21_Ins + &INSD.GPCH_RP_AMOUNT21
  let #Amount24_Ins                =  #Amount24_Ins + &INSD.GPCH_RP_AMOUNT24
  let #Amount25_Ins                =  #Amount25_Ins + &INSD.GPCH_RP_AMOUNT25
  let #Amount27_Ins                =  #Amount27_Ins + &INSD.GPCH_RP_AMOUNT27
  let $Seg_E_Ins                   =  &INSD.SEG_END_DT
  let $Seg_B_Ins                   =  &INSD.SEG_BGN_DT
  let $INSD.GPCH_TX_EXEMPT_TAX_Ins =  &INSD.GPCH_TX_EXEMPT_TAX
  let $Tax_Tariff_Type_Ins         =  rtrim(&INSD.GPCH_TX_TRF_TYPE,' ')
  let $FirstRow                    = 'N'
  let $FirstRowRep                 = 'N'
  let $N_Id                        =  &INSD.NATIONAL_ID
  let $NNSS_Id                     =  &INSD.GPCH_AH_NNSS
  let $COUNTRY_FROM_GE             =  &INSD.COUNTRY_FROM
  let $Spouse_Name_Ins             =  &INSD.SPOUSE_NAME
  let $Spouse_WL_Ins               =  &INSD.GPCH_TX_SPOUSE_WL
  let $Visa_per_Ins                =  &INSD.VISA_PERMIT_TYPE
  let $Type_Ins                    =  &INSD.CONTRACT_TYPE
  let $Type_Empl                   =  &INSD.REG_TEMP  
  let $Work_Location               =  rtrim(&INSD.LOCATION,' ')
  let #FTE_EMPL                    =  &INSD.FTE
  let $Setid_loc                   = rtrim(&INSD.SETID_LOCATION,' ')
   show '$Setid_loc in sqc--' $Setid_loc
FROM PS_GPCH_RP_0001 INSD
WHERE INSD.PAY_ENTITY          = $Ctl_PayEntity
AND   INSD.PRD_END_DT BETWEEN $Ctl_Start_Dt and $Ctl_End_Dt
#ifdef ORACLE
AND   INSD.GPCH_AL_CPAY_ENDDT  = (SELECT /*+ INDEX(INSD1 PS_GPCH_RP_0001)*/ MAX(INSD1.GPCH_AL_CPAY_ENDDT) FROM PS_GPCH_RP_0001 INSD1
#else
AND   INSD.GPCH_AL_CPAY_ENDDT  = (SELECT MAX(INSD1.GPCH_AL_CPAY_ENDDT) FROM PS_GPCH_RP_0001 INSD1
#endif
                                  WHERE INSD1.EMPLID     = INSD.EMPLID
                                  AND   INSD1.EMPL_RCD   = INSD.EMPL_RCD
                                  AND   INSD1.PRD_END_DT = INSD.PRD_END_DT)
[$Tax_Tariff_Type_INSD]
[$Cal_Run_Id_Criteria_INSD]
[$Ctl_Canton_Crit_INSD]
[$Emplid_Criteria_INSD]
!FMB 20130620
[$Company_Criteria_INSD]
ORDER BY INSD.EMPLID,INSD.EMPL_RCD,INSD.PRD_END_DT,INSD.SEG_END_DT
End-select

   if $FirstRow = 'N'

      do Format-DateTime($Seg_E_Ins,$Seg_E_Ins_tmp1,{DEFCMP},'','')

      if $MaxPeriodCalcCmp > $Seg_E_Ins_tmp1

         let $EndDat = $Seg_E_Ins
         let $GPCH_RC_AL01_S2 = 'A'

      end-if
      do InsertData

   end-if

#DEBUG SHOW '<- Fetch_Report_data_tx012  '
end-procedure Fetch_Report_data_tx012
!*********************************************************************************************
begin-procedure InsertData
!#DEBUG SHOW '-> InsertData ' #prcs_process_instance ' , ' $Canton_Ins ' , ' $Village_CD_Ins ' , ' $Tax_Tariff_Type_Ins ' , '  $Empl_ID_Ins ' , ' #Empl_RCD_Ins ' , ' $BegDat

if $Empl_ID_Ins = ''
  let $Empl_ID_Ins = ' '
end-if

if $Village_CD_Ins = ''
   let $Village_CD_Ins = ' '
end-if

if $Tariff_CD_Ins = ''
   let $Tariff_CD_Ins = ' '
end-if

if $Tax_Tariff_Type_Ins = ''
   let $Tax_Tariff_Type_Ins = ' '
end-if

if $Canton_Ins = ''
   let $Canton_Ins = ' '
end-if

if $Postal_Lok_Ins = ''
   let $Postal_Lok_Ins = ' '
end-if

if $Mar_Status_Ins = ''
   let $Mar_Status_Ins = ' '
end-if

if $InsertRow = ''
   let $InsertRow = ' '
end-if

if $GPCH_RC_AL01_S1 = ''
   let $GPCH_RC_AL01_S1 = ' '
end-if

if $GPCH_RC_AL01_S2 = ''
   let $GPCH_RC_AL01_S2 = ' '
end-if

if $BegDat = ''
   let $BegDat = $Seg_B_Ins
end-if

if $EndDat = ''
   let $EndDat = $Seg_E_Ins
end-if

if $N_ID = ''
   let $N_ID = ' '
end-if

if $NNSS_ID = ''
   let $NNSS_ID = ' '
end-if

if $Village_L_Ins = ''
   let $Village_L_Ins = ' '
end-if

if $Country_From_GE = ''
   let $Country_From_GE = ' '
end-if

if $Spouse_Name_Ins = ''
   let $Spouse_Name_Ins = ' '
end-if

if $Spouse_WL_Ins = ''
   let $Spouse_WL_Ins = ' '
end-if

if $Setid_loc = ''
   let $Setid_loc = ' '
end-if

Begin-Sql on-error=give_warning
insert into PS_GPCHTX012_TMP(PROCESS_INSTANCE,GPCH_TX_CANTON, GPCH_TX_VILLAGE_CD,GPCH_TX_TRF_TYPE,
EMPLID, EMPL_RCD,BEGIN_DT,END_DT, HIRE_DT, TERMINATION_DT,BIRTHDATE,SEX,MAR_STATUS,GPCH_TX_TRF_CD, POSTAL,GPCH_TX_VILLAGE_L,
NATIONAL_ID,GPCH_AH_NNSS,COUNTRY_FROM,SPOUSE_NAME,GPCH_TX_SPOUSE_WL,GPCH_RC_AL01_S1,GPCH_RC_AL01_S2,GPCH_RP_AMOUNT1,
GPCH_RP_AMOUNT2,GPCH_RP_AMOUNT3,GPCH_RP_AMOUNT10,GPCH_RP_AMOUNT14,GPCH_RP_AMOUNT15,
GPCH_RP_AMOUNT19,GPCH_RP_AMOUNT20,GPCH_RP_AMOUNT21,GPCH_RP_AMOUNT24,GPCH_RP_AMOUNT25,GPCH_RP_AMOUNT27,VISA_PERMIT_TYPE,CONTRACT_TYPE,REG_TEMP,LOCATION,FTE,SETID_LOCATION)
values (#prcs_process_instance,$Canton_Ins, $Village_CD_Ins, $Tax_Tariff_Type_Ins, $Empl_ID_Ins,
#Empl_RCD_Ins, $BegDat, $EndDat,$B_DT_Ins, $E_DT_Ins,$Birthdate_Ins,$Sex_Ins,$Mar_Status_Ins,$Tariff_CD_Ins,
$Postal_Lok_Ins,$Village_L_Ins,$N_ID,$NNSS_ID,$Country_From_GE,$Spouse_Name_Ins,$Spouse_WL_Ins,$GPCH_RC_AL01_S1, $GPCH_RC_AL01_S2,#Amount1_Ins,
#Amount2_Ins,#Amount3_Ins,#Amount10_Ins,#Amount14_Ins,#Amount15_Ins,#Amount19_Ins,#Amount20_Ins,
#Amount21_Ins,#Amount24_Ins,#Amount25_Ins,#Amount27_Ins,$Visa_per_Ins,$Type_Ins,$Type_Empl,$Work_Location,#FTE_EMPL,$Setid_loc)
end-sql


let $InsertRow       = 'N'
let $GPCH_RC_AL01_S1 = ''
let $GPCH_RC_AL01_S2 = ''
let $BegDat          = ''
let $GPCH_RC_AL01_S1 = ' '
let $EndDat          = ''
let $GPCH_RC_AL01_S2 = ' '

let #Amount1_Ins     =  0
let #Amount2_Ins     =  0
let #Amount3_Ins     =  0
let #Amount10_Ins    =  0
let #Amount14_Ins    =  0
let #Amount15_Ins    =  0
let #Amount19_Ins    =  0
let #Amount20_Ins    =  0
let #Amount21_Ins    =  0
let #Amount24_Ins    =  0
let #Amount25_Ins    =  0
let #Amount27_Ins    =  0

!#DEBUG SHOW '<- InsertData '
end-procedure
!*********************************************************************************************
Begin-Procedure Fetch_Report_data_tx011
#Debug Show '-> Fetch_Report_data_tx011 '

   if $Ctl_Cross_Type = 'Y'
      let $Tax_Tariff_Type_PBD  = ''
      let $Country_From_Crit    = 'AND PBD.COUNTRY_FROM        = ''FRA'''
      let $Tax_Exempt_Crit      = 'AND PBD.GPCH_TX_EXEMPT_TAX  = ''Y'''
   else
      let $Tax_Tariff_Type_PBD  = 'AND PBD.GPCH_TX_TRF_TYPE IN (''D'',''A'',''I'',''S'',''O'')'
      let $Country_From_Crit    = ''
      let $Tax_Exempt_Crit      = ''
   end-if
!FMB 20130620   
   let $Company_Criteria_INSD   = REPLACE($Company_Criteria,'PBD','INSD')
   
#debug show $Company_Criteria
#debug show $Company_Criteria_INSD


#debug show $Cal_Run_Id_Criteria
#debug show $Ctl_Canton_Crit
#debug show $Emplid_Criteria
#debug show $Tax_Tariff_Type_PBD
#debug show $Country_From_Crit

Begin-Sql on-error=give_warning
INSERT INTO PS_GPCHTX011_TMP(PROCESS_INSTANCE,GPCH_TX_CANTON,EMPLID,CAL_RUN_ID,EMPL_RCD,GP_PAYGROUP,CAL_ID,
RSLT_SEG_NUM,GPCH_TX_VILLAGE_CD,GPCH_TX_TRF_TYPE,GPCH_TX_TRF_CD,PRD_END_DT,GPCH_AL_CPAY_ENDDT,SEG_BGN_DT,
SEG_END_DT,SLICE_END_DT,BEGIN_DT,END_DT,BIRTHDATE,HIRE_DT,TERMINATION_DT,PAY_ENTITY,COMPANY,CITY,POSTAL,
ACTION,MAR_STATUS,NATIONAL_ID,GPCH_AH_NNSS,GPCH_TX_CHRCH,SEX,COUNTRY_FROM,SPOUSE_NAME,GPCH_TX_SPOUSE_WL,GPCH_RP_AMOUNT1,
GPCH_RP_AMOUNT2,GPCH_RP_AMOUNT3,GPCH_RP_AMOUNT9,GPCH_RP_AMOUNT11,GPCH_RP_AMOUNT14,GPCH_RP_AMOUNT15,GPCH_RP_AMOUNT19,
GPCH_RP_AMOUNT20,GPCH_RP_AMOUNT21,GPCH_RP_AMOUNT22,GPCH_RP_AMOUNT26,GPCH_RP_AMOUNT27,VISA_PERMIT_TYPE,CONTRACT_TYPE,REG_TEMP,
GPCH_RP_CHAR03,GPCH_RP_FROMDT1)
#ifdef ORACLE
SELECT /*+ INDEX(PBD PS_GPCH_RP_0001)*/
#else
SELECT
#endif
[$prcs_process_instance],PBD.GPCH_TX_CANTON,PBD.EMPLID,PBD.CAL_RUN_ID,PBD.EMPL_RCD,PBD.GP_PAYGROUP,PBD.CAL_ID
,PBD.RSLT_SEG_NUM,PBD.GPCH_TX_VILLAGE_CD,PBD.GPCH_TX_TRF_TYPE,PBD.GPCH_TX_TRF_CD,PBD.PRD_END_DT
,PBD.GPCH_AL_CPAY_ENDDT,PBD.SEG_BGN_DT,PBD.SEG_END_DT,PBD.SLICE_END_DT,PBD.BEGIN_DT,PBD.END_DT,PBD.BIRTHDATE
,PBD.HIRE_DT,PBD.TERMINATION_DT,PBD.PAY_ENTITY,PBD.COMPANY,PBD.CITY,PBD.POSTAL,PBD.ACTION,PBD.MAR_STATUS
,PBD.NATIONAL_ID,PBD.GPCH_AH_NNSS,PBD.GPCH_TX_CHRCH,PBD.SEX,PBD.COUNTRY_FROM,PBD.SPOUSE_NAME,PBD.GPCH_TX_SPOUSE_WL
,PBD.GPCH_RP_AMOUNT1,PBD.GPCH_RP_AMOUNT2,PBD.GPCH_RP_AMOUNT3,PBD.GPCH_RP_AMOUNT9,PBD.GPCH_RP_AMOUNT11,PBD.GPCH_RP_AMOUNT14
,PBD.GPCH_RP_AMOUNT15,PBD.GPCH_RP_AMOUNT19,PBD.GPCH_RP_AMOUNT20,PBD.GPCH_RP_AMOUNT21,PBD.GPCH_RP_AMOUNT22
,PBD.GPCH_RP_AMOUNT26,PBD.GPCH_RP_AMOUNT27,PBD.VISA_PERMIT_TYPE,PBD.CONTRACT_TYPE,PBD.REG_TEMP,PBD.GPCH_RP_CHAR03,PBD.GPCH_RP_FROMDT1
FROM PS_GPCH_RP_0001 PBD
where PBD.PAY_ENTITY = $Ctl_PayEntity
AND   PBD.PRD_END_DT between $Ctl_Start_Dt and $Ctl_End_Dt
#ifdef ORACLE
AND   PBD.GPCH_AL_CPAY_ENDDT = (select /*+ INDEX(PBD1 PS_GPCH_RP_0001)*/ max(PBD1.GPCH_AL_CPAY_ENDDT) from PS_GPCH_RP_0001 PBD1
#else
AND   PBD.GPCH_AL_CPAY_ENDDT = (select max(PBD1.GPCH_AL_CPAY_ENDDT) from PS_GPCH_RP_0001 PBD1
#endif
                               where PBD1.PAY_ENTITY = PBD.PAY_ENTITY
                               AND   PBD1.EMPLID     = PBD.EMPLID
                               AND   PBD1.EMPL_RCD   = PBD.EMPL_RCD
                               AND   PBD1.PRD_END_DT = PBD.PRD_END_DT)
[$Tax_Tariff_Type_PBD]
[$Country_From_Crit]
[$Cal_Run_Id_Criteria]
[$Ctl_Canton_Crit]
[$Tax_Exempt_Crit]
[$Emplid_Criteria]
!FMB 20130620
[$Company_Criteria]
End-Sql

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif

#Debug Show '<- Fetch_Report_data_tx011 '
End-Procedure Fetch_Report_data_tx011
!*************************************************************************************
begin-procedure Delete-Rec-tx011
#Debug show '<- Delete-Rec-tx011'

Begin-Sql on-error=give_warning

  DELETE FROM PS_GPCHTX011_TMP WHERE PROCESS_INSTANCE = #prcs_process_instance

End-Sql

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif

#Debug show '-> Delete-Rec-tx011'
end-procedure Delete-Rec-tx011


!*************************************************************************************
begin-procedure Delete-Rec-tx012
#Debug show '<- Delete-Rec-tx012'

Begin-Sql on-error=give_warning

  DELETE FROM PS_GPCHTX012_TMP WHERE PROCESS_INSTANCE = #prcs_process_instance

End-Sql

#ifdef ORACLE
Begin-Sql on-error=give_warning
commit
End-Sql
#endif

#Debug show '-> Delete-Rec-tx012'
end-procedure Delete-Rec-tx012


!*************************************************************************************

