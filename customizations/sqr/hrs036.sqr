!***********************************************************************
!  HRS036:  Application Details                                        *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2014, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2014/11/28:02:10:30                        !
!       $Release:  HR92                                       !
!      $Revision:  109                                        !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'   !Printer and page-size initialization

begin-report
  do INIT-REPORT
  do GET-INSTALL-OPTIONS
  do PROCESS-MAIN
  do RESET
  do STDAPI-TERM
end-report


begin-heading 4
  print $REPORT_CONF                     ()         bold center
  print 'PeopleSoft'                     (+1,,)     bold center
  print $REPORT_ID                       (+1,5)
  print $ReportID                        ()
  uppercase $REPORT_TITLE
  print $REPORT_TITLE                    ()         bold center
  let #RptCol = {ColR} - 2
  page-number                            (-2,#RptCol)  'Page No. '
  print $RUN_DATE                        (+1,#RptCol)
  print $ReportDate                      ()
  print $RUN_TIME                        (+1,#RptCol)
  print $ReportTime                      ()
  GRAPHIC                                (+1, 4, 170) Horz-line
end-heading

!**********************************************************************!
! Function:    INIT-REPORT                                             !
! Description: initialize report parameters                            !
!**********************************************************************!
begin-procedure INIT-REPORT
  add 1 to #level
  move 'INIT-REPORT'               to $Current-Procedure

#ifdef DebugF
  do PRINT-FLOW
#endif
  move 'HRS036' to $ReportID
  move $REPORT_TITLE to $ReportTitle

  do INIT-DATETIME
  do INIT-NUMBER
  do GET-CURRENT-DATETIME
  !do INITIALIZE-VARIABLES
  do DEFINE-PRCS-VARS
  do GET-RUN-CONTROL-PARMS

  move #prcs_process_instance to $PI_CHAR 9999999999

  !do WRITE-START-MSG-LOG

  ! If the language is specified by operator, get string translation fields once in
  ! operator's language.
  let $rpt_language_cd = $prcs_language_cd

  do GET-HRS036-STRING-TABLE-DEFN

  ! Initialize total_page_lines
  !move 0 to #total_page_lines

  ! Set page control flag.
  !move 'Y' to $First_Report_Page

  subtract 1 from #level

end-procedure

!----------------------------------------------------------------------!
! Procedure: GET-INSTALL-OPTIONS                                       !
! Descr:     Get installation options                                  !
!----------------------------------------------------------------------!
begin-procedure GET-INSTALL-OPTIONS
  add 1 to #level
  move 'GET-INSTALL-OPTIONS' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

begin-select
I.FED
  !Move 'Y' to $isFedFlag
  Move &I.FED to $isFedFlag
FROM PS_INSTALLATION I
end-select

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PROCESS-MAIN                                              !
! Descr:     This procedure reads and prints details of applicant data !
!----------------------------------------------------------------------!
begin-procedure PROCESS-MAIN
  add 1 to #level
  move 'PROCESS-MAIN' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

begin-select
RCR.HRS_PERSON_ID
RCR.HRS_RCMNT_ID
RCR.HRS_PROFILE_SEQ
RCR.HRS_JOB_OPENING_ID
  move &RCR.HRS_PERSON_ID to #hrs_person_id
  move &RCR.HRS_RCMNT_ID to #hrs_rcmnt_id
  move &RCR.HRS_PROFILE_SEQ to #hrs_profile_seq
  move &RCR.HRS_JOB_OPENING_ID to #hrs_job_opening_id
  do GET-APPLICANT
  ! Print each applicant on a separate page
  new-page
FROM PS_HRS_RUN_HRS036 RCR
WHERE RCR.OPRID = $prcs_oprid
AND RCR.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: GET-APPLICANT                                             !
! Descr:     Retrieve main applicant data                              !
!----------------------------------------------------------------------!
begin-procedure GET-APPLICANT
  add 1 to #level
  move 'GET-APPLICANT' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  ! Print section title
  uppercase $REPORT_SECT_00
  print $REPORT_SECT_00                  (1, 5, #cw_REPORT_SECT_00)  bold

begin-select
APP.HRS_PERSON_ID
  move &APP.HRS_PERSON_ID to #HRS_PERSON_ID
  do Get-Applicant-Name
  print $APP_NAME                        (+1,6, #cw_APP_NAME)   bold
  print $Applname                        (,37,)
  print $APP_ID                          (+1,6, #cw_APP_ID)   bold
  print #hrs_person_id                   (,37,) edit 888888888888888

APP.APP_PER_STATUS
  move 'APP_PER_STATUS' to $FieldName
  move &APP.APP_PER_STATUS  to $FieldValue
  do Read-Translate-Table
  print $APP_TYPE                        (+1,6, #cw_APP_TYPE)   bold
  print $XlatLongName                    (,37,)

APP.STATUS_CODE
  move &APP.STATUS_CODE to $hrs_status_code
  do Get-Applicant-Status
  print $APP_STATUS                      (+1,6, #cw_APP_STATUS)   bold
  print $hrs_status_code_descr           (,37,)

  ! Print Job Opening ID and Posting Title
  print $JOB_OPENING                     (+1,6, #cw_JOB_OPENING)   bold
  print #hrs_job_opening_id              (,37,) edit 888888888888888
  do Get-Job-Posting-Title
  print $POSTING_TITLE                   (+1,6, #cw_POSTING_TITLE)   bold
  print $hrs_jo_posting_title            (,37,)

  ! Print a blank line
  print ' '                              (+1,,)

APP.HRS_APP_PREF_CONT
  move &APP.HRS_APP_PREF_CONT to $hrs_app_pref_cont


  do PRINT-APP-RESUME
  do PRINT-APP-CONTACT-INFO
  do PRINT-APP-PHONE
  do PRINT-APP-EMAIL
  do PRINT-APP-PERSONAL-INFO
  do PRINT-APP-PREFERENCES
  if $isFedFlag = 'Y'
     do PRINT-APP-PRIORITY-PLACEMENT
  end-if
  do PRINT-APP-JOB-FAMILIES
  do PRINT-APP-JOB-OPENINGS
  do PRINT-APP-REFERRAL-SOURCES
  do PRINT-APP-EDU-LEVEL
  do PRINT-APP-WORK-EXPERIENCE
  do PRINT-APP-TRAINING
  do PRINT-APP-JPM-CONTENT
  do PRINT-APP-REFERENCES

FROM PS_HRS_APPLICANT_I APP
WHERE APP.HRS_PERSON_ID = #hrs_person_id
end-select

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-RESUME                                          !
! Descr:     This procedure prints applicant's resume data             !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-RESUME
  add 1 to #level
  move 'PRINT-APP-RESUME' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select
PRF.HRS_RESUME_ID
 move &PRF.HRS_RESUME_ID to #hrs_resume_id

FROM PS_HRS_APP_PROF_I PRF
WHERE PRF.HRS_PERSON_ID = #hrs_person_id
AND PRF.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_01
     print $REPORT_SECT_01               (+1, 5, #cw_REPORT_SECT_01)  bold
     let $sect_title_printed = 'Y'
  end-if

APPRES.HRS_RESUME_TITLE
  move &APPRES.HRS_RESUME_TITLE to $hrs_resume_title
  print $RES_TITLE                       (+1,6, #cw_RES_TITLE)   bold
  print $hrs_resume_title                (,37,)

APPRES.LANG_CD
  move &APPRES.LANG_CD to $hrs_lang_cd
  do Get-Language-Code
  print $LANG_CD                         (+1,6, #cw_LANG_CD)   bold
  print $hrs_lang_cd_descr               (,37,)

APPRES.RESUME_TEXT
  move &APPRES.RESUME_TEXT to $hrs_resume_text
  print $RES_TEXT                        (+1,6, #cw_RES_TEXT)   bold

!875217 begins
 let $temp = ' '
 do Strip-off-HTML-Tags($hrs_resume_text,$temp)
 let $hrs_resume_text = $temp
 print $hrs_resume_text                 (,37,) wrap 132 1000   STRIP=<13> ON=<181>
!875217 ends



  ! if the resume has more than 1000 lines change the second argument of wrap
  ! commnad to accommodate.

FROM PS_HRS_APP_RES APPRES
WHERE APPRES.HRS_PERSON_ID = #hrs_person_id
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-CONTACT-INFO                                    !
! Descr:     This procedure prints applicant's contact info            !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-CONTACT-INFO
  add 1 to #level
  move 'PRINT-APP-CONTACT-INFO' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_02
     print $REPORT_SECT_02               (+1, 5, #cw_REPORT_SECT_02)  bold
     let $sect_title_printed = 'Y'
  end-if

APPNAME.NAME_PREFIX
  move &APPNAME.NAME_PREFIX to $hrs_name_prefix
  do Get-Name-Prefix
  print $NAME_PREFIX                     (+1,6, #cw_NAME_PREFIX)   bold
  print $hrs_name_prefix_descr           (,37,)

APPNAME.FIRST_NAME
  move &APPNAME.FIRST_NAME to $hrs_first_name
  print $FNAME                           (+1,6, #cw_FNAME)   bold
  print $hrs_first_name                  (,37,)

APPNAME.MIDDLE_NAME
  move &APPNAME.MIDDLE_NAME to $hrs_middle_name
  print $MNAME                           (+1,6, #cw_MNAME)   bold
  print $hrs_middle_name                 (,37,)

APPNAME.LAST_NAME
  move &APPNAME.LAST_NAME to $hrs_last_name
  print $LNAME                           (+1,6, #cw_LNAME)   bold
  print $hrs_last_name                   (,37,)

APPNAME.NAME_SUFFIX
  move &APPNAME.NAME_SUFFIX to $hrs_name_suffix
  do Get-Name-Suffix
  print $NAME_SUFFIX                     (+1,6, #cw_NAME_SUFFIX)   bold
  print $hrs_name_suffix_descr           (,37,)


FROM PS_HRS_APP_NAME_I APPNAME
WHERE APPNAME.HRS_PERSON_ID = #hrs_person_id
end-select

! Print applicant's address
begin-select
  let $row_exist = 'Y'
APPADDR.ADDRESS_TYPE
APPADDR.COUNTRY
APPADDR.ADDRESS1
APPADDR.ADDRESS2
APPADDR.ADDRESS3
APPADDR.ADDRESS4
APPADDR.CITY
APPADDR.NUM1
APPADDR.NUM2
APPADDR.HOUSE_TYPE
APPADDR.ADDR_FIELD1
APPADDR.ADDR_FIELD2
APPADDR.ADDR_FIELD3
APPADDR.COUNTY
APPADDR.STATE
APPADDR.POSTAL
APPADDR.GEO_CODE
APPADDR.IN_CITY_LIMIT
APPADDR.ADDRESS1_AC
APPADDR.ADDRESS2_AC
APPADDR.ADDRESS3_AC
APPADDR.CITY_AC


  let $COUNTRY  = &APPADDR.COUNTRY
  let $ADDRESS1 = &APPADDR.ADDRESS1
  let $ADDRESS2 = &APPADDR.ADDRESS2
  let $ADDRESS3 = &APPADDR.ADDRESS3
  let $ADDRESS4 = &APPADDR.ADDRESS4
  let $HOUSE_TYPE = &APPADDR.HOUSE_TYPE
  let $ADDR_FIELD1 = &APPADDR.ADDR_FIELD1
  let $ADDR_FIELD2 = &APPADDR.ADDR_FIELD2
  let $ADDR_FIELD3 = &APPADDR.ADDR_FIELD3
  let $NUM1 = &APPADDR.NUM1
  let $NUM2 =&APPADDR.NUM2
  let $CITY = &APPADDR.CITY
  let $STATE =&APPADDR.STATE
  let $POSTAL = &APPADDR.POSTAL
  let $COUNTY = &APPADDR.COUNTY
  let $GEO_CODE =&APPADDR.GEO_CODE
  let $IN_CITY_LIMIT =&APPADDR.IN_CITY_LIMIT

  ! Formats the address based on Country
  do ADFORMAT

  print $ADDR                            (+1,6, #cw_ADDR)   bold

  let $First_Line = 'Y'
  if $ADDLINE1 <> ''
     let $First_Line = 'N'
     print $ADDLINE1                     (0,37)
  end-if
  if $ADDLINE2 <> ''
     if $First_Line = 'Y'
        let $First_Line = 'N'
        print $ADDLINE2                  (0,37)
     else
        print $ADDLINE2                  (+1,37)
     end-if
  end-if
  if $ADDLINE3 <> ''
     if $First_Line = 'Y'
        let $First_Line = 'N'
        print $ADDLINE3                  (0,37)
     else
        print $ADDLINE3                  (+1,37)
     end-if
  end-if
  if $ADDLINE31 <> ''
     if $First_Line = 'Y'
        let $First_Line = 'N'
        print $ADDLINE31                 (0,37)
     else
        print $ADDLINE31                 (+1,37)
     end-if
  end-if
  if $ADDLINE4 <> ''
     if $First_Line = 'Y'
        let $First_Line = 'N'
        print $ADDLINE4                  (0,37)
     else
        print $ADDLINE4                  (+1,37)
     end-if
  end-if
  if $ADDLINE5 <> ''
     if $First_Line = 'Y'
        let $First_Line = 'N'
        print $ADDLINE5                  (0,37)
     else
        print $ADDLINE5                  (+1,37)
     end-if
  end-if
  if $ADDLINE6 <> ''
     if $First_Line = 'Y'
        let $First_Line = 'N'
        print $ADDLINE6                  (0,37)
     else
        print $ADDLINE6                  (+1,37)
     end-if
  end-if
FROM PS_HRS_APP_ADDRESS APPADDR
WHERE APPADDR.HRS_PERSON_ID = #hrs_person_id
end-select

  ! Print applicant's preferred contact method
  move 'HRS_APP_PREF_CONT' to $FieldName
  move $hrs_app_pref_cont  to $FieldValue
  do Read-Translate-Table
  print $CONTACT_METHOD                  (+1,6, #cw_CONTACT_METHOD)   bold
  print $XlatLongName                    (,37,)

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-PHONE                                           !
! Descr:     This procedure prints applicant's phone data              !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-PHONE
  add 1 to #level
  move 'PRINT-APP-PHONE' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_03
     print $REPORT_SECT_03               (+1, 5, #cw_REPORT_SECT_03)  bold
     print $PHONE_TYPE                   (+1, 6, #cw_PHONE_TYPE)      bold
     print $PHONE_NO                     (0, 26, #cw_PHONE_NO)        bold
     print $EXTENSION                    (0, 46, #cw_EXTENSION)       bold
     print $COUNTRY_CD                   (0, 65, #cw_COUNTRY_CD)      bold
     print $PREFERRED                    (0, 82, #cw_PREFERRED)       bold
     let $sect_title_printed = 'Y'
  end-if

APPPHN.PHONE_TYPE
  move 'PHONE_TYPE' to $FieldName
  move &APPPHN.PHONE_TYPE  to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                    (+1,6,)

APPPHN.PHONE
  move &APPPHN.PHONE to $hrs_phone_no
  print $hrs_phone_no                    (,26,)

APPPHN.EXTENSION
  move &APPPHN.EXTENSION to $hrs_extention
  print $hrs_extention                   (,46,)

APPPHN.COUNTRY_CODE
  move &APPPHN.COUNTRY_CODE to $hrs_country_cd
  print $hrs_country_cd                  (,65,)

APPPHN.PREF_PHONE_FLAG
  move &APPPHN.PREF_PHONE_FLAG to $hrs_pref_phone_flag
  if $hrs_pref_phone_flag = 'Y'
     print $YES                          (,82,)
  else
     print $NO                           (,82,)
  end-if

FROM PS_HRS_APP_PHON_VW APPPHN
WHERE APPPHN.HRS_PERSON_ID = #hrs_person_id
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure


!----------------------------------------------------------------------!
! Procedure: PRINT-APP-EMAIL                                           !
! Descr:     This procedure prints applicant's email data              !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-EMAIL
  add 1 to #level
  move 'PRINT-APP-EMAIL' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_04
     print $REPORT_SECT_04               (+1, 5, #cw_REPORT_SECT_04)  bold
     print $EMAIL_TYPE                   (+1, 6, #cw_PHONE_TYPE)      bold
     print $EMAIL                        (0, 26, #cw_EMAIL)           bold
     print $PREFERRED                    (0, 82, #cw_PREFERRED)       bold
     let $sect_title_printed = 'Y'
  end-if

APPEML.HRS_E_ADDR_TYPE
  move 'HRS_E_ADDR_TYPE' to $FieldName
  move &APPEML.HRS_E_ADDR_TYPE  to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                    (+1,6,)

APPEML.EMAIL_ADDR
  move &APPEML.EMAIL_ADDR to $hrs_email_addr
  print $hrs_email_addr                  (,26,)

APPEML.PREF_EMAIL_FLAG
  move &APPEML.PREF_EMAIL_FLAG to $hrs_pref_email_flag
  if $hrs_pref_email_flag = 'Y'
     print $YES                          (,82,)
  else
     print $NO                           (,82,)
  end-if

FROM PS_HRS_APP_EML1_VW APPEML
WHERE APPEML.HRS_PERSON_ID = #hrs_person_id
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-PERSONAL-INFO                                   !
! Descr:     This procedure prints applicant's personal data           !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-PERSONAL-INFO
  add 1 to #level
  move 'PRINT-APP-PERSONAL-INFO' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_05
     print $REPORT_SECT_05               (+1, 5, #cw_REPORT_SECT_05)  bold
     let $sect_title_printed = 'Y'
  end-if

APPUSA.US_WORK_ELIGIBILTY
  move 'US_WORK_ELIGIBILTY' to $FieldName
  move &APPUSA.US_WORK_ELIGIBILTY  to $FieldValue
  do Read-Translate-Table
  print $WORK_ELIGIBLE                   (+1,6, #cw_WORK_ELIGIBLE)   bold
  print $XlatLongName                    (,37,)

APPUSA.PREV_EMPL_BY_COMPY
  move 'PREV_EMPL_BY_COMPY' to $FieldName
  move &APPUSA.PREV_EMPL_BY_COMPY  to $FieldValue
  do Read-Translate-Table
  print $FORMER_EMPL                     (+1,6, #cw_FORMER_EMPL)   bold
  print $XlatLongName                    (,37,)

APPUSA.PREV_TERM_DT
  !move &APPUSA.PREV_TERM_DT to $hrs_prev_term_dt
  do Format-DateTime(&APPUSA.PREV_TERM_DT ,$hrs_prev_term_dt,{DEFDATE},'','')
  print $PREV_TERM_DATE                  (+1,6, #cw_PREV_TERM_DATE)   bold
  print $hrs_prev_term_dt                (,37,)

! These 2 fields are printed at Federal Preferences section below
APPUSA.EFFDT
APPUSA.MILITARY_STATUS

FROM PS_HRS_APP_USA_VW APPUSA
WHERE APPUSA.HRS_PERSON_ID = #hrs_person_id
AND APPUSA.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-PREFERENCES                                     !
! Descr:     This procedure prints applicant's preferences info        !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-PREFERENCES
  add 1 to #level
  move 'PRINT-APP-PREFERENCES' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_06
     print $REPORT_SECT_06               (+1, 5, #cw_REPORT_SECT_06)  bold
     let $sect_title_printed = 'Y'
  end-if
APPPROF.BUSINESS_UNIT
  move &APPPROF.BUSINESS_UNIT to $hrs_business_unit

APPPROF.DESIRED_START_DT
  do Format-DateTime(&APPPROF.DESIRED_START_DT,$hrs_desired_start_dt,{DEFDATE},'','')
  print $DESIRED_START_DT                (+1,6, #cw_DESIRED_START_DT)   bold
  print $hrs_desired_start_dt            (,37,)

APPPROF.DESIRED_REG_TEMP
  move 'DESIRED_REG_TEMP' to $FieldName
  move &APPPROF.DESIRED_REG_TEMP  to $FieldValue
  do Read-Translate-Table
  print $REG_OR_TEMP                     (+1,6, #cw_REG_OR_TEMP)   bold
  print $XlatLongName                    (,37,)

APPPROF.DESIRED_FULL_PART
  move 'DESIRED_FULL_PART' to $FieldName
  move &APPPROF.DESIRED_FULL_PART  to $FieldValue
  do Read-Translate-Table
  print $FULL_OR_PART_TIME               (+1,6, #cw_FULL_OR_PART_TIME)   bold
  print $XlatLongName                    (,37,)

APPPROF.RELOCATE
  move 'RELOCATE' to $FieldName
  move &APPPROF.RELOCATE  to $FieldValue
  do Read-Translate-Table
  print $RELOCATE                        (+1,6, #cw_RELOCATE)   bold
  print $XlatLongName                    (,37,)

APPPROF.TRAVELLING
  move 'TRAVELLING' to $FieldName
  move &APPPROF.TRAVELLING  to $FieldValue
  do Read-Translate-Table
  print $TRAVEL                          (+1,6, #cw_TRAVEL)   bold
  print $XlatLongName                    (,37,)

APPPROF.HRS_TRAVEL_PERCENT
  move 'HRS_TRAVEL_PERCENT' to $FieldName
  move &APPPROF.HRS_TRAVEL_PERCENT  to $FieldValue
  do Read-Translate-Table
  print $TRAVEL_PCT                      (+1,6, #cw_TRAVEL_PCT)   bold
  print $XlatLongName                    (,37,)

APPPROF.MON
  print $DESIRED_WORK_DAYS               (+1,6, #cw_TRAVEL_PCT)   bold
  if &APPPROF.MON = 'Y'
    let $hrs_monday_yes = $MON || '[' || $YES || '], '
    print $hrs_monday_yes                (,37,)
  else
    let $hrs_monday_no = $MON || '[' || $NO || '], '
    print $hrs_monday_no                 (,37,)
  end-if

APPPROF.TUES
  if &APPPROF.TUES = 'Y'
    let $hrs_tuesday_yes =  $TUES || '[' || $YES || '], '
    print $hrs_tuesday_yes               ()
  else
     let $hrs_tuesday_no =  $TUES || '[' || $NO || '], '
    print $hrs_tuesday_no                ()
  end-if

APPPROF.WED
  if &APPPROF.WED = 'Y'
    let $hrs_wednesday_yes =  $WED || '[' || $YES || '], '
    print $hrs_wednesday_yes             ()
  else
    let $hrs_wednesday_no =  $WED || '[' || $NO || '], '
    print $hrs_wednesday_no              ()
  end-if

APPPROF.THURS
  if &APPPROF.THURS = 'Y'
    let $hrs_thursday_yes =  $THURS || '[' || $YES || '], '
    print $hrs_thursday_yes              ()
  else
    let $hrs_thursday_no =  $THURS || '[' || $NO || '], '
    print $hrs_thursday_no               ()
  end-if

APPPROF.FRI
  if &APPPROF.FRI = 'Y'
    let $hrs_friday_yes =  $FRI || '[' || $YES || '], '
    print $hrs_friday_yes                ()
  else
    let $hrs_friday_no =  $FRI || '[' || $NO || '], '
    print $hrs_friday_no                 ()
  end-if

APPPROF.SAT
  if &APPPROF.SAT = 'Y'
    let $hrs_saturday_yes =  $SAT || '[' || $YES || '], '
    print $hrs_saturday_yes              ()
  else
    let $hrs_saturday_no =  $SAT || '[' || $NO || '], '
    print $hrs_saturday_no               ()
  end-if

APPPROF.SUN
  if &APPPROF.SUN = 'Y'
    let $hrs_sunday_yes =  $SUN || '[' || $YES || '], '
    print $hrs_sunday_yes                ()
  else
    let $hrs_sunday_no =  $SUN || '[' || $NO || '], '
    print $hrs_sunday_no                 ()
  end-if

APPPROF.MIN_RATE
APPPROF.CURRENCY_CD
APPPROF.PAY_FREQ_ABBRV
  move &APPPROF.MIN_RATE to #amount
  print $MIN_PAY                         (+1,6, #cw_MIN_PAY)   bold
  !do format_currency_amt(#amount,&APPPROF.CURRENCY_CD,$AsOfDate,
  !                       '999,999,999,999,999.999',$OUT,'I')
  !print $OUT                             (,37,)
  print #amount (,37,)
  print &APPPROF.CURRENCY_CD             (,+1,)

  move 'PAY_FREQ_ABBRV' to $FieldName
  move &APPPROF.PAY_FREQ_ABBRV  to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                    (,+1,)

APPPROF.DESIRED_SHIFT
  move 'DESIRED_SHIFT' to $FieldName
  move &APPPROF.DESIRED_SHIFT  to $FieldValue
  do Read-Translate-Table
  print $DESIRED_SHIFT                   (+1,6, #cw_DESIRED_SHIFT)   bold
  print $XlatLongName                    (,37,)

APPPROF.DESIRED_HOURS
  move &APPPROF.DESIRED_HOURS to $hrs_desired_hours
  print $DESIRED_HOURS                   (+1,6, #cw_DESIRED_HOURS)   bold
  print $hrs_desired_hours               (,37,)

  ! Print a blank line
  print ' '                              (+1,,)

  uppercase $REPORT_SECT_09
  print $REPORT_SECT_09                  (+1, 5, #cw_REPORT_SECT_09)  bold

  let $hrs_des_loc_descr =''

APPPROF.HRS_DES_LOC1
  if &APPPROF.HRS_DES_LOC1 <> 0
     move &APPPROF.HRS_DES_LOC1 to #hrs_des_loc
     let $hrs_des_loc = to_char(#hrs_des_loc)

     do Get-HRSLocation
  end-if
  print $FIRST_CHOICE                    (+1,6, #cw_FIRST_CHOICE)   bold
  print $hrs_des_loc_descr               (,37,)

  let $hrs_des_loc_descr =''

APPPROF.HRS_DES_LOC2
  if &APPPROF.HRS_DES_LOC2 <> 0
     move &APPPROF.HRS_DES_LOC2 to #hrs_des_loc
     let $hrs_des_loc = to_char(#hrs_des_loc)
     do Get-HRSLocation
  end-if
  print $SECOND_CHOICE                   (+1,6, #cw_SECOND_CHOICE)   bold
  print $hrs_des_loc_descr               (,37,)

APPPROF.GEOG_PREFER
  move &APPPROF.GEOG_PREFER to $hrs_geog_prefer
  print $COMMENTS                        (+1,6, #cw_COMMENTS)   bold
  print $hrs_geog_prefer                 (,37,) wrap 132 1000 STRIP=<13> ON=<37>
  ! if the comment has more than 1000 lines change the second argument of wrap
  ! commnad to accommodate.

APPPROF.HRS_AL_LOG_ID
APPPROF.HIGHEST_EDUC_LVL

  if $isFedFlag = 'Y'
    ! Print a blank line
    print ' '                            (+1,,)
    uppercase $REPORT_SECT_07
    print $REPORT_SECT_07                (+1, 5, #cw_REPORT_SECT_07)  bold

APPPROF.GVT_PREV_FED_EMPL
    move 'GVT_PREV_FED_EMPL' to $FieldName
    move &APPPROF.GVT_PREV_FED_EMPL  to $FieldValue
    do Read-Translate-Table
    print $PREV_FED_EMPL                 (+1,6, #cw_PREV_FED_EMPL)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_PREV_AGCY_EMPL
    move 'GVT_PREV_AGCY_EMPL' to $FieldName
    move &APPPROF.GVT_PREV_AGCY_EMPL  to $FieldValue
    do Read-Translate-Table
    print $PREV_AGCY_EMPL                (+1,6, #cw_PREV_AGCY_EMPL)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_CURR_FED_EMPL
    move 'GVT_CURR_FED_EMP' to $FieldName
    move &APPPROF.GVT_CURR_FED_EMPL  to $FieldValue
    do Read-Translate-Table
    print $CURR_FED_EMPL                 (+1,6, #cw_CURR_FED_EMPL)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_CURR_AGCY_EMPL
    move 'GVT_CURR_AGCY_EMPL' to $FieldName
    move &APPPROF.GVT_CURR_AGCY_EMPL  to $FieldValue
    do Read-Translate-Table
    print $CURR_AGCY_EMPL                (+1,6, #cw_CURR_AGCY_EMPL)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_HIGH_PAY_PLAN
    print $HIGH_PAY_PLAN                 (+1,6, #cw_HIGH_PAY_PLAN)   bold
    print &APPPROF.GVT_HIGH_PAY_PLAN     (,37,)

APPPROF.GVT_HIGH_GRADE
    print $HIGH_GRADE                    (+1,6, #cw_HIGH_GRADE)   bold
    print &APPPROF.GVT_HIGH_GRADE        (,37,)

APPPROF.GVT_PAY_PLAN
    print $MIN_PAY_PLAN                  (+1,6, #cw_MIN_PAY_PLAN)   bold
    print &APPPROF.GVT_PAY_PLAN          (,37,)

APPPROF.GRADE
    print $MIN_GRADE                     (+1,6, #cw_MIN_GRADE)   bold
    print &APPPROF.GRADE                 (,37,)

APPPROF.GVT_TENURE
    move 'GVT_TENURE' to $FieldName
    move &APPPROF.GVT_TENURE  to $FieldValue
    do Read-Translate-Table
    print $HIGH_CARR_TENURE              (+1,6, #cw_HIGH_CARR_TENURE)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_VET_PREF_APPT
    print $VET_PREF                      (+1,6, #cw_VET_PREF)   bold
    print &APPPROF.GVT_VET_PREF_APPT     (,37,)

APPPROF.GVT_MIL_RESRVE_CAT
    move 'GVT_MIL_RESRVE_CAT' to $FieldName
    move &APPPROF.GVT_MIL_RESRVE_CAT  to $FieldValue
    do Read-Translate-Table
    print $RESERVE_CAT                   (+1,6, #cw_RESERVE_CAT)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_MILITARY_COMP
    move 'GVT_MILITARY_COMP' to $FieldName
    move &APPPROF.GVT_MILITARY_COMP  to $FieldValue
    do Read-Translate-Table
    print $UNIFORM_SERV                   (+1,6, #cw_UNIFORM_SERV)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_MIL_GRADE
    move 'GVT_MIL_GRADE' to $FieldName
    move &APPPROF.GVT_MIL_GRADE  to $FieldValue
    do Read-Translate-Table
    print $MILT_GRADE                    (+1,6, #cw_MILT_GRADE)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_MIL_SEP_RET
    move 'GVT_MIL_SEP_RET' to $FieldName
    move &APPPROF.GVT_MIL_SEP_RET  to $FieldValue
    do Read-Translate-Table
    print $MILT_SEPR_STAT                (+1,6, #cw_MILT_SEPR_STAT)   bold
    print $XlatLongName                  (,37,)

APPPROF.GVT_MIL_SVCE_START
    do Format-DateTime(&APPPROF.GVT_MIL_SVCE_START,$hrs_gvt_mil_svce_start_dt,{DEFDATE},'','')
    print $MILT_START_DT                 (+1,6, #cw_MILT_START_DT)   bold
    print $hrs_gvt_mil_svce_start_dt     (,37,)

APPPROF.GVT_MIL_SVCE_END
    do Format-DateTime(&APPPROF.GVT_MIL_SVCE_END,$hrs_gvt_mil_svce_end_dt,{DEFDATE},'','')
    print $MILT_END_DT                   (+1,6, #cw_MILT_END_DT)   bold
    print $hrs_gvt_mil_svce_end_dt       (,37,)

    !The following 2 fields were selected from PS_HRS_APP_USA_VW table above
    do Format-DateTime(&APPUSA.EFFDT,$hrs_effdt,{DEFDATE},'','')
    print $EFFDT                         (+1,6, #cw_EFFDT)   bold
    print $hrs_effdt                     (,37,)

    move 'MILITARY_STATUS' to $FieldName
    move &APPUSA.MILITARY_STATUS  to $FieldValue
    do Read-Translate-Table
    print $MILT_STAT                     (+1,6, #cw_MILT_STAT)   bold
    print $XlatLongName                  (,37,)

  end-if

FROM PS_HRS_APP_PROFILE APPPROF
WHERE APPPROF.HRS_PERSON_ID = #hrs_person_id
AND APPPROF.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-PRIORITY-PLACEMENT                              !
! Descr:     This procedure prints applicant's priority placement data !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-PRIORITY-PLACEMENT
  add 1 to #level
  move 'PRINT-APP-PRIORITY-PLACEMENT' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'
  let #gpp_count = 0

begin-select
count(*) &gpp_count
FROM PS_HRS_G_PRI_PL GPP
WHERE GPP.HRS_PERSON_ID = #hrs_person_id
AND GPP.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

  let #gpp_count = &gpp_count
  let #row_counter = 0

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_08
     print $REPORT_SECT_08               (+1, 5, #cw_REPORT_SECT_08)  bold
     let $sect_title_printed = 'Y'
  end-if

APPPRIPL.GVT_PRIO_DT_END
    do Format-DateTime(&APPPRIPL.GVT_PRIO_DT_END,$hrs_gvt_prio_dt_end,{DEFDATE},'','')
    print $END_DT                        (+1,6, #cw_END_DT)   bold
    print $hrs_gvt_prio_dt_end           (,37,)

APPPRIPL.GVT_PRIO_PLCMNT_CD
  move &APPPRIPL.GVT_PRIO_PLCMNT_CD to $hrs_gvt_prio_plcmnt_cd
  do Get-Priority-Placement-Code
  print $CODE                            (+1,6, #cw_CODE)   bold
  print $hrs_gvt_prio_plcmnt_cd_descr    (,37,)

APPPRIPL.GVT_PAY_PLAN
  move &APPPRIPL.GVT_PAY_PLAN to $hrs_gvt_pay_plan
  do Get-Pay-Plan
  print $PAY_PLAN                        (+1,6, #cw_PAY_PLAN)   bold
  print $hrs_gvt_pay_plan_descr          (,37,)

APPPRIPL.GVT_OCC_SERIES
  move &APPPRIPL.GVT_OCC_SERIES to $hrs_gvt_occ_series
  do Get-Occupational-Series
  print $OCCUP_SERIES                    (+1,6, #cw_OCCUP_SERIES)   bold
  print $hrs_gvt_occ_series_descr        (,37,)

APPPRIPL.GRADE
  move &APPPRIPL.GRADE to $hrs_sal_grade
  print $SAL_GRADE                       (+1,6, #cw_SAL_GRADE)   bold
  print $hrs_sal_grade                   (,37,)

  let #row_counter = #row_counter + 1

  If #row_counter < #gpp_count
    print '---------------------------------' (+1,6,)
  end-if

FROM PS_HRS_G_PRI_PL APPPRIPL
WHERE APPPRIPL.HRS_PERSON_ID = #hrs_person_id
AND APPPRIPL.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-JOB-FAMILIES                                    !
! Descr:     This procedure prints applicant's job families            !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-JOB-FAMILIES
  add 1 to #level
  move 'PRINT-APP-JOB-FAMILIES' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

   ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_10
     print $REPORT_SECT_10               (+1, 5, #cw_REPORT_SECT_10)  bold
     print $JOB_FAMILY                   (+1, 6, #cw_JOB_FAMILY)      bold
     let $sect_title_printed = 'Y'
  end-if

APPJFAM.JOB_FAMILY
  move &APPJFAM.JOB_FAMILY to $hrs_job_family
  do Get-Job-Family
  print $hrs_job_family_descr            (+1,6,)

FROM PS_HRS_APP_JOBFAM APPJFAM
WHERE APPJFAM.HRS_PERSON_ID = #hrs_person_id
AND APPJFAM.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-JOB-OPENINGS                                    !
! Descr:     This procedure prints applicant's job openings            !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-JOB-OPENINGS
  add 1 to #level
  move 'PRINT-APP-JOB-OPENINGS' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_12
     print $REPORT_SECT_12               (+1, 5, #cw_REPORT_SECT_12)  bold
     let $JOB_OPENING_WOC = rtrim($JOB_OPENING, ':')
     let $POSTING_TITLE_WOC = rtrim($POSTING_TITLE, ':')
     print $JOB_OPENING_WOC              (+1, 6, #cw_JOB_OPENING) bold
     print $POSTING_TITLE_WOC            (, 26, #cw_POSTING_TITLE) bold
     let $sect_title_printed = 'Y'
  end-if

RCMT.HRS_JOB_OPENING_ID
  move &RCMT.HRS_JOB_OPENING_ID to #hrs_job_opening_id
  print #hrs_job_opening_id              (+1,6,) edit 888888888888888
  do Get-Job-Posting-Title
  print $hrs_jo_posting_title            (,26,)


FROM PS_HRS_APP_RCMT_VW RCMT
WHERE RCMT.HRS_PERSON_ID = #hrs_person_id
AND RCMT.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-REFERRAL-SOURCES                                !
! Descr:     This procedure prints applicant's referral sources        !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-REFERRAL-SOURCES
  add 1 to #level
  move 'PRINT-APP-REFERRAL-SOURCES' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

   ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_11
     print $REPORT_SECT_11               (+1, 5, #cw_REPORT_SECT_11)  bold
     print $REF_SOURCE                   (+1, 6, #cw_REF_SOURCE) bold
     print $REF_SUB_SOURCE               (, 46, #cw_REF_SUB_SOURCE) bold
     print $REF_SPEC_SOURCE              (, 86, #cw_REF_SPEC_SOURCE) bold
     let $sect_title_printed = 'Y'
  end-if

RFSRC.HRS_SOURCE_ID
  move &RFSRC.HRS_SOURCE_ID to $hrs_source_id
  If IsBlank($hrs_source_id) Or $hrs_source_id='0'
  Let $hrs_source_name  = ' '
  Else
  do Get-Referral-Source
  End-If
  print $hrs_source_name                 (+1,6,)

RFSRC.HRS_SUBSOURCE_ID
  move &RFSRC.HRS_SUBSOURCE_ID to $hrs_subsource_id
  If IsBlank($hrs_subsource_id) Or $hrs_subsource_id='0'
   Let $hrs_subsource_id_descr = ' '
  Else
  do Get-Referral-SubSource
  End-If
  print $hrs_subsource_id_descr          (,46,)

RFSRC.HRS_SUBSOURCE_DESC
  print &RFSRC.HRS_SUBSOURCE_DESC        (,86,)

FROM PS_HRS_APAL_SRCE_I RFSRC
WHERE RFSRC.HRS_AL_LOG_ID = &APPPROF.HRS_AL_LOG_ID
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-EDU-LEVEL                                       !
! Descr:     This procedure prints applicant's education level         !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-EDU-LEVEL
  add 1 to #level
  move 'PRINT-APP-EDU-LEVEL' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  if &APPPROF.HIGHEST_EDUC_LVL <> ''
     uppercase $REPORT_SECT_13
     print $REPORT_SECT_13               (+1, 5, #cw_REPORT_SECT_13)  bold
     move 'HIGHEST_EDUC_LVL' to $FieldName
     move &APPPROF.HIGHEST_EDUC_LVL  to $FieldValue
     do Read-Translate-Table
     print $HIGH_EDU_LVL                 (+1, 6, #cw_HIGH_EDU_LVL) bold
     print $XlatLongName                 (,37,)

     !Print a blank line
     print ' '                           (+1,,)

  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-WORK-EXPERIENCE                                 !
! Descr:     This procedure prints applicant's work experience         !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-WORK-EXPERIENCE
  add 1 to #level
  move 'PRINT-APP-WORK-EXPERIENCE' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_16
     print $REPORT_SECT_16               (+1, 5, #cw_REPORT_SECT_16)  bold
  !  print $START_DT                     (+1, 6, #cw_START_DT)        bold
  !  let $END_DT_WOC = rtrim($END_DT, ':')
  !   print $END_DT_WOC                   (0, 26, #cw_END_DT)          bold
  !   print $EMPLOYER                     (0, 46, #cw_EMPLOYER)        bold
  !   print $END_JOB_TITLE                (0, 86, #cw_END_JOB_TITLE)   bold
  !   print $END_PAY_RATE                 (0, 126, #cw_END_PAY_RATE)   bold
  !   print $SUPERVISOR                   (+1, 6, #cw_SUPERVISOR)      bold
  !   print $EMAIL_ADDR                   (0, 26, #cw_EMAIL_ADDR)      bold
  !   print $PHONE_NUMBR                  (+1, 6, #cw_PHONE_NUMBR)     bold
  !   print $OK_CNTCT                     (0, 26, #cw_OK_CNTCT)        bold
     let $sect_title_printed = 'Y'
  end-if

APPWRK.START_DT
  do Format-DateTime(&APPWRK.START_DT,$hrs_wrk_start_dt,{DEFDATE},'','')
  let $START_D = $START_DT
  print $START_D                     (+1, 6, #cw_START_DT)        bold
  print $hrs_wrk_start_dt                (,30,)

APPWRK.END_DT
  do Format-DateTime(&APPWRK.END_DT,$hrs_wrk_end_dt,{DEFDATE},'','')
  let $END_DT_WOC = $END_DT
  print $END_DT_WOC                   (0, 71, #cw_END_DT)          bold
  print $hrs_wrk_end_dt                  (,92,)

APPWRK.EMPLOYER
  let $EMPLOYR = $EMPLOYER
  print $EMPLOYR                     (0, 122, #cw_EMPLOYER)        bold
  print &APPWRK.EMPLOYER                 (,142,)

APPWRK.ENDING_TITLE
  let $ENDTITLE = $END_TITLE
  print $END_JOB_TITLE                (+1, 6, #cw_END_JOB_TITLE)   bold
  print &APPWRK.ENDING_TITLE             (,30,)

APPWRK.ENDING_RATE
APPWRK.PAY_FREQ_ABBRV
APPWRK.CURRENCY_CD
  move &APPWRK.ENDING_RATE to #ending_amount
  !do format_currency_amt(#amount,&APPPROF.CURRENCY_CD,$AsOfDate,
  !                       '999,999,999,999,999.999',$OUT,'I')
  !print $OUT                             (,37,)
  let $ENDPAYRT = $END_PAY_RATE
  print $ENDPAYRT                         (,71, #cw_END_PAY_RATE)   bold
  print #ending_amount                   (,92,)
  print &APPWRK.CURRENCY_CD              (,+1,)

  move 'PAY_FREQ_ABBRV' to $FieldName
  move &APPWRK.PAY_FREQ_ABBRV  to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                    (,+1,)

APPWRK.HRS_SUPERVISOR
  print $SUPERVISOR                        (+1, 6, #cw_SUPERVISOR)      bold
  print &APPWRK.HRS_SUPERVISOR           (,30,)

APPWRK.EMAIL_ADDR
  print $EMAIL_ADDR                         (, 71, #cw_EMAIL_ADDR)      bold
  print &APPWRK.EMAIL_ADDR               (,92,)

APPWRK.PHONE
  print $PHONE_NUMBR                     (+1, 6, #cw_PHONE_NUMBR)     bold
  print &APPWRK.PHONE                    (,30)

APPWRK.HRS_CONTACT_OK_FLG
  print $OK_CNTCT                        (, 71, #cw_OK_CNTCT)        bold
  print &APPWRK.HRS_CONTACT_OK_FLG       (,92,)

  print '_ '                                (, 5, 170) Fill
FROM PS_HRS_APP_WRK_EXP APPWRK
WHERE APPWRK.HRS_PERSON_ID = #hrs_person_id
AND APPWRK.HRS_PROFILE_SEQ = #hrs_profile_seq
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-TRAINING                                        !
! Descr:     This procedure prints applicant's training data           !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-TRAINING
  add 1 to #level
  move 'PRINT-APP-TRAINING' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'

begin-select

  let $row_exist = 'Y'

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_14
     print $REPORT_SECT_14               (+1, 5, #cw_REPORT_SECT_14)  bold
     print $COURSE_TITLE                 (+1, 6, #cw_COURSE_TITLE)    bold
     print $SCHOOL_NAME                  (0, 46, #cw_SCHOOL_NAME)     bold
     print $COURSE_DT                    (0, 86, #cw_COURSE_DT)       bold
     let $sect_title_printed = 'Y'
  end-if

APPTRN.COURSE_TITLE
  print &APPTRN.COURSE_TITLE             (+1,6,)

APPTRN.SCHOOL
  print &APPTRN.SCHOOL                   (,46,)

APPTRN.COURSE_START_DT
  do Format-DateTime(&APPTRN.COURSE_START_DT,$hrs_course_start_dt,{DEFDATE},'','')
  print $hrs_course_start_dt             (,86,)

FROM PS_HRS_APP_TRAIN APPTRN
WHERE APPTRN.HRS_PERSON_ID = #hrs_person_id
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-JPM-CONTENT                                     !
! Descr:     This procedure prints applicant's master PERSON profile   !
!            content data                                              !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-JPM-CONTENT
  add 1 to #level
  move 'PRINT-APP-JPM-CONTENT' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF


begin-select

JCT1.JPM_CAT_TYPE
  move &JCT1.JPM_CAT_TYPE  to $JPM_CAT_TYPE

JCT1.DESCR
  move &JCT1.DESCR  to $JPM_CAT_TYPE_DESCR

JCT1.JPM_ADHOC_FLG

  Do Print-App-JPM-Content-Item

FROM PS_HRS_SCT_CFG_VW JCT1
WHERE JCT1.JPM_JP_TYPE = 'PERSON'
end-select

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: Print-App-JPM-Content-Item                                !
! Descr:     This procedure prints applicant's JPM content items       !
!----------------------------------------------------------------------!
begin-procedure Print-App-JPM-Content-Item
  add 1 to #level
  move 'Print-App-JPM-Content-Item ' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $row_exist = 'N'
  let $sect_title_printed = 'N'
  let #appitem_count = 0

begin-select
count(*) &appitem_count
FROM PS_HRS_APPITM01_VW APPITEM
WHERE APPITEM.HRS_PERSON_ID = #hrs_person_id
AND APPITEM.HRS_PROFILE_SEQ = #hrs_profile_seq
AND APPITEM.JPM_CAT_TYPE = $JPM_CAT_TYPE
end-select

  let #appitem_count = &appitem_count
  let #row_counter = 0

  do Build-JPM-Content-DisplayFields-Array

begin-select

  let $row_exist = 'Y'

  if $PREV_JPM_CAT_TYPE <> $JPM_CAT_TYPE
     uppercase $JPM_CAT_TYPE_DESCR
     print $JPM_CAT_TYPE_DESCR            (+1,5,) bold
     let $PREV_JPM_CAT_TYPE = $JPM_CAT_TYPE
  end-if

! This effective date is used defaulting field from related table
! within this SELECT statement
APPITEM.EFFDT
  move &APPITEM.EFFDT to $AsOfDate

APPITEM.JPM_JP_QUAL_SET
  move &APPITEM.JPM_JP_QUAL_SET to $jpm_jp_qualset

APPITEM.JPM_JP_QUAL_SET2
  move &APPITEM.JPM_JP_QUAL_SET2 to $jpm_jp_qualset2

  !For each field, search DisplayFields array.
  !If the field exists in the array it is included
  !in the select list
  let $Found = 'N'
  let $fldname =  'JPM_CAT_ITEM_ID'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_CAT_ITEM_ID
    move &APPITEM.JPM_CAT_ITEM_ID to $jpm_cat_item_id
    print $fldlabel                      (+1,6,)  bold
    Do Get-JPM-Cat-Item
    print $jpm_cat_item_descr            (,37,)
  End-If
APPITEM.JPM_CAT_ITEM_QUAL
    move &APPITEM.JPM_CAT_ITEM_QUAL to $jpm_cat_item_qual
  Let $Found = 'N'
   let $fldname = 'JPM_CAT_ITEM_QUAL'
     Do Search-DisplayFields-Array
     If $Found = 'Y'
   Do Get-JPM-Cat-Item-Qual
   print $fldlabel                      (+1,6,)  bold
   print $jpm_cat_item_qual_descr       (,37,)
   End-If

APPITEM.JPM_CAT_ITEM_QUAL2
    move &APPITEM.JPM_CAT_ITEM_QUAL2 to $jpm_cat_item_qual2
      let $Found = 'N'
  let $fldname =  'JPM_CAT_ITEM_QUAL2'
     Do Search-DisplayFields-Array
     If $Found = 'Y'
   Do Get-JPM-Cat-Item-Qual2
   print $fldlabel                      (+1,6,)  bold
   print $jpm_cat_item_qual2            (,37,)
   print $jpm_cat_item_qual2_descr      (,45,)
    End-If

APPITEM.COUNTRY
  move &APPITEM.COUNTRY to $hrs_country_code
  let $Found = 'N'
  let $fldname =  'COUNTRY'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
    Do Get-Country
    print $fldlabel                      (+1,6,)  bold
    print $hrs_country_code_descr        (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DATE_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DATE_1
    do Format-DateTime(&APPITEM.JPM_DATE_1 ,$hrs_jpm_date1,{DEFDATE},'','')
    print $fldlabel                      (+1,6,)  bold
    print $hrs_jpm_date1                 (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DATE_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DATE_2
    do Format-DateTime(&APPITEM.JPM_DATE_2 ,$hrs_jpm_date2,{DEFDATE},'','')
    print $fldlabel                      (+1,6,)  bold
    print $hrs_jpm_date2                 (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_EVAL_MTHD'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_EVAL_MTHD
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_EVAL_MTHD         (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_TEXT1325_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_TEXT1325_1
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_TEXT1325_1        (,37,) wrap 132 20 STRIP=<13> ON=<37>
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_TEXT1325_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_TEXT1325_2
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_TEXT1325_2        (,37,) wrap 132 20 STRIP=<13> ON=<37>
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_TEXT254_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_TEXT254_1
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_TEXT254_1         (,37,) wrap 132 20 STRIP=<13> ON=<37>
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_TEXT254_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_TEXT254_2
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_TEXT254_2         (,37,) wrap 132 20 STRIP=<13> ON=<37>
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_TEXT254_3'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_TEXT254_3
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_TEXT254_3         (,37,) wrap 132 20 STRIP=<13> ON=<37>
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_TEXT254_4'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_TEXT254_4
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_TEXT254_4         (,37,) wrap 132 20 STRIP=<13> ON=<37>
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_YN_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_YN_1
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.JPM_YN_1 = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_YN_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_YN_2
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.JPM_YN_2 = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_YN_3'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_YN_3
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.JPM_YN_3 = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_YN_4'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_YN_4
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.JPM_YN_4 = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_YN_5'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_YN_5
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.JPM_YN_5 = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

APPITEM.RATING_MODEL
  move &APPITEM.RATING_MODEL to $hrs_rating_model
  let $Found = 'N'
  let $fldname =  'RATING_MODEL'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
    do Get-Rating-Model
    print $fldlabel                      (+1,6,)  bold
    print $hrs_rating_model_descr        (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_INTEREST_LEVEL'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_INTEREST_LEVEL
    move &APPITEM.JPM_INTEREST_LEVEL to $hrs_jpm_interest_level
    do Get-Interest-Level
    print $fldlabel                      (+1,6,)  bold
    print $hrs_jpm_interest_level_descr  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_MANDATORY'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_MANDATORY
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.JPM_MANDATORY = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_RATING1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_RATING1
    move &APPITEM.JPM_RATING1 to $hrs_jpm_rating1
    do Get-JPM-Rating1
    print $fldlabel                      (+1,6,)  bold
    print $hrs_jpm_rating1_descr         (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_RATING2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_RATING2
    move &APPITEM.JPM_RATING2 to $hrs_jpm_rating2
    do Get-JPM-Rating2
    print $fldlabel                      (+1,6,)  bold
    print $hrs_jpm_rating2_descr         (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_RATING3'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_RATING3
    move &APPITEM.JPM_RATING3 to $hrs_jpm_rating3
    do Get-JPM-Rating3
    print $fldlabel                      (+1,6,)  bold
    print $hrs_jpm_rating3_descr         (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_TEXT254_5'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_TEXT254_5
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_TEXT254_5         (,37,) wrap 132 20 STRIP=<13> ON=<37>
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DATE_3'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DATE_3
    print $fldlabel                      (+1,6,)  bold
    do Format-DateTime(&APPITEM.JPM_DATE_3 ,$hrs_jpm_date3,{DEFDATE},'','')
    print $hrs_jpm_date3                 (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DATE_4'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DATE_4
    print $fldlabel                      (+1,6,)  bold
    do Format-DateTime(&APPITEM.JPM_DATE_4 ,$hrs_jpm_date4,{DEFDATE},'','')
    print $hrs_jpm_date4                 (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DATE_5'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DATE_5
    print $fldlabel                      (+1,6,)  bold
    do Format-DateTime(&APPITEM.JPM_DATE_5 ,$hrs_jpm_date5,{DEFDATE},'','')
    print $hrs_jpm_date5                 (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DATE_6'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DATE_6
    print $fldlabel                      (+1,6,)  bold
    do Format-DateTime(&APPITEM.JPM_DATE_6 ,$hrs_jpm_date6,{DEFDATE},'','')
    print $hrs_jpm_date6                 (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_INTEGER_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_INTEGER_1
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_INTEGER_1         (,37,)  edit 99999999
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_INTEGER_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_INTEGER_2
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_INTEGER_2         (,37,)  edit 99999999
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_PCT_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_PCT_1
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_PCT_1             (,37,)  edit 999
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_PCT_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_PCT_2
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_PCT_2             (,37,)  edit 999
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DECIMAL_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DECIMAL_1
    move &APPITEM.JPM_DECIMAL_1 to #jpm_decimal_1_in
    do Format-Number(#jpm_decimal_1_in, $jpm_decimal_1_out, '9999999.99')
    print $fldlabel                      (+1,6,)  bold
    print $jpm_decimal_1_out             (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_DECIMAL_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_DECIMAL_2
    print $fldlabel                      (+1,6,)  bold
    do Format-Number(&APPITEM.JPM_DECIMAL_2, $out_jpm_decimal_2, '9999999.99')
    print $out_jpm_decimal_2             (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_PERSON_ID_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_PERSON_ID_1
    move &APPITEM.JPM_PERSON_ID_1 to #HRS_PERSON_ID
    do Get-Applicant-Name
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_PERSON_ID_1       (,37,)
    print ' - '                          ()
    print $Applname                      ()
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_IMPORTANCE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_IMPORTANCE
    move 'JPM_IMPORTANCE' to $FieldName
    move &APPITEM.JPM_IMPORTANCE  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_VERIFY_METHOD'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_VERIFY_METHOD
    move 'JPM_VERIFY_METHOD' to $FieldName
    move &APPITEM.JPM_VERIFY_METHOD  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If

APPITEM.STATE
  move &APPITEM.STATE to $hrs_state
  let $Found = 'N'
  let $fldname =  'STATE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
    do Get-State
    print $fldlabel                      (+1,6,)  bold
    print $hrs_state_descr               (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'NVQ_STATUS'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.NVQ_STATUS
    move 'NVQ_STATUS' to $FieldName
    move &APPITEM.NVQ_STATUS  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'SCHOOL_CODE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.SCHOOL_CODE
    move &APPITEM.SCHOOL_CODE to $hrs_school_code
    do Get-School-Code
    print $fldlabel                      (+1,6,)  bold
    print $hrs_school_code_descr         (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'SCHOOL_DESCR'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.SCHOOL_DESCR
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.SCHOOL_DESCR          (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'MAJOR_CODE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.MAJOR_CODE
    move &APPITEM.MAJOR_CODE to $hrs_major_code
    do Get-Major-Code
    print $fldlabel                      (+1,6,)  bold
    print $hrs_major_code_descr          (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'MAJOR_DESCR'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.MAJOR_DESCR
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.MAJOR_DESCR           (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_MINOR_CD'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_MINOR_CD
    ! JPM Minor code description is also defaulted from MAJOR_TBL.
    ! That's why JPM_MINOR_CD is stored in $hrs_major_code variable,
    ! and Get-Major-Code is called to get the description.
    move &APPITEM.JPM_MINOR_CD to $hrs_major_code
    do Get-Major-Code
    print $fldlabel                      (+1,6,)  bold
    print $hrs_major_code_descr          (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'MINOR_DESCR'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.MINOR_DESCR
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.MINOR_DESCR           (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'AVERAGE_GRADE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.AVERAGE_GRADE
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.AVERAGE_GRADE         (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'PRACTIC_GRADE_GER'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.PRACTIC_GRADE_GER
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.PRACTIC_GRADE_GER     (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'THEORY_GRADE_GER'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.THEORY_GRADE_GER
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.THEORY_GRADE_GER      (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'IPE_SW'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.IPE_SW
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.IPE_SW = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'EVALUATION_I'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.EVALUATION_ID
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.EVALUATION_ID         (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'GVT_CREDIT_HOURS'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.GVT_CREDIT_HOURS
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.GVT_CREDIT_HOURS      (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'GVT_CRED_HRS_TYPE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.GVT_CRED_HRS_TYPE
    move 'GVT_CRED_HRS_TYPE' to $FieldName
    move &APPITEM.GVT_CRED_HRS_TYPE  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'EDUC_LVL_AUS'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.EDUC_LVL_AUS
    move 'EDUC_LVL_AUS' to $FieldName
    move &APPITEM.EDUC_LVL_AUS  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'APS_HEDUC_CD_AUS'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.APS_HEDUC_CD_AUS
    move 'APS_HEDUC_CD_AUS' to $FieldName
    move &APPITEM.APS_HEDUC_CD_AUS  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If


APPITEM.FACULTY_CODE
  move &APPITEM.FACULTY_CODE to $hrs_faculty_code
  let $Found = 'N'
  let $fldname =  'FACULTY_CODE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
    do Get-Faculty-Code
    print $fldlabel                      (+1,6,)  bold
    print $hrs_faculty_code_descr        (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'FACULTY_DESCR'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.FACULTY_DESCR
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.FACULTY_DESCR         (,37,)
  End-If

APPITEM.SUBFACULTY_CODE
  move &APPITEM.SUBFACULTY_CODE to $hrs_subfaculty_code
  let $Found = 'N'
  let $fldname =  'SUBFACULTY_CODE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
    do Get-SubFaculty-Code
    print $fldlabel                      (+1,6,)  bold
    print $hrs_subfaculty_code_descr     (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'SUBFACULTY_DESCR'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.SUBFACULTY_DESCR
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.SUBFACULTY_DESCR      (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'MAJOR_CATEGORY'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.MAJOR_CATEGORY
    move 'MAJOR_CATEGORY' to $FieldName
    move &APPITEM.MAJOR_CATEGORY  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'FP_SUBJECT_CD'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.FP_SUBJECT_CD
    move &APPITEM.FP_SUBJECT_CD to $hrs_fp_subject_code
    do Get-Subject-Code
    print $fldlabel                      (+1,6,)  bold
    print $hrs_fp_subject_code_descr     (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'EP_APPRAISAL_ID'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.EP_APPRAISAL_ID
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.EP_APPRAISAL_ID       (,37,)  edit 99999999
  End-If

  let $Found = 'N'
  let $fldname =  'SCHOOL_TYPE'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.SCHOOL_TYPE
    move &APPITEM.SCHOOL_TYPE to $hrs_school_type
    do Get-School-Type
    print $fldlabel                      (+1,6,)  bold
    print $hrs_school_type_descr         (,37,)
  End-If

APPITEM.SETID_DEPT
  move &APPITEM.SETID_DEPT to $hrs_department_setid
  let $Found = 'N'
  let $fldname =  'SETID_DEPT'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.SETID_DEPT            (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'DEPTID'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.DEPTID
    move &APPITEM.DEPTID to $hrs_deptid
    print $fldlabel                      (+1,6,)  bold
    print $hrs_department_descr          (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'BUSINESS_UNIT'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.BUSINESS_UNIT
    move &APPITEM.BUSINESS_UNIT to $hrs_bu
    do Get-Business-Unit
    print $fldlabel                      (+1,6,)  bold
    print $hrs_bu_descr                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'LOCATION'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.SETID_LOCATION
    move &APPITEM.SETID_LOCATION to $hrs_setid
APPITEM.LOCATION
    move &APPITEM.LOCATION to $hrs_location
    do Get-Location
    print $fldlabel                      (+1,6,)  bold
    print $hrs_location_descr            (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_ADHOC_DESCR'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_ADHOC_DESCR
    print $fldlabel                      (+1,6,)  bold
    print &APPITEM.JPM_ADHOC_DESCR       (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'FP_SKIL_HIR'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.FP_SKIL_HIR
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.FP_SKIL_HIR = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'FP_SKIL_PRM'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.FP_SKIL_PRM
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.FP_SKIL_PRM = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'FP_SKIL_TEN'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.FP_SKIL_TEN
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.FP_SKIL_TEN = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'FP_DEGR_REQUIRED'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.FP_DEGR_REQUIRED
    print $fldlabel                      (+1,6,)  bold
    if &APPITEM.FP_DEGR_REQUIRED = 'Y'
      print $YES                         (,37,)
    Else
      print $NO                          (,37,)
    End-If
  End-If

  let $Found = 'N'
  let $fldname =  'BONUS_AMOUNT_FRA'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.BONUS_AMOUNT_FRA
    do Format-Amt(&APPITEM.BONUS_AMOUNT_FRA, $bonus_amount_fra_out, '99 999,99', 'FRF', $out)
    print $fldlabel                      (+1,6,)  bold
    print $bonus_amount_fra_out          (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'BONUS_DT_FRA'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.BONUS_DT_FRA
    print $fldlabel                      (+1,6,)  bold
    do Format-DateTime(&APPITEM.BONUS_DT_FRA ,$hrs_bonus_dt_fra,{DEFDATE},'','')
    print $hrs_bonus_dt_fra              (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_OBSTACLE_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_OBSTACLE_1
    move 'JPM_OBSTACLE_1' to $FieldName
    move &APPITEM.JPM_OBSTACLE_1  to $FieldValue
    do Read-Translate-Table
    print $fldlabel                      (+1,6,)  bold
    print $XlatLongName                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_AREA_PREF_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_AREA_PREF_1
    move &APPITEM.JPM_AREA_PREF_1 to $hrs_area_pref
    do Get-Pref-Geo-Area
    print $fldlabel                      (+1,6,)  bold
    print $hrs_area_pref_descr           (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_AREA_PREF_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_AREA_PREF_2
    move &APPITEM.JPM_AREA_PREF_2 to $hrs_area_pref
    do Get-Pref-Geo-Area
    print $fldlabel                      (+1,6,)  bold
    print $hrs_area_pref_descr           (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_AREA_PREF_3'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_AREA_PREF_3
    move &APPITEM.JPM_AREA_PREF_3 to $hrs_area_pref
    do Get-Pref-Geo-Area
    print $fldlabel                      (+1,6,)  bold
    print $hrs_area_pref_descr           (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_CNTRY_PREF_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_CNTRY_PREF_1
    move &APPITEM.JPM_CNTRY_PREF_1 to $hrs_country_code
    Do Get-Country
    print $fldlabel                      (+1,6,)  bold
    print $hrs_country_code_decsr        (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_CNTRY_PREF_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_CNTRY_PREF_2
    move &APPITEM.JPM_CNTRY_PREF_2 to $hrs_country_code
    Do Get-Country
    print $fldlabel                      (+1,6,)  bold
    print $hrs_country_code_decsr        (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_CNTRY_PREF_3'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_CNTRY_PREF_3
    move &APPITEM.JPM_CNTRY_PREF_3 to $hrs_country_code
    Do Get-Country
    print $fldlabel                      (+1,6,)  bold
    print $hrs_country_code_decsr        (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_LOC_BUNIT_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_LOC_BUNIT_1
    move &APPITEM.JPM_LOC_BUNIT_1 to $hrs_bu
    do Get-Business-Unit
    print $fldlabel                      (+1,6,)  bold
    print $hrs_bu_descr                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_LOCATION_1'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_SETID_LOC_1
    move &APPITEM.JPM_SETID_LOC_1 to $hrs_setid
APPITEM.JPM_LOCATION_1
    move &APPITEM.JPM_LOCATION_1 to $hrs_location
    do Get-Location
    print $fldlabel                      (+1,6,)  bold
    print $hrs_location_descr            (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_LOC_BUNIT_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_LOC_BUNIT_2
    move &APPITEM.JPM_LOC_BUNIT_2 to $hrs_bu
    do Get-Business-Unit
    print $fldlabel                      (+1,6,)  bold
    print $hrs_bu_descr                  (,37,)
  End-If

  let $Found = 'N'
  let $fldname =  'JPM_LOCATION_2'
  Do Search-DisplayFields-Array
  If $Found = 'Y'
APPITEM.JPM_SETID_LOC_2
  move &APPITEM.JPM_SETID_LOC_2 to $hrs_setid
APPITEM.JPM_LOCATION_2
    move &APPITEM.JPM_LOCATION_2 to $hrs_location
    do Get-Location
    print $fldlabel                      (+1,6,)  bold
    print $hrs_location_descr            (,37,)
  End-If

  let #row_counter = #row_counter + 1

  If #row_counter < #appitem_count
    print '---------------------------------' (+1,6,)
  end-if


FROM PS_HRS_APPITM01_VW APPITEM
WHERE APPITEM.HRS_PERSON_ID = #hrs_person_id
AND APPITEM.HRS_PROFILE_SEQ = #hrs_profile_seq
AND APPITEM.JPM_CAT_TYPE = $JPM_CAT_TYPE
end-select

  if $row_exist = 'Y'
     ! Print a blank line
     print ' '                           (+1,,)
  end-if

  let $AsOfDate = ''

  Clear-Array Name=DisplayFields

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: PRINT-APP-REFERENCES                                      !
! Descr:     This procedure prints applicant's references              !
!----------------------------------------------------------------------!
begin-procedure PRINT-APP-REFERENCES
  add 1 to #level
  move 'PRINT-APP-REFERENCES' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let $sect_title_printed = 'N'

begin-select

  ! Print section title
  if $sect_title_printed = 'N'
     uppercase $REPORT_SECT_17
     print $REPORT_SECT_17               (+1, 5, #cw_REPORT_SECT_17)  bold
     print $REFERENCE                    (+1, 6, #cw_REFERENCE)       bold
     print $TITLE                        (0, 46, #cw_TITLE)           bold
     print $EMPLOYER                     (0, 86, #cw_EMPLOYER)        bold
     let $sect_title_printed = 'Y'
  end-if

APPREF.REF_NAME
  print &APPREF.REF_NAME                 (+1,6,)

APPREF.REF_TITLE
  print &APPREF.REF_TITLE                (,46,)

APPREF.EMPLOYER
  print &APPREF.EMPLOYER                 (,86,)

FROM PS_HRS_APP_REF APPREF
WHERE APPREF.HRS_PERSON_ID = #hrs_person_id
end-select

  subtract 1 from #level
end-procedure


!----------------------------------------------------------------------!
! Procedure: Build-JPM-Content-DisplayFields-Array                     !
! Descr:     This procedure gets JPM content display fields            !
!----------------------------------------------------------------------!
begin-procedure Build-JPM-Content-DisplayFields-Array
  add 1 to #level
  move 'Build-JPM-Content-DisplayFields-Array' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  Create-Array Name=DisplayFields Size = 25
     Field=FldName:Char
     Field=FldLabelText:Char

     let #i = 0

begin-select
A.FIELDNAME
  let $fldname = rtrim(&A.FIELDNAME, '')
  let DisplayFields.FldName(#i) = $fldname

B.JPM_LABEL_TEXT
  let $fldlabel = rtrim(&B.JPM_LABEL_TEXT, '') ||':'
  let DisplayFields.FldLabelText(#i) = $fldlabel

  Add 1 to #i

FROM PS_HRS_SCT_PROPS A, PS_JPM_PRI_P_PRP_I B
WHERE A.JPM_JP_TYPE = B.JPM_JP_TYPE
AND A.JPM_CAT_TYPE = B.JPM_CAT_TYPE
AND A.FIELDNAME = B.FIELDNAME
AND A.JPM_CAT_TYPE = $JPM_CAT_TYPE
AND A.HRS_SUMM_DISPLAY = 'Y'
ORDER BY B.FIELDNUM
end-select

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: Search-DisplayFields-Array                                !
! Descr:     This procedure searches DisplayFields array for a field   !
!----------------------------------------------------------------------!
begin-procedure Search-DisplayFields-Array
  add 1 to #level
  move 'Search-DisplayFields-Array ' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  let #k = 0

  While (#k < #i) and $Found = 'N'
  let $fldname_arr = DisplayFields.FldName(#k)
  let $fldlabel = DisplayFields.FldLabelText(#k)
     if $fldname_arr = $fldname
           let $Found = 'Y'
        Break
      Else
        Add 1 to #k
      End-If
  End-While

  subtract 1 from #level
end-procedure

!----------------------------------------------------------------------!
! Procedure: GET-HRS036-STRING-TABLE-DEFN                              !
! Descr:     This procedure gets the translation strings from the      !
!            STRINGS_TBL or STRINGS_LNG_TBL                            !
!----------------------------------------------------------------------!
begin-procedure GET-HRS036-STRING-TABLE-DEFN
move 'GET-HRS036-STRING-TABLE-DEFN' to $current-procedure

#ifdef DebugF
  do PRINT-FLOW
#END-IF

  do INIT_REPORT_TRANSLATION ('HRS036', $rpt_language_cd)

  do Get_Field_Information ('HRS036',  'ACQ_DT',  $ACQ_DT, #cw_ACQ_DT)
  do Get_Field_Information ('HRS036',  'ADDR',  $ADDR, #cw_ADDR)
  do Get_Field_Information ('HRS036',  'APP_ID',  $APP_ID, #cw_APP_ID)
  do Get_Field_Information ('HRS036',  'APP_NAME',  $APP_NAME, #cw_APP_NAME)
  do Get_Field_Information ('HRS036',  'APP_STATUS',  $APP_STATUS, #cw_APP_STATUS)
  do Get_Field_Information ('HRS036',  'APP_TYPE',  $APP_TYPE, #cw_APP_TYPE)
  do Get_Field_Information ('HRS036',  'AVG_GRADE',  $AVG_GRADE, #cw_AVG_GRADE)
  do Get_Field_Information ('HRS036',  'CODE',  $CODE, #cw_CODE)
  do Get_Field_Information ('HRS036',  'COMMENTS',  $COMMENTS, #cw_COMMENTS)
  do Get_Field_Information ('HRS036',  'COMPLETED',  $COMPLETED, #cw_COMPLETED)
  do Get_Field_Information ('HRS036',  'CONTACT_METHOD',  $CONTACT_METHOD, #cw_CONTACT_METHOD)
  do Get_Field_Information ('HRS036',  'COUNTRY_CD',  $COUNTRY_CD, #cw_COUNTRY_CD)
  do Get_Field_Information ('HRS036',  'COURSE_DT',  $COURSE_DT, #cw_COURSE_DT)
  do Get_Field_Information ('HRS036',  'COURSE_TITLE',  $COURSE_TITLE, #cw_COURSE_TITLE)
  do Get_Field_Information ('HRS036',  'CURR_AGCY_EMPL',  $CURR_AGCY_EMPL, #cw_CURR_AGCY_EMPL)
  do Get_Field_Information ('HRS036',  'CURR_FED_EMPL',  $CURR_FED_EMPL, #cw_CURR_FED_EMPL)
  do Get_Field_Information ('HRS036',  'DEGREE',  $DEGREE, #cw_DEGREE)
  do Get_Field_Information ('HRS036',  'DESIRED_HOURS',  $DESIRED_HOURS, #cw_DESIRED_HOURS)
  do Get_Field_Information ('HRS036',  'DESIRED_SHIFT',  $DESIRED_SHIFT, #cw_DESIRED_SHIFT)
  do Get_Field_Information ('HRS036',  'DESIRED_START_DT',  $DESIRED_START_DT, #cw_DESIRED_START_DT)
  do Get_Field_Information ('HRS036',  'DESIRED_WORK_DAYS',  $DESIRED_WORK_DAYS, #cw_DESIRED_WORK_DAYS)
  do Get_Field_Information ('HRS036',  'EFFDT',  $EFFDT, #cw_EFFDT)
  do Get_Field_Information ('HRS036',  'EMAIL',  $EMAIL, #cw_EMAIL)
  do Get_Field_Information ('HRS036',  'EMAIL_TYPE',  $EMAIL_TYPE, #cw_EMAIL_TYPE)
  do Get_Field_Information ('HRS036',  'EMPLOYER',  $EMPLOYER, #cw_EMPLOYER)
  do Get_Field_Information ('HRS036',  'END_DT',  $END_DT, #cw_END_DT)
  do Get_Field_Information ('HRS036',  'END_JOB_TITLE',  $END_JOB_TITLE, #cw_END_JOB_TITLE)
  do Get_Field_Information ('HRS036',  'END_PAY_RATE',  $END_PAY_RATE, #cw_END_PAY_RATE)
  do Get_Field_Information ('HRS036',  'SUPERVISOR', $SUPERVISOR, #cw_SUPERVISOR)
  do Get_Field_Information ('HRS036',  'EMAIL_ADDR', $EMAIL_ADDR, #cw_EMAIL_ADDR)
  do Get_Field_Information ('HRS036',  'PHONE_NUMBR', $PHONE_NUMBR, #cw_PHONE_NUMBR)
  do Get_Field_Information ('HRS036',  'OK_CNTCT', $OK_CNTCT, #cw_OK_CNTCT)
  do Get_Field_Information ('HRS036',  'EXTENSION',  $EXTENSION, #cw_EXTENSION)
  do Get_Field_Information ('HRS036',  'FIRST_CHOICE',  $FIRST_CHOICE, #cw_FIRST_CHOICE)
  do Get_Field_Information ('HRS036',  'FNAME',  $FNAME, #cw_FNAME)
  do Get_Field_Information ('HRS036',  'FORMER_EMPL',  $FORMER_EMPL, #cw_FORMER_EMPL)
  do Get_Field_Information ('HRS036',  'FULL_OR_PART_TIME',  $FULL_OR_PART_TIME, #cw_FULL_OR_PART_TIME)
  do Get_Field_Information ('HRS036',  'GRADUATED',  $GRADUATED, #cw_GRADUATED)
  do Get_Field_Information ('HRS036',  'HIGH_CARR_TENURE',  $HIGH_CARR_TENURE, #cw_HIGH_CARR_TENURE)
  do Get_Field_Information ('HRS036',  'HIGH_EDU_LVL',  $HIGH_EDU_LVL, #cw_HIGH_EDU_LVL)
  do Get_Field_Information ('HRS036',  'HIGH_GRADE',  $HIGH_GRADE, #cw_HIGH_GRADE)
  do Get_Field_Information ('HRS036',  'HIGH_PAY_PLAN',  $HIGH_PAY_PLAN, #cw_HIGH_PAY_PLAN)
  do Get_Field_Information ('HRS036',  'ISSUE_DT',  $ISSUE_DT, #cw_ISSUE_DT)
  do Get_Field_Information ('HRS036',  'JOB_FAMILY',  $JOB_FAMILY, #cw_JOB_FAMILY)
  do Get_Field_Information ('HRS036',  'JOB_OPENING',  $JOB_OPENING, #cw_JOB_OPENING)
  do Get_Field_Information ('HRS036',  'LANG_CD',  $LANG_CD, #cw_LANG_CD)
  do Get_Field_Information ('HRS036',  'LNAME',  $LNAME, #cw_LNAME)
  do Get_Field_Information ('HRS036',  'LVL_ACHV',  $LVL_ACHV, #cw_LVL_ACHV)
  do Get_Field_Information ('HRS036',  'MAJOR',  $MAJOR, #cw_MAJOR)
  do Get_Field_Information ('HRS036',  'MILT_END_DT',  $MILT_END_DT, #cw_MILT_END_DT)
  do Get_Field_Information ('HRS036',  'MILT_GRADE',  $MILT_GRADE, #cw_MILT_GRADE)
  do Get_Field_Information ('HRS036',  'MILT_SEPR_STAT',  $MILT_SEPR_STAT, #cw_MILT_SEPR_STAT)
  do Get_Field_Information ('HRS036',  'MILT_START_DT',  $MILT_START_DT, #cw_MILT_START_DT)
  do Get_Field_Information ('HRS036',  'MILT_STAT',  $MILT_STAT, #cw_MILT_STAT)
  do Get_Field_Information ('HRS036',  'MIN_GRADE',  $MIN_GRADE, #cw_MIN_GRADE)
  do Get_Field_Information ('HRS036',  'MIN_PAY',  $MIN_PAY, #cw_MIN_PAY)
  do Get_Field_Information ('HRS036',  'MIN_PAY_PLAN',  $MIN_PAY_PLAN, #cw_MIN_PAY_PLAN)
  do Get_Field_Information ('HRS036',  'MNAME',  $MNAME, #cw_MNAME)
  do Get_Field_Information ('HRS036',  'NAME_PREFIX',  $NAME_PREFIX, #cw_NAME_PREFIX)
  do Get_Field_Information ('HRS036',  'NAME_SUFFIX',  $NAME_SUFFIX, #cw_NAME_SUFFIX)
  do Get_Field_Information ('HRS036',  'NO',  $NO, #cw_NO)
  do Get_Field_Information ('HRS036',  'OCCUP_SERIES',  $OCCUP_SERIES, #cw_OCCUP_SERIES)
  do Get_Field_Information ('HRS036',  'PAGE_NO',  $PAGE_NO, #cw_PAGE_NO)
  do Get_Field_Information ('HRS036',  'PAY_PLAN',  $PAY_PLAN, #cw_PAY_PLAN)
  do Get_Field_Information ('HRS036',  'PHONE_NO',  $PHONE_NO, #cw_PHONE_NO)
  do Get_Field_Information ('HRS036',  'PHONE_TYPE',  $PHONE_TYPE, #cw_PHONE_TYPE)
  do Get_Field_Information ('HRS036',  'POSTING_TITLE',  $POSTING_TITLE, #cw_POSTING_TITLE)
  do Get_Field_Information ('HRS036',  'PREFERRED',  $PREFERRED, #cw_PREFERRED)
  do Get_Field_Information ('HRS036',  'PREV_AGCY_EMPL',  $PREV_AGCY_EMPL, #cw_PREV_AGCY_EMPL)
  do Get_Field_Information ('HRS036',  'PREV_FED_EMPL',  $PREV_FED_EMPL, #cw_PREV_FED_EMPL)
  do Get_Field_Information ('HRS036',  'PREV_TERM_DATE',  $PREV_TERM_DATE, #cw_PREV_TERM_DATE)
  do Get_Field_Information ('HRS036',  'REFERENCE',  $REFERENCE, #cw_REFERENCE)
  do Get_Field_Information ('HRS036',  'REF_SOURCE',  $REF_SOURCE, #cw_REF_SOURCE)
  do Get_Field_Information ('HRS036',  'REF_SPEC_SOURCE',  $REF_SPEC_SOURCE, #cw_REF_SPEC_SOURCE)
  do Get_Field_Information ('HRS036',  'REF_SUB_SOURCE',  $REF_SUB_SOURCE, #cw_REF_SUB_SOURCE)
  do Get_Field_Information ('HRS036',  'REG_OR_TEMP',  $REG_OR_TEMP, #cw_REG_OR_TEMP)
  do Get_Field_Information ('HRS036',  'RELOCATE',  $RELOCATE, #cw_RELOCATE)
  do Get_Field_Information ('HRS036',  'REPORT_CONF',  $REPORT_CONF, #cw_REPORT_CONF)
  do Get_Field_Information ('HRS036',  'REPORT_ID',  $REPORT_ID, #cw_REPORT_ID)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_00',  $REPORT_SECT_00, #cw_REPORT_SECT_00)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_01',  $REPORT_SECT_01, #cw_REPORT_SECT_01)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_02',  $REPORT_SECT_02, #cw_REPORT_SECT_02)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_03',  $REPORT_SECT_03, #cw_REPORT_SECT_03)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_04',  $REPORT_SECT_04, #cw_REPORT_SECT_04)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_05',  $REPORT_SECT_05, #cw_REPORT_SECT_05)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_06',  $REPORT_SECT_06, #cw_REPORT_SECT_06)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_07',  $REPORT_SECT_07, #cw_REPORT_SECT_07)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_08',  $REPORT_SECT_08, #cw_REPORT_SECT_08)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_09',  $REPORT_SECT_09, #cw_REPORT_SECT_09)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_10',  $REPORT_SECT_10, #cw_REPORT_SECT_10)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_11',  $REPORT_SECT_11, #cw_REPORT_SECT_11)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_12',  $REPORT_SECT_12, #cw_REPORT_SECT_12)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_13',  $REPORT_SECT_13, #cw_REPORT_SECT_13)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_14',  $REPORT_SECT_14, #cw_REPORT_SECT_14)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_15',  $REPORT_SECT_15, #cw_REPORT_SECT_15)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_16',  $REPORT_SECT_16, #cw_REPORT_SECT_16)
  do Get_Field_Information ('HRS036',  'REPORT_SECT_17',  $REPORT_SECT_17, #cw_REPORT_SECT_17)
  do Get_Field_Information ('HRS036',  'REPORT_TITLE',  $REPORT_TITLE, #cw_REPORT_TITLE)
  do Get_Field_Information ('HRS036',  'RESERVE_CAT',  $RESERVE_CAT, #cw_RESERVE_CAT)
  do Get_Field_Information ('HRS036',  'RES_TEXT',  $RES_TEXT, #cw_RES_TEXT)
  do Get_Field_Information ('HRS036',  'RES_TITLE',  $RES_TITLE, #cw_RES_TITLE)
  do Get_Field_Information ('HRS036',  'RUN_DATE',  $RUN_DATE, #cw_RUN_DATE)
  do Get_Field_Information ('HRS036',  'RUN_TIME',  $RUN_TIME, #cw_RUN_TIME)
  do Get_Field_Information ('HRS036',  'SAL_GRADE',  $SAL_GRADE, #cw_SAL_GRADE)
  do Get_Field_Information ('HRS036',  'SCHOOL_NAME',  $SCHOOL_NAME, #cw_SCHOOL_NAME)
  do Get_Field_Information ('HRS036',  'SCHOOL_TYPE',  $SCHOOL_TYPE, #cw_SCHOOL_TYPE)
  do Get_Field_Information ('HRS036',  'SECOND_CHOICE',  $SECOND_CHOICE, #cw_SECOND_CHOICE)
  do Get_Field_Information ('HRS036',  'START_DT',  $START_DT, #cw_START_DT)
  do Get_Field_Information ('HRS036',  'TITLE',  $TITLE, #cw_TITLE)
  do Get_Field_Information ('HRS036',  'TRAVEL',  $TRAVEL, #cw_TRAVEL)
  do Get_Field_Information ('HRS036',  'TRAVEL_PCT',  $TRAVEL_PCT, #cw_TRAVEL_PCT)
  do Get_Field_Information ('HRS036',  'UNIFORM_SERV',  $UNIFORM_SERV, #cw_UNIFORM_SERV)
  do Get_Field_Information ('HRS036',  'VET_PREF',  $VET_PREF, #cw_VET_PREF)
  do Get_Field_Information ('HRS036',  'WORK_ELIGIBLE',  $WORK_ELIGIBLE, #cw_WORK_ELIGIBLE)
  do Get_Field_Information ('HRS036',  'YES',  $YES, #cw_YES)
  do Get_Field_Information ('HRS036')  'MON',  $MON, #cw_MON)
  do Get_Field_Information ('HRS036')  'TUES',  $TUES, #cw_MON)
  do Get_Field_Information ('HRS036')  'WED',  $WED, #cw_MON)
  do Get_Field_Information ('HRS036')  'THURS',  $THURS, #cw_MON)
  do Get_Field_Information ('HRS036')  'FRI',  $FRI, #cw_MON)
  do Get_Field_Information ('HRS036')  'SAT',  $SAT, #cw_MON)
  do Get_Field_Information ('HRS036')  'SUN',  $SUN, #cw_MON)

end-procedure

!**********************************************************************
!       SQCs
!**********************************************************************
#include 'fgrunctl.sqc'    !Get run control parameter values
#include 'fggetval.sqc'    !Get values mask routines
#include 'askaod.sqc'      !Ask As Of Date input

#include 'stdapi.sqc'      !Routine to update run status
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Globalization
#Include 'readxlat.sqc'    !Read-Translate-Table procedure
#Include 'reset.sqc'       !Reset printer procedure
#Include 'hrsecty.sqc'     !SQR security
#Include 'hrsappnm.sqc'    !Get Applicant Name
#Include 'hrsgtrel.sqc'    !Get related data
#include 'adformat.sqc'    !Get global addressing format
