!***********************************************************************
!  GP00PS26: Global Payroll Payslips - Dynamic Tax for ALL Countries*
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:04:08:57                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************




#Define Tax_DetailArray_TaxDynamic_Size 99
#Define TAX_DYNAMIC_TITLE_SIZE 2

!***********************************************************************
begin-procedure Init-Arrays_TaxDynamic
!***********************************************************************

Create-Array Name=Tax_DetailArray_TaxDynamic Size = {Tax_DetailArray_TaxDynamic_Size}
    Field=Name:char
    Field=CurrentTax:Number
    Field=YTDTax:Number

Create-Array Name=Tax_TotalArray_TaxDynamic Size = 1
    Field=Name:char
    Field=CurrentTax:Number
    Field=YTDTax:Number


let #i = 0

while (#i < {Tax_DetailArray_TaxDynamic_Size} )
    
    Put ' ' into Tax_DetailArray_TaxDynamic(#i) name
    Put 0 into Tax_DetailArray_TaxDynamic(#i) CurrentTax
    Put 0 into Tax_DetailArray_TaxDynamic(#i) YTDTax
    Add 1 to #i

end-while

    Put ' ' into Tax_TotalArray_TaxDynamic(0) name
    Put 0 into Tax_TotalArray_TaxDynamic(0) CurrentTax
    Put 0 into Tax_TotalArray_TaxDynamic(0) YTDTax

end-procedure

!***********************************************************************


!***********************************************************************
begin-procedure Init-Variables_TaxDynamic
!***********************************************************************

let $space_left   = 'y'
let #curr_tax_detail_line = 0
let #ytd_tax_detail_line = 0
let $section_printed = 'n'
let #detail_line = 0
let #gbl_total_tax_cur_TaxDynamic = 0
let #gbl_total_tax_ytd_TaxDynamic = 0
if upper($gbl_new_lang_flag) = 'Y'
             
    do Get_Field_Information ($ReportID, 'DESCR_LBL'   , $DESCR_LBL,       #DW)
    do Get_Field_Information ($ReportID, 'CUR_LBL'       , $CUR_LBL,        #DW)
    do Get_Field_Information ($ReportID, 'YTD_LBL'    , $YTD_LBL,        #DW)
    do Get_Field_Information ($ReportID, 'TAX_LBL'     , $TAX_LBL,           #DW)
    do Get_Field_Information ($ReportID, 'TOTAL_LBL'     , $TOTAL_LBL,           #DW)   
    do Get_Field_Information ($ReportID, 'WTHLD_LBL'     , $WTHLD_LBL,           #DW)
  end-if
  
end-procedure

!***********************************************************************



    
!**********************************************************************
!**********************************************************************
!      Taxes_Dynamic
!**********************************************************************
!**********************************************************************

begin-procedure Taxes_Dynamic
#debug do Pslp-Proc-Debug-Msg('ALL Tax section GP00PS26.SQC ')
#debug do Pslp-Proc-Debug-Msg('ALL Tax section: Procedure Taxes_Dynamic')
   
    do Init-Variables_TaxDynamic
    do Init-Arrays_TaxDynamic
    do Get-Current-DateTime

    while ($section_printed = 'n')
        do get_start_page_line_number(#current-line, #page-count, #start-section-line-number, #start-section-page-number)
        do evaluate_space_for_title(#start-section-line-number,{TAX_DYNAMIC_TITLE_SIZE},$space_left)

        if $space_left = 'n'
            if $gbl_Paycheck_To_Do = 'y'
                Do print_check_usa
                move 'n' to $check_collision 
                move 'n' to $gbl_Paycheck_To_Do
            else
                new-page
                Move 1 to #gbl_curr_Section_Start_Line
                Move 1 to #start-section-line-number
                do Taxes
                move 'y' to $section_printed
                break
            end-if
        end-if
        if $space_left = 'y'
            if $gbl_Paycheck_To_Do = 'y'
                do evaluate_bankdraft_collision(#start-section-line-number,$check_collision)
                if $check_collision = 'y'
                
                    Do print_check_usa
                    move 'n' to $check_collision 
                    move 'n' to $gbl_Paycheck_To_Do
                else
                    do Taxes
                    move 'y' to $section_printed
                    break
                end-if
            else
                do Taxes
                move 'y' to $section_printed
                break
            end-if
        end-if
    end-while
    end-procedure



!**********************************************************************
!**********************************************************************
!      Taxes
!**********************************************************************
!**********************************************************************
begin-procedure Taxes
    
    
    do Get_Taxes_TaxDynamic
    do Get_Taxes_Accum_TaxDynamic
    do total_tax_line_TaxDynamic
    do Print_Taxes_Title_TaxDynamic
    do Print_Tax_Detail_Lines_TaxDynamic
    do Print_Total_Line_TaxDynamic
    

end-procedure Taxes





!**********************************************************************
!**********************************************************************
!      Print_Taxes_Title_TaxDynamic
!**********************************************************************
!**********************************************************************
begin-procedure Print_Taxes_Title_TaxDynamic

#debug do Pslp-Proc-Debug-Msg('ALL Tax section: Procedure Print_Taxes_Title_TaxDynamic')
let #row1 = #start-section-line-number
let #totalboxpos = #gbl_curr_Section_Dtl_Lines - 1


  columns 3 87 
  graphic (#row1,1,126) box  1 10 12
  graphic (#row1,,126)  box  1 10
  graphic (+1,,126)     box  1 10
  
  use-column 0
  
  print $TAX_LBL                 (#row1,60)      bold
  print $DESCR_LBL           (+1,4)
  print $CUR_LBL              (,59)
  print $YTD_LBL                  (,94)

let #row1 = #row1 + 2



end-procedure
 

!**********************************************************************
!**********************************************************************
!      Print_Tax_Detail_Lines_TaxDynamic
!**********************************************************************
!**********************************************************************
begin-procedure Print_Tax_Detail_Lines_TaxDynamic


let #i = 0

!columns 4 53 85

!while (#i < {Tax_DetailArray_TaxDynamic_Size})
while (#i < #curr_tax_detail_line)
    columns 4 54 84
    get $TaxName #CurrentTax #YTDTax from Tax_DetailArray_TaxDynamic(#i) name CurrentTax YTDTax
    if (#CurrentTax <> 0 or #YTDTax <> 0)
    
        let #page-break-test =  #gbl_Page_lines - #current-line 
     if #page-break-test > 1        

        print $TaxName              (#row1,1)
        next-column
        
           print #CurrentTax           () edit 9,999,990.99mi
        
            next-column
        
            print #YTDTax            () edit 99,999,990.99mi
        
        
        add 1 to #row1
    
            
            add 1 to #i
   else

        new-page
        let #start-section-line-number = 1

        do Print_Taxes_Title_TaxDynamic
     
       ! columns 4 53 85

     end-if

   

    next-column
  end-if
  if (#CurrentTax = 0 and #YTDTax = 0)
       add 1 to #i
  end-if
    
end-while






end-procedure



!**********************************************************************
!**********************************************************************
!      Print_Total_Line_TaxDynamic
!**********************************************************************
!**********************************************************************
begin-procedure Print_Total_Line_TaxDynamic

columns 4 54 84

do Read_Tax_TotalArray_TaxDynamic
 !let #total_row = #row1 - #_gbl_curr_Section_Dtl_Lines
!Show '#total_row' #total_row
    
    print $TaxName              (#row1,1)
   next-column
    
          print #CurrentTax            () edit 9,999,990.99mi
          next-column
         print #YTDTax            () edit 99,999,990.99mi
   
       
    next-column
   
end-procedure



!**********************************************************************
!**********************************************************************
!      Get_Taxes_TaxDynamic
!**********************************************************************
!**********************************************************************
begin-procedure Get_Taxes_TaxDynamic
!select from the extract table
#debug do Pslp-Proc-Debug-Msg('ALL Tax section: Procedure Get_Taxes_TaxDynamic')
BEGIN-SELECT ON-ERROR=SQL-ERROR
SUM(G.CALC_RSLT_VAL)    &G.CALC_RSLT_VAL_TAX_CUR_DYN
 Move &G.CALC_RSLT_VAL_TAX_CUR_DYN to #CurrentTax
G.PIN_NUM        &G.PIN_NUM_TAX_CUR_DYN
G.INSTANCE       &G.INSTANCE_TAX_CUR_DYN
G.PIN_CATEGORY   &G.PIN_CATEGORY_TAX_CUR_DYN
G.GPUS_PSLP_TITLEOPT   &G.GPUS_PSLP_TITLEOPT_TAX_CUR_DYN
G.GPUS_PSLP_TITLE       &G.GPUS_PSLP_TITLE_TAX_CUR_DYN
G.USER_KEY1             &G.USER_KEY1_TAX_CUR_DYN
G.USER_KEY2             &G.USER_KEY2_TAX_CUR_DYN
G.GP_PSLP_ORDER       &G.STAT_EARN_GP_PSLP_ORDER_TAX_CUR_DYN
#debug1 show '** ALL Tax section:        Field Value G.CALC_RSLT_VAL_TAX_CUR_DYN = ' &G.CALC_RSLT_VAL_TAX_CUR_DYN
   Do get_appropriate_description(&G.PIN_NUM_TAX_CUR_DYN, &G.GPUS_PSLP_TITLEOPT_TAX_CUR_DYN,&G.GPUS_PSLP_TITLE_TAX_CUR_DYN,
                      &G.PIN_CATEGORY_TAX_CUR_DYN,$WTHLD_LBL,&G.USER_KEY2_TAX_CUR_DYN,$TaxName)
   Do curr_tax_detail_line_TaxDynamic
FROM PS_GPUS_PSLP_RSLT G
WHERE G.JOBINSTANCE = #gbl_job_instance AND
G.CAL_RUN_ID        = $gbl_rc_Calendar_Group AND
G.GP_CNTRY_PSLP_ELN = $gbl_GP_CNTRY_PSLP_ELN AND
G.GP_ELN_SET        = $gbl_GP_ELN_SET AND
G.EMPLID = $gbl_tgt_Emplid AND
G.PMT_GRP_ID = #gbl_tgt_Grp_ID AND
G.GPUS_PSLP_ELN_CAT = '20' AND
G.GPUS_PSLP_CURR_YTD = '10' 
GROUP BY G.PIN_CATEGORY,G.PIN_NUM,G.GPUS_PSLP_TITLEOPT,G.GPUS_PSLP_TITLE,G.USER_KEY1,G.USER_KEY2,
                                     G.INSTANCE,G.RATE_RSLT_VAL,G.GP_PSLP_ORDER ORDER BY G.GP_PSLP_ORDER
END-SELECT
end-procedure


!**********************************************************************
!**********************************************************************
!      Get_Taxes_Accum_TaxDynamic
!**********************************************************************
!**********************************************************************
begin-procedure Get_Taxes_Accum_TaxDynamic

!select from the extract table

BEGIN-SELECT ON-ERROR=SQL-ERROR
H.RATE_RSLT_VAL         &H.RATE_RSLT_VAL_TAX_YTD_DYN
SUM(H.UNIT_RSLT_VAL)    &H.UNIT_RSLT_VAL_TAX_YTD_DYN
SUM(H.CALC_RSLT_VAL)    &H.CALC_RSLT_VAL_TAX_YTD_DYN
  MOve &H.CALC_RSLT_VAL_TAX_YTD_DYN to #YtdTax
H.PIN_NUM        &H.PIN_NUM_TAX_YTD_DYN
H.INSTANCE       &H.INSTANCE_TAX_YTD_DYN
H.PIN_CATEGORY   &H.PIN_CATEGORY_TAX_YTD_DYN
H.GPUS_PSLP_TITLEOPT   &H.GPUS_PSLP_TITLEOPT_TAX_YTD_DYN
H.GPUS_PSLP_TITLE       &H.GPUS_PSLP_TITLE_TAX_YTD_DYN
H.USER_KEY1             &H.USER_KEY1_TAX_YTD_DYN
H.USER_KEY2             &H.USER_KEY2_TAX_YTD_DYN
H.GP_PSLP_ORDER       &H.STAT_EARN_GP_PSLP_ORDER_TAX_YTD_DYN
   Do get_appropriate_description(&H.PIN_NUM_TAX_YTD_DYN, &H.GPUS_PSLP_TITLEOPT_TAX_YTD_DYN,&H.GPUS_PSLP_TITLE_TAX_YTD_DYN,
                  &H.PIN_CATEGORY_TAX_YTD_DYN,$WTHLD_LBL, &H.USER_KEY2_TAX_YTD_DYN,$TaxName)
    Do ytd_tax_detail_line_TaxDynamic
FROM PS_GPUS_PSLP_RSLT H
WHERE H.JOBINSTANCE = #gbl_job_instance AND
H.CAL_RUN_ID        = $gbl_rc_Calendar_Group AND
H.GP_CNTRY_PSLP_ELN = $gbl_GP_CNTRY_PSLP_ELN AND
H.GP_ELN_SET        = $gbl_GP_ELN_SET AND
H.EMPLID = $gbl_tgt_Emplid AND
H.PMT_GRP_ID = #gbl_tgt_Grp_ID AND
H.GPUS_PSLP_ELN_CAT = '20' AND
H.GPUS_PSLP_CURR_YTD = '20' AND
H.SLICE_END_DT = (SELECT MAX(X.SLICE_END_DT) 
FROM PS_GPUS_PSLP_RSLT X
WHERE X.JOBINSTANCE = #gbl_job_instance AND
X.CAL_RUN_ID        = $gbl_rc_Calendar_Group AND
X.GP_CNTRY_PSLP_ELN = $gbl_GP_CNTRY_PSLP_ELN AND
X.GP_ELN_SET        = $gbl_GP_ELN_SET  AND
X.EMPLID = $gbl_tgt_Emplid AND
X.PMT_GRP_ID = #gbl_tgt_Grp_ID AND
X.GPUS_PSLP_ELN_CAT = '20' AND
X.GPUS_PSLP_CURR_YTD = '20')
GROUP BY H.PIN_CATEGORY,H.PIN_NUM,H.GPUS_PSLP_TITLEOPT,H.GPUS_PSLP_TITLE,H.USER_KEY1,H.USER_KEY2,H.INSTANCE,H.RATE_RSLT_VAL,
                H.GP_PSLP_ORDER ORDER BY H.GP_PSLP_ORDER
END-SELECT


end-procedure


!**********************************************************************
!**********************************************************************
!      curr_tax_detail_line_TaxDynamic
!**********************************************************************
!**********************************************************************


begin-procedure curr_tax_detail_line_TaxDynamic


    Put $TaxName into Tax_DetailArray_TaxDynamic(#curr_tax_detail_line) name
    Put #CurrentTax into Tax_DetailArray_TaxDynamic(#curr_tax_detail_line) CurrentTax
    Add #CurrentTax to #gbl_total_tax_cur_TaxDynamic
    
    Add 1 to #curr_tax_detail_line

end-procedure


!**********************************************************************
!**********************************************************************
!      ytd_tax_detail_line_TaxDynamic
!**********************************************************************
!**********************************************************************

begin-procedure ytd_tax_detail_line_TaxDynamic



    do search_TaxDetailArray_TaxDynamic($TaxName, $found, #ind)
    if $found = 'y'
        Array-Add #YtdTax to Tax_DetailArray_TaxDynamic(#ind) YtdTax
    else
        Put $TaxName into Tax_DetailArray_TaxDynamic(#curr_tax_detail_line) name
        Put #YtdTax into Tax_DetailArray_TaxDynamic(#curr_tax_detail_line) YtdTax
        Add 1 to #curr_tax_detail_line
    end-if

    Add #YtdTax to #gbl_total_tax_ytd_TaxDynamic
    
end-procedure





!**********************************************************************
!**********************************************************************
!      search_TaxDetailArray_TaxDynamic
!**********************************************************************
!**********************************************************************
begin-procedure search_TaxDetailArray_TaxDynamic ($search_pin_nm, :$found, :#i)

let #i = 0

while (#i < {Tax_DetailArray_TaxDynamic_Size})
    get $Pin_nm from Tax_DetailArray_TaxDynamic(#i) name 
    if $search_pin_nm = $Pin_nm
        let $found = 'y'

        break
    else
        let $found = 'n'

    end-if

    Add 1 to #i

end-while

end-procedure




!**********************************************************************
!**********************************************************************
!      total_tax_line_TaxDynamic
!**********************************************************************
!**********************************************************************


begin-procedure total_tax_line_TaxDynamic

Put $TOTAL_LBL into Tax_TotalArray_TaxDynamic(0) name
Put #gbl_total_tax_cur_TaxDynamic into Tax_TotalArray_TaxDynamic(0) currentTax
Put #gbl_total_tax_ytd_TaxDynamic into Tax_TotalArray_TaxDynamic(0) YTDTax



end-procedure



!**********************************************************************
!**********************************************************************
!      Read_Tax_TotalArray_TaxDynamic
!**********************************************************************
!**********************************************************************


begin-procedure Read_Tax_TotalArray_TaxDynamic

    get $TaxName #CurrentTax #YTDTax from Tax_TotalArray_TaxDynamic(0) name currentTax YTDTax

end-procedure

