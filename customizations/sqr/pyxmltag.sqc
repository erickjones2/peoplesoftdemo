!***********************************************************************
!  PYXMLTAG:  XML Element Tags                                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      !
!          $Date:  2015/08/12:12:55:12                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      !
!***********************************************************************
#include 'pyactmsk.sqc'

!*******************************************
! Procedure: Init-XML-Tags-Variables       *
! Descr:     Initialize XML Tags Variables *
!*******************************************
begin-procedure Init-XML-Tags-Variables

   move 150 to #RecordLength

   let $xmlcntrl_begin  = '<'
   let $xmlcntrl_end    = '>'
   let $xmltag_end      = '/'
   let $xmltext_delim   = '"'
   let $xmltag          = ''
   let $xmlcontent      = ''
   let $xmloutput_line  = ''
   let $xml_burst_val   = ''
   let $xml_data_filnm  = ''
   let #outputfile      = 10
   let #outputfile2     = 20
   let $FirstRecord     = 'Y'
   let $xml_view_dt     = ''
   let #xmlssp_batch_id = 0001
   let #xmlssp_btch_ctr = 0
   let $Suppress_Advice = 'N'
   let $Create_Overflow = 'N'
   let $Create_XML_DATA = 'CRTXMLDAT'
   
   let $MaskingIsOn     = ''
   do Select-PY-Install


end-procedure

!******************************************
! Procedure:  Process-SSP-XML-Tag-Content *
! Descr:      Single line element tag     *
!******************************************
begin-procedure Process-SSP-XML-Tag-Content

   if $RC_PAYINIT.Text15 = $Create_XML_DATA

      let $xmloutput_line = ''
      let $xmlcontent_masked = ''
      
      if ($xmltag     = 'dd_acct_num' or         ! acct masking begins
         $xmltag     = 'acct_num') and         
         $xmlcontent <> '' and
         $MaskingIsOn = 'Y'
         
         let $FullAcctNum = $xmlcontent
         let $MaskedAcctNum = ''
         
         do Mask-DD-Acct-Num($FullAcctNum, $MaskedAcctNum)
         
         if $MaskedAcctNum <> ''
            
            let $xmlcontent_masked = rtrim($MaskedAcctNum, ' ')
         end-if
         
      end-if                                     ! end acct masking

      let $string_in = substr($xmlcontent, 1, 100)
      do convert-special-chars

      if $string_out <> ''
         let $xmlcontent = rtrim($string_out,' ')
         let $xmloutput_line = $xmlcntrl_begin || $xmltag || $xmlcntrl_end  ||
                               $xmlcontent ||
                               $xmlcntrl_begin || $xmltag_end || $xmltag || $xmlcntrl_end

         if $Suppress_Advice = 'N'
            if $xmlcontent_masked <> ''
                let $xmloutput_line = $xmlcntrl_begin || $xmltag || $xmlcntrl_end  ||
                                      $xmlcontent_masked ||
                                      $xmlcntrl_begin || $xmltag_end || $xmltag || $xmlcntrl_end
            end-if
            
            write #outputfile  from $xmloutput_line
         end-if

         write #outputfile2 from $xmloutput_line
     end-if

   end-if

end-procedure

!**************************************************
! Procedure:  Format-XML-Tag-Beg                  *
! Descr:      Beginning tag for group of elements *
!**************************************************
begin-procedure Process-SSP-XML-Tag-Beg

   if $RC_PAYINIT.Text15 = $Create_XML_DATA

      let $xmloutput_line = ''
      let $xmloutput_line = $xmlcntrl_begin || $xmltag || $xmlcntrl_end

      if $Suppress_Advice = 'N'
         write #outputfile  from $xmloutput_line
      end-if

      write #outputfile2 from $xmloutput_line

   end-if

end-procedure

!***********************************************
! Procedure:  Process-SSP-XML-Tag-End          *
! Descr:      Ending tag for group of elements *
!***********************************************
begin-procedure Process-SSP-XML-Tag-End

   if $RC_PAYINIT.Text15 = $Create_XML_DATA

      let $xmloutput_line = ''
      let $xmloutput_line = $xmlcntrl_begin || $xmltag_end || $xmltag || $xmlcntrl_end

      if $Suppress_Advice = 'N'
         write #outputfile  from $xmloutput_line
      end-if

      write #outputfile2 from $xmloutput_line

   end-if

end-procedure

!***************************************************************
! Procedure: Convert-Special-Chars                             *
! Descr:     Convert special characters into character strings *
!            prior to writing the data in the XML file.        *
!***************************************************************
begin-procedure Convert-Special-Chars

  let $string_in   = replace($string_in, '&', '&amp;')
  let $string_in   = replace($string_in, '"', '&quot;')
  let $string_in   = replace($string_in, '<', '&lt;')
  let $string_in   = replace($string_in, '>', '&gt;')
  let $string_in   = replace($string_in, '''', '&apos;')

  let $string_out  = $string_in
end-procedure

