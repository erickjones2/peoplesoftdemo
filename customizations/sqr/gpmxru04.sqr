!***********************************************************************
!  GPMXRU04:  PTU - Project                                            *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:53:35                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************

#define c1 1
#define c1a 11
#define c2 14
#define c3 43
#define c4 57
#define c5 68
#define c6 80
#define c6a 81
#define c7 92
#define c8 108
#define c9 124
#define c10 140
#define c11 156
#define c98 155
#define c99 164

#include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-report
    do Init-DateTime
    do Init-Number
    do Stdapi-Init
    do Get-Current-DateTime
    do Select-Parameters
    do Init-Report
    do Process-Main
    do Stdapi-Term
    do Reset
end-report

begin-procedure Init-Report
    move 'GPMXRU04' to $ReportID
    display $ReportID
    display 'PROYECTO DE REPARTO DE P.T.U.'
    date-time () hh:mi:ss &timeBegan
    display 'Report Began: ' noline
    display &timeBegan
end-procedure Init-Report


begin-heading 12
  print 'PeopleSoft'              (1,) center
  print 'PROYECTO DE REPARTO DE P.T.U.'  (2,) center
  print 'Reporte:'                (3,1)
  print $ReportID                 (,12)
  print 'Compañía:'               (4,1)
  print $Company                  (,12)
  print '    '                    ()
  print $CompanyName              ()
  
  print 'Página:'  (3,{c98})
  page-number   (,{c99})
  print 'Hora:'          (4,{c98})
  print $ReportTime  (,{c99})
  print 'Fecha:'  (5,{c98})
  print $ReportDate  (,{c99})
  
  print 'Año Procesado:'           (6,1)
  print $Year                      (,40) edit 9999
  print 'Base P.T.U. a Repartir Entre Días:'            (7,1)
  print #AmountDays                (,36) edit 999,999,999.99
  print 'Base P.T.U. a Repartir Entre Sueldos:'      (8,1)
  print #AmountSal                 (,36) edit 999,999,999.99
  Print 'Sueldo Máximo para Reparto:'   (6,71)
  print #EarnMaxPtu                (,99) edit 8,888,888.88
  Print 'Factor por Días:'         (7,71)
  Print #FactorDays                (,99) edit 888888.88888888
  Print 'Factor por Sueldos:'      (8,71)
  Print #FactorAmount              (,99) edit 888888.88888888
  

  print '='   (+1,1,173) fill
  print 'Sdo. Anual'  (+1,112)
  print 'Sdo. Anual'  (,128)

  print 'Número'  (+1,{c1})
  print 'Código'                (,{c4})
  print 'Código'                (,{c5})
  print 'Días'                  (,82)
  print 'P.T.U.'                (,100)
  print 'Sin Tope'              (,112)
  print 'Con Tope'              (,128)
  print 'P.T.U.'                (,145)
  print 'Total'                 (,165)

  print 'Empleado Reg'          (+1,{c1})
  print 'Nombre del Empleado' (,{c2})
  print 'Estatus'                (,{c3})
  print 'Depto.'                (,{c4})
  print 'Puesto'              (,{c5})
  print 'Trabajados'            (,82)
  print '/Días'         (,100)
  print 'Máximo'          (,112)
  print 'Máximo'           (,128)
  print 'p/Sueldos'      (,145)
  print 'P.T.U.'              (,165)
  print '='                     (+1,1,173)fill
end-heading


begin-procedure Select-Parameters
begin-select
P.COMPANY
P.GPMX_BALANCE_YEAR
P.GPMX_DATE
P.LANGUAGE_CD

   let $Company   = rtrim(&P.COMPANY, ' ')
   let #Year      = &P.GPMX_BALANCE_YEAR
   let $Year      = to_char(&P.GPMX_BALANCE_YEAR)
   let $Date      = rtrim(&P.GPMX_DATE, ' ')
   let $Language  = rtrim(&P.LANGUAGE_CD, ' ')

FROM  PS_GPMX_RC_PTU P
WHERE P.OPRID = $prcs_oprid
AND   P.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
  let $BegDtDTU = $Year || '-01-01'
  do Convert-From-DTU-Date($BegDtDTU, $BegDt)
  let $EndDtDTU = $Year || '-12-31'
  do Convert-From-DTU-Date($EndDtDTU, $EndDt)
  let $AsOfDate = $Date
  do Get-Company-Data-Mex
  do Select-Profit-Sharing-Parms
 ! Do Security-Param
end-procedure Select-Parameters


begin-procedure Process-Main
   let #Empl_Count_Comp = 0
begin-select
A.GPMX_BALANCE_YEAR
A.COMPANY
A.EMPLID
A.EMPL_RCD
SUM(A.GPMX_CEIL_DAY) &A.GPMX_CEIL_DAY
SUM(A.GPMX_CEIL_SALARY) &A.GPMX_CEIL_SALARY
SUM(A.GPMX_TOT_SALARY) &A.GPMX_TOT_SALARY

   let $Emplid           = rtrim(&A.EMPLID,' ')
   let #Empl_rcd         = &A.EMPL_RCD
   Move &A.EMPL_RCD To $Empl_rcd  '0'
   
   let #Ceil_Day         = &A.GPMX_CEIL_DAY
   let #Ceil_Day_Fact    = #Ceil_Day * #FactorDays
   let #Tot_Salary       = &A.GPMX_TOT_SALARY
   let #Ceil_Salary      = &A.GPMX_CEIL_SALARY
   let #Ceil_Salary_Fact = #Ceil_Salary * #FactorAmount
   let #Total_Day_Salary = #Ceil_Day_Fact + #Ceil_Salary_Fact
   do Find-Emplid-Job

FROM PS_GPMX_PTU A
!    ,PS_FAST_SQR_SEC_VW SCRTY
WHERE A.GPMX_BALANCE_YEAR = #Year
AND   A.COMPANY = $Company
AND   A.EFFDT = $Date
!AND   A.EMPLID = SCRTY.EMPLID 
![$SecurityClause] 
GROUP BY A.GPMX_BALANCE_YEAR, A.COMPANY, A.EMPLID, EMPL_RCD
ORDER BY A.GPMX_BALANCE_YEAR, A.COMPANY, A.EMPLID, EMPL_RCD
end-select

   do Print-Company-Total
end-procedure Process-Main


begin-procedure Find-Emplid-Job
begin-select
J.EMPL_STATUS
J.DEPTID
J.SETID_DEPT
J.LOCATION
J.SETID_LOCATION
J.SETID_JOBCODE
J.JOBCODE

   let #Empl_Count_Comp = #Empl_Count_Comp + 1
   let #Ceil_Day_Comp = #Ceil_Day_Comp + #Ceil_Day
   let #Ceil_Day_Fact_Comp = #Ceil_Day_Fact_Comp + #Ceil_Day_Fact
   let #Tot_Salary_Comp = #Tot_Salary_Comp + #Tot_Salary
   let #Ceil_Salary_Comp = #Ceil_Salary_Comp + #Ceil_Salary
   let #Ceil_Salary_Fact_Comp = #Ceil_Salary_Fact_Comp + #Ceil_Salary_Fact
   let #Total_Day_Salary_Comp = #Total_Day_Salary_Comp + #Total_Day_Salary

   let $Empl_Status = rtrim(&J.EMPL_STATUS,' ')
   let $DeptId      = rtrim(&J.DEPTID,' ')
   let $SetId_Dept  = rtrim(&J.SETID_DEPT,' ')
   let $Location    = rtrim(&J.LOCATION,' ')
   let $SetId_Loc   = rtrim(&J.SETID_LOCATION,' ')
   let $SetID_JobCode = rtrim(&J.SETID_JOBCODE,' ')
   let $JobCode     = rtrim(&J.JOBCODE,' ')
      
   if $Empl_Status  = 'A'
      let $Empl_Status_Desc = 'Activo'
   else
      let $Empl_Status_Desc = 'Inactivo'
   end-if
 !  do Absences-Process  
   
    
   Let #Ceil_Day = #Ceil_Day 
   
   do Select-Emplid-Data
   do Select-Dept-Data
   do Select-Location-Data
   do Print-Data

FROM PS_JOB J
WHERE J.EMPLID = $Emplid
AND J.EMPL_RCD = #Empl_rcd
AND   J.COMPANY = $Company
AND   J.EFFDT = (SELECT MAX(J1.EFFDT) FROM PS_JOB J1
                 WHERE J1.EMPLID = J.EMPLID
                 AND   J1.EMPL_RCD = J.EMPL_RCD
                 AND   J1.EFFDT <= $EndDt)
AND   J.EFFSEQ = (SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
                  WHERE J2.EMPLID = J.EMPLID
                  AND   J2.EMPL_RCD = J.EMPL_RCD
                  AND   J2.EFFDT = J.EFFDT)
end-select
end-procedure Find-Emplid-Job


begin-procedure Select-Emplid-Data
begin-select
PA.EMPLID
PA.NAME_PSFORMAT

   let $Empl_Name = rtrim(&PA.NAME_PSFORMAT,' ')

FROM PS_PERSON_NAME PA
WHERE PA.EMPLID = $Emplid
ORDER BY PA.EMPLID
end-select

begin-select
E.HIRE_DT
E.TERMINATION_DT

  let $Hire_Date   = &E.HIRE_DT
  let $Term_Date   = &E.TERMINATION_DT
  do Convert-To-DTU-Date($Hire_Date,$Hire_Date1)
  do Convert-To-DTU-Date($Term_Date,$Term_Date1)

  if rtrim($Hire_Date,' ') <> ''
     let $Hire_DateP = substr($Hire_Date1,9,2) || '-' || substr($Hire_Date1,6,2) || '-' || substr($Hire_Date1,1,4)
  else
     let $Hire_DateP = ''
  end-if
  if rtrim($Term_Date,' ') <> ''
     let $Term_DateP = substr($Term_Date1,9,2) || '-' || substr($Term_Date1,6,2) || '-' || substr($Term_Date1,1,4)
  else
     let $Term_DateP = ''
  end-if

FROM PS_PER_ORG_ASGN_VW E
WHERE EMPLID = $Emplid
end-select
end-procedure Select-Emplid_Data


begin-procedure Select-Dept-Data
begin-select
DD.DESCR
   let $Dept_Name = rtrim(&DD.DESCR,' ')

FROM PS_DEPT_TBL DD
WHERE DD.DEPTID = $DeptId
AND   DD.SETID = $SetId_Dept
AND   DD.EFFDT = (SELECT MAX(DD1.EFFDT)
                  FROM PS_DEPT_TBL DD1
                  WHERE DD1.DEPTID = DD.DEPTID
                  AND   DD1.SETID = DD.SETID
                  AND   DD1.EFFDT <= $Date)
end-select
end-procedure Select-Dept-Data


begin-procedure Select-Location-Data
begin-select
LL.DESCR
   let $Loc_Name = rtrim(&LL.DESCR,' ')

FROM PS_LOCATION_TBL LL
WHERE LL.LOCATION = $Location
AND   LL.SETID = $SetId_Loc
AND   LL.EFFDT = (SELECT MAX(LL1.EFFDT)
                  FROM PS_LOCATION_TBL LL1
                  WHERE LL1.LOCATION = LL.LOCATION
                  AND   LL1.SETID = LL.SETID
                  AND   LL1.EFFDT <= $Date)
end-select
end-procedure Select-Location-Data


begin-procedure Print-Data
   print $Emplid            (+1,{c1})
   print $Empl_rcd        (,{c1a})   
   print $Empl_Name         (,{c2},28)
   print $Empl_Status_Desc  (,{c3})
   print $DeptId            (,{c4})
   print $JobCode           (,{c5})
   print #Ceil_Day          (,{c6a})   edit  999,999,999
   print #Ceil_Day_Fact     (,{c7})    edit  999,999,999.99
   print #Tot_Salary        (,{c8})    edit  999,999,999.99
   print #Ceil_Salary       (,{c9})    edit  999,999,999.99
   print #Ceil_Salary_Fact  (,{c10})   edit  999,999,999.99
   print #Total_Day_Salary  (,{c11})   edit  999,999,999.99
end-procedure Print-Data


begin-procedure Print-Company-Total
   print 'Compañía:'                 (+2,1)
   print $Company                    (0,11)
   print 'Empleados:'                (0,{c3})
   print #Empl_Count_Comp            (0,{c4})    edit         888,888
   print 'Total:'                    (0,{c5})
   print #Ceil_Day_Comp              (0,{c6a})   edit  999,999,999
   print #Ceil_Day_Fact_Comp         (0,{c7})    edit  999,999,999.99
   print #Tot_Salary_Comp            (0,{c8})    edit  999,999,999.99
   print #Ceil_Salary_Comp           (0,{c9})    edit  999,999,999.99
   print #Ceil_Salary_Fact_Comp      (0,{c10})   edit  999,999,999.99
   print #Total_Day_Salary_Comp      (0,{c11})   edit  999,999,999.99
   let #Empl_Count_Comp = 0
   let #Ceil_Day_Comp = 0
   let #Ceil_Day_Fact_Comp = 0
   let #Tot_Salary_Comp = 0
   let #Ceil_Salary_Comp = 0
   let #Ceil_Salary_Fact_Comp = 0
   let #Total_Day_Salary_Comp = 0
end-procedure Print-Company-Total


begin-procedure Select-Profit-Sharing-Parms
begin-select
H.GPMX_TOT_AMT
H.GPMX_CEIL_SALARY
H.GPMX_DAY_FACTOR
H.GPMX_SALARY_FACTOR

  let #AmountDays   = &H.GPMX_TOT_AMT / 2
  let #AmountSal    = &H.GPMX_TOT_AMT / 2
  let #EarnMaxPtu   = &H.GPMX_CEIL_SALARY
  let #FactorDays   = &H.GPMX_DAY_FACTOR
  let #FactorAmount = &H.GPMX_SALARY_FACTOR

FROM PS_GPMX_PTU_PARM H
WHERE H.COMPANY = $Company
AND   H.GPMX_BALANCE_YEAR = #Year
AND   H.EFFDT = (SELECT MAX(H1.EFFDT) FROM PS_GPMX_PTU_PARM H1
                 WHERE H1.COMPANY = H.COMPANY
                 AND   H1.GPMX_BALANCE_YEAR = H.GPMX_BALANCE_YEAR
                 AND   H1.EFFDT <= $Date)
end-select
end-procedure Select-Profit-Sharing-Parms

begin-procedure Absences-Process

  Do Select-Absences-Dates

end-procedure Absences-Process

!**************************************
begin-procedure Select-Absences-Dates
!show '* Select-Absences-Dates *'
!**************************************
Begin-Select
MAX(A.SLICE_END_DT) &A.SLICE_END_DT

  Let $SliceEndDt =  &A.SLICE_END_DT
  
  Do Select-Absences

FROM PS_GP_RSLT_ACUM A, 
     PS_GP_CAL_RUN C 
WHERE A.EMPLID = $Emplid 
AND A.EMPL_RCD = #EmplRcd
AND C.CAL_RUN_ID = A.CAL_RUN_ID 
AND A.CAL_ID = (SELECT CAL.CAL_ID 
                FROM PS_GP_CAL_RUN_DTL CAL 
                WHERE CAL.CAL_FINAL_TS = (SELECT MAX(CAL_FINAL_TS) 
                                          FROM PS_GP_CAL_RUN_DTL F 
                                          WHERE F.CAL_RUN_ID IN ( SELECT M.CAL_RUN_ID 
                                                                  FROM PS_GP_PYE_PRC_STAT M 
                                                                  WHERE M.EMPLID = A.EMPLID 
                                                                  AND M.EMPL_RCD = A.EMPL_RCD)) )  
AND A.USER_KEY1 = $Company
AND A.ACM_FROM_DT = $BegDtDTU 
AND A.ACM_THRU_DT = $EndDtDTU 
AND A.SLICE_END_DT = (SELECT MAX(D.SLICE_END_DT) 
                      FROM PS_GP_RSLT_ACUM D 
                         , PS_GP_CAL_RUN E 
                      WHERE A.EMPLID = D.EMPLID 
                      AND A.EMPL_RCD = D.EMPL_RCD 
                      AND A.PIN_NUM = D.PIN_NUM 
                      AND E.CAL_RUN_ID = D.CAL_RUN_ID 
                      AND E.RUN_FINALIZED_IND = 'Y' 
                      AND A.RSLT_SEG_NUM = D.RSLT_SEG_NUM 
                      AND D.USER_KEY1 = A.USER_KEY1 
                      AND D.ACM_FROM_DT = A.ACM_FROM_DT 
                      AND D.ACM_THRU_DT = A.ACM_THRU_DT)
End-Select                      

end-procedure Select-Absences-Dates

!**************************************
begin-procedure Select-Absences
!show '* Select-Absences *'
!**************************************
Let #DurationAbs = 0
Begin-Select
SUM(A.DURATION_ABS)  &A.DURATION_ABS

  Let #DurationAbs = &A.DURATION_ABS

FROM PS_GP_ABS_EVENT A
    ,PS_GP_ABS_TAKE B
WHERE A.EMPLID = $Emplid
AND A.PIN_TAKE_NUM = B.PIN_NUM
AND B.ABS_TYPE_OPTN IN (SELECT ABS_TYPE_OPTN 
                        FROM PS_GP_ABS_TYPE 
                        WHERE COUNTRY = 'MEX' 
                        AND ABS_TYPE_OPTN IN ('ABS', 'ENF'))
AND A.BGN_DT >= $BegDtDTU 
AND A.END_DT <= $SliceEndDt
End-Select                      

end-procedure Select-Absences

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields
#include 'hrsecty.sqc'   !Get SQR Security parameters
