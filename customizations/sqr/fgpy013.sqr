!*********************************
!  FGPY013:  Leave Accruals      *
!*********************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2014, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2014/01/15:23:27:56                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define col_sep                  1   !Column Separator
#define col_empl_id_rcd          9   !Employee ID/Rcd
#define col_empl_name           18   !Employee Name
#define col_accr_class          11   !Accrual Class
#define col_lst_dt_proc         10   !Lat Date Procesed
#define col_cur_hours_ac        14   !Curr Hours Accured
#define col_hours_carr_ov       14   !YTD Hours Carred Over
#define col_hours_ear_bogh      14   !YTD Hours Earned/Bought
#define col_hours_take_sold     11   !YTD Hours Taken/Sold
#define col_hours_adjust        10   !YTD Hours Adjusted
#define col_bal_hours           20   !Balance Hours
#define col_hourly_rt           16   !Hourly Rate
#define col_bal_amt             15   !Balance Amount
#define col_accr_class          12   !Accruals Class


begin-report
  do Init-Report
  do Array-Initialization

  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  move '**'             to  $DeptID
  move '**'             to  $BU
  move 'None Selected'  to  $DeptName
  do Stdapi-Init

  move 'FGPY013' to $ReportID
  do Get-Report-Language
  let $ReportTitle  = $FGPY013-REPORTTITLE
  display  'Report ID: ' noline
  display $ReportTitle
  
  

end-procedure

!**********************************
! This procedure is used to read language-dependent text from the database.
!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BEN007 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN007')
  do Append_Report_Translation('BEN1')
  do Append_Report_Translation('FGHR028')

  do Get_Field_Information ('FGPY013','ACCRUAL_LBL',  $FGPY013-ACCRUALS   , #CW)
  do Get_Field_Information ('FGPY013','CLASS_LBL'  ,  $FGPY013-CLASS      , #CW)
  do Get_Field_Information ('FGPY013','REPORT_TITLE_LBL', $FGPY013-REPORTTITLE, #CW)
  do Get_Field_Information ('FGPY013','AGENCY',           $FGPY013-AGENCY, #CW)
  do Get_Field_Information ('FGPY013','TOTALS_LBL',       $FGPY013-TOTAL, #CW)

  do Get_Field_Information ('BEN007', 'GRND_TOT',     $BEN007-GRND-TOT,    #CW)
  do Get_Field_Information ('BEN007', 'COMP_TOT',     $BEN007-COMP-TOT,    #CW)
  do Get_Field_Information ('BEN007', 'SICK',         $BEN007-SICK,        #CW)
  do Get_Field_Information ('BEN007', 'VACATION',     $BEN007-VACATION,    #CW)
  do Get_Field_Information ('BEN007', 'PERSONAL',     $BEN007-PERSONAL,    #CW)
  do Get_Field_Information ('BEN007', 'YTD_HOURS',    $BEN007-YTD-HOURS,   #CW)
  do Get_Field_Information ('BEN007', 'BALANCE',      $BEN007-BALANCE,     #CW)
  do Get_Field_Information ('BEN007', 'HOUR_RATE',    $BEN007-HOUR-RATE,   #CW)
  do Get_Field_Information ('BEN007', 'BAL_AMT',      $BEN007-BAL-AMT,     #CW)
  do Get_Field_Information ('BEN007', 'LAST_DATE',    $BEN007-LAST-DATE,   #CW)
  do Get_Field_Information ('BEN007', 'CUR_HOURS',    $BEN007-CUR-HOURS,   #CW)
  do Get_Field_Information ('BEN007', 'PROCESSED',    $BEN007-PROCESSED,   #CW)
  do Get_Field_Information ('BEN007', 'ACCRUED',      $BEN007-ACCRUED,     #CW)
  do Get_Field_Information ('BEN007', 'CARR_OVER',    $BEN007-CARR-OVER,   #CW)
  do Get_Field_Information ('BEN007', 'EARN_BOGHT',   $BEN007-EARN-BOGHT,  #CW)
  do Get_Field_Information ('BEN007', 'TAKEN_SOLD',   $BEN007-TAKEN-SOLD,  #CW)
  do Get_Field_Information ('BEN007', 'ADJUSTED',     $BEN007-ADJUSTED,    #CW)
  do Get_Field_Information ('BEN007', 'COST_CENTR',   $BEN007-COST-CENTR,  #CW)
  do Get_Field_Information ('BEN007', 'ID_RCD',       $BEN007-ID-RCD,      #CW)
  do Get_Field_Information ('BEN007', 'COST_CTR_TOT', $BEN007-COST-CTR-TOT,#CW)
  

  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',      $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',   'HOURS',        $BEN1-HOURS,         #CW)
  do Get_Field_Information ('BEN1',   'TYPE',         $BEN1-TYPE,          #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'PLAN_TYPE',    $BEN1-PLAN-TYPE,     #CW)
  do Get_Field_Information ('BEN1',   'AMT',          $BEN1-AMT,           #CW)

  

End-Procedure

!*---------------------------------------------------------------------*
begin-procedure Array-Initialization

  create-array name=Totals          -
               size=4               -
               field=TotalName:char -
               field=type:char:19    -
               field=value:number:19 -
               field=hours:number:19

  put $BEN007-GRND-TOT     into Totals(1) TotalName
  put $BEN007-COMP-TOT     into Totals(2) TotalName
  put $BEN007-COST-CTR-TOT into Totals(3) TotalName

 ! put $BEN007-SICK       into Totals(1) type(0)
 ! put $BEN007-VACATION   into Totals(1) type(1)
 ! put $BEN007-PERSONAL   into Totals(1) type(2)
 ! put $BEN007-SICK       into Totals(2) type(0)
 ! put $BEN007-VACATION   into Totals(2) type(1)
 ! put $BEN007-PERSONAL   into Totals(2) type(2)
 ! put $BEN007-SICK       into Totals(3) type(0)
 ! put $BEN007-VACATION   into Totals(3) type(1)
 ! put $BEN007-PERSONAL   into Totals(3) type(2)
  
 

end-procedure

!*---------------------------------------------------------------------*
begin-heading 7
! #Include 'stdhtr02.sqc'

  #Include 'stdhdgtr.sqc'

  do Append_Report_Translation ('STDHDGHR')
  if $Program_Read = 'Y'
    do Get_Field_Information ('STDHDGHR',         'COMPANY',      $COMP,  #DW)
  end-if

  if $Company <> $priorCompany
    do Get-Company-Data
    move $Company to $priorCompany
    move ''       to $priorPayGroup  !for use in Standard Heading #6
  end-if
  print $FGPY013-AGENCY   (3,1,11)
  print $Company                (0,13,3)
  print $CompanyName            (0,17)

  
  print $BEN007-COST-CENTR  (+1,1)
  ! print 'ORG'  (+1,1)
  print $DeptID            (0,13)
  print $DeptName          (0,+2)

!Column Heading line 1
  print $BEN1-EMPLOYEE     (+2,1,{col_empl_id_rcd})
  print $BEN1-EMPLOYEE     (0,+{col_sep},{col_empl_name})
!  print $BEN1-PLAN         (0,+{col_sep},{col_plan_type})
!  print $BEN1-BENEFIT      (0,+{col_sep},{col_ben_plan})
  print $FGPY013-ACCRUALS (0,+{col_sep},{col_accr_class})
  print $BEN007-LAST-DATE  (0,+{col_sep},{col_lst_dt_proc})
  print $BEN007-CUR-HOURS  (0,+{col_sep},{col_cur_hours_ac})
  print $BEN1-HOURS        (0,+{col_sep},{col_hours_carr_ov})
  print $BEN007-YTD-HOURS  (0,+{col_sep},{col_hours_ear_bogh})
  print $BEN007-YTD-HOURS  (0,+{col_sep},{col_hours_take_sold})
  print $BEN007-YTD-HOURS  (0,+{col_sep},{col_hours_adjust})
  print $BEN007-BALANCE    (0,+{col_sep},{col_bal_hours})
  print $BEN007-HOUR-RATE  (0,+{col_sep},{col_hourly_rt})
  print $BEN007-BAL-AMT    (0,+{col_sep},{col_bal_amt})

!Column Heading line 2
  print $BEN007-ID-RCD     (+1,1,{col_empl_id_rcd})
  print $BEN1-NAME         (0,+{col_sep},{col_empl_name})
!  print $BEN1-TYPE         (0,+{col_sep},{col_plan_type})
!  print $BEN1-PLAN         (0,+{col_sep},{col_ben_plan})
  print $FGPY013-CLASS     (0,+{col_sep},{col_accr_class})
  print $BEN007-PROCESSED  (0,+{col_sep},{col_lst_dt_proc})
  print $BEN007-ACCRUED    (0,+{col_sep},{col_cur_hours_ac})
  print $BEN007-CARR-OVER  (0,+{col_sep},{col_hours_carr_ov})
  print $BEN007-EARN-BOGHT (0,+{col_sep},{col_hours_ear_bogh})
  print $BEN007-TAKEN-SOLD (0,+{col_sep},{col_hours_take_sold})
  print $BEN007-ADJUSTED   (0,+{col_sep},{col_hours_adjust})
  print $BEN1-HOURS        (0,+{col_sep},{col_bal_hours})

!Column Heading line 3
  print '='                (+1,1,{col_empl_id_rcd})             Fill
  print '='                (0,+{col_sep},{col_empl_name})       Fill
!  print '='                (0,+{col_sep},{col_plan_type})       Fill
!  print '='                (0,+{col_sep},{col_ben_plan})        Fill
  print '='                (0,+{col_sep},{col_accr_class})      Fill
  print '='                (0,+{col_sep},{col_lst_dt_proc})     Fill
  print '='                (0,+{col_sep},{col_cur_hours_ac})    Fill
  print '='                (0,+{col_sep},{col_hours_carr_ov})   Fill
  print '='                (0,+{col_sep},{col_hours_ear_bogh})  Fill
  print '='                (0,+{col_sep},{col_hours_take_sold}) Fill
  print '='                (0,+{col_sep},{col_hours_adjust})    Fill
  print '='                (0,+{col_sep},{col_bal_hours})       Fill
  print '='                (0,+{col_sep},{col_hourly_rt})       Fill
  print '='                (0,+{col_sep},{col_bal_amt})         Fill
end-heading

!*---------------------------------------------------------------------*
begin-procedure Process-Main

begin-SELECT
C.COMPANY      () on-break print=never level=1 procedure=Company-Change
C.DEPTID       () on-break print=never level=2 procedure=Dept-Change
A.EMPLID,
A.EMPL_RCD,
B.NAME,
A.GVT_ERN_ACCR_CLASS,
E.GVT_EARN_TYPE
C.HOURLY_RT,
C.BUSINESS_UNIT,
A.EFFDT,
A.HRS_CARRYOVER,
A.HRS_EARNED_YTD,
A.HRS_TAKEN_YTD,
A.HRS_ADJUST_YTD,
A.HRS_BOUGHT_YTD,
A.HRS_SOLD_YTD

  do Get-Prior-Balance
  do Print-Accrual-Detail
  do Accumulate-Totals

FROM PS_GVT_ACCR_SUMM   A,
     PS_PERSON_NAME   B,
     PS_JOB             C,
     PS_GVT_ACCR_PLAN   D,
     PS_GVT_ERN_ACR_CLS E
WHERE A.EMPLID      = B.EMPLID
  AND C.EMPLID      = A.EMPLID
  AND A.EFFDT =
      (SELECT MAX(AX.EFFDT)
        FROM PS_GVT_ACCR_SUMM AX
        WHERE AX.EMPLID    = A.EMPLID
          AND AX.GVT_ERN_ACCR_CLASS = A.GVT_ERN_ACCR_CLASS)
  AND C.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_JOB
        WHERE  EMPLID  = C.EMPLID
          AND  EFFDT <= A.EFFDT)
  AND  C.EFFSEQ =
       (SELECT MAX(EFFSEQ)
        FROM   PS_JOB
        WHERE  EMPLID  = C.EMPLID
          AND  EFFDT  = C.EFFDT)
  AND A.GVT_ERN_ACCR_CLASS IN
      (SELECT CL.GVT_ERN_ACCR_CLASS
          FROM PS_GVT_ACCR_PLAN CL,PS_GVT_ERN_ACR_CLS CLA
          WHERE CL.COVERAGE_ELECT = 'E' AND
                CL.EMPLID = A.EMPLID AND
                CL.EMPL_RCD = A.EMPL_RCD AND
                CL.GVT_ERN_ACCR_CLASS = CLA.GVT_ERN_ACCR_CLASS AND
                CLA.EFFDT =
                     (SELECT MAX(EFFDT) FROM PS_GVT_ERN_ACR_CLS
                      WHERE GVT_ERN_ACCR_CLASS = CL.GVT_ERN_ACCR_CLASS)
                       AND  CL.EFFDT =
                              (SELECT MAX(EFFDT) FROM PS_GVT_ACCR_PLAN
                               WHERE EMPLID = A.EMPLID AND
                                GVT_ERN_ACCR_CLASS = CL.GVT_ERN_ACCR_CLASS))
  AND D.EMPLID      = A.EMPLID
  AND D.EMPL_RCD   = A.EMPL_RCD
  AND D.GVT_ERN_ACCR_CLASS   = A.GVT_ERN_ACCR_CLASS
  AND D.EFFDT       =
       (SELECT MAX(DD.EFFDT)
        FROM   PS_GVT_ACCR_PLAN DD
        WHERE  DD.EMPLID    = D.EMPLID
          AND  DD.EMPL_RCD = D.EMPL_RCD
          AND  DD.GVT_ERN_ACCR_CLASS = D.GVT_ERN_ACCR_CLASS
          AND  DD.EFFDT    <= A.EFFDT)
  AND E.GVT_ERN_ACCR_CLASS = A.GVT_ERN_ACCR_CLASS
  AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_GVT_ERN_ACR_CLS
                 WHERE GVT_ERN_ACCR_CLASS = E.GVT_ERN_ACCR_CLASS
                   AND EFFDT <= A.EFFDT)
ORDER BY C.COMPANY,
         C.DEPTID,
         A.EMPLID,
         A.GVT_ERN_ACCR_CLASS
end-SELECT

  move 1 to #changeLevel
  move 'Y' to $End
  do Print-Totals

end-procedure

!*---------------------------------------------------------------------*
begin-procedure  Get-Prior-Balance

  move 0 to #Prior_Leave_Hours_Bal

begin-SELECT
AA.HRS_CARRYOVER,
AA.HRS_EARNED_YTD,
AA.HRS_TAKEN_YTD,
AA.HRS_ADJUST_YTD,
AA.HRS_BOUGHT_YTD,
AA.HRS_SOLD_YTD,
AA.EFFDT

  let #Prior_Leave_Hours_Bal = &AA.Hrs_carryover + &AA.Hrs_earned_ytd
        - &AA.Hrs_taken_ytd + &AA.Hrs_adjust_ytd
        - &AA.Hrs_sold_ytd  + &AA.Hrs_bought_ytd

FROM PS_GVT_ACCR_SUMM AA
WHERE AA.EMPLID     = &A.EmplID
  AND AA.EMPL_RCD  = &A.EMPL_RCD
  AND AA.GVT_ERN_ACCR_CLASS  = &A.GVT_ERN_ACCR_CLASS
  AND AA.EFFDT =
      (SELECT MAX(EFFDT)
        FROM PS_GVT_ACCR_SUMM
        WHERE EMPLID    = AA.EMPLID
          AND GVT_ERN_ACCR_CLASS = AA.GVT_ERN_ACCR_CLASS
          AND EFFDT <  &A.EFFDT)
end-SELECT

end-procedure

!*---------------------------------------------------------------------*
begin-procedure Print-Accrual-Detail

  if &C.Company <> $Company
    move &C.Company to $Company
    do Get-Company-Data
  end-if

  if Rtrim(&C.DeptID, ' ')  <> $DeptID
      or &C.BUSINESS_UNIT <> $BU
    let $BU = &C.BUSINESS_UNIT
    let $DeptID = Rtrim(&C.DeptID, ' ')
    do Get-Department-Name
  end-if

  if &A.EmplID  <> $EmplID
    move &A.EmplID  to $EmplID
    move &A.EmplID  to $EmplID_Prt
    move &A.EMPL_RCD to $EmpRcdNo_Prt
    move &B.Name    to $Name_Prt
  else
    move '    '     to $EmplID_Prt
    move '    '     to $EmpRcdNo_Prt
    move '    '     to $Name_Prt
  end-if

  move &E.Gvt_Earn_Type to $EarnType
  move &A.Gvt_Ern_Accr_Class to $Accrual_Class
  move 'GVT_EARN_TYPE'  to $FieldName
  move $EarnType    to $FieldValue
  do Read-Translate-Table
  move  $XlatLongName  to $Earn_Description

  if not IsNULL(&A.Effdt)
    do Format-DateTime(&A.Effdt, $Accrual_Proc_Dt, {DEFDATE}, '', '')
  end-if

  let #Leave_Hours_Bal = &A.Hrs_Carryover + &A.Hrs_earned_ytd
        - &A.Hrs_taken_ytd + &A.Hrs_adjust_ytd
        - &A.Hrs_sold_ytd  + &A.Hrs_bought_ytd

  let #Cur_Hours_Accrued = #Leave_Hours_Bal - #Prior_Leave_Hours_Bal

  let #Leave_Hours_Value = #Leave_Hours_Bal * &C.Hourly_Rt

  do Format-Number(#Cur_Hours_Accrued, $Cur_Hours_Accrued, '99,999.999999mi')
  do Format-Number(&A.Hrs_Carryover, $Hrs_Carryover, '99,999.999999mi')
  do Format-Number(&A.Hrs_earned_ytd, $Hrs_earned_ytd, '9,999.999999mi')
  do Format-Number(&A.Hrs_taken_ytd, $Hrs_taken_ytd, '9,999.999mi')
  do Format-Number(&A.Hrs_adjust_ytd, $Hrs_adjust_ytd, '9,999.999mi')
  do Format-Number(&A.Hrs_bought_ytd, $Hrs_bought_ytd, '9,999.999mi')
  do Format-Number(&A.Hrs_sold_ytd, $Hrs_sold_ytd, '9,999.999mi')
  do Format-Number(#Leave_Hours_Bal, $Leave_Hours_Bal, '99,999.999999mi')
  do Format-Number(&C.Hourly_Rt, $Hourly_Rt, '999,999,999,999.999999')
  do Format-Number(#Leave_Hours_Value, $Leave_Hours_Value, '999,999,999,999.99mi')

  print $EmplID_Prt         (+2,1)
  print $Name_Prt           (0,11,20)
  print $EarnType           (0,31)
  print $Accrual_Class       (0,35)
  print $Accrual_Proc_Dt    (0,43)

  print $Cur_Hours_Accrued  (0,53,14)
  print $Hrs_Carryover      (0,68,14)
  print $Hrs_earned_ytd     (0,83,13)
  print $Hrs_taken_ytd      (0,97,10)
  print $Hrs_adjust_ytd     (0,108,10)
  print $Leave_Hours_Bal    (0,119,14)
  print $Hourly_Rt          (0,134,22)
  print $Leave_Hours_Value  (0,157,19)
  print $EmpRcdNo_Prt        (+1,1)
  print $Hrs_bought_ytd     (0,83,10)
  print $Hrs_sold_ytd       (0,97,10)

end-procedure

!*---------------------------------------------------------------------*
begin-procedure Accumulate-Totals

  evaluate &E.Gvt_Earn_Type
    when = 'AN'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(0)  hours(0)
    put $ACCRUAL_CLASS     into Totals(1) type(0)
    put $ACCRUAL_CLASS     into Totals(2) type(0)
    put $ACCRUAL_CLASS     into Totals(3) type(0)
    BREAK

    when = 'BM'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(1)  hours(1)
    put $ACCRUAL_CLASS     into Totals(1) type(1)
    put $ACCRUAL_CLASS     into Totals(2) type(1)
    put $ACCRUAL_CLASS     into Totals(3) type(1)
    BREAK


    when = 'CO'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(2)  hours(2)
    put $ACCRUAL_CLASS     into Totals(1) type(2)
    put $ACCRUAL_CLASS     into Totals(2) type(2)
    put $ACCRUAL_CLASS     into Totals(3) type(2)
    BREAK


    when = 'CR'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(3)  hours(3)
    put $ACCRUAL_CLASS     into Totals(1) type(3)
    put $ACCRUAL_CLASS     into Totals(2) type(3)
    put $ACCRUAL_CLASS     into Totals(3) type(3)
    BREAK

    when = 'DA'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(4)  hours(4)
    put $ACCRUAL_CLASS     into Totals(1) type(4)
    put $ACCRUAL_CLASS     into Totals(2) type(4)
    put $ACCRUAL_CLASS     into Totals(3) type(4)
    BREAK


    when = 'DS'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(5)  hours(5)
    put $ACCRUAL_CLASS     into Totals(1) type(5)
    put $ACCRUAL_CLASS     into Totals(2) type(5)
    put $ACCRUAL_CLASS     into Totals(3) type(5)
    BREAK


    when = 'FM'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(6)  hours(6)
    put $ACCRUAL_CLASS     into Totals(1) type(6)
    put $ACCRUAL_CLASS     into Totals(2) type(6)
    put $ACCRUAL_CLASS     into Totals(3) type(6)
    BREAK


    when = 'HO'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(7)  hours(7)
    put $ACCRUAL_CLASS     into Totals(1) type(7)
    put $ACCRUAL_CLASS     into Totals(2) type(7)
    put $ACCRUAL_CLASS     into Totals(3) type(7)
    BREAK


    when = 'LP'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(8)  hours(8)
    put $ACCRUAL_CLASS     into Totals(1) type(8)
    put $ACCRUAL_CLASS     into Totals(2) type(8)
    put $ACCRUAL_CLASS     into Totals(3) type(8)
    BREAK


    when = 'LW'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(9)  hours(9)
    put $ACCRUAL_CLASS     into Totals(1) type(9)
    put $ACCRUAL_CLASS     into Totals(2) type(9)
    put $ACCRUAL_CLASS     into Totals(3) type(9)
    BREAK


    when = 'MA'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(10)  hours(10)
   ! put $ACCRUAL_CLASS     into Totals(1) type(10)
   ! put $ACCRUAL_CLASS     into Totals(2) type(10)
   ! put $ACCRUAL_CLASS     into Totals(3) type(10)
     put 'test MA'      into Totals(1) type(10)
     put 'test MA'     into Totals(2) type(10)
     put 'test MA'     into Totals(3) type(10)
    BREAK


    when = 'MB'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(11)  hours(11)
    put $ACCRUAL_CLASS     into Totals(1) type(11)
    put $ACCRUAL_CLASS     into Totals(2) type(11)
    put $ACCRUAL_CLASS     into Totals(3) type(11)
    BREAK


    when = 'MC'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(12)  hours(12)
    put $ACCRUAL_CLASS     into Totals(1) type(12)
    put $ACCRUAL_CLASS     into Totals(2) type(12)
    put $ACCRUAL_CLASS     into Totals(3) type(12)
    BREAK


    when = 'NP'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(13)  hours(13)
    put $ACCRUAL_CLASS     into Totals(1) type(13)
    put $ACCRUAL_CLASS     into Totals(2) type(13)
    put $ACCRUAL_CLASS     into Totals(3) type(13)
    BREAK


    when = 'RC'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(14)  hours(14)
    put $ACCRUAL_CLASS     into Totals(1) type(14)
    put $ACCRUAL_CLASS     into Totals(2) type(14)
    put $ACCRUAL_CLASS     into Totals(3) type(14)
    BREAK


    when = 'RE'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(15)  hours(15)
    put $ACCRUAL_CLASS     into Totals(1) type(15)
    put $ACCRUAL_CLASS     into Totals(2) type(15)
    put $ACCRUAL_CLASS     into Totals(3) type(15)
    BREAK


    when = 'SH'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(16)  hours(16)
    put $ACCRUAL_CLASS     into Totals(1) type(16)
    put $ACCRUAL_CLASS     into Totals(2) type(16)
    put $ACCRUAL_CLASS     into Totals(3) type(16)
    BREAK


    when = 'SI'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(17)  hours(17)
    put $ACCRUAL_CLASS     into Totals(1) type(17)
    put $ACCRUAL_CLASS     into Totals(2) type(17)
    put $ACCRUAL_CLASS     into Totals(3) type(17)
    BREAK


    when = 'TO'
      array-add #Leave_Hours_Value #Leave_Hours_Bal          -
            to Totals(3) value(18)  hours(18)
    put $ACCRUAL_CLASS     into Totals(1) type(18)
    put $ACCRUAL_CLASS     into Totals(2) type(18)
    put $ACCRUAL_CLASS     into Totals(3) type(18)
    BREAK

    
  end-evaluate


end-procedure

!*---------------------------------------------------------------------*
begin-procedure Company-Change
  move 2 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Dept-Change
  move 3 to #changeLevel
  do Print-Totals
end-procedure

!*---------------------------------------------------------------------*
begin-procedure Print-Totals

  move 3 to #totalRow

  while #totalRow >= #changeLevel
    next-listing need=5
    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName
    print $TotalName                            (+1,90)
    print $FGPY013-TOTAL                        (0,111)
    print $BEN1-HOURS                           (0,140)
    print $BEN1-AMT                             (0,168)
    move 34 to #typeCol
    move 48 to #totatCol
    move 0 to #i

    while #i <= 18

      get #hours from Totals(#totalRow) hours(#i)

      if #hours <> 0 
      get $type  from Totals(#totalRow) type(#i)
      print $type (+1, 111)

      get #hours from Totals(#totalRow) hours(#i)
      do Format-Number(#hours, $out, '99,999.999999mi')
      print $out (0, 133,14)

      get #value from Totals(#totalRow) value(#i)
      do Format-Number(#value, $out, '99999,999.99mi')
      print $out (0, 163,13)

      array-add #value #hours to Totals(#rollRow) value(#i) hours(#i)
      
      end-if

      put 0 0 into Totals(#totalRow) value(#i) hours(#i)
      add 1 to #i
    end-while
    subtract 1 from #totalRow
  end-while

  new-page

  if $End = 'Y'
    do Reset
  end-if
end-procedure

!*---------------------------------------------------------------------*
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdptnm.sqc'  !Get Department Name from the Department Table
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!*---------------------------------------------------------------------*

