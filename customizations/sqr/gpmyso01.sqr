!***********************************************************************
! GPMYSO01:  SOCSO Form 8B: Monthly Schedule of Contributions          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                                                                                *
!                                                                                                                                *
!       $Release:  HR92                                                *
!           $Bug:  27218454                                            *
!                                                                                                                                *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
! 24/09/06         1318366002 sqr has been modified so that Borang 8B  *
!                             Report layout & wordings does not comply *
!                             with original form                      *
!                                                                      *
!***********************************************************************
    

#include 'setenv.sqc' !Set environment
#Include 'setup01.sqc'  !Printer and page-size initialization


begin-setup
  page-size 108 140
   !page-size 90 125
    declare printer
      type          = HPLASERJET
      orientation   = portrait
      chars-inch    = 14.6
      top-margin    = 0.50
      left-margin   = 0.50
      font          = 5
      point-size    = 9
      lines-inch    = 7
      declare-variable
      date $strtone
      date $endone
      end-declare
      
end-setup
 

begin-report

  do Init-Processing
  Move &SysDateTime to $AsOfToday

end-report

begin-procedure Init-Processing

        do Init-Datetime
        do Get-Current-Datetime
        do Define-Prcs-Vars
        do Init-Number
        do Init-Report
        do Stdapi-Term
end-procedure ! Init-Processing

!*********************************
!Procedure : Print-Values-Box
!*********************************
begin-procedure Print-Values-Box ($value, #start_position, #Line_no)

let #val_len = length($value)
let #cnt = 1

while #cnt <= #val_len
    let $prnt_char = substr($value, #cnt, 1)
    add 1 to #cnt
    graphic (#Line_no,#start_position,3) box 1 10
    add 1 to #start_position
    if $prnt_char <> 'X'!To print boxes with no value XXX.XX is passed 
     print $prnt_char (#Line_no, #start_position)
    END-IF
    add 2 to #start_position
end-while

end-procedure

!*********************************
!Procedure : Print-Values-Box1
!*********************************
begin-procedure Print-Values-Box1 ($value1, #start_position1, #Line_no1, #length1)

let #val_len1 = #length1
let #cnt1 = 1

while #cnt1 <= #val_len1
    let $prnt_char1 = substr($value1, #cnt1, 1)
    add 1 to #cnt1
    graphic (#Line_no1,#start_position1,3) box 1 10
    add 1 to #start_position1
    print $prnt_char1 (#Line_no1, #start_position1)
    add 2 to #start_position1
end-while
end-procedure

!*********************************
!Procedure : fill-page
!*********************************
begin-procedure fill-page

if #CurLine> 0 !when no data exists, the pdf is not printed 

let #CLine =  #CurLine
let #TotRows = #TotRecs

while  ( #CLine < 94 )



do Print-Values-Box ('XXX', 122, #CLine)
   print '.' (#CLine, 132)
   
   do Print-Values-Box ('XX', 133, #CLine)
   add 1 to #CLine
graphic (#CLine,1,140) horz-line 10 

let #TotRows = #TotRows + 1
add 2 to #CLine



end-while

end-if

end-procedure


!*********************************
!Procedure : Init-Report
!*********************************
begin-procedure Init-Report

do Stdapi-Init
do Get-Language-Codes   ! get the current language in which user wants to print the report
do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
do Append_Report_Translation ('GPMYSO01')       ! from settrans.sqc
do Get_Field_Information ('GPMYSO01', 'FORM_TYPE', $FORM_TYPE, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'TITLE1', $ReportTitle1, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'TITLE2', $ReportTitle2, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'FORM_ID', $FORM_ID, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'TITLE4', $ReportTitle3, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'TITLE6', $ReportTitle4, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'AMOUNT1', $AMOUNT1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'CASH_PAYMENT', $CASH_PAYMENT, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'NO_OF_ EMPLOYEES', $NO_OF_EMPLOYEES1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'CHEQUE _NO_AMOUNT', $CHEQUE_NO_AMOUNT, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'RINGATTS', $CURRENCY, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'NUMBER1', $IC_NBR, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'FOR _OFFICE _USE', $FOR_OFFICE_USE, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'EMPLOYER', $EMPLOYER_Contrib, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'DATE_OF_PAYMENTS', $DATE_OF_PAYMENTS, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'NAME', $NAME_COMPANY, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'ADDRESS_EMPLOYER', $ADDRESS_EMPLOYER, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'AMOUNT1', $AMOUNT, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'SIGNATURE1', $SIGNATURE1, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'RINGKAS', $RINGKAS, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'L-PNMB., K.L.', $ReportTitle5, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'BANK', $BANK, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'NUMBER2', $NUMBER2, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'NUMBER3', $NUMBER3, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'EMPLOYEE_ID', $EMPLOYEE_ID, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'EMPLOYEE_ MMBRSHIP', $EMPLOYEE_MMBRSHIP, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'EMPLOYEE_NAME', $EMPLOYEE_NAME, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'CONTRIBUTION', $CONTRIBUTION, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'SEN', $SEN, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'PAGE_TOTAL', $PAGE_TOTAL, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'TOTAL_FORWARD', $TOTAL_FORWARD, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'GRAND_TOTAL', $GRAND_TOTAL, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'SIGNATURE1', $SIGNATURE1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'NAME_EMPLOYER', $NAME_EMPLOYER, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'PHONE', $PHONE, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'CAP MAJIKAN:', $ReportText4, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'CATATAN', $ReportText5, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'EMPLOYER_NBR', $Remarks, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS1', $REMARKS1, #DW)
do Get_Field_Information ('GPMYSO01', 'REMARKS2', $REMARKS2, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS3', $REMARKS3, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS4', $REMARKS4, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS5', $REMARKS5, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO01', 'REMARKS6', $REMARKS6, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS7', $REMARKS7, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS8', $REMARKS8, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS9', $REMARKS9, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS10', $REMARKS10, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS11', $REMARKS11, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS12', $REMARKS12, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'TITLE5', $PAGE_NO, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'TITLE3', $TITLE3, #DW)! from settrans.sqc returning the actual text based upon the language selected

do Get_Field_Information ('GPMYSO01', 'ID_NUM_1', $Ic_NUM_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'EMPLOYEE_ SOCSO_1', $EMPLOYEE_SOCSO_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'SOCIAL_USAGE', $SOCIAL_USAGE, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'SOCIAL_USAGE_1', $SOCIAL_USAGE_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS14',$REMARKS14 , #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS2_1', $REMARKS2_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS15', $REMARKS15, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS13', $REMARKS13, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO01', 'REMARKS13_1', $REMARKS13_1, #DW)
do Get_Field_Information ('GPMYSO01', 'REMARKS13_1', $REMARKS3_1, #DW)
!Let $FORM_TYPE           = ''
Let $ndam = 'Nama dan Alamat Majikan'
Let $acda = 'Amaun caruman di atas hendaklah dibayar kepada PERKESO/EJEN PEMUNGUT yang dilantik'
Let $nkm = 'No. Kod Majikan'
Let $coid = 'No. MyCoID/No. Pendaftaran Perniagaan'
Let $acrm = 'Amaun Caruman (RM)'
Let $lb = 'Lembaran'
Let $bp = 'Bil. Pekeria'
Let $kep = 'Kegunaan Ejen Pemungut'
Let $cop = 'Cop'
Let $nsb = 'No. Slip Bayaran'
Let $tmk1 = 'TARIKH '
Let $tmk2 = 'MULA/BERHENTI'
Let $tmk3 = 'KERJA'
Let $tmk4 = '(hhbbtttt)'
Let $status = 'STATUS'
Let $nkp = 'NO. KAD PENGENALAN'
Let $npm = 'NAMA PEKERJA (MENGIKUT KAD PENGENALAN)'
Let $crm = 'CARUMAN'
 Let $ReportTitle1        = 'PERTUBUHAN KESELAMATAN SOSIAL'
 Let $ReportTitle2        = 'PERATURAN - PERATURAN (AM) KESELAMATAN SOSIAL PEKERJA 1971 (PER. 44D)'
 Let $FORM_ID             = 'BORANG 8B'
 Let $Form_Id_Nbr         = '7459249910'
 Let $ReportTitle3        = 'CARUMAN GAJI TERKURANG BAYAR BULAN '
!Let $ReportTitle4        = ''
Let $AMOUNT1             = 'Amaun'
Let $CASH_PAYMENT        = 'Bayaran Tunai.'
Let $NO_OF_EMPLOYEES1    = 'Bilangan Pekerja'
Let $CHEQUE_NO_AMOUNT    = 'Bayaran cek. No. cek'
!Let $CURRENCY            = ''
Let $IC_NBR              = 'No. Kod'
!Let $FOR_OFFICE_USE      = ''
Let $EMPLOYER_Contrib    = 'Majikan'
!Let $DATE_OF_PAYMENTS    = ''
Let $NAME_COMPANY        = 'Nama dan'
Let $ADDRESS_EMPLOYER    = 'Alamat Majikan'
!Let $AMOUNT              = ''
Let $SIGNATURE1          = 'Tandatangan :'
!Let $RINGKAS             = ''
!Let $ReportTitle5        = ''
!Let $BANK                = ''
Let $NUMBER2             = 'NO. KAD PENGENALAN'
Let $NUMBER3             = 'TKH. MULA/TKH.'
Let $EMPLOYEE_ID         = 'PENDAFTARAN NEGARA'
Let $EMPLOYEE_MMBRSHIP   = 'BERHENTI KERJA'
Let $EMPLOYEE_NAME       = 'NAMA PEKERJA (MENGIKUT KAD PENGENALAN)'
Let $CONTRIBUTION        = 'CARUMAN (6)'
!Let $SEN                 = ''
Let $PAGE_TOTAL          = 'Jumlah muka surat ini'
!Let $TOTAL_FORWARD       = ''
Let $GRAND_TOTAL         = '* JUMLAH BESAR'
!Let $SIGNATURE1          = ''
Let $NAME_EMPLOYER       = 'Nama Penuh :'
!Let $PHONE               = ''
!Let $ReportText4         = ''
!Let $ReportText5         = ''
!Let $Remarks             = ''
!Let $REMARKS1            = ''
!Let $REMARKS2            = ''
!Let $REMARKS3            = ''
!Let $REMARKS4            = ''
!Let $REMARKS5            = ''
!Let $REMARKS6            = ''
!Let $REMARKS7            = ''
!Let $REMARKS8            = ''
!Let $REMARKS9            = ''
!Let $REMARKS10           = ''
!Let $REMARKS11           = ''
!Let $REMARKS12           = ''
!Let $PAGE_NO             = ''
!Let $TITLE3              = ''
!Let $Ic_NUM_1            = ''
!Let $EMPLOYEE_SOCSO_1    = ''
!Let $SOCIAL_USAGE        = ''
!Let $SOCIAL_USAGE_1      = ''
!Let $REMARKS14           = ''
!Let $REMARKS2_1          = ''
!Let $REMARKS15           = ''
!Let $REMARKS13           = ''
 Let $bulan = 'bulan'
 Let $tahun = 'tahun'

  let #pos  = instr($sqr-program,'gpmyso01',0)
  let #pos  = #pos - 1
  let $path = substr($sqr-program,1,#pos)
  let $FileDir1 = $path || 'gpmyso01_logo.jpg'
  let #fstatus = exists($FileDir1)  
  move 'GPMYS001' to $ReportID
  move 'SOCSO FORM 8B: Monthly Schedule of Contributions  ' to $ReportTitle
  do Select-Parameters
  
  move $Contr_Month  to #N_Mth
  do Format-Number(#N_Mth,$Contr_Month1,'09')

  move $Contr_Year  to #N_Yr
  let #This_Yr = #N_Yr
  add 2             to #N_Mth

  if #N_Mth > 12
      let #N_Mth = #N_Mth - 12
      add 1 to #N_Yr
  end-if
  
  do Format-Number(#N_Yr,$Next_Year,'9999')
  do Format-Number(#N_Mth,$Next_Mth,'09')
  do dtu-format-date(#N_Yr, #N_Mth, 1, $DTU_Date)!yyyy-dd-mm format
  do dtu-subtract-days($DTU_Date, 1, $Next_Month_End)
  do Build-Where
  do Get-prcsoutputdir
  do Print-Due-Date($Next_Month_End,$PrnDueDate)
  do Get-SOCSO-NBR
end-procedure


!Procedure :Select-Parameters     *
!****************************
begin-procedure Select-Parameters

begin-select

RC.GPMY_ORG_LINK_OPTN,
RC.ORG_LINK_UNIT,
RC.BUSINESS_UNIT,
RC.GPMY_REF_NBR,
RC.MONTHCD,
RC.GPMY_CONTRIB_YEAR,
RC.FILENAME,
RC.GPMY_FROM_DT,
RC.GPMY_TO_DT

FROM  PS_GPMY_RPT_RC  RC
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select


  let $ORG_LINK_OPTN     =  &RC.GPMY_ORG_LINK_OPTN
  let $ORG_LINK_UNIT     =  &RC.ORG_LINK_UNIT
  let $BUSINESS_UNIT     =  &RC.BUSINESS_UNIT
  let $SOC_NBR           =  &RC.GPMY_REF_NBR
  let $Contr_Month       =  &RC.MONTHCD
  move &RC.GPMY_CONTRIB_YEAR to $Contr_Year 9999
  let $FileName1          = &RC.FILENAME
  let $tmp_dt            =  $Contr_Year || '-' || $Contr_Month || '-01'
  let #year = edit($Contr_Year,'9999')
  let #month = edit($Contr_Month,'99')

  #IFDEF ORACLE
    do dtu-format-date(#year, #month, 1, $DTU_Date)
    do dtu-month-end($DTU_Date, $DTU_Endmonth_Date)
    do convert-from-dtu-date($DTU_Date, $FROM_DT)
    do convert-from-dtu-date($DTU_Endmonth_Date, $TO_DT)  
  #ELSE
   do dtu-add-days($tmp_dt, 0, $FROM_DT)
   do dtu-add-months($tmp_dt, 1, $TO_DT)
   do dtu-subtract-days($TO_DT, 1, $TO_DT)
  #END-IF

!  let $FROM_DT            = &RC.GPMY_FROM_DT
!  let $TO_DT              = &RC.GPMY_TO_DT



end-procedure


!*********************************
!Procedure : Build-Where
!*********************************
begin-procedure Build-Where
   Let $WHERE = ''

if ($ORG_LINK_OPTN='CO')OR ($ORG_LINK_OPTN='PG')OR ($ORG_LINK_OPTN='ET')
     if isnull(RTRIM($ORG_LINK_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($SOC_NBR,' '))
               LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
           ELSE
              LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_SOCSO_NBR='|| '''' || RTRIM($SOC_NBR,' ') || ''''
           end-if
     end-if

 end-if

if ($ORG_LINK_OPTN='LO')OR ($ORG_LINK_OPTN='DE')
     if isnull(RTRIM($BUSINESS_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($ORG_LINK_UNIT,' '))
               LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''
           ELSE
                if isnull(RTRIM($SOC_NBR,' '))
                      LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
                ELSE
                     LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| ''''
                     LET $WHERE = $WHERE || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_SOCSO_NBR='|| '''' || RTRIM($SOC_NBR,' ') || ''''
                END-IF
           end-if
     end-if

 end-if
end-procedure


!************************************
!Procedure : Get-SOCSO-NBR   *
!************************************
begin-procedure Get-SOCSO-NBR


Let #Page-Count = 1
let $FirstSocso = ''
!Let #GrandTotal = 0
! let $FileOpen = 'N'


begin-SELECT
DISTINCT(B.GPMY_SOCSO_NBR )  &CompSocSo1
PF1.GPMY_STAT_REG

          let #x= #x +1
   if isnull(rtrim($oldreg,' '))
   else
    if rtrim(&PF1.GPMY_STAT_REG,' ') <> rtrim($oldreg,' ')
          if $FileOpen = 'Y'

             close #count
             let $FileOpen = 'N'
          end-if
  end-if
  end-if
        do Get-Cal-Grp-Id-total
        do Get-Cal-Grp-Id




FROM PS_GPMY_SOC_ORG B,PS_GPMY_SOC_ORG_DT C,PS_GPMY_SOC_TBL PF1
WHERE B.EFFDT=C.EFFDT
AND PF1.GPMY_SOCSO_NBR=B.GPMY_SOCSO_NBR
AND PF1.EFFDT=(SELECT MAX(L2.EFFDT)FROM PS_GPMY_SOC_TBL L2 WHERE PF1.GPMY_SOCSO_NBR =L2.GPMY_SOCSO_NBR)
AND C.GPMY_ORG_LINK_OPTN= $ORG_LINK_OPTN
[$WHERE]
ORDER BY PF1.GPMY_STAT_REG

end-SELECT
    !Last page of report
    do fill-page
end-procedure

!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.NAME_TYPE = 'LEG'
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT)
                 FROM PS_NAMES NAMES1
                 WHERE NAMES1.EMPLID = NAMES.EMPLID
                 AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                 AND NAMES1.EFFDT <= $TO_DT)
end-SELECT

end-procedure

!*********************************************************************************
!  Procedure: Get-ManagerLegal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-ManagerLegal-Name

begin-SELECT
NAMESMn.NAME

    let $MnLegalName = &NAMESMn.NAME

FROM PS_NAMES NAMESMn
WHERE NAMESMn.EMPLID = $ResponcibleId
AND NAMESMn.EFFDT=(SELECT MAX(NAMES11.EFFDT) FROM PS_NAMES NAMES11
                                          WHERE NAMES11.EMPLID=NAMESMn.EMPLID
                                            AND NAMES11.NAME_TYPE = NAMESMn.NAME_TYPE
                                            AND NAMES11.EFFDT <= $TO_DT)
AND NAMESMn.NAME_TYPE = 'LEG'
end-SELECT

end-procedure

!*********************************
!Procedure : Get-Selection-Details
!*********************************

begin-procedure Get-Selection-Details



  Let $NewPage = 'Y'
  Let #TotRecs = 0
  Let #PageTotal = 0
  LET #GrandTotal=0
  Let $National_Id_Type = ''
  
  #IFDEF ORACLE
  Let $strtone = strtodate($FROM_DT,'DD-MON-YYYY')
  Let $endone= strtodate($TO_DT,'DD-MON-YYYY')
  #ELSE
  Let $strtone = strtodate($FROM_DT,'YYYY-MM-DD')
  Let $endone= strtodate($TO_DT,'YYYY-MM-DD')
  #END-IF 
  
  Let $strtone = dateadd ($strtone ,'DAY',1)
  Let $endone = dateadd ($endone,'DAY',1)
  
  

begin-SELECT
DISTINCT(J.EMPLID )    &Emplid
J.ACTION              &Action
J.ACTION_REASON       &Action_Reason
J.EFFDT                &Empl_DT
J.LAST_DATE_WORKED      &lastdaywrkd
J.COMPANY             &Compp
EP.GPMY_SOCSO_NBR      &CompSocso
EP.GPMY_MMBRSHIP_NBR   &EmplSocso
EP.GPMY_IC_INDICATOR    &IdType
L.GPMY_REGISTERED_NM   &CompName
L.ADDRESS1
L.ADDRESS2
L.ADDRESS3
L.NAME                 &Person_InChg
L.GPMY_RESPONSIBLEID
L.GPMY_STAT_REG        &L.GPMY_STAT_REG
L.PHONE                &PIC_Phone
P1.NAME                 &EmplName
L.COUNTRY
L.ADDRESS4
L.CITY
L.STATE
L.POSTAL
CON.DESCR               &CountryNm
STT.DESCR               &StateName


         let $COUNTRY  = &L.COUNTRY
         let $ADDRESS1 = &L.ADDRESS1
         let $ADDRESS2 = &L.ADDRESS2
         let $ADDRESS3 = &L.ADDRESS3
         let $ADDRESS4 = &L.ADDRESS4
         let $CITY = &L.CITY
         let $STATE =&L.STATE
         let $POSTAL = &L.POSTAL

          do adformat
          do Compress-Address
          let $CompAdr1 = $ADDLINE2
          let $CompAdr2 = $ADDLINE3
          let $CompAdr3 = $ADDLINE31

         Move &Emplid    to $Emplid
         Move &Empl_DT to $Empl_DT
         Move &lastdaywrkd to $lastdaywrkd

         let $EELegalName = ''
         let $ResponcibleId = rtrim(&L.GPMY_RESPONSIBLEID, ' ')
         do Get-Legal-Name
         LET $EELegalName = LTRIM(RTRIM($EELegalName, ' '), ' ')
         IF $EELegalName = ''
            let $Name = &EmplName
         ELSE
            let $Name = $EELegalName
         END-IF
         Let $EmplName = Upper($Name)
         Let $EmplName = replace($EmplName,',',' ')


          let $EmplName1 = ''
          let $EmplName2 = ''

        IF LENGTH($EmplName) > 30
            let $EmplName1 = RTRIM(LTRIM(SUBSTR($EmplName,1,30),' '), ' ')
            let $EmplName2 = RTRIM(LTRIM(SUBSTR($EmplName,31,30), ' '), ' ')
        END-IF



         let $MnLegalName = '' !
             do Get-ManagerLegal-Name      !

         IF $MnLegalName = '' or $MnLegalName = ' '
            move &Person_InChg to $Person_InChg
         ELSE
            move $MnLegalName to $Person_InChg
         END-IF

         Let $Person_InChg = Upper($Person_InChg)
         Let $Person_InChg = replace($Person_InChg,',',' ')

         if &CompSocso <> $FirstSocso
            Let $NewPage = 'Y'
            Let $FirstPage = 'Y'
         end-if

         do Add-Empl-Deduction
         !let #finalcount = #emplcount
         
         if &EmplDeduct <> 0
            if &CompSocso <> $FirstSocso
               if isnull(rtrim($FirstSocso,' '))
               else
                  if &CompSocSo <> $FirstSocso
         Let #GrandTotal = 0
                     
                     do fill-page
                     new-page 
      end-if
               end-if

               Let $FirstSocso = &CompSocso
               end-if

               if &CALID <> $OldCalId
             if isnull(rtrim($OldCalId,' '))
              else
              if &CALID <> $OldCalId
                           
                           do fill-page
                         new-page
                         let #PGNUM=0
                      end-if
                  end-if
          Let $OldCalId = &CALID

               end-if

               if &IdType ='N'
                  Let  $National_Id_Type = 'NEWIC'
                  Do get-nid-no
               end-if

               if &IdType ='O'
                  Let   $National_Id_Type = 'OLDIC'
                  Do get-nid-no
               end-if

               if &IdType ='A'
                  do GetICPassportInfo
               end-if
               do Check-if-Terminated
               
               move &Action to $Action
        move &Action_Reason to $Action_Reason
        Let $Empl_DT = &Empl_DT

           #IFDEF ORACLE
             Let $From_Dt1 = $FROM_DT
             Let $To_dt1 = $TO_DT
           #ELSE
             Let $From_Dt1 = translate($FROM_DT,'-','')
             Let $To_dt1 = translate($TO_DT,'-','')
           #END-IF
         
           Let #date1 = datediff(strtodate($Empl_DT),strtodate($From_Dt1),'DAY')
           Let #date2 = datediff(strtodate($To_dt1),strtodate($Empl_DT),'DAY')
         
         
         if $Action = 'HIR' or $Action = 'REH' or $Action = 'PRC'
          if #date1 >= 0 and #date2 >= 0
           Let $tempprint =  'B'
          end-if
        end-if
        if $Action = 'TER' or $Action = 'RWP' or $Action = 'TWB' or $Action = 'TWP' or $Action = 'RET'
          if #date1 >= 0 and #date2 >= 0
           if $Action_Reason = 'DEA'
            Let $tempprint =  'M'   
           else
            Let $tempprint =  'H'  
           end-if
          end-if
        end-if
        if $Action = 'LOA'
          if #date1 >= 0 and #date2 >= 0
           Let $tempprint =  'T' 
          end-if
        end-if
        if $Action = 'PLA'
          if #date1 >= 0 and #date2 >= 0
           Let $tempprint =  'S' 
          end-if
        end-if
               
               do Print-Total-Report
             !  Let $ICPassport = ' '

               move &CompSocso to $CompSocso
               move &EmplSocso to $EmplSocso

               if  rtrim(&L.GPMY_STAT_REG,' ') <> rtrim($old_region,' ')

                   Let $FileName1=$prcsoutputdir ||''||rtrim(&L.GPMY_STAT_REG,' ')||$FileName1                 
                   let $FileOut = $FILENAME1
                   let $FILENAME1 = &RC.FILENAME
                   let $FileOpen = 'N'
                   let #count = #count+1
                   if $FileOpen = 'N'
                     
                      open $FileOut as #count for-writing record=223:fixed status= #filestat

                   end-if
               end-if

               Let $Detail = rtrim($CompSOCSO,' ')
               Let $OutName = $EmplName
               move &EmplDeduct to #EmplDeduct
               let #DedAmt_dec = (#EmplDeduct - trunc(#EmplDeduct, 0)) * 100
               
               If(#DedAmt_dec<0)
                  Let #DedAmt_dec = #DedAmt_dec * (-1)
               End-If

               let #DedAmt = trunc(#EmplDeduct, 0)
               move #DedAmt to $DedAmt 
               move #DedAmt_dec to $DedAmtdec 
               let $DedAmt = ltrim(rtrim($DedAmt,' '),' ')
               let $DedAmtdec = ltrim(rtrim($DedAmtdec,' '),' ')
               move $DedAmt to $DedAmt 999
               move $DedAmtdec to $DedAmtdec 99
               let $DedAmt = $DedAmt || $DedAmtdec
               Let $DedAmt = translate($DedAmt,' ','0')

               !Let #DedAmt = &EmplDeduct * 100
               !Let $DedAmt = edit(#DedAmt,'9999')
               !Let $DedAmt = translate($DedAmt,' ','0')
               Let $ICPassport = rtrim($ICPassport,' ')
               Let $EmplSocso = rtrim($EmplSocso,' ')
               Let $EmplSocso = translate($EmplSocso,'-','')
               Let $OutName = rtrim($OutName,' ')

               Let $Detail = substr( $Detail,1,12)
               Let $ICPassport = substr($ICPassport,1,12)
               Let $EmplSocso  = substr($EmplSocso,1,12)
               Let $OutName = substr($OutName,1,150)
               Let $SMonth = translate($SMonth,' ','0')
               do Get-Comp-Registration
              ! Let $Details = lpad($Detail,9,' ') || lpad($ICPassport,12,' ') || lpad($EmplSocso,9,' ') || $SMonth || substr($SYear,3,2) || rpad($OutName,45,' ') || $DedAmt
               
               Let $Details = rpad($Detail,12,' ') || rpad($RegNum,20,' ') || rpad($EmplSocso,12,' ') || rpad($OutName,150,' ') || $Contr_Month1 || substr($Contr_Year,1,4) 
               Let $Details = $Details || lpad($DedAmt, 14, '0') || $Empl_DT1 || $Empl_DT2 || $Empl_DT3 || $tempprint
               write #count from $Details:223

               Let $ICPassport = ' '
               Let #PageTotal  = #PageTotal  + &EmplDeduct
               Let #GrandTotal = #GrandTotal + &EmplDeduct
                let $old_region = &L.GPMY_STAT_REG
               Let $tempprint = ''
               Let $Empl_DT1 = ''
               Let $Empl_DT2 = ''
               Let $Empl_DT3 = ''
           end-if


                        !  move  &L.GPMY_STAT_REG  to $old_region

FROM PS_JOB J,PS_GPMY_SOC_TBL L , PS_GPMY_SOC_PYE  EP, PS_NAMES P1, PS_COUNTRY_TBL CON, PS_STATE_NAMES_TBL STT

WHERE  L.EFF_STATUS='A'
AND L.GPMY_SOCSO_NBR=&CompSocSo1
AND L.EFFDT=(SELECT MAX(L1.EFFDT)FROM PS_GPMY_SOC_TBL L1 WHERE L.GPMY_SOCSO_NBR =L1.GPMY_SOCSO_NBR  )
AND J.EMPL_RCD           = EP.EMPL_RCD
AND J.EMPL_RCD = (SELECT MAX(J2.EMPL_RCD) FROM PS_JOB J2 WHERE J2.EMPLID = J.EMPLID)
AND L.COUNTRY = CON.COUNTRY
AND L.COUNTRY = STT.COUNTRY
AND L.STATE   = STT.STATE
!AND J.EFFDT       = (SELECT MAX(J1.EFFDT)
!                           FROM PS_JOB J1
!                          WHERE J1.EMPLID    = J.EMPLID
!                            AND J1.EMPL_RCD = J.EMPL_RCD
!                            AND J1.EFFDT    <= $TO_DT)



 AND J.EFFSEQ =
               (SELECT MAX(J2.EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = J.EMPLID
                    AND J2.EMPL_RCD = J.EMPL_RCD
                    AND J2.EFFDT = J.EFFDT)
AND J.EMPLID=EP.EMPLID
AND (J.EFFDT =      (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1 
                    WHERE J1.ACTION = 'HIR'
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $FROM_DT AND $TO_DT
                    GROUP BY J1.EMPLID)
OR  J.EFFDT =      (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.ACTION='REH'
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $FROM_DT AND $TO_DT
                    AND NOT EXISTS (SELECT 1 FROM PS_JOB J2 WHERE J2.ACTION = 'HIR' AND J1.EMPLID=J2.EMPLID AND J1.EMPL_RCD=J2.EMPL_RCD AND J2.EFFDT BETWEEN $FROM_DT AND $TO_DT)
                    GROUP BY J1.EMPLID)
                   
OR  J.EFFDT =       (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.ACTION IN ('TER', 'RWP' , 'TWB' ,'TWP' ,'RET')
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $FROM_DT AND $TO_DT
                    AND NOT EXISTS (SELECT 1 FROM PS_JOB J2 WHERE J1.EMPLID=J2.EMPLID AND J2.ACTION IN ('HIR','REH') AND J1.EMPL_RCD=J2.EMPL_RCD AND J2.EFFDT BETWEEN $FROM_DT AND $TO_DT)
                    GROUP BY J1.EMPLID)
                  
OR  J.EFFDT =       (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.ACTION IN ('XFR','ADL','ADD','LOA','PRC', 'PLA')
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $FROM_DT AND $TO_DT
                    AND NOT EXISTS (SELECT 1 FROM PS_JOB J2 WHERE J1.EMPLID=J2.EMPLID AND J2.ACTION IN ( 'HIR','REH','TER', 'RWP' , 'TWB' ,'TWP' ,'RET') AND J1.EMPL_RCD=J2.EMPL_RCD AND J2.EFFDT BETWEEN $FROM_DT AND $TO_DT)
                    GROUP BY J1.EMPLID)
OR  J.EFFDT =      (SELECT MAX(J1.EFFDT) 
                    FROM PS_JOB J1 
                    WHERE J1.ACTION IN ('HIR','REH','XFR','ADL','ADD','LOA','RET','PRC','PLA')
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT < $FROM_DT
                    AND  NOT EXISTS (SELECT J2.EFFDT FROM PS_JOB J2 WHERE J2.ACTION IN ('HIR','REH','XFR','ADL','ADD','LOA','PRC','PLA','TER', 'RWP' , 'TWB' ,'TWP' ,'RET') 
                    AND J2.EMPLID=J1.EMPLID AND J2.EMPL_RCD=J1.EMPL_RCD AND J2.EFFDT BETWEEN $FROM_DT AND $TO_DT)
                    GROUP BY J1.EMPLID)
               
   )


AND EP.GPMY_SOCSO_NBR =     L.GPMY_SOCSO_NBR
AND EP.EFFDT      = (SELECT MAX(EPA.EFFDT) FROM PS_GPMY_SOC_PYE EPA
                            WHERE EPA.EMPLID   = EP.EMPLID
                            AND EPA.EMPL_RCD  = EP.EMPL_RCD
                            AND EPA.EFFDT     <=$TO_DT )


AND P1.EMPLID     = EP.EMPLID
AND P1.NAME_TYPE  = 'PRI'
AND P1.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES X WHERE X.EMPLID=P1.EMPLID
                                                  AND X.NAME_TYPE = P1.NAME_TYPE
                                                  AND X.EFFDT <= $TO_DT )
ORDER BY EP.GPMY_SOCSO_NBR, P1.NAME, J.EMPLID
end-SELECT
    if #PageTotal <> 0
        let #PageTotal_dec = (#PageTotal - trunc(#PageTotal, 0)) * 100
        If(#PageTotal_dec<0)
        Let #PageTotal_dec = #PageTotal_dec * (-1)
        End-If
        let #PageTotal = trunc(#PageTotal, 0)                                !**********Page total***********
        move #PageTotal to $PageTotal 999999
        
        do Print-Values-Box1 ($PageTotal, 113, 94,6)
        print '.' (94, 132)
        move #PageTotal_dec to $PageTotal_dec 99
        If (#PageTotal_dec = 0)
        Let $PageTotal_dec = '00'
        End-If
        do Print-Values-Box ($PageTotal_dec, 133, 94)
!         print #PageTotal    (72,105)   BOLD edit '999999.99'
        ! print #Page-Count   (12,103)     BOLD edit '99999'

     end-if
        
     if #GrandTotal  <> 0
        let #GrandTotal_dec = (#GrandTotal - trunc(#GrandTotal, 0)) * 100
        If(#GrandTotal_dec<0)
        Let #GrandTotal_dec= #GrandTotal_dec * (-1)
        End-If
  
        let #GrandTotal = trunc(#GrandTotal, 0)
        move #GrandTotal to $GrandTotal 999999                                !***********Grand Total**********
       ! do Print-Values-Box1 ($GrandTotal, 112, 10,6)
        print '.' (10, 131)
        move #GrandTotal_dec to $GrandTotal_dec 99
        If (#GrandTotal_dec = 0)
        Let $GrandTotal_dec = '00'
        End-If
       ! do Print-Values-Box ($GrandTotal_dec, 132, 10)
!           print #GrandTotal (10,105) BOLD edit '999999.99'
    end-if


end-procedure

!*********************************
!Procedure : Get-Comp-Registration
!*********************************
begin-procedure Get-Comp-Registration
begin-SELECT
A.COMPANY_REGNBR_MYS  &RegNum

     Let $RegNum = &RegNum

FROM PS_COMPANY_TBL_MYS A
WHERE A.COMPANY = &Compp
AND A.EFFDT = (SELECT MAX(EFFDT) 
                   FROM PS_COMPANY_TBL_MYS B
                   WHERE B.COMPANY = A.COMPANY
                   AND B.EFFDT <= $AsOfToday) 
end-SELECT

end-procedure


!*********************************
!Procedure : Get-Selection-Details-total 
!*********************************

begin-procedure Get-Selection-Details-total


begin-SELECT
DISTINCT(J1.EMPLID)    &Emplid1

        let $Emplid = &Emplid1

        do Add-Empl-Deduction


FROM PS_JOB J1,PS_GPMY_SOC_TBL L1 , PS_GPMY_SOC_PYE  EP1, PS_NAMES P11
WHERE  L1.EFF_STATUS='A'
AND L1.GPMY_SOCSO_NBR=&CompSocSo1
AND L1.EFFDT=(SELECT MAX(L2.EFFDT)FROM PS_GPMY_SOC_TBL L2 WHERE L1.GPMY_SOCSO_NBR =L2.GPMY_SOCSO_NBR  )
AND J1.EMPL_RCD           = EP1.EMPL_RCD
AND J1.EMPL_RCD = (SELECT MAX(J2.EMPL_RCD) FROM PS_JOB J2 WHERE J2.EMPLID = J1.EMPLID)
AND J1.EFFDT       = (SELECT MAX(J3.EFFDT)
                           FROM PS_JOB J3
                          WHERE J3.EMPLID    = J1.EMPLID
                            AND J3.EMPL_RCD = J1.EMPL_RCD
                            AND J3.EFFDT    <= $TO_DT)
 AND J1.EFFSEQ =   (SELECT MAX(J2.EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = J1.EMPLID
                    AND J2.EMPL_RCD = J1.EMPL_RCD
                    AND J2.EFFDT = J1.EFFDT)
AND J1.EMPLID=EP1.EMPLID
AND EP1.GPMY_SOCSO_NBR =     L1.GPMY_SOCSO_NBR
AND EP1.EFFDT      = (SELECT MAX(EPA.EFFDT) FROM PS_GPMY_SOC_PYE EPA
                            WHERE EPA.EMPLID   = EP1.EMPLID
                            AND EPA.EMPL_RCD  = EP1.EMPL_RCD
                            AND EPA.EFFDT     <=$TO_DT )
AND P11.EMPLID     = EP1.EMPLID
AND P11.NAME_TYPE  = 'PRI'
AND P11.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES X WHERE X.EMPLID=P11.EMPLID AND X.NAME_TYPE='PRI')
end-SELECT


let $printflag = 'Y'


end-procedure

!***********************************************************************
! Procedure: Get_CAL-GRP-ID                                         *
!***********************************************************************

begin-procedure Get-Cal-Grp-Id
Let $OldCalId=''
LET $OldCalRunId = ''

begin-SELECT DISTINCT
A.CAL_RUN_ID  &CALRUNID

        MOVE &CALRUNID TO $CALRUNID

        do Get-CAL-ID


FROM PS_GP_CAL_RUN_DTL  A, PS_GP_RSLT_DELTA B
WHERE A.CAL_RUN_ID = B.CAL_RUN_ID AND
PRD_END_DT BETWEEN $FROM_DT AND $TO_DT AND COUNTRY='MYS'

end-SELECT

end-procedure


!***********************************************************************
! Procedure: Get_CAL-GRP-ID-total                                         *
!***********************************************************************

begin-procedure Get-Cal-Grp-Id-total
Let $OldCalId=''



begin-SELECT
DISTINCT (A1.CAL_RUN_ID)  &CALRUNID1

        MOVE &CALRUNID1 TO $CALRUNID
        do Get-Cal-Id-total


FROM PS_GP_CAL_RUN_DTL  A1, PS_GP_RSLT_DELTA B1
WHERE A1.CAL_RUN_ID = B1.CAL_RUN_ID AND
PRD_END_DT BETWEEN $FROM_DT AND $TO_DT AND COUNTRY='MYS'

end-SELECT

end-procedure



!***********************************************************************
! Procedure: Get_CAL-ID                                         *
!***********************************************************************

begin-procedure Get-Cal-Id

    Let $Prd_End_date=''

  let #EmplDeduct = 0
  let #emplcount = 0

begin-SELECT
DISTINCT (B.CAL_ID)  &CALID
   MOVE &CALID TO $CALID
   IF $CALID <> $OldCalId
           Let $NewPage = 'Y'
   end-if
   do get-end-dates
   let #emplcount = 0
   do Get-Selection-Details-total
   let #finalcount = #emplcount
   do Get-Selection-Details
   
   
FROM  PS_GP_RSLT_DELTA B
where CAL_RUN_ID = $CALRUNID
order by CAL_ID

end-SELECT



!     if #GrandTotal  <> 0
!               print #GrandTotal (74,105) BOLD edit '999999.99'
!    end-if


end-procedure

!***********************************************************************
! Procedure: get-end-dates                                         *
!***********************************************************************
begin-procedure get-end-dates

begin-SELECT
DISTINCT (A.PRD_END_DT)  &Prd_End_date

        move &Prd_End_date to $Prd_End_date
   do convert-to-dtu-date($Prd_End_date,$Prd_End_date)
   do dtu-parse-date($Prd_End_date, #SYear, #SMonth, #day)
   do Format-Number(#SYear,$SYear,'9999')
   do Format-Number(#SMonth,$SMonth,'99')
!   let $Mth_head = 'UNTUK CARUMAN BULAN ' || $SMonth || ' ' || $SYear


FROM PS_GP_CAL_RUN_DTL  A
WHERE CAL_ID = $CALID

end-SELECT


end-procedure


!***********************************************************************
! Procedure: Get_CAL-ID-total                                         *
!***********************************************************************
begin-procedure Get-Cal-Id-total

  !let #EmplDeduct = 0


begin-SELECT
DISTINCT (B1.CAL_ID)  &CALID1

   MOVE &CALID1 TO $CALID



   do Get-Selection-Details-total
   let #EmplDeducttotal = #EmplDeduct
   
   
FROM PS_GP_RSLT_DELTA B1

where CAL_RUN_ID = $CALRUNID


end-SELECT


end-procedure



!***********************************************************************
! Procedure: Add-Empl-Deduction                                       *
!***********************************************************************
begin-procedure Add-Empl-Deduction

begin-SELECT
sum(A.CALC_DELTA_VAL)  &EmplDeduct

                let #EmplDeduct = &EmplDeduct + #EmplDeduct

                   if &EmplDeduct <> 0
                        let #emplcount = #emplcount + 1
                   end-if



FROM PS_GP_RSLT_DELTA A ,PS_GP_PIN B
WHERE A.EMPLID=$Emplid
 AND A.PIN_NUM=B.PIN_NUM
AND (B.PIN_NM='SOCSO EE'OR B.PIN_NM='SOCSO ER')
AND A.CAL_ID=$CALID
end-SELECT
   
end-procedure








!***********************************************************************
! Procedure: Get_NID-NUMBER                                         *
!***********************************************************************
begin-procedure get-nid-no

begin-SELECT
A.EMPLID
A.NATIONAL_ID  &ICPassport

     move &ICPassport to $ICPassport

 FROM PS_PERS_NID A
WHERE A.EMPLID= &Emplid
AND A.NATIONAL_ID_TYPE =$National_Id_Type

end-SELECT

end-procedure




!***********************************************************************
! Procedure: GetICPassportInfo                                         *
!***********************************************************************
begin-Procedure GetICPassportInfo
begin-SELECT
CP.PASSPORT_NBR     &Passport
CP.DEPENDENT_ID     &DependId
CP.DT_ISSUED        &CPIssueDt
CP.EXPIRATN_DT      &CPExpireDt
  do Format-DateTime (&CPExpireDt, $CPExpireDt, {DEFYMD}, '', '')
  if ($AsofToday <= $CPExpireDt OR rtrim($CPExpireDt,' ') = '')
     if &DependId = ''
       Move &Passport to $ICPassport
     end-if
  end-if
   FROM PS_CITIZEN_PSSPRT CP
 WHERE  CP.EMPLID = $Emplid
    AND $AsOfToday >= CP.DT_ISSUED
end-SELECT
end-Procedure

!*********************************
!Procedure : Check-if-Terminated
!*********************************
begin-procedure Check-if-Terminated
  Let $EmplTerm = 'N'
  LET $ANDCLAUSE =''
 if $ORG_LINK_OPTN ='CO'

  Let $ANDCLAUSE='AND JT.COMPANY='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='DE'

  Let $ANDCLAUSE='AND JT.DEPTID='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='LO'

  Let $ANDCLAUSE='AND JT.LOCATION='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='PG'

  Let $ANDCLAUSE='AND JT.PAYGROUP='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='ET'

  Let $ANDCLAUSE='AND JT.ESTABID='''||$ORG_LINK_UNIT||''''
end-if



begin-SELECT
JT.EMPLID           &eid
JT.EMPL_RCD


  Let $EmplTerm = 'Y'

  FROM PS_JOB JT

  WHERE JT.EMPLID             = $Emplid
    AND JT.EMPL_RCD          = #EmplRcd


    [$ANDCLAUSE]

    AND JT.ACTION IN ('TER','RWP','TWB','TWP','RET')
    AND JT.EFFDT = (SELECT MAX(JT1.EFFDT) FROM PS_JOB JT1
                        WHERE JT1.EMPLID=JT.EMPLID
                        AND   JT1.EFFDT <= $TO_DT)

    AND JT.EFFSEQ =(SELECT MAX(JT2.EFFSEQ) FROM PS_JOB JT2
                        WHERE JT2.EMPLID=JT.EMPLID AND JT2.EFFDT = JT.EFFDT)



end-SELECT

end-procedure



!*********************************
!Procedure : Print-Report
!*********************************
begin-procedure Print-Total-Report

Let $trCompSocSo=rtrim(ltrim(&CompSocSo,' '),' ')
    if #TotRecs >=21 or #CurLine >= 94
            
        Let #TotRecs = 0
        Let $NewPage = 'Y'

        let #PageTotal_dec = (#PageTotal - trunc(#PageTotal, 0)) * 100
        If(#PageTotal_dec<0)
           Let #PageTotal_dec = #PageTotal_dec * (-1)
        End-If
        let #PageTotal = trunc(#PageTotal, 0)
        move #PageTotal to $PageTotal 999999
        
        do Print-Values-Box1 ($PageTotal, 113, 94,6)
        print '.' (94,132)
        move #PageTotal_dec to $PageTotal_dec 99
        If (#PageTotal_dec = 0)
        Let $PageTotal_dec = '00'
        End-If
        do Print-Values-Box1 ($PageTotal_dec, 133, 94,2)

!        print #PageTotal (72,107) BOLD edit '99999.99'
        Let #PageTotal =0

        new-page
        !print #Page-Count  (12,103)     BOLD edit '99999'
    end-if
    if $NewPage = 'Y'
       !print #Page-Count  (12,103)     BOLD edit '99999'
       if $PrevCompSocSo<>''
           if $PrevCompSocSo=$trCompSocSo
         let #PGNUM=#PGNUM+1
        else
         let #PGNUM=1
        end-if
    else
         let #PGNUM=1
    end-if
    let $PrevCompSocSo=$trCompSocSo
       
      
       Let #CurLine = 1
       Let $NewPage = 'N'
       
       !print $FORM_TYPE (#CurLine,5)
    if #fstatus = 0
       print-image  (#CurLine ,6)
       Type       =JPEG-FILE
       Image-Size = (14,6)
       source     = $FileDir1
       else
     show 'Logo not present in SQR folder'
    end-if

       graphic () font 5 14
       
       print $ReportTitle1 (#CurLine,33) BOLD
       graphic () font 5 10
       print $Form_Id_Nbr (,118)                        !**7459249910
       graphic () font 5 10
       Add 2 to #CurLine
       print $ReportTitle2 (#CurLine,23)
       Add 2 to #CurLine
       
       graphic () font 5 10
       print $ReportTitle3 (#CurLine,23) 
        graphic () font 5 14
        print $FORM_ID (,120) BOLD                       !**BORANG 8B
       graphic () font 4 8
       !print $TITLE3 (#CurLine,23)
       
       
       !let $Contr_Month1 = rtrim(ltrim($Contr_Month, ' '), ' ')
     
       Let #SMonth = trunc(#SMonth,0)
      
       Let $Contr_Month1 = to_char(#SMonth)
       
       Let #strlen = length($Contr_Month1)
       
       if #strlen = 1
       Let $Contr_Month1  = '0'|| $Contr_Month1 
       end-if
       
       do Print-Values-Box ($Contr_Month1, 77, #CurLine)
       
       let $Year_D = rtrim(ltrim($Contr_Year, ' '), ' ')
       let $Year_D_1 = substr($Year_D, 1, 1)
       let $Year_D_2 = substr($Year_D, 2, 1)
       let $Year_D_3 = substr($Year_D, 3, 1)
       let $Year_D_4 = substr($Year_D, 4, 1)
       ! print $Year_D_1       (#CurLine,84)
       do Print-Values-Box ($Year_D_1, 86, #CurLine)
       do Print-Values-Box ($Year_D_2, 89, #CurLine)
       do Print-Values-Box ($Year_D_3, 92, #CurLine)
       do Print-Values-Box ($Year_D_4, 95, #CurLine)

       !Add 2 to #CurLine
       
        Add 1 to #CurLine
        Print $bulan (#CurLine , 78)
        Print $tahun  (#CurLine ,90)
      ! print $ReportTitle4 (#CurLine,23)
       ! print $Text1          (#Curline,101)
         Let #vertline = #CurLine + 1
       !let #Curline=#Curline+1
       graphic (#vertline,42,4) vert-line  10
       graphic (#vertline,109,4) vert-line 10
       
       !graphic (#CurLine,101,3) vert-line
       ! graphic (13,73,16) vert-line


       Add 2 to #CurLine

       graphic (#CurLine,1,140) box 19 10  !******************************1st Outer Big box
       Add 1 to #CurLine
       !graphic (#CurLine,21,2) box 1
      ! print $AMOUNT1 (#CurLine,72)     !********************************Deleting Bayaran Tunai and Bayaran cek.No.cek  now.
      ! print $PAGE_NO    (#CurLine,103)
      ! print $CASH_PAYMENT (#CurLine,24)
      ! print $NO_OF_EMPLOYEES1 (#CurLine,84)
       Add 2 to #CurLine
      ! let $FirstPage = 'N'
       !graphic (#CurLine,21,2) box 1
       !print $CHEQUE_NO_AMOUNT (#CurLine,24)
       !graphic (#CurLine,1,17) horz-line
       !print $Currency (#CurLine,66)
       graphic () font 4 9
        graphic (16,86,55) horz-line 10
        Print $kep (17,92)
        graphic (17,86,55) horz-line 10
        Print $cop (18,88)
        Print $nsb (24,88)
        Let #counter = 1
        Let #col = 88
        While (#counter < 13)
        graphic (25,#col,3) box 1 10
        Let #col = #col + 3
        Let #counter = #counter + 1
        End-while
       !print #EmplDeducttotal (#CurLine,67) BOLD edit '99999999.99'
    
    !***********************Printing Employee deduction total for calendar period************
    Let #Empltot = #EmplDeducttotal
    let #Empltot_dec = (#Empltot- trunc(#Empltot, 0)) * 100
        If(#Empltot_dec<0)
        Let #Empltot_dec= #Empltot_dec * (-1)
        End-If
  
        let #Empltot = trunc(#Empltot, 0)
        move #Empltot to $Empltot 999999                                !***********Empl Deduct total**********
        do Print-Values-Box1 ($Empltot, 112, 10,6)
        print '.' (10, 131)
        move #Empltot_dec to $Empltot_dec 99
        If (#Empltot_dec = 0)
        Let $Empltot_dec = '00'
        End-If
        do Print-Values-Box ($Empltot_dec, 132, 10)
    !**************************************************************************************
    
       !print #finalcount (#CurLine,91) BOLD
       add 2 to #Curline
       let #Save_Line = #CurLine
       
       graphic (#CurLine,1,140) horz-line 10
       
       Print $ndam (#CurLine,3)
       
       !***************************************Address Printing ***************
       
       Let #Adrln = #Curline + 2
       !Print &Compname (#Adrln,3) BOLD
       !Add 1 to #Adrln
       !Print $CompAdr1 (#Adrln,3)
       !Add 1 to #Adrln
       !Print $CompAdr2 (#Adrln,3)
       !Add 1 to #Adrln
       !Print $CompAdr3 (#Adrln,3)
  

    
       
       print &CompName  (#Adrln, 3) BOLD
       Add 1 to #Adrln
       if $ADDRESS1 <> ' '
         print $ADDRESS1   (#Adrln, 3)
         Add 1 to #Adrln
       end-if
       if $ADDRESS2 <> ' '
         print $ADDRESS2   (#Adrln, 3)
         Add 1 to #Adrln
       end-if
       if $ADDRESS3 <> ' '
         print $ADDRESS3   (#Adrln, 3)
         Add 1 to #Adrln
       end-if
       if $ADDRESS4 <> ' '
         print $ADDRESS4   (#Adrln, 3)
         Add 1 to #Adrln
       end-if
       if $CITY <> ' '
         print $CITY   (#Adrln, 3)
         Add 1 to #Adrln
       end-if 
    Let $STATE = &StateName
    Let $COUNTRY = &CountryNm
       if $STATE <> ' '
         if $POSTAL <> ''
            Let $temp11 = $STATE || '-' || $POSTAL
            print $temp11   (#Adrln, 3)
            Add 1 to #Adrln
         else
            print $STATE   (#Adrln, 3)
            Add 1 to #Adrln
         end-if
       end-if
       if $COUNTRY <> ' '
          print $COUNTRY   (#Adrln, 3)
       end-if       

       !***************************************END*****************************
       Print $lb (#CurLine,93)
       Let #CurLine2 = #CurLine + 2
       let $PGNUM = edit(#PGNUM,'999')
       do Print-Values-Box1($PGNUM, 88, #CurLine2, 3)
       Print '/' (#CurLine2,98)
       Let #Noofpages = ceil(#finalcount / 11)
       move #Noofpages to $Noofpages 999
       
       do Print-Values-Box1($Noofpages, 99, #CurLine2, 3)
       let $Totalcount = edit(#finalcount,'9999')
       do Print-Values-Box1($Totalcount, 120, #CurLine2, 4)
       
       Print $bp (#CurLine,121)

        
       Let #CurLine = #CurLine - 1
       graphic (#CurLine,1,140) horz-line 10
       Let $acda1 = ''
       Let $acda1 = $acda || ' ' || $PrnDueDate
       Print $acda1 (#CurLine ,3)       
    
       graphic (#CurLine,86,14) vert-line 10  !******************************Box with Lembaran
       graphic (#CurLine,116,4) vert-line 10
       Let #CurLine = #CurLine - 1
        graphic (#CurLine,1,140) horz-line 10
        Let #CurLine =#CurLine - 3
        graphic (#CurLine,1,140) horz-line 10
        Print $nkm (#CurLine ,3)
        Print $coid ( #CurLine,55)
        Print $acrm ( #CurLine,113)
        
        
        !**************Lets print the boxes here for the upper box******
        
        Let #CurLine = #CurLine + 2
         do Get-Comp-Registration
       Let $coid_number = $RegNum
       Let $coid_number = lpad($coid_number,20,' ')                          !********************Upper-Middle boxes for Company SOCSO
       do Print-Values-Box1($coid_number, 46, #CurLine, 20)
       
       
       
       Let $CompSocso= &CompSocso
       Let $CompSocso = lpad($CompSocso,12,' ')
       do Print-Values-Box1($CompSocso, 3, #CurLine, 12)                  !********************* Upper-Left boxes for Employer SOCSO
       
       
      
       
       
       
       
       !**************END***********************************************
        
       let #CurLine = #Save_Line
       
       add 1 to #CurLine
      
       graphic () font 4 8
       !print $BANK (#CurLine,115)
       add 1 to #CurLine
       graphic () font 4 8
      ! print $IC_NBR (#CurLine, 9)
      ! print &CompSocso (10,3) BOLD
       let $print_val = &CompSocso
       ! do Print-Values-Box ($print_val, 21, #Curline)
       graphic () font 4 8
       Add 1 to #CurLine
       !print $EMPLOYER_Contrib (16, 4)
       Add 2 to #CurLine
      ! print $NAME_COMPANY (#CurLine, 9)
     
       graphic () font 4 8
       !print &CompName  (#CurLine,20) BOLD
       
       Add 1 to #CurLine
       graphic () font 4 8
      ! print $ADDRESS_EMPLOYER   (#CurLine, 6)
      
       Add 1 to #CurLine
       !Print $EMPLOYER_Contrib  (#CurLine, 9)
       graphic () font 4 9
      ! Print $CompAdr1  (#CurLine,20)
     
       Add 1 to #CurLine
     !  Print $CompAdr2  (#CurLine,20)
       
       Add 1 to #CurLine
      ! Print $CompAdr3  (#CurLine,20)
      
        ADD 3 TO #CurLine
       graphic () font 4 6
       !print $ReportText5 (15,74) bold
       !print $REMARKS14         (16,74)
       !print $REMARKS5          (17,75)
      ! print $REMARKS2          (18,74)
      ! print $REMARKS2_1        (19,75)
      ! print $REMARKS3          (20,74)
       !print $REMARKS3_1        (21,75)
      ! print $REMARKS4          (22,75)

!       print $REMARKS6         (23,74)
      ! print $REMARKS7          (23,74)
      ! print $REMARKS8          (24,75)
       !print $REMARKS10         (26,74)
      ! print $REMARKS11         (25,74)
      ! print $REMARKS12         (26,75)
      ! print $REMARKS13         (27,74)
       !print $REMARKS13_1         (28,75)
      ! print $REMARKS15         (29,74)


       Add 3 to #CurLine
       graphic (#CurLine,1,140) box   68 11    !*****************Second Outer Box
       Let #vertcol = #CurLine - 1

       graphic (#vertcol,22, 65)  vert-line 10
       graphic (#vertcol,28, 65)  vert-line 10
       graphic (#vertcol,54, 65)  vert-line 10   !****Four long vertical lines
       !graphic (29,55, 41)  vert-line 
       graphic (#vertcol,121,65) vert-line 10
       graphic () font 4 8
       
       !******************Printing body headings of lower big box*************
       
       
       
       
       graphic (#CurLine,1,140) box 5 10

       !print $NUMBER2 (#Curline,2)
       
       !print $NUMBER3 (#Curline,30)
       
       !print $SOCIAL_USAGE (#Curline,46)

       ! print $CONTRIBUTION (16,3)
       
       Add 1 to #CurLine
      ! print $EMPLOYEE_ID   (#Curline,2)
       !print $EMPLOYEE_MMBRSHIP     (#Curline,29)
       !print $EMPLOYEE_NAME      (#Curline,57)
       !print $SOCIAL_USAGE_1     (#Curline,47)
       !graphic (#Curline,105,20)    horz-line
       graphic (31,121,20)    horz-line 10
       
       
       
       !*********Printing 1st heading from left***********
   
       Let #headrow = #CurLine - 1
       Print $tmk1 (#headrow , 7)
       Let #headrow = #headrow + 1      
       Print $tmk2 (#headrow , 4)
       Let #headrow = #headrow + 1   
       Print $tmk3 (#headrow , 7)
       Let #headrow = #headrow + 1
       Print $tmk4 (#headrow , 6)
       Let #headrow = #CurLine - 1
       !*********End************
       
       !*************Printing 3rd and 4th and 5th column heading*****
       Let #headrow = #headrow + 2
       Print $nkp (#headrow,32)
       Print $npm (#headrow,68)
       Print $crm (#headrow, 127)
       Let #headrow = #headrow + 1
       Print '(5)' (#headrow , 130)
       !************End*********
       Let #headrow = #headrow - 1
       !******Printing heading for 2nd column***
       Let $sta1 = 'STA-'
       Print $sta1 (#headrow, 23 )
       Let #headrow = #headrow + 1
       Let $sta2 ='TUS'
       Print $sta2 (#headrow, 23 )
       !****************End*****
       
       
       Add 3 to #CurLine
       let $Ic_NUM_1 = rtrim(ltrim($Ic_NUM_1, ' '), ' ')
       let $Ic_NUM_1 = $Ic_NUM_1
       print '(1)' (#Curline,9)
       !print $Ic_NUM_1 (#Curline,4)
       print '(2)' (#Curline,24)
       let $EMPLOYEE_SOCSO_1 = rtrim(ltrim($EMPLOYEE_SOCSO_1, ' '), ' ')
       let $EMPLOYEE_SOCSO_1 = $EMPLOYEE_SOCSO_1
       print '(3)' (#Curline,39)
      ! print $EMPLOYEE_SOCSO_1 (#Curline,32)
       print '(4)' (#Curline,85)
       !print '(5)' (#Curline,70)

       print $CURRENCY  (#Curline,125)
        print $SEN (#Curline,133)  !************REM and SEM printing
       add 2 to #CurLine

       graphic (93,1,140) box 3 10   
!      print $REMARKS16 (72,10)
!      print $REMARKS17  (72,47)
       graphic () font 4 9
       print $PAGE_TOTAL (94,90)   !*********Jumlah muka
       
       
       
       
      ! graphic (74,90,35) box 3 10 !**Total Amount box elliminated
       !print $CURRENCY  (74,91) bold
!      print $TOTAL_FORWARD  (74,45)
!      print $GRAND_TOTAL (75,76) bold
!      print $REMARKS1 (74,1)
!      graphic (78,72,53) box 7 10
!      graphic () font 4 10
!      graphic (78,72,24) box  3 10
!      print $FOR_OFFICE_USE (79,73)
!      graphic ()  font 4 10
!      print $SIGNATURE1      (79,98)
!      print $RINGKAS         (80,98)
       graphic () font 4 9
       Let  $SIGNATURE1 = 'Tandatangan'
       print $SIGNATURE1 (98,1)                 !***Prints Tandatangan
!      print $DATE_OF_PAYMENTS  (82,72)
!      print $AMOUNT2           (82,98)
       graphic (98,18,40) horz-line 10
       
       Let $NAME_EMPLOYER  = 'Nama'
       print $NAME_EMPLOYER (100,1)  !***Prints Nama  
       graphic () font 4 9
       graphic (100,18,40) horz-line 10
       print $Person_Inchg (100,18) Wrap 40 2   
                                               
                                               

      ! If Length($Person_Inchg) > 40
          graphic () font 4 9
          Let $PHONE = 'No. Tel &'
          print $PHONE (102,1)  
          print &PIC_Phone (102,18)
          Let $PHONE = 'Cop Majikan'
          print $PHONE (103,1)  
          graphic () font 4 10
          
       !else
        !  graphic () font 4 8
        !  print $PHONE (83,84)
         ! graphic (83,104,20) horz-line
         ! graphic () font 4 10
         ! print &PIC_Phone (83,104)
       !End-if

      ! print $ReportText4 (86,1)
       !graphic (86,16,40) horz-line
    end-if

    !****Priting of Right Bottom fields*****
    
    graphic () font 4 9 
    Let #midcol = 95
    Let #midrow = 98
    Let $kp = 'Kaedah Pembayaran (Sila tandakan (x))'
    Let $tunai = 'Tunai'
    Let $kw = 'Kiriman Wang'
    Let $cek = 'Cek'
    Let $lainlain = 'Lain-lain'
    Let $nckw = 'No.Cek/Kiriman Wang'

    Print $kp (#midrow,#midcol) 
    
    Let #midrow = #midrow + 2
    graphic (#midrow,#midcol,3) box 1 10
    Print $tunai (#midrow,99) 
    
    graphic (#midrow,115,3) box 1 10
    Print $Kw (#midrow, 119)  
    
    Let #midrow = #midrow + 2
    graphic (#midrow,#midcol,3) box 1 10
    Print $cek (#midrow,99)
    Print '.................' (#midrow,104)
    
    graphic (#midrow,115,3) box 1 10
    Print $lainlain (#midrow, 119)  
    Print '.................' (#midrow,128)
    
    Let #midrow = #midrow + 2
    Print $nckw (#midrow,#midcol)    
    Let #col = #midcol
    Let #midrow = #midrow + 1
    Let #counter = 1
        While (#counter < 11)
        graphic (#midrow,#col,3) box 1 10
        Let #col = #col + 3
        Let #counter = #counter + 1
        End-while
    !**************END*******************
    
    
    !***************Fields in the lower big box******************
    graphic () font 4 10
    ! Let #CurLine = #CurLine + 1
   print $ICPassport (#CurLine,32)    !**********Employee Identification number

   !let $ICPassportold = $ICPassport
   !print &EmplSocso  (10,25)
   

      !*********Date print control statement for both Text and PDF files**********
     if #date1 >=0 and #date2 >= 0
       if $Action = 'HIR' or $Action = 'REH' or $Action = 'TER' or $Action = 'RWP' or $Action = 'TWB' or $Action = 'TWP' or $Action = 'RET' or $Action = 'PRC'
          if $Action = 'TER' or $Action = 'RWP' or $Action = 'TWB' or $Action = 'TWP' or $Action = 'RET'
             Let $Empl_DT = $lastdaywrkd
            end-If
          do Convert-to-DTU-Date($Empl_DT, $Empl_JDTk)
          let $Empl_DT1 = substr($Empl_JDTk, 9, 2)
          let $Empl_DT2 = substr($Empl_JDTk, 6, 2)
          let $Empl_DT3 = substr($Empl_JDTk, 1, 4)
       end-if
     end-if

   let $PrintDate = $Empl_DT1 || '/' || $Empl_DT2 || '/' || $Empl_DT3  !*******Prints the date

   if $PrintDate = '//'

      let $PrintDate = ''

   end-if

   print $PrintDate  (#CurLine,5)
   
   print $tempprint (#CurLine,24) 
   


    IF $EmplName1 <> '' AND $EmplName2 <> ''
         print $EmplName1  (#CurLine,58)
         add 1 to #CurLine
         print $EmplName2  (#CurLine,58)
  let #CurLine = #CurLine - 1
        let #cnt = #CurLine
      ELSE
         print $EmplName   (#CurLine,58)
        let #cnt = #CurLine
    end-if

graphic () font 4 10 
   let #Empldeduct = &Empldeduct
    
   let #Empldeduct_dec = (#Empldeduct - trunc(#Empldeduct, 0)) * 100
   If(#Empldeduct_dec<0)
   Let #Empldeduct_dec = #Empldeduct_dec * (-1)
   End-If
  
   let #Empldeduct = trunc(#Empldeduct, 0)
   move #Empldeduct to $Empldeduct 999
   If(#Empldeduct= 0)
  Let $Empldeduct = '000'
  End-If
   do Print-Values-Box1 ($Empldeduct, 122, #CurLine, 3)
   print '.' (#CurLine, 132)
   move #Empldeduct_dec to $Empldeduct_dec 99
  If(#Empldeduct_dec = 0)
  Let $Empldeduct_dec = '00'
  End-If
   do Print-Values-Box ($Empldeduct_dec, 133, #CurLine)
   add 1 to #CurLine
    graphic (#CurLine,1,140) horz-line 10 
    
   
   Add 1 to #TotRecs
   add 2 to #CurLine
      Let $Action = ''
      Let $Action_Reason = ''
  


end-procedure
!*********************************
!Procedure : Print-Due-Date
!*********************************

begin-procedure Print-Due-Date($nxt_mnth_end,:$PrnDueDt)

Do dtu-Parse-Date($nxt_mnth_end,#D_YR,#D_MN,#D_DY)

if (( mod(#D_DY, 100) >= 11 ) AND ( mod(#D_DY, 100) <= 13 ))
      Let $DY_suffix = 'th'
else
   Let #D_DY_eval = mod(#D_DY, 10)
   
   EVALUATE #D_DY_eval
   
    WHEN = 1
     Let $DY_suffix = 'st'
    break
   
    WHEN = 2
     Let $DY_suffix = 'nd'
    break
   
    WHEN = 3
     Let $DY_suffix = 'rd'
    break
   
    WHEN-Other
     Let $DY_suffix = 'th'
  
   End-Evaluate 

end-if

    Let #Check_Month = #D_MN
    Do Get-Month-Name(#Check_Month,$Month_Print)
    
      Let $Day_Print = edit(#D_DY,'99')
      Let $Year_Print = edit(#D_YR,'9999')
      Let $PrnDueDt = $Day_Print || $DY_suffix || ' ' || $Month_Print || ' ' || $Year_Print

end-procedure
!********************************************************************
! Procedure :   Get-Month-Name
!********************************************************************
Begin-Procedure Get-Month-Name (#monthno,:$Mon_Print)
      Let $Month_Print = ''
      Evaluate #monthno
         When = 1
               Let $Mon_Print = 'Jan'
               break
         When = 2
               Let $Mon_Print = 'Feb'
               break
         When = 3
               Let $Mon_Print = 'Mar'
               break
         When = 4
               Let $Mon_Print = 'Apr'
               break
         When = 5
               Let $Mon_Print = 'May'
               break
         When = 6
               Let $Mon_Print = 'Jun'
               break
         When = 7
               Let $Mon_Print = 'Jul'
               break
         When = 8
               Let $Mon_Print = 'Aug'
               break
         When = 9
               Let $Mon_Print = 'Sep'
               break
         When = 10
               Let $Mon_Print = 'Oct'
               break
         When = 11
               Let $Mon_Print = 'Nov'
               break
         When = 12
               Let $Mon_Print = 'Dec'
               break
      End-Evaluate
End-Procedure   !Get-Month-Name
!
!********************************************************************
#include 'prcslng.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  !Routines for date manipulation
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'readxlat.sqc'  !Enables XLAT table read
#Include 'rotname1.sqc'  !Rotate-Name Procedure
#include 'sqrtrans.sqc'     ! Translate SQR strings to given langua
 #include 'adformat.sqc'   !Address formatting
 #Include 'getlogou.sqc'

