!----------------------------------------------------------------------
!  STES004: Purchase Summary
!----------------------------------------------------------------------
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:50:05                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!----------------------------------------------------------------------

#include 'setenv.sqc'

!--------------------------------------------------------------------
Begin-Setup
!--------------------------------------------------------------------

  #include 'ptset02.sqc'   !Printer and page-size initialization

End-Setup

!--------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     Main Report procedure.
!--------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Purchase-Summary
  do Reset
  do Successful-EOJ

End-Program

!----------------------------------------------------------------------
Begin-Heading 12
!----------------------------------------------------------------------

  #Include 'stdhdg01.sqc'

  print $StockIdLbl                                        (-1,001,009)
  print &a.stock_id                                        (  ,017,010)
  print $PurchaseIdLbl                                     (  ,080,011)
  print $RC_PURCHASE_ID                                    (  ,095,010)
  print $StockPlanLbl                                      (+1,001,011)
  print &a.stock_plan                                      (  ,017,010)
  print $OfferingIdLbl                                     (+1,001,012)
  print &a.offering_id                                     (  ,017,010)
  print $PeriodEndLbl                                      (+1,001,014)
  do Format-DateTime (&a.period_end_dt, $Dt, {DEFDATE}, '', '')
  print $Dt                                                (  ,017,010)
  print $ProcessGroupLbl                                   (+2,001,014)
  print $ProcessGroup                                      (  ,017,010)
  print $PurchaseFmvLbl                                    (  ,078,012)
  print &a.purchase_fmv                                    (  ,092,014) edit 999,999.999999
  print $CurrencyLbl                                       (+1,001,013)
  print $CurrencyCd                                        (  ,017,004)

  print $NameLbl                                           (+2,001,004)
  print $GrantLbl                                          (  ,032,005)
  print $GrantLbl                                          (  ,049,005)
  print $PurchaseLbl                                       (  ,058,008)
  print $SharesLbl                                         (  ,084,006)
  print $TotalLbl                                          (  ,109,005)
  print $AmountToLbl                                       (  ,169,009)
  print $EmplidLbl                                         (+1,001,006)
  print $DateLbl                                           (  ,032,010)
  print $FmvLbl                                            (  ,051,003)
  print $PriceLbl                                          (  ,061,005)
  print $PurchasedLbl                                      (  ,081,009)
  print $ContributionsLbl                                  (  ,101,013)
  print $GrantCostLbl                                      (  ,127,011)
  print $CarryFwdLbl                                       (  ,145,013)
  print $BeRefundedLbl                                     (  ,167,011)
  print '-'                                                (+1,001,177) fill

End-Heading

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!
Begin-Procedure Report-Translation

  do Init_Report_Translation ('STOCK', $language_cd)
  do Append_Report_Translation ('STES004')

  do Get_Field_Information ('STOCK'  ,'NAME',              $NameLbl,          #DW)
  do Get_Field_Information ('STOCK'  ,'EMPLID',            $EmplidLbl,        #DW)
  do Get_Field_Information ('STOCK'  ,'GRANT',             $GrantLbl,         #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE',          $PurchaseLbl,      #DW)
  do Get_Field_Information ('STOCK'  ,'SHARES',            $SharesLbl,        #DW)
  do Get_Field_Information ('STOCK'  ,'DATE',              $DateLbl,          #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE_FMV',      $PurchaseFmvLbl,   #DW)
  do Get_Field_Information ('STOCK'  ,'STOCK_ID',          $StockIdLbl,       #DW)
  do Get_Field_Information ('STOCK'  ,'STOCK_PLAN_DESC',   $StockPlanLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'OFFERING_ID',       $OfferingIdLbl,    #DW)
  do Get_Field_Information ('STOCK'  ,'TOTAL',             $TotalLbl,         #DW)
  do Get_Field_Information ('STOCK'  ,'PROCESS_GRP',       $ProcessGroupLbl,  #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE_ID',       $PurchaseIdLbl,    #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASED',         $PurchasedLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'GRANT_DT',          $GrantDtLbl,       #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE_DT',       $PeriodEndLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'GRANT_COST',        $GrantcostLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'CARRYFWD',          $CarryfwdLbl,      #DW)
  do Get_Field_Information ('STOCK'  ,'CURRENCY_CD',       $CurrencyLbl,      #DW)
  do Get_Field_Information ('STOCK'  ,'GRAND_TOTAL',       $GrandTotalLbl,    #DW)

  do Get_Field_Information ('STES004','STES004',           $Reporttitle,      #DW)
  do Get_Field_Information ('STES004','AMOUNT_TO',         $AmountToLbl,      #DW)
  do Get_Field_Information ('STES004','BE_REFUNDED',       $BeRefundedLbl,    #DW)
  do Get_Field_Information ('STES004','FOOTNOTES',         $FootnotesLbl,     #DW)
  do Get_Field_Information ('STES004','ANTIDILUTIONPRICE', $AntidilutionLbl,  #DW)
  do Get_Field_Information ('STES004','PERCENTAGE',        $PercentageLbl,    #DW)
  do Get_Field_Information ('STES004','FMV',               $FmvLbl,           #DW)
  do Get_Field_Information ('STES004','CONTRIBUTIONS',     $ContributionsLbl, #DW)
  do Get_Field_Information ('STES004','NOTES',             $NotesLbl,         #DW)
  do Get_Field_Information ('STES004','PRICE',             $PriceLbl,         #DW)
  do Get_Field_Information ('STES004','CURRENCY_CD',       $CurrencyLbl,      #DW)

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Init-Report
!----------------------------------------------------------------------

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  let $ReportId = 'STES004'
  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.

  if $prcs_process_instance = ''
    INPUT $RC_PURCHASE_ID   MAXLEN=10  'Enter Purchase ID'  TYPE=CHAR
  else
    do Get-SQR-Parms
  end-if

  do Build-Where-Clause

End-Procedure

!----------------------------------------------------------------------!
! Procedure:  Process-Main                                             !
! Descr:      This is where all required data is selected              !
!----------------------------------------------------------------------!
Begin-Procedure Purchase-Summary

  let #Rows = 0

Begin-Select

A.PROCESS_GROUP () On-Break print=never level=1 procedure=Print-ProcessGroup-Totals
A.CURRENCY_CD
A.EMPLID
A.STOCK_ID
A.STOCK_PLAN_TYPE
A.STOCK_PLAN
A.OFFERING_ID
A.PERIOD_END_DT
A.GRANT_DT
A.GRANT_FMV
A.PURCHASE_FMV
A.PURCHASE_PRICE
A.SHARES_PURCHASED
(A.PURCHASE_PRICE * A.SHARES_PURCHASED) &PurchaseValue
A.ESPP_STOCK_CONTRIB
B.PURCHASE_TYPE
B.PRORATE_FACTOR
C.NAME

  let $ProcessGroup  = rtrim(&a.process_group, ' ')
  let $CurrencyCd    = rtrim(&a.currency_cd, ' ')
  let $PurchaseType  = rtrim(&b.purchase_type, ' ')
  let #ProrateFactor = &b.prorate_factor
  do Select-Residuals
  do Print-Detail
  let #Rows = #Rows + 1

from PS_ST_ESPP_PURCH   A,
     PS_ST_PURCHASE_TBL B,
     PS_ST_PERSON_NAME  C
where B.PURCHASE_ID     = $RC_PURCHASE_ID
  and A.STOCK_ID        = B.STOCK_ID
  and A.STOCK_PLAN_TYPE = B.STOCK_PLAN_TYPE
  and A.STOCK_PLAN      = B.STOCK_PLAN
  and A.OFFERING_ID     = B.OFFERING_ID
  and A.PERIOD_END_DT   = B.PERIOD_END_DT
  and A.EMPLID          = C.EMPLID
[$WherePrcsGrp]
[$WhereEmplid]
order by A.PROCESS_GROUP,C.NAME

End-Select

  if #Rows > 0
    do Print-Grand-Totals
    do Print-Dilution-Footer
  end-if

End-Procedure

!----------------------------------------------------------------------!
! Procedure: Select-Residuals
! Descr:
!----------------------------------------------------------------------!
Begin-Procedure Select-Residuals

  let #ResidualAmt  = 0
  let $ResidualType = ''

Begin-Select

D.ESPP_RESIDUAL_AMT
D.ESPP_RESIDUAL_TYPE

  let #ResidualAmt  = &d.espp_residual_amt
  let $ResidualType = rtrim(&d.espp_residual_type, ' ')

from PS_ST_CONTRIB_RSDL D
where D.EMPLID          = &a.emplid
  and D.STOCK_ID        = &a.stock_id
  and D.STOCK_PLAN_TYPE = &a.stock_plan_type
  and D.STOCK_PLAN      = &a.stock_plan
  and D.OFFERING_ID     = &a.offering_id
  and D.PERIOD_END_DT   = &a.period_end_dt
  and D.PROCESS_GROUP   = &a.process_group

End-Select

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Build-Where-Clause
!----------------------------------------------------------------------

  let $SQLQuote      = ''''
  let $WhereEmplid   = ''
  let $WherePrcsGrp = ''

  let $RC_EMPLID = rtrim($RC_EMPLID,' ')
  let $RC_PrcsGrp = rtrim($RC_PrcsGrp, ' ')

  if $RC_PrcsGrp <> ''
    if $RC_SORT = 'P'
       let $WherePrcsGrp   = ' AND A.PROCESS_GROUP  = ' || $SQLQuote || $RC_PrcsGrp || $SQLQuote
    else
       let $WherePrcsGrp   = ' AND A.PROCESS_GROUP  = ' || $SQLQuote || $RC_PrcsGrp || $SQLQuote
    end-if
  else
    let $WherePrcsGrp   = ''
  end-if

  if $RC_EMPLID <> ''
    if $RC_SORT = 'P'
       let $WhereEmplid   = ' AND A.EMPLID  = ' || $SQLQuote || $RC_EMPLID || $SQLQuote
    else
       let $WhereEmplid   = ' AND A.EMPLID  = ' || $SQLQuote || $RC_EMPLID || $SQLQuote
    end-if
  else
    let $WhereEmplid   = ''
  end-if

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Print-Detail
!----------------------------------------------------------------------

  print &c.name                                            (+1,001,030)
  do Format-DateTime(&a.grant_dt, $out, {DEFDATE}, '', '')
  print $out                                               (  ,032,010)
  print &a.grant_fmv                                       (  ,044,010) edit 999.999999
  print &a.purchase_price                                  (  ,056,010) edit 999.999999
  print &a.shares_purchased                                (  ,068,022) edit 999,999,999,999.999999
  print &a.espp_stock_contrib                              (  ,092,022) edit 999,999,999,999.999999
  print &PurchaseValue                                     (  ,116,022) edit 999,999,999,999.999999
  if $ResidualType = 'C'
    print #ResidualAmt                                     (  ,140,018) edit 999,999,999.999999
    let #GroupForwardAmount = #GroupForwardAmount + #ResidualAmt
  else
    if $ResidualType = 'R'
      print #ResidualAmt                                   (  ,160,018) edit 999,999,999.999999
      let #GroupRefundAmount = #GroupRefundAmount + #ResidualAmt
    end-if
  end-if
  print &a.emplid                                          (+1,001,011)
  print ''                                                 (+1,001,011)
  let #Groupsharepurch    = #Groupsharepurch    + &a.shares_purchased
  let #Groupcontributions = #Groupcontributions + &a.espp_stock_contrib
  let #Grouppurchasevalue = #Grouppurchasevalue + &PurchaseValue

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Print-ProcessGroup-Totals
!----------------------------------------------------------------------

  print '-'                                                (+1,001,177) fill
  print $ProcessGroupLbl                                   (+1,001,013)
  print $ProcessGroup                                      (  ,015,010)
  print $TotalLbl                                          (  ,025,005)
  print #GroupSharePurch                                   (  ,068,022) edit 999,999,999,999.999999
  print #GroupContributions                                (  ,092,022) edit 999,999,999,999.999999
  print #GroupPurchaseValue                                (  ,116,022) edit 999,999,999,999.999999
  print #GroupForwardAmount                                (  ,140,018) edit 999,999,999.999999
  print #GroupRefundAmount                                 (  ,160,018) edit 999,999,999.999999
  print '-'                                                (+1,001,177) fill
  new-page

  let #TotalSharePurch    = #TotalSharePurch    + #GroupSharePurch
  let #TotalContributions = #TotalContributions + #GroupContributions
  let #TotalPurchaseValue = #TotalPurchaseValue + #GroupPurchaseValue
  let #TotalForwardAmount = #TotalForwardAmount + #GroupForwardAmount
  let #TotalRefundAmount  = #TotalRefundAmount  + #GroupRefundAmount

  let #GroupSharePurch    = 0
  let #GroupContributions = 0
  let #GroupPurchaseValue = 0
  let #GroupForwardAmount = 0
  let #GroupRefundAmount  = 0

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Print-Grand-Totals
!----------------------------------------------------------------------

  print '-'                                                (+1,001,177) fill
  print $ProcessGroupLbl                                   (+1,001,013)
  print $ProcessGroup                                      (  ,015,010)
  print $TotalLbl                                          (  ,025,005)
  print #GroupSharePurch                                   (  ,068,022) edit 999,999,999,999.999999
  print #GroupContributions                                (  ,092,022) edit 999,999,999,999.999999
  print #GroupPurchaseValue                                (  ,116,022) edit 999,999,999,999.999999
  print #GroupForwardAmount                                (  ,140,018) edit 999,999,999.999999
  print #GroupRefundAmount                                 (  ,160,018) edit 999,999,999.999999
  print '-'                                                (+1,001,177) fill

  let #TotalSharePurch    = #TotalSharePurch    + #GroupSharePurch
  let #TotalContributions = #TotalContributions + #GroupContributions
  let #TotalPurchaseValue = #TotalPurchaseValue + #GroupPurchaseValue
  let #TotalForwardAmount = #TotalForwardAmount + #GroupForwardAmount
  let #TotalRefundAmount  = #TotalRefundAmount  + #GroupRefundAmount

  print '-'                                                (+2,001,177) fill
  print $GrandTotalLbl                                     (+1,019,011)
  print #TotalSharePurch                                   (  ,068,022) edit 999,999,999,999.999999
  print #TotalContributions                                (  ,092,022) edit 999,999,999,999.999999
  print #TotalPurchaseValue                                (  ,116,022) edit 999,999,999,999.999999
  print #TotalForwardAmount                                (  ,140,018) edit 999,999,999.999999
  print #TotalRefundAmount                                 (  ,160,018) edit 999,999,999.999999
  print '-'                                                (+1,001,177) fill

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Print-Dilution-Footer
!----------------------------------------------------------------------

  if $PurchaseType = 'A'
    print $FootnotesLbl                                    (+5,001,011) bold underline
    print $AntidilutionLbl                                 (+1,001,021)
    do Get-AntiDilution
  end-if

  if $PurchaseType = 'P'
    print $FootnotesLbl                                    (+5,001,011) bold underline
    print $AntidilutionLbl                                 (+1,001,021)
    print $PercentageLbl                                   (+1,001,   )
    print #ProrateFactor                                   (  ,030,   ) edit XXX%
  end-if

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Get-AntiDilution
!----------------------------------------------------------------------

Begin-Select

E.GRANT_DT
E.ANTI_DILUTION_PRC

  do Format-DateTime(&e.grant_dt, $out, {DEFDATE}, '', '')
  print $out                                               (+1,010,010)
  print &e.anti_dilution_prc                               (  ,030,014) edit 999,999.999999

from PS_ST_PURCHASE_PRC E
where E.STOCK_ID        = &a.stock_id
  and E.STOCK_PLAN_TYPE = &a.stock_plan_type
  and E.STOCK_PLAN      = &a.stock_plan
  and E.OFFERING_ID     = &a.offering_id
  and E.PERIOD_END_DT   = &a.period_end_dt

End-Select

End-Procedure

!----------------------------------------------------------------------
!  SQC Include Files
!----------------------------------------------------------------------
#include 'strunctl.sqc'    !Stock Admin's Run Control Record
#include 'sqlerr.sqc'      !SQL error processing
#include 'stdapi.sqc'
#include 'curdttim.sqc'    !Get-Current-Date-Time
#include 'datetime.sqc'    !Get-Date-Time
#include 'datemath.sqc'    !Date Math Routines
#include 'reset.sqc'       !Reset printer procedure
#include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Translate SQR strings to given language
#include 'askftd.sqc'      
#include 'stgetfmv.sqc'    !Retrieves FMV for a particular date
#include 'getrplng.sqc'    !Gets the report language
