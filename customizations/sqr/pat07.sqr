!***********************************************************************
!  Benefit Plan Summary      --- Mondo Reporto
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:15:00:20                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!                                                                      *
!***********************************************************************
! for each function, calls get-proc-name which gets all the            *
! function result information then it goes to a specific               *
! procedure for the specific function                                  *
!                                                                      *
!                                                                      *
!                                                                      *
! 9/7/2004   PY   MODIFY TO USE PS_ACTN_REASON_TBL FOR ACTION REASON   *    
!                 DESCRIPTION                                          *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do StdApi-Term
end-report

#Include 'setup31.sqc'  !printer and page-size initialization


!* The below section defines various column lengths and widths as    *!
!* variables.  This is intended to ease the formatting of data.      *!
#define colTitle 1
#define col1 5
#define 5 10
#define header-lines 10


begin-HEADING {header-lines}
  #Include 'stdhdg01.sqc'
  let $calc_title = $benefit_plan || ' as of ' || $as_of_date
  print $calc_title                               (+1,{colTitle}) center
end-HEADING


!* The below sections determine if the report was started from within*!
!* tools or from the SQRW icon.  If it was started from the icon,    *!
!* prompt the user to enter the calculation name, sequence number,   *!
!* and employe id (Ask-Values).  Otherwise get the values from the   *!
!* run control table with the run control id and oprid passed        *!
!* from the process scheduler. (Get-Values).                         *!
!**********************************
begin-procedure Init-Report
!**********************************
  move 'PAT07' to $ReportID
  do StdApi-Init
  if $prcs_process_instance = ''
   do Ask-values
  else
   do Get-values-pa
  end-if
  move 'Pension Plan Summary' to $ReportTitle
end-procedure

!**********************************
begin-procedure Get-Values-pa
!**********************************
!* No Prompt
 do Select-Parameters-PA
  let $benefit_plan = &PA_RUN_CNTL.BENEFIT_PLAN
  move '1' to $Year4
  do Format-DateTime(&PA_RUN_CNTL.AS_OF_DATE , $as_of_date, {DEFDATE}, '', '',)
end-procedure

!**********************************
begin-procedure Ask-Values
!**********************************
  input $benefit_plan_input  'Enter Plan Name'
  input $as_of_date_input  'As of Date'
  let $benefit_plan = rtrim($benefit_plan_input,'')
  let $as_of_date = rtrim($as_of_date_input,'')
end-procedure


!*                                                                   *!
!*                                                                   *!
!*
!* The below section is the main paragraph of the program.           *!
!*                                                                   *!
!*
!**********************************                                                                    *!
begin-procedure Process-Main
!**********************************

  do Initialize
  do Print-Plan

print '=' (+5,1,122) fill
print '*** Plan Implementation ***'   (+1,1) center
print '=' (+1,1,122) fill
do get-procs
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Plan Date Aliases ***'          (+1,1) center
print '=' (+1,1,122) fill
do get-plan-date-aliases
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Plan Eligibility ***'          (+1,1) center
print '=' (+1,1,122) fill
move 'PLANELIG' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Plan Participation ***'          (+1,1) center
print '=' (+1,1,122) fill
move 'PLANPARTIC' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Service ***'                     (+1,1) center
print '=' (+1,1,122) fill
move 'SERVICE' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Vesting ***'                     (+1,1) center
print '=' (+1,1,122) fill
move 'VESTING' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Benefit Eligibility ***'         (+1,1) center
print '=' (+1,1,122) fill
move 'BENELIG' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Final Average Earnings ***'      (+1,1) center
print '=' (+1,1,122) fill
move 'FAE' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Cash Balance Accounts ***'       (+1,1) center
print '=' (+1,1,122) fill
move 'CASHBAL' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Employee Accounts ***'           (+1,1) center
print '=' (+1,1,122) fill
move 'EMPLACCTS' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Social Security ***'           (+1,1) center
print '=' (+1,1,122) fill
move 'SOCSEC' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Covered Compensation ***'    (+1,1) center
print '=' (+1,1,122) fill
move 'COVRDCOMP' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Early/Late Adjustments ***'    (+1,1) center
print '=' (+1,1,122) fill
move 'AGEADJUST' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Death Coverage Factors ***'    (+1,1) center
print '=' (+1,1,122) fill
move 'DEATHCVRG' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Benefit Calculation ***'       (+1,1) center
print '=' (+1,1,122) fill
move 'BENCALC' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Q D R O ***'           (+1,1) center
print '=' (+1,1,122) fill
move 'QDRO' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Employee/Employer Split ***'      (+1,1) center
print '=' (+1,1,122) fill
move 'CONTSBEN' to $function_name
!do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Optional Forms ***'           (+1,1) center
print '=' (+1,1,122) fill
move 'OPTFORMS' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** 415 Limits ***'           (+1,1) center
print '=' (+1,1,122) fill
move 'LIMIT415' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Consolidated Earnings ***'      (+1,1) center
print '=' (+1,1,122) fill
move 'CONSOLIDTE' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Consolidated Hours ***'         (+1,1) center
print '=' (+1,1,122) fill
move 'CONSOLIDTH' to $function_name
do get-proc-name
NEW-PAGE
print '=' (+5,1,122) fill
print '*** Consolidated Contributions ***'         (+1,1) center
print '=' (+1,1,122) fill
move 'CONSOLIDTC' to $function_name
do get-proc-name
end-procedure


!*                                                                   *!
!*                                                                   *!
!* The below section is the initialization section                   *!
!*                                                                   *!
!*
!**********************************                                                                    *!
begin-procedure Initialize
!**********************************
  move 0 to #lines_remaining
  move 0 to #line_count
  move 0 to #section_min
end-procedure


!*                                                                   *!
!* get the benefit plan info                                         *!
!*
!**********************************                                                                    *!
begin-procedure print-plan
!**********************************

let $sql-statement = 'PAT07-BENEF_PLAN_TBL'

BEGIN-SELECT  ON-ERROR=SQL-ERROR
PLANT.BENEFIT_PLAN
PLANT.EFFDT
  move '1' to $Year4
  do Format-DateTime(&PLANT.EFFDT, $plant.effdt, {DEFDATE}, '', '',)
PLANT.PLAN_TYPE
  move &PLANT.PLAN_TYPE    to $plan_type
PLANT.DESCR
PLANT.SETID
PLANT.VENDOR_ID
PLANT.GROUP_NBR
PLANT.DEDCD
PLANT.INCLUDE_IN_NDT

   print '=' (+1,1,122) fill
   print '*** Benefit Plan Setup ***'           (+1,1) center
   print '=' (+1,1,122) fill
   print 'Effective Date:  '            (+3,5)
   print $plant.effdt                   ()
   print 'Description:     '            (+1,5)
   print &PLANT.DESCR                   ()
   print 'Provider SetID:  '            (+1,5)
   print &PLANT.SETID                   ()

   do Get-Vendor-Name

   print 'Group Number:    '            (+1,5)
   print &PLANT.GROUP_NBR               ()
   print 'Deduction Code:  '            (+1,5)
   print &PLANT.DEDCD                   ()

   do Get-Ded-Description

   print 'Include in Nondiscrimination: ' (+1,5)
   print &PLANT.INCLUDE_IN_NDT ()

   do Get-Pension-Setup

FROM  PS_BENEF_PLAN_TBL PLANT
WHERE PLANT.BENEFIT_PLAN = $benefit_plan
AND   PLANT.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_BENEF_PLAN_TBL
                    WHERE BENEFIT_PLAN = PLANT.BENEFIT_PLAN
                    AND EFFDT <= &PA_RUN_CNTL.AS_OF_DATE)


END-SELECT


end-procedure

!**********************************
begin-procedure Get-Vendor-Name
!**********************************

BEGIN-SELECT

VENDOR.NAME1

  print 'Provider:        '            (+1,5)
  print &VENDOR.NAME1                  ()

FROM PS_VENDOR VENDOR
WHERE VENDOR.SETID = &PLANT.SETID
AND   VENDOR.VENDOR_ID = &PLANT.VENDOR_ID

END-SELECT

end-procedure

!**********************************
begin-procedure Get-Ded-Description
!**********************************

let $sql-statement = 'PAT07-DEDUCTION_TBL'

BEGIN-SELECT DISTINCT ON-ERROR=SQL-ERROR
DED.DESCR
  print &DED.DESCR                     (,+5)

FROM  PS_DEDUCTION_TBL DED
WHERE DED.PLAN_TYPE =  $plan_type AND
      DED.DEDCD     =  &PLANT.DEDCD AND
      DED.EFFDT    <=  &PLANT.EFFDT
end-select


end-procedure

!**********************************
begin-procedure Get-Pension-Setup
!**********************************

print '=' (+5,1,122) fill
print '*** USDB Pension Plan Setup ***'           (+1,1) center
print '=' (+1,1,122) fill

let $sql-statement = 'PAT07-PENSION_PLN_TBL'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Effective Date: ' (+3,5)
PPLAN.EFFDT
  move '1' to $Year4
  do Format-DateTime(&PPLAN.EFFDT, $pplan.effdt, {DEFDATE}, '', '',)
  print $pplan.effdt ()
PPLAN.PENSION_TYPE
  move 'PENSION_TYPE'  to $FieldName
  move &PPLAN.PENSION_TYPE to $FieldValue
  do Read-Translate-Table
  print 'Pension Type:  '             (+1,5)
  print $XlatLongName                 ()
PPLAN.PLN_YR_BEGIN_MONTH
PPLAN.PLN_YR_BEGIN_DAY
PPLAN.PLN_YR_END_MONTH
PPLAN.PLN_YR_END_DAY
  print 'Plan Year Begins: '  (+1,5)
  print &PPLAN.PLN_YR_BEGIN_MONTH ()
  print '/'                       ()
  print &PPLAN.PLN_YR_BEGIN_DAY   ()
  print 'Ends: '    (,+5)
  print &PPLAN.PLN_YR_END_MONTH   ()
  print '/'                       ()
  print &PPLAN.PLN_YR_END_DAY     ()
PPLAN.VOLUN_CNTR_ALLOWED
PPLAN.PENS_RT_TBL_TYPE
PPLAN.PEN_CNTRB_STEP
PPLAN.PCT_UP_TO_STEP
PPLAN.PCT_OVER_STEP
  if &PPLAN.VOLUN_CNTR_ALLOWED = 'Y'
     print 'Contributory Plans -' (+1,5)
     print '   Rate Type: ' (+1,5)
     print &PPLAN.PENS_RT_TBL_TYPE ()
     print '   Pension Contribution Step: ' (+1,5)
     print &PPLAN.PEN_CNTRB_STEP ()
     print '   Pct up to Contribution Step: ' (+1,5)
     print &PPLAN.PCT_UP_TO_STEP ()
     print '   Pct over Step Amount: ' (+1,5)
     print &PPLAN.PCT_OVER_STEP ()
  end-if
FROM PS_PENSION_PLN_TBL PPLAN
WHERE PPLAN.BENEFIT_PLAN = $benefit_plan
AND   PPLAN.PLAN_TYPE    = &PLANT.PLAN_TYPE
AND   PPLAN.EFFDT <= &PA_RUN_CNTL.AS_OF_DATE
END-SELECT

end-procedure


!*
!*                                                                   *!
!*       get the implementation - procs                              *!
!*                                                                   *!
!*
!**********************************                                                                   *!
begin-procedure get-procs
!**********************************
!
!

let $sql-statement = 'PAT07-PA_PROC'
BEGIN-SELECT
  print 'Effective Date: ' (+3,5)
PROC1.EFFDT
  move '1' to $Year4
  do Format-DateTime(&PROC1.EFFDT, $proc.effdt, {DEFDATE}, '', '',)
  print $proc.effdt ()
  do get-proc-use
FROM PS_PA_PROC PROC1
WHERE PROC1.BENEFIT_PLAN = $benefit_plan
AND   PROC1.EFFDT = (SELECT MAX(PROC2.EFFDT) FROM PS_PA_PROC PROC2
WHERE PROC2.EFFDT <= &PA_RUN_CNTL.AS_OF_DATE AND PROC2.BENEFIT_PLAN = $benefit_plan)
END-SELECT
let $proc_effdt = &PROC1.EFFDT
!*
!*
!*
end-procedure


!**********************************
begin-procedure get-proc-use
!**********************************

print 'Description' (+2,8)
print 'Active' (,43)
print 'Type' (,50)
print 'Name' (,70)
print 'Process Prev' (,85)
print '--------------------------------' (+1,8)
print '------' (,43)
print '------------------' (,50)
print '--------------' (,70)
print '------------' (,85)
let $proc_effdt = &PROC1.EFFDT
!*
!*

let $sql-statement = 'PAT07-PA_PROC_USE'
BEGIN-SELECT
PROCUSE.PROC_EXEC_ORD_NUM
PROCUSE.EFFDT
PROCUSE.DESCR (+1,8)
PROCUSE.PROC_INSTALL_CD
  if &PROCUSE.PROC_INSTALL_CD = 'I'
     print 'Yes' (,45)
  ELSE
     print 'No' (,45)
  END-IF
PROCUSE.PROC_TYPE (,50)
  move 'PROC_TYPE'         to $FieldName
  move &PROCUSE.PROC_TYPE  to $FieldValue
  do Read-translate-Table
  print $XlatLongName    (,+2)
PROCUSE.PROC_NAME (,70)
PROCUSE.PROC_PREV_ELIG_CD (,91)
FROM PS_PA_PROC_USE PROCUSE
WHERE PROCUSE.BENEFIT_PLAN = $benefit_plan
AND   PROCUSE.EFFDT = $proc_effdt
ORDER BY PROCUSE.EFFDT, PROCUSE.PROC_EXEC_ORD_NUM
END-SELECT
!
!
end-procedure


!*
!*                                                                   *!
!* get the procedure name for specified plan & function              *!
!*      uses $benefit_plan, $function, gives $proc_name                 *!
!**********************************
begin-procedure get-proc-name
!**********************************


let $sql-statement = 'PAT07-PA_PROC_USE'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PROC1.PROC_NAME
PROC1.PROC_TYPE
  let $proc_name = &PROC1.PROC_NAME
  evaluate &PROC1.PROC_TYPE
     when = 'C'
        move $custmt_name to $proc_name
        do print-custom-statements
        break
     when = 'R'
        do print-function-results
        break
     when = 'U'
        print 'User Exit' (+5) center
        break
     when-other
        print 'DATA ERROR: Invalid Proc Type in PA_PROC_USE' (+5) center
        print '  value: ' (+1) center
        print &PROC1.PROC_TYPE ()
  end-evaluate
FROM PS_PA_PROC_USE PROC1
WHERE PROC1.BENEFIT_PLAN = $benefit_plan
AND   PROC1.EFFDT = $proc_effdt
AND   PROC1.FUNCTN_NAME = $function_name
END-SELECT
end-procedure

!**********************************
begin-procedure get-plan-date-aliases
!**********************************

let $sql-statement = 'PAT07-PA_PLAN_DATES'
BEGIN-SELECT ON-ERROR=SQL-ERROR
   print 'Effective Date: '   (+3,5)
PLNALS.EFFDT
  move '1' to $Year4
  do Format-DateTime(&PLNALS.EFFDT, $plnals.effdt, {DEFDATE}, '', '',)
  print $plnals.effdt ()
  print 'NRD Alias Name: '   (+1,5)
PLNALS.NRD_ALIAS_NAME         ()
   print 'ERD Alias Name: '   (+1,5)
PLNALS.ERD_ALIAS_NAME         ()
   print 'VEST Alias Name: '   (+1,5)
PLNALS.VST_ALIAS_NAME         ()
   print 'Contribution Function Result: '   (+1,5)
PLNALS.CONTRIB_NAME         ()
   print 'Social Security Calculator Duration Option: '   (+1,5)
PLNALS.DATE_OPTION         ()
   print 'Spouse Eligibility Alias: '   (+1,5)
PLNALS.PA_SS_AUTOBEN_ELIG         ()
FROM PS_PA_PLAN_ALIASES PLNALS
WHERE PLNALS.BENEFIT_PLAN = $benefit_plan
END-SELECT
end-procedure


!*
!*
!* get the function result name for specified plan, func, proc name
!*   uses $benefit_plan, $function, $proc_name
!*   gives function result name, start/stop, $defn_name, $group_name
!*
!*************************************
begin-procedure print-function-results
!*************************************


let $sql-statement = 'PAT07-PA_FUNCTN_RESLT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Function Result: ' (+3,02)
FUNCTN.BREAK_DFN_NAME
FUNCTN.FUNCTN_RESULT_NM     ()
  print 'Definition:  '      (+1,4)
FUNCTN.DEFINITION_NAME      ()
  move &FUNCTN.DEFINITION_NAME to $defn_name
  print 'Group: '           (,+5)
FUNCTN.GROUP_NAME           ()
  print 'Start: '           (,+5)
FUNCTN.START_DATE
  move '1' to $Year4
  do Format-DateTime(&FUNCTN.START_DATE, $functn.start_date, {DEFDATE}, '', '',)
FUNCTN.START_DATE_ALIAS
FUNCTN.START_DT_TYPE
   if &FUNCTN.START_DT_TYPE = 'A'
      print &FUNCTN.START_DATE_ALIAS ()
   ELSE
      print $functn.start_date ()
   END-if
FUNCTN.STOP_DATE
  move '1' to $Year4
  do Format-DateTime(&FUNCTN.STOP_DATE, $functn.stop_date, {DEFDATE}, '', '',)
FUNCTN.STOP_DATE_ALIAS
FUNCTN.STOP_DT_TYPE
   print 'Stop: '            (,+5)
   if &FUNCTN.STOP_DT_TYPE = 'A'
      print &FUNCTN.STOP_DATE_ALIAS ()
   ELSE
      print $functn.stop_date ()
   END-if
  !* print the definition/custom stmts
  do print-definition
FROM PS_PA_FUNCTN_RESLT FUNCTN
WHERE FUNCTN.BENEFIT_PLAN = $benefit_plan
AND   FUNCTN.EFFDT = (SELECT MAX(EFFDT) FROM PS_PA_FUNCTN_RESLT WHERE
BENEFIT_PLAN=$benefit_plan and EFFDT <=$proc_effdt
                AND   FUNCTN_NAME = $function_name
                AND   FUNCTN_RESULT_NM = $proc_name)
AND   FUNCTN.FUNCTN_NAME = $function_name
AND   FUNCTN.FUNCTN_RESULT_NM = $proc_name
END-SELECT
!*
end-procedure


!*
!*   now that you gots the definition, go get the details
!*
!**********************************
begin-procedure print-definition
!**********************************
evaluate $function_name
   when = 'PLANELIG'
     move $defn_name  to $custmt_name
     do print-custom-statements
     break
   when = 'PLANPARTIC'
     do print-planpartic
   when = 'VESTING'
     do print-vesting
   when = 'BENELIG'
     do print-benelig
   when = 'SERVICE'
     do print-service
   when = 'FAE'
     do print-fae
   when = 'CASHBAL'
     do print-cashbal
   when = 'EMPLACCTS'
     do print-emplaccts
   when = 'CONTSBEN'
     do print-contsben
   when = 'SOCSEC'
     do print-pia
   when = 'COVRDCOMP'
     do print-covrdcomp
   when = 'AGEADJUST'
     do print-age-adjust
   when = 'DEATHCVRG'
     do print-deathcvrg
   when = 'BENCALC'
     do print-bencalc
!   when = 'QDRO'
!     do print-qdro
   when = 'OPTFORMS'
     do print-optforms
   when = 'LIMIT415'
     do print-limit415
   when = 'CONSOLIDTE'
     do print-consolidte
   when = 'CONSOLIDTH'
     do print-consolidth
   when = 'CONSOLIDTC'
     do print-consolidtc
end-evaluate


end-procedure


!*
!* get the custom statement information                              *!
!* based on custom statement name fed                                *!
!*
!**************************************                                                                    *!
begin-procedure print-custom-statements
!**************************************


let $sql-statement = 'PAT07-PA_CUSTOM'
BEGIN-SELECT
CUSTMT.DESCR
CUSTMT.DESCRLONG
FROM PS_PA_CUSTOM CUSTMT
WHERE CUSTMT.CUSTOM_STMT_NAME = $custmt_name
END-SELECT

print 'Custom Statement: ' (+2,10)
print $custmt_name         ()
print 'Description: '      (,+5)
print &CUSTMT.DESCR        ()
print &CUSTMT.DESCRLONG    (,+5)

let $sql-statement = 'PAT07-PA_CUSTOM2'
BEGIN-SELECT
CUSTMT2.STMT_TYPE
CUSTMT2.KEYWORD
  print 'Statement Type: '          (+2,10)
  move 'STMT_TYPE'        to $FieldName
  move &CUSTMT2.STMT_TYPE to $FieldValue
  do Read-Translate-Table
  print $XlatLongName               ()

  if &CUSTMT2.KEYWORD <> ' '
    print 'Keyword: '                 (+1,10)
    print &CUSTMT2.KEYWORD             ()
  END-IF

CUSTMT2.OPERAND1                    (+1,15)
CUSTMT2.OPERATOR1                   (,+5)
CUSTMT2.OPERAND1_HIST
  if &CUSTMT2.OPERAND1_HIST = 'Y'
     print ' (HIST) '                   (,+5)
  end-if
CUSTMT2.OPERAND2                    (,+5)
CUSTMT2.OPERATOR2                   (,+5)
CUSTMT2.OPERAND2_HIST
  if &CUSTMT2.OPERAND2_HIST = 'Y'
    print ' (HIST)'                   (,+5)
  end-if
CUSTMT2.OPERAND3                    (,+5)
FROM PS_PA_CUSTOM2 CUSTMT2
WHERE CUSTMT2.CUSTOM_STMT_NAME = $custmt_name
END-SELECT

end-procedure


!*
!*
!*     D E F I N I T I O N S   ***************************************!
!*
!*
!*
!* get the plan participation                                        *!
!*                                                                   *!
!**********************************
begin-procedure print-planpartic
!**********************************


let $sql-statement = 'PAT07-PA_DFN_PARTIC'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PART2.DEFINITION_NAME
PART2.DESCR
PART2.IMMEDIATE_ELIG
PART2.AGE_REQ_FLAG
PART2.AGE_REQUIREMENT
PART2.AGE_DEFINITION
!* GET PA_DURATION.DESCR
PART2.SVC_REQUIREMENT
PART2.SVC_REQUIRE_RULE
PART2.SVC_REQUIREMENT1
PART2.SVC_RQMT1_ALIAS
PART2.SVC_RESULT_NAME1
PART2.SVC_REQUIREMENT2
PART2.SVC_RQMT2_ALIAS
PART2.SVC_RESULT_NAME2
PART2.DATE_ADJUSTMENTS
!*  do Format-DateTime(&PART2.DATE_ADJUSTMENTS, $part.date_adjustments, {DEFDATE}, '', '',)
PART2.ROUNDING_METHOD
!*  LOOK UP CORRESPONDING PA_DATE_OPT.DESCR
PART2.MONTH1
PART2.DAY1
PART2.MONTH2
PART2.DAY2
PART2.MONTH3
PART2.DAY3
PART2.MONTH4
PART2.DAY4

FROM PS_PA_DFN_PARTIC PART2
WHERE PART2.DEFINITION_NAME = $defn_name
END-SELECT

print 'Description: '             (+1,4)
print &PART2.DESCR                     ()
print 'Immediate Eligibility: '       (+2,5)
print &PART2.IMMEDIATE_ELIG            ()
print 'Participation Age Requirements -' (+1,5)
print 'Required: '                    (+1,10)
print &PART2.AGE_REQ_FLAG              ()
print 'Age: '                       (+1,10)
print &PART2.AGE_REQUIREMENT           ()
print 'Result: '                    (+1,10)
print &PART2.AGE_DEFINITION            ()

let $sql-statement = 'PAT07-PA_DURATION'
BEGIN-SELECT
DUR.DESCR                             (,+5)
FROM PS_PA_DURATION DUR
WHERE  DUR.RESULT_NAME = &PART2.AGE_DEFINITION
END-SELECT

print 'Service Requirements -'         (+1,5)
print 'Required: '                     (+1,10)
print &PART2.SVC_REQUIREMENT            ()
  move 'SVC_REQUIRE_RULE'      to $FieldName
  move &PART2.SVC_REQUIRE_RULE  to $FieldValue
  do Read-translate-Table
  print $XlatLongName                  (+1,10)
if &PART2.SVC_REQUIREMENT = 'Y'
   print 'Service 1: '                    (+1,10)
   if &PART2.SVC_RQMT1_ALIAS <> ' '
      print &PART2.SVC_RQMT1_ALIAS ()
   ELSE
      print &PART2.SVC_REQUIREMENT1 ()
   END-IF
   print 'Result: '                      (,+10)
   print &PART2.SVC_RESULT_NAME1 ()
   print 'Service 2: '                (+1,10)
   if &PART2.SVC_RQMT2_ALIAS <> ' '
      print &PART2.SVC_RQMT2_ALIAS ()
   ELSE
      print &PART2.SVC_REQUIREMENT2 ()
   END-IF
   print 'Result: '                      (,+10)
   print &PART2.SVC_RESULT_NAME2 ()
END-IF
print 'Participation Date Adjustments: ' (+1,5)
  move 'DATE_ADJUSTMENTS'      to $FieldName
  move &PART2.DATE_ADJUSTMENTS  to $fieldvalue
  do Read-translate-Table
  print $XlatLongName                 ()
  evaluate &PART2.DATE_ADJUSTMENTS
     when = 'R'
        print &PART2.ROUNDING_METHOD  (,+2)
!* BEGIN-SELECT
!* DATEOPT.DESCR                     (,+10)
!* FROM PS_PA_DATE_OPT DATEOPT
!* WHERE  DATEOPT.OPTION_NAME = &PART2.ROUNDING_METHOD
!* END-SELECT
        break
     when = 'C'
        print &PART2.MONTH1  (,+5)
        print '/'           ()
        print &PART2.DAY1    ()
        print '   '         ()
        print &PART2.MONTH2  ()
        print '/'           ()
        print &PART2.DAY2    ()
        break
     when = 'F'
        print &PART2.MONTH3  (,+5)
        print '/'           ()
        print &PART2.DAY3    ()
        print '   '         ()
        print &PART2.MONTH4  ()
        print '/'           ()
        print &PART2.DAY4    ()
        break
  END-EVALUATE
end-procedure


!*
!* get the plan vesting                                              *!
!*                                                                   *!
!**********************************
begin-procedure print-vesting
!**********************************


let $sql-statement = 'PAT07-PA_DFN_VEST'
BEGIN-SELECT ON-ERROR=SQL-ERROR
VEST.DEFINITION_NAME
VEST.DESCR
VEST.IMMEDIATE_VESTING
VEST.COND_DISABILITY
VEST.COND_DEATH
VEST.COND_CUSTOM
VEST.COND_STMT
VEST.VEST_RETIRE_TYPES
VEST.COND_USER_CODE
VEST.DEATH_NO_SPOUSE
VEST.CONTRIB_WITHDRAWAL
VEST.MIN_VEST_TYPE
VEST.MIN_VEST
VEST.MIN_VEST_ALIAS
VEST.FORFEIT_CUSTOM
VEST.FORFEIT_STMT
VEST.FORFEIT_USER_CODE
FROM PS_PA_DFN_VEST VEST
WHERE VEST.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*   panel pa_vest_schedule
!*
print 'Description: '             (+1,4)
print &VEST.DESCR                     ()
!*
print 'Vesting Schedule(s) -' (+2,5)


let $sql-statement = 'PAT07-PA_DFN_VESTSCHD'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Schedule Name: ' (+1,10)
VSCHED.SCHED_NAME ()
  print 'Interpolate: ' (+1,15)
VSCHED.INTERPOLATE_VST ()
  print 'Schedule Type: ' (+1,15)
VSCHED.SCHED_TYPE
  move 'SCHED_TYPE'        to $FieldName
  move &VSCHED.SCHED_TYPE  to $fieldvalue
  do Read-translate-Table
  print $XlatLongName      ()
VSCHED.TABLE_USE_NAME
VSCHED.CLIFF_SVC_RSLT
VSCHED.STEP_SVC_RSLT
VSCHED.AGE_RSLT
VSCHED.CLIFF_SCHED
VSCHED.CLIFF_SCHED_ALIAS
VSCHED.CLIFF_SCHED_TYPE
   evaluate &VSCHED.SCHED_TYPE
      WHEN = 'C'
         print 'Cliff Service Result: ' (+1,20)
         print &VSCHED.CLIFF_SVC_RSLT ()
         print '100% Vested After: ' (+1,20)
         if &VSCHED.CLIFF_SCHED_TYPE = 'N'
            print &VSCHED.CLIFF_SCHED ()
         else
            print &VSCHED.CLIFF_SCHED_ALIAS ()
         end-if
         print ' years' ()
         break
      WHEN = 'S'
         print 'Step Service Result: ' (+1,20)
         print &VSCHED.STEP_SVC_RSLT ()
         do get-veststeps
         break
      WHEN = 'A'
         print 'Age Result: ' (+1,20)
         print &VSCHED.AGE_RSLT ()
         do get-vestages
         break
      WHEN = 'U'
         print 'Refer to User Code' (+1,20)
         break
      WHEN = 'T'
         print 'Table Use: ' (+1,20)
         print &VSCHED.TABLE_USE_NAME ()
         break
   END-EVALUATE
FROM PS_PA_DFN_VESTSCHD VSCHED
WHERE VSCHED.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*
!* panel pa_vest_conditions
!*
print 'Full Vesting Conditions -' (+2,5)
print 'Disability: ' (+1,10)
print &VEST.COND_DISABILITY ()
print 'Death: ' (+1,10)
print &VEST.COND_DEATH ()
print 'Custom Statement: ' (+1,10)
print &VEST.COND_CUSTOM ()
if &VEST.COND_CUSTOM = 'Y'
  print &VEST.COND_STMT (,+2)
END-IF
print 'Retirement Types: ' (+1,10)
print &VEST.VEST_RETIRE_TYPES ()
if &VEST.VEST_RETIRE_TYPES = 'Y'
  print '-- Types --' (+1,15)
  do get-retire-type
END-IF
print 'User Code: ' (+1,10)
print &VEST.COND_USER_CODE ()
print 'Forfeiture Conditions -' (+2,5)
print 'Death with No Spouse Beneficiaries: ' (+1,10)
print &VEST.DEATH_NO_SPOUSE ()
print 'Withdrawal of Contributions: ' (+1,10)
print &VEST.CONTRIB_WITHDRAWAL ()
if &VEST.CONTRIB_WITHDRAWAL = 'Y'
   print 'Maximum Vesting Percentage: ' (+1,15)
   if &VEST.MIN_VEST_TYPE = 'N'
      print 'Number: ' (+1,20)
      print &VEST.MIN_VEST ()
   else
      print 'Alias: ' (+1,20)
      print &VEST.MIN_VEST_ALIAS ()
      move &VEST.MIN_VEST_ALIAS to $ALIAS_NAME
!****** DO THIS      do print-alias
!****** DO THIS      do print-alias
!****** DO THIS      do print-alias
!****** DO THIS      do print-alias
!****** DO THIS      do print-alias
   end-if
end-if
print 'Custom Statement: ' (+1,10)
print &VEST.FORFEIT_CUSTOM ()
if &VEST.FORFEIT_CUSTOM = 'Y'
   print &VEST.FORFEIT_STMT (,+5)
END-IF
print 'User Code: ' (+1,10)
print &VEST.COND_USER_CODE ()
end-procedure


!*
!* get the retire type based on definition
!*
!**********************************
begin-procedure get-retire-type
!**********************************


let $sql-statement = 'PAT07-PA_DFN_VEST_RET'
BEGIN-SELECT ON-ERROR=SQL-ERROR
RET.RETIRE_TYPE (+1,15)
FROM PS_PA_DFN_VEST_RET RET
WHERE RET.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*                                                                   *!
end-procedure


!*                                                                   *!
!* get vest steps                                                    *!
!*                                                                   *!
!**********************************
begin-procedure get-veststeps
!**********************************

print 'Service' (+1,30)
print 'Percent' (,45)
print '_______' (+1,30)
print '_______' (,45)


let $sql-statement = 'PAT07-PA_DFN_VESTSTEP'
BEGIN-SELECT ON-ERROR=SQL-ERROR
VSTEP.SERVICE_FROM (+1,25)
VSTEP.STEP_PERCENT (,40)
FROM PS_PA_DFN_VESTSTEP VSTEP
WHERE VSTEP.DEFINITION_NAME = $DEFN_NAME
AND VSTEP.SCHED_NAME = &VSCHED.SCHED_NAME
END-SELECT

end-procedure


!*                                                                   *!
!* get vest ages                                                     *!
!*                                                                   *!
!**********************************
begin-procedure get-vestages
!**********************************
!*                                                                   *!
print 'Age' (+1,30)
print 'Percent' (,45)
print '_______' (+1,30)
print '_______' (,45)
!*

let $sql-statement = 'PAT07-PA_DFN_VEST_AGE '
BEGIN-SELECT ON-ERROR=SQL-ERROR
VAGE.FROM_AGE (+1,25)
VAGE.AGE_PERCENT (,40)
FROM PS_PA_DFN_VEST_AGE VAGE
WHERE VAGE.DEFINITION_NAME = $DEFN_NAME
AND VAGE.SCHED_NAME = &VSCHED.SCHED_NAME
END-SELECT
!*
end-procedure


!*
!* get the benefit eligibility                                       *!
!*                                                                   *!
!**********************************
begin-procedure print-benelig
!**********************************

!BEGIN-SELECT ON-ERROR=SQL-ERROR
!*BENDATE.DEFINITION_NAME
!*BENDATE.DESCR
!*BENDATE.BEN_CMNC_DATE_FLD
!*BENDATE.CUStoM_STMT_NAME
!*FROM PS_PA_DFN_BEN_DATE BENDATE
!*WHERE BENDATE.DEFINITION_NAME = $DEFN_NAME
!*END-SELECT
!*
!*print 'Description: ' (+1,4)
!*print &BENDATE.DESCR ()
!*
print 'Criteria Selection -' (+2,5)
print 'And'                  (+1,30)
print 'Min'                  (,34)
print 'Age'                  (,38)
print 'Min'                  (,49)
print 'Service'              (,54)
print 'Min'                  (,65)
print 'Custom'               (,69)
print 'Definition'           (+1,10)
print 'Name'                 (,21)
print '/Or'                  (,30)
print 'Age'                  (,34)
print 'Definition'           (,38)
print 'Svc'                  (,49)
print 'Definition'           (,54)
print 'Pts'                  (,65)
print 'Statement'            (,69)
print '----------'           (+1,10)
print '--------'                 (,21)
print '---'                  (,30)
print '---'                  (,34)
print '----------'       (,38)
print '---'                  (,49)
print '----------'   (,54)
print '---'                  (,65)
print '---------'     (,69)



let $sql-statement = 'PAT07-PA_DFN_BEN_ELIG'
BEGIN-SELECT ON-ERROR=SQL-ERROR
BENELIG.DEFINITION_NAME     (+1,10)
BENELIG.CLAUSE_KEY          (,21)
BENELIG.CLAUSE_COMPARISON
  move 'CLAUSE_COMPARISON' to $FieldName
  move &BENELIG.CLAUSE_COMPARISON  to $fieldvalue
  do Read-translate-Table
  print $XlatShortName      (,30)
BENELIG.AGE_MINIMUM         (,34)
BENELIG.AGE_DEFINITION      (,38)
BENELIG.SERVICE_MINIMUM     (,49)
BENELIG.SERVICE_DEFINITION  (,54)
BENELIG.POINTS_MINIMUM      (,65)
BENELIG.DB_CUSTOM_STMT      (,69)
FROM PS_PA_DFN_BEN_ELIG BENELIG
WHERE BENELIG.DEFINITION_NAME = $DEFN_NAME
END-SELECT


!*
!* panel pa_benelig_com_ez
!*

let $sql-statement = 'PAT07-PA_DATE'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PADATE.DESCR
FROM  PS_PA_DATE PADATE
!* WHERE  PADATE.RESULT_NAME = &BENDATE.BEN_CMNC_DATE_FLD
END-SELECT


let $sql-statement = 'PAT07-PA_CUSTOM'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CUSTOM.DESCR
FROM  PS_PA_CUSTOM CUSTOM
!* WHERE   CUSTOM.CUSTOM_STMT_NAME = &BENDATE.CUSTOM_STMT_NAME
END-SELECT

!if &BENDATE.BEN_CMNC_DATE_FLD  <>  ' ' AND
!  &PADATE.DESCR <> ' '                 AND
!  &BENDATE.CUSTOM_STMT_NAME <> ' '     AND
!  &CUSTOM.DESCR <> ' '
!   print 'Date Definition Parameters - '   (+2,5)
!   print 'Benefit Commencement Date Field: ' (+1,10)
!   print &BENDATE.BEN_CMNC_DATE_FLD ()
!   print &PADATE.DESCR (,+5)
!   print 'Custom Statement Name: ' (+1,10)
!   print &BENDATE.CUSTOM_STMT_NAME ()
!   print &CUSTOM.DESCR (,+5)
!END-IF

end-procedure


!*
!*
!* get the average earnings                                          *!
!*                                                                   *!
!**********************************
begin-procedure print-fae
!**********************************

!*  PANEL PA_DFN_AVGEARN


let $sql-statement = 'PAT07-PA_DFN_AVGEARN'
BEGIN-SELECT ON-ERROR=SQL-ERROR
FAE.DESCR
FAE.HIGH_PERIODS
FAE.CONSECUTIVE_IND
FAE.AVERAGE_FROM
FAE.LAST_PERIODS
FAE.PERIOD_START_TYPE
FAE.PERIOD_START_DATE
  move '1' to $Year4
  do Format-DateTime(&FAE.PERIOD_START_DATE , $fae.period_start_date, {DEFDATE}, '', '',)
FAE.PERIOD_START_ALIAS
FAE.PERIOD_STOP_TYPE
FAE.PERIOD_STOP_DATE
  move '1' to $Year4
  do Format-DateTime(&FAE.PERIOD_STOP_DATE  , $fae.period_stop_date, {DEFDATE}, '', '',)
FAE.PERIOD_STOP_ALIAS
FAE.EARNINGS_TYPE
FAE.DETERMINE_PARTIAL
FAE.PARTIAL_METHOD
FAE.PROJECT_METHOD
FAE.FINAL_METHOD
FAE.ZERO_METHOD
FAE.LIMIT_METHOD
FAE.LIMIT_401A17_NAME
FAE.GENERATED_METHOD
FAE.SHORT_SVC_METHOD
FAE.SHORT_SVC_DEF
FAE.PER_START_ALIAST
FAE.PERIOD_STOP_ALIAST
FROM PS_PA_DFN_AVGEARN FAE
WHERE FAE.DEFINITION_NAME = $DEFN_NAME
END-SELECT

print 'Description: ' (+1,4)
print &FAE.DESCR  ()
!*
!* from PA_AVG_EARNS_PARMS
!*
print 'Average Earnings Parameters -' (+2,5)
print 'Find the Highest -'  (+1,10)
print 'Periods: ' (+1,15)
print &FAE.HIGH_PERIODS ()
print 'Consecutive: '  (,+5)
print &FAE.CONSECUTIVE_IND ()
print 'Take the Average from -' (+1,5)
evaluate &FAE.AVERAGE_FROM
   WHEN = 'C'
      print 'Career Earnings' (+1,10)
      break
   WHEN = 'L'
      print 'Out of the Last: ' (+1,10)
      print &FAE.LAST_PERIODS (,+5)
      print ' periods' ()
      break
   WHEN = 'D'
      print 'Between Dates' (+1,10)
      print 'Start Date: ' (+1,15)
      if &FAE.PERIOD_START_TYPE = 'D'
         print $fae.period_start_date ()
      ELSE
         print &FAE.PERIOD_START_ALIAS ()
      END-IF
      print 'STOp Date:  ' (+1,15)
      if &FAE.PERIOD_STOP_TYPE = 'D'
         print $fae.period_stop_date ()
      ELSE
         print &FAE.PERIOD_STOP_ALIAS ()
      END-IF
      break
END-EVALUATE

print 'Use Consolidated Earnings -' (+2,5)
print 'Name: ' (+1,10)
print &FAE.EARNINGS_TYPE ()
let $sql-statement = 'PAT07-PA_CONS_EARN_VW'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CEARN.DESCR  (,+5)
FROM  PS_PA_CONS_EARN_VW CEARN
WHERE  CEARN.FUNCTN_RESULT_NM = &FAE.EARNINGS_TYPE
END-SELECT

!*
!*  from PA_AVG_EARNS_PARM2
!*
print 'Partial Period Options -' (+2,5)
move 'PARTIAL_METHOD'      to $FieldName
move &FAE.PARTIAL_METHOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
print 'Count: ' (+1,10)
move 'DETERMINE_PARTIAL'      to $FieldName
move &FAE.DETERMINE_PARTIAL   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 ()
print 'Final Period Options -' (+1,5)
move 'FINAL_METHOD'      to $FieldName
move &FAE.FINAL_METHOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
print 'Limit Options -'       (+1,5)
move 'LIMIT_METHOD'      to $FieldName
move &FAE.LIMIT_METHOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
if &FAE.LIMIT_METHOD = '4'
   print 'Name: ' (+1,15)
   print &FAE.LIMIT_401A17_NAME ()
END-IF
print 'Zeroes -'     (+1,5)
move 'ZERO_METHOD'      to $FieldName
move &FAE.ZERO_METHOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
print 'Short Service Options -'     (+1,5)
move 'SHORT_SVC_METHOD'      to $FieldName
move &FAE.SHORT_SVC_METHOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
if &FAE.SHORT_SVC_METHOD = 'D'
   print 'Definition: ' (+1,15)
   print &FAE.SHORT_SVC_DEF ()
END-IF
print 'Generated Earnings -'     (+1,5)
move 'GENERATED_METHOD'      to $FieldName
move &FAE.GENERATED_METHOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
print 'Project Method: ' (+1,5)
print &FAE.PROJECT_METHOD ()

end-procedure


!*
!* get the cash balances                                                       *!
!*                                                                   *!
!**********************************
begin-procedure print-cashbal
!**********************************


let $sql-statement = 'PAT07-PA_DFN_ACCOUNT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ACCT.DESCR
ACCT.NRD_NAME
ACCT.EARNINGS_TYPE
ACCT.APPLY_401A17
ACCT.DFN_401A17
ACCT.ACCUM_PD
ACCT.PROJECT_EARNINGS
ACCT.DFN_INTEREST
ACCT.DFN_INTEREST2
ACCT.DFN_INTEREST_CRED
ACCT.CREDIT_CALC
ACCT.STEP_RT_THRESHOLD
ACCT.TBL_LOOKUP_PCT
ACCT.STEP_RT_THD_TBL_NM
ACCT.TA_TBL_LOOKUP_PCT
ACCT.TA_THD_TBL_NM
ACCT.TA_TBL_OPTIONS
ACCT.STEP_RT_THD_AMT
ACCT.MINIMUM_FLAG
ACCT.CREDIT_MIN_TYPE
ACCT.CREDIT_MIN_ALIAS
ACCT.MAXIMUM_FLAG
ACCT.CREDIT_MAX_TYPE
ACCT.CREDIT_MAX_ALIAS
ACCT.CREDIT_FULL_PERIOD
ACCT.FULL_PCT1
ACCT.FULL_PCT2
ACCT.FULL_TABLE1
ACCT.FULL_TABLE2
ACCT.FULL_TA_TBL1
ACCT.FULL_TA_TBL2
ACCT.FULL_TA_TBL_OPT1
ACCT.FULL_TA_AGE_STRT1
ACCT.FULL_TA_AGE_MTHD1
ACCT.FULL_TA_SVC_NM1
ACCT.FULL_TA_AGE_OPT1
ACCT.FULL_TA_SVC_OPT1
ACCT.FULL_TA_TBL_OPT2
ACCT.FULL_TA_AGE_STRT2
ACCT.FULL_TA_AGE_MTHD2
ACCT.FULL_TA_SVC_MN2
ACCT.FULL_TA_AGE_OPT2
ACCT.FULL_TA_SVC_OPT2
ACCT.FULL_STMT1
ACCT.FULL_STMT2
ACCT.CREDIT_PARTIAL
FROM PS_PA_DFN_ACCOUNT ACCT
WHERE ACCT.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!* panel pa_cshbal_acct_c1
!*
print 'Description: '             (+1,4)
print &ACCT.DESCR ()
print 'Normal Retirement Date: ' (+2,5)
print &ACCT.NRD_NAME ()
print 'Credit Information -' (+1,5)
print 'Base Credit on Consolidated Earnings: ' (+1,10)
print &ACCT.EARNINGS_TYPE ()
print 'Accumulation Period: ' (+1,10)
move 'ACCUM_PD'         to $FieldName
move &ACCT.ACCUM_PD  to $fieldvalue
do Read-translate-Table
print $XlatLongName                 ()
print 'Apply 401(a)(17) Limits: ' (+1,10)
print &ACCT.APPLY_401A17 ()
print 'Projection Method: ' (+1,10)
print &ACCT.PROJECT_EARNINGS ()
print 'Interest Methods -' (+1,5)
print 'Balance Interest to Event: ' (+1,10)
print &ACCT.DFN_INTEREST ()
print 'Balance Interest after Event: ' (+1,10)
print &ACCT.DFN_INTEREST2 ()
print 'Credit Interest: ' (+1,10)
print &ACCT.DFN_INTEREST_CRED ()
!*
!*  pa_cshbal_acct_c2
!*
print 'Calculate Credit according to: ' (+2,10)
move 'CREDIT_CALC'      to $FieldName
move &ACCT.CREDIT_CALC  to $fieldvalue
do Read-translate-Table
print $XlatLongName                 ()
if &ACCT.CREDIT_CALC = 'S'
   evaluate &ACCT.STEP_RT_THRESHOLD
      when = 'P'
         print &ACCT.TBL_LOOKUP_PCT (+1,15)
         print ' % of Table Lookup: ' ()
         print &ACCT.STEP_RT_THD_TBL_NM (,+5)
         break
      when = 'T'
         print &ACCT.TA_TBL_LOOKUP_PCT (+1,15)
         print ' % of Time Aware Table Lookup: ' ()
         print &ACCT.TA_THD_TBL_NM ()
         print 'Time Aware Lookup Options -' (+1,15)
         move 'TA_TBL_OPTIONS'      to $FieldName
         move &ACCT.TA_TBL_OPTIONS  to $fieldvalue
         do Read-translate-Table
         print $XlatLongName                 (+1,10)
         break
      when = 'C'
         print 'Constant Amount: ' (+1,15)
         print &ACCT.STEP_RT_THD_AMT ()
         break
      when = 'U'
         print 'USER CODE.' (+1,15)
         break
   END-EVALUATE
END-IF
print 'Subject to Minimum: ' (+1,10)
print &ACCT.MINIMUM_FLAG ()
if &ACCT.MINIMUM_FLAG = 'Y'
   if &ACCT.CREDIT_MIN_TYPE = 'L'
      print 'Lookup Table: ' (+1,15)
      print &ACCT.CREDIT_MIN_ALIAS ()
   ELSE
      print 'USER CODE.' (+1,15)
   END-IF
END-IF
!*
print 'Subject to Maximum: ' (+1,10)
print &ACCT.MAXIMUM_FLAG ()
if &ACCT.MAXIMUM_FLAG = 'Y'
   if &ACCT.CREDIT_MAX_TYPE = 'L'
      print 'Lookup Table: ' (+1,15)
      print &ACCT.CREDIT_MAX_ALIAS ()
   ELSE
      print 'USER CODE.' (+1,15)
   END-IF
END-IF
!*
!* panel pa_cshbal_acct_c3
!*
print 'Full Period Rules -' (+2,5)
evaluate &ACCT.CREDIT_FULL_PERIOD
   WHEN = 'F'
      print 'Flat Percent [' (+1,10)
      print &ACCT.FULL_PCT1 ()
      print '] up to threshold, and [' ()
      print &ACCT.FULL_PCT2 ()
      print '] above threshold' ()
  WHEN = 'U'
      print 'User Table [' (+1,10)
      print &ACCT.FULL_TABLE1 ()
      print '] up to threshold, and [' ()
      print &ACCT.FULL_TABLE2 ()
      print '] above threshold' ()
  WHEN = 'T'
      print 'Time Aware Table [' (+1,10)
      print &ACCT.FULL_TA_TBL1 ()
      print '] up to threshold, and [' ()
      print &ACCT.FULL_TA_TBL2 ()
      print '] above threshold'  ()
      move 'FULL_TA_TBL_OPT1'      to $FieldName
      move &ACCT.FULL_TA_TBL_OPT1  to $fieldvalue
      do Read-translate-Table
      print 'Up to -' (+1,15)
      print $XlatLongName                 (+1,20)
      if &ACCT.FULL_TA_TBL_OPT1 <> 'SVC'
         print 'Age Start: ' (+1,25)
         print &ACCT.FULL_TA_AGE_STRT1 ()
         print 'Age Method: ' (+1,25)
         print &ACCT.FULL_TA_AGE_MTHD1 ()
         print 'Age End Date: '  (+1,25)
         move 'FULL_TA_AGE_OPT1'      to $FieldName
         move &ACCT.FULL_TA_AGE_OPT1  to $fieldvalue
         do Read-translate-Table
         print $XlatLongName          ()
      END-IF
      if &ACCT.FULL_TA_TBL_OPT1 <> 'AGE'
         print 'Service Name: ' (+1,25)
         print &ACCT.FULL_TA_SVC_NM1 ()
         print 'Service As of Date: ' (+1,25)
         move 'FULL_TA_SVC_OPT1'      to $FieldName
         move &ACCT.FULL_TA_SVC_OPT1  to $fieldvalue
         do Read-translate-Table
         print $XlatLongName                 ()
      END-IF
      move 'FULL_TA_TBL_OPT2'      to $FieldName
      move &ACCT.FULL_TA_TBL_OPT2  to $fieldvalue
      do Read-translate-Table
      print 'Above -' (+1,15)
      print $XlatLongName                 (+1,20)
      if &ACCT.FULL_TA_TBL_OPT2 <> 'SVC'
         print 'Age Start: ' (+1,25)
         print &ACCT.FULL_TA_AGE_STRT2 ()
         print 'Age Method: ' (+1,25)
         print &ACCT.FULL_TA_AGE_MTHD2 ()
         print 'Age End Date: ' (+1,25)
         move 'FULL_TA_AGE_OPT2'      to $FieldName
         move &ACCT.FULL_TA_AGE_OPT2  to $fieldvalue
         do Read-translate-Table
         print $XlatLongName           ()
      END-IF
      if &ACCT.FULL_TA_TBL_OPT2 <> 'AGE'
         print 'Service Name: ' (+1,25)
         print &ACCT.FULL_TA_SVC_MN2 ()
         print 'Service As of Date: ' (+1,25)
         move 'FULL_TA_SVC_OPT1'      to $FieldName
         move &ACCT.FULL_TA_SVC_OPT2  to $fieldvalue
         do Read-translate-Table
         print $XlatLongName                 ()
      END-IF

  WHEN = 'C'
      print 'Custom Statement [' (+1,10)
      print &ACCT.FULL_STMT1 ()
      print '] up to threshold, and [' ()
      print &ACCT.FULL_STMT2 ()
      print '] above threshold' ()

END-EVALUATE
print 'Partial/Mini-Period Rules: ' (+2,5)
move 'CREDIT_PARTIAL'      to $FieldName
move &ACCT.CREDIT_PARTIAL  to $fieldvalue
do Read-translate-Table
print $XlatLongName        ()
!*
end-procedure


!*
!* get the employee accounts                                         *!
!*                                                                   *!
!**********************************
begin-procedure print-emplaccts
!**********************************

!*  panel pa-contrib-acct-c1


let $sql-statement = 'PAT07-PA_DFN_ACCOUNT '
BEGIN-SELECT ON-ERROR=SQL-ERROR
ACCT2.DESCR
ACCT2.CONS_DEDUCT_NAME
ACCT2.ACCUM_PD
ACCT2.PROJECT_CONSOL
ACCT2.APPLY_401A17_PROJ
ACCT2.DFN_401A17
ACCT2.PROJECT_EARNINGS
ACCT2.DFN_INTEREST
ACCT2.DFN_INTEREST_CRED
FROM PS_PA_DFN_ACCOUNT ACCT2
WHERE ACCT2.DEFINITION_NAME = $DEFN_NAME
END-SELECT
print 'Description: '             (+1,4)
print &ACCT2.DESCR ()
print 'Credit Information -' (+2,5)
print 'Base Credit on Consolidated Deductions: ' (+1,10)
print &ACCT2.CONS_DEDUCT_NAME ()
print 'Accumulation Period: ' (+1,10)
move 'ACCUM_PERIOD'      to $FieldName
move &ACCT2.ACCUM_PD      to $fieldvalue
do Read-translate-Table
print $XlatLongName        ()
print 'Projection Rule -' (+1,10)
print 'Project Consolidated Earnings: ' (+1,15)
print &ACCT2.PROJECT_CONSOL ()
print 'Projection Method: '  (+1,15)
print &ACCT2.PROJECT_EARNINGS ()
print 'Apply 401(a)(17) Limits: ' (+1,15)
print &ACCT2.APPLY_401A17_PROJ ()
if &ACCT2.APPLY_401A17_PROJ = 'Y'
   print 'Projection Method: ' (+1,20)
   print &ACCT2.DFN_401A17 ()
END-IF
print 'Interest Methods -' (+1,10)
print 'Balance Interest to Event: ' (+1,15)
print &ACCT2.DFN_INTEREST ()
print 'Credit Interest: ' (+1,15)
print &ACCT2.DFN_INTEREST_CRED ()
!*
end-procedure


!*
!* get the social security                                           *!
!*                                                                   *!
!**********************************
begin-procedure print-pia
!**********************************

let $sql-statement = 'PAT07-PA_DFN_PIA'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PIA.DESCR
PIA.SS_BENEFIT_TYPE
PIA.USE_EARN_PERIOD
PIA.EARN_CONSOLIDATION
PIA.REGRESSION_METHOD
PIA.REGRESS_PCT_TYPE
PIA.REGRESS_PCT
PIA.REGRESS_PCT_ALIAS
PIA.LAG_REGRESSION
PIA.LAG_PCT_TYPE
PIA.LAG_PCT
PIA.LAG_PCT_ALIAS
PIA.PROJECTION_METHOD
PIA.PROJECT_METHOD
PIA.TERM_PROJECTION
PIA.ANNUALIZE_METHOD
PIA.COMMENCE_OPTION
PIA.COMMENCE_AGE_TYPE
PIA.COMMENCE_AGE
PIA.COMMENCE_AGE_ALIAS
PIA.SS_COMMENCE_DT
PIA.SS_COMMENCE_ALIAS
PIA.SS_COMMENCE_TYPE
PIA.EARLIEST_AGE_TYPE
PIA.EARLIEST_AGE
PIA.EARLIEST_AGE_ALIAS
PIA.LATEST_OPTION
PIA.LATEST_AGE_TYPE
PIA.LATEST_AGE
PIA.LATEST_AGE_ALIAS
PIA.EARLY_COMMENCE
PIA.DEFERRED_CREDIT
PIA.ATTAINED_AGE
PIA.AGE_62_RULE
FROM PS_PA_DFN_PIA PIA
WHERE PIA.DEFINITION_NAME = $DEFN_NAME
END-SELECT
print 'Description: '             (+1,4)
print &PIA.DESCR ()
print 'Social Security Benefit Type: ' (+2,5)
move 'SS_BENEFIT_TYPE'        to $FieldName
move &PIA.SS_BENEFIT_TYPE     to $fieldvalue
do Read-translate-Table
print $XlatLongName        ()
print 'Use -' (+1,5)
print 'Earnings: ' (+1,10)
print &PIA.EARN_CONSOLIDATION ()

let $sql-statement = 'PAT07-PA_CONS_EARN_VW'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CEARN2.DESCR (,+10)
FROM PS_PA_CONS_EARN_VW CEARN2
WHERE CEARN2.FUNCTN_RESULT_NM = $DEFN_NAME
END-SELECT
move 'USE_EARN_PERIOD'        to $FieldName
move &PIA.USE_EARN_PERIOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName        (+1,10)
print 'Earnings Regression Method -' (+1,5)
move 'REGRESSION_METHOD'        to $FieldName
move &PIA.REGRESSION_METHOD   to $fieldvalue
do Read-translate-Table
print $XlatLongName        (+1,10)
if &PIA.REGRESSION_METHOD = 'F'
   if &PIA.REGRESS_PCT_TYPE = 'A'
      print &PIA.REGRESS_PCT_ALIAS (+1,15)
   ELSE
      print &PIA.REGRESS_PCT (+1,15)
   END-IF
END-IF
print 'Lag Year Regression Method -' (+1,5)
move 'LAG_REGRESSION'         to $FieldName
move &PIA.LAG_REGRESSION          to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
if &PIA.LAG_REGRESSION = 'F'
   if &PIA.LAG_PCT_TYPE = 'A'
      print &PIA.LAG_PCT_ALIAS (+1,15)
   ELSE
      print &PIA.LAG_PCT (+1,15)
   END-IF
END-IF
print 'Earnings Projection Method -' (+1,5)
move 'PROJECTION_METHOD'         to $FieldName
move &PIA.PROJECTION_METHOD      to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
if &PIA.PROJECTION_METHOD = 'P'
   print 'Projection Method Name: ' (+1,15)
   print &PIA.PROJECT_METHOD ()
print 'Start Projection - ' (+1,5)
move 'TERM_PROJECTION'         to $FieldName
move &PIA.TERM_PROJECTION      to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (+1,10)
if &PIA.TERM_PROJECTION = 'A'
   print 'by Method: ' (+1,15)
   move 'ANNUALIZE_METHOD'         to $FieldName
   move &PIA.ANNUALIZE_METHOD      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName              (+1,+10)
END-IF
END-IF
print 'Social Security Commencement - ' (+1,5)
move 'COMMENCE_OPTION'     to $FieldName
move &PIA.COMMENCE_OPTION  to $fieldvalue
do Read-translate-Table
print $XlatLongName              ()
if &PIA.COMMENCE_AGE_TYPE = 'A'
   print 'Age: ' (+1,10)
   print &PIA.COMMENCE_AGE ()
ELSE
   if &PIA.COMMENCE_AGE_TYPE = 'N'
      print 'Age: ' (+1,10)
      print &PIA.COMMENCE_AGE ()
   ELSE
      print 'Date: ' (+1,10)
      if &PIA.SS_COMMENCE_TYPE = 'A'
         print &PIA.SS_COMMENCE_ALIAS ()
      ELSE
         print &PIA.SS_COMMENCE_DT ()
      END-if
   END-IF
END-IF
!print 'Initial Entitlement Date: ' (+1,10)
! need to yank out entitlement_alias print
!if &PIA.ENTITLEMENT_TYPE = 'A'
!   print &PIA.ENTITLEMENT_ALIAS ()
!ELSE
!   print &PIA.ENTITLEMENT_DT ()
!END-IF
print 'Social Security Wage History Range -' (+1,5)
print 'Earliest Age: ' (+1,10)
if &PIA.EARLIEST_AGE_TYPE = 'A'
   print &PIA.EARLIEST_AGE_ALIAS ()
ELSE
   print &PIA.EARLIEST_AGE ()
END-IF
print 'Latest Age: ' (+1,10)
move 'LATEST_OPTION'     to $FieldName
move &PIA.LATEST_OPTION  to $fieldvalue
do Read-translate-Table
print $XlatLongName              ()
if &PIA.LATEST_OPTION = 'N'
   print 'Age: ' (+1,10)
if &PIA.LATEST_AGE_TYPE = 'A'
   print &PIA.LATEST_AGE_ALIAS ()
ELSE
   print &PIA.LATEST_AGE ()
END-IF
END-IF
print 'PIA Calculation Rules -' (+1,5)
print 'Apply Early Commence Reduction: ' (+1,10)
print &PIA.EARLY_COMMENCE ()
print 'Apply Deferred Retire Credit: ' (+1,10)
print &PIA.DEFERRED_CREDIT ()
print 'Disregard Attained Age Rule: ' (+1,10)
print &PIA.ATTAINED_AGE ()
print 'Disregard Age 62 Entitle Rule: ' (+1,10)
print &PIA.AGE_62_RULE  ()
!*
end-procedure


!*
!* get the covered comp info                                     *!
!*                                                                   *!
!**********************************
begin-procedure print-covrdcomp
!**********************************

!* panel pa_covered_comp
!*

let $sql-statement = 'PAT07-PA_DFN_COV_COMP'
BEGIN-SELECT ON-ERROR=SQL-ERROR
COVCMP.DESCR
!COVCMP.TBL_EFFDT
!COVCMP.TBL_EFFDT_ALIAS
COVCMP.COMP_BASIS
COVCMP.ROUNDED_TBL
COVCMP.ROUND_EFFDT
COVCMP.EXCLUDE_SSRA
!COVCMP.USE_COV_COMP
FROM PS_PA_DFN_COV_COMP COVCMP
WHERE COVCMP.DEFINITION_NAME = $DEFN_NAME
END-SELECT
print 'Description: '             (+1,4)
print &COVCMP.DESCR ()
!print 'Use Table in Effect on - ' (+2,5)
!if &COVCMP.TBL_EFFDT_ALIAS <> ' '
!   print 'Date: ' (+1,10)
!   print &COVCMP.TBL_EFFDT_ALIAS ()
!ELSE
!   print 'Alias: ' (+1,10)
!   print &COVCMP.TBL_EFFDT ()
!END-IF
print 'Basis: ' (+2,5)
move 'COMP_BASIS'         to $FieldName
move &COVCMP.COMP_BASIS   to $fieldvalue
do Read-translate-Table
print $XlatLongName                 ()
print 'Use Rounded Table: ' (+1,5)
print &COVCMP.ROUNDED_TBL ()
if &COVCMP.ROUNDED_TBL = 'Y'
   print 'Apply $3000 Rounding Effective: ' (+1,10)
   move 'ROUND_EFFDT'         to $FieldName
   move &COVCMP.ROUND_EFFDT   to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
END-IF
print 'Exclude Year of SSRA from Avg (Plan Years Prior to 1995): ' (+1,5)
print &COVCMP.EXCLUDE_SSRA ()
!print 'Use Covered Comp for an Employee Attaining SSRA in Plan' (+1,5)
!print '   Year Corresponding to the Table in Effect for all Employees: ' (+1,5)
!print &COVCMP.USE_COV_COMP ()
end-procedure


!*
!* get the age adjustments                                           *!
!*                                                                   *!
!**********************************
begin-procedure print-age-adjust
!**********************************
!*
!*   panel pa_age_adj_general & pa_age_adj_equiv
!*

let $sql-statement = 'PAT07-PA_DFN_AGE'
BEGIN-SELECT ON-ERROR=SQL-ERROR
AGE.DESCR
AGE.ADJ_START_DT
AGE.ADJ_START_DT_ALIAS
AGE.ADJ_END_DT
AGE.ADJ_END_DT_ALIAS
AGE.NUM_OF_DEC_PLACES
FROM PS_PA_DFN_AGE AGE
WHERE AGE.DEFINITION_NAME = $DEFN_NAME
END-SELECT

print 'Description: '             (+1,4)
print &AGE.DESCR ()

print 'Adjustment Start Date: ' (+2,5)
if &AGE.ADJ_START_DT_ALIAS = ' '
   print &AGE.ADJ_START_DT ()
ELSE
   print &AGE.ADJ_START_DT_ALIAS ()
END-IF
print 'Adjustment End Date:   ' (+1,5)
if &AGE.ADJ_END_DT_ALIAS = ' '
   print &AGE.ADJ_END_DT ()
ELSE
   print &AGE.ADJ_END_DT_ALIAS ()
END-IF
print 'Decimals: ' (+1,5)
print &AGE.NUM_OF_DEC_PLACES ()

print 'Subadjustments -' (+2,5)
let $sql-statement = 'PAT07-PA_DFN_AGE_ADJ'
BEGIN-SELECT ON-ERROR=SQL-ERROR
SUB.SUB_ADJUSTMENT
SUB.USES_METHOD
SUB.METHOD_NAME
SUB.APPLIES_TO
SUB.NUM_OF_DEC_PLACES
SUB.ACTUARIAL_ASSUM
SUB.BN_NORMAL_FORM_NM
SUB.EE_AGE_ADJ_FROM
SUB.EE_ADJ_FROM_AGE
SUB.EE_AGEFROM_ALIAS
SUB.EE_AGE_ADJ_TO
SUB.EE_ADJ_TO_AGE
SUB.EE_AGETO_ALIAS
SUB.BN_AGE_ADJ_FROM
SUB.BN_ADJ_FROM_AGE
SUB.BN_AGEFROM_ALIAST
SUB.BN_AGE_ADJ_TO
SUB.BN_ADJ_TO_AGE
SUB.BN_AGETO_ALIAS
SUB.ADJUST_LENGTH2
SUB.ADJUST_DATE1
SUB.ADJUST_DATE1_ALIAS
SUB.ADJUST_DATE2_ALIAS
SUB.ADJUST_DATE2
SUB.ADJ_DT_DURATN
SUB.ADJUST_AGE1_ALIAS
SUB.ADJUST_AGE1
SUB.ADJUST_AGE2
SUB.ADJUST_AGE2_ALIAS
SUB.ADJ_AGE_DURATN
SUB.ADJUST_LENGTH
SUB.ADJUST_MIN_MAX
SUB.PERIOD_NUM
SUB.PERCENT_FRACTION
  do print-subadjustment
FROM PS_PA_DFN_AGE_ADJ SUB
WHERE SUB.DEFINITION_NAME = $DEFN_NAME
END-SELECT
end-procedure


!*
!**********************************
begin-procedure print-subadjustment
!**********************************
!*
!* panel pa_age_adj_general
!*
   print 'Subadjustment: ' (+1,10)
   print &SUB.SUB_ADJUSTMENT ()
   print 'Uses Method -' (+1,15)
   print 'Method: ' (+1,20)
   print &SUB.USES_METHOD ()
   move 'USES_METHOD'         to $FieldName
   move &SUB.USES_METHOD      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 (,+5)
   print 'Name: ' (+1,20)
   print &SUB.METHOD_NAME ()
   print 'Applies To: ' (+1,15)
   move 'APPLIES_TO'         to $FieldName
   move &SUB.APPLIES_TO      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
   print 'Decimals: '   (+1,15)
   print &SUB.NUM_OF_DEC_PLACES ()
!*
!* panel pa_age_adj_equiv
!*
   print 'Actuarial Assumption Set: ' (+1,15)
   print &SUB.ACTUARIAL_ASSUM ()
   print 'Benefit Formula Name: ' (+1,15)
   print &SUB.BN_NORMAL_FORM_NM ()
   print 'Employee "From" Age -' (+1,15)
   move 'EE_AGE_ADJ_FROM'         to $FieldName
   move &SUB.EE_AGE_ADJ_FROM      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
   if &SUB.EE_AGE_ADJ_FROM = 'A'
      print 'Date: ' (+1,20)
      if &SUB.EE_AGEFROM_ALIAS = ' '
         print &SUB.EE_ADJ_FROM_AGE ()
      ELSE
         print &SUB.EE_AGEFROM_ALIAS ()
      END-IF
   END-IF
   print 'Employee "To" Age -' (+1,15)
   move 'EE_AGE_ADJ_TO'         to $FieldName
   move &SUB.EE_AGE_ADJ_to      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
   if &SUB.EE_AGE_ADJ_TO = 'A'
      print 'Date: ' (+1,20)
      if &SUB.EE_AGETO_ALIAS = ' '
         print &SUB.EE_ADJ_TO_AGE ()
      ELSE
         print &SUB.EE_AGETO_ALIAS ()
      END-IF
   END-IF
   print 'Beneficiary "From" Age -' (+1,15)
   move 'BN_AGE_ADJ_FROM'         to $FieldName
   move &SUB.BN_AGE_ADJ_FROM      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
   if &SUB.BN_AGE_ADJ_FROM = 'A'
      print 'Date: ' (+1,20)
      if &SUB.BN_AGEFROM_ALIAST = ' '
         print &SUB.BN_ADJ_FROM_AGE ()
      ELSE
         print &SUB.BN_AGEFROM_ALIAST ()
      END-IF
   END-IF
   print 'Beneficiary "To" Age -' (+1,15)
   move 'BN_AGE_ADJ_TO'         to $FieldName
   move &SUB.BN_AGE_ADJ_TO      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
   if &SUB.BN_AGE_ADJ_TO = 'A'
      print 'Date: ' (+1,20)
      if &SUB.BN_AGETO_ALIAS = ' '
         print &SUB.BN_ADJ_TO_AGE ()
      ELSE
         print &SUB.BN_AGETO_ALIAS ()
      END-IF
   END-IF
!*
!* panel pa_age_adj_arith1
!*
   print 'Number of Adjustment Periods: ' (+1,15)
   move 'ADJUST_LENGTH2'         to $FieldName
   move &SUB.ADJUST_LENGTH2      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
   evaluate &SUB.ADJUST_LENGTH2
      WHEN = 'D'
         print 'From Date: ' (+1,20)
         if &SUB.ADJUST_DATE1_ALIAS = ' '
            print &SUB.ADJUST_DATE1 ()
         ELSE
            print &SUB.ADJUST_DATE1_ALIAS ()
         END-IF
         print 'To Date:   ' (+1,20)
         if &SUB.ADJUST_DATE2_ALIAS = ' '
            print &SUB.ADJUST_DATE2 ()
         ELSE
            print &SUB.ADJUST_DATE2_ALIAS ()
         END-IF
         print 'Months/Years: ' (+1,20)
         print &SUB.ADJ_DT_DURATN ()
      WHEN = 'A'
         print 'From Age: ' (+1,20)
         if &SUB.ADJUST_AGE1_ALIAS = ' '
            print &SUB.ADJUST_AGE1 ()
         ELSE
            print &SUB.ADJUST_AGE1_ALIAS ()
         END-IF
         print '  To Age: ' (+1,20)
         if &SUB.ADJUST_AGE2_ALIAS = ' '
            print &SUB.ADJUST_AGE2 ()
         ELSE
            print &SUB.ADJUST_AGE2_ALIAS ()
         END-IF
         print 'Months/Years: ' (+1,20)
         print &SUB.ADJ_AGE_DURATN ()
   END-EVALUATE
   if &SUB.ADJUST_MIN_MAX = 'Y'
      print 'Subject to -'(+1,15)
      move 'ADJUST_LENGTH'         to $FieldName
      move &SUB.ADJUST_LENGTH      to $fieldvalue
      do Read-translate-Table
      print $XlatLongName              (+1,20)
      print 'Number of Periods: '      (+1,20)
      print &SUB.PERIOD_NUM ()
   END-IF
!*
!* panel pa_age_adj_arith2
!*
   print 'Rules Use: ' (+1,15)
   move 'PERCENT_FRACTION'         to $FieldName
   move &SUB.PERCENT_FRACTION      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
   print 'Percent per Period' (+1,20)
   print 'Fraction per Period' (,45)
   print 'Over Periods' (,67)
   print '------------------' (+1,20)
   print '-------------------' (,45)
   print '------------' (,67)
let $sql-statement = 'PAT07-PA_DFN_AGE_TBL'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PERS.PERIOD_PCT (+1,28)
PERS.FRACTION1 (,52)
   print ' / ' ()
PERS.FRACTION2 ()
PERS.PERIODS (,70)
FROM PS_PA_DFN_AGE_TBL PERS
WHERE PERS.DEFINITION_NAME = $DEFN_NAME
AND PERS.SUB_ADJUSTMENT = &SUB.SUB_ADJUSTMENT
END-SELECT
!*
end-procedure


!*
!* get the death coverage
!*                                                                   *!
!**********************************
begin-procedure print-deathcvrg
!**********************************

let $sql-statement = 'PAT07-PA_DFN_DEATH'
BEGIN-SELECT ON-ERROR=SQL-ERROR
DEATH.DESCR
DEATH.PERIODS_OPTION
DEATH.NUM_OF_DEC_PLACES
DEATH.ADJUST_TABLE
DEATH.ADJUST_TBL_METHOD
DEATH.ADJUST_DEFINITION
DEATH.APPLY_ADJUSTMENT
DEATH.ROUND_OPTION
DEATH.SEGMENT_DATES
DEATH.PRESERVE_CREDIT
DEATH.PRESERVE_ROW
DEATH.FIXED_LENGTH
DEATH.FIXED_DATE1
DEATH.FIXED_DATE1_ALIAS
DEATH.FIXED_DATE2
DEATH.FIXED_DATE2_ALIAS
DEATH.FIXED_AGE1
DEATH.FIXED_AGE1_ALIAS
DEATH.FIXED_AGE2
DEATH.FIXED_AGE2_ALIAS
DEATH.ADJUST_LENGTH1
DEATH.PERIOD_NUM
DEATH.PERCENT_TYPE
DEATH.PERCENT_FRACTION
FROM PS_PA_DFN_DEATH DEATH
WHERE DEATH.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*   panel pa_death_adj_gen
!*
print 'Description: '             (+1,4)
print &DEATH.DESCR ()
print 'Number of Decimals To Round To: ' (+2,5)
print &DEATH.NUM_OF_DEC_PLACES ()
print 'Calculate Reduction Using: ' (+1,5)
   move 'ADJUST_DEFINITION'         to $FieldName
   move &DEATH.ADJUST_DEFINITION      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName                 ()
evaluate &DEATH.ADJUST_DEFINITION
   WHEN = 'A'
      print 'Periods Counting Option: ' (+1,10)
      print &DEATH.PERIODS_OPTION ()
      !*
      !*   panel  pa_death_Adj_gen2
      !*
      print 'Preserve Credit -' (+1,5)
      print 'Between Definitions: ' (+1,10)
      print &DEATH.PRESERVE_CREDIT ()
      print 'Between Coverage History Rows: ' (+1,10)
      print &DEATH.PRESERVE_ROW ()
      print 'Apply the Reduction to: ' (+1,5)
      move 'APPLY_ADJUSTMENT'         to $FieldName
      move &DEATH.APPLY_ADJUSTMENT      to $fieldvalue
      do Read-translate-Table
      print $XlatLongName                 ()
      if &DEATH.APPLY_ADJUSTMENT = 'H'
         print 'Round Opt for Effective Date: ' (+1,10)
         print &DEATH.ROUND_OPTION ()
      ELSE
         print 'Stays within Segment Dates: ' (+1,10)
         print &DEATH.SEGMENT_DATES ()
         !*
         !*    panel pa_death_adj_arith
         !*
         print 'Determine Fixed Period Length -' (+1,5)
         move 'FIXED_LENGTH'           to $FieldName
         move &DEATH.FIXED_LENGTH      to $fieldvalue
         do Read-translate-Table
         print $XlatLongName                 (+1,10)
         evaluate &DEATH.FIXED_LENGTH
            WHEN = 'D'
               print 'Start Date: ' (+1,15)
               if &DEATH.FIXED_DATE1_ALIAS = ' '
                  print &DEATH.FIXED_DATE1 ()
               ELSE
                  print &DEATH.FIXED_DATE1_ALIAS ()
               END-IF
               print 'Stop Date:  ' (+1,15)
               if &DEATH.FIXED_DATE2_ALIAS = ' '
                  print &DEATH.FIXED_DATE2  ()
               ELSE
                  print &DEATH.FIXED_DATE2_ALIAS ()
               END-IF
            WHEN = 'A'
               print 'Start Age: ' (+1,15)
               if &DEATH.FIXED_AGE1_ALIAS = ' '
                  print &DEATH.FIXED_AGE1 ()
               ELSE
                  print &DEATH.FIXED_AGE1_ALIAS ()
               END-IF
               print 'STOp Age:  ' (+1,15)
               if &DEATH.FIXED_AGE2_ALIAS = ' '
                  print &DEATH.FIXED_AGE2 ()
               ELSE
                  print &DEATH.FIXED_AGE2_ALIAS ()
               END-IF
         END-EVALUATE
         !*
         !*    panel  pa_death_adj_cov
         !*
         print 'Percentages are: ' (+1,5)
         move 'PERCENT_TYPE'           to $FieldName
         move &DEATH.PERCENT_TYPE      to $fieldvalue
         do Read-translate-Table
         print $XlatLongName                 ()
         print 'Rule Uses: ' (+1,10)
         move 'PERCENT_FRACTION'           to $FieldName
         move &DEATH.PERCENT_FRACTION      to $fieldvalue
         do Read-translate-Table
         print $XlatLongName                 ()
         if &DEATH.PERCENT_TYPE = 'L'
            print 'Length of Coverage Based - ' (+1,15)
            print 'Fraction of' (+1,20)
            print 'Percent per Period' (,40)
            print 'over Periods' (,60)
            print '-----------' (+1,20)
            print '------------------' (,40)
            print '------------' (,60)
            do get-deathcovs
         ELSE
            print 'Age Based - ' (+1,15)
            print 'Fraction of' (+1,20)
            print 'Percent per Period' (,35)
            print 'Between Age' (,55)
            print 'and Age' (,70)
            print '-----------' (+1,20)
            print '------------------' (,35)
            print '------------' (,55)
            print '-------' (,70)
            do get-deathages
         END-IF
         !*
         print 'Fixed Period is Subject to: ' (+1,5)
         move 'ADJUST_LENGTH1'           to $FieldName
         move &DEATH.ADJUST_LENGTH1      to $fieldvalue
         do Read-translate-Table
         print $XlatLongName                 ()
         if &DEATH.ADJUST_LENGTH1 = 'M'
            print 'Number of Periods: ' (+1,10)
            print &DEATH.PERIOD_NUM ()
         END-IF
      END-IF
      break
   WHEN = 'T'
      print 'Table Use Name: ' (+1,10)
      print &DEATH.ADJUST_TABLE ()
      do get-tbl-use
      print 'Apply Table-Defined Schedule: ' (+1,15)
      move 'ADJUST_TBL_METHOD'         to $FieldName
      move &DEATH.ADJUST_TBL_METHOD      to $fieldvalue
      do Read-translate-Table
      print $XlatLongName                 ()
      break
END-EVALUATE
end-procedure


!*
!**********************************
begin-procedure get-deathcovs
!**********************************
!*
let $sql-statement = 'PAT07-PA_DFN_DEATHCOV'
BEGIN-SELECT ON-ERROR=SQL-ERROR
DCOV.FRACTION1 (+1,25)
   print ' / ' ()
DCOV.FRACTION2 ()
DCOV.PERIOD_PCT (,45)
DCOV.PERIODS (,65)
FROM PS_PA_DFN_DEATHCOV DCOV
WHERE DCOV.DEFINITION_NAME = $DEFN_NAME
END-SELECT
end-procedure


!*
!**********************************
begin-procedure get-deathages
!**********************************
!*
let $sql-statement = 'PAT07-PA_DFN_DEATHAGE '
BEGIN-SELECT ON-ERROR=SQL-ERROR
DAGE.FRACTION1 (+1,25)
   print ' / '  ()
DAGE.FRACTION2 ()
DAGE.PERIOD_PCT (,45)
DAGE.AGE1 (,60)
DAGE.AGE2 (,72)
FROM PS_PA_DFN_DEATHAGE DAGE
WHERE DAGE.DEFINITION_NAME = $DEFN_NAME
END-SELECT
end-procedure


!*
!**********************************
begin-procedure get-tbl-use
!**********************************
!*
let $sql-statement = 'PAT07-PA_TBL_USE'
BEGIN-SELECT ON-ERROR=SQL-ERROR
TBL.DESCR (,+5)
FROM PS_PA_TBL_USE TBL
WHERE TBL.TABLE_USE_NAME = &DEATH.ADJUST_TABLE
END-SELECT
!*
end-procedure


!*
!* get the benefit formula                                           *!
!*                                                                   *!
!**********************************
begin-procedure print-bencalc
!**********************************

!* panel  pa_formula_pnl
!*
let $sql-statement = 'PAT07-PA_DFN_FORMULA'
BEGIN-SELECT ON-ERROR=SQL-ERROR
FORM.DESCR
FORM.BEN_CMDT_DATE
FORM.BEN_CMDT_ALIAS
FORM.PYMT_FREQ
FORM.SIN_FORM_CODE
FORM.MAR_FORM_CODE
FORM.SIN_YRS_CERT
FORM.MAR_YRS_CERT
FORM.SIN_PCT_CONTD
FORM.MAR_PCT_CONTD
FROM PS_PA_DFN_FORMULA FORM
WHERE FORM.CUSTOM_STMT_NAME = $DEFN_NAME
END-SELECT
print 'Description: '             (+1,4)
print &FORM.DESCR ()
!print 'Benefit Commencement Date: ' (+2,5)
!if &FORM.BEN_CMDT_ALIAS = ' '
!   print &FORM.BEN_CMDT_DATE ()
!ELSE
!   print &FORM.BEN_CMDT_ALIAS ()
!END-IF
print 'Payment Frequency: ' (+2,5)
print &FORM.PYMT_FREQ ()
move 'PYMT_FREQ'           to $FieldName
move &FORM.PYMT_FREQ       to $fieldvalue
do Read-translate-Table
print $XlatLongName                 (,+5)
print 'Single Participant' (+2,20)
print 'Married Participant' (,50)
print '---------------------' (+1,20)
print '---------------------' (,50)
print 'Form Code:' (+1,5)
print &FORM.SIN_FORM_CODE (,20)
let $sql-statement = 'PAT07-PA_DFN_FORM_CD'
BEGIN-SELECT ON-ERROR=SQL-ERROR
DFN.DESCR (,+5)
FROM PS_PA_DFN_FORM_CD DFN
WHERE DFN.FORM_CODE = &FORM.SIN_FORM_CODE
END-SELECT
print &FORM.MAR_FORM_CODE (,50)
let $sql-statement = 'PAT07-PA_DFN_FORM_CD'
BEGIN-SELECT ON-ERROR=SQL-ERROR
DFN2.DESCR (,+5)
FROM PS_PA_DFN_FORM_CD DFN2
WHERE DFN2.FORM_CODE = &FORM.MAR_FORM_CODE
END-SELECT
print 'Years Certain: ' (+1,5)
print &FORM.SIN_YRS_CERT (,20)
print &FORM.MAR_YRS_CERT (,50)
print 'Pct Continued: ' (+1,5)
print &FORM.SIN_PCT_CONTD (,20)
print &FORM.MAR_PCT_CONTD (,50)
!*
move $defn_name  to $custmt_name
do print-custom-statements
end-procedure


!*
!* get the employee/employer split stuff                             *!
!*                                                                   *!
!**********************************
begin-procedure print-contsben
!**********************************
!* BEGIN-SELECT ON-ERROR=SQL-ERROR
!* EEBEN.DESCR
!* EEBEN.NRD_NAME
!* EEBEN.EMPL_ACCT_FR_NAME
!* EEBEN.EE_ROC_ASOF_DT_NAM
!* EEBEN.DETERM_DT_INT
!* EEBEN.BAL_VALUE_ML_TYPE
!* EEBEN.BAL_PROJ_TYPE1
!* EEBEN.BAL_PROJ_ASSUM1
!* EEBEN.BAL_PROJ_INT1
!* EEBEN.BAL_PROJ_TBL1
!* EEBEN.BAL_PROJ_TYPE2
!* EEBEN.BAL_PROJ_ASSUM2
!* EEBEN.BAL_PROJ_INT2
!* EEBEN.BAL_PROJ_TBL2
!* EEBEN.USE_PBGC_GRAD1
!* EEBEN.USE_PBGC_GRAD2
!* EEBEN.ANNUTY_VAL_ML_TYPE
!* EEBEN.ANNUTY_ACT_ASM1
!* EEBEN.ANNUTY_ACT_ASM2
!* FROM PS_PA_DFN_EEBENEFI EEBEN
!* WHERE EEBEN.DFN_EEBEN_NAME = $DEFN_NAME
!* END-SELECT
!*
!*     panel pa_eebenefit_p1
!*
!* print 'Description: '             (+1,4)
!* print &EEBEN.DESCR ()
!* print 'Employee Account Function Result: ' (+2,5)
!* print &EEBEN.EMPL_ACCT_FR_NAME ()
!* print 'Determine Employee/Employer Split and ROC as of: ' (+1,5)
!* print &EEBEN.EE_ROC_ASOF_DT_NAM ()
!* print ' date, using interest method: ' ()
!* print &EEBEN.DETERM_DT_INT ()
!*
!*     panel pa_eebenefit_p2
!*
!*  print 'Normal Retirement Data Name: ' (+1,5)
!*  print &EEBEN.NRD_NAME ()
!*  print 'Project balance to NRD (if later than determination date),' (+1,5)
!*  print ' using: ' (+1,7)
!*  move 'BAL_VALUE_ML_TYPE'       to $FieldName
!*  move &EEBEN.BAL_VALUE_ML_TYPE  to $fieldvalue
!*  !do Read-translate-Table
!*  !print $XlatLongName        ()
!*  !print ' valuable of -' (,+3)
!*  !move 'BAL_PROJ_TYPE1'       to $FieldName
!*  !move &EEBEN.BAL_PROJ_TYPE1  to $fieldvalue
!*  !do Read-translate-Table
!*  !print $XlatLongName        (+1,15)
!*  !print ': ' ()
!*  !evaluate &EEBEN.BAL_PROJ_TYPE1
!*  !   WHEN = 'A'
!*  !      print &EEBEN.BAL_PROJ_ASSUM1 ()
!*  !      break
!*  !   WHEN = 'I'
!*  !      print &EEBEN.BAL_PROJ_INT1 ()
!*  !      break
!*  !   WHEN = 'L'
!*  !      print &EEBEN.BAL_PROJ_TBL1 ()
!*  !      print 'Use PBGC Grading: ' (,+3)
!*  !      print &EEBEN.USE_PBGC_GRAD1 ()
!*  !      break
!*  !END-EVALUATE
!*  !!print 'AND' (+1,5)
!*  !move 'BAL_PROJ_TYPE2'       to $FieldName
!*  !move &EEBEN.BAL_PROJ_TYPE2  to $fieldvalue
!*  !do Read-translate-Table
!*  !print $XlatLongName        (+1,10)
!*  !print ': ' ()
!*  !evaluate &EEBEN.BAL_PROJ_TYPE2
!*  !   WHEN = 'A'
!*  !      print &EEBEN.BAL_PROJ_ASSUM2 ()
!*  !      break
!*  !   WHEN = 'I'
!*  !      print &EEBEN.BAL_PROJ_INT2 ()
!*  !      break
!*  !   WHEN = 'L'
!*  !      print &EEBEN.BAL_PROJ_TBL2 ()
!*  !      print 'Use PBGC Grading: ' (,+3)
!*  !      print &EEBEN.USE_PBGC_GRAD2 ()
!*  !      break
!*  !END-EVALUATE
!*  !print 'Convert to Annuity using: ' (+1,5)
!*  !move 'ANNUTY_VAL_ML_TYPE'       to $FieldName
!*  !move &EEBEN.ANNUTY_VAL_ML_TYPE  to $fieldvalue
!*  !do Read-translate-Table
!*  !print $XlatLongName        ()
!*  !print ' valuable factor according to -' ()
!*  !print 'Actuarial Assumption Set: ' (+1,10)
!*  !print &EEBEN.ANNUTY_ACT_ASM1 ()
!*  !print '    AND    Actuarial Assumption Set: ' ()
!*  !print &EEBEN.ANNUTY_ACT_ASM2 ()
end-procedure


!*
!* get the optional forms                                                       *!
!*                                                                   *!
!**********************************
begin-procedure print-optforms
!**********************************

let $sql-statement = 'PAT07-PA_DFN_OPT_SET'
BEGIN-SELECT ON-ERROR=SQL-ERROR
OPTSET.BENEFIT_FORMULA
OPTSET.DESCR
!OPTSET.EE_BCD_AGE_ALIAS
OPTSET.BN_BCD_AGE_ALIAS
OPTSET.USE_IN_415
OPTSET.BYPASS_FORM_SET
OPTSET.BYPASS_CUSTOM_STMT
FROM PS_PA_DFN_OPT_SET OPTSET
WHERE OPTSET.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*     panel pa_opt_forms1
!*
print 'Description: '             (+1,4)
print &OPTSET.DESCR ()
print 'Benefit Formula Name: ' (+2,5)
print &OPTSET.BENEFIT_FORMULA ()
let $sql-statement = 'PAT07-PA_CUSTOM '
BEGIN-SELECT ON-ERROR=SQL-ERROR
CUST3.DESCR (,+5)
FROM PS_PA_CUSTOM CUST3
WHERE CUST3.CUSTOM_STMT_NAME = &OPTSET.BENEFIT_FORMULA
END-SELECT
!print 'Employee Age at BCD Alias: ' (+1,5)
!print &OPTSET.EE_BCD_AGE_ALIAS ()
print 'Beneficiary Age at BCD Alias: ' (+1,5)
print &OPTSET.BN_BCD_AGE_ALIAS ()
print 'Use Formset in 415 Processing: ' (+1,5)
print &OPTSET.USE_IN_415 ()
print 'Bypass This Set If Custom Statement is True: ' (+1,5)
print &OPTSET.BYPASS_FORM_SET ()
if &OPTSET.BYPASS_FORM_SET = 'Y'
   print ' - ' ()
   print &OPTSET.BYPASS_CUSTOM_STMT ()
END-IF
print 'Forms -' (+1,5)


let $sql-statement = 'PAT07-PA_DFN_OPT_FORM'
BEGIN-SELECT ON-ERROR=SQL-ERROR
FORM.FORM_CODE
FORM.GUARANTEED_TYPE
FORM.GUARANTEED_PAYMENT
FORM.GUARANTEED_ALIAS
FORM.PCT_CONTINUE_TYPE
FORM.PCT_CONTINUED
FORM.PCT_CONTINUE_ALIAS
FORM.FORM_METHOD
FORM.ACTUARIAL_ASSUME
FORM.TABLE_USE_NAME
FORM.ARITHMETIC_STMT
FORM.CONSTANT_TYPE
FORM.CONSTANT_AMT
FORM.CONSTANT_ALIAS
FORM.QJSA_IND
FORM.SPOUSAL_CONSENT
FORM.DEFAULT_SINGLE
FORM.DEFAULT_MARRIED
FORM.SMALL_BNFT_CASHOUT
FORM.FOR_415_ONLY
FORM.EE_PAY_AGE_ALIAS
FORM.LUMP_BENE_FORMULA
FORM.BN_PAY_AGE_ALIAS
FORM.CASHOUT_THRESHOLD
FORM.LUMP_MAXIMUM_TYPE
FORM.LUMP_MAXIMUM
FORM.LUMP_MINIMUM
FORM.LUMP_MAXIMUM_FLAG
FORM.LUMP_MAXIMUM_ALIAS
FORM.LUMP_MINIMUM_FLAG
FORM.LUMP_MINIMUM_TYPE
FORM.LUMP_MINIMUM_ALIAS
FORM.ALT_ASSUMPTION_SET
FORM.ALT_SET_NAME
FORM.ALT_SET_MAXIMUM
FORM.ALT_SET_MAX_ALIAS
FORM.ALT_SET_MIN_FLAG
FORM.ALT_SET_MIN_TYPE
FORM.ALT_SET_MINIMUM
FORM.ALT_SET_MIN_ALIAS
FORM.ALT_SET_CONDITIONS
FORM.LUMPSUM_NA
FORM.LUMP_NA_CONDITIONS
FORM.LUMP_NA_MAX_TYPE
FORM.LUMP_NA_MAXIMUM
FORM.LUMP_NA_MAX_ALIAS
FORM.PIA_FUNCTION_RESLT
FORM.LIO_AGE_TYPE
FORM.LIO_AGE
FORM.LIO_AGE_ALIAS
FORM.ACCOUNT_BAL_NAME
FORM.DEATH_PAYMENT_FORM
   do print-form
FROM PS_PA_DFN_OPT_FORM FORM
WHERE FORM.DEFINITION_NAME = $DEFN_NAME
END-SELECT

end-procedure


!*
!*
!**********************************
begin-procedure print-form
!**********************************
!*
print 'Form Code: ' (+2,8)
print &FORM.FORM_CODE ()
let $sql-statement = 'PAT07-PA_DFN_FORM_CD'
BEGIN-SELECT ON-ERROR=SQL-ERROR
FORMCD.DESCR (,+3)
FROM PS_PA_DFN_FORM_CD FORMCD
WHERE FORMCD.FORM_CODE = &FORM.FORM_CODE
END-SELECT
print 'Years Certain: ' (+1,10)
if &FORM.GUARANTEED_TYPE = 'A'
   print &FORM.GUARANTEED_ALIAS ()
ELSE
   print &FORM.GUARANTEED_PAYMENT ()
END-IF
print 'Percent Continued: ' (+1,10)
if &FORM.PCT_CONTINUE_TYPE = 'A'
   print &FORM.PCT_CONTINUE_ALIAS ()
ELSE
   print &FORM.PCT_CONTINUED ()
END-IF
print 'Method: ' (+1,10)
print &FORM.FORM_METHOD ()
move 'FORM_METHOD'       to $FieldName
move &FORM.FORM_METHOD  to $fieldvalue
do Read-translate-Table
print $XlatLongName        (,+3)
print 'Custom Statement: ' (+1,10)
print &FORM.ARITHMETIC_STMT ()
print 'Constant: ' (+1,10)
if &FORM.CONSTANT_TYPE = 'A'
   print &FORM.CONSTANT_ALIAS ()
ELSE
   print &FORM.CONSTANT_AMT ()
END-IF
print 'QJSA: ' (+1,10)
print &FORM.QJSA_IND ()
print 'Spousal Consent: ' (+1,10)
print &FORM.SPOUSAL_CONSENT ()
print 'Default Form (Single): ' (+1,10)
print &FORM.DEFAULT_SINGLE ()
print 'Default Form (Married): ' (+1,10)
print &FORM.DEFAULT_MARRIED ()
print 'Small Benefit Cashout: ' (+1,10)
print &FORM.SMALL_BNFT_CASHOUT ()
print 'For 415 Only: ' (+1,10)
print &FORM.FOR_415_ONLY ()
!*
!*     panel pa_opt_forms2
!*
print 'Actuarial Assumption Set: ' (+2,10)
print &FORM.ACTUARIAL_ASSUME ()
let $sql-statement = 'PAT07-PA_DFN_FACTOR'
BEGIN-SELECT ON-ERROR=SQL-ERROR
FACT.DESCR (,+3)
FROM PS_PA_DFN_FACTOR FACT
WHERE FACT.DEFINITION_NAME = &FORM.ACTUARIAL_ASSUME
END-SELECT
print 'Lump Sum Ages and Formulas -' (+1,10)
print 'Employee Age Alias: ' (+1,15)
print &FORM.EE_PAY_AGE_ALIAS ()
print 'Beneficiary Age Alias: ' (+1,15)
print &FORM.BN_PAY_AGE_ALIAS ()
print 'Benefit Formula at NRD Name: ' (+1,15)
print &FORM.LUMP_BENE_FORMULA ()
print 'Minimums and Maximums -' (+1,10)
print 'Maximum Lump Sum Amount: ' (+1,15)
print &FORM.LUMP_MAXIMUM_FLAG ()
if &FORM.LUMP_MAXIMUM_FLAG = 'Y'
   if &FORM.LUMP_MAXIMUM_TYPE = 'A'
      print &FORM.LUMP_MAXIMUM_ALIAS ()
   ELSE
      print &FORM.LUMP_MAXIMUM ()
   END-IF
END-IF
print 'Minimum Lump Sum Amount: ' (+1,15)
print &FORM.LUMP_MINIMUM_FLAG ()
if &FORM.LUMP_MINIMUM_FLAG = 'Y'
   if &FORM.LUMP_MINIMUM_TYPE = 'A'
      print &FORM.LUMP_MINIMUM_ALIAS ()
   ELSE
      print &FORM.LUMP_MINIMUM ()
   END-IF
END-IF
print 'Small Benefit Cashout Threshold: ' (+1,15)
print &FORM.CASHOUT_THRESHOLD ()
!*
!*     panel pa_opt_forms3
!*
print 'Use Alternate Assumption Set: ' (+2,10)
print &FORM.ALT_ASSUMPTION_SET ()
if &FORM.ALT_ASSUMPTION_SET = 'Y'
   print ' - ' ()
   print &FORM.ALT_SET_NAME ()
   do get-set-descr
   move 'ALT_SET_CONDITIONS'       to $FieldName
   move &FORM.ALT_SET_CONDITIONS   to $fieldvalue
   do Read-translate-Table
   print $XlatLongName        (+1,15)
   if &FORM.ALT_SET_CONDITIONS = 'L'
      print 'Subject to Minimum of: ' (+1,20)
      print &FORM.ALT_SET_MIN_FLAG ()
      if &FORM.ALT_SET_MIN_FLAG = 'Y'
         print ' - ' ()
         if &FORM.ALT_SET_MIN_TYPE = 'A'
            print &FORM.ALT_SET_MINIMUM ()
         ELSE
            print &FORM.ALT_SET_MIN_ALIAS ()
         END-IF
      END-IF
   END-IF
END-IF
print 'Lump Sum Not Available: ' (+1,10)
move 'LUMPSUM_NA'       to $FieldName
move &FORM.LUMPSUM_NA   to $fieldvalue
do Read-translate-Table
print $XlatLongName        (+1,15)
if &FORM.LUMPSUM_NA = 'L'
   if &FORM.LUMP_NA_MAX_TYPE = 'A'
      print &FORM.LUMP_NA_MAX_ALIAS ()
   ELSE
      print &FORM.LUMP_NA_MAXIMUM ()
   END-IF
END-IF
!*
!*    panel pa_opt_forms4
!*
print 'Years Certain: ' (+2,10)
print &FORM.GUARANTEED_PAYMENT ()
print '  /  ' ()
print &FORM.GUARANTEED_ALIAS ()
print 'Percent Continued: ' (+1,10)
print &FORM.PCT_CONTINUED ()
print '  /  ' ()
print &FORM.PCT_CONTINUE_ALIAS ()
!* print 'Acturial Assumption Set: ' ()
print 'Level Income Parameters -' (+1,10)
print 'Social Security PIA Name: ' (+1,15)
print &FORM.PIA_FUNCTION_RESLT ()
let $sql-statement = 'PAT07-PA_DFN_PIA'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PIA2.DESCR (,+3)
FROM PS_PA_DFN_PIA PIA2
WHERE PIA2.DEFINITION_NAME = &FORM.PIA_FUNCTION_RESLT
END-SELECT
print 'Threshold Age: ' (+1,15)
if &FORM.LIO_AGE_TYPE = 'A'
   print &FORM.LIO_AGE_ALIAS ()
ELSE
   print &FORM.LIO_AGE ()
END-IF
print 'Cash Refund Form Parameters -' (+1,10)
print 'Account Balance Result Name: ' (+1,15)
print &FORM.ACCOUNT_BAL_NAME ()
print 'Upon Death Pay Insurance As: ' (+1,15)
move 'DEATH_PAYMENT_FORM'       to $FieldName
move &FORM.DEATH_PAYMENT_FORM   to $fieldvalue
do Read-translate-Table
print $XlatLongName        ()
!*
!*            panel pa_opt_forms_event   IS A DEAD PANEL!!!!!!!!!
!*
!*print 'This formset is Used by -' (+2,10)
!*print 'Benefit Eligibility Name' (+1,30)
!*print '--------------------------------------------' (+1,20)
let $sql-statement = 'PAT07-PA_DFN_OPT_ELIG'
!*BEGIN-SELECT ON-ERROR=SQL-ERROR
!*OPTELIG.BEN_ELIG_NAME (+1,20)
!*FROM PS_PA_DFN_OPT_ELIG OPTELIG
!*WHERE OPTSET.DEFINITION_NAME = $DEFN_NAME
!*END-SELECT
!*
let $sql-statement = 'PAT07-PA_DFN_BEN_DATE '
!*BEGIN-SELECT ON-ERROR=SQL-ERROR
!*BENDATE.DESCR (,+5)
!*FROM PS_PA_DFN_BEN_DATE BENDATE
!*WHERE BENDATE.DEFINITION_NAME = $DEFN_NAME
!*END-SELECT
!*
!*print 'Payees Eligible for this Forms -' (+2,10)
!*print 'Eligibile Payee Types' (+1,20)
!*print '--------------------------------------------' (+1,20)
let $sql-statement = 'PAT07-PA_DFN_OPTPAYEE'
!*BEGIN-SELECT ON-ERROR=SQL-ERROR
!*OPTPAY.PAYEE_TYPE (+1,20)
!*   move 'PAYEE_TYPE'       to $FieldName
!*   move &OPTPAY.PAYEE_TYPE   to $fieldvalue
!*   do Read-translate-Table
!*   print $XlatLongName        (,+3)
!*FROM PS_PA_DFN_OPTPAYEE OPTPAY
!*WHERE OPTPAY.DEFINITION_NAME = $DEFN_NAME
!*END-SELECT
!*
end-procedure


!*
!* get the descr for form set
!*                                                                   *!
!**********************************
begin-procedure get-set-descr
!**********************************
let $sql-statement = 'PAT07-PA_DFN_FACTOR'
BEGIN-SELECT ON-ERROR=SQL-ERROR
FAC.DESCR (,+3)
FROM PS_PA_DFN_FACTOR FAC
WHERE FAC.DEFINITION_NAME = &FORM.ALT_SET_NAME
END-SELECT
end-procedure


!*
!* get the 415 limits parameters                                     *!
!*                                                                   *!
!**********************************
begin-procedure print-limit415
!**********************************

let $sql-statement = 'PAT07-PA_415_LIMIT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
LIMIT.DEFINITION_NAME
LIMIT.DESCR
LIMIT.LIMIT_TABLE_ALIAS
LIMIT.REDUCTION_FACT1
LIMIT.REDUCTION_FACT2
LIMIT.TENYR_PART_SVC_DFN
LIMIT.TENYR_PART_USERCD
LIMIT.INCREASE_FACT1
LIMIT.INCREASE_FACT2
LIMIT.COLA_TYPE
LIMIT.COLA_TABLE_ID
LIMIT.FAE_DEFINITION_NM
LIMIT.FAE_USERCD,
LIMIT.TENYR_RED_SVCDFN
LIMIT.TENYR_RED_USERCD
LIMIT.AMT_415E_IND
LIMIT.AMT_415E_ALIAS,
LIMIT.DBFRACT_WARNING
LIMIT.REDUCTION_OPTIONS
FROM PS_PA_415_LIMIT LIMIT
WHERE LIMIT.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*      panel    pa_415_pnl
!*
print 'Description: '             (+1,4)
print &LIMIT.DESCR ()
print 'Processing Parameters -' (+2,5)
print 'Limit Table Lookup: ' (+1,20)
print &LIMIT.LIMIT_TABLE_ALIAS ()
print 'Post SSRA Actuarial Increase Parameters -' (+1,5)
print 'Plan Adjustment: ' (+1,15)
print &LIMIT.INCREASE_FACT1 ()
print 'GATT Adjustment: ' (+1,15)
print &LIMIT.INCREASE_FACT2 ()
print 'Limit Reduction Factors: ' (+1,5)
print 'Prior to Age 62: ' (+1,10)
print 'Plan Adjustment: ' (+1,15)
print &LIMIT.REDUCTION_FACT1 ()
print 'GATT Adjustment: ' (+1,15)
print &LIMIT.REDUCTION_FACT2 ()
print '10 Year Participant: ' (+1,10)
print &LIMIT.TENYR_PART_USERCD ()
print 'Service Definition: ' (+1,15)
print &LIMIT.TENYR_PART_SVC_DFN ()
print 'Average Earnings Limit -' (+2,5)
print 'FAE Definition: ' (,+5)
print &LIMIT.FAE_DEFINITION_NM ()
print 'FAE Limit User Code: ' (+1,10)
print &LIMIT.FAE_USERCD ()
print 'Min 10K for Non-DC Participant: ' (+1,10)
print 'Service Defintion: ' (+1,10)
print &LIMIT.TENYR_RED_SVCDFN ()
print '415(e) Information -' (+1,5)
move 'AMT_415E_IND'          to $FieldName
move &LIMIT.AMT_415E_IND       to $fieldvalue
do Read-translate-Table
print $XlatLongName        (+1,10)
if &LIMIT.AMT_415E_IND = '1'
   print '415e Amount: ' (+1,15)
   print &LIMIT.AMT_415E_ALIAS ()
END-IF
if &LIMIT.AMT_415E_IND = '2'
   print 'Warn if DB Fraction > ' (+1,15)
   print &LIMIT.DBFRACT_WARNING ()
END-IF
!*
!*    panel pa_415_pnl3
!*
print 'Reduction Options -' (+2,5)
move 'REDUCTION_OPTIONS'     to $FieldName
move &LIMIT.REDUCTION_OPTIONS  to $fieldvalue
do Read-translate-Table
print $XlatLongName        (+1,10)
print 'Plan Name' (+1,15)
print 'Form Set' (,30)
print 'Order No' (,50)
print '---------' (+1,15)
print '------------------' (,25)
print '--------' (,50)

let $sql-statement = 'PAT07-PA_415_LIMIT3'
BEGIN-SELECT ON-ERROR=SQL-ERROR
LIMIT3.BENEFIT_PLAN       (+1,15)
LIMIT3.FORM_SET           (,25)
LIMIT3.PLAN_ORDER_NUMBER  (,55)
FROM PS_PA_415_LIMIT3  LIMIT3
WHERE LIMIT3.DEFINITION_NAME = &LIMIT.DEFINITION_NAME
END-SELECT

end-procedure


!*
!* get the service                                                   *!
!*                                                                   *!
!**********************************
begin-procedure print-service
!**********************************

let $sql-statement = 'PAT07-PA_DFN_SVC_SVCV'
BEGIN-SELECT ON-ERROR=SQL-ERROR
SVCDFN.SERVICE_TYPE
SVCDFN.DESCR
SVCDFN.CUR_FUT_PROJ_MTHD
SVCDFN.HRS_CONSOLIDATION
SVCDFN.COMPUTATION_PERIOD
SVCDFN.INIT_COMP_ANNIVYR
SVCDFN.EXCL_SVC_B4_DT
SVCDFN.EXCL_SVC_B4_ALS
SVCDFN.EXCLUDE_PRIOR_TYPE
SVCDFN.EXCLUDE_AFTER_TYPE
SVCDFN.EXCL_SVC_AFT_DT
SVCDFN.EXCL_SVC_AFT_ALS
SVCDFN.CONTRIB_CODE
SVCDFN.CONTRIB_NAME
SVCDFN.HRS_TIM_TYP
SVCDFN.TIME_RQRMT_AMT
SVCDFN.CONSEC_TIME_TYP
SVCDFN.HRS_RQRMT_AMT
SVCDFN.FUT_ADJ_ORD_NUM
SVCDFN.DT_RND_ORD_NUM
SVCDFN.ADD_TIME_ORD_NUM
SVCDFN.ELAPSED_TIME_TYPE
SVCDFN.ELAP_TIME_DU_OPT
SVCDFN.PRORATE_PREV_TYPE
SVCDFN.PRORATE_PREV_UNIT
SVCDFN.PRORATE_CUR_TYPE
SVCDFN.PRORATE_CUR_UNIT
SVCDFN.EQUIV_TYPE
SVCDFN.DOL_STANDARD
SVCDFN.EQUIV_PERIOD
SVCDFN.EQUIV_PERIOD_CD
SVCDFN.FNL_SVC_RSLT_UNIT
SVCDFN.FNL_RSLT_DU_OPT
SVCDFN.FNL_ADD_SVC_TYP
SVCDFN.FNL_ADD_SVC_ALS_NM
SVCDFN.FNL_ADD_SVC_NUM
SVCDFN.FNL_SUB_SVC_TYP
SVCDFN.FNL_SUB_SVC_ALS_NM
SVCDFN.FNL_SUB_SVC_NUM
SVCDFN.FNL_MIN_SVC_TYP
SVCDFN.FNL_MIN_SVC_ALS_NM
SVCDFN.FNL_MIN_SVC_NUM
SVCDFN.FNL_MAX_SVC_TYP
SVCDFN.FNL_MAX_SVC_ALS_NM
SVCDFN.FNL_MAX_SVC_NUM
FROM PS_PA_DFN_SVC_SVCV SVCDFN
WHERE SVCDFN.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*    panel  pa_svc_definition
!*
print 'Description: '             (+1,4)
print &SVCDFN.DESCR ()
print 'Service -' (+2,5)
print 'Service Type: ' (+1,10)
print &SVCDFN.SERVICE_TYPE ()
move 'SERVICE_TYPE'        to $FieldName
move &SVCDFN.SERVICE_TYPE  to $fieldvalue
do Read-translate-Table
print $XlatLongName            (,+3)
print 'Projection Method: '    (+1,10)
print &SVCDFN.CUR_FUT_PROJ_MTHD ()
let $sql-statement = 'PAT07-PA_PROJECTIONS'
BEGIN-SELECT ON-ERROR=SQL-ERROR
PROJ.DESCR
FROM PS_PA_PROJECTIONS PROJ
WHERE PROJ.PROJECT_METHOD = &SVCDFN.CUR_FUT_PROJ_MTHD
END-SELECT
print 'Hours Consolidated: ' (+1,10)
print &SVCDFN.HRS_CONSOLIDATION ()
let $sql-statement = 'PAT07-PA_CONS_HRS'
BEGIN-SELECT ON-ERROR=SQL-ERROR
HRSCONS.DESCR (,+3)
FROM PS_PA_CONS_HRS HRSCONS
WHERE HRSCONS.DEFINITION_NAME = &SVCDFN.HRS_CONSOLIDATION
END-SELECT
print 'Computation Period -' (+1,5)
print 'Period: ' (+1,10)
move 'COMPUTATION_PERIOD'       to $FieldName
move &SVCDFN.COMPUTATION_PERIOD to $fieldvalue
do Read-Translate-Table
print $XlatLongName            (,+2)
print '1st Period Anniversary Year: ' (+1,10)
print &SVCDFN.INIT_COMP_ANNIVYR ()
print 'Service Exclusion -' (+1,5)
print 'Exclude Service Prior To -' (+1,10)
if &SVCDFN.EXCLUDE_PRIOR_TYPE = 'A'
   print 'Alias: ' (+1,15)
   print &SVCDFN.EXCL_SVC_B4_ALS ()
ELSE
   print 'Date: ' (+1,15)
   print &SVCDFN.EXCL_SVC_B4_DT ()
END-IF
print 'Exclude Service After -' (+1,10)
if &SVCDFN.EXCLUDE_AFTER_TYPE = 'A'
   print 'Alias: ' (+1,15)
   print &SVCDFN.EXCL_SVC_AFT_ALS ()
ELSE
   print 'Date: ' (+1,15)
   print &SVCDFN.EXCL_SVC_AFT_DT ()
END-IF
print 'Contributions -' (+1,5)
print 'Required For Service: ' (+1,10)
print &SVCDFN.CONTRIB_CODE ()
print 'Contrib Name: ' (+1,10)
print &SVCDFN.CONTRIB_NAME ()
let $sql-statement = 'PAT07-PA_CONS_DED'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CONSDED.DESCR (,+3)
FROM PS_PA_CONS_DED CONSDED
WHERE CONSDED.DEFINITION_NAME = &SVCDFN.CONTRIB_NAME
END-SELECT
!*
!*    panel pa_svc_hrs_time
!*
!*
print 'Hours/Time Dependency Select: ' (+2,5)
move 'HRS_TIM_TYP'        to $FieldName
move &SVCDFN.HRS_TIM_TYP  to $fieldvalue
do Read-translate-Table
print $XlatLongName            ()
print 'Hours Def Time Requirement - ' (+1,5)
if  &SVCDFN.TIME_RQRMT_AMT > 0
   print 'Award Service Only If: ' (+1,10)
   print &SVCDFN.TIME_RQRMT_AMT ()
   print ' Consecutive: ' ()
   print &SVCDFN.CONSEC_TIME_TYP ()
   move 'CONSEC_TIME_TYP'        to $FieldName
   move &SVCDFN.CONSEC_TIME_TYP  to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           ()
ELSE
   print '(none)' (+1,10)
END-IF
print 'Time Def Hours Requirement -' (+1,5)
if &SVCDFN.HRS_RQRMT_AMT > 0
   print 'Award Service Only If: ' (+1,10)
   print &SVCDFN.HRS_RQRMT_AMT ()
   print ' Hours Are Completed' ()
ELSE
   print '(none)' (+1,10)
END-IF
!*
!*     panel pa_svc_status
!*
print 'HR Status Adjustment Order -' (+2,5)
print 'Future Status: ' (+1,10)
print &SVCDFN.FUT_ADJ_ORD_NUM ()
print 'Date Round: ' (+1,10)
print &SVCDFN.DT_RND_ORD_NUM ()
print 'Add Time to Date: ' (+1,10)
print &SVCDFN.ADD_TIME_ORD_NUM ()
!*
!******* service type specific, def level:
!*
if &SVCDFN.SERVICE_TYPE = 'C'
!*         hrs counting
!*
!*  panel pa_svc_hrs_convert
   do print-hrs-convert
!*
!*  panel pa_svc_proration
   print 'Prior Period Proration Rules -' (+1,5)
   print 'Data to be Prorated: ' (+1,10)
    move 'PRORATE_PREV_TYPE'        to $FieldName
    move &SVCDFN.PRORATE_PREV_TYPE    to $fieldvalue
    do Read-translate-Table
    print $XlatLongName           ()
   print 'Counting Units for Proration: ' (+1,10)
    move 'PRORATE_PREV_UNIT'        to $FieldName
    move &SVCDFN.PRORATE_PREV_UNIT    to $fieldvalue
    do Read-translate-Table
    print $XlatLongName           ()
   print 'Current Period Proration Rules -' (+1,5)
   print 'Data to be Prorated: ' (+1,10)
    move 'PRORATE_CUR_TYPE'        to $FieldName
    move &SVCDFN.PRORATE_CUR_TYPE    to $fieldvalue
    do Read-translate-Table
    print $XlatLongName           ()
   print 'Counting Units for Proration: ' (+1,10)
    move 'PRORATE_CUR_UNIT'        to $FieldName
    move &SVCDFN.PRORATE_CUR_UNIT    to $fieldvalue
    do Read-translate-Table
    print $XlatLongName           ()
!*
END-IF
if &SVCDFN.SERVICE_TYPE = 'H'
!*         hours equivalence
!*
!*  panel pa_svc_hrs_convert
   do print-hrs-convert
!*
!*  panel pa_svc_hreqv
!*
   print 'Hours Equivalence Type: ' (+1,5)
    move 'EQUIV_TYPE'          to $FieldName
    move &SVCDFN.EQUIV_TYPE    to $fieldvalue
    do Read-translate-Table
    print $XlatLongName           ()
   print 'DOL Standard Rules: ' (+1,5)
   print 'Customized Equivalence Rules: ' (+1,5)
   print &SVCDFN.EQUIV_PERIOD  ()
   print ' Hours Per: ' ()
    move 'EQUIV_PERIOD_CD'          to $FieldName
    move &SVCDFN.EQUIV_PERIOD_CD    to $fieldvalue
    do Read-translate-Table
    print $XlatLongName           ()
END-IF
if &SVCDFN.SERVICE_TYPE = 'E'
!*
!*       panel pa_svc_elapsed1
!*
   print 'Type of Elapsed Time -' (+1,5)
   print 'Form of Time: ' (+1,10)
   print &SVCDFN.ELAPSED_TIME_TYPE ()
    move 'ELAPSED_TIME_TYPE'        to $FieldName
    move &SVCDFN.ELAPSED_TIME_TYPE    to $fieldvalue
    do Read-translate-Table
    print $XlatLongName           (,+3)
   print 'Duration Option: ' (+1,10)
   print &SVCDFN.ELAP_TIME_DU_OPT ()
   move &SVCDFN.ELAP_TIME_DU_OPT to $DUR_OPT
     do print-duration-opt-descr
   print 'Period Result Conversion -' (+1,5)
   print 'Period Result Units: ' (+1,10)
   print 'Period Result Decimal Conversion Duration Option: ' (+1,10)
END-IF
!*
!**** service categories  *************************
!*
print 'Service Categories -' (+1,5)
!*
let $sql-statement = 'PAT07-PA_DFN_SVC_STVW'
BEGIN-SELECT ON-ERROR=SQL-ERROR
SVCCAT.INCLUDE_CD
SVCCAT.CATG_TYPE
SVCCAT.CATEGORY
SVCCAT.DT_RND_OPT_NM
SVCCAT.RECORD_IMPACTED
SVCCAT.ADJUSTMENT_RULE
SVCCAT.PERIODS_TO_ADD
SVCCAT.PRDS_TO_ADD_ALS_NM
SVCCAT.PERIOD_UNIT
SVCCAT.PERIODS_ADD_TYPE
SVCCAT.LIMIT_PERIOD_HOURS
SVCCAT.ALLOCATION_PERIOD
SVCCAT.MIN_MAX_INDICATOR
SVCCAT.MIN_MAX_SERVICE
SVCCAT.MIN_MAX_HOURS
  do print-svccat
FROM PS_PA_DFN_SVC_STVW SVCCAT
WHERE SVCCAT.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*
!*  panel pa_svc_final_rnd
!*
print 'Final Result Conversion -' (+1,5)
print 'Final Service Result Units: ' (+1,10)
print &SVCDFN.FNL_SVC_RSLT_UNIT ()
move 'FNL_SVC_RSLT_UNIT'        to $FieldName
move &SVCDFN.FNL_SVC_RSLT_UNIT  to $fieldvalue
do Read-translate-Table
print $XlatLongName           (,+3)
print 'Decimal Conversion Final Result Duration Option: ' (+1,10)
print &SVCDFN.FNL_RSLT_DU_OPT ()
move &SVCDFN.FNL_RSLT_DU_OPT to $DUR_OPT
do print-duration-opt-descr
print 'Final Result Adjustment -' (+1,5)
print 'Add Service Amount: ' (+1,10)
if &SVCDFN.FNL_ADD_SVC_TYP = 'A'
   print &SVCDFN.FNL_ADD_SVC_ALS_NM ()
ELSE
   print &SVCDFN.FNL_ADD_SVC_NUM ()
END-IF
print 'Subtract Service Amount: ' (+1,10)
if &SVCDFN.FNL_SUB_SVC_TYP = 'A'
   print &SVCDFN.FNL_SUB_SVC_ALS_NM ()
ELSE
   print &SVCDFN.FNL_SUB_SVC_NUM ()
END-IF
print 'Final Service Limit: ' (+1,5)
print 'Minimum Service Amount: ' (+1,10)
if &SVCDFN.FNL_MIN_SVC_TYP = 'A'
   print &SVCDFN.FNL_MIN_SVC_ALS_NM ()
ELSE
   print &SVCDFN.FNL_MIN_SVC_NUM ()
END-IF
print 'Maximum Service Amount: ' (+1,10)
if &SVCDFN.FNL_MAX_SVC_TYP = 'A'
   print &SVCDFN.FNL_MAX_SVC_ALS_NM ()
ELSE
   print &SVCDFN.FNL_MAX_SVC_NUM ()
END-IF
!**********  break rules
print 'BREAK RULES -' (+2,5)
let $sql-statement = 'PAT07-PA_DFN_BRK'
BEGIN-SELECT ON-ERROR=SQL-ERROR
BRK.BRK_1YR_WAIT_YN
BRK.BRK_1YR_WAIT_TYPE
BRK.BRK_WAIT_ELAP_CD
BRK.BRK_WAIT_ASS_DAY
BRK.BRK_SVC_RSTR_CD
BRK.BRK_RQRMT_NUM
BRK.BRK_PRI_SVC_MIN_YN
BRK.BRK_RSTR_VSTD_YN
BRK.BRK_1YR_TYPE
BRK.BRK_1YR_HRS_NUM
BRK.BRK_ELAP_PRD_CD
BRK.BRK_ELAP_UNIT_CD
FROM PS_PA_DFN_BRK BRK
WHERE BRK.DEFINITION_NAME = &FUNCTN.BREAK_DFN_NAME
END-SELECT
!*
!*     panel  pa_break_pnl1
!*
print 'Definition: ' (+1,5)
print &FUNCTN.BREAK_DFN_NAME ()
!*
!*   panel pa_break_pnl2
!*
print 'One year wait code -' (+1,5)
if &BRK.BRK_1YR_WAIT_YN = 'Y'
   move 'BRK_1YR_WAIT_TYPE'        to $FieldName
   move &BRK.BRK_1YR_WAIT_TYPE     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
   print 'Elapsed Time Counting Period: ' (+1,15)
   move 'BRK_WAIT_ELAP_CD'        to $FieldName
   move &BRK.BRK_WAIT_ELAP_CD     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           ()
   if &BRK.BRK_WAIT_ELAP_CD = 'D'
      print ': ' ()
      print &BRK.BRK_WAIT_ASS_DAY ()
   END-IF
END-IF
!*
!*     panel  pa_break_pnl3
!*
print 'Service Restoration Rule: ' (+1,5)
move 'BRK_SVC_RSTR_CD'        to $FieldName
move &BRK.BRK_SVC_RSTR_CD     to $fieldvalue
do Read-translate-Table
print $XlatLongName           ()
print 'Number of Breaks Needed: ' (+1,5)
print &BRK.BRK_RQRMT_NUM ()
print 'Prior Service Minimum for Number of Breaks: ' (+1,5)
print &BRK.BRK_PRI_SVC_MIN_YN   ()
print 'Always Restore Service if Vested: ' (+1,5)
print &BRK.BRK_RSTR_VSTD_YN ()
print 'Type of One-Year-Break Def -' (+1,5)
move 'BRK_1YR_TYPE'        to $FieldName
move &BRK.BRK_1YR_TYPE     to $fieldvalue
do Read-translate-Table
print $XlatLongName           (+1,10)
if &BRK.BRK_1YR_TYPE = 'H'
   print 'Hours: ' (+1,15)
   print &BRK.BRK_1YR_HRS_NUM ()
   print 'Consolidated Hours Definition: ' (+1,15)
END-IF

if &BRK.BRK_1YR_TYPE = 'E'
   print 'Year: ' (+1,15)
   move 'BRK_ELAP_PRD_CD'         to $FieldName
   move &BRK.BRK_ELAP_PRD_CD      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           ()
   print 'Counting Period: ' (+1,15)
   move 'BRK_ELAP_UNIT_CD'        to $FieldName
   move &BRK.BRK_ELAP_UNIT_CD     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           ()

END-IF
!*
!*
!*    panel  pa_break_pnl4
!*
print 'List of Action Categories -' (+1,5)
print 'Category' (+1,10)
print 'Category Description' (,30)
print '-------------------' (+1,10)
print '------------------------------' (,30)
!BEGIN-SELECT ON-ERROR=SQL-ERROR
!BRKSTAT.CATEGORY (+1,10)
!  print ' ' (,26)
!  move &BRKSTAT.CATEGORY to $CAT
!  do print-hr-act-descr
!FROM PS_PA_DFN_BRK_STAT BRKSTAT
!WHERE BRKSTAT.DEFINITION_NAME = &FUNCTN.BREAK_DFN_NAME
!END-SELECT

end-procedure


!*
!*
!* print hrs convert                                            *!
!*                                                                   *!
!**********************************
begin-procedure print-hrs-convert
!**********************************
!*
let $sql-statement = 'PAT07-PA_DFN_SVC_CNV'
BEGIN-SELECT ON-ERROR=SQL-ERROR
   print 'Period Conversion Rule -' (+1,5)
   print 'Service Period: ' (+1,10)
HRSCON.COMP_PERIOD ()
   move 'COMP_PERIOD'        to $FieldName
   move &HRSCON.COMP_PERIOD  to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
   print 'Hours Conversion Rule: ' (+1,10)
!HRSCON.RULE_TYPE ()
!   move 'RULE_TYPE'        to $FieldName
!   move &HRSCON.RULE_TYPE  to $fieldvalue
!   do Read-translate-Table
!   print $XlatLongName           (,+3)
!   print 'Elapsed Time -' (+1,5)
!   print 'Duration Opt: ' (+1,10)
HRSCON.ET_HRS_CNV_DU_OPT ()
   print 'Zero or One Rule -' (+1,5)
   print '# Hrs = Svc Unit: ' (+1,10)
HRSCON.ZERO_ONE_RULE ()
   print 'Schedule -' (+1,5)
   print 'Name: ' (+1,10)
HRSCON.SCHEDULE_NAME ()
   print 'Ratio Rule -' (+1,5)
   print 'Hours Divisor: ' (+1,10)
HRSCON.HOURS_DIVISOR ()
   print 'Decimal Places: ' (+1,10)
HRSCON.DECIMAL_PLACES
   print 'Minimum Hours for Accrual: ' (+1,10)
HRSCON.MINIMUM_ACCRUAL ()
   print 'Minimum Hours for 1 Service Unit: ' (+1,10)
HRSCON.MINIMUM_SVC_UNIT
FROM PS_PA_DFN_SVC_CNV HRSCON
WHERE HRSCON.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
end-procedure


!*
!* print service category                                            *!
!*                                                                   *!
!**********************************
begin-procedure print-svccat
!**********************************
!*
print 'Category Name: ' (+2,10)
print &SVCCAT.CATEGORY ()
move &SVCCAT.CATEGORY to $CAT
do print-hr-act-descr
!*
print 'Category Type: ' (+1,15)
print &SVCCAT.CATG_TYPE ()
print 'Include for Service: ' (+1,15)
print &SVCCAT.INCLUDE_CD ()
print 'Date Round Option: ' (+1,15)
print &SVCCAT.DT_RND_OPT_NM ()
!*
let $sql-statement = 'PAT07-PA_DATE_RND_OPT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
DTRND.DESCR (,+3)
FROM PS_PA_DATE_RND_OPT DTRND
WHERE DTRND.OPTION_NAME = &SVCCAT.DT_RND_OPT_NM
END-SELECT
!*
!*     service type specific,  category level:
!*
if &SVCDFN.SERVICE_TYPE = 'C' OR
   &SVCDFN.SERVICE_TYPE = 'H'
!*
!*         hrs counting
!*      OR hours equiv
!*
!*   panel   pa_svc_min_max_hrs
!*
   print 'Hours Limit: ' (+1,15)
   move 'MIN_MAX_INDICATOR'        to $FieldName
   move &SVCCAT.MIN_MAX_INDICAtoR    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           ()
   print 'Hours: ' (,+5)
   print &SVCCAT.MIN_MAX_HOURS ()
   print 'Limit Period: ' (+1,15)
   print &SVCCAT.LIMIT_PERIOD_HOURS ()
   move 'LIMIT_PERIOD_HOURS'        to $FieldName
   move &SVCCAT.LIMIT_PERIOD_HOURS    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
   print 'Allocation Period: ' (+1,15)
   print &SVCCAT.ALLOCATION_PERIOD ()
   move 'ALLOCATION_PERIOD'        to $FieldName
   move &SVCCAT.ALLOCATION_PERIOD    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
END-IF
if &SVCDFN.SERVICE_TYPE = 'E'
!* elapsed time
!*
!*    panel   pa_svc_add_periods
!*
   print 'Record Impacted: ' (+1,15)
   print &SVCCAT.RECORD_IMPACTED ()
   print 'Adjustment Rule -' (+1,15)
   move 'ADJUSTMENT_RULE'        to $FieldName
   move &SVCCAT.ADJUSTMENT_RULE  to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,20)
   if &SVCCAT.ADJUSTMENT_RULE = 'P'
      if &SVCCAT.PERIODS_ADD_TYPE = 'A'
         print 'Alias: ' (+1,25)
      ELSE
         print 'Number: ' (+1,25)
      END-IF
      print 'Period Units: ' (+1,25)
      print &SVCCAT.PERIOD_UNIT ()
      move 'PERIOD_UNIT'        to $FieldName
      move &SVCCAT.PERIOD_UNIT  to $fieldvalue
      do Read-translate-Table
      print $XlatLongName    (,+3)
   END-IF
   !*
   !*   panel   pa_svc_min_max_svc
   !*
   print 'Limit: ' (+1,15)
   move 'MIN_MAX_INDICATOR'        to $FieldName
   move &SVCCAT.MIN_MAX_INDICAtoR    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           ()
   print 'Service: ' (+1,15)
   print &SVCCAT.MIN_MAX_SERVICE ()
END-IF
!*
!*    panel    pa_Svc_future_adj
!*
print 'Adjustments -' (+1,20)
!*
let $sql-statement = 'PAT07-PA_DFN_SCAT_CAT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Status Adjustment is: ' (+1,25)
SCAT.SVC_ADJ_TYP  ()
   move 'SVC_ADJ_TYP'        to $FieldName
   move &SCAT.SVC_ADJ_TYP    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
  print 'If Action: ' (+1,25)
SCAT.SVC_ADJ_ACTION1  ()
  move &SCAT.SVC_ADJ_ACTION1 to $ACTION
  print '  /  Reason: ' ()
SCAT.SVC_ADJ_ACT_RSN1  ()
  move &SCAT.SVC_ADJ_ACT_RSN1 to $REASON
  do print-reason-descr
  print '  /' (+1,25)
  do print-act-reas-descr1
SCAT.PNL_DOES_NOT  (+1,25)
SCAT.PNL_OCCURS_WITHIN  (,+3)
SCAT.SVC_ADJ_WITHIN_NUM  (,+1)
SCAT.SVC_ADJ_WITHIN_TYP  (,+1)
   move 'SVC_ADJ_WITHIN_TYP'        to $FieldName
   move &SCAT.SVC_ADJ_WITHIN_TYP    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
  print 'Add: ' (+1,25)
SCAT.SVC_ADJ_ADD_NUM  ()
SCAT.SVC_ADJ_ADD_TYP  ()
   move 'SVC_ADJ_ADD_TYP'        to $FieldName
   move &SCAT.SVC_ADJ_ADD_TYP    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
SCAT.PNL_WHAT_NEXT  (+1,30)
SCAT.PNL_INS_IGNR_FUT  (+1,25)
SCAT.SVC_ADJ_ACTION2  (,+3)
  move &SCAT.SVC_ADJ_ACTION1 to $ACTION
SCAT.PNL_SLASH3  ()
  print ' Reason: ' ()
SCAT.SVC_ADJ_ACT_RSN2  ()
  move &SCAT.SVC_ADJ_ACT_RSN2 to $REASON
  do print-reason-descr
SCAT.PNL_SLASH4  ()
  do print-act-reas-descr2
FROM PS_PA_DFN_SCAT_CAT SCAT
WHERE SCAT.CATEGORY = &SVCCAT.CATEGORY
AND SCAT.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
end-procedure


!*
!* get the description for given category                            *!
!*                                                                   *!
!**********************************
begin-procedure print-hr-act-descr
!**********************************
!*
let $sql-statement = 'PAT07-PA_HR_ACT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
HRACT.DESCR (,+3)
FROM PS_PA_HR_ACT HRACT
WHERE HRACT.CATEGORY = $CAT
END-SELECT
!*
end-procedure


!*
!* get the description for given reason                              *!
!*                                                                   *!
!**********************************
begin-procedure print-reason-descr
!**********************************
!*
let $sql-statement = 'PAT07-PA_XLAT_ACT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
AR.DESCRSHORT (,+3)
FROM PS_ACTN_REASON_TBL AR
WHERE AR.ACTION = $ACTION AND
AR.ACTION_REASON = $REASON AND
AR.EFFDT = (SELECT MAX (AR2.EFFDT) 
FROM PS_ACTN_REASON_TBL AR2
WHERE AR2.ACTION = AR.ACTION AND
AR2.ACTION_REASON = AR.ACTION_REASON AND
AR2.EFFDT <= &PA_RUN_CNTL.AS_OF_DATE)
END-SELECT
!*
!*
end-procedure


!*
!* get the description for given action/reason combo                 *!
!*                                                                   *!
!************************************
begin-procedure print-act-reas-descr1
!************************************
!*
let $sql-statement = 'PAT07-PA_ACT_RSN1'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ACTRSN.DESCR (,+3)
FROM PS_PA_ACT_RSN1 ACTRSN
WHERE  ACTRSN.SVC_ADJ_ACTION1 = &SCAT.SVC_ADJ_ACTION1
AND    ACTRSN.SVC_ADJ_ACT_RSN1 = &SCAT.SVC_ADJ_ACT_RSN1
END-SELECT
!*
!*
end-procedure


!*
!* get the description for given action/reason combo 2                *!
!*                                                                    *!
!************************************
begin-procedure print-act-reas-descr2
!************************************
!*
let $sql-statement = 'PAT07-PA_ACT_RSN2'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ACTRSN2.DESCR (,+3)
FROM PS_PA_ACT_RSN2 ACTRSN2
WHERE  ACTRSN2.SVC_ADJ_ACTION2 = &SCAT.SVC_ADJ_ACTION2
AND    ACTRSN2.SVC_ADJ_ACT_RSN2 = &SCAT.SVC_ADJ_ACT_RSN2
END-SELECT
!*
!*
end-procedure


!*
!* get the description for given duration option                     *!
!*                                                                   *!
!***************************************
begin-procedure print-duration-opt-descr
!***************************************
!*
let $sql-statement = 'PAT07-PA_DURATION_OPT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
DUROPT.DESCR (,+3)
FROM PS_PA_DURATION_OPT DUROPT
WHERE DUROPT.OPTION_NAME = $DUR_OPT
END-SELECT
!*
!*
end-procedure


!*
!* get the consolidated earnings                                     *!
!*                                                                   *!
!**********************************
begin-procedure print-consolidte
!**********************************
!*
!*   pa_cons_earn_parms
!*
let $sql-statement = 'PAT07-PA_CONS_EARN'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CONSERN.DESCR
CONSERN.ACCUM_PERIOD
CONSERN.START_MONTH
CONSERN.START_DAY
CONSERN.ACCUM_BASIS
CONSERN.ERNCD_SPCL
CONSERN.CONS_BASIS
CONSERN.USE_ACTUAL_COMPRTS
CONSERN.TOTAL_PAY
CONSERN.ROUND_METHOD
CONSERN.MINIMUM_TYPE
CONSERN.MINIMUM
CONSERN.MINIMUM_ALIAS
CONSERN.MAXIMUM_LIMIT_TYPE
CONSERN.MAXIMUM_LIMIT
CONSERN.MAX_LIMIT_ALIAS
CONSERN.ADDITIONAL
CONSERN.ADDITIONAL_TYPE
CONSERN.ADDITIONAL_ALIAS
!CONSERN.HR_ACTION_CATEGORY
FROM PS_PA_CONS_EARN CONSERN
WHERE CONSERN.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Description: '             (+1,4)
print &CONSERN.DESCR ()
print 'Accumulation Period -' (+2,5)
print 'Period: ' (+1,10)
print &CONSERN.ACCUM_PERIOD ()
move 'ACCUM_PERIOD'           to $FieldName
move &CONSERN.ACCUM_PERIOD    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (,+3)
print 'Start Date (Month): ' (+1,15)
print &CONSERN.START_MONTH ()
print '(Day): ' (,+3)
print &CONSERN.START_DAY ()
print 'Accumulate Based On -' (+1,5)
move 'ACCUM_BASIS'           to $FieldName
move &CONSERN.ACCUM_BASIS    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (+1,10)
print 'Consolidation Based On -' (+1,5)
print 'Type: ' (+1,10)
print &CONSERN.CONS_BASIS (+1,10)
move 'CONS_BASIS'           to $FieldName
move &CONSERN.CONS_BASIS    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (,+3)
print 'Special Accum: ' (+1,10)
print &CONSERN.ERNCD_SPCL ()
move 'ERNCD_SPCL'           to $FieldName
move &CONSERN.ERNCD_SPCL    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (,+3)
if &CONSERN.CONS_BASIS = 'E'
   print 'Payroll Earnings -' (+1,5)
   move 'TOTAL_PAY'           to $FieldName
   move &CONSERN.toTAL_PAY    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
   print 'Earn Code' (+1,15)
   print 'Pct of Earnings' (,30)
   print 'Limit Earnings To' (,50)
   print '---------' (+1,15)
   print '---------------' (,30)
   print '-----------------' (,50)
END-IF
!*
let $sql-statement = 'PAT07-PA_CONS_EARN_CD'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ERNCD.ERNCD (+1,15)
ERNCD.ACCUMULATION_PCT (,30)
ERNCD.PA_LIMIT_AMOUNT (,50)
FROM PS_PA_CONS_EARN_CD ERNCD
WHERE ERNCD.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Use Actual Rates: ' (+1,5)
print &CONSERN.USE_ACTUAL_COMPRTS ()
print 'Round Method: ' (+1,5)
print &CONSERN.ROUND_METHOD ()
print 'Compensation Rate Effective On -' (+1,5)
!*
let $sql-statement = 'PAT07-PA_CONS_EARN_RT'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ERNRT.COMP_RATE_PERIOD
   move 'COMP_RATE_PERIOD'           to $FieldName
   move &ERNRT.COMP_RATE_PERIOD      to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
  print 'Month: ' (+1,15)
ERNRT.EFFDT_MONTH      ()
  print 'Day: ' (,+5)
ERNRT.EFFDT_DAY      ()
  print 'Multiply By: ' (+1,15)
ERNRT.COMP_RATE_MULT
ERNRT.COMP_MULT_ALIAS
  if &ERNRT.COMP_MULT_ALIAS = ' '
     if &ERNRT.COMP_RATE_MULT > 0
        print &ERNRT.COMP_RATE_MULT ()
     END-IF
  ELSE
     print &ERNRT.COMP_MULT_ALIAS ()
  END-IF
FROM PS_PA_CONS_EARN_RT ERNRT
WHERE ERNRT.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*   panel pa_cons_earn_accum
!*
print 'Limits and Adjustments -' (+1,5)
print 'Minimum Earnings: ' (+1,10)
if &CONSERN.MINIMUM_TYPE = 'A'
   print &CONSERN.MINIMUM_ALIAS ()
ELSE
   print &CONSERN.MINIMUM ()
END-IF
print 'Maximum Earnings: ' (+1,10)
if &CONSERN.MAXIMUM_LIMIT_TYPE = 'A'
   print &CONSERN.MAX_LIMIT_ALIAS ()
ELSE
   print &CONSERN.MAXIMUM_LIMIT ()
END-IF
print 'Plus Additional Amount: ' (+1,10)
if &CONSERN.ADDITIONAL_TYPE = 'A'
   print &CONSERN.ADDITIONAL_ALIAS ()
ELSE
   print &CONSERN.ADDITIONAL ()
END-IF
print 'Exclude Categories -' (+1,5)
print 'Category' (+1,10)
print 'Description' (,30)
print '-----------' (+1,10)
print '------------------------------' (,30)
!*
let $sql-statement = 'PAT07-PA_CONS_EARNEXC'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ERNEXC.HR_ACTION_CATEGORY (+1,10)
  move &ERNEXC.HR_ACTION_CATEGORY to $CAT
  do print-hr-act-descr
FROM PS_PA_CONS_EARNEXC ERNEXC
WHERE ERNEXC.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*   panel pa_cons_earn_gen
!*
let $sql-statement = 'PAT07-PA_CONS_EARNST1'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Action/Reasons for Generation -' (+1,5)
  print 'Category: ' (+2,10)
ERNT1.HR_ACTION_CATEGORY ()
  move &ERNT1.HR_ACTION_CATEGORY to $CAT
  do print-hr-act-descr
  print 'Generation Method: ' (+1,15)
ERNT1.GENERATE_EARNS ()
ERNT1.REPLACE_AMOUNT
ERNT1.REPLACE_AMT_TYPE
ERNT1.REPLACE_AMT_ALIAS
  print 'Replacement Method: ' (+1,15)
  if &ERNT1.REPLACE_AMT_TYPE = 'A'
     print &ERNT1.REPLACE_AMT_ALIAS ()
  ELSE
     print &ERNT1.REPLACE_AMOUNT ()
  END-IF
ERNT1.UPLIFT_FACTOR
ERNT1.UPLIFT_FACT_TYPE
ERNT1.UPLIFT_FACT_ALIAS
  print 'Uplift Factor: ' (+1,15)
  IF &ERNT1.UPLIFT_FACT_TYPE = 'A'
     print &ERNT1.UPLifT_FACT_ALIAS ()
  ELSE
     print &ERNT1.UPLifT_FACtoR ()
  END-IF
FROM PS_PA_CONS_EARNST1 ERNT1
WHERE ERNT1.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Other Fields and Field Values -' (+1,5)
!*
let $sql-statement = 'PAT07-PA_CONS_EARNST2'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Custom Statement Name: ' (+2,10)
ERNT2.CUSTOM_STMT_NAME ()
  print 'Generation Method: ' (+1,15)
ERNT2.GENERATE_EARNS ()
  print 'Replacement Amount: ' (+1,15)
ERNT2.REPLACE_AMT_TYPE
ERNT2.REPLACE_AMT_ALIAS
ERNT2.REPLACE_AMOUNT
  if &ERNT2.REPLACE_AMT_TYPE = 'A'
     print &ERNT2.REPLACE_AMT_ALIAS ()
  ELSE
     print &ERNT2.REPLACE_AMOUNT ()
  END-IF
ERNT2.UPLIFT_FACTOR
ERNT2.UPLIFT_FACT_TYPE
ERNT2.UPLIFT_FACT_ALIAS
  if &ERNT2.UPLifT_FACT_TYPE = 'A'
     print &ERNT2.UPLIFT_FACT_ALIAS ()
  ELSE
     print &ERNT2.UPLIFT_FACtoR ()
  END-IF
FROM PS_PA_CONS_EARNST2 ERNT2
WHERE ERNT2.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*      panel pa_cons_earn_brk
!*
print 'Partial Period: ' (+2,5)
!print &CONSERN.HR_ACTION_CATEGORY ()
!move &CONSERN.HR_ACTION_CATEGORY to $CAT
do print-hr-act-descr
print 'Termination -' (+1,5)
print 'HR Action/Reason Category' (+1,10)
print 'Break-In-Service Methods' (,40)
print 'Annualize Options' (,70)
print '-------------------------' (+1,10)
print '------------------------' (,40)
print '-----------------' (,70)
let $sql-statement = 'PAT07-PA_CONS_EARNTER'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ERNTER.HR_ACTION_CATEGORY (+1,10)
   move &ERNTER.HR_ACTION_CATEGORY to $CAT
   do print-hr-act-descr
ERNTER.PERIOD_METHODS (,40)
   move 'PERIOD_METHODS'           to $FieldName
   move &ERNTER.PERIOD_METHODS     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
ERNTER.ANNUALIZE_OPTION
   move 'ANNUALIZE_OPTION'           to $FieldName
   move &ERNTER.ANNUALIZE_OPTION     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,70)
FROM PS_PA_CONS_EARNTER ERNTER
WHERE ERNTER.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Hire/Rehire -' (+1,5)
print 'HR Action/Reason Category' (+1,10)
print 'Break-In-Service Methods' (,40)
print 'Annualize Options' (,70)
print '-------------------------' (+1,10)
print '------------------------' (,40)
print '-----------------' (,70)
let $sql-statement = 'PAT07-PA_CONS_EARNHIR'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ERNHIR.HR_ACTION_CATEGORY (+1,10)
   move &ERNHIR.HR_ACTION_CATEGORY to $CAT
   do print-hr-act-descr
ERNHIR.PERIOD_METHODS (,40)
   move 'PERIOD_METHODS'           to $FieldName
   move &ERNHIR.PERIOD_METHODS     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,+3)
ERNHIR.ANNUALIZE_OPTION
   move 'ANNUALIZE_OPTION'           to $FieldName
   move &ERNHIR.ANNUALIZE_OPTION     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (,70)
FROM PS_PA_CONS_EARNHIR ERNHIR
WHERE ERNHIR.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
end-procedure


!*
!* get the consolidated hours                                        *!
!*                                                                   *!
!**********************************
begin-procedure print-consolidth
!**********************************
!*
!*   pa_cons_hour_parms
!*
let $sql-statement = 'PAT07-PA_CONS_HRS'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CONSHRS.DESCR
CONSHRS.ACCUM_PERIOD
CONSHRS.ACCUM_BASIS
CONSHRS.USE_ANNV_PD
CONSHRS.START_MONTH
CONSHRS.START_DAY
CONSHRS.HRS_BASIS
CONSHRS.CONS_EARNINGS_NM
CONSHRS.ERNCD_SPCL
CONSHRS.TOTAL_PAY
CONSHRS.EARNS_HRS_DIVISOR
CONSHRS.HRS_CONSTANT_ALIAS
CONSHRS.HRS_CONSTANT
CONSHRS.HRS_CONSTANT_TYPE
CONSHRS.TABLE_USE_NAME
CONSHRS.CUSTOM_STMT_NAME
CONSHRS.ADDITIONAL
CONSHRS.ADDITIONAL_ALIAS
CONSHRS.ADDITIONAL_TYPE
CONSHRS.MINIMUM
CONSHRS.MINIMUM_TYPE
CONSHRS.MINIMUM_ALIAS
CONSHRS.MAXIMUM_LIMIT
CONSHRS.MAXIMUM_LIMIT_TYPE
CONSHRS.MAX_LIMIT_ALIAS
CONSHRS.HR_ACTION_CATEGORY
FROM PS_PA_CONS_HRS CONSHRS
WHERE CONSHRS.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Description: '             (+1,4)
print &CONSHRS.DESCR ()
print 'Accumulation Period -' (+2,5)
print 'Period: ' (+1,10)
print &CONSHRS.ACCUM_PERIOD ()
move 'ACCUM_PERIOD'           to $FieldName
move &CONSHRS.ACCUM_PERIOD    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (,+3)
print 'Start Date (Month): ' (+1,15)
print &CONSHRS.START_MONTH ()
print '(Day): ' (,+3)
print &CONSHRS.START_DAY ()
print 'Accumulate Based On -' (+1,5)
move 'ACCUM_BASIS'           to $FieldName
move &CONSHRS.ACCUM_BASIS    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (+1,10)
print 'USE ANNV. PD. AS INITIAL PD: ' (+1,15)
print &CONSHRS.USE_ANNV_PD ()
print 'Hours Based On -' (+1,5)
print 'Type: ' (+1,10)
print &CONSHRS.HRS_BASIS (+1,10)
move 'HRS_BASIS'           to $FieldName
move &CONSHRS.HRS_BASIS    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (,+3)
print 'Special Accum: ' (+1,10)
print &CONSHRS.ERNCD_SPCL ()
move 'ERNCD_SPCL'           to $FieldName
move &CONSHRS.ERNCD_SPCL    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (,+3)
if &CONSERN.CONS_BASIS = 'H'
   print 'Payroll Hours -' (+1,5)
   move 'TOTAL_PAY'           to $FieldName
   move &CONSHRS.toTAL_PAY    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
   print 'Earn Code' (+1,15)
   print 'Pct of Hours' (,30)
   print 'Limit Hours To' (,50)
   print '---------' (+1,15)
   print '---------------' (,30)
   print '-----------------' (,50)
END-IF
!*
let $sql-statement = 'PAT07-PA_CONS_HRS_CD'
BEGIN-SELECT ON-ERROR=SQL-ERROR
ERNCDH.ERNCD (+1,15)
ERNCDH.ACCUMULATION_PCT (,30)
ERNCDH.LIMIT_HOURS (,50)
FROM PS_PA_CONS_HRS_CD ERNCDH
WHERE ERNCDH.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Exclude Categories -' (+1,5)
!*
let $sql-statement = 'PAT07-PA_CONS_HOUREXC'
BEGIN-SELECT ON-ERROR=SQL-ERROR
EXC.HR_ACTION_CATEGORY
  move &EXC.HR_ACTION_CATEGORY to $CAT
  do print-hr-act-descr
FROM PS_PA_CONS_HOUREXC EXC
WHERE EXC.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*   panel pa_cons_hour_accum
!*
print 'Earnings to Hours Divisor -' (+1,5)
move 'EARNS_HRS_DIVISOR'           to $FieldName
move &CONSHRS.EARNS_HRS_DIVISOR    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (+1,10)
evaluate &CONSHRS.EARNS_HRS_DIVISOR
   WHEN = 'C'
      print ': ' ()
      if &CONSHRS.HRS_CONSTANT_TYPE = 'A'
         print &CONSHRS.HRS_CONSTANT_ALIAS ()
      ELSE
         print &CONSHRS.HRS_CONSTANT ()
      END-IF
   WHEN = 'T'
      print ': ' ()
      print &CONSHRS.TABLE_USE_NAME ()
   WHEN = 'S'
      print ': ' ()
      print &CONSHRS.CUSTOM_STMT_NAME ()
END-EVALUATE
!*
print 'Limits and Adjustments -' (+1,5)
print 'Plus Additional Amount: ' (+1,10)
if &CONSHRS.ADDITIONAL_TYPE = 'A'
   print &CONSHRS.ADDITIONAL_ALIAS ()
ELSE
   print &CONSHRS.ADDITIONAL ()
END-IF
print 'Minimum Amount: ' (+1,10)
if &CONSHRS.MINIMUM_TYPE = 'A'
   print &CONSHRS.MINIMUM_ALIAS ()
ELSE
   print &CONSHRS.MINIMUM ()
END-IF
print 'Maximum Limit: ' (+1,10)
if &CONSHRS.MAXIMUM_LIMIT_TYPE = 'A'
   print &CONSHRS.MAX_LIMIT_ALIAS ()
ELSE
   print &CONSHRS.MAXIMUM_LIMIT ()
END-IF
!*
!*   panel pa_cons_hrs_gen
!*
let $sql-statement = 'PAT07-PA_CONS_HRSTAT3'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Action/Reasons for Generation -' (+1,5)
  print 'Category: ' (+2,10)
HRST3.HR_ACTION_CATEGORY ()
  move &HRST3.HR_ACTION_CATEGORY to $CAT
  do print-hr-act-descr
HRST3.GENERATION_METHOD ()
  print 'Generation Method: ' (+1,15)
  move 'GENERATION_METHOD'           to $FieldName
  move &HRST3.GENERATION_METHOD      to $fieldvalue
  do Read-translate-Table
  print $XlatLongName           (+1,10)
HRST3.REPLACE_AMOUNT
HRST3.REPLACE_AMT_TYPE
HRST3.REPLACE_AMT_ALIAS
  print 'Replacement Method: ' (+1,15)
  if &HRST3.REPLACE_AMT_TYPE = 'A'
     print &HRST3.REPLACE_AMT_ALIAS ()
  ELSE
     print &HRST3.REPLACE_AMOUNT ()
  END-IF
HRST3.UPLIFT_FACTOR
HRST3.UPLIFT_FACT_TYPE
HRST3.UPLIFT_FACT_ALIAS
  print 'Uplift Factor: ' (+1,15)
  if &HRST3.UPLIFT_FACT_TYPE = 'A'
     print &HRST3.UPLIFT_FACT_ALIAS ()
  ELSE
     print &HRST3.UPLIFT_FACtoR ()
  END-IF
FROM PS_PA_CONS_HRSTAT3 HRST3
WHERE HRST3.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Other Fields and Field Values -' (+1,5)
!*
let $sql-statement = 'PAT07-PA_CONS_HRSTAT4'
BEGIN-SELECT ON-ERROR=SQL-ERROR
  print 'Custom Statement Name: ' (+2,10)
HRST4.CUSTOM_STMT_NAME ()
  print 'Generation Method: ' (+1,15)
HRST4.GENERATION_METHOD ()
  move 'GENERATION_METHOD'           to $FieldName
  move &HRST4.GENERATION_METHOD      to $fieldvalue
  do Read-translate-Table
  print $XlatLongName           (,+3)
  print 'Replacement Amount: ' (+1,15)
HRST4.REPLACE_AMT_TYPE
HRST4.REPLACE_AMT_ALIAS
HRST4.REPLACE_AMOUNT
  if &HRST4.REPLACE_AMT_TYPE = 'A'
     print &HRST4.REPLACE_AMT_ALIAS ()
  ELSE
     print &HRST4.REPLACE_AMOUNT ()
  END-IF
HRST4.UPLIFT_FACTOR
HRST4.UPLIFT_FACT_TYPE
HRST4.UPLIFT_FACT_ALIAS
  IF &HRST4.UPLIFT_FACT_TYPE = 'A'
     print &HRST4.UPLIFT_FACT_ALIAS ()
  ELSE
     print &HRST4.UPLIFT_FACtoR ()
  END-IF
FROM PS_PA_CONS_HRSTAT4 HRST4
WHERE HRST4.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
!*      panel pa_cons_hour_adj
!*
print 'Partial Period: ' (+2,5)
print &CONSHRS.HR_ACTION_CATEGORY ()
move &CONSHRS.HR_ACTION_CATEGORY to $CAT
do print-hr-act-descr
print 'Termination -' (+1,5)
print 'HR Action/Reason Category' (+1,10)
print 'Adjustment Method' (+1,40)
print 'Annualize Options' (+1,60)
print '-------------------------' (+1,10)
print '-----------------' (+1,40)
print '-----------------' (+1,60)
let $sql-statement = 'PAT07-PA_CONS_HOURTER'
BEGIN-SELECT ON-ERROR=SQL-ERROR
HRSTER.HR_ACTION_CATEGORY (+1,10)
   move &HRSTER.HR_ACTION_CATEGORY to $CAT
   do print-hr-act-descr
HRSTER.PERIOD_METHODS (,40)
   move 'PERIOD_METHODS'           to $FieldName
   move &HRSTER.PERIOD_METHODS     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
HRSTER.ANNUALIZE_OPTION
   move 'ANNUALIZE_OPTION'           to $FieldName
   move &HRSTER.ANNUALIZE_OPTION     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
FROM PS_PA_CONS_HOURTER HRSTER
WHERE HRSTER.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
print 'Hire/Rehire -' (+1,5)
print 'HR Action/Reason Category' (+1,10)
print 'Adjustment Method' (+1,40)
print 'Annualize Options' (+1,60)
print '-------------------------' (+1,10)
print '-----------------' (+1,40)
print '-----------------' (+1,60)
let $sql-statement = 'PAT07-PA_CONS_HOURHIR'
BEGIN-SELECT ON-ERROR=SQL-ERROR
HRSHIR.HR_ACTION_CATEGORY (+1,10)
   move &HRSHIR.HR_ACTION_CATEGORY to $CAT
   do print-hr-act-descr
HRSHIR.PERIOD_METHODS (,40)
   move 'PERIOD_METHODS'           to $FieldName
   move &HRSHIR.PERIOD_METHODS     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
HRSHIR.ANNUALIZE_OPTION
   move 'ANNUALIZE_OPTION'           to $FieldName
   move &HRSHIR.ANNUALIZE_OPTION     to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
FROM PS_PA_CONS_HOURHIR HRSHIR
WHERE HRSHIR.DEFINITION_NAME = $DEFN_NAME
END-SELECT
!*
end-procedure


!*
!* get the consolidated deductions                                                       *!
!*                                                                   *!
!**********************************
begin-procedure print-consolidtc
!**********************************
!*
!*
let $sql-statement = 'PAT07-PA_CONS_DED CONSDED2'
BEGIN-SELECT ON-ERROR=SQL-ERROR
CONSDED2.DESCR
CONSDED2.PLAN_TYPE
CONSDED2.BENEFIT_PLAN
CONSDED2.DEDCD
CONSDED2.DED_CLASS
CONSDED2.ACCUM_PERIOD
CONSDED2.START_MONTH
CONSDED2.START_DAY
CONSDED2.ACCUM_BASIS
FROM PS_PA_CONS_DED CONSDED2
WHERE CONSDED2.DEFINITION_NAME = $DEFN_NAME
END-SELECT
print 'Description: '             (+1,4)
print &CONSDED2.DESCR ()
print 'Define Deduction Code: ' (+2,5)
print 'Plan Type: ' (+1,10)
print &CONSDED2.PLAN_TYPE ()
   move 'PLAN_TYPE'           to $FieldName
   move &CONSDED2.PLAN_TYPE     to $fieldvalue
   do Read-translate-Table
   print $XlatShortName           (,+3)
print 'Benefit Plan: ' (+1,10)
print &CONSDED2.BENEFIT_PLAN ()
print 'Deduction Code: ' (+1,10)
print &CONSDED2.DEDCD ()
print 'Deduction Classification: ' (+1,10)
print &CONSDED2.DED_CLASS ()
print 'Accumulation Period -' (+1,5)
   move 'ACCUM_PERIOD'           to $FieldName
   move &CONSDED2.ACCUM_PERIOD    to $fieldvalue
   do Read-translate-Table
   print $XlatLongName           (+1,10)
if &CONSDED2.ACCUM_PERIOD = 'O'
   print 'Start Month: ' (,+5)
   print &CONSDED2.START_MONTH ()
   print 'Start Day: ' (,+3)
   print &CONSDED2.START_DAY ()
END-IF
print 'Accumulate Based On -' (+1,5)
move 'ACCUM_BASIS'           to $FieldName
move &CONSDED2.ACCUM_BASIS    to $fieldvalue
do Read-translate-Table
print $XlatLongName           (+1,10)
!*
end-procedure


#include 'stdapi.sqc'    !Update Process Request API
#include 'parnctl2.sqc'  !Get run control parameter values
#include 'pagetval.sqc'  !Get values mask routines
#include 'readxlat.sqc'  !read translate table
!* #include 'paresult.sqc'  !read results table
!* #include 'paservce.sqc'  !read service array
!* #include 'pafunctn.sqc'  !read function table
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
