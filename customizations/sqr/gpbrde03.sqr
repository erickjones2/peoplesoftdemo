!***********************************************************************
!  GPBRDE03:  End of duties for Family Allowance                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:20:26                                 *
!       $Release:  HR92                                                *
!      $Revision:  102                                                 *
!                                                                      *
!***********************************************************************

#define C01   1
#define C30  30
#define C100 100
#define C102 102

#define G1       1
#define G2       3

#define L24     24
#define L40     40
#define L80     80
#define L95     95
#define L100   100
#define L125   125

#include 'setenv.sqc'   ! set enviroment

!**************************************
Begin-Setup
!**************************************
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
       Type=HPLASERJET
       Font=12
       Point-Size=12
       Pitch=17
       Symbol-Set=0U     ! ASCII symbol set
 End-Declare

 Declare-Layout THIS_REPORT
       Orientation=Portrait
       Top-Margin= .4
       Left-Margin=.60
       Max-Lines=82
       Max-Columns=130
       Char-Width=4.3    ! 7.2
       Line-Height=9     ! 72/printer_point-size
 End-Declare

 Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
 End-Declare

end-Setup

!**************************************
begin-report
#debug show '*** begin-report ***'
!**************************************
  let #FontStd  = 7      !12arial 3curier
  let #SizeGrd  = 10
  let #SizeStd  = 9
  let #SizeSml  = 6
  let #SizeSml2  = 5
  do Init-Report
  do Process-Main
  do Stdapi-Term
  do Reset
end-report

!**************************************
begin-procedure Init-Report
#debug show '*** Init Report ***'
!**************************************
  move '2' to $ReportDateType   ! Set for date to format as DMY
  move '1' to $ReportYear4      ! Set for year to be formatted YYYY
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  move 'GPBRDE03' to $ReportID
  move 'Termo de Responsabilidade do Salário Família.' to $ReportTitle
  move 'v.2012-B' to $ReportVersion
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display $AsOfToday
  display &timeBegan

end-procedure Init-Report

!**************************************
begin-heading 10
!**************************************

  Graphic (#R1  ,{C01},{L125}) box 3 {G2}

  Graphic (#R2a ,{C01},{L125}) box 6 {G2}
  Graphic (#R2a ,{C01},{L125}) box 3 {G1}
  Graphic (#R2a ,{C01}, {L95}) box 6 {G1}

  Alter-Printer Point-size = #SizeGrd  Font-Type = Proportional Font = #FontStd
  Print 'Termo de Responsabilidade do Salário Família'    (1 ,)    Bold Center

  uppercase $CompanyRptNm
  uppercase $Name

  Alter-Printer Point-size = #SizeSml2  Font-Type = Proportional Font = #FontStd
  Print $CompanyAdd1                   (#R1  ,3)
  Print $CompanyAdd2                   (+1  ,3)
  Print $CompanyAdd3                   (+1  ,3)

    Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Print 'Emplid:'                      (#R1  ,100)
  Print 'Página:'                      (#R1a ,100)
  page-number                          (#R1a ,110)
  Print 'Data:'                        (#R1b ,100)

  Do convert-to-dtu-date($AsOfToday, $Today)
  Do dtu-parse-date ($Today, #y, #m, #d)
  Let $Today = edit(#d, '00') || '-' || edit(#m, '00') || '-' || edit(#y, '0000')

  Print $Today                     (#R1b ,110)

  Print 'Empresa:'                     (#R2a ,  3)
  Print 'CNPJ:'                        (#R2a , 98)
  Print 'Nome do segurado'             (#R3a ,  3)
  Print 'CTPS n. série ou doc. identidade' (#R3a , 98)

  Alter-Printer Point-size = #SizeStd  Font-Type = Proportional Font = #FontStd
  Print $Emplid                        (#R1   ,110) Bold
  Print $CompanyRptNm                     (#R3   ,  3) Bold
  Print $CNPJ                          (#R3   , 98) Bold
  Print $Name                          (#R4   ,  3)

  If $CTPS <> '' or $CTPSSerie <> ''
     Print $CTPS                       (#R4   , 98)
     if $CTPSSerie <> ''
        Print '-'                         (#R4   ,+2)
        Print $CTPSSerie                  (#R4   ,+2)
     end-if
  else
     Print $RG                         (#R4   , 98)
  end-if

end-heading

!**************************************
begin-procedure Process-Main
#debug show '*** Process-Main ***'
!**************************************

  #debug Show '* Process-Main *'

  Let $SecurityClauseWithoutERN = ''
  Let $_TableAlias = 'A'
  Do Security-Param
  Let $Condicion01 = ''

  Do Select-Parameters
  If $Condicion01  <> ''
     Do Define-Array-Dependents
     Do Declare-Rows

     Let $Text01 = 'Pelo presente Termo de Responsabilidade declaro estar ciente de que'
     Let $Text01 = $Text01 || ' deverei comunicar de imediato a ocorrência dos seguintes fatos ou'
     Let $Text06 = '- Sentença judicial que determina o pagamento a outrem (casos de '
     Let $Text06 = $Text06 || 'divórcio ou separação, abandono de filho ou perdao pátrio poder)'
     Let $Text08 = 'Estou ciente, ainda de que a falta do  cumprimento do compromisso ora assumido, '
     Let $Text08 = $Text08 || 'além de obrigar a devolução das importâncias recebidas '
     Let $Text10 = 'indevidamente, sujeitar-me-á às penalidades prevista no art. 171 do Código '
     Let $Text10 = $Text10 || 'Penal e à rescisão do contrato de trabalho, por justa causa, '
     Let $Text11 = 'no termos 482 da Consolidação das Leis do Trabalho.'

     Do Select-Employee-Data
  else
     show 'Run Cntrl Missing'
  end-if

end-procedure Process-Main

!**************************************
begin-procedure Select-Parameters
#debug show '** Select-Parameters ***'
!**************************************
Let #PinFamlyNum  = 0
Let $Condicion1   = ''
Let $Condicion2   = ''

begin-select
RC.GP_PAYGROUP
RC.GB_GROUP_ID
RC.BEGIN_DT
RC.END_DT
RC.GPBR_LIST_OPTION
RC.GPBR_PIN_FAMLY_NUM

  Let #PinFamlyNum = &RC.GPBR_PIN_FAMLY_NUM
  Let $ListOption  = Rtrim(&RC.GPBR_LIST_OPTION, ' ')
  Let $Paygroup    = Rtrim(&RC.GP_PAYGROUP, ' ')
  Let $GroupID     = Rtrim(&RC.GB_GROUP_ID, ' ')
  Let $BeginDt     = Rtrim(&RC.BEGIN_DT, ' ')
  Let $EndDt       = Rtrim(&RC.END_DT, ' ')

  If $BeginDt <> '' OR $EndDt <> ''
       Let $Condicion01 = $Condicion01 || ' AND A.EMPLID IN (SELECT AX.EMPLID FROM PS_JOB AX WHERE AX.EMPLID = A.EMPLID '
       Let $Condicion01 = $Condicion01 || ' AND AX.ACTION IN (SELECT ACT.ACTION FROM PS_ACTION_STAT_TBL ACT WHERE ACT.SET_LST_HIRE_DT = ' || '''' || '2' || ''''|| ') '
  End-If
  If $BeginDt <> ''
     Let $Condicion01 = $Condicion01 || ' AND AX.EFFDT >= ' || '''' || $BeginDt || ''''
  End-If
  if $EndDt   <> ''
     Let $Condicion01 = $Condicion01 || ' AND AX.EFFDT <= ' || '''' || $EndDt   || ''''
  end-if

  If $Condicion01 <> ''
      Let $Condicion01 = $Condicion01 || ') '
  End-If



   Evaluate $ListOption
   when = '3'
        Let $Condicion01 = $Condicion01 || ' AND A.EMPLID IN ( SELECT EE.EMPLID FROM PS_GPBR_RC_DEP_EE EE'
        Let $Condicion02 = ' WHERE EE.OPRID = '   || '''' || $prcs_oprid || ''''
        Let $Condicion02 = $Condicion02 || ' AND EE.RUN_CNTL_ID = ' || '''' ||  $prcs_run_cntl_id || '''' || ') '
   when = '4'
        Let $Condicion01 = $Condicion01 || ' AND A.EMPLID IN (SELECT GR.EMPLID FROM  PS_GB_GRP_RES_TBL GR '
        Let $Condicion01 = $Condicion01 || ' WHERE GR.GB_GROUP_ID = ' || '''' || $GroupID  || ''''
        Let $Condicion02 =                 ' AND GR.VERSIONGBQDM = (SELECT MAX(G.VERSIONGBQDM) FROM '
        LET $Condicion02 = $Condicion02 || ' PS_GB_GRP_RES_TBL G WHERE G.GB_GROUP_ID = GR.GB_GROUP_ID) '
        Let $Condicion02 = $Condicion02 || ' AND GR.JOB_EFFDT = (SELECT MAX(J.JOB_EFFDT) FROM '
        Let $Condicion02 = $Condicion02 || ' PS_GB_GRP_RES_TBL J WHERE J.GB_GROUP_ID = GR.GB_GROUP_ID '
        Let $Condicion02 = $Condicion02 || ' AND J.VERSIONGBQDM = GR.VERSIONGBQDM '
        Let $Condicion02 = $Condicion02 || ' AND J.EMPLID = GR.EMPLID AND J.EMPL_RCD = GR.EMPL_RCD))'
   when = '5'
        Let $Condicion01 = $Condicion01 || ' AND A.GP_PAYGROUP = ' || '''' || $Paygroup || ''''
   End-Evaluate

   #debug Show 'Select Condition: '  $Condicion01
   #debug Show '                  '  $Condicion02


 FROM  PS_GPBR_RC_DEPEND RC
 WHERE RC.OPRID  = $prcs_oprid
 AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
 end-select

end-procedure Select-Parameters

!**************************************
begin-procedure Define-Array-Dependents

#debug Show '* Define-Array-Dependents *'
!**************************************
  Create-array name=Dependents size=1000 -
  Field=Emplid:Char
  Field=Sequence:Char
  Field=DepntName:Char
  Field=DepntRel:Char
  Field=BirthDate:Char


end-procedure Define-Array-Dependents

!**************************************
begin-procedure Get-Establishment

#debug show '* Get-Establishment *'
!**************************************
Begin-Select
E.DESCR
E.ADDRESS1
E.ADDRESS2
E.ADDRESS4
E.STATE
E.POSTAL
E.CITY
E.NUM1

  Do Select-Estab-Id
  Let $EstabNm   = Ltrim(Rtrim(&E.DESCR, ' '), ' ')
  Let $Num1        = Ltrim(Rtrim(&E.NUM1, ' '), ' ')
  Let $CompanyAdd  = Ltrim(Rtrim(&E.ADDRESS2, ' '), ' ')
  Let $CompanyAdd1 = Ltrim(Rtrim(&E.ADDRESS1, ' '), ' ') || ' ' || $Num1 || ', ' || $CompanyAdd
  Let $CompanyAdd1 = Ltrim(Rtrim($CompanyAdd1, ', '), ',')
  Let $Postal      = Ltrim(Rtrim(&E.POSTAL, ' '), ' ')
  Let $State       = Ltrim(Rtrim(&E.STATE, ' '), ' ')
  Let $City        = Ltrim(Rtrim(&E.CITY, ' '), ' ')
  Let $CompanyAdd2 = Ltrim(Rtrim(&E.ADDRESS4, ' '), ' ')  || ', ' || $City
  Let $CompanyAdd2 = Ltrim(Rtrim($CompanyAdd2, ', '), ',')
  Let $CompanyAdd3 = $State || ' - ' || $Postal
  Let $CompanyAdd3 = Ltrim(Rtrim($CompanyAdd3, ' '), '- ')

FROM PS_ESTAB_TBL E
WHERE E.ESTABID = $Estabid
AND   E.EFFDT = (SELECT MAX(EFFDT)
                 FROM PS_ESTAB_TBL
                 WHERE ESTABID = E.ESTABID
                 AND   EFFDT <= $Effdt)
End-Select

BEGIN-Select
EE.DESCR

  Let $EstabNm   = Ltrim(Rtrim(&EE.DESCR, ' '), ' ')

FROM PS_ESTAB_TBL_LANG EE
WHERE EE.ESTABID = $Estabid
AND   EE.LANGUAGE_CD = $curr_language_cd
AND   EE.EFFDT = (SELECT MAX(EFFDT)
               FROM PS_ESTAB_TBL_LANG
               WHERE ESTABID = EE.ESTABID
               AND   LANGUAGE_CD = EE.LANGUAGE_CD
               AND   EFFDT <= $Effdt)
END-Select

end-procedure Get-Establishment


!**************************************
begin-procedure Select-Employee-Data
#debug Show '* Select-Employee-Data *'
!**************************************
#debug Show '$SecurityClauseWithoutERN: ' $SecurityClauseWithoutERN

Do convert-to-dtu-date($AsOfToday, $CurrentDate)
Do Convert-From-DTU-Date ($CurrentDate, $CurrentDate)
#debug Show '$CurrentDate  :' $CurrentDate
Begin-Select
A.EMPLID
A.EFFDT
A.COMPANY
A.GP_PAYGROUP
A.ACTION
A.ACTION_REASON
C.NAME_DISPLAY
A.ESTABID
A.DEPTID

  Let #Sequence     = 0
  Let $Company      = Rtrim(&A.COMPANY, ' ')
  Let $Estabid      = Rtrim(&A.ESTABID, ' ')
  Let $Emplid       = Rtrim(&A.EMPLID, ' ')
  Let $Action       = Rtrim(&A.ACTION, ' ')
  Let $ActionReason = Rtrim(&A.ACTION_REASON, ' ')
  Let $Paygroup     = Rtrim(&A.GP_PAYGROUP, ' ')
  Let $Name         = Rtrim(&C.NAME_DISPLAY, ' ')
  Let $Effdt        = Rtrim(&A.EFFDT, ' ')

  #debug Show '#Sequence     :' #Sequence
  #debug Show '$Company      :' $Company
  #debug Show '$Estabid      :' $Estabid
  #debug Show '$Emplid       :' $Emplid
  #debug Show '$Action       :' $Action
  #debug Show '$ActionReason :' $ActionReason
  #debug Show '$Paygroup     :' $Paygroup
  #debug Show '$Name         :' $Name
  #debug Show '$Effdt        :' $Effdt

  If $Action = 'TER'
     if $ActionReason = 'DEA'
        Let $FamAllowTerm = '30'
     else
        Let $FamAllowTerm = '70'
     End-If
     Do Search-Dependents01
  else
     Do Search-Dependents02
  End-if

  Let $CompanyNm    = ''
  Let $EstabNm      = ''
  Let $CompanyRptNm = ''

  Do Select-OptionName
  Do Select-Company

  Do Get-Establishment
  Do Select-Address
  Do Select-National-Id
  Do Select-Person-Bra
  Do Select-Dependents

  #debug show '    $CompanyNm  :' $CompanyNm
  #debug show '    $EstabNm    :' $EstabNm

    If $LegNameOpt = 'COM'
        Let $CompanyRptNm = $CompanyNm
    Else
        Let $CompanyRptNm = $EstabNm
    End-If

  #debug show '    $CompanyRptNm  :' $CompanyRptNm

  If #CountD > 0
     Let #TotalEmpl    = #TotalEmpl + 1
     Do Print-Dependents
  End-if

FROM PS_JOB A
    ,PS_JOB_JR B
    ,PS_PERSON_NAME C
!    ,PS_FAST_SQR_SEC_VW SCRTY

WHERE A.EMPLID  = B.EMPLID
AND A.EMPLID  = C.EMPLID
AND A.EFFDT   = (SELECT MAX(AA.EFFDT)
                 FROM PS_JOB AA
                 WHERE AA.EMPLID = A.EMPLID)
!                 AND   AA.EMPL_RCD = A.EMPL_RCD)
AND A.EFFDT   = B.EFFDT
AND A.EFFSEQ =  (SELECT MAX(AA.EFFSEQ) FROM PS_JOB AA
                 WHERE AA.EMPLID   = A.EMPLID
                 AND   AA.EMPL_RCD = A.EMPL_RCD
                 AND   AA.EFFDT    = A.EFFDT)
AND A.EMPL_RCD = B.EMPL_RCD
AND A.JOB_INDICATOR = 'P'
AND A.EMPL_STATUS = 'A'
!AND A.EMPLID   = SCRTY.EMPLID
!AND A.EMPL_RCD = SCRTY.EMPL_RCD
[$Condicion01]
[$Condicion02]
![$SecurityClause]
[$SecurityClauseWithoutERN]
ORDER BY A.COMPANY, A.ESTABID, A.DEPTID, A.EMPLID
End-Select

end-procedure Select-Employee-Data

!**************************************
begin-procedure Select-Address

#debug show '* Select-Address *'
!**************************************
Let $Address1 = ''
Let $Address2 = ''
Let $Num      = ''
Let $City     = ''

Begin-Select
B1.ADDRESS1
B1.ADDRESS2
B1.ADDRESS3
B1.ADDRESS4
B1.CITY
B1.NUM1
B1.STATE
B1.POSTAL

  Let $Address1 = Rtrim(&B1.ADDRESS1,' ')    !Street
  Let $Address2 = Rtrim(&B1.ADDRESS2,' ')    !Complement
  Let $Address4 = Rtrim(&B1.ADDRESS4,' ')    !Neihgborhood
  Let $City     = Rtrim(&B1.CITY,' ')        !City
  Let $Num      = Rtrim(&B1.NUM1,' ')        !Number
  Let $Postal   = Rtrim(&B1.POSTAL,' ')      !Postal
  Let $UF       = Rtrim(&B1.STATE, ' ')      !State

FROM PS_ADDRESSES B1
WHERE B1.EMPLID  = $Emplid
AND   B1.EFFDT   = (SELECT MAX(BB.EFFDT)
                   FROM PS_ADDRESSES BB
                   WHERE B1.EMPLID = BB.EMPLID)
End-Select

End-Procedure Select-Address

!**************************************
begin-procedure Evaluate-Xlat
#debug show '*** Evaluate-Xlat ***'
!**************************************
Let $XlatDescr = ''

Begin-Select
XX.XLATLONGNAME

  Let $XlatDescr = Rtrim(&XX.XLATLONGNAME,' ')

FROM XLATTABLE_VW XX
WHERE XX.FIELDNAME  = $XlatField
AND   XX.FIELDVALUE = $XlatValue
End-Select

Begin-Select
XL.XLATLONGNAME

  Let $XlatDescr = Rtrim(&XL.XLATLONGNAME,' ')

FROM XLATTABLE_LNG XL
WHERE XL.FIELDNAME  = $XlatField
AND   XL.FIELDVALUE = $XlatValue
AND   XL.LANGUAGE_CD = $curr_language_cd
End-Select

End-Procedure Evaluate-Xlat

!**************************************
begin-procedure Select-Dependents

#debug Show '* Select-Dependents *'
!**************************************
Let #CountD = 0
Let #TotalD = 0

Begin-Select
C1.NAME_DISPLAY
B.ADDRESS1
D.RELATIONSHIP
B.SAME_ADDRESS_EMPL
D.MAR_STATUS
D.MAR_STATUS_DT
D.DEP_BENEF_TYPE
A.BIRTHDATE
E.STUDENT_BRA
E.DISABLED_BRA
E.VACCINE_CERT_BRA
X.XLATLONGNAME
E.FAM_TERM_DT_BRA

    Let $ProcessInd     = 'Y'
    Let $DependentOk    = 'N'

    Let $Relation       = Rtrim(&D.RELATIONSHIP, ' ')
    Let $DepntName      = Rtrim(&C1.NAME_DISPLAY, ' ')
    Let $DepntRel       = Rtrim(&X.XLATLONGNAME, ' ')
    Let $EducationInd   = Edit(&E.STUDENT_BRA, '0')
    Let $Disable        = Edit(&E.DISABLED_BRA, '0')
    Let $Vaccine_Cert   = Edit(&E.VACCINE_CERT_BRA, '0')
    Let $BirthDate      = Rtrim(&A.BIRTHDATE, ' ')
    Let #Age            = 0
    Let $DepTermDate    = Rtrim(&E.FAM_TERM_DT_BRA, ' ')
    Do convert-to-dtu-date($AsOfToday, $Today)

    If $BirthDate <> ''
        Do convert-to-dtu-date($BirthDate, $BirthDate)
        Do dtu-diff-years($BirthDate,$Today ,#Age)
    Else
        Let $ProcessInd     = 'N'
        Let $warn1 = 'Empregado : ' || $Emplid
        Let $warn2 = 'Dependente: ' || $DepntName
        Let $warn3 = 'Não tem a data do nascimento.'
        Let $warn3 = $warn3 || ' Por favor corrija e execute o relatório outra vez'
        show $spaces $warn1
        show $spaces $warn2
        show $spaces $warn3
    End-If

    If $DepTermDate <> ''
        Do convert-to-dtu-date($DepTermDate, $DepTermDate)
        Do convert-to-dtu-date($CurrentDate, $CurrentDate1)

        #debug Show '------$DepTermDate        :'  $DepTermDate
        #debug Show '------$CurrentDate1        :'  $CurrentDate1
        if $DepTermDate < $CurrentDate1
            Let $ProcessInd = 'N'
            Let $warn1 = 'Empregado          : ' || $Emplid
            Let $warn2 = 'Dependente         : ' || $DepntName
            Let $warn3 = 'Data da terminação : ' || $DepTermDate
            show $spaces $warn1
            show $spaces $warn2
            show $spaces $warn3
        End-If
    End-If

    #debug Show '$Relation        :'  $Relation
    #debug Show '$DepntName       :'  $DepntName
    #debug Show '$DepntRel        :'  $DepntRel
    #debug Show '$EducationInd    :'  $EducationInd
    #debug Show '$Disable         :'  $Disable
    #debug Show '$BirthDate       :'  $BirthDate
    #debug Show '#Age             :'  #Age
    #debug Show '$Vaccine_Cert    :'  $Vaccine_Cert
    #debug Show '$DepTermDate     :'  $DepTermDate

    If $ProcessInd = 'Y'
        Do Evaluate-Dependents2
        If $DependentOk =  'Y'
            Let #Sequence     = #Sequence + 1
            Let #TotalD       = #TotalD   + 1
            Do Create-Array-Dependents
        End-if
    End-If

 FROM PS_DEP_BEN A
  , PS_DEP_BEN_ADDR B
  , PS_DEP_BEN_NAME C1
  , PS_DEP_BEN_EFF D
  , PS_DEP_BEN_EFF_BRA E
  , XLATTABLE_VW X
WHERE A.EMPLID = $Emplid
AND B.EMPLID = A.EMPLID
AND B.DEPENDENT_BENEF = A.DEPENDENT_BENEF
AND (B.EFFDT = (SELECT MAX(B1.EFFDT)
                FROM PS_DEP_BEN_ADDR B1
                WHERE B1.EMPLID = B.EMPLID
                AND B1.DEPENDENT_BENEF = B.DEPENDENT_BENEF
                AND B1.EFFDT <= $CurrentDate))
AND C1.EMPLID = A.EMPLID
AND C1.DEPENDENT_BENEF = A.DEPENDENT_BENEF
AND (C1.EFFDT = (SELECT MAX(C.EFFDT)
                 FROM PS_DEP_BEN_NAME C
                 WHERE C.EMPLID = C1.EMPLID
                 AND C.DEPENDENT_BENEF = C1.DEPENDENT_BENEF
                 AND C.EFFDT <= $CurrentDate))
AND D.EMPLID = A.EMPLID
AND D.DEPENDENT_BENEF = A.DEPENDENT_BENEF
AND (D.EFFDT = (SELECT MAX(D1.EFFDT)
                FROM PS_DEP_BEN_EFF D1
                WHERE D1.EMPLID = D.EMPLID
                AND D1.DEPENDENT_BENEF = D.DEPENDENT_BENEF
                AND D1.EFFDT <= $CurrentDate))
AND A.EMPLID = E.EMPLID
AND A.DEPENDENT_BENEF = E.DEPENDENT_BENEF
AND E.EFFDT = (SELECT MAX(EE.EFFDT) FROM PS_DEP_BEN_EFF_BRA EE
               WHERE EE.EMPLID = E.EMPLID
               AND   EE.DEPENDENT_BENEF = E.DEPENDENT_BENEF)
AND X.FIELDVALUE = D.RELATIONSHIP
AND X.FIELDNAME  = 'RELATIONSHIP'
!AND D.DEP_BENEF_TYPE NOT IN ('N')
!AND E.FAM_TERM_DT_BRA IS NOT NULL
End-Select
If #TotalD = 0
   show $spaces 'Não encontrado termine dependentes para este empregado: ' $Emplid
End-if

End-Procedure Select-Dependents

!**************************************
begin-procedure Select-Dependents-WA

#debug Show '* Select-Dependents-WA *'
!**************************************
if $DependentOk = 'N'
Begin-Select
'X'

  Let $DependentOk = 'Y'

FROM PS_GPBR_DEPEND_WA WA
WHERE WA.EMPLID = $Emplid
AND   WA.PAYMENT_DT = (SELECT MAX(W.PAYMENT_DT)
                     FROM PS_GPBR_DEPEND_WA W
                     WHERE W.EMPLID = WA.EMPLID
                     AND   WA.GPBR_FAM_ALLOW_IND = 1)
AND WA.DEPENDENT_BENEF = $DepntBenf
End-Select
end-if

End-Procedure Select-Dependents-WA

!**************************************
begin-procedure Search-Dependents01

#debug Show '* Search-Dependents01 *'
#debug Show '$Effdt :       ' $Effdt
#debug Show '$FamAllowTerm: ' $FamAllowTerm
!**************************************
Begin-SELECT
S1A.EMPLID
S1A.DEPENDENT_BENEF
S1A.STUDENT_BRA
S1A.EDUCATION_LVL_BRA
S1A.EDUCATION_IND_BRA
S1A.VACCINE_CERT_BRA
S1A.DISABLED_BRA
S1A.FAM_TERM_DT_BRA


  Let $InsDependent                    = Rtrim(&S1A.DEPENDENT_BENEF, ' ')
  Let #InsStudent                      = &S1A.STUDENT_BRA
  Let $InsEducLvl                      = Rtrim(&S1A.EDUCATION_LVL_BRA, ' ')
  Let #InsEducInd                      = &S1A.EDUCATION_IND_BRA
  Let #InsVaccine                      = &S1A.VACCINE_CERT_BRA
  Let #InsDisabled                     = &S1A.DISABLED_BRA
  Let $InsTermDt                       = Rtrim(&S1A.FAM_TERM_DT_BRA, ' ')

  if $InsTermDt = ''
     Do Insert-Dependents01
  end-if

FROM PS_DEP_BEN_EFF_BRA S1A
WHERE S1A.EMPLID = $Emplid
AND S1A.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_DEP_BEN_EFF_BRA B
             WHERE S1A.EMPLID = B.EMPLID
             AND   S1A.DEPENDENT_BENEF = B.DEPENDENT_BENEF)
AND S1A.EFFDT <= $Effdt
End-SELECT

End-Procedure Search-Dependents01

!**************************************
begin-procedure Insert-Dependents01

#debug Show '* Insert-Dependents01 *'
#debug Show '$Effdt :       ' $Effdt
#debug Show '$FamAllowTerm: ' $FamAllowTerm
!**************************************
Begin-SQL
INSERT INTO PS_DEP_BEN_EFF_BRA
(EMPLID
,DEPENDENT_BENEF
,EFFDT
,STUDENT_BRA
,EDUCATION_LVL_BRA
,EDUCATION_IND_BRA
,VACCINE_CERT_BRA
,DISABLED_BRA
,FAM_ALLOW_TERM_BRA
,FAM_TERM_DT_BRA)
VALUES
($Emplid
,$InsDependent
,$Effdt
,#InsStudent
,$InsEducLvl
,#InsEducInd
,#InsVaccine
,#InsDisabled
,$FamAllowTerm
,$Effdt
)
End-SQL

End-Procedure Insert-Dependents01

!**************************************
begin-procedure Search-Dependents02

#debug Show '* Search-Dependents02 *'
!**************************************
Begin-SELECT
!A.EMPLID
A.DEPENDENT_BENEF
WA.PAYMENT_DT
A.STUDENT_BRA
A.EDUCATION_LVL_BRA
A.EDUCATION_IND_BRA
A.VACCINE_CERT_BRA
A.DISABLED_BRA
WA.FAM_ALLOW_TERM_BRA
WA.FAM_TERM_DT_BRA

  Let $InsDependent                    = Rtrim(&A.DEPENDENT_BENEF, ' ')
  Let $InsPaymentDt                    = Rtrim(&WA.PAYMENT_DT, ' ')
  Let #InsStudent                      = &A.STUDENT_BRA
  Let $InsEducLvl                      = Rtrim(&A.EDUCATION_LVL_BRA, ' ')
  Let #InsEducInd                      = &A.EDUCATION_IND_BRA
  Let #InsVaccine                      = &A.VACCINE_CERT_BRA
  Let #InsDisabled                     = &A.DISABLED_BRA
  Let $InsTerm                         = Rtrim(&WA.FAM_ALLOW_TERM_BRA, ' ')
  Let $InsTermDt                       = Rtrim(&WA.FAM_TERM_DT_BRA, ' ')

  if $InsTermDt <> '' and
     $InsTerm   <> ''
     Do Insert-Dependents02
  end-if

FROM PS_DEP_BEN_EFF_BRA A
    ,PS_GPBR_DEPEND_WA WA
WHERE A.EMPLID    = $Emplid
AND A.EMPLID      = WA.EMPLID
AND A.EFFDT       = (SELECT MAX(B.EFFDT) FROM PS_DEP_BEN_EFF_BRA B
                     WHERE A.EMPLID = B.EMPLID
                     AND   A.DEPENDENT_BENEF = B.DEPENDENT_BENEF)
AND WA.PAYMENT_DT = (SELECT MAX(W.PAYMENT_DT)
                     FROM PS_GPBR_DEPEND_WA W
                     WHERE W.EMPLID = WA.EMPLID
                     AND W.GPBR_FAM_ALLOW_IND = 1 )
AND A.FAM_TERM_DT_BRA IS NULL
AND WA.FAM_TERM_DT_BRA IS NOT NULL
AND WA.GPBR_FAM_ALLOW_IND  = 1
End-SELECT

End-Procedure Search-Dependents02

!**************************************
begin-procedure Insert-Dependents02

#debug Show '* Insert-Dependents02 *'
!**************************************
Begin-SQL
INSERT INTO PS_DEP_BEN_EFF_BRA
(EMPLID
,DEPENDENT_BENEF
,EFFDT
,STUDENT_BRA
,EDUCATION_LVL_BRA
,EDUCATION_IND_BRA
,VACCINE_CERT_BRA
,DISABLED_BRA
,FAM_ALLOW_TERM_BRA
,FAM_TERM_DT_BRA)
VALUES
(
$Emplid
,$InsDependent
,$InsPaymentDt
,#InsStudent
,$InsEducLvl
,#InsEducInd
,#InsVaccine
,#InsDisabled
,$InsTerm
,$InsTermDt
)
End-SQL

End-Procedure Insert-Dependents02

!**************************************
begin-procedure Evaluate-Dependents2

#debug Show '* Evaluate-Dependents2 *'
#debug Show '$Relation     :' $Relation
#debug Show '#Age          :' #Age
#debug Show '$Vaccine_Cert :' $Vaccine_Cert
#debug Show '$EducationInd :' $EducationInd
#debug Show '$Disable      :' $Disable
!**************************************
  If  $DependentOk  = 'N'
    Evaluate $Relation
      when = 'C'
      when = 'RC'
      when = 'FC'
          If #Age <= 6 And $Vaccine_Cert = '1'
            Let $DependentOk = 'Y'
          End-If

          If #Age >=7 And #Age <= 14 And $EducationInd = '1'
            Let $DependentOk = 'Y'
          End-If

          If $Disable = '1'
            Let $DependentOk = 'Y'
          End-If
      break
    End-Evaluate
  End-if
#debug Show '$DependentOk  ->' $DependentOk

End-Procedure Evaluate-Dependents2

!**************************************
begin-procedure Create-Array-Dependents

#debug show '* Create-Array-Dependent *'
!**************************************
    Let $Sequence = Edit(#Sequence, '00')
    Let #CountD   = #CountD + 1

    Do dtu-parse-date ($BirthDate, #yy, #mm, #dd)

    Let $BirthDate = edit(#dd, '00') || '-' || edit(#mm, '00') || '-' || edit(#yy, '0000')

    #debug Show '    $Emplid    :' $Emplid
    #debug Show '    $Sequence  :' $Sequence
    #debug Show '    $DepntName :' $DepntName
    #debug Show '    $DepntRel  :' $DepntRel
    #debug Show '    $BirthDate :' $BirthDate

    Put $Emplid $Sequence $DepntName $DepntRel $BirthDate
    into Dependents(#CountD) Emplid Sequence DepntName DepntRel BirthDate


End-Procedure Create-Array-Dependents

!**************************************
begin-procedure Select-National-Id

#debug Show '* Select-National-Id *'
!**************************************
Let $PIS  = ''
Let $CTPS = ''
Let $CRES = ''
Let $CPF  = ''
Let $RG   = ''

Begin-Select
A.NATIONAL_ID
A.NATIONAL_ID_TYPE

   Let $NationalId = Rtrim(&A.NATIONAL_ID_TYPE, ' ')

   Evaluate $NationalId
   when = 'CTPS'
     Let $CTPS      = Rtrim(&A.NATIONAL_ID,' ')
   when = 'CPF'
     Let $CPF       = Rtrim(&A.NATIONAL_ID,' ')
   when = 'RG'
     Let $RG        = Rtrim(&A.NATIONAL_ID,' ')
   End-Evaluate

from PS_PERS_NID A
WHERE A.EMPLID = $Emplid
AND A.COUNTRY = 'BRA'
End-Select

End-Procedure Select-National-Id

!**************************************
begin-procedure Select-Estab-Id

#debug Show '* Select-Estab-Id *'
!**************************************
Let $CNPJ = ''

Begin-Select
A.ESTAB_ID_TYPE_BRA
A.ESTAB_ID_BRA

  Let $EstabIdType = rtrim(&A.ESTAB_ID_TYPE_BRA, ' ')

  Evaluate $EstabIdType
  when = 'CNPJ'
       Let $CNPJ = Rtrim(&A.ESTAB_ID_BRA, ' ' )
  when = 'CNAE'
       Let #CNAE = &A.ESTAB_ID_BRA
       Let $CNAE = Edit(#CNAE, '00000')
  End-Evaluate

FROM  PS_ESTAB_ID_BRA A
     ,PS_ESTAB_TBL_BRA A2
WHERE A.ESTABID = $EstabId
AND   A.ESTABID = A2.ESTABID
AND   A.COUNTRY = 'BRA'
AND   A.COUNTY_CD_BRA  = A2.COUNTY_CD_BRA
AND   A.EFFDT = A2.EFFDT
End-Select

End-Procedure Select-Estab-Id


!**************************************
begin-procedure Select-Person-Bra

#debug Show '* Select-Person-Bra *'
!**************************************
Let $CTPSSerie = ''
Begin-Select
F.CTPS_SERIES_BRA
F.CTPS_STATE_BRA

  Let $CTPSSerie = Rtrim(&F.CTPS_SERIES_BRA, ' ')

FROM PS_PERSON_BRA F
WHERE F.EMPLID = $Emplid
End-Select

End-Procedure Select-Person-Bra

!**************************************
begin-procedure Declare-Rows

#debug Show '* Declare-Rows *'
!**************************************
!Row 3
  Let #R1  = 3
  Let #R1a = #R1 + 1
  Let #R1b = #R1 + 2
!Row 6
  Let #R2  = #R1 + #R1
  Let #R2a = #R2 + 1
  Let #R2b = #R2 + 2
!Row 9
  Let #R3  = #R2 + #R1
  Let #R3a = #R3 + 1
  Let #R3b = #r3 + 2

!Row 12
  Let #R4  = #R3 + #R1
  Let #R4a = #R4 + 1

!Row 15
  Let #R5  = #R4 + #R1

!Row 18
  Let #R6  = #R5 + #R1

!Row 21
  Let #R7  = #R6 + #R1

!Row 24
  Let #R8  = #R7 + #R1
!Row 27
  Let #R9  = #R8 + #R1
!Row 30
  Let #R10 = #R9 + #R1
!Row 33
  Let #R11 = #R10 + #R1
!Row 36
  Let #R12 = #R11 + #R1
!Row 39
  Let #R13 = #R12 + #R1
!Row 42
  Let #R14 = #R13 + #R1
!Row 48
  Let #R16  = #R10 + #R6
  Let #R16a = #R16 + 1
  Let #R16b = #R16 + 2
!Row 51
  Let #R17  = #R16 + #R1
  Let #R17a = #R17 + 1
  Let #R17b = #R17 + 2
!Row 56
  Let #R18  = #R17 + #R1
  Let #R18a = #R18 + 1
  Let #R18b = #R18 + 2
!Row 57
  Let #R19  = #R18 + #R1
  Let #R19a = #R19 + 1
  Let #R19b = #R19 + 2
!Row 62
  Let #R20  = #R19 + #R1
  Let #R20a = #R20 + 1
  Let #R20b = #R20 + 2
!Row 63
  Let #R21  = #R20 + #R1
  Let #R21a = #R21 + 1
!Row 66
  Let #R22  = #R21 + #R1
  Let #R22a = #R22 + 1
  Let #R22b = #R22 + 2
!Row 69
  Let #R23  = #R22 + #R1


end-procedure Declare-Rows

!**************************************
begin-procedure Print-Layout

#debug Show '* Print-Layout *'
!**************************************

  Graphic (#R1a ,{C01} ,{L125}) box 43 {G2}
  Graphic (#R1a ,{C01} ,{L125}) box 2  {G2}
  Graphic (#R1a ,{C01} ,{L125}) box 3  {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 5  {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 7  {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 9  {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 11 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 13 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 15 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 17 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 19 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 21 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 23 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 25 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 27 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 29 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 31 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 33 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 35 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 37 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 39 {G1}
  Graphic (#R1a ,{C01} ,{L125}) box 41 {G1}
  Graphic (#R2  ,{C01} ,{L80})  box 41 {G1}

  Graphic (#R16 ,{C01} ,{L125}) box 12 {G2}

  Graphic (#R20a,{C01} ,{L100}) box 10 {G2}
  Graphic (#R20a,{C102},{L24})  box 10 {G2}
  Graphic (#R22a,{C30} ,{L40})  horz-line {G1}

  Alter-Printer Point-size = #SizeStd  Font-Type = Proportional Font = #FontStd
  Print 'Beneficiários'                (#R1b,      ) center bold
  Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Print 'Nome do Filho'                (#R2  , 33)   bold
  Print 'Data do Nascimento'           (#R2  , 95)   bold

  Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Print $Text01                        (#R16a,  5)
  Print 'ocorrêncis que determinam a perda do direito ao salário-família:' (#R16b,  5)
  Print '- Óbito de filho;'            (#R17a,  8)
  Print '- Cessação de invalidez de filho inválido;' (#R17b,  8)
  Print $Text06                        (#R18 ,  8)
  Print $Text08                        (#R18b,  5)
  Print $Text10                        (#R19 ,  5)
  Print $Text11                        (#R19a,  5)
  Print '______/_____/_____'           (#R22a, 10)
  Print $Name                          (#R22b, 40)
  Print 'Polegar direito'              (#R22b,108)


end-procedure Print-Layout

!**************************************
begin-procedure Print-Dependents

#debug Show '* Print-Dependents *'
!**************************************
  Let #R2b = #R2 + 2
  Do Print-Layout
  Let #Limit = 20
  Alter-Printer Point-size = #SizeStd  Font-Type = Proportional Font = #FontStd
  Let #CountD = 1

  While #CountD <= #TotalD
    get $EmplidD $Sequence $DepntName $DepntRel $BirthDate
    from Dependents(#CountD)

    If #CountD > #Limit
       Let #R2b = #R2 + 2
       New-Page
       Do Print-Layout
       Let #Limit = #Limit + 13
       Alter-Printer Point-size = #SizeStd  Font-Type = Proportional Font = #FontStd
    end-if

    Print $DepntName (#R2b,  3,30)
    Print $BirthDate (#R2b, 95,10)

    Let #R2b = #R2b + 2

    add 1 to #CountD
  End-while

  New-Page
  Let #R2b = #R2 + 2


end-procedure Print-Dependents

!**************************************
begin-procedure Select-OptionName
#debug show '*** Select-OptionName ***'
!**************************************
Begin-Select
LO.LEGAL_ENT_TYPE_BRA
LC.COMPANY

    Let $LegNameOpt = Rtrim(&LO.LEGAL_ENT_TYPE_BRA, ' ')
    Let $LegNameCia = Rtrim(&LC.COMPANY, ' ')

FROM PS_ESTAB_TBL_BRA LO,
PS_ESTAB_TBL LC
WHERE LO.ESTABID = $Estabid
AND   LO.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_ESTAB_TBL
                  WHERE ESTABID = LO.ESTABID
                  AND   EFFDT <= $Effdt
                  AND   EFF_STATUS = 'A')
AND LC.ESTABID = LO.ESTABID
AND LC.EFFDT = LC.EFFDT
End-Select

#debug Show '    $LegNameOpt : ' $LegNameOpt
#debug Show '    $LegNameCia : ' $LegNameCia

End-Procedure Select-OptionName

!**************************************
begin-procedure Select-Company
#debug show '*** Select-Company ***'
!**************************************
Begin-Select
A.DESCR

  Let $CompanyNm   = Ltrim(Rtrim(&A.DESCR, ' '), ' ')

FROM PS_COMPANY_TBL A
WHERE A.COMPANY = $Company
AND A.EFF_STATUS = 'A'
AND A.EFFDT = (SELECT MAX(B.EFFDT)
               FROM PS_COMPANY_TBL B
               WHERE B.COMPANY = A.COMPANY
               AND B.EFF_STATUS = 'A'
               AND B.EFFDT <= $Effdt)

End-Select
End-Procedure Select-Company

!**************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports
#include 'hrsecty.sqc'   !Get SQR Security parameters