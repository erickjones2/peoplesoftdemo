!***********************************************************************
!  GPGBP32.SQR  - EMPLOYEE PAYMENT RECORD P32                          *
!                                                                      *
!***********************************************************************
!  GPGBP32.SQR  - EMPLOYEE PAYMENT RECORD P32                          *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:04:05:11                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

! Date        Modification
! ----        ------------
! 01/2002     SQR Created.
! 08/2005     Modified to include employer accumulators for SAP and SPP
! 05/2006     Switched from PTD accumulators to Earnings/deductions.
!***********************************************************************

!******************************************************************
!*** Setting up the environment
!******************************************************************

#include 'setenv.sqc'   ! Set environment
#include 'setup32.sqc'  ! Printer and page-size initialization

!******************************************************************
!*** Constants definitions
!******************************************************************

!Define Column Location Variables
#define PageLength              177
#define PosNumPage              160

#define PosFreq/Period           1
#define PosTaxYear              79
! first column
#define Pos1                    9
! second column
#define Pos2                    20 
#define Pos3                    33
 ! column 4
#define Pos4                    41
! grs nic
#define Pos5                    53
#define Pos6                    64
#define Pos7                    72
#define Pos8                    78
#define Pos9                    92
#define Pos10                   99
#define Pos11                  112
#define Pos12                  120
#define Pos13                  130
#define Pos14                  133
#define Pos15                  144
#define Pos16                  157
#define Pos17                  165


#define Pos1_v                    6
#define Pos2_v                    22
#define Pos3_v                    31
#define Pos4_v                    39
#define Pos5_v                    54
#define Pos6_v                    68
! smp row 7,8
#define Pos7_v                    69
#define Pos8_v                    80
! spp 9,10
#define Pos9_v                    90
#define Pos10_v                   100
!sap 11,12
#define Pos11_v                  110
#define Pos12_v                  120
#define Pos13_v                  124
!total ded
#define Pos14_v                  129
#define Pos15_v                  142
#define Pos16_v                  155
!*****************************
#define Pos1_n                    10
#define Pos2_n                    24
#define Pos3_n                    33
#define Pos4_n                    41
#define Pos5_n                    57
#define Pos6_n                    71
! smp row 7,8
#define Pos7_n                    72
#define Pos8_n                    83
! spp 9,10
#define Pos9_n                    93
#define Pos10_n                   104
!sap 11,12
#define Pos11_n                  114
#define Pos12_n                  124
#define Pos13_n                  128
!total ded
#define Pos14_n                  135
#define Pos15_n                  146
#define Pos16_n                  158

!*******************************
!******************************************************************
!*** Heading section - Title
!******************************************************************

begin-heading 10 !This number must be changed to match the number
                !of lines in the header (including column headings)

        print $ReportTitle              ()   bold center
        print 'Report ID:  '            (+1,1)
        print $ReportID                 (,{Pos2})
        page-number                     ( ,{PosNumPage}) 'Page: '
        last-page                       () ' / '
        print 'Date:'                   (+1,1)
        print $Time_Begin               (,{Pos2})
        print 'Tax Year:'               (,{PosTaxYear}) Bold
        print $PNL_TAX_YEAR             (,+1)


  ! Variable selection 01
        if  #PNL_TAX_PERIOD <> 00
                print  ' Period: '      (,+1)   Bold
                print  #PNL_TAX_PERIOD  (,+1)   edit 99
        end-if
        if $PNL_FREQUENCY_ID >= ' '
                print  '  Frequency: '      (,+1)  Bold
                print  $PNL_FREQUENCY_ID    (,+1)
        end-if
  ! End Variable selection 01

        print 'Pay Entity:'              (+1,{PosFreq/Period})
        print $PYENT_NAME               (,{Pos2})

  ! Variable selection 02
        evaluate ''
        when <> $PNL_EMPLID
                print 'Emplid  :'           (,{PosTaxYear})
                print $PNL_EMPLID           (,+1)
        break
        when <> $PNL_PAYGROUP
                print 'Paygroup:'           (+1,{PosFreq/Period})
                print $PNL_PAYGROUP         (,{Pos2})
        break
        when <> $PNL_CAL_RUN_ID
                print 'Calendar Group Id:'  (+1,{PosFreq/Period})
                print $PNL_CAL_RUN_ID       (,{Pos2})
        break
        when <> $PNL_DEPTID
                print '   Deptid:'          (,{Pos5})
                print $PNL_DEPTID           (,{Pos7})
        break
        end-evaluate
  ! End Variable selection 02

!******************************************************************
!*** Heading section - Headers
!******************************************************************
       if #PNL_TAX_YEAR  < 2006  
        print 'Frequency'                  (+2,{PosFreq/Period})        bold
        print '   Income'                  (,{Pos1})                    bold
        print '   Student'                 (,{Pos2})                    bold
        print '   Tax'                     (,{Pos3})                    bold
        print '   Net'                     (,{Pos4})                    bold
        print '   Gross NIC'               (,{Pos5})                    bold
        !  print '   Statutory'               (,{Pos7})                    bold
        print '   SMP'                       (,{Pos7})                    bold
        print '   NIC'                     (,{Pos8})                    bold
        ! print '   Statutory'               (,{Pos9})                    bold
        print '   SPP'                       (,{Pos9})                    bold
        print '   NIC'                     (,{Pos10})                   bold
       ! print '   Statutory'               (,{Pos11})                   bold
        print '   SAP'                      (,{Pos11})                   bold 
        print '   NIC'                     (,{Pos12})                   bold
        print '   TotalDed'                (,{Pos14})                   bold
        print '   Net NICs'                (,{Pos15})                   bold
        print '   Amount'                  (,{Pos16})                   bold
        print '   Date Paid'               (,{Pos17})                   bold

       
        print ' / Period'                  (+1,{PosFreq/Period})        bold
        print '   Tax'                     (,{Pos1})                    bold
        print '   Loan'                    (,{Pos2})                    bold
        print '   Credits'                 (,{Pos3})                    bold
        print '   Income Tax'              (,{Pos4})                    bold
         ! print '   Maternity'               (,{Pos7})                    bold
        print '   Compensation'              (,{Pos8})                    bold
               ! print '   Paternity'               (,{Pos9})                    bold
        print '   Compensation'            (,{Pos10})                   bold
         ! print '   Adoption'                (,{Pos11})                   bold
        print '   Compensation'            (,{Pos12})                   bold

        print '   Deductions'              (+1,{Pos2})                  bold
        print '     (1+2-3)'               (,{Pos4})                    bold
        ! print '   Pay'                     (,{Pos7})                    bold
        print '   on SMP'                  (,{Pos8})                    bold
         ! print '   Pay'                     (,{Pos9})                    bold
        print '   on SPP'                  (,{Pos10})                   bold
        ! print '   Pay'                     (,{Pos11})                   bold
        print '   on SAP'                  (,{Pos12})                   bold
        print '   (6to13)'                 (,{Pos14})                   bold
        print '   (5-14)'                  (,{Pos15})                   bold
        print '   (4+15)'                  (,{Pos16})                   bold
      
        print '       1'                   (+1,{Pos1_n})                  bold
        print '       2'                   (,{Pos2_n})                    bold
        print '       3'                   (,{Pos3_n})                    bold
        print '       4'                   (,{Pos4_n})                    bold
        print '     5'                     (,{Pos5_n})                    bold
        print '     7'                     (,{Pos7_n})                    bold
        print '     8'                     (,{Pos8_n})                    bold
        print '     9'                     (,{Pos9_n})                    bold
        print '    10'                     (,{Pos10_n})                   bold
        print '    11'                     (,{Pos11_n})                   bold
        print '    12'                     (,{Pos12_n})                   bold
        print '    14'                     (,{Pos14_n})                   bold
        print '    15'                     (,{Pos15_n})                   bold
        print '    16'                     (,{Pos16_n})                   bold
ELSE
        print 'Frequency'                  (+2,{PosFreq/Period})        bold
        print '   Income'                  (,{Pos1})                    bold
        print '   Student'                 (,{Pos2})                    bold
        !print '   Tax'                     (,{Pos3})                    bold
        print '   Net'                     (,{Pos4})                    bold
        print '   Gross NIC'               (,{Pos5})                    bold
        ! print '   Statutory'               (,{Pos7})                    bold
        print '   SMP'                       (,{Pos7})                    bold

        print '   NIC'                     (,{Pos8})                    bold
       ! print '   Statutory'               (,{Pos9})                    bold
        print '   SPP'                       (,{Pos9})                    bold

        print '   NIC'                     (,{Pos10})                   bold
        ! print '   Statutory'               (,{Pos11})                   bold
        print '   SAP'                       (,{Pos11})                   bold
        print '   NIC'                     (,{Pos12})                   bold
        print '   TotalDed'                (,{Pos14})                   bold
        print '   Net NICs'                (,{Pos15})                   bold
        print '   Amount'                  (,{Pos16})                   bold
        print '   Date Paid'               (,{Pos17})                   bold

       
        print ' / Period'                  (+1,{PosFreq/Period})        bold
        print '   Tax'                     (,{Pos1})                    bold
        print '   Loan'                    (,{Pos2})                    bold
        !print '   Credits'                 (,{Pos3})                    bold
        print '   Income Tax'              (,{Pos4})                    bold
        ! print '   Maternity'               (,{Pos7})                    bold
         print '   Compensation'            (,{Pos8})                    bold
              
        ! print '   Paternity'               (,{Pos9})                    bold
        print '   Compensation'            (,{Pos10})                   bold
        !print '   Adoption'                (,{Pos11})                   bold
        print '   Compensation'            (,{Pos12})                   bold

        print '   Deductions'              (+1,{Pos2})                  bold
        print '     (1+2)'                  (,{Pos4})                    bold
       ! print '   Pay'                     (,{Pos7})                    bold
        print '   on SMP'                  (,{Pos8})                    bold

        ! print '   Pay'                     (,{Pos9})                    bold
        print '   on SPP'                  (,{Pos10})                   bold
       ! print '   Pay'                     (,{Pos11})                   bold
        print '   on SAP'                  (,{Pos12})                   bold
        print '   (5to11)'                 (,{Pos14})                   bold
        print '   (4-12)'                  (,{Pos15})                   bold
        print '   (3+13)'                  (,{Pos16})                   bold
              
        print '       1'                   (+1,{Pos1_n})                  bold
        print '       2'                   (,{Pos2_n})                    bold
        !print '       3'                   (,{Pos3_n})                    bold
        print '       3'                   (,{Pos4_n})                    bold
        print '     4'                     (,{Pos5_n})                    bold
        print '     6'                     (,{Pos7_n})                    bold
        print '     7'                     (,{Pos8_n})                    bold
        print '     8'                     (,{Pos9_n})                    bold
        print '     9'                     (,{Pos10_n})                   bold
        print '    10'                     (,{Pos11_n})                   bold
        print '    11'                     (,{Pos12_n})                   bold
        print '    12'                     (,{Pos14_n})                   bold
        print '    13'                     (,{Pos15_n})                   bold
        print '    14'                     (,{Pos16_n})                   bold

end-if

end-heading
!******************************************************************
!***    Begin Report Section
!******************************************************************
begin-report

        !----------------------------------------------------------
        !***    Call the main procedures
        !----------------------------------------------------------
        do INIT-REPORT
        do MAIN-REPORT
        move #CountError to $CountError 99999
 do Append-Log ('WHERE_STATEMENT'  , $WHERE_STATEMENT)
 do Append-Log ('CountError '  , $CountError)
 do Append-Log('----------------------------- ' , '------------------------------' )
        do Get-log

        
end-report


!******************************************************************
! I N I T I A L I Z E   A N D / O R   G E T    V A R I A B L E S
!******************************************************************


!*=================================================================
! Procedure     :INIT-REPORT
! Comment       :This procedure performs the application
!                initializations formats variables for use, and
!                calls the procedures to get input parameters.
!*=================================================================
begin-procedure INIT-REPORT

#Debug Show 'Procedure Name -> INIT-REPORT ' 
     
        do INIT-DATETIME
        do INIT-NUMBER
        do INIT-VARIABLES
        do DEFINE-PRCS-VARS
        do GET-RUN-CONTROL-PARMS
        do GET-CURRENT-DATETIME

        if isnull($prcs_process_instance)
         #DEBUG       SHOW 'Running P32 SQR'
                do ASK-VALUES !SQR not run through process scheduler
        else
         #DEBUG     SHOW 'Running P32.SQR in the Process Scheduler'
               do GET-VALUES !SQR run through process scheduler
        end-if

        let $ReportID    = 'P32'
        let $ReportTitle = 'Employers Payment Record Substitute'
        
   
        
#Debug Show 'Procedure Name <- INIT-REPORT '  

end-procedure INIT-REPORT

!*=================================================================
! Procedure    :INIT-VARIABLES
! Comment      :Initialisation of all varaibles used by the report
!*=================================================================
begin-procedure INIT-VARIABLES

        let #CountError         = 0
        let #counter            = 0
        let #TotConPay          = 0
        let $W_Print            = 'N'

end-procedure INIT-VARIABLES


!******************************************************************
!           S T A R T   O F   T H E   R E P O R T
!******************************************************************

!*=================================================================
! Procedure     : MAIN REPORT                                     !
! Descr         : This procedure is the main procedure of the     !
!                 report and calls other procedures               !
!                                                                 !
!*=================================================================

begin-procedure MAIN-REPORT

#Debug Show 'Procedure Name -> MAIN-REPORT ' 
 
        do BUILD-WHERE-RUNCTL
        do GET-RESULTS
        do UPDATE-PRCS-RUN-STATUS
        
#Debug Show 'Procedure Name <- MAIN-REPORT ' 
end-procedure MAIN-REPORT
!*=================================================================
! Procedure:  GET-RESULTS                                         !
! Descr:      Main Select
!                                                                 !
!*=================================================================
begin-procedure GET-RESULTS
#Debug Show 'Procedure Name -> GET-RESULTS ' 
begin-select
A.PAY_ENTITY             &A.PAY_ENTITY       () on-break print=never level=1  after=PRINT-TOTALS
A.FREQUENCY_ID           &A.FREQUENCY_ID     () on-break print=never level=2  after=PRINT-TOT-FREQ
A.GPGB_TAX_PERIOD        &A.GPGB_TAX_PERIOD  () on-break print=never level=3  after=PRINT-REPORT 
SUM(A.GPGB_EE_TAX_PTD)   &GPGB_EE_TAX        
SUM(A.GPGB_EE_SL_PTD)    &GPGB_EE_SL
SUM(A.GPGB_EE_TC_PTD)    &GPGB_EE_TC
SUM(A.GPGB_EE_NIC_PTD)   &GPGB_EE_NIC_VALUE
SUM(A.GPGB_ER_NIC_PTD)   &GPGB_ER_NIC_VALUE
SUM(A.GPGB_SMP_PTD)      &GPGB_SMP
SUM(A.GPGB_EE_RBT_PTD)   &GPGB_EE_RBT_VALUE
SUM(A.GPGB_ER_RBT_PTD)   &GPGB_ER_RBT_VALUE
SUM(A.GPGB_SPPA_PTD)     &GPGB_SPPA
SUM(A.GPGB_SPPB_PTD)     &GPGB_SPPB
SUM(A.GPGB_SAP_PTD)      &GPGB_SAP

            
        ! Fields for sub selects....
       let $MAIN_SEL_PAY_ENTITY   = &A.PAY_ENTITY
       let $TAX_PERIOD            = EDIT(&A.GPGB_TAX_PERIOD,'09')
       let #TAX_PERIOD            = &A.GPGB_TAX_PERIOD
       let $FREQUENCY             = RTRIM(&A.FREQUENCY_ID,' ')
       let $W_PERIOD              = $FREQUENCY || ' ' || $TAX_PERIOD
      
       if $W_Pay_Entity <> $MAIN_SEL_PAY_ENTITY
              do GET-PAY-ENTITY($MAIN_SEL_PAY_ENTITY,$AsOfDate,$PYENT_Descr,$PYENT_Descr,$PYENT_DescrShort,
                         $PYENT_Addr1,$PYENT_Addr2,$PYENT_Addr3,$PYENT_Addr4,$PYENT_City,
                         $PYENT_County,$PYENT_PostCode,$PYENT_Country,$PYENT_NAME,#PYENT_TAXNUM,
                                $PYENT_TAX_DNAME,$PYENT_PAYE_REF,$PYENT_PERMIT_NUM)
              do GET-PAY-ENTITY-DTL($MAIN_SEL_PAY_ENTITY,#PNL_TAX_YEAR,#PYENT_SSP_REC,#PYENT_SMP_STD,
                 #PYENT_SMP_SER,#P35_COL_7_TOT,#P35_COL_8_TOT,#P35_COL_20_TOT,
                 #P35_COL_22_TOT,#P35_COL_25_TOT,#P35_COL_29_TOT,#P35_COL_295_INC)
                                                               
            let $W_Pay_Entity = $MAIN_SEL_PAY_ENTITY
       end-if
 
     
       let #GPGB_EE_TAX           = &GPGB_EE_TAX
       let #GPGB_EE_SL            = &GPGB_EE_SL
       let #GPGB_EE_TC            = &GPGB_EE_TC
       let #GPGB_EE_NIC_VALUE     = &GPGB_EE_NIC_VALUE
       let #GPGB_ER_NIC_VALUE     = &GPGB_ER_NIC_VALUE
       let #GPGB_SMP              = &GPGB_SMP
       let #GPGB_EE_RBT_VALUE     = &GPGB_EE_RBT_VALUE
       let #GPGB_ER_RBT_VALUE     = &GPGB_ER_RBT_VALUE
       let #GPGB_SPPA             = &GPGB_SPPA
       let #GPGB_SPPB             = &GPGB_SPPB
       let #GPGB_SAP              = &GPGB_SAP  
       
       
        let $W_Print = 'Y'
        do EVALUATE-RSLT-P32
        
FROM PS_GPGB_EDI_RSLT  A,PS_GPGB_EE_RSLT B
[$Where_statement]
AND B.EMPLID=A.EMPLID 
AND B.EMPL_RCD=A.EMPL_RCD 
AND B.CAL_RUN_ID=A.CAL_RUN_ID
AND B.GP_PAYGROUP=A.GP_PAYGROUP
AND B.CAL_ID=A.CAL_ID
AND B.ORIG_CAL_RUN_ID=A.ORIG_CAL_RUN_ID
AND B.RSLT_SEG_NUM=A.RSLT_SEG_NUM
GROUP BY A.PAY_ENTITY , A.FREQUENCY_ID  , A.GPGB_TAX_PERIOD
ORDER BY A.FREQUENCY_ID  , A.GPGB_TAX_PERIOD
end-select
#Debug Show 'Procedure Name <- GET-RESULTS '  
end-procedure GET-RESULTS


!*===================================================================
! Procedure     : EVALUATE-RSLT-P32                                 !
! Descr         : Evaluate values selected from GPGB_EDI_RSLT table !
! ** NB **      : The values selected should be assigned to         !
!                 coresponding printing variables                   !
!*===================================================================
begin-procedure EVALUATE-RSLT-P32
!------------**********************************

#Debug Show 'Procedure Name -> EVALUATE-RSLT-P32 ' 

     if #PNL_TAX_YEAR  < 2006 
 
       let #P32_COL1              = #P32_COL1    + #GPGB_EE_TAX
       let #P32_COL2              = #P32_COL2    + #GPGB_EE_SL 
       let #P32_COL3              = #P32_COL3    + #GPGB_EE_TC
       let #P32_COL5_A            = #P32_COL5_A  + #GPGB_EE_NIC_VALUE 
       let #P32_COL5_B            = #P32_COL5_B  + #GPGB_ER_NIC_VALUE
       let #P32_COL7              = #P32_COL7    + #GPGB_SMP
       let #P32_COL7_NIC_SMP      = #P32_COL7_NIC_SMP   + ROUND( #GPGB_SMP  * #PYENT_SMP_SER, 2)       
       let #P32_COL10_A           = #P32_COL10_A + #GPGB_EE_RBT_VALUE 
       let #P32_COL10_B           = #P32_COL10_B + #GPGB_ER_RBT_VALUE   
       let #P32_COL9A             = #P32_COL9A   + #GPGB_SPPA 
       let #P32_COL9A_NIC_SPPA    = #P32_COL9A_NIC_SPPA + ROUND(#GPGB_SPPA  * #PYENT_SMP_SER , 2)         
       let #P32_COL9B             = #P32_COL9B   + #GPGB_SPPB
       let #P32_COL9B_NIC_SPPB    = #P32_COL9B_NIC_SPPB + ROUND(#GPGB_SPPB  * #PYENT_SMP_SER , 2)             
        
       let #P32_COL11             = #P32_COL11   + #GPGB_SAP 
       let #P32_COL11_NIC_SAP     = #P32_COL11_NIC_SAP +ROUND( #GPGB_SAP * #PYENT_SMP_SER, 2)
        
ELSE
       let #P32_COL1              = #P32_COL1    + #GPGB_EE_TAX
       let #P32_COL2              = #P32_COL2    + #GPGB_EE_SL 
       !let #P32_COL3              = #P32_COL3    + #GPGB_EE_TC
       let #P32_COL5_A            = #P32_COL5_A  + #GPGB_EE_NIC_VALUE 
       let #P32_COL5_B            = #P32_COL5_B  + #GPGB_ER_NIC_VALUE
       let #P32_COL7              = #P32_COL7    + #GPGB_SMP
       let #P32_COL7_NIC_SMP      = #P32_COL7_NIC_SMP   + ROUND( #GPGB_SMP  * #PYENT_SMP_SER, 2)     
       let #P32_COL10_A           = #P32_COL10_A + #GPGB_EE_RBT_VALUE 
       let #P32_COL10_B           = #P32_COL10_B + #GPGB_ER_RBT_VALUE   
       let #P32_COL9A             = #P32_COL9A   + #GPGB_SPPA 
       let #P32_COL9A_NIC_SPPA    = #P32_COL9A_NIC_SPPA + ROUND(#GPGB_SPPA  * #PYENT_SMP_SER, 2)               
       let #P32_COL9B             = #P32_COL9B   + #GPGB_SPPB
       let #P32_COL9B_NIC_SPPB    = #P32_COL9B_NIC_SPPB + ROUND(#GPGB_SPPB  * #PYENT_SMP_SER, 2)                  
       let #P32_COL11             = #P32_COL11   + #GPGB_SAP 
       let #P32_COL11_NIC_SAP     = #P32_COL11_NIC_SAP +ROUND( #GPGB_SAP * #PYENT_SMP_SER , 2) 
end-if

#Debug Show 'Procedure Name <- EVALUATE-RSLT-P32 '  
end-procedure EVALUATE-RSLT-P32


!*=================================================================
! Procedure:  START-NEW-PAGE                                      !
! Descr:      New page each time the Emplid/Pay Entity changes    !
!                                                                 !
!*=================================================================
begin-procedure START-NEW-PAGE

#Debug Show 'Procedure Name -> START-NEW-PAGE ' 

                  NEW-PAGE
                  
#Debug Show 'Procedure Name <- START-NEW-PAGE '
end-procedure START-NEW-PAGE

!*=================================================================
! Procedure: PRINT-REPORT                                         !
! Descr:     Prints Employee Data                                 !
!                                                                 !
!*=================================================================

begin-procedure PRINT-REPORT

#Debug Show 'Procedure Name -> PRINT-REPORT ' 

     if #PNL_TAX_YEAR  < 2006 
   if $W_Print = 'Y'
        ! Calculate Totals
       
        let #P32_COL10 = #P32_COL10_A + #P32_COL10_B
        let #P32_COL5  = #P32_COL5_A  + #P32_COL5_B - #P32_COL10

        let #P32_COL9  = #P32_COL9A   + #P32_COL9B
        let #P32_COL9_NIC_SPP = #P32_COL9A_NIC_SPPA + #P32_COL9B_NIC_SPPB

        let #P32_COL4  = (#P32_COL1 + #P32_COL2) - #P32_COL3
        let #P32_COL11 =  #P32_COL11 ! changed  #P32_COL7 + #P32_COL10
        let #P32_COL11_NIC_SAP =  #P32_COL11_NIC_SAP ! changed to col12
        let #P32_COL14 = (#P32_COL7 + #P32_COL7_NIC_SMP + #P32_COL9 + #P32_COL9_NIC_SPP + #P32_COL11 + #P32_COL11_NIC_SAP)

        let #P32_COL15 = #P32_COL5 - #P32_COL14
        let #P32_COL16 = #P32_COL4 + #P32_COL15

        
                print $W_PERIOD             (+1,{PosFreq/Period})
                PRINT #P32_COL1             (,{Pos1_v})   Edit 999,999,999.99
                print #P32_COL2             (,{Pos2_v})   Edit 999,999.99
                print #P32_COL3             (,{Pos3_v})   Edit 999,999.99
                print #P32_COL4             (,{Pos4_v})   Edit 999,999,999.99
                print #P32_COL5             (,{Pos5_v})   Edit 999,999,999.99
                print #P32_COL7             (,{Pos7_v})   Edit 999,999.99 
                print #P32_COL9             (,{Pos9_v})   Edit 999,999.99
                print #P32_COL11            (,{Pos11_v})  Edit 999,999.99
                print #P32_COL14            (,{Pos14_v})  Edit 999,999,999.99
                print #P32_COL15            (,{Pos15_v})  Edit 999,999,999.99
                print #P32_COL16            (,{Pos16_v})  Edit 999,999,999.99
                print #P32_COL11_NIC_SAP    (,{Pos12_v})  Edit 999,999.99 
                print #P32_COL9_NIC_SPP     (,{Pos10_v})  Edit 999,999.99 
                print #P32_COL7_NIC_SMP     (,{Pos8_v})   Edit 999,999.99

                

         ! Accumulate for Total per Frequency
         let #P32_COL1_F  = #P32_COL1_F  + #P32_COL1
         let #P32_COL2_F  = #P32_COL2_F  + #P32_COL2
         let #P32_COL3_F  = #P32_COL3_F  + #P32_COL3
         let #P32_COL4_F  = #P32_COL4_F  + #P32_COL4
         let #P32_COL5_F  = #P32_COL5_F  + #P32_COL5
         let #P32_COL7_F  = #P32_COL7_F  + #P32_COL7
         let #P32_COL9_F  = #P32_COL9_F  + #P32_COL9
         let #P32_COL11_F = #P32_COL11_F + #P32_COL11
         let #P32_COL14_F = #P32_COL14_F + #P32_COL14
         let #P32_COL15_F = #P32_COL15_F + #P32_COL15
         let #P32_COL16_F = #P32_COL16_F + #P32_COL16
         let #P32_COL9_NIC_SPP_F  = #P32_COL9_NIC_SPP_F  +  #P32_COL9_NIC_SPP
         let #P32_COL7_NIC_SMP_F  = #P32_COL7_NIC_SMP_F  + #P32_COL7_NIC_SMP 
         let #P32_COL11_NIC_SAP_F = #P32_COL11_NIC_SAP_F + #P32_COL11_NIC_SAP

         
         ! Set values to Zero
         let #P32_COL1    = 0
         let #P32_COL2    = 0
         let #P32_COL3    = 0
         let #P32_COL4    = 0
         let #P32_COL5    = 0
         let #P32_COL5_A  = 0
         let #P32_COL5_B  = 0
         let #P32_COL7    = 0
         let #P32_COL20   = 0
         let #P32_COL10   = 0
         let #P32_COL10_A = 0
         let #P32_COL10_B = 0
         let #P32_COL11   = 0
         let #P32_COL12   = 0
         let #P32_COL9    = 0
         let #P32_COL14   = 0      
         let #P32_COL15   = 0      
         let #P32_COL16   = 0      
         let #P32_COL11   = 0
         let #P32_COL7_NIC_SMP  = 0 
         let #P32_COL9_NIC_SPP  = 0
         let #P32_COL11_NIC_SAP = 0


         let $W_Print     = 'N'

   end-if
ELSE
if $W_Print = 'Y'
        ! Calculate Totals
        
        let #P32_COL10 = #P32_COL10_A + #P32_COL10_B
        let #P32_COL5  = #P32_COL5_A  + #P32_COL5_B - #P32_COL10


        let #P32_COL9  = #P32_COL9A   + #P32_COL9B
        let #P32_COL9_NIC_SPP = #P32_COL9A_NIC_SPPA + #P32_COL9B_NIC_SPPB

        let #P32_COL4  = (#P32_COL1 + #P32_COL2) !removed tax credit from calculation
        let #P32_COL11 =  #P32_COL11 ! changed  #P32_COL7 + #P32_COL10
        let #P32_COL11_NIC_SAP =  #P32_COL11_NIC_SAP ! changed to col12
        let #P32_COL14 = (#P32_COL7 + #P32_COL7_NIC_SMP + #P32_COL9 + #P32_COL9_NIC_SPP + #P32_COL11 + #P32_COL11_NIC_SAP)

        let #P32_COL15 = #P32_COL5 - #P32_COL14
        let #P32_COL16 = #P32_COL4 + #P32_COL15

        
                print $W_PERIOD             (+1,{PosFreq/Period})
                print #P32_COL1             (,{Pos1_v})   Edit 999,999,999.99
                print #P32_COL2             (,{Pos2_v})   Edit 999,999.99
                !print #P32_COL3             (,{Pos3_v})   Edit 999,999.99
                print #P32_COL4             (,{Pos4_v})   Edit 999,999,999.99
                print #P32_COL5             (,{Pos5_v})   Edit 999,999,999.99
                print #P32_COL7             (,{Pos7_v})   Edit 999,999.99 
                print #P32_COL9             (,{Pos9_v})   Edit 999,999.99
                print #P32_COL11            (,{Pos11_v})  Edit 999,999.99
                print #P32_COL14            (,{Pos14_v})  Edit 999,999,999.99
                print #P32_COL15            (,{Pos15_v})  Edit 999,999,999.99
                print #P32_COL16            (,{Pos16_v})  Edit 999,999,999.99
                print #P32_COL11_NIC_SAP    (,{Pos12_v})  Edit 999,999.99 
                print #P32_COL9_NIC_SPP     (,{Pos10_v})  Edit 999,999.99 
                print #P32_COL7_NIC_SMP     (,{Pos8_v})   Edit 999,999.99

                

         ! Accumulate for Total per Frequency
         let #P32_COL1_F  = #P32_COL1_F  + #P32_COL1
         let #P32_COL2_F  = #P32_COL2_F  + #P32_COL2
         !let #P32_COL3_F  = #P32_COL3_F  + #P32_COL3
         let #P32_COL4_F  = #P32_COL4_F  + #P32_COL4
         let #P32_COL5_F  = #P32_COL5_F  + #P32_COL5
         let #P32_COL7_F  = #P32_COL7_F  + #P32_COL7
         let #P32_COL9_F  = #P32_COL9_F  + #P32_COL9
         let #P32_COL11_F = #P32_COL11_F + #P32_COL11
         let #P32_COL14_F = #P32_COL14_F + #P32_COL14
         let #P32_COL15_F = #P32_COL15_F + #P32_COL15
         let #P32_COL16_F = #P32_COL16_F + #P32_COL16
         let #P32_COL9_NIC_SPP_F  = #P32_COL9_NIC_SPP_F  +  #P32_COL9_NIC_SPP
         let #P32_COL7_NIC_SMP_F  = #P32_COL7_NIC_SMP_F  + #P32_COL7_NIC_SMP 
         let #P32_COL11_NIC_SAP_F = #P32_COL11_NIC_SAP_F + #P32_COL11_NIC_SAP

         
         ! Set values to Zero
         let #P32_COL1    = 0
         let #P32_COL2    = 0
         !let #P32_COL3    = 0
         let #P32_COL4    = 0
         let #P32_COL5    = 0
         let #P32_COL5_A  = 0
         let #P32_COL5_B  = 0
         let #P32_COL7    = 0
         let #P32_COL7A   = 0
         let #P32_COL7B   = 0
         let #P32_COL20   = 0
         let #P32_COL10   = 0
         let #P32_COL10_A = 0
         let #P32_COL10_B = 0
         let #P32_COL11   = 0
         let #P32_COL12   = 0
         let #P32_COL9    = 0
         let #P32_COL9A   = 0
         let #P32_COL9B   = 0
         let #P32_COL14   = 0      
         let #P32_COL15   = 0      
         let #P32_COL16   = 0      
         let #P32_COL11   = 0
         let #P32_COL7_NIC_SMP  = 0 
         let #P32_COL7A_NIC_SMP  = 0 
         let #P32_COL7B_NIC_SMP  = 0 
         let #P32_COL9_NIC_SPP  = 0
         let #P32_COL9A_NIC_SPPA = 0
         let #P32_COL9B_NIC_SPPB = 0
         let #P32_COL11_NIC_SAP = 0

         let $W_print     = 'N'

   end-if
end-if

#Debug Show 'Procedure Name <- PRINT-REPORT '  
end-procedure print-REPORT


!*=================================================================
! Procedure: PRINT TOT-FREQ                                       !
! Descr:     Print Frequency Totals                               !
!                                                                 !
!*=================================================================
begin-procedure PRINT-TOT-FREQ

#Debug Show 'Procedure Name -> PRINT-TOT-FREQ ' 
 
if #PNL_TAX_YEAR  < 2006 
        graphic                   (+1,1,170) horz-line
        print 'Total'            (+2,{PosFreq/Period})
        print $FREQUENCY          (,+1)
        print #P32_COL1_F         (,{Pos1_v}) edit 999,999,999.99
        print #P32_COL2_F         (,{Pos2_v}) edit 999,999.99
        print #P32_COL3_F         (,{Pos3_v}) edit 999,999.99
        print #P32_COL4_F         (,{Pos4_v}) edit 999,999,999.99
        print #P32_COL5_F         (,{Pos5_v}) Edit 999,999,999.99
        print #P32_COL7_F         (,{Pos7_v}) edit 999,999.99
        print #P32_COL9_F         (,{Pos9_v})  Edit 999,999.99
        print #P32_COL11_F        (,{Pos11_v})  Edit 999,999.99
        print #P32_COL14_F        (,{Pos14_v})  Edit 999,999,999.99
        print #P32_COL15_F        (,{Pos15_v})  Edit 999,999,999.99
        print #P32_COL16_F        (,{Pos16_v})  Edit 999,999,999.99
        print #P32_COL7_NIC_SMP_F (,{Pos8_v}) edit 999,999.99 ! to be modified for nic_smp
        print #P32_COL9_NIC_SPP_F (,{Pos10_v})  Edit 999,999.99 ! col 10 used
        print #P32_COL11_NIC_SAP_F (,{Pos12_v})  Edit 999,999.99 ! col 12 used 
  
        graphic                   (+1,1,170) horz-line
        print '  '                (+1,1)

         ! Accumulate for Grand Total
         let #P32_COL1_T  = #P32_COL1_T  + #P32_COL1_F
         let #P32_COL2_T  = #P32_COL2_T  + #P32_COL2_F
         let #P32_COL3_T  = #P32_COL3_T  + #P32_COL3_F
         let #P32_COL4_T  = #P32_COL4_T  + #P32_COL4_F
         let #P32_COL5_T  = #P32_COL5_T  + #P32_COL5_F
         let #P32_COL7_T  = #P32_COL7_T  + #P32_COL7_F
         let #P32_COL9_T  = #P32_COL9_T  + #P32_COL9_F
         let #P32_COL13_T = #P32_COL13_T + #P32_COL13_F      
         let #P32_COL14_T = #P32_COL14_T + #P32_COL14_F      
         let #P32_COL15_T = #P32_COL15_T + #P32_COL15_F      
         let #P32_COL16_T = #P32_COL16_T + #P32_COL16_F      
         let #P32_COL11_T = #P32_COL11_T + #P32_COL11_F
         let #P32_COL7_NIC_SMP_T  = #P32_COL7_NIC_SMP_T  + #P32_COL7_NIC_SMP_F 
         let #P32_COL9_NIC_SPP_T  = #P32_COL9_NIC_SPP_T  + #P32_COL9_NIC_SPP_F
         let #P32_COL11_NIC_SAP_T = #P32_COL11_NIC_SAP_T + #P32_COL11_NIC_SAP_F

        ! Set values to Zero
        let #P32_COL1_F  = 0
        let #P32_COL2_F  = 0
        let #P32_COL3_F  = 0
        let #P32_COL4_F  = 0
        let #P32_COL5_F  = 0
        let #P32_COL7_F  = 0
        let #P32_COL9_F  = 0
        let #P32_COL14_F = 0      
        let #P32_COL15_F = 0      
        let #P32_COL16_F = 0      
        let #P32_COL11_F = 0
        let #P32_COL7_NIC_SMP_F  = 0 
        let #P32_COL9_NIC_SPP_F = 0
        let #P32_COL11_NIC_SAP_F =0

        do START-NEW-PAGE
ELSE
         graphic                   (+1,1,170) horz-line
        print 'Total'              (+2,{PosFreq/Period})
        print  $FREQUENCY         (,+0) shade
        print #P32_COL1_F         (,{Pos1_v}) edit 999,999,999.99
        print #P32_COL2_F         (,{Pos2_v}) edit 999,999.99
        !print #P32_COL3_F         (,{Pos3_v}) edit 999,999.99
        print #P32_COL4_F         (,{Pos4_v}) edit 999,999,999.99
        print #P32_COL5_F         (,{Pos5_v}) edit 999,999,999.99
        print #P32_COL7_F         (,{Pos7_v}) edit 999,999.99
        print #P32_COL9_F         (,{Pos9_v})  Edit 999,999.99
        print #P32_COL11_F        (,{Pos11_v})  Edit 999,999.99
        print #P32_COL14_F        (,{Pos14_v})  Edit 999,999,999.99
        print #P32_COL15_F        (,{Pos15_v})  Edit 999,999,999.99
        print #P32_COL16_F        (,{Pos16_v})  Edit 999,999,999.99
        print #P32_COL7_NIC_SMP_F (,{Pos8_v}) edit 999,999.99 ! to be modified for nic_smp
        print #P32_COL9_NIC_SPP_F (,{Pos10_v})  Edit 999,999.99 ! col 10 used
        print #P32_COL11_NIC_SAP_F (,{Pos12_v})  Edit 999,999.99 ! col 12 used 
  
        graphic                   (+1,1,170) horz-line
        print '  '                (+1,1)

         ! Accumulate for Grand Total
         let #P32_COL1_T  = #P32_COL1_T  + #P32_COL1_F
         let #P32_COL2_T  = #P32_COL2_T  + #P32_COL2_F
         !let #P32_COL3_T  = #P32_COL3_T  + #P32_COL3_F
         let #P32_COL4_T  = #P32_COL4_T  + #P32_COL4_F
         let #P32_COL5_T  = #P32_COL5_T  + #P32_COL5_F
         let #P32_COL7_T  = #P32_COL7_T  + #P32_COL7_F
         let #P32_COL9_T  = #P32_COL9_T  + #P32_COL9_F
         let #P32_COL13_T = #P32_COL13_T + #P32_COL13_F      
         let #P32_COL14_T = #P32_COL14_T + #P32_COL14_F      
         let #P32_COL15_T = #P32_COL15_T + #P32_COL15_F      
         let #P32_COL16_T = #P32_COL16_T + #P32_COL16_F      
         let #P32_COL11_T = #P32_COL11_T + #P32_COL11_F
         let #P32_COL7_NIC_SMP_T  = #P32_COL7_NIC_SMP_T  + #P32_COL7_NIC_SMP_F 
         let #P32_COL9_NIC_SPP_T  = #P32_COL9_NIC_SPP_T  + #P32_COL9_NIC_SPP_F
         let #P32_COL11_NIC_SAP_T = #P32_COL11_NIC_SAP_T + #P32_COL11_NIC_SAP_F

        ! Set values to Zero
        let #P32_COL1_F  = 0
        let #P32_COL2_F  = 0
        !let #P32_COL3_F  = 0
        let #P32_COL4_F  = 0
        let #P32_COL5_F  = 0
        let #P32_COL7_F  = 0
        let #P32_COL9_F  = 0
        let #P32_COL14_F = 0      
        let #P32_COL15_F = 0      
        let #P32_COL16_F = 0      
        let #P32_COL11_F = 0
        let #P32_COL7_NIC_SMP_F  = 0 
        let #P32_COL9_NIC_SPP_F = 0
        let #P32_COL11_NIC_SAP_F =0

        do START-NEW-PAGE

end-if

#Debug Show 'Procedure Name <- print-TOT-FREQ ' 
          
end-procedure print-TOT-FREQ


!*=================================================================
! Procedure: print TOTALS                                         !
! Descr:     Print Pay Entity Totals                              !
!                                                                 !
!*=================================================================
begin-procedure PRINT-TOTALS

#Debug Show 'Procedure Name -> PRINT-TOTALS ' 

if #PNL_TAX_YEAR < 2006  

        graphic                   (+1,1,170) horz-line
        print 'Total'            (+2,{PosFreq/Period})
        print #P32_COL1_T         (,{Pos1_v}) edit 999,999,999.99
        print #P32_COL2_T         (,{Pos2_v}) edit 999,999.99
        print #P32_COL3_T         (,{Pos3_v}) edit 999,999.99
        print #P32_COL4_T         (,{Pos4_v}) edit 999,999,999.99
        print #P32_COL5_T         (,{Pos5_v}) edit 999,999,999.99 
        print #P32_COL7_T         (,{Pos7_v}) edit 999,999.99
        print #P32_COL9_T         (,{Pos9_v})  Edit 999,999.99
        print #P32_COL11_T        (,{Pos11_v})  Edit 999,999.99
        print #P32_COL14_T        (,{Pos14_v})  Edit 999,999,999.99
        print #P32_COL15_T        (,{Pos15_v})  Edit 999,999,999.99
        print #P32_COL16_T        (,{Pos16_v})  Edit 999,999,999.99
        print #P32_COL7_NIC_SMP_T (,{Pos8_v}) edit 999,999.99 ! to be modified for nic_smp
        print #P32_COL9_NIC_SPP_T (,{Pos10_v})  Edit 999,999.99 ! col 10 used
        print #P32_COL11_NIC_SAP_T (,{Pos12_v})  Edit 999,999.99 ! col 12 used 

        graphic                   (+2,1,175) horz-line
ELSE
        graphic                   (+1,1,170) horz-line
        print 'Total'            (+2,{PosFreq/Period})
        print #P32_COL1_T         (,{Pos1_v}) edit 999,999,999.99
        print #P32_COL2_T         (,{Pos2_v}) edit 999,999.99
        !print #P32_COL3_T         (,{Pos3_v}) edit 999,999.99
        print #P32_COL4_T         (,{Pos4_v}) edit 999,999,999.99
        print #P32_COL5_T         (,{Pos5_v}) edit 999,999,999.99
        print #P32_COL7_T         (,{Pos7_v}) edit 999,999.99
        print #P32_COL9_T         (,{Pos9_v})  Edit 999,999.99
        print #P32_COL11_T        (,{Pos11_v})  Edit 999,999.99
        print #P32_COL14_T        (,{Pos14_v})  Edit 999,999,999.99
        print #P32_COL15_T        (,{Pos15_v})  Edit 999,999,999.99
        print #P32_COL16_T        (,{Pos16_v})  Edit 999,999,999.99
        print #P32_COL7_NIC_SMP_T (,{Pos8_v}) edit 999,999.99 ! to be modified for nic_smp
        print #P32_COL9_NIC_SPP_T (,{Pos10_v})  Edit 999,999.99 ! col 10 used
        print #P32_COL11_NIC_SAP_T (,{Pos12_v})  Edit 999,999.99 ! col 12 used 

        graphic                   (+2,1,170) horz-line
end-if

#Debug Show 'Procedure Name <- PRINT-TOTALS '  

end-procedure PRINT-TOTALS


!******************************************************************
!                  G E N E R A L   F U N C T I O N S
!******************************************************************

!*=================================================================
! Procedure     :GET-VALUES
! Comment       :This procedure gets the variable name (beginning
!                with a $) that will be used throughout the report
!                using the run control parameters called in
!                GET-RUN-CONTROL-PARMS.
!*=================================================================
begin-procedure GET-VALUES

#Debug Show 'Procedure Name -> GET-VALUES ' 


let $sql-statement = 'GPGBP32.SQR,GET-VALUES,Select,PS_GPGB_RUNCTL_SQR'
begin-SELECT on-error=SQL-ERROR
RUNDB.CAL_RUN_ID
RUNDB.DEPTID
RUNDB.PAY_ENTITY
RUNDB.GP_PAYGROUP
RUNDB.EMPLID
RUNDB.FREQUENCY_ID
RUNDB.GPGB_TAX_PERIOD
RUNDB.GPGB_TAX_BGN_YR

        let $PNL_CAL_RUN_ID         = RTRIM(&RUNDB.CAL_RUN_ID,' ')
        let $PNL_DEPTID             = RTRIM(&RUNDB.DEPTID,' ')
        let $PNL_PAY_ENTITY         = RTRIM(&RUNDB.PAY_ENTITY,' ')
        let $PNL_PAYGROUP           = RTRIM(&RUNDB.GP_PAYGROUP,' ')
        let $PNL_EMPLID             = RTRIM(&RUNDB.EMPLID,' ')
        let #PNL_TAX_PERIOD         = &RUNDB.GPGB_TAX_PERIOD
        let $PNL_TAX_PERIOD         = EDIT(#PNL_TAX_PERIOD,'09')
        let $PNL_FREQUENCY_ID       = RTRIM(&RUNDB.FREQUENCY_ID,' ')
        let $PNL_TAX_YEAR           = RTRIM(EDIT(&RUNDB.GPGB_TAX_BGN_YR, '9999'),' ')
        let #PNL_TAX_YEAR           = &RUNDB.GPGB_TAX_BGN_YR

        FROM  PS_GPGB_RUNCTL_SQR RUNDB
        WHERE RUNDB.OPRID         = $Prcs_OprID
          AND RUNDB.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID

end-SELECT
#Debug Show 'Procedure Name <- GET-VALUES '  

end-procedure GET-VALUES


!*=================================================================
! Procedure:  BUILD-WHERE-RUNCTL                                  !
! Descr:      Build Where Statement from Run Control Parameters
!                                                                 !
!*=================================================================
begin-procedure BUILD-WHERE-RUNCTL

#Debug Show 'Procedure Name -> BUILD-WHERE-RUNCTL ' 

        let $Q                  = ''''

        let $WHERE_STATEMENT    = 'WHERE A.GPGB_TAX_BGN_YR = '
                                  || $PNL_TAX_YEAR
        let $FREQ_WHERE         = ' AND A.FREQUENCY_ID = '''
                                  || $PNL_FREQUENCY_ID || $Q
        let $PERIOD_WHERE       = ' AND A.GPGB_TAX_PERIOD = '
                                  || $PNL_TAX_PERIOD
        let $CALENDER_WHERE     = ' AND A.CAL_RUN_ID = '''
                                  || $PNL_CAL_RUN_ID || $Q
        let $DEPTID_WHERE       = ' AND B.DEPTID = '''
                                  || $PNL_DEPTID || $Q
        let $PAY_ENTITY_WHERE   = ' AND A.PAY_ENTITY = '''
                                  || $PNL_PAY_ENTITY || $Q
        let $EMPLID_WHERE       = ' AND A.EMPLID = '''
                                  || $PNL_EMPLID || $Q
        let $PAYGROUP_WHERE     = ' AND A.GP_PAYGROUP = '''
                                  || $PNL_PAYGROUP || $Q

        if  #PNL_TAX_PERIOD <> 00
                let $WHERE_STATEMENT= $WHERE_STATEMENT
                                      || $PERIOD_WHERE
        end-if

        evaluate ''
        when <> $PNL_FREQUENCY_ID
                let $WHERE_STATEMENT = $WHERE_STATEMENT
                                       || $FREQ_WHERE
        when <> $PNL_CAL_RUN_ID
                let $WHERE_STATEMENT = $WHERE_STATEMENT
                                       || $CALENDER_WHERE
        when <> $PNL_DEPTID
                let $WHERE_STATEMENT = $WHERE_STATEMENT
                                       || $DEPTID_WHERE
                break
        when <> $PNL_PAY_ENTITY
                let $WHERE_STATEMENT = $WHERE_STATEMENT
                                       || $PAY_ENTITY_WHERE

        when <> $PNL_EMPLID
                let $WHERE_STATEMENT = $WHERE_STATEMENT
                                       || $EMPLID_WHERE
                break
        when <> $PNL_PAYGROUP
                let $WHERE_STATEMENT = $WHERE_STATEMENT
                                       || $PAYGROUP_WHERE
                break
        end-evaluate

       
      
#Debug Show 'Procedure Name <- BUILD-WHERE-RUNCTL '  

end-procedure BUILD-WHERE-RUNCTL


!*=================================================================
! Procedure   :ASK-VALUES
! Comment     :This procedure prompts the user for those variable
!              values that will be used throughout the report.
!              ASK-VALUES is called when the user is not using
!              the process scheduler. This procedure calls whatever
!              procedures are needed. (eg. do ASK-FROM-THRU-DATE).
!*=================================================================
begin-procedure ASK-VALUES

#Debug Show 'Procedure Name -> ASK-VALUES ' 

        !input $PNL_CAL_RUN_ID 'Enter Calender Run ID'
        !input $PNL_PAY_ENTITY 'Enter Pay Entity'
        !input $PNL_DEPTID 'Enter Department ID'
        !input $PNL_PAYGROUP 'Enter Pay Group '
        !input $PNL_EMPLID 'Enter Employee ID '
        !input $PNL_TAX_PERIOD 'Enter Tax Period'
        !input $PNL_FREQUENCY_ID 'Enter Frequency ID'
        !input $PNL_TAX_YEAR 'Enter The Year the Tax Year Begins In'
#Debug Show 'Procedure Name <- ASK-VALUES ' 

end-procedure ASK-VALUES

!******************************************************************
!***    ERROR - SQL error procedure
!******************************************************************
begin-procedure Error-Sql

    #Debug Show 'Error-Sql->'

        add 1 to #CountError

        #Debug Show 'SQL Error -> ' $ProcedureName
        #Debug Show 'SQL Error -> ' $ErrorMessage
        #Debug Show 'SQL Error -> ' $SQL-ERROR

        stop

   #Debug Show 'Error-Sql<-'

end-procedure Error-Sql


!******************************************************************
!***    Common SQC Modules Copied In For Program Usage
!******************************************************************
#include 'curdttim.sqc' ! Get-Current-DateTime procedure
#include 'datetime.sqc' ! Routines for date and time formatting
#include 'number.sqc'   ! Routines to format numbers
#include 'prcsapi.sqc'  ! Update Process Request API
#include 'prcsdef.sqc'  !Update Process Request variable declaration
#include 'tranctrl.sqc' ! Handle Commit/Rollback per platform
#include 'useprntr.sqc' ! Init Printer
#include 'readxlat.sqc' ! Read Translate Table
#include 'gpgbut01.sqc' ! Payentity Details
#include 'gpgbut02.sqc' ! Log Details
!******************************* End Of Program *******************

