!***********************************************************************
! GPBRRR01.- Payroll Result Register.                                  *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2018, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  25986083                                            !
!***********************************************************************


#define col02       2
#define colba      20
#define colbad      30
#define col20      20
#define col27      27
#define col39      39
#define col40      40
#define col43      43
#define col45      45
#define col48      48
#define col49      49
#define col49a     55
#define col50      50
#define col51      51
#define col52      52
#define col53      53
#define col64      64
#define col66      66
#define col82      82
#define col94      94
#define col96      96
#define col98      98
#define col100    100
#define col101    101
#define col100a   97
#define col101    101
#define col104    104
#define col105    105
#define col106    106
#define col108    108
#define col109    109
#define col110    110
#define col110a   116
#define col111    111
#define col115    115
#define col105    105
#define Col_Ec3    47
#define Col_Ec6   103

#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
       Type=HPLASERJET
       Font=5
       Point-Size=12
       Pitch=17
       Symbol-Set=0U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
       Orientation=Portrait
       Top-Margin= .4
       Left-Margin=.60
       Max-Lines=82
       Max-Columns=130
       Char-Width=4.3    ! 7.2
       Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
 End-Declare

end-Setup

!**************************************
begin-report
!**************************************

  Let #StdFont     = 5                  !Times Roman proportional
  Let #StmtPntSize = 8                  !statement point-size
  Let #DescrSize   = 6                  !Pin Name Size Print
  Let #DescrSize2  = 9                  !Pin Name Size Print
  
  do Init-Report
  do Report-Translation
  do Select-Parameters
  
  Let $SecurityClauseWithERN = ''
  Let $_TableAlias = 'J'
  Do Security-Param
  if $CalRunId <> ''
     do Def-Arrays
     do Process-Main
     if $ListOption <> '2'
        Do Delete-Estabid
     end-if
  else
     show 'Run Control Missing '
  end-if
  do Stdapi-Term
  do Reset                        
end-report

!***************************************
begin-procedure Init-Report
!***************************************  
  move '2' to $ReportDateType   ! Set for date to format as DMY
  move '1' to $ReportYear4      ! Set for year to be formatted YYYY

  move '.'                To $ReportSThousand 
  move ','                To $ReportSDecimal
     
  Alter-Locale MONEY-SIGN = 'R$'
  
  do Init-Datetime
  do Init-Number
  do Stdapi-Init
  do Get-Current-Datetime  
  move 'GPBRRR01' to $ReportId
  move 'Result Register' to $ReportTitle
  show 'V2016A'
  display $ReportID
  display $ReportTitle
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display $AsOfToday
  display &timeBegan  
end-procedure Init-Report

!***************************
Begin-heading 13
!***************************
  Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont
    
  graphic (1, 1, 125) box 5
    
  print $TPeopleSoft       (1)       center     
  print $TReportId         (2,3)
  print $ReportID          (2,+2) 

  Alter-Printer Point-size = 6 Font-Type = Proportional Font = #StdFont
  print $prcs_process_instance (2,+2)
  
  
  Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont
  
  print $TPage             (0,93)
  page-number              (0,{col108})  
  print $TTitle01          (2)        center 
    
  Print $EstabidDescr      (+1,3)    
    
  Print $TRunDt            (0,93)
  Let $ReportDate = Ltrim(Rtrim($ReportDate, ' '), ' ')
  Print $ReportDate        (0,{col108})
  Print &timeBegan         (0,+1)  
  
  if $SummaryInd = 'Y' or
     $PrintDetail = 'N'
     Print $TTitle03       (3)          center bold
  else
     Print $TTitle02       (3)          center bold
  end-if
  
    Print $EstAddress1       (+1,3)
    Print $CalcStatus        (,{col51})   
    Print $TFormat           (,93)
    Print $FormatId          (,{col108})
    
    Print $EstAddress2       (+1,3)  
    Print 'CNPJ:'            (0,93)
    Print $CNPJ              (0,{col108}) 
    
    Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont
  
    graphic                  (+2, 1, 125) box 3
  
    print $TTCompany      (,{col02})
    print $CompanyP       (,{col27})
    print $CompanyNmP     (,{col40})

    print $TBeginPeriod      (,{col82})
    print $BeginDtP          (,{col105}) 
  
    If $ImprimeEst = 'Y'
       print $TTEstabid      (+1,{col02})
       print $EstabidDescrP  (,{col40})
       print $EstabidP       (,{col27})
    else
       If $ImprimeDep = 'Y'
          print $TTDeptid    (+1,{col02})
          print $DeptIDDescr  (,{col40})
          print $DeptidP       (,{col27})
       else 
          print ' '                (+1)
       end-if
    end-if
  
  print $TEndPeriod        (,{col82})
  
  print $EndDtP            (,{col105})
  print $TCalGroupId       (+1,{col02})  
  print $CalRunIDP         (,{col27}) 
  print $TPaymentDt        (,{col82})
  print $PayDtP            (,{col105})

  if $SummaryInd = 'N' 
     If $PrintDetail = 'Y'
        graphic (+2, 1, 125) box 2
        Alter-Printer Point-size = #DescrSize Font-Type = Proportional Font = #StdFont
        print $TEmplid        (,{col02})
        print $TName          (,{col20})
        print $TDailyRt       (,{Col66})
        print $TCalId         (,{col82})
        print $TTerminationDt (,{Col_Ec6})
        print $TTDeptid        (+1,{col02})
        print $TServiceDt     (,{col82})
    else
        Alter-Printer Point-size = #DescrSize Font-Type = Proportional Font = #StdFont 
        print ' '             (+2,)
    end-if  
  end-if
     
 graphic (+1, 1, 125) box 2
 print $TEarnings         (,{col48}) bold
 print $TDeductions       (,{col106}) bold
 print $TElement          (+1,{col02})
 print $TDescription      (,{col20})
 print $TUnit             (,{Col43})
 print $TAmount           (,{Col49a})
 print $TElement          (,{Col64})
 print $TDescription      (,{Col82})
 print $TUnit             (,{Col101})
 print $TAmount           (,{Col110a})
 
 Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont

end-heading


!***************************
Begin-procedure Heading2
!***************************
  Let $PrintDetail = 'Y'
  Let $CompanyP    = $Company  
  Let $EstabidP    = $Estabid 
  Let $DeptIdP     = $Deptid 
  
  Do Get-Estabid-Rel-Lang
  Do Get-Company-Descr
  Do Get-Dept-Descr
  Let $CompanyNmP  = $CompanyNm   
  Do Format-DateTime($PeriodBeginDt, $BeginDtP, {DEFDMY}, '', '')
  Let $EstabidDescrP = $EstabidDescr

  do Format-DateTime($PeriodEndDt, $EndDtP, {DEFDMY}, '', '')
  Let $CalRunIDP   = $CalRunID 
  do Format-DateTime($PaymentDt, $PayDtP, {DEFDMY}, '', '')
  
end-procedure Heading2

!***************************
Begin-procedure Heading3
#debug show 'Heading3'
#debug show '$TDeptid: ' $TDeptid
!***************************
   Let $PrintDetail = 'N'
   Let $CompanyP    = $TCompany  
   Let $EstabidP    = $TEstabid  
   Let $DeptIdP     = $TDeptid
   
   Do Get-Estabid-Rel-Lang
   Do Get-Company-Descr
   Do Get-Dept-Descr
   Let $CompanyNmT  = $CompanyNm   
   Let $EstabidDescrP = $EstabidDescr    
   
   Do Format-DateTime($PeriodBeginDt, $BeginDtP, {DEFDMY}, '', '')
   do Format-DateTime($PeriodEndDt, $EndDtP, {DEFDMY}, '', '')
   Let $CalRunIDP   = $CalRunID 
   do Format-DateTime($PaymentDt, $PayDtP, {DEFDMY}, '', '')   
  
end-procedure Heading3

!**************************************
begin-procedure Process-Main
!**************************************

  Let #countEe = 0 
  Let #countEd = 0
  Let #countEb = 0
  
  Let #TotalEb = 0 
  Let #countCe = 0 
  Let #countCd = 0
  Let #countCb = 0
  Let #TotalCb = 0 
  
  Let $OrderBy = ' '
  if $EE_Lvl_Sort = '10'
     if $ListOption = '7'
        Let $Order_By_Clause = 'ORDER BY P.CAL_RUN_ID, J.COMPANY, J.DEPTID, P.CAL_ID, S.EMPLID, S.EMPL_RCD '
     else
        Let $Order_By_Clause = 'ORDER BY P.CAL_RUN_ID, J.COMPANY, J.ESTABID, P.CAL_ID, S.EMPLID, S.EMPL_RCD '
     end-if
  else
     if $ListOption = '7'
        Let $Order_By_Clause = 'ORDER BY P.CAL_RUN_ID, J.COMPANY, J.ESTABID, P.CAL_ID, NM.NAME_DISPLAY, S.EMPL_RCD '
     else
        Let $Order_By_Clause = 'ORDER BY P.CAL_RUN_ID, J.COMPANY, J.DEPTID,  P.CAL_ID, NM.NAME_DISPLAY, S.EMPL_RCD '
     end-if
  end-if
  
  Do GetPinName('GPBR_RC_PAYRSL', 'DEDUCTION', $pinNmDed)
  Do GetPinName('GPBR_RC_PAYRSL', 'EARNING',   $pinNmErn)
  
  #debug show '$pinNmDed ' $pinNmDed
  #debug show '$pinNmErn ' $pinNmErn

!  If $SummaryInd = 'N'
      Do Process-Detail
!  else
!     Do Process-Summary
!  end-if
  
  Show 'Registros Leidos: ' #Reglei
  Show 'Registros Procesados: ' #Regpro
  
  If #regpro = 0
     Let $noDataMsg = '>>> No Data Found, Calendar Group ID: ' || $CalRunID
     show  $noDataMsg
  end-if 
end-procedure Process-Main

!**************************************
begin-procedure Insert-Estabid
!**************************************
begin-SQL
INSERT INTO PS_GPBR_RC_PAYRSL1
(OPRID
,RUN_CNTL_ID
,ESTABID)
VALUES
($PRCS_OPRID
,$PRCS_RUN_CNTL_ID 
,$Estabid)
End-SQL
end-procedure Insert-Estabid

!**************************************
begin-procedure Get-PR-Status
!**************************************
Let $FinalizedInd = ''

Begin-Select
RUN_FINALIZED_IND   

  Let $FinalizedInd  = Rtrim(&RUN_FINALIZED_IND, ' ')
  if $FinalizedInd   = 'Y'
     Let $CalcStatus = $TStatusEnd
  else
     Let $CalcStatus = $TStatusOpen
  end-if
  
FROM PS_GP_CAL_RUN
WHERE CAL_RUN_ID = $CalRunID
End-Select

end-procedure Get-PR-Status

!**************************************
begin-procedure Get-Company-Descr
!**************************************
Begin-Select
A.DESCR
A.ADDRESS1

  Let $CompanyNm   = Rtrim(&A.DESCR, ' ')
    
FROM PS_COMPANY_TBL A
WHERE A.COMPANY = $Companyp
AND A.EFFDT = (SELECT MAX(EFFDT) 
               FROM PS_COMPANY_TBL
               WHERE COMPANY = A.COMPANY
               AND   EFFDT <=  $PeriodEndDt)
End-Select

Begin-Select
CL.DESCR

  Let $CompanyNm   = Rtrim(&CL.DESCR, ' ')
    
FROM PS_COMPNY_TBL_LANG CL
WHERE CL.COMPANY = $Companyp
AND CL.LANGUAGE_CD = $Curr_language_Cd
AND CL.EFFDT = (SELECT MAX(EFFDT) 
               FROM PS_COMPNY_TBL_LANG
               WHERE COMPANY = CL.COMPANY
               AND   LANGUAGE_CD = CL.LANGUAGE_CD
               AND   EFFDT <=  $PeriodEndDt)
End-Select
end-procedure Get-Company-Descr

!**************************************
begin-procedure Get-Estabid-Rel-Lang
!**************************************
BEGIN-Select
E.DESCR
E.ADDRESS1
E.ADDRESS2
E.ADDRESS4
E.CITY
E.STATE
E.POSTAL
E.NUM1

  Do Select-Estab-Id
  Let $Num1          = Rtrim(&E.NUM1, ' ')
  Let $CompanyAdd1   = Rtrim(&E.ADDRESS1, ' ')
  Let $CompanyPostal = Rtrim(&E.POSTAL, ' ')
  Let $CompanyState  = Rtrim(&E.STATE, ' ')
  Let $CompanyAdd2   = Rtrim(&E.ADDRESS2, ' ')
  Let $CompanyAdd4   = Rtrim(&E.ADDRESS4, ' ')
  Let $CompanyCity   = Rtrim(&E.CITY, ' ')
  Let $EstAddress1   = $CompanyAdd1 || ' ' || $Num1 
  Let $EstAddress1   = Ltrim($EstAddress1, ' ')
  Let $EstAddress2   = $CompanyAdd2 || ', ' || $CompanyAdd4 
  Let $EstAddress2   = Rtrim($EstAddress2, ', ')
  Let $EstAddress2   = Ltrim($EstAddress2, ', ')
  Let $EstAddress2   = $EstAddress2 || ', ' || $CompanyState 
  Let $EstAddress2   = Rtrim($EstAddress2, ', ')
  Let $EstAddress2   = $EstAddress2 || ', ' || $CompanyCity || ' ' || $CompanyPostal
  
  Let $EstabidDescr  = Rtrim(&E.DESCR, ' ')
     
FROM PS_ESTAB_TBL E
WHERE E.ESTABID = $EstabidP
AND E.EFFDT = (SELECT MAX(E1.EFFDT) 
               FROM PS_ESTAB_TBL E1
               WHERE E1.ESTABID = E.ESTABID
               AND E1.EFFDT <= $PeriodEndDt)
End-Select

BEGIN-Select
EE.DESCR     

  Let $EstabidDescr = Ltrim(Rtrim(&EE.DESCR, ' '), ' ')

FROM PS_ESTAB_TBL_LANG EE
WHERE EE.ESTABID = $EstabidP
AND   EE.LANGUAGE_CD = $curr_language_cd
AND   EE.EFFDT = (SELECT MAX(E1.EFFDT) 
               FROM PS_ESTAB_TBL_LANG E1
               WHERE E1.ESTABID = EE.ESTABID
               AND E1.LANGUAGE_CD = EE.LANGUAGE_CD
               AND E1.EFFDT <= $PeriodEndDt)
END-Select
end-procedure Get-Estabid-Rel-Lang

!**************************************
begin-procedure Select-Estab-Id
!**************************************
Let $CNPJ = ''

Begin-Select
A.ESTAB_ID_TYPE_BRA
A.ESTAB_ID_BRA

  Let $EstabIdType = rtrim(&A.ESTAB_ID_TYPE_BRA, ' ')
 
  Evaluate $EstabIdType
  when = 'CNPJ'
       Let $CNPJ = Rtrim(&A.ESTAB_ID_BRA, ' ' )
  when = 'CNAE'
       Let #CNAE = &A.ESTAB_ID_BRA  
       Let $CNAE = Edit(#CNAE, '00000')
  End-Evaluate
  
FROM  PS_ESTAB_ID_BRA A
     ,PS_ESTAB_TBL_BRA A2
WHERE A.ESTABID = $EstabId
AND   A.ESTABID = A2.ESTABID
AND   A.COUNTRY = 'BRA'
AND   A.COUNTY_CD_BRA  = A2.COUNTY_CD_BRA
AND   A.EFFDT = A2.EFFDT
End-Select
End-Procedure Select-Estab-Id

!**************************************
begin-procedure Process-Detail
#debug show 'Procedure: Process-Detail'
!*************************************
#debug show '    $CalRunID       :' $CalRunID
#debug show '    $Company_Clause :' $Company_Clause
#debug show '    $WhereClause    :' $WhereClause
#debug show '    $Order_By_Clause       :' $Order_By_Clause
Let $ImprimeCom   = 'N'
Let #SummaryCount = 0


Let #regpro = 0
Let #reglei = 0
Let $Company = ''
Let $CompanyOK = ''
Let $EstabidAnt = ''
Let $DeptidAnt = ''

BEGIN-Select
P.CAL_RUN_ID     
P.CAL_ID    
J.COMPANY      () On-Break Print=Never before=Store-Company      After=Process-Total Level=1 
J.ESTABID      () On-Break Print=Never after=Valid-Page  Level=2   
P.PRD_END_DT   () On-Break Print=Never after=Valid-Page2 Level=2   
J.DEPTID       () On-Break Print=Never after=Valid-Page3 Level=2 
P.PRD_BGN_DT
P.PYMT_DT
S.RSLT_SEG_NUM
S.EMPLID
S.EMPL_RCD
J.EMPL_STATUS
J.SETID_LOCATION
J.SETID_DEPT
J.LOCATION
J.DAILY_RT
J.EFFDT
J.TERMINATION_DT
NM.NAME_DISPLAY
P.GP_PAYGROUP
S.SEG_END_DT
S.SEG_BGN_DT

  Let $Company         = Rtrim(&J.COMPANY, ' ')  
  Let $Estabid         = Rtrim(&J.ESTABID, ' ')
  Let $CalRunID        = Rtrim(&P.CAL_RUN_ID, ' ')
  Let $CalID           = Rtrim(&P.CAL_ID, ' ')
  Let $Paygroup        = Rtrim(&P.GP_PAYGROUP, ' ')

  Let $Emplid          = Rtrim(&S.EMPLID, ' ')
  Let #EmplRcd         = &S.EMPL_RCD
  Let $Deptid          = ltrim(Rtrim(&J.DEPTID, ' '), ' ')
  Let $SetIDLoc        = &J.SETID_LOCATION
  Let $SetIDDeptID     = &J.SETID_DEPT
  Let $Location        = &J.LOCATION
  Let $Name            = &NM.NAME_DISPLAY
  Let #Daily_Rt        = &J.DAILY_RT
  Let #RsltSegNum      = &S.RSLT_SEG_NUM
  Let $PeriodEndDt     = &P.PRD_END_DT
  Let $PeriodBeginDt   = &P.PRD_BGN_DT
  Let $PaymentDt       = &P.PYMT_DT
  Let $Effdt           = &J.EFFDT
  Let $TerminationDt   = Rtrim(&J.TERMINATION_DT, ' ')
  Let $segEndDt        = &S.SEG_END_DT
  Let $segBgnDt        = &S.SEG_BGN_DT
    
  
  If #regpro = 0 
     Let $NewPage = 'N'
     Do Get-Format
     if $ListOption <> '2'
        Do Select-Establishment
     end-if
  End-if
  
  
  #debug show '*** ' $Emplid ' ' $Deptid ' ' $Estabid ' New Page: ' $NewPage
  
  If $SummaryInd = 'N'
  
     if $TerminationDt <> ''
        do Format-DateTime($TerminationDt, $Termination_Dt, {DEFDMY}, '', '')
     end-if
  
     If $Estabid <> '' 
       
       clear-array name = arr_erns
       clear-array name = arr_ded
       Let #cont_e = 0       
       Let #cont_d = 0
       
       if $EARN_IE = '10'
          Do Get-ErnsI
       else
          Do Get-ErnsE
       end-if
   
       if $DED_IE  = '10'
          Do Get-Ded-I
       else
          Do Get-Ded-E 
       end-if
    
       #debug show '# earnings '  #cont_e ' # deductions ' #cont_d
       Let  #tot_a = 0
       If #cont_e > 0 or
          #cont_d > 0
          DO Get-Acum-Base
       end-if
               
       Do Print-Employees
       Do Heading2     

   
       Add 1 TO #reglei
    else
       show 'There is not establishment Id selected for: '  $CalRunID ' - ' $CalID  ' - ' $Company ' - ' $Emplid
    end-if
  end-if

FROM PS_GP_PYE_PRC_STAT     P,
     PS_GP_PYE_SEG_STAT     S,
     PS_JOB                 J,
     PS_NAMES               NM
WHERE P.CAL_RUN_ID      = $CalRunID
AND   S.CAL_RUN_ID      = P.CAL_RUN_ID
AND   S.EMPLID          = P.EMPLID
AND   S.EMPL_RCD        = P.EMPL_RCD
AND   J.EMPL_RCD        = P.EMPL_RCD
AND   J.EMPLID          = P.EMPLID
AND   S.GP_PAYGROUP     = P.GP_PAYGROUP
AND   S.CAL_ID          = P.CAL_ID
AND   S.ORIG_CAL_RUN_ID = P.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX(PP.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PP
                           WHERE PP.EMPLID      = P.EMPLID
                           AND   PP.CAL_RUN_ID  = P.CAL_RUN_ID
                           AND   PP.EMPL_RCD    = P.EMPL_RCD
                           AND   PP.GP_PAYGROUP = P.GP_PAYGROUP
                           AND   PP.CAL_ID      = P.CAL_ID
                           AND   PP.CALC_TYPE   = P.CALC_TYPE)                                                             
AND S.CALC_ACTION       = 'C'
AND S.PYE_CALC_STAT IN ('50', '70','75')
AND P.RSLT_REV_NUM      = 1
AND P.PYE_PRC_IND       = 'N'
AND P.SEL_STAT          IN ( 'A', 'I')
AND P.SEL_ACTION        = 'C'
AND P.CALC_TYPE         = 'P'
AND J.GP_PAYGROUP       =  P.GP_PAYGROUP
AND J.EFFDT             = (SELECT MAX(JJ.EFFDT) 
                           FROM PS_JOB JJ
                           WHERE JJ.EMPLID    = J.EMPLID
                           AND   JJ.EMPL_RCD  = J.EMPL_RCD
                           AND   JJ.EFFDT    <= S.SEG_END_DT)
AND J.EFFSEQ            = (SELECT MAX(JJJ.EFFSEQ) 
                           FROM PS_JOB JJJ
                           WHERE JJJ.EMPLID   = J.EMPLID
                           AND   JJJ.EMPL_RCD = J.EMPL_RCD
                           AND   JJJ.EFFDT    = J.EFFDT)
AND NM.EMPLID           = P.EMPLID
AND NM.NAME_TYPE        = 'PRI'
AND NM.EFFDT            = (SELECT MAX(N.EFFDT) 
                           FROM PS_NAMES N
                           WHERE N.EMPLID = NM.EMPLID
                           AND   N.NAME_TYPE = NM.NAME_TYPE
                           AND   N.EFFDT <= S.SEG_END_DT)  
[$WhereClause]
[$Company_Clause]
[$Order_By_Clause]
END-Select

end-procedure Process-Detail

!**************************************
begin-procedure Process-Summary
!**************************************
Let #regpro = 0
Let #reglei = 0
Let $EstabidAnt = ''
Let $DeptidAnt = ''
Let $ImprimeCom = 'N'

BEGIN-Select DISTINCT
PP.CAL_RUN_ID
JJ.COMPANY          () On-Break Print=Never before=Store-Company  After=Process-Company Level=1 
JJ.ESTABID          () On-Break Print=Never After=Valid-Page Level=2   
   Let $Estabid         = Rtrim(&JJ.ESTABID, ' ')      
PP.PRD_END_DT       () On-Break Print=Never After=Valid-Page2 Level=2     
PP.PRD_BGN_DT
PP.PYMT_DT


  Let $PeriodEndDt     = &PP.PRD_END_DT
  Let $PeriodBeginDt   = &PP.PRD_BGN_DT
  Let $PaymentDt       = &PP.PYMT_DT
  
  Let $Company         = Rtrim(&JJ.COMPANY, ' ')
  Let $TCompany        = Rtrim(&JJ.COMPANY, ' ')
  Let $CalRunID        = Rtrim(&PP.CAL_RUN_ID, ' ')
  
  If #regpro = 0
     Let $NewPage = 'N'  
     Do Get-Format            
  End-if
  
  if $Estabid <> ''  
     if $EARN_IE = '10'
        DO Get-ErnsI-Summary
     else
        DO Get-ErnsE-Summary
     end-if

     if $DED_IE  = '10'
        DO Get-DedI-Summary
     else
        DO Get-DedE-Summary
     end-if
  
     Do Get-Acum-Base-Summary

     Do Print-Employees
     Do Heading2
     
     ADD 1 TO #reglei
  else
    show 'There is no establishment Id selected for: '  $CalRunID ' - ' $Company
  end-if

FROM PS_GP_PYE_PRC_STAT     PP,
     PS_GP_PYE_SEG_STAT     SS,
     PS_JOB                 JJ
WHERE PP.CAL_RUN_ID      = $CalRunID
AND   SS.CAL_RUN_ID      = PP.CAL_RUN_ID
AND   SS.EMPLID          = PP.EMPLID
AND   SS.EMPL_RCD        = PP.EMPL_RCD
AND   JJ.EMPL_RCD        = PP.EMPL_RCD
AND   JJ.EMPLID          = PP.EMPLID
AND   SS.GP_PAYGROUP     = PP.GP_PAYGROUP
AND   SS.CAL_ID          = PP.CAL_ID
AND   SS.ORIG_CAL_RUN_ID = PP.ORIG_CAL_RUN_ID
AND   PP.RSLT_VER_NUM    = (SELECT MAX(P.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT P
                           WHERE P.EMPLID      = PP.EMPLID
                           AND   P.CAL_RUN_ID  = PP.CAL_RUN_ID
                           AND   P.EMPL_RCD    = PP.EMPL_RCD
                           AND   P.GP_PAYGROUP = PP.GP_PAYGROUP
                           AND   P.CAL_ID      = PP.CAL_ID
                           AND   P.CALC_TYPE   = P.CALC_TYPE)      
AND SS.CALC_ACTION       = 'C'
AND SS.PYE_CALC_STAT IN ('50', '70', '75')
AND PP.RSLT_REV_NUM      = 1
AND PP.PYE_PRC_IND       = 'N'
AND PP.SEL_STAT          IN ( 'A', 'I')
AND PP.SEL_ACTION        = 'C'
AND PP.CALC_TYPE         = 'P'
AND JJ.GP_PAYGROUP       =  PP.GP_PAYGROUP
AND JJ.EFFDT             = (SELECT MAX(J.EFFDT) 
                           FROM PS_JOB J
                           WHERE JJ.EMPLID    = J.EMPLID
                           AND   JJ.EMPL_RCD  = J.EMPL_RCD
                           AND   J.EFFDT     <=  SS.SEG_END_DT)
AND JJ.EFFSEQ            = (SELECT MAX(J.EFFSEQ) 
                           FROM PS_JOB J
                           WHERE JJ.EMPLID   = J.EMPLID
                           AND   JJ.EMPL_RCD = J.EMPL_RCD
                           AND   JJ.EFFDT    = J.EFFDT)
[$Company_Clause] 
ORDER BY PP.CAL_RUN_ID, JJ.COMPANY, JJ.ESTABID
END-Select
end-procedure Process-Summary

!**************************************
begin-procedure Print-Employees
#debug show '*Print-Employees'
#debug show '$NewPage: ' $NewPage
#debug show '#regpro:  ' #regpro 
!*************************************

  Let #count_t = 0
  
  if #cont_e > #cont_d
     Let #count_t = #cont_e
  else 
     Let #count_t = #cont_d
  end-if

  #debug show '#count_t: ' #count_t 
  #debug show '#tot_a: ' #tot_a


  if (#count_t > 0) or (#tot_a > 0) 
     if $NewPage = 'Y' and
        #regpro > 0   

        new-page
        Let $NewPage = 'N'   
     else
        Do Heading2       
     end-if    
  
     Do Get-National-Ids
     Do Get-Location-Descr
     Do Get-Dept-Descr    
     Do get-date-emplid
     Do Format-Payslip-DT
     Add 1 TO #regpro   
     Let $DeptidAnt = $Deptid
  end-if

end-procedure Print-Employees

!**************************************
begin-procedure Valid-Page
#debug show 'Valid-Page'
#debug show '$Estabid: ' $Estabid
!************************************** 
if $ListOption <> '7'
  if $Estabid <> $EstabidAnt 
    
     If $SummaryInd = 'N'
        if $ListOption <> '2'
           Do Select-Establishment
        end-if
     end-if 
       
     Let $NewPage        = 'Y'     
     Let $EstabidAnt     = $Estabid     
     Let $PeriodEndDtAnt = $PeriodEndDt
   
  end-if  
end-if 

end-procedure Valid-Page

!**************************************
begin-procedure Valid-Page2
#DEBUG show 'Valid-Page2'
!**************************************      
   
  if $PeriodEndDt <> $PeriodEndDtAnt     
     if $Estabid <> '' 
        if $PeriodEndDtAnt <> ''
           Let $NewPage = 'Y'
        end-if
        Let $PeriodEndDtAnt = $PeriodEndDt
        Do Get-Format
     end-if
  end-if
     
end-procedure Valid-Page2

!**************************************
begin-procedure Valid-Page3
#debug show '*Valid-Page3 '
#debug show ' $ListOption: ' $ListOption
!************************************** 
#debug show $DeptidAnt ' - '   &J.DEPTID 

if $ListOption = '7'
  if &J.DEPTID <> $DeptidAnt    
      Let $NewPage = 'Y'
      Let $DeptidAnt =  &J.DEPTID          
  end-if  
end-if

#debug show '$DeptidAnt '  $DeptidAnt  
#debug show '$NewPage '  $NewPage 

   
end-procedure Valid-Page3

!**************************************
begin-procedure Get-ErnsI
!*************************************
Let #cont_e = 0
 
begin-select
BB.SEQNUM
AA.PIN_NUM
AA.USER_FLD1
AA.CALC_RSLT_VAL
AA.UNIT_RSLT_VAL
AA.CALC_ADJ_VAL
AA.UNIT_ADJ_VAL
PIN0.PIN_NM

   #debug show &AA.PIN_NUM ' ' &PIN0.PIN_NM ' ' $pinNmErn ' ' &AA.USER_FLD1

  if rtrim(&PIN0.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
     Let $pinNm = rtrim(&AA.USER_FLD1, ' ')
  else
     Let $pinNm = ''
  end-if
  
  #debug show ' -  ' $pinNm

  MOVE &AA.PIN_NUM        TO  #pin_num
  Let #amount_val =  &AA.CALC_RSLT_VAL + &AA.CALC_ADJ_VAL
  Let #unit_val   =  &AA.UNIT_RSLT_VAL + &AA.UNIT_ADJ_VAL
         
  if #amount_val <> 0
     ADD 1 TO #cont_e
     put #pin_num $pinNm #unit_val #amount_val into arr_erns(#cont_e) e_code e_name e_unit e_amount
  end-if
    
FROM PS_GP_RSLT_ERN_DED AA
    ,PS_GP_PIN PIN0
    ,PS_GPBR_PAYSL_F_ER BB
WHERE AA.EMPLID         = $Emplid
AND   AA.EMPL_RCD       = #EmplRcd
AND   AA.CAL_RUN_ID     = $CalRunID
and   AA.CAL_ID         = $CalID
AND   AA.RSLT_SEG_NUM   = #RsltSegNum
AND   BB.GPBR_FORMAT_ID = $FormatID
AND   BB.EFFDT          = $EffdtFormat
AND   BB.EFF_STATUS     = 'A'
AND  (BB.PIN_ERN_NUM    = AA.PIN_NUM
  OR  EXISTS              (SELECT 'X' 
                           FROM PS_GP_PIN PP 
                           WHERE PP.PIN_NUM = BB.PIN_ERN_NUM 
                           AND   PP.PIN_NM  = AA.USER_FLD1))
AND   PIN0.PIN_NUM      = AA.PIN_NUM
AND   PIN0.PIN_TYPE     = 'ER'
ORDER BY BB.SEQNUM
end-select 
end-procedure Get-ErnsI

!**************************************
begin-procedure Get-ErnsE
!**************************************
Let #cont_e = 0

Begin-Select
PIN1.PIN_NM
B.PIN_NUM
B.CALC_RSLT_VAL
B.UNIT_RSLT_VAL
B.CALC_ADJ_VAL
B.UNIT_ADJ_VAL
B.USER_FLD1

  if rtrim(&PIN1.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
     Let $pinNm = &B.USER_FLD1      
  else
     Let $pinNm = ''
  end-if

  Let #pin_num    = &B.PIN_NUM       
  Let #amount_val = &B.CALC_RSLT_VAL + &B.CALC_ADJ_VAL
  Let #unit_val   = &B.UNIT_RSLT_VAL + &B.UNIT_ADJ_VAL

  if #amount_val <> 0
     ADD 1 TO #cont_e
     put #pin_num $pinNm #unit_val #amount_val into arr_erns(#cont_e) e_code e_name e_unit e_amount
   end-if

FROM PS_GP_RSLT_ERN_DED B
    ,PS_GP_PIN PIN1
WHERE B.EMPLID       = $Emplid
AND   B.EMPL_RCD     = #EmplRcd
AND   B.CAL_RUN_ID   = $CalRunID
and   B.CAL_ID       = $CalID
AND   B.RSLT_SEG_NUM = #RsltSegNum
AND   NOT EXISTS       (SELECT 'X' FROM 
                        PS_GPBR_PAYSL_F_ER A
                        WHERE A.GPBR_FORMAT_ID = $FormatId
                        AND   A.EFFDT          = $EffdtFormat
                        AND   A.EFF_STATUS     = 'A'
                        AND   (A.PIN_ERN_NUM   = B.PIN_NUM
                          OR  EXISTS             (SELECT 'X'
                                                  FROM PS_GP_PIN PP
                                                  WHERE PP.PIN_NUM = A.PIN_ERN_NUM
                                                  AND   PP.PIN_NM  = B.USER_FLD1)))
AND   PIN1.PIN_NUM   = B.PIN_NUM
AND   PIN1.PIN_TYPE  = 'ER'
end-select
end-procedure Get-ErnsE

!**************************************
begin-procedure Get-Ded-I 
!**************************************
Let #cont_d = 0

begin-select
DD.SEQNUM
CC.RSLT_SEG_NUM
CC.PIN_NUM
CC.CALC_RSLT_VAL
CC.UNIT_RSLT_VAL
CC.CALC_ADJ_VAL
CC.UNIT_ADJ_VAL
PIN2.PIN_NM
CC.USER_FLD1

  if rtrim(&PIN2.PIN_NM, ' ') = $pinNmDed
     Let $pinNm = &CC.USER_FLD1      
  else
     Let $pinNm = ''
  end-if

  MOVE &CC.PIN_NUM        TO  #pin_num
  Let #amount_val = &CC.CALC_RSLT_VAL + &CC.CALC_ADJ_VAL
  Let #unit_val   = &CC.UNIT_RSLT_VAL + &CC.UNIT_ADJ_VAL
    
  if #amount_val <> 0
     ADD 1 TO #cont_d
     put #pin_num $pinNm #unit_val #amount_val into arr_ded(#cont_d) d_code d_name d_unit d_amount
  end-if

FROM PS_GP_RSLT_ERN_DED CC
    ,PS_GP_PIN PIN2
    ,PS_GPBR_PAYSL_F_DE DD

WHERE CC.EMPLID         = $Emplid
AND   CC.EMPL_RCD       = #EmplRcd
AND   CC.CAL_RUN_ID     = $CalRunID
and   CC.CAL_ID         = $CalID
AND   CC.RSLT_SEG_NUM   = #RsltSegNum
AND   DD.GPBR_FORMAT_ID = $FormatId
AND   DD.EFFDT          = $EffdtFormat
AND   DD.EFF_STATUS     = 'A'
AND   (DD.PIN_DED_NUM   = CC.PIN_NUM
  OR  EXISTS              (SELECT 'X'
                           FROM PS_GP_PIN PP
                           WHERE PP.PIN_NUM = DD.PIN_DED_NUM
                           AND   PP.PIN_NM = CC.USER_FLD1))
AND   PIN2.PIN_NUM      = CC.PIN_NUM
AND   PIN2.PIN_TYPE     = 'DD'
ORDER BY DD.SEQNUM
end-select
end-procedure Get-Ded-I

!**************************************
begin-procedure Get-Ded-E
!**************************************
Let #cont_d = 0

begin-select
PIN3.PIN_NM
CCC.PIN_NUM
CCC.USER_FLD1
CCC.CALC_RSLT_VAL
CCC.UNIT_RSLT_VAL
CCC.CALC_ADJ_VAL
CCC.UNIT_ADJ_VAL

    if &PIN3.PIN_NM = $pinNmDed
       Let $pinNm = &CCC.USER_FLD1      
    else
       Let $pinNm = ''
    end-if

    MOVE &CCC.PIN_NUM        TO  #pin_num
    Let #amount_val = &CCC.CALC_RSLT_VAL + &CCC.CALC_ADJ_VAL 
    Let #unit_val   = &CCC.UNIT_RSLT_VAL + &CCC.UNIT_ADJ_VAL  

    if #amount_val <> 0
      ADD 1 TO #cont_d
      put #pin_num $pinNm #unit_val #amount_val into arr_ded(#cont_d) d_code d_name d_unit d_amount
    end-if

FROM PS_GP_RSLT_ERN_DED CCC
    ,PS_GP_PIN PIN3
WHERE CCC.EMPLID      = $Emplid
AND   CCC.EMPL_RCD    = #EmplRcd
AND   CCC.CAL_RUN_ID  = $CalRunID
and   CCC.CAL_ID      = $CalID
AND   CCC.RSLT_SEG_NUM  = #RsltSegNum
AND   NOT EXISTS        (SELECT 'X' FROM 
                         PS_GPBR_PAYSL_F_DE A
                         WHERE A.GPBR_FORMAT_ID = $FormatId
                         AND   A.EFFDT          = $EffdtFormat
                         AND   A.EFF_STATUS     = 'A'
                         AND   (A.PIN_DED_NUM   = CCC.PIN_NUM
                           OR  EXISTS           (SELECT 'X'
                                                 FROM PS_GP_PIN PP
                                                 WHERE PP.PIN_NUM = A.PIN_DED_NUM
                                                 AND   PP.PIN_NM  = CCC.USER_FLD1)))
AND   PIN3.PIN_NUM    = CCC.PIN_NUM
AND   PIN3.PIN_TYPE   = 'DD'
order by PIN3.PIN_NM, CCC.USER_FLD1
end-select
end-procedure Get-Ded-E

!**************************************
begin-procedure Get-ErnsI-Summary
!*************************************
Let #cont_e = 0
 
begin-select
D.SEQNUM
PIN4.PIN_NM
E.PIN_NUM
E.USER_FLD1
SUM(E.CALC_RSLT_VAL) &CALC_RSLT_VAL
SUM(E.UNIT_RSLT_VAL) &UNIT_RSLT_VAL
SUM(E.CALC_ADJ_VAL)  &CALC_ADJ_VAL
SUM(E.UNIT_ADJ_VAL)  &UNIT_ADJ_VAL

  if rtrim(&PIN4.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
     Let $pinNm = &E.USER_FLD1      
  else
     Let $pinNm = ''
  end-if  

  MOVE &E.PIN_NUM      TO  #pin_num
  Let #amount_val = &CALC_RSLT_VAL + &CALC_ADJ_VAL
  Let #unit_val   = &UNIT_RSLT_VAL + &UNIT_ADJ_VAL  

  if #amount_val <> 0
     ADD 1 TO #cont_e
     put #pin_num $pinNm #unit_val #amount_val into arr_erns(#cont_e) e_code e_name e_unit e_amount
  end-if

FROM PS_GP_RSLT_ERN_DED E
    ,PS_JOB J  
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN4
    ,PS_GPBR_PAYSL_F_ER D
WHERE E.CAL_RUN_ID     = $CalRunID
AND   E.EMPLID         = J.EMPLID
AND   E.EMPL_RCD       = J.EMPL_RCD
AND   J.COMPANY        = $company                           
AND   J.ESTABID        = $Estabid
AND   J.GP_PAYGROUP    = P.GP_PAYGROUP
AND   J.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = J.EMPLID
                          AND   JJ.EMPL_RCD  = J.EMPL_RCD
                          AND   JJ.EFFDT    <= E.SLICE_END_DT)
AND   J.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = J.EMPLID
                          AND   JJJ.EMPL_RCD = J.EMPL_RCD
                          AND   JJJ.EFFDT    = J.EFFDT )  
AND   P.CAL_RUN_ID      = E.CAL_RUN_ID
AND   P.EMPLID          = E.EMPLID
AND   P.EMPL_RCD        = E.EMPL_RCD
AND   P.GP_PAYGROUP     = E.GP_PAYGROUP
AND   P.CAL_ID          = E.CAL_ID
AND   P.ORIG_CAL_RUN_ID = E.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = E.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX(PP.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PP
                           WHERE PP.EMPLID      = P.EMPLID
                           AND   PP.CAL_RUN_ID  = P.CAL_RUN_ID
                           AND   PP.EMPL_RCD    = P.EMPL_RCD
                           AND   PP.GP_PAYGROUP = P.GP_PAYGROUP
                           AND   PP.CAL_ID      = P.CAL_ID
                           AND   PP.CALC_TYPE   = P.CALC_TYPE)      
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   D.GPBR_FORMAT_ID    = $FormatID
AND   D.EFFDT             = $EffdtFormat
AND   D.EFF_STATUS        = 'A'
AND  (D.PIN_ERN_NUM       = E.PIN_NUM
  OR  EXISTS                (SELECT 'X'
                             FROM PS_GP_PIN PP
                             WHERE PP.PIN_NUM = D.PIN_ERN_NUM
                             AND   PP.PIN_NM  = E.USER_FLD1))
AND   PIN4.PIN_NUM        = E.PIN_NUM
AND   PIN4.PIN_TYPE       = 'ER'
GROUP BY D.SEQNUM, PIN4.PIN_NM, E.PIN_NUM, E.USER_FLD1
ORDER BY D.SEQNUM, PIN4.PIN_NM, E.PIN_NUM, E.USER_FLD1
end-select
end-procedure Get-ErnsI-Summary

!**************************************
begin-procedure Get-ErnsDed-I-Tot-Est 
#debug show 'Get-ErnsDed-I-Tot-Est'
!*************************************
Let #countee = 0
Let $alias = 'AD'
Let $pinNm = ''
Do BuildEmployeeWhere
 
begin-select
PIN5.PIN_NM
AB.PIN_NUM
AB.USER_FLD1
SUM(AB.CALC_RSLT_VAL) &AB.CALC_RSLT_VAL
SUM(AB.UNIT_RSLT_VAL) &AB.UNIT_RSLT_VAL
SUM(AB.CALC_ADJ_VAL)  &AB.CALC_ADJ_VAL
SUM(AB.UNIT_ADJ_VAL)  &AB.UNIT_ADJ_VAL

  Let #pin_num    = &AB.PIN_NUM        
  Let #amount_val = &AB.CALC_RSLT_VAL + &AB.CALC_ADJ_VAL
  Let #unit_val   = &AB.UNIT_RSLT_VAL + &AB.UNIT_ADJ_VAL
  Let $pinNm      = rtrim(&PIN5.PIN_NM , ' ') 
  
   if #amount_val <> 0
       if rtrim(&AB.USER_FLD1, ' ') <> ''
          if rtrim(&PIN5.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
             Let $pinNm = &AB.USER_FLD1  
          end-if
          Do Add-Total-Estabid-Erns
             
          If $UserFound = 'N'
             Do Total-Estabid-Erns
          end-if  
       else
          Do Total-Estabid-Erns
       end-if   
   end-if

FROM PS_GP_RSLT_ERN_DED AB
    ,PS_JOB AD
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN5
WHERE AB.CAL_RUN_ID     = $CalRunID

AND   AB.EMPLID         = AD.EMPLID
AND   AB.EMPL_RCD       = AD.EMPL_RCD
AND   AD.COMPANY        = $TCompany                             
[$EsWhereClause]
[$EEWhereClause]
AND   AD.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = AD.EMPLID
                          AND   JJ.EMPL_RCD  = AD.EMPL_RCD
                          AND   JJ.EFFDT    <= S.SEG_END_DT)
AND   AD.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = AD.EMPLID
                          AND   JJJ.EMPL_RCD = AD.EMPL_RCD
                          AND   JJJ.EFFDT    = AD.EFFDT ) 
AND   AD.GP_PAYGROUP    =  P.GP_PAYGROUP                          
AND   P.CAL_RUN_ID      = AB.CAL_RUN_ID
AND   P.EMPLID          = AB.EMPLID
AND   P.EMPL_RCD        = AB.EMPL_RCD
AND   P.GP_PAYGROUP     = AB.GP_PAYGROUP
AND   P.CAL_ID          = AB.CAL_ID
AND   P.ORIG_CAL_RUN_ID = AB.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = AB.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   EXISTS                (SELECT 'X' 
                             FROM PS_GPBR_PAYSL_F_ER AC
                             WHERE AC.GPBR_FORMAT_ID = $FormatID
                             AND   AC.EFFDT          = $EffdtFormat
                             AND   AC.EFF_STATUS     = 'A'
                             AND  (AC.PIN_ERN_NUM    = AB.PIN_NUM
                               OR  EXISTS              (SELECT 'X'                            
                                                        FROM PS_GP_PIN PP
                                                        WHERE PP.PIN_NUM = AC.PIN_ERN_NUM
                                                        AND   PP.PIN_NM  = AB.USER_FLD1)))
AND   PIN5.PIN_NUM        = AB.PIN_NUM
AND   PIN5.PIN_TYPE       = 'ER'
GROUP BY PIN5.PIN_NM, AB.PIN_NUM, AB.USER_FLD1
end-select 
end-procedure Get-ErnsDed-I-Tot-Est 

!**************************************
begin-procedure Get-ErnsDed-E-Tot-Est 
!*************************************
clear-array name = TotEstErns
Let #countEe = 0
Let $alias = 'BB'
Do BuildEmployeeWhere
 
begin-select
!BA.CAL_ID 
PIN6.PIN_NM 
BA.USER_FLD1
BA.PIN_NUM
SUM(BA.CALC_RSLT_VAL) &BA.CALC_RSLT_VAL
SUM(BA.UNIT_RSLT_VAL) &BA.UNIT_RSLT_VAL
SUM(BA.CALC_ADJ_VAL)  &BA.CALC_ADJ_VAL
SUM(BA.UNIT_ADJ_VAL)  &BA.UNIT_ADJ_VAL

  Let #pin_num    = &BA.PIN_NUM        
  Let #amount_val = &BA.CALC_RSLT_VAL  + &BA.CALC_ADJ_VAL
  Let #unit_val   = &BA.UNIT_RSLT_VAL  + &BA.UNIT_ADJ_VAL 
  Let $pinNm = rtrim(&PIN6.PIN_NM , ' ') 
 
   if #amount_val <> 0
      if rtrim(&BA.USER_FLD1, ' ') <> ''
         if rtrim(&PIN6.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
            Let $pinNm = &BA.USER_FLD1    
         end-if
         
         Do Add-Total-Estabid-Erns
         
         If $UserFound = 'N'
            Do Total-Estabid-Erns
         end-if
      else
         Do Total-Estabid-Erns
      end-if   
   end-if

FROM PS_GP_RSLT_ERN_DED BA
    ,PS_JOB BB
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN6
WHERE BA.CAL_RUN_ID   = $CalRunID
!AND   BA.CAL_ID       = $CalID
AND   BA.EMPLID       = BB.EMPLID
AND   BA.EMPL_RCD     = BB.EMPL_RCD
AND   BA.COMPANY        = $TCompany                             
[$EEWhereClause]                           
[$EsWhereClause] 
AND   BB.EFFDT       = (SELECT MAX(JJ.EFFDT) 
                       FROM PS_JOB JJ
                       WHERE JJ.EMPLID    = BB.EMPLID
                       AND   JJ.EMPL_RCD  = BB.EMPL_RCD
                       AND   JJ.EFFDT    <= BA.SLICE_END_DT)
AND   BB.EFFSEQ      = (SELECT MAX(JJJ.EFFSEQ) 
                       FROM PS_JOB JJJ
                       WHERE JJJ.EMPLID   = BB.EMPLID
                       AND   JJJ.EMPL_RCD = BB.EMPL_RCD
                       AND   JJJ.EFFDT    = BB.EFFDT )   
AND   P.CAL_RUN_ID      = BA.CAL_RUN_ID
AND   P.EMPLID          = BA.EMPLID
AND   P.EMPL_RCD        = BA.EMPL_RCD
AND   P.GP_PAYGROUP     = BA.GP_PAYGROUP
AND   BB.GP_PAYGROUP    = P.GP_PAYGROUP
AND   P.CAL_ID          = BA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = BA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = BA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX(PP.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PP
                           WHERE PP.EMPLID      = P.EMPLID
                           AND   PP.CAL_RUN_ID  = P.CAL_RUN_ID
                           AND   PP.EMPL_RCD    = P.EMPL_RCD
                           AND   PP.GP_PAYGROUP = P.GP_PAYGROUP
                           AND   PP.CAL_ID      = P.CAL_ID
                           AND   PP.CALC_TYPE   = P.CALC_TYPE)      
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   NOT EXISTS          (SELECT 'X' 
                           FROM PS_GPBR_PAYSL_F_ER A
                           WHERE A.GPBR_FORMAT_ID = $FormatId
                           AND   A.EFFDT          = $EffdtFormat
                           AND   A.EFF_STATUS     = 'A'
                           AND  (A.PIN_ERN_NUM    = BA.PIN_NUM
                             OR  EXISTS             (SELECT 'X'
                                                     FROM PS_GP_PIN PP
                                                     WHERE PP.PIN_NUM = A.PIN_ERN_NUM
                                                     AND   PP.PIN_NM  = BA.USER_FLD1)))
AND   PIN6.PIN_NUM        = BA.PIN_NUM
AND   PIN6.PIN_TYPE       = 'ER'
GROUP BY PIN6.PIN_NM, BA.USER_FLD1, BA.PIN_NUM
End-Select
end-procedure Get-ErnsDed-E-Tot-Est 

!**************************************
begin-procedure Get-ErnsDed-I-Tot-Com 
#debug show 'Get-ErnsDed-I-Tot-Com'
#debug show '$TCompany: ' $TCompany
!*************************************
clear-array name = TotComErns
Let #countce = 0
Let $alias = 'CC'
Do BuildEmployeeWhere

#debug show '$EEWhereClause: '  $EEWhereClause
 
begin-select
!CD.CAL_ID
!CC.COMPANY
PIN7.PIN_NM 
CD.USER_FLD1
CD.PIN_NUM
SUM(CD.CALC_RSLT_VAL) &CD.CALC_RSLT_VAL
SUM(CD.UNIT_RSLT_VAL) &CD.UNIT_RSLT_VAL
SUM(CD.CALC_ADJ_VAL)  &CD.CALC_ADJ_VAL
SUM(CD.UNIT_ADJ_VAL)  &CD.UNIT_ADJ_VAL

  Let #pin_num    = &CD.PIN_NUM        
  Let #amount_val = &CD.CALC_RSLT_VAL + &CD.CALC_ADJ_VAL
  Let #unit_val   = &CD.UNIT_RSLT_VAL + &CD.UNIT_ADJ_VAL 
  Let $pinNm = rtrim(&PIN7.PIN_NM , ' ') 
  
  if #amount_val <> 0
     if rtrim(&CD.USER_FLD1, ' ') <> ''
        if rtrim(&PIN7.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
           Let $pinNm = &CD.USER_FLD1  
          end-if
        
        Do Add-Total-Company-Erns   
  
        If $UserFound = 'N'
           Do Total-Company-Erns  
        end-if
     else
        Do Total-Company-Erns 
     end-if   
  end-if
 
 
FROM PS_GP_RSLT_ERN_DED CD
    ,PS_JOB CC   
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN7
WHERE CD.CAL_RUN_ID     = $CalRunID
!AND   CD.CAL_ID         = $CalID
AND   CD.EMPLID         = CC.EMPLID
AND   CD.EMPL_RCD       = CC.EMPL_RCD
AND   CC.COMPANY        = $TCompany   
AND   CC.GP_PAYGROUP    = P.GP_PAYGROUP
[$EEWhereClause]                           
AND   CC.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = CC.EMPLID
                          AND   JJ.EMPL_RCD  = CC.EMPL_RCD
                          AND   JJ.EFFDT    <= CD.SLICE_END_DT)
AND   CC.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = CC.EMPLID
                          AND   JJJ.EMPL_RCD = CC.EMPL_RCD
                          AND   JJJ.EFFDT    = CC.EFFDT )                         
AND   P.CAL_RUN_ID      = CD.CAL_RUN_ID
AND   P.EMPLID          = CD.EMPLID
AND   P.EMPL_RCD        = CD.EMPL_RCD
AND   P.GP_PAYGROUP     = CD.GP_PAYGROUP
AND   P.CAL_ID          = CD.CAL_ID
AND   P.ORIG_CAL_RUN_ID = CD.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = CD.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX(PP.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PP
                           WHERE PP.EMPLID      = P.EMPLID
                           AND   PP.CAL_RUN_ID  = P.CAL_RUN_ID
                           AND   PP.EMPL_RCD    = P.EMPL_RCD
                           AND   PP.GP_PAYGROUP = P.GP_PAYGROUP
                           AND   PP.CAL_ID      = P.CAL_ID
                           AND   PP.CALC_TYPE   = P.CALC_TYPE)      
AND   P.RSLT_REV_NUM    = 1
AND   P.PYE_PRC_IND     = 'N'
AND   P.SEL_STAT        IN ( 'A', 'I')
AND   P.SEL_ACTION      = 'C'
AND   P.CALC_TYPE       = 'P'
AND   EXISTS              (SELECT 'X'
                           FROM PS_GPBR_PAYSL_F_ER CB
                           WHERE CB.GPBR_FORMAT_ID = $FormatID
                           AND   CB.EFFDT          = $EffdtFormat
                           AND   CB.EFF_STATUS     = 'A'
                           AND  (CB.PIN_ERN_NUM    = CD.PIN_NUM
                             OR  EXISTS              (SELECT 'X'
                                                      FROM PS_GP_PIN PP
                                                      WHERE PP.PIN_NUM = CB.PIN_ERN_NUM
                                                      AND   PP.PIN_NM  = CD.USER_FLD1)))
AND   PIN7.PIN_NUM      = CD.PIN_NUM
AND   PIN7.PIN_TYPE     = 'ER'
GROUP BY PIN7.PIN_NM, CD.USER_FLD1, CD.PIN_NUM
end-select 
end-procedure Get-ErnsDed-I-Tot-Com

!**************************************
begin-procedure Get-ErnsDed-E-Tot-Com 
!*************************************
clear-array name = TotComErns
Let #countCe = 0
Let $alias = 'FB'
Do BuildEmployeeWhere
 
begin-select
!FA.CAL_ID
!FB.COMPANY  
PIN8.PIN_NM
FA.USER_FLD1
FA.PIN_NUM
SUM(FA.CALC_RSLT_VAL) &FA.CALC_RSLT_VAL
SUM(FA.UNIT_RSLT_VAL) &FA.UNIT_RSLT_VAL
SUM(FA.CALC_ADJ_VAL)  &FA.CALC_ADJ_VAL
SUM(FA.UNIT_ADJ_VAL)  &FA.UNIT_ADJ_VAL

  Let #pin_num    = &FA.PIN_NUM        
  Let #amount_val = &FA.CALC_RSLT_VAL + &FA.CALC_ADJ_VAL
  Let #unit_val   = &FA.UNIT_RSLT_VAL + &FA.UNIT_ADJ_VAL
  Let $TEstabid   = ''
  Let $pinNm = &PIN8.PIN_NM
  
  if #amount_val <> 0
     if rtrim(&FA.USER_FLD1, ' ') <> ''
        if rtrim(&PIN8.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
           Let $pinNm = &FA.USER_FLD1
        end-if
        
        Do Add-Total-Company-Erns
        
        If $UserFound = 'N'
           Do Total-Company-Erns 
        end-if
     else
        Do Total-Company-Erns
     end-if

  end-if  


FROM PS_GP_RSLT_ERN_DED FA
    ,PS_JOB FB
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN8
WHERE FA.CAL_RUN_ID   = $CalRunID
!AND   FA.CAL_ID       = $CalID
AND   FA.EMPLID       = FB.EMPLID
AND   FA.EMPL_RCD     = FB.EMPL_RCD  
AND   FB.COMPANY      = $TCompany     
AND   FB.GP_PAYGROUP    = P.GP_PAYGROUP
[$EEWhereClause]                           
AND   FB.EFFDT       = (SELECT MAX(JJ.EFFDT) 
                       FROM PS_JOB JJ
                       WHERE JJ.EMPLID    = FB.EMPLID
                       AND   JJ.EMPL_RCD  = FB.EMPL_RCD
                       AND   JJ.EFFDT    <= FA.SLICE_END_DT)
AND   FB.EFFSEQ      = (SELECT MAX(JJJ.EFFSEQ) 
                       FROM PS_JOB JJJ
                       WHERE JJJ.EMPLID   = FB.EMPLID
                       AND   JJJ.EMPL_RCD = FB.EMPL_RCD
                       AND   JJJ.EFFDT    = FB.EFFDT )   
AND   P.CAL_RUN_ID      = FA.CAL_RUN_ID
AND   FB.GP_PAYGROUP    =  P.GP_PAYGROUP
AND   P.EMPLID          = FA.EMPLID
AND   P.EMPL_RCD        = FA.EMPL_RCD
AND   P.GP_PAYGROUP     = FA.GP_PAYGROUP
AND   P.CAL_ID          = FA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = FA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = FA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX(PP.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PP
                           WHERE PP.EMPLID      = P.EMPLID
                           AND   PP.CAL_RUN_ID  = P.CAL_RUN_ID
                           AND   PP.EMPL_RCD    = P.EMPL_RCD
                           AND   PP.GP_PAYGROUP = P.GP_PAYGROUP
                           AND   PP.CAL_ID      = P.CAL_ID
                           AND   PP.CALC_TYPE   = P.CALC_TYPE)    
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   NOT EXISTS          (SELECT 'X' 
                           FROM PS_GPBR_PAYSL_F_ER A
                           WHERE A.GPBR_FORMAT_ID = $FormatId
                           AND   A.EFFDT          = $EffdtFormat
                           AND   A.EFF_STATUS     = 'A'
                           AND  (A.PIN_ERN_NUM    = FA.PIN_NUM
                             OR  EXISTS             (SELECT 'X'
                                                     FROM PS_GP_PIN PP
                                                     WHERE PP.PIN_NUM = A.PIN_ERN_NUM
                                                     AND   PP.PIN_NM  = FA.USER_FLD1)))
AND   PIN8.PIN_NUM        = FA.PIN_NUM
AND   PIN8.PIN_TYPE       = 'ER'
GROUP BY PIN8.PIN_NM, FA.USER_FLD1, FA.PIN_NUM
End-Select
end-procedure Get-ErnsDed-E-Tot-Com

!**************************************
begin-procedure Get-ErnsE-Summary
!**************************************
clear-array name = arr_erns
Let #cont_e = 0
Let $alias = 'J'
Do BuildEmployeeWhere

begin-select
F.PIN_NUM
PIN9.PIN_NM
F.USER_FLD1
SUM(F.CALC_RSLT_VAL) &CALC_RSL_VAL 
SUM(F.UNIT_RSLT_VAL) &UNIT_RSL_VAL
SUM(F.CALC_ADJ_VAL)  &CALC_AD_VAL 
SUM(F.UNIT_ADJ_VAL)  &UNIT_AD_VAL

  if rtrim(&PIN9.PIN_NM, ' ') = rtrim($pinNmErn, ' ')
     Let $pinNm = &F.USER_FLD1      
  else
     Let $pinNm = ''
  end-if

  MOVE &F.PIN_NUM     TO  #pin_num
  Let #amount_val = &CALC_RSL_VAL + &CALC_AD_VAL   
  Let #unit_val   = &UNIT_RSL_VAL + &UNIT_AD_VAL  

  if #amount_val <> 0
     ADD 1 TO #cont_e
     put #pin_num $pinNm #unit_val #amount_val into arr_erns(#cont_e) e_code e_name e_unit e_amount
  end-if

FROM PS_GP_RSLT_ERN_DED F
    ,PS_JOB J
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN9
WHERE F.CAL_RUN_ID   = $CalRunID
!AND   F.CAL_ID       = $CalID
AND   F.EMPLID       = J.EMPLID
AND   F.EMPL_RCD     = J.EMPL_RCD
AND   J.ESTABID     = $Estabid
AND   J.COMPANY     = $Company
[$EEWhereClause]  
AND   J.GP_PAYGROUP = P.GP_PAYGROUP
AND   J.EFFDT       = (SELECT MAX(JJ.EFFDT) 
                       FROM PS_JOB JJ
                       WHERE JJ.EMPLID    = J.EMPLID
                       AND   JJ.EMPL_RCD  = J.EMPL_RCD
                       AND   JJ.EFFDT    <= S.SEG_END_DT)
AND   J.EFFSEQ      = (SELECT MAX(JJJ.EFFSEQ) 
                       FROM PS_JOB JJJ
                       WHERE JJJ.EMPLID   = J.EMPLID
                       AND   JJJ.EMPL_RCD = J.EMPL_RCD
                       AND   JJJ.EFFDT    = J.EFFDT ) 
AND   P.CAL_RUN_ID      = F.CAL_RUN_ID
AND   P.EMPLID          = F.EMPLID
AND   P.EMPL_RCD        = F.EMPL_RCD
AND   P.GP_PAYGROUP     = F.GP_PAYGROUP
AND   P.CAL_ID          = F.CAL_ID
AND   P.ORIG_CAL_RUN_ID = F.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = F.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   NOT EXISTS          (SELECT 'X' 
                           FROM PS_GPBR_PAYSL_F_ER A
                           WHERE A.GPBR_FORMAT_ID = $FormatId
                           AND   A.EFFDT          = $EffdtFormat
                           AND   A.EFF_STATUS     = 'A'
                           AND  (A.PIN_ERN_NUM    = F.PIN_NUM
                             OR  EXISTS             (SELECT 'X'
                                                     FROM PS_GP_PIN PP
                                                     WHERE PP.PIN_NUM = A.PIN_ERN_NUM
                                                     AND   PP.PIN_NM  = F.USER_FLD1)))
AND   PIN9.PIN_NUM        = F.PIN_NUM
AND   PIN9.PIN_TYPE       = 'ER'
GROUP BY F.PIN_NUM, PIN9.PIN_NM, F.USER_FLD1
end-select
end-procedure Get-ErnsE-Summary

!**************************************
begin-procedure Process-Total
#debug show 'Process-Total'
!*************************************
Let $EDWhereClause = ' '
Let $EsWhereClause = ' '
Let $DeptFlag = ''
Let $TDeptid = ' '
Let $TCompany = $company
Let $CompanyOk = $company
 

#debug show '$TCompany: ' $TCompany

Do Select-Establishment

if $ListOption = '7'
   Let $ImprimeEst = 'N'

Begin-Select
DEPT.DEPTID   
DEPT.SETID
DEPT.BUSINESS_UNIT

   Let $Deptid = Rtrim(&DEPT.DEPTID, ' ')
   Let $TDeptid = Rtrim(&DEPT.DEPTID, ' ')
   Let $SetIDDeptID = Rtrim(&DEPT.SETID, ' ')
   Let $BusinessUnit =  Rtrim(&DEPT.BUSINESS_UNIT, ' ')
   Let $ImprimeEst = 'N'
   Let $ImprimeDep = 'Y'
   Let $EDWhereClause = ' AND DEP.DEPTID = ' || '''' || $Deptid || ''''    
 
   Do Process-Estabid 

FROM PS_GPBR_RC_PAYRSL3 DEPT   
WHERE DEPT.OPRID        = $PRCS_OPRID
AND   DEPT.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
ORDER BY DEPT.DEPTID
end-Select
end-if

Begin-Select
YY.COMPANY
EST.ESTABID     

   
   Let $TEstabid = Rtrim(&EST.ESTABID, ' ')
   Let $TCompany = Rtrim(&YY.COMPANY, ' ')
   Let $ImprimeEst = 'Y'
   Let $ImprimeDep = 'N'
   Let $EsWhereCl = '.ESTABID = ' || '''' || $TEstabid || ''''
   
   Do Process-Estabid 

FROM PS_GPBR_RC_PAYRSL1 EST
    ,PS_ESTAB_TBL YY
WHERE EST.OPRID        = $PRCS_OPRID
AND   EST.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
AND   YY.COMPANY       = $Company
AND   YY.ESTABID       = EST.ESTABID
AND   YY.EFFDT         = (SELECT MAX(ZZ.EFFDT) FROM PS_ESTAB_TBL ZZ
                          WHERE ZZ.ESTABID = YY.ESTABID)
ORDER BY EST.ESTABID                          
end-Select


Let $ImprimeCom = 'Y'

if $ListOption = '7'    

   if $Company <> ''
      Let $CompanyWhereTot = 'AND ZZ1.COMPANY = ' || '''' || $Company || ''''
   else
      Let $CompanyWhereTot = ' '
   end-if

Begin-Select DISTINCT
ZZ1.COMPANY

   Let $TCompany   = Rtrim(&ZZ1.COMPANY, ' ')
   
   Do Process-Company

FROM PS_GPBR_RC_PAYRSL3 YY
    ,PS_JOB ZZ1
WHERE YY.OPRID          = $PRCS_OPRID
AND   YY.RUN_CNTL_ID    = $PRCS_RUN_CNTL_ID
[$CompanyWhereTot]
AND   ZZ1.BUSINESS_UNIT = ZZ1.BUSINESS_UNIT
AND   YY.DEPTID         = ZZ1.DEPTID
AND   ZZ1.EFFDT         = (SELECT MAX(JJ.EFFDT) 
                           FROM PS_JOB JJ
                           WHERE JJ.EMPLID    = ZZ1.EMPLID
                           AND   JJ.EMPL_RCD  = ZZ1.EMPL_RCD
                           AND   JJ.EFFDT    <= $PeriodEndDt)
AND   ZZ1.EFFSEQ        = (SELECT MAX(JJJ.EFFSEQ) 
                           FROM PS_JOB JJJ
                           WHERE JJJ.EMPLID   = ZZ1.EMPLID
                           AND   JJJ.EMPL_RCD = ZZ1.EMPL_RCD
                           AND   JJJ.EFFDT    = ZZ1.EFFDT )   
end-Select

else

Begin-Select DISTINCT
ZZ.COMPANY

   Let $TCompany = Rtrim(&ZZ.COMPANY, ' ')
   
   Do Process-Company

FROM PS_GPBR_RC_PAYRSL1 YY
    ,PS_ESTAB_TBL ZZ
WHERE YY.OPRID        = $PRCS_OPRID
AND   YY.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
AND   ZZ.COMPANY      = $Company
AND   YY.ESTABID      = ZZ.ESTABID
AND   ZZ.EFFDT         = (SELECT MAX(YY.EFFDT) FROM PS_ESTAB_TBL YY
                          WHERE ZZ.ESTABID = YY.ESTABID)
end-Select
end-if

Let $ImprimeCom = 'N'


If $SummaryInd = 'N'
   if $ListOption <> '2'
      Do Delete-Estabid
      Do Select-Establishment
   end-if
End-if

end-procedure Process-Total

!**************************************
begin-procedure Process-Estabid 
#debug show 'Process-EstabID'
!*************************************

   if $EARN_IE = '10'
      DO Get-ErnsDed-I-Tot-Est
   else
      DO Get-ErnsDed-E-Tot-Est
   end-if

   if $DED_IE  = '10'
      DO Get-DedI-Tot-Est
   else
      DO Get-DedE-Tot-Est
   end-if
   
   Let #countEt = 0
              
   if #countEe > #countEd
      Let #countEt = #countee
   else 
      Let #countEt = #countEd
   end-if
   
   if #countEt > 0   
      Do Get-BaseA-Tot-Est
   end-if
  
   If #countEt > 0 or 
      #countEb > 0      
      Do Print-Total-E
      Let #SummaryCount = #SummaryCount + 1
   end-if 

end-procedure Process-Estabid

!**************************************
begin-procedure Process-Company
#debug show '* Process-Company'
!*************************************
Let $EDWhereClause = ' '
Let $EsWhereClause = ' '
Let $DeptFlag = ''
Let $TDeptid = ' '
Let $ImprimeCom = 'Y'
 
  if $EARN_IE = '10'
     DO Get-ErnsDed-I-Tot-Com
  else
     DO Get-ErnsDed-E-Tot-Com
  end-if

  if $DED_IE  = '10'
     DO Get-DedI-Tot-Com
  else
     DO Get-DedE-Tot-Com
  end-if 
  
  Let #countCt = 0
                   
  If #countCe > #countCd
     Let #countCt = #countCe
  else 
     Let #countCt = #countCd
  end-if
  
  If #countCt > 0
     DO Get-BaseA-Tot-Com
  end-if 
    
  if #countCt > 0 or
     #countCb > 0
     do Print-Total-C
  end-if

Let $ImprimeCom = 'N'

end-procedure Process-Company

!**************************************
begin-procedure Total-Estabid-Erns
!*************************************    
  Add 1 To #countee
  put #pin_num  $pinNm #amount_val #unit_val
  into TotEstErns(#countEe) EeCode EeName EeAmount EeUnit 

end-procedure Total-Estabid-Erns

!**************************************
begin-procedure Add-Total-Estabid-Erns
#debug show 'Add-Total-Estabid-Erns'
#debug show '$pinNm: ' $pinNm
!************************************* 
Let #countAdd = 1
Let  $UserFound = 'N'

While #countAdd <= #countEe
    
      If (TotEstErns.EeName(#countAdd)  = $pinNm )  

         ARRAY-ADD  #amount_val #unit_val to  TotEstErns(#countAdd) EeAmount EeUnit 
         Let  #countAdd = #countEe  
         Let  $UserFound = 'Y'
      end-if
      
      Let  #countAdd = #countAdd + 1
end-while
     
#debug show   ' $UserFound: '  $UserFound   
     
end-procedure Add-Total-Estabid-Erns

!**************************************
begin-procedure Total-Company-Erns
!*************************************
  Add 1 TO #countCe
  put #pin_num $pinNm #amount_val #unit_val
  into TotComErns(#countCe) CeCode CeName CeAmount CeUnit 
  
end-procedure Total-Company-Erns

!**************************************
begin-procedure Add-Total-Company-Erns
!*************************************
Let #countAdd = 1
Let  $UserFound = 'N'

While #countAdd <= #countCe
    
      If TotComErns.CeName(#countAdd) = $pinNm  

         ARRAY-ADD  #amount_val #unit_val to  TotComErns(#countAdd) CeAmount CeUnit 
         Let  #countAdd = #countCe + 1
         Let  $UserFound = 'Y'
      end-if
      
      Let  #countAdd = #countAdd + 1
end-while
  
end-procedure Add-Total-Company-Erns

!**************************************
begin-procedure Get-DedI-Summary
!**************************************
clear-array name = arr_ded
Let #cont_d = 0
Let $alias = 'J'
Do BuildEmployeeWhere

begin-select
G.SEQNUM
H.PIN_NUM
PIN10.PIN_NM
H.USER_FLD1
SUM(H.CALC_RSLT_VAL) &CAL_RSLT_VAL
SUM(H.UNIT_RSLT_VAL) &UNI_RSLT_VAL 
SUM(H.CALC_ADJ_VAL)  &CAL_ADJ_VAL
SUM(H.UNIT_ADJ_VAL)  &UNI_ADJ_VAL 

   if rtrim(&PIN10.PIN_NM, ' ') = rtrim($pinNmDed, ' ')
     Let $pinNm = &H.USER_FLD1      
   else
     Let $pinNm = ''
   end-if

   MOVE &H.PIN_NUM     TO  #pin_num
   Let #amount_val = &CAL_RSLT_VAL + &CAL_ADJ_VAL
   Let #unit_val   = &UNI_RSLT_VAL + &UNI_ADJ_VAL  
    
    if #amount_val <> 0
      ADD 1 TO #cont_d
      put #pin_num $pinNm #unit_val #amount_val into arr_ded(#cont_d) d_code d_name d_unit d_amount
    end-if

FROM PS_GP_RSLT_ERN_DED H
    ,PS_JOB J
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN10
    ,PS_GPBR_PAYSL_F_DE G
WHERE H.CAL_RUN_ID     = $CalRunID
!AND   H.CAL_ID         = $CalID
AND   H.EMPLID         = J.EMPLID
AND   H.EMPL_RCD       = J.EMPL_RCD
AND   J.ESTABID        = $Estabid
AND   J.COMPANY        = $Company
[$EEWhereClause]
AND   J.GP_PAYGROUP    = P.GP_PAYGROUP
AND   J.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = J.EMPLID
                          AND   JJ.EMPL_RCD  = J.EMPL_RCD
                          AND   JJ.EFFDT    <= H.SLICE_END_DT)
AND   J.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = J.EMPLID
                          AND   JJJ.EMPL_RCD = J.EMPL_RCD
                          AND   JJJ.EFFDT    = J.EFFDT ) 
AND   P.CAL_RUN_ID      = H.CAL_RUN_ID
AND   P.EMPLID          = H.EMPLID
AND   P.EMPL_RCD        = H.EMPL_RCD
AND   P.GP_PAYGROUP     = H.GP_PAYGROUP
AND   P.CAL_ID          = H.CAL_ID
AND   P.ORIG_CAL_RUN_ID = H.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = H.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   G.GPBR_FORMAT_ID    = $FormatId
AND   G.EFFDT             = $EffdtFormat
AND   G.EFF_STATUS        = 'A'
AND  (G.PIN_DED_NUM       = H.PIN_NUM
  OR  EXISTS                (SELECT 'X'
                             FROM PS_GP_PIN PP
                             WHERE PP.PIN_NUM = G.PIN_DED_NUM
                             AND   PP.PIN_NM  = H.USER_FLD1))
AND   PIN10.PIN_NUM       = H.PIN_NUM
AND   PIN10.PIN_TYPE      = 'DD'
GROUP BY G.SEQNUM, H.PIN_NUM, PIN10.PIN_NM, H.USER_FLD1
ORDER BY G.SEQNUM, H.PIN_NUM, PIN10.PIN_NM, H.USER_FLD1
end-select
end-procedure Get-DedI-Summary

!**************************************
begin-procedure Get-DedI-Tot-Est
!**************************************
clear-array name = TotEstDed
Let #counted = 0
Let $alias = 'DC'
Do BuildEmployeeWhere

begin-select
!DA.CAL_ID
PIN11.PIN_NM
DA.USER_FLD1
DA.PIN_NUM
SUM(DA.CALC_RSLT_VAL) &DA.CAL_RSLT_VAL
SUM(DA.UNIT_RSLT_VAL) &DA.UNI_RSLT_VAL 
SUM(DA.CALC_ADJ_VAL)  &DA.CAL_ADJ_VAL
SUM(DA.UNIT_ADJ_VAL)  &DA.UNI_ADJ_VAL 

     Let #pin_num    = &DA.PIN_NUM     
     Let #amount_val = &DA.CAL_RSLT_VAL + &DA.CAL_ADJ_VAL
     Let #unit_val   = &DA.UNI_RSLT_VAL + &DA.UNI_ADJ_VAL 
     Let $pinNm       = rtrim(&PIN11.PIN_NM , ' ') 
  
     if #amount_val <> 0
        if rtrim(&DA.USER_FLD1, ' ') <> ''
           if rtrim(&PIN11.PIN_NM, ' ') = rtrim($pinNmDed, ' ')
              Let $pinNm = &DA.USER_FLD1        
           end-if
           
           Do Add-Total-Estabid-Ded
           
           If $UserFound = 'N'
              Do Total-Estabid-Ded
           end-if 
        else
           Do Total-Estabid-Ded    
        end-if
    end-if

FROM PS_GP_RSLT_ERN_DED DA
    ,PS_JOB DC
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN11
WHERE DA.CAL_RUN_ID     = $CalRunID
!AND   DA.CAL_ID         = $CalID
AND   DA.EMPLID         = DC.EMPLID
AND   DA.EMPL_RCD       = DC.EMPL_RCD
AND   DC.COMPANY = $TCompany                           
[$EsWhereClause]
[$EEWhereClause]
AND   DC.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = DC.EMPLID
                          AND   JJ.EMPL_RCD  = DC.EMPL_RCD
                          AND   JJ.EFFDT    <= DA.SLICE_END_DT)
AND   DC.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = DC.EMPLID
                          AND   JJJ.EMPL_RCD = DC.EMPL_RCD
                          AND   JJJ.EFFDT    = DC.EFFDT )   
AND   DC.GP_PAYGROUP    = P.GP_PAYGROUP                         
AND   P.CAL_RUN_ID      = DA.CAL_RUN_ID
AND   P.EMPLID          = DA.EMPLID
AND   P.EMPL_RCD        = DA.EMPL_RCD
AND   P.GP_PAYGROUP     = DA.GP_PAYGROUP
AND   P.CAL_ID          = DA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = DA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = DA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   EXISTS              (SELECT 'X'
                           FROM PS_GPBR_PAYSL_F_DE DB
                           WHERE DB.GPBR_FORMAT_ID = $FormatId
                           AND   DB.EFFDT          = $EffdtFormat
                           AND   DB.EFF_STATUS     = 'A'
                           AND  (DB.PIN_DED_NUM    = DA.PIN_NUM
                             OR  EXISTS              (SELECT 'X'
                                                      FROM PS_GP_PIN PP
                                                      WHERE PP.PIN_NUM = DB.PIN_DED_NUM
                                                      AND   PP.PIN_NM  = DA.USER_FLD1)))
AND   PIN11.PIN_NUM       = DA.PIN_NUM
AND   PIN11.PIN_TYPE      = 'DD'
GROUP BY PIN11.PIN_NM, DA.USER_FLD1, DA.PIN_NUM
end-select
end-procedure Get-DedI-Tot-Est

!**************************************
begin-procedure Get-DedI-Tot-Com
!**************************************
clear-array name = TotComDed
Let #countCd = 0
Let $alias = 'EC'
Do BuildEmployeeWhere


begin-select
!EA.CAL_ID
!EC.COMPANY
PIN12.PIN_NM
EA.USER_FLD1
EA.PIN_NUM
SUM(EA.CALC_RSLT_VAL) &EA.CAL_RSLT_VAL
SUM(EA.UNIT_RSLT_VAL) &EA.UNI_RSLT_VAL 
SUM(EA.CALC_ADJ_VAL)  &EA.CAL_ADJ_VAL
SUM(EA.UNIT_ADJ_VAL)  &EA.UNI_ADJ_VAL

     MOVE &EA.PIN_NUM       TO  #pin_num
     Let #amount_val = &EA.CAL_RSLT_VAL + &EA.CAL_ADJ_VAL
     Let #unit_val   = &EA.UNI_RSLT_VAL + &EA.UNI_ADJ_VAL
     Let $pinNm = rtrim(&PIN12.PIN_NM , ' ') 
     
     if #amount_val <> 0
        if rtrim(&EA.USER_FLD1, ' ') <> ''
           if rtrim(&PIN12.PIN_NM, ' ') = rtrim($pinNmDed, ' ')
              Let $pinNm = &EA.USER_FLD1  
          end-if
           
           Do Add-Total-Company-Ded
            
           If $UserFound = 'N'
              Do Total-Company-Ded
           end-if 
        else
           Do Total-Company-Ded      
        end-if
    end-if

FROM PS_GP_RSLT_ERN_DED EA
    ,PS_JOB EC
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN12
WHERE EA.CAL_RUN_ID     = $CalRunID
!AND   EA.CAL_ID         = $CalID
AND   EA.EMPLID         = EC.EMPLID
AND   EA.EMPL_RCD       = EC.EMPL_RCD
AND   EC.COMPANY        = $TCompany 
AND   EC.GP_PAYGROUP    = P.GP_PAYGROUP
[$EEWhereClause]                           
AND   EC.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = EC.EMPLID
                          AND   JJ.EMPL_RCD  = EC.EMPL_RCD
                          AND   JJ.EFFDT    <= EA.SLICE_END_DT)
AND   EC.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = EC.EMPLID
                          AND   JJJ.EMPL_RCD = EC.EMPL_RCD
                          AND   JJJ.EFFDT    = EC.EFFDT )
AND   P.CAL_RUN_ID      = EA.CAL_RUN_ID
AND   P.EMPLID          = EA.EMPLID
AND   P.EMPL_RCD        = EA.EMPL_RCD
AND   P.GP_PAYGROUP     = EA.GP_PAYGROUP
AND   P.CAL_ID          = EA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = EA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = EA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   EXISTS              (SELECT 'X'
                           FROM PS_GPBR_PAYSL_F_DE EB
                           WHERE EB.GPBR_FORMAT_ID = $FormatId
                           AND   EB.EFFDT          = $EffdtFormat
                           AND   EB.EFF_STATUS     = 'A'
                           AND  (EB.PIN_DED_NUM    = EA.PIN_NUM
                             OR  EXISTS              (SELECT 'X'
                                                      FROM PS_GP_PIN PP
                                                      WHERE PP.PIN_NUM = EB.PIN_DED_NUM
                                                      AND   PP.PIN_NM  = EA.USER_FLD1)))
AND   PIN12.PIN_NUM       = EA.PIN_NUM
AND   PIN12.PIN_TYPE      = 'DD'
GROUP BY PIN12.PIN_NM, EA.USER_FLD1 ,EA.PIN_NUM
end-select
end-procedure Get-DedI-Tot-Com

!**************************************
begin-procedure Get-DedE-Summary
!**************************************
clear-array name = arr_ded
Let #cont_d = 0
Let $alias = 'J'
Do BuildEmployeeWhere

begin-select
PIN13.PIN_NM
C.USER_FLD1
C.PIN_NUM
SUM(C.CALC_RSLT_VAL)  &CALC_RLT_VAL 
SUM(C.UNIT_RSLT_VAL)  &UNIT_RLT_VAL
SUM(C.CALC_ADJ_VAL)   &C.CALC_ADJ_VAL
SUM(C.UNIT_ADJ_VAL)   &C.UNIT_ADJ_VAL

 MOVE &C.PIN_NUM     TO  #pin_num
  Let #amount_val = &CALC_RLT_VAL + &C.CALC_ADJ_VAL
  Let #unit_val   = &UNIT_RLT_VAL + &C.UNIT_ADJ_VAL
  Let $pinNm = rtrim(&PIN13.PIN_NM , ' ') 
  
  if #amount_val <> 0
     if rtrim(&C.USER_FLD1, ' ') <> ''
            if rtrim(&PIN13.PIN_NM, ' ') = rtrim($pinNmDed, ' ')
               Let $pinNm = &C.USER_FLD1 
         end-if
            
 !           Do Add-Summary-Ded

            If $UserFound = 'N'
               ADD 1 TO #cont_d
               put #pin_num $pinNm #unit_val #amount_val into arr_ded(#cont_d) d_code d_name d_unit d_amount
            end-if 
         else
              ADD 1 TO #cont_d
               put #pin_num $pinNm #unit_val #amount_val into arr_ded(#cont_d) d_code d_name d_unit d_amount
         end-if
    end-if

FROM PS_GP_RSLT_ERN_DED C
    ,PS_JOB J
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN13
WHERE NOT EXISTS  (SELECT 'X' FROM 
                   PS_GPBR_PAYSL_F_DE A
                   WHERE A.GPBR_FORMAT_ID = $FormatId
                   AND   A.EFFDT          = $EffdtFormat
                   AND   A.EFF_STATUS     = 'A'
                   AND   A.PIN_DED_NUM    = C.PIN_NUM)                          
AND   C.CAL_RUN_ID     = $CalRunID
!AND   C.CAL_ID         = $CalID
AND   C.EMPLID         = J.EMPLID
AND   C.EMPL_RCD       = J.EMPL_RCD
AND   J.ESTABID        = $Estabid
AND   J.COMPANY        = $Company
[$EEWhereClause]
AND   J.GP_PAYGROUP    = P.GP_PAYGROUP
AND   J.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = J.EMPLID
                          AND   JJ.EMPL_RCD  = J.EMPL_RCD
                          AND   JJ.EFFDT    <= C.SLICE_END_DT)
AND   J.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = J.EMPLID
                          AND   JJJ.EMPL_RCD = J.EMPL_RCD
                          AND   JJJ.EFFDT    = J.EFFDT )   
AND   P.CAL_RUN_ID      = C.CAL_RUN_ID
AND   P.EMPLID          = C.EMPLID
AND   P.EMPL_RCD        = C.EMPL_RCD
AND   P.GP_PAYGROUP     = C.GP_PAYGROUP
AND   P.CAL_ID          = C.CAL_ID
AND   P.ORIG_CAL_RUN_ID = C.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = C.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   PIN13.PIN_NUM       = C.PIN_NUM
AND   PIN13.PIN_TYPE      = 'DD'
GROUP BY PIN13.PIN_NM, C.USER_FLD1, C.PIN_NUM
end-select
end-procedure Get-DedE-Summary

!**************************************
begin-procedure Get-DedE-Tot-Est
!**************************************
clear-array name = TotEstDed
Let #countEd = 0
Let $alias = 'ZB'
Do BuildEmployeeWhere

begin-select
!ZA.CAL_ID
PIN14.PIN_NM
ZA.USER_FLD1
ZA.PIN_NUM
SUM(ZA.CALC_RSLT_VAL)  &ZA.CALC_RSLT_VAL
SUM(ZA.UNIT_RSLT_VAL)  &ZA.UNIT_RSLT_VAL
SUM(ZA.CALC_ADJ_VAL)   &ZA.CALC_ADJ_VAL
SUM(ZA.UNIT_ADJ_VAL)   &ZA.UNIT_ADJ_VAL

  Let #pin_num    = &ZA.PIN_NUM   
  Let #amount_val = &ZA.CALC_RSLT_VAL + &ZA.CALC_ADJ_VAL
  Let #unit_val   = &ZA.UNIT_RSLT_VAL + &ZA.UNIT_ADJ_VAL
  Let $pinNm = rtrim(&PIN14.PIN_NM , ' ') 

  if #amount_val <> 0
       if rtrim(&ZA.USER_FLD1, ' ') <> ''
          if rtrim(&PIN14.PIN_NM, ' ') = rtrim($pinNmDed, ' ')
             Let $pinNm = &ZA.USER_FLD1 
         end-if
          
          Do Add-Total-Estabid-Ded
          
          If $UserFound = 'N'
             Do Total-Estabid-Ded
          end-if 
       else
          Do Total-Estabid-Ded    
       end-if
    end-if
    
FROM PS_GP_RSLT_ERN_DED ZA
    ,PS_JOB ZB
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN14
WHERE NOT EXISTS  (SELECT 'X' FROM 
                   PS_GPBR_PAYSL_F_DE A
                   WHERE A.GPBR_FORMAT_ID = $FormatId
                   AND   A.EFFDT          = $EffdtFormat
                   AND   A.EFF_STATUS     = 'A'
                   AND   A.PIN_DED_NUM    = ZA.PIN_NUM)                   
AND   ZA.CAL_RUN_ID     = $CalRunID
!AND   ZA.CAL_ID         = $CalID
AND   ZA.EMPLID         = ZB.EMPLID
AND   ZA.EMPL_RCD       = ZB.EMPL_RCD
AND   ZB.COMPANY = $TCompany       
AND   P.GP_PAYGROUP     = ZB.GP_PAYGROUP
[$EsWhereClause]
[$EEWhereClause] 
AND   ZB.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = ZB.EMPLID
                          AND   JJ.EMPL_RCD  = ZB.EMPL_RCD
                          AND   JJ.EFFDT    <= ZA.SLICE_END_DT)
AND   ZB.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = ZB.EMPLID
                          AND   JJJ.EMPL_RCD = ZB.EMPL_RCD
                          AND   JJJ.EFFDT    = ZB.EFFDT ) 
AND   S.RSLT_SEG_NUM    = ZA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = ZA.CAL_RUN_ID
AND   P.EMPLID          = ZA.EMPLID
AND   P.EMPL_RCD        = ZA.EMPL_RCD
AND   P.CAL_ID          = ZA.CAL_ID
AND   P.GP_PAYGROUP     = ZA.GP_PAYGROUP
AND   ZB.GP_PAYGROUP       =  P.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = ZA.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   PIN14.PIN_NUM       = ZA.PIN_NUM
AND   PIN14.PIN_TYPE      = 'DD'
GROUP BY PIN14.PIN_NM, ZA.USER_FLD1, ZA.PIN_NUM
ORDER BY PIN14.PIN_NM, ZA.USER_FLD1, ZA.PIN_NUM
end-select
end-procedure Get-DedE-Tot-Est

!**************************************
begin-procedure Get-DedE-Tot-Com
!**************************************
clear-array name = TotComDed
Let #countCd = 0
Let $alias = 'YB'
Do BuildEmployeeWhere

begin-select
!YA.CAL_ID
!YB.COMPANY
PIN15.PIN_NM
YA.USER_FLD1
YA.PIN_NUM
SUM(YA.CALC_RSLT_VAL)  &YA.CALC_RSLT_VAL
SUM(YA.UNIT_RSLT_VAL)  &YA.UNIT_RSLT_VAL
SUM(YA.CALC_ADJ_VAL)   &YA.CALC_ADJ_VAL
SUM(YA.UNIT_ADJ_VAL)   &YA.UNIT_ADJ_VAL

  Let #pin_num    = &YA.PIN_NUM     
  Let #amount_val = &YA.CALC_RSLT_VAL + &YA.CALC_ADJ_VAL
  Let #unit_val   = &YA.UNIT_RSLT_VAL + &YA.UNIT_ADJ_VAL
  Let $TEstabid   = ''
  Let $pinNm = rtrim(&PIN15.PIN_NM , ' ')
  
  if #amount_val <> 0
     if rtrim(&YA.USER_FLD1, ' ') <> ''
        if rtrim(&PIN15.PIN_NM, ' ') = rtrim($pinNmDed, ' ')
           Let $pinNm = &YA.USER_FLD1    
         end-if
        
        Do Add-Total-Company-Ded

        If $UserFound = 'N'
           Do Total-Company-Ded
        end-if 
     else
        Do Total-Company-Ded      
     end-if
   end-if

FROM PS_GP_RSLT_ERN_DED YA
    ,PS_JOB YB
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S
    ,PS_GP_PIN PIN15
WHERE NOT EXISTS  (SELECT 'X' FROM 
                   PS_GPBR_PAYSL_F_DE A
                   WHERE A.GPBR_FORMAT_ID = $FormatId
                   AND   A.EFFDT          = $EffdtFormat
                   AND   A.EFF_STATUS     = 'A'
                   AND   A.PIN_DED_NUM    = YA.PIN_NUM)                   
AND   YA.CAL_RUN_ID     = $CalRunID
!AND   YA.CAL_ID         = $CalID   
AND   YB.COMPANY        = $TCompany                               
AND   YA.EMPLID         = YB.EMPLID
AND   YA.EMPL_RCD       = YB.EMPL_RCD
AND   YB.GP_PAYGROUP    = P.GP_PAYGROUP
[$EEWhereClause]                            
AND   YB.EFFDT          = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = YB.EMPLID
                          AND   JJ.EMPL_RCD  = YB.EMPL_RCD
                          AND   JJ.EFFDT    <= YA.SLICE_END_DT)
AND   YB.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = YB.EMPLID
                          AND   JJJ.EMPL_RCD = YB.EMPL_RCD
                          AND   JJJ.EFFDT    = YB.EFFDT )   
AND   P.CAL_RUN_ID      = YA.CAL_RUN_ID
AND   P.EMPLID          = YA.EMPLID
AND   P.EMPL_RCD        = YA.EMPL_RCD
AND   P.GP_PAYGROUP     = YA.GP_PAYGROUP
AND   P.CAL_ID          = YA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = YA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = YA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   PIN15.PIN_NUM       = YA.PIN_NUM
AND   PIN15.PIN_TYPE      = 'DD'
GROUP BY PIN15.PIN_NM, YA.USER_FLD1, YA.PIN_NUM
ORDER BY PIN15.PIN_NM, YA.USER_FLD1, YA.PIN_NUM
end-select
end-procedure Get-DedE-Tot-Com

!**************************************
begin-procedure Total-Estabid-Ded
!************************************* 
  Add 1 TO #countEd
  put #pin_num  $pinNm #amount_val #unit_val
  into TotEstDed(#countEd) EdCode EdName EdAmount EdUnit 
     
end-procedure Total-Estabid-Ded

!**************************************
begin-procedure Add-Total-Estabid-Ded
#debug show 'Add-Total-Estabid-Ded'
!************************************* 
Let #countAdd = 1
Let  $UserFound = 'N'         

While #countAdd <= #countEd
    
      If TotEstDed.EdName(#countAdd)  = $pinNm

         ARRAY-ADD  #amount_val #unit_val to TotEstDed(#countAdd) EdAmount EdUnit
         Let  #countAdd = #countEd 
         Let  $UserFound = 'Y'
      end-if
      
      Let  #countAdd = #countAdd + 1
end-while
     
end-procedure Add-Total-Estabid-Ded

!**************************************
begin-procedure Total-Company-Ded
!*************************************     
     
  Add 1 TO #countCd
  put #pin_num  $pinNm #amount_val #unit_val
  into TotComDed(#countCd) CdCode CdName CdAmount CdUnit 

end-procedure Total-Company-Ded


!**************************************
begin-procedure Add-Total-Company-Ded
#debug show 'Add-Total-Company-Ded'
!*************************************
Let #countAdd = 1
Let  $UserFound = 'N'

While #countAdd <= #countCd
    
      If TotComDed.CdName(#countAdd)  = $pinNm  

         ARRAY-ADD  #amount_val #unit_val to  TotComDed(#countAdd) CdAmount CdUnit 
         Let  #countAdd = #countCd + 1
         Let  $UserFound = 'Y'
      end-if
      
      Let  #countAdd = #countAdd + 1
end-while
  
end-procedure Add-Total-Company-Ded


!**************************************
begin-procedure Get-Acum-Base
#debug show '* Get-Acum-Base'
!**************************************
clear-array name = arr_acum
Let #tot_a = 0
Let $userKey1 = ' '

begin-select
AC.PIN_NM
AC.PIN_NUM
AC.RSLT_SEG_NUM
AC.CALC_RSLT_VAL
AC.USER_KEY1 


    MOVE &AC.PIN_NUM        TO  #pin_num
    MOVE &AC.CALC_RSLT_VAL  TO  #amount_val
    MOVE 0                  TO  #unit_val
    Let $userKey1           = &AC.USER_KEY1 
     
    if #amount_val <> 0
      ADD 1 TO #tot_a
      put #pin_num #unit_val #amount_val $userKey1  into arr_acum(#tot_a) A_code A_unit A_amount A_userKey1
    end-if

FROM PS_GP_RSLT_ACUM_VW AC,
     PS_GPBR_PAYSL_F_AC F
WHERE F.GPBR_FORMAT_ID = $FormatID
AND   F.EFFDT          = $EffdtFormat
AND   F.EFF_STATUS     = 'A'
AND   F.PIN_ACCUM_NUM    = AC.PIN_NUM
AND   AC.EMPLID         = $Emplid
AND   AC.EMPL_RCD       = #EmplRcd
AND   AC.CAL_RUN_ID     = $CalRunID
and   AC.CAL_ID         = $CalID
AND   AC.GP_PAYGROUP    = $Paygroup
AND   AC.RSLT_SEG_NUM   = #RsltSegNum
AND   (AC.USER_KEY1      = $Company
OR    AC.USER_KEY1 = ' ')

ORDER BY AC.PIN_NM 
end-select
end-procedure Get-Acum-Base

!**************************************
begin-procedure Get-Acum-Base-Summary
!**************************************
clear-array name = arr_acum
Let #tot_a = 0 
Let $alias = 'J'
Do BuildEmployeeWhere
Do BuildCompanyWhere
Let $userKey1 = ' '

begin-select
FF.SEQNUM
ACC.PIN_NM
ACC.PIN_NUM
ACC.USER_KEY1
SUM(ACC.CALC_RSLT_VAL)  &CALC_RSLT_V

    MOVE &ACC.PIN_NUM  TO  #pin_num
    MOVE &CALC_RSLT_V  TO  #amount_val
    MOVE 0             TO  #unit_val
    Let $userKey1      = &ACC.USER_KEY1 
    
    if #amount_val <> 0
      ADD 1 TO #tot_a
      put #pin_num #unit_val #amount_val $userKey1 into arr_acum(#tot_a) A_code A_unit A_amount A_userKey1
    end-if

FROM PS_GP_RSLT_ACUM_VW ACC,
     PS_GPBR_PAYSL_F_AC FF
    ,PS_JOB J
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S     
WHERE FF.GPBR_FORMAT_ID = $FormatID
AND   FF.EFFDT          = $EffdtFormat
AND   FF.EFF_STATUS     = 'A'
AND   FF.PIN_ACCUM_NUM  = ACC.PIN_NUM
AND   ACC.CAL_RUN_ID    = $CalRunID
!AND   ACC.CAL_ID        = $CalID
AND   ACC.EMPLID        = J.EMPLID
AND   ACC.EMPL_RCD      = J.EMPL_RCD
AND   J.ESTABID         = $Estabid
[$CCWhereClause]
[$EEWhereClause] 
AND   P.GP_PAYGROUP     = J.GP_PAYGROUP
AND   J.EFFDT           = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = J.EMPLID
                          AND   JJ.EMPL_RCD  = J.EMPL_RCD
                          AND   JJ.EFFDT    <= S.SEG_END_DT)
AND   J.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = J.EMPLID
                          AND   JJJ.EMPL_RCD = J.EMPL_RCD
                          AND   JJJ.EFFDT    = J.EFFDT )    
AND   P.CAL_RUN_ID      = ACC.CAL_RUN_ID
AND   P.EMPLID          = ACC.EMPLID
AND   P.EMPL_RCD        = ACC.EMPL_RCD
AND   P.GP_PAYGROUP     = ACC.GP_PAYGROUP
AND   P.CAL_ID          = ACC.CAL_ID
AND   P.ORIG_CAL_RUN_ID = ACC.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = ACC.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'   
AND   (ACC.USER_KEY1      = $Company
OR    ACC.USER_KEY1 = ' ')
GROUP BY FF.SEQNUM, ACC.PIN_NM, ACC.PIN_NUM, ACC.USER_KEY1
ORDER BY FF.SEQNUM, ACC.PIN_NM, ACC.PIN_NUM, ACC.USER_KEY1
end-select
end-procedure Get-Acum-Base-Summary

!**************************************
begin-procedure Get-BaseA-Tot-Est
!**************************************
clear-array name = TotEstBase
Let #countEb = 0
Let $alias = 'XC'
Do BuildEmployeeWhere
Do BuildCompanyWhere
Let $userKey1 = ' '

begin-select
!XA.CAL_ID
XA.PIN_NM
XA.PIN_NUM
XA.USER_KEY1
SUM(XA.CALC_RSLT_VAL)  &XA.CALC_RSLT_V

  Let #pin_num    = &XA.PIN_NUM 
  Let #amount_val = &XA.CALC_RSLT_V  
  MOVE 0             TO  #unit_val
  Let $userKey1   = &XA.USER_KEY1
 
  if #amount_val <> 0
     Do Total-Estabid-Base
  end-if

FROM PS_GP_RSLT_ACUM_VW XA,
     PS_GPBR_PAYSL_F_AC XB
    ,PS_JOB XC
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S   
WHERE XB.GPBR_FORMAT_ID = $FormatID
AND   XB.EFFDT          = $EffdtFormat
AND   XB.EFF_STATUS     = 'A'
AND   XB.PIN_ACCUM_NUM  = XA.PIN_NUM
AND   XA.CAL_RUN_ID     = $CalRunID
!AND   XA.CAL_ID         = $CalID
AND   XA.EMPLID         = XC.EMPLID
AND   XA.EMPL_RCD       = XC.EMPL_RCD
[$CCWhereClause]
[$EsWhereClause]
[$EEWhereClause] 
AND   P.GP_PAYGROUP     = XC.GP_PAYGROUP
AND   XC.EFFDT           = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = XC.EMPLID
                          AND   JJ.EMPL_RCD  = XC.EMPL_RCD
                          AND   JJ.EFFDT    <= S.SEG_END_DT)
AND   XC.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = XC.EMPLID
                          AND   JJJ.EMPL_RCD = XC.EMPL_RCD
                          AND   JJJ.EFFDT    = XC.EFFDT )  
AND   P.CAL_RUN_ID      = XA.CAL_RUN_ID
AND   P.EMPLID          = XA.EMPLID
AND   P.EMPL_RCD        = XA.EMPL_RCD
AND   P.GP_PAYGROUP     = XA.GP_PAYGROUP
AND   XC.GP_PAYGROUP    =  P.GP_PAYGROUP
AND   P.CAL_ID          = XA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = XA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = XA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'   
AND   (XA.USER_KEY1      = $TCompany
OR    XA.USER_KEY1 = ' ')
GROUP BY XA.PIN_NM, XA.PIN_NUM, XA.USER_KEY1
ORDER BY XA.PIN_NM, XA.PIN_NUM, XA.USER_KEY1
end-select
end-procedure Get-BaseA-Tot-Est

!**************************************
begin-procedure Get-BaseA-Tot-Com
!**************************************
clear-array name = TotComBase
Let #countCb = 0
Let #unit_val = 0
Let $alias = 'VC'
Do BuildEmployeeWhere


begin-select
VA.PIN_NM
VA.PIN_NUM
VA.USER_KEY1
SUM(VA.CALC_RSLT_VAL)  &VA.CALC_RSLT_V

  Let #pin_num    = &VA.PIN_NUM 
  Let #amount_val = &VA.CALC_RSLT_V  
  Let $userKey1   = &VA.USER_KEY1

  if #amount_val <> 0
     Do Total-Company-Base
  end-if

FROM PS_GP_RSLT_ACUM_VW VA,
     PS_GPBR_PAYSL_F_AC VB
    ,PS_JOB VC
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S   
WHERE VB.GPBR_FORMAT_ID = $FormatID
AND   VB.EFFDT          = $EffdtFormat
AND   VB.EFF_STATUS     = 'A'
AND   VB.PIN_ACCUM_NUM  = VA.PIN_NUM
AND   VA.CAL_RUN_ID     = $CalRunID
!AND   VA.CAL_ID         = $CalID
AND   VA.EMPLID         = VC.EMPLID
AND   VA.EMPL_RCD       = VC.EMPL_RCD
AND   VC.COMPANY        = $TCompany  
AND   VC.GP_PAYGROUP    = P.GP_PAYGROUP
[$EsWhereClause]
[$EEWhereClause] 
AND   VC.EFFDT           = (SELECT MAX(JJ.EFFDT) 
                          FROM PS_JOB JJ
                          WHERE JJ.EMPLID    = VC.EMPLID
                          AND   JJ.EMPL_RCD  = VC.EMPL_RCD
                          AND   JJ.EFFDT    <= S.SEG_END_DT)
AND   VC.EFFSEQ         = (SELECT MAX(JJJ.EFFSEQ) 
                          FROM PS_JOB JJJ
                          WHERE JJJ.EMPLID   = VC.EMPLID
                          AND   JJJ.EMPL_RCD = VC.EMPL_RCD
                          AND   JJJ.EFFDT    = VC.EFFDT )  
AND   P.CAL_RUN_ID      = VA.CAL_RUN_ID
AND   P.EMPLID          = VA.EMPLID
AND   P.EMPL_RCD        = VA.EMPL_RCD
AND   P.GP_PAYGROUP     = VA.GP_PAYGROUP
AND   P.CAL_ID          = VA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = VA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = VA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
AND   P.CAL_ID          = S.CAL_ID
AND   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'
AND   (VA.USER_KEY1       = $TCompany
OR    VA.USER_KEY1 = ' ')
GROUP BY VA.PIN_NM ,VA.PIN_NUM, VA.USER_KEY1
ORDER BY VA.PIN_NM ,VA.PIN_NUM, VA.USER_KEY1
end-select
end-procedure Get-BaseA-Tot-Com


!**************************************
begin-procedure Total-Estabid-Base
!*************************************
  Add 1 to #counteb 
     
  put #pin_num  #amount_val #unit_val $userKey1
  into TotEstBase(#counteb) EbCode EbAmount EbUnit EbUserKey1
 
end-procedure Total-Estabid-Base

!**************************************
begin-procedure Total-Company-Base
!*************************************
Let $find = 'N'     
Let #countCb = 1

  While #countCb <= #TotalCb
          get #pin_numb
          from TotComBase(#countCb) CbCode
      
          if #pin_numb = #pin_num
                         
             ARRAY-ADD #amount_val #unit_val  to TotComBase(#countCb) CbAmount CbUnit  
             Let $find = 'Y'
          end-if
          Add 1 to #countCb         
  end-while
     
  if $find = 'N'
     Add 1 TO #totalCb
     put #pin_num  #amount_val #unit_val, $userKey1
     into TotComBase(#totalCb) CbCode CbAmount CbUnit CbUserKey1
  end-if

end-procedure Total-Company-Base

!**************************************
begin-procedure  Get-Pin-Descr
!**************************************
Let $pin_descr = ''
Let $pin_nm    = ''
Let $pin_code  = ''

begin-select
PD.DESCR
PD.PIN_NM
PD.PIN_CODE

  MOVE &PD.PIN_NM TO $pin_nm
  MOVE &PD.DESCR  TO $pin_descr
  MOVE &PD.PIN_CODE TO $pin_code
  Let $pin_code = RTRIM($pin_code,' ')

  DO Get-Pin-Descr-Lang
  
FROM PS_GP_PIN PD
WHERE PD.PIN_NUM = #pin_nmp
end-select
end-procedure   Get-Pin-Descr

!**************************************
begin-procedure  Get-Pin-Descr2
!**************************************
Let $pin_descr = ''
Let $pin_nm    = ''
Let $pin_code  = ''
lET #pin_nmp = 0

begin-select
PD2.DESCR
PD2.PIN_NM
PD2.PIN_CODE
PD2.PIN_NUM

  MOVE &PD2.PIN_NM TO $pin_nm
  MOVE &PD2.DESCR  TO $pin_descr
  MOVE &PD2.PIN_CODE TO $pin_code
  Let $pin_code = RTRIM($pin_code,' ')
  Let #pin_nmp = &PD2.PIN_NUM

  DO Get-Pin-Descr-Lang
  
FROM PS_GP_PIN PD2
WHERE PD2.PIN_NM = $pinName
end-select
end-procedure   Get-Pin-Descr2

!***************************************
begin-procedure  Get-Pin-Descr-Lang
!***************************************
begin-select
PDL.DESCR
  MOVE &PDL.DESCR TO $pin_descr
FROM PS_GP_PIN_LANG PDL
WHERE PDL.PIN_NUM = #pin_nmp
AND   PDL.LANGUAGE_CD = $curr_language_cd
end-select
end-procedure   Get-Pin-Descr-Lang

!************************************** 
begin-procedure Select-Parameters
!**************************************
Let $Quote                  = ''''
Let $Multiple_Calendars     = 'N'
Let $CalRunId               = ''
Let $WhereClause            = '' 
Let $Employee_List          = '' 
Let $ImprimeEst             = 'Y'
Let $ImprimeDep             = 'N'
Let $ImprimeCom             = 'N'
Let $PrintDetail            = 'Y'
Let $ComWhereClause         = ''

begin-Select
RC.CAL_RUN_ID               &RC.CAL_RUN_ID
RC.GPBR_FORMAT_ID           &RC.GPBR_FORMAT_ID
RC.EE_LVL_SORT_OPTION       &RC.EE_LVL_SORT_OPTION
RC.GPBR_LIST_OPTION         &RC.GPBR_LIST_OPTION
RC.GPBR_SUMMARY_IND         &RC.SUMMARY_IND
RC.GB_GROUP_ID            
RC.CAL_ID
RC.COMPANY

  Let $CalRunID             = Rtrim(&RC.CAL_RUN_ID, ' ')
  Let $CalId                = Rtrim(&RC.CAL_ID, ' ')

  Let $FormatId             = Rtrim(&RC.GPBR_FORMAT_ID, ' ')
  Let $EE_Lvl_Sort          = Rtrim(&RC.EE_LVL_SORT_OPTION, ' ')
  Let $ListOption           = Rtrim(&RC.GPBR_LIST_OPTION, ' ')
  Let $SummaryInd           = Rtrim(&RC.SUMMARY_IND, ' ')
  
  if $SummaryInd = 'Y'  
     show $TTitle03        
  else
     show $TTitle02      
  end-if
  
  Let $GroupId              = Rtrim(&RC.GB_GROUP_ID, ' ')
  Let $Company              = Rtrim(&RC.COMPANY, ' ')
    
  If $Company <> ''
     Let $ComWhereClause = '.COMPANY = ' || '''' || $Company || ''''
     Let $Company_Clause = ' AND J.COMPANY = ' || '''' || $Company || '''' 
  End-if
 
  do Get-PR-Status

  Evaluate $ListOption
    when = '2'         
      Let $ImprimeDep = 'N'
      Let $WhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM PS_GPBR_RC_PAYRSL1 EST WHERE'  
      Let $WhereClause = $WhereClause || ' EST.ESTABID = J.ESTABID' 
      Let $WhereClause = $WhereClause || ' AND EST.OPRID = ' || '''' || $PRCS_OPRID || '''' 
      Let $WhereClause = $WhereClause || ' AND EST.RUN_CNTL_ID  = ' || '''' || $PRCS_RUN_CNTL_ID || '''' || ' ) '

    when = '3'
      Let $ImprimeDep = 'N'
      Do Delete-Estabid
      
      Let $WhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM PS_GPBR_RC_PAYRSL2 EMP WHERE'
      Let $WhereClause = $WhereClause || ' EMP.EMPLID = J.EMPLID' 
      Let $WhereClause = $WhereClause || ' AND EMP.OPRID = ' || '''' || $PRCS_OPRID || '''' 
      Let $WhereClause = $WhereClause || ' AND EMP.RUN_CNTL_ID  = ' || '''' || $PRCS_RUN_CNTL_ID || '''' || ' ) '
      
    when = '7'
      Let $ImprimeDep = 'Y'
      Let $ImprimeEst = 'N'
      Do Delete-Estabid
      
      Let $WhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM PS_GPBR_RC_PAYRSL3 DEP WHERE'
      Let $WhereClause = $WhereClause || ' DEP.DEPTID = J.DEPTID'
      Let $WhereClause = $WhereClause || ' AND DEP.BUSINESS_UNIT = J.BUSINESS_UNIT '     
      Let $WhereClause = $WhereClause || ' AND DEP.OPRID = ' || '''' || $PRCS_OPRID || '''' 
      Let $WhereClause = $WhereClause || ' AND DEP.RUN_CNTL_ID  = ' || '''' || $PRCS_RUN_CNTL_ID || '''' || ' ) '  
      
    when = '4'
      Let $WhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM PS_GB_GRP_RES_TBL GR WHERE'       
      Let $WhereClause = $WhereClause || ' GR.EMPLID = J.EMPLID'
      Let $WhereClause = $WhereClause || ' AND GR.GB_GROUP_ID = ' || '''' || $GroupID  || ''''
      Let $WhereClause = $WhereClause || ' AND GR.VERSIONGBQDM = (SELECT MAX(G.VERSIONGBQDM) FROM '
      Let $WhereClause = $WhereClause || ' PS_GB_GRP_RES_TBL G WHERE G.GB_GROUP_ID = GR.GB_GROUP_ID) '  
      Let $WhereClause = $WhereClause || ' AND GR.JOB_EFFDT     = (SELECT MAX(G2.JOB_EFFDT) FROM PS_GB_GRP_RES_TBL G2 '
      Let $WhereClause = $WhereClause || ' WHERE G2.GB_GROUP_ID = GR.GB_GROUP_ID AND G2.VERSIONGBQDM  = GR.VERSIONGBQDM '
      Let $WhereClause = $WhereClause || ' AND G2.EMPLID        = GR.EMPLID AND G2.EMPL_RCD      = GR.EMPL_RCD))'
  end-evaluate
  
  #debug show ' $WhereClause '  $WhereClause
  #debug show ' $Company_Clause: ' $Company_Clause
  

FROM  PS_GPBR_RC_PAYRSL RC
WHERE RC.OPRID        = $PRCS_OPRID
AND   RC.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
end-Select
end-procedure Select-Parameters

!************************************** 
begin-procedure Select-Option
!**************************************
Let $PrintDetail = 'Y'
Let $ImprimeEst = 'Y' 

  Evaluate $ListOption
    when = '2'
      Let $ImprimeDep = 'N'   
    when = '3'
      Let $ImprimeDep = 'N'     
    when = '7'
      Let $ImprimeDep = 'Y'
      Let $ImprimeEst = 'N' 
  end-evaluate
end-procedure Select-Option

!************************************** 
begin-procedure BuildEmployeeWhere
#debug show '*BuildEmployeeWhere'
#debug show ' $ListOption: ' $ListOption
!**************************************
  Let $EEWhereClause          = '' 
 
  Evaluate $ListOption
  when = '2'
    Let $EEWhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM PS_GPBR_RC_PAYRSL1 EST WHERE'
    Let $EEWhereClause = $EEWhereClause || ' EST.ESTABID = ' || $alias || '.ESTABID'
    Let $EEWhereClause = $EEWhereClause || ' AND EST.OPRID = ' || '''' || $PRCS_OPRID || '''' 
    Let $EEWhereClause = $EEWhereClause || ' AND EST.RUN_CNTL_ID  = ' || '''' || $PRCS_RUN_CNTL_ID || '''' || ' ) '
  when = '3'
    Do Delete-Estabid
    Let $EEWhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM PS_GPBR_RC_PAYRSL2 EMP WHERE'
    Let $EEWhereClause = $EEWhereClause || ' EMP.EMPLID = ' || $alias || '.EMPLID'
    Let $EEWhereClause = $EEWhereClause || ' AND EMP.OPRID = ' || '''' || $PRCS_OPRID || '''' 
    Let $EEWhereClause = $EEWhereClause || ' AND EMP.RUN_CNTL_ID  = ' || '''' || $PRCS_RUN_CNTL_ID || '''' || ' ) '
  when = '7'
    Do Delete-Estabid
    Let $EEWhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM PS_GPBR_RC_PAYRSL3 DEP WHERE'
    Let $EEWhereClause = $EEWhereClause || ' DEP.DEPTID = ' || $alias || '.DEPTID'
    Let $EEWhereClause = $EEWhereClause || ' AND DEP.BUSINESS_UNIT = ' || $alias  || '.BUSINESS_UNIT '
    Let $EEWhereClause = $EEWhereClause || ' AND DEP.OPRID = ' || '''' || $PRCS_OPRID || '''' 
    Let $EEWhereClause = $EEWhereClause || ' AND DEP.RUN_CNTL_ID  = ' || '''' || $PRCS_RUN_CNTL_ID || '''' 
    
    #debug show ' $ImprimeCom: '  $ImprimeCom
    
    
    if ($ImprimeDep = 'Y') and ($ImprimeCom = 'N')
         Let $EEWhereClause = $EEWhereClause || $EDWhereClause || ' ) '  
    else
         Let $EEWhereClause = $EEWhereClause || ' ) ' 
    end-if    
 
  when = '4'    
    Let $EEWhereClause = ' AND EXISTS ( SELECT ' || '''' || 'X' || '''' || ' FROM  PS_GB_GRP_RES_TBL GR WHERE'
    Let $EEWhereClause = $EEWhereClause || ' GR.EMPLID = ' || $alias || '.EMPLID'
    Let $EEWhereClause = $EEWhereClause || ' AND GR.GB_GROUP_ID = ' || '''' || $GroupID  || ''''
    Let $EEWhereClause = $EEWhereClause || ' AND GR.VERSIONGBQDM = (SELECT MAX(G.VERSIONGBQDM) FROM '
    Let $EEWhereClause = $EEWhereClause || ' PS_GB_GRP_RES_TBL G WHERE G.GB_GROUP_ID = GR.GB_GROUP_ID) '  
    Let $EEWhereClause = $EEWhereClause || ' AND GR.JOB_EFFDT     = (SELECT MAX(G2.JOB_EFFDT) FROM PS_GB_GRP_RES_TBL G2 '
    Let $EEWhereClause = $EEWhereClause || ' WHERE G2.GB_GROUP_ID = GR.GB_GROUP_ID AND G2.VERSIONGBQDM  = GR.VERSIONGBQDM '
    Let $EEWhereClause = $EEWhereClause || ' AND G2.EMPLID        = GR.EMPLID AND G2.EMPL_RCD      = GR.EMPL_RCD))'
  end-evaluate
  
  if ($ImprimeEst = 'Y') and ($ImprimeCom = 'N')
      Let $EsWhereClause = ' AND ' || $alias || $EsWhereCl
  else
      Let $EsWhereClause = ' '
  end-if
  
 #debug show '$EEWhereClause: '  $EEWhereClause
 #debug show '$EsWhereClause: '  $EsWhereClause
  
end-procedure BuildEmployeeWhere

!************************************** 
begin-procedure BuildCompanyWhere
#debug show 'BuildCompanyWhere'
!**************************************
Let $CCWhereClause = ''

if $ComWhereClause <> ''
 
   Let $CCWhereClause = ' AND ' || $alias || $ComWhereClause
end-if
  
end-procedure BuildCompanyWhere

!**************************************
begin-procedure Select-Establishment
!**************************************
Let $EstabidInsert = 'Y'

Begin-Select
A.ESTABID     

  Let $EstabidInsert = 'N'
 
FROM PS_GPBR_RC_PAYRSL1 A
WHERE A.OPRID        = $PRCS_OPRID
AND   A.RUN_CNTL_ID  = $PRCS_RUN_CNTL_ID
AND   A.ESTABID      = $Estabid 
end-Select
 
If $EstabidInsert = 'Y'
   Do Insert-Estabid
end-if
end-procedure Select-Establishment

!**************************************
begin-procedure Delete-Estabid
!**************************************
begin-SQL
DELETE FROM PS_GPBR_RC_PAYRSL1 
WHERE OPRID =  $PRCS_OPRID
AND   RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SQL
end-procedure Delete-Estabid

!**************************************
begin-procedure Get-Format
!**************************************
begin-select
FO.GPBR_PIN_PSLP1_NUM
FO.GPBR_PIN_PSLP2_NUM
FO.GPBR_PIN_PSLP3_NUM
FO.GPBR_EARN_IE
FO.GPBR_DED_IE
FO.EFFDT
 
   MOVE &FO.GPBR_PIN_PSLP1_NUM  TO  #earn_tot
   MOVE &FO.GPBR_PIN_PSLP2_NUM  TO  #ded_tot
   MOVE &FO.GPBR_PIN_PSLP3_NUM  TO  #net_pay
   MOVE &FO.GPBR_EARN_IE        TO  $EARN_IE
   MOVE &FO.GPBR_DED_IE         TO  $DED_IE
   
   Do convert-to-dtu-date(&FO.EFFDT, $EffdtFormat)
   Do convert-from-dtu-date($EffdtFormat, $EffdtFormat)
   
   Let #pin_nmp = #EARN_TOT
   do Get-Pin-Descr
   Let $pin_erntot = $pin_descr

   Let #pin_nmp = #DED_TOT
   do Get-Pin-Descr
   Let $pin_dedtot = $pin_descr

   Let #pin_nmp = #NET_PAY
   do Get-Pin-Descr
   Let $pin_netpay = $pin_descr

FROM PS_GPBR_PAYSL_FORM FO
WHERE FO.GPBR_FORMAT_ID = $FormatId
AND   FO.EFF_STATUS = 'A'
AND   FO.EFFDT = (SELECT MAX(FO1.EFFDT) FROM PS_GPBR_PAYSL_FORM FO1
                  WHERE FO1.GPBR_FORMAT_ID  =  FO.GPBR_FORMAT_ID
                  AND   FO1.EFF_STATUS      =  FO.EFF_STATUS
                  AND   FO1.EFFDT           <= $PeriodEndDt)
end-select
end-procedure Get-Format

!**************************************
begin-procedure Get-National-Ids
!**************************************
begin-select
PB.NATIONAL_ID
   Let $CTPS  = rtrim(&PB.NATIONAL_ID,' ')
FROM PS_PERS_NID PB
WHERE PB.NATIONAL_ID_TYPE = 'CTPS'
AND PB.EMPLID = $Emplid
end-select
end-procedure Get-National-Ids


begin-procedure Get-Location-Descr
  Let $LocationDescr = ''
begin-select
L.DESCR
L.ESTABID
  MOVE &L.DESCR    TO $LocationDescr

FROM PS_LOCATION_TBL L
WHERE L.SETID     = $SetIDLoc
AND   L.LOCATION  = $Location
AND   L.EFFDT =  (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
                   WHERE SETID    = L.SETID
                   AND   LOCATION = L.LOCATION
                   AND   EFFDT <= $PeriodEndDt)
AND   L.EFF_STATUS = 'A'
end-select

begin-select
LL.DESCR
   let $LocationDescr = rtrim(&LL.DESCR,' ')

FROM PS_LOCATION_LANG LL
WHERE LL.LOCATION = $Location
AND   LL.SETID = $SetIDLoc
AND   LL.LANGUAGE_CD = $Curr_language_Cd
AND   LL.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_LANG
                  WHERE LOCATION = LL.LOCATION
                  AND   SETID    = LL.SETID
                  AND   LANGUAGE_CD = LL.LANGUAGE_CD
                  AND   EFFDT   <= $PeriodEndDt)
end-select
end-procedure Get-Location-Descr

!**************************************
begin-procedure Get-Dept-Descr
!**************************************
  Let $DeptIDDescr = ''
begin-select
DD.DESCR

  MOVE &DD.DESCR   TO $DeptIDDescr

FROM PS_DEPT_TBL DD
WHERE DD.SETID   = $SetIDDeptID
AND   DD.DEPTID  = $Deptid
AND   DD.EFFDT   =  (SELECT MAX(EFFDT) FROM PS_DEPT_TBL
                   WHERE SETID    = DD.SETID
                   AND   DEPTID   = DD.DEPTID
                   AND   EFFDT <= $PeriodEndDt)
AND   DD.EFF_STATUS = 'A'
end-select

begin-select
DL.DESCR
 
  Let $DeptIDDescr = rtrim(&DL.DESCR,' ')

FROM PS_DEPT_TBL_LANG DL
WHERE DL.DEPTID = $DeptId
AND   DL.SETID  = $SetIDDeptID
AND   DL.LANGUAGE_CD = $Curr_language_Cd
AND   DL.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEPT_TBL_LANG
                  WHERE DEPTID = DL.DEPTID
                  AND   SETID  = DL.SETID
                  AND   LANGUAGE_CD = DL.LANGUAGE_CD
                  AND   EFFDT <= $PeriodEndDt)
end-select
end-procedure Get-Dept-Descr

!**************************************
begin-procedure Format-Payslip-DT
!************************************** 
 Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont
  Let $HeadinInd = 'Y'
  Do Select-Option

  Let #print_item = 1
  if #count_t  > 0 or
    (#earn_tot <> 0 or
     #ded_tot  <> 0 or
     #net_pay  <> 0) 
     
     if $SummaryInd = 'N' 
        print $Emplid                  (+2,{col02})
        print $Name                    (,{col20})
        print #Daily_Rt                (,{Col66}) edit '999,999,999.99c'
        print $CalID                   (,{col82}) 
        print $TerminationDt           (,{Col_Ec6})
        print $DeptIDDescr              (+1,{col02})
        print $ServiceDt               (,{col82})
        print $FormatId                (,{Col_Ec6})
        
     else
        Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont
     end-if 
     print ''  (+2,)     
  end-if
  
  while #print_item <= #count_t
    let $pinName = ''
    if  #cont_e >= #print_item        
        get #piner $pinName #amount_er #unit_er from arr_erns(#print_item) e_code e_name e_amount e_unit
        
        if $pinName <> ''
           do Get-Pin-Descr2
           Print $pinName          (,{col02},16)
        else  
           Let #pin_nmp = #piner
           do Get-Pin-Descr
           Let $piner = $pin_nm
           Print $piner            (,{col02},16)
        end-if
        Print $pin_descr           (,{colba},20)
        Print #unit_er             (,{Col39})  edit 'b99999.99c'
        Print #amount_er           (,{Col48})  edit '999,999,999.99c'
     end-if
     if  #cont_d >= #print_item
        get #pinde $pinName #amount_de #unit_de from arr_ded (#print_item) d_code d_name d_amount d_unit
        if $pinName <> ''
           do Get-Pin-Descr2
           Print $pinName          (,{col64},16)
        else
           Let #pin_nmp = #pinde
           do Get-Pin-Descr
           Let $pinde = $pin_nm
           Print $pinde               (,{Col64},16)
        end-if
        Print $pin_descr           (,{Col82},20)
        Print #unit_de             (,{Col98}) edit 'b99999.99c'
        Print #amount_de           (,{Col109}) edit '999,999,999.99c'
     end-if
     print '' (+1,2)
     Add 1 to #print_item
  end-while

  if $SummaryInd = 'N'
     if #earn_tot <> 0 
        Let #ac_pinnm = #earn_tot
        DO Get-Accum
        Let #amount_erntot = #amount_acc
     end-if   
     if #ded_tot  <> 0 
        Let #ac_pinnm = #ded_tot
        DO Get-Accum
        Let #amount_dedtot = #amount_acc
     end-if    
     if #net_pay  <> 0   
        Let #ac_pinnm = #net_pay
        DO Get-Accum
        Let #amount_netpay = #amount_acc
     end-if
     if #amount_erntot > 0 or
        #amount_dedtot > 0 or
        #amount_netpay > 0
        uppercase $TTotalEmployee
        print $TTotalEmployee (+1,{Col02}) bold
        print $pin_erntotnm   (+1,{Col02},15)
        print $pin_erntot     (,{Col20},30)
        Print #amount_erntot  (,{Col48}) edit '999,999,999.99c'
        print $pin_dedtotnm   (,{Col64},15)
        print $pin_dedtot     (,{Col82},30)
        Print #amount_dedtot  (,{Col109})  edit '999,999,999.99c'
        Print $pin_netpaynm   (+1,{Col64},15) bold
        Print $pin_netpay     (,{Col82},30) bold
        Print #amount_netpay  (,{Col109}) edit '$$$,$$$,$$9.99c'  
     end-if
  else 
     
     if #earn_tot <> 0 
        Let #ac_pinnm = #earn_tot
        DO Get-Accum-Summary
        Let #amount_erntot = #amount_acc
     end-if
     if #ded_tot  <> 0 
        Let #ac_pinnm = #ded_tot
        DO Get-Accum-Summary
        Let #amount_dedtot = #amount_acc
     end-if
     if #net_pay  <> 0 
        Let #ac_pinnm = #net_pay
        DO Get-Accum-Summary
        Let #amount_netpay = #amount_acc
     end-if
     if #amount_erntot > 0 or
        #amount_dedtot > 0 or
        #amount_netpay > 0
        
        if $ImprimeDep = 'Y'
           uppercase $TTotalDept
           print $TTotalDept    (+1,{Col02}) bold
        else
           uppercase $TTotalEstab
           print $TTotalEstab    (+1,{Col02}) bold
        end-if
        
        print $pin_erntotnm   (+1,{Col02},15)
        print $pin_erntot     (,{Col20},30)
        Print #amount_erntot  (,{Col48}) edit '999,999,999.99c'
        print $pin_dedtotnm   (,{Col64},15)
        print $pin_dedtot     (,{Col82},30)
        Print #amount_dedtot  (,{Col109})  edit '999,999,999.99c'
        Print $pin_netpaynm   (+1,{Col64},15) bold
        Print $pin_netpay     (,{Col82},30) bold
        Print #amount_netpay  (,{Col109}) edit '$$$,$$$,$$9.99c' bold
     end-if
  end-if

  if #tot_a > 0
     print $TBase (+1,{col02}) bold
     Let #Cont_a = 1
     let $pinName = ''
     while #cont_a <= #tot_a
       get #pinac #amount_ac #unit_ac $userKey1 from arr_acum(#cont_a) a_code a_amount a_unit a_userKey1
       Let #pin_nmp = #pinac
       do Get-Pin-Descr
       Let $pinac = $pin_nm
       Print $pinac               (+1,{col02},17)
       Print $userKey1            (,+2, 7)
       Print $pin_descr           (,{colbad},20)
       Print #amount_ac           (,{Col48})  edit '999,999,999.99c'
      
       Add 1 to #cont_a
     end-while
  end-if
     
  graphic (+1,1,125) horz-line 10
  Let #row = 1
  
  
end-procedure Format-Payslip-DT

!**************************************
begin-procedure Print-Total-E  
#debug show 'Print-Total-E'
!************************************** 
  
  if #countEt > 0   
     If #SummaryCount > 0 or $SummaryInd = 'N'
        new-page  
     end-if
     Do Heading3     
  end-if
   
  Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont
  Print ' '                    (+1)
                       
  Let #printItemE   = 1    
  while #printItemE <= #countEt 
    Let $pinName = ''
    if  #countee >= #printItemE
        get #pinEe $pinName #amountEe #unitEe from TotEstErns(#printItemE) Eecode Eename Eeamount Eeunit
        
        if $pinName <> ''
       do Get-Pin-Descr2
       Print $pinName          (,{col02},12)
        else  
           Let #pin_nmp = #pinEe
           do Get-Pin-Descr
           Let $piner = $pin_nm        
           Print $piner               (,{col02},12)
        end-if

        Print $pin_descr           (,{colba},20)
        Print #unitEe              (,{Col39})  edit 'b99999.99c'
        Print #amountEe            (,{Col48})  edit '999,999,999.99c'
     end-if
     if #countEd >= #printItemE
        Let $pinName = ''
        get #pinEd $pinName #amountEd #unitEd from TotEstDed(#printItemE) Edcode Edname Edamount Edunit
        if $pinName <> ''
       do Get-Pin-Descr2
       Print $pinName          (,{col64},12)
        else          
           Let #pin_nmp = #pinEd
           do Get-Pin-Descr
           Let $piner = $pin_nm
           Print $piner               (,{Col64},12)
        end-if
        Print $pin_descr           (,{Col82},20)
        Print #unitEd              (,{Col98})  edit 'b99999.99c'
        Print #amountEd            (,{Col109}) edit '999,999,999.99c'
     end-if
     print '' (+1,2)
     Add 1 to #printItemE
  end-while

  if #earn_tot <> 0 
     Let #ac_pinnm = #earn_tot
     DO Get-Accum-Tot-Est
     Let #amount_erntot = #amount_acc
  end-if   
  if #ded_tot  <> 0 
     Let #ac_pinnm = #ded_tot
     DO Get-Accum-Tot-Est
     Let #amount_dedtot = #amount_acc
  end-if    
  if #net_pay  <> 0   
     Let #ac_pinnm = #net_pay
     DO Get-Accum-Tot-Est
     Let #amount_netpay = #amount_acc
  end-if
  
  if #amount_erntot > 0 or
     #amount_dedtot > 0 or
     #amount_netpay > 0
     
     
     if $ImprimeDep = 'Y'
        uppercase $TTotalDept
        print $TTotalDept    (+1,{Col02}) bold
     else
        uppercase $TTotalEstab
        print $TTotalEstab (+1,{Col02}) bold
     end-if
     
     print $pin_erntotnm   (+1,{Col02},15)
     print $pin_erntot     (,{Col20},30)
     Print #amount_erntot  (,{Col48}) edit '999,999,999.99c'
     print $pin_dedtotnm   (,{Col64},15)
     print $pin_dedtot     (,{Col82},30)
     Print #amount_dedtot  (,{Col109})  edit '999,999,999.99c'
     Print $pin_netpaynm   (+1,{Col64},15) bold
     Print $pin_netpay     (,{Col82},30) bold
     Print #amount_netpay  (,{Col109}) edit '$$$,$$$,$$9.99c' bold
  end-if

  if #counteb > 0
     print $TBase (+1,{col02}) bold
     Let #ContEb = 1
     while #ContEb <= #counteb
        get #pinac #amount_ac #unit_ac $userKey1 from TotEstBase(#ContEb) Ebcode Ebamount Ebunit EbUserKey1
        Let #pin_nmp = #pinac
        do Get-Pin-Descr
        Let $pinac = $pin_nm
        Print $pinac               (+1,{col02},12)
        Print $userKey1            (,+2, 7)
        Print $pin_descr           (,{colbad},20)
        Print #amount_ac           (,{Col48})  edit '999,999,999.99c'
      
       Add 1 to #ContEb
     end-while
  end-if
     
  graphic (+1,1,125) horz-line 10
  
  Let #countEe = 0 
  Let #countEd = 0
  Let #countEb = 0
  clear-array name = TotEstErns
  clear-array name = TotEstDed
  clear-array name = TotEstBase
  
end-procedure Print-Total-E

!**************************************
begin-procedure Print-Total-C
!************************************** 
 new-page  
  Do Heading3 
  Let $ImprimeEst = 'N'
  Let $ImprimeDep = 'N'
 
 Alter-Printer Point-size = #StmtPntSize Font-Type = Proportional Font = #StdFont
  Print ' '                    (+1)

  Let #printItemC   = 1   
  
  while #printItemC <= #countCt
    Let $pinName = ''
    if  #countCe >= #printItemC       
        get #pinCe $pinName #amountCe #unitCe from TotComErns(#printItemC) Cecode Cename Ceamount Ceunit
        if $pinName <> ''
           do Get-Pin-Descr2
       Print $pinName          (,{col02},12)
        else          
           Let #pin_nmp = #pinCe
           do Get-Pin-Descr
           Let $piner = $pin_nm
           Print $piner               (,{col02},12)
        end-if
        Print $pin_descr           (,{colba},20)
        Print #unitCe              (,{Col39})  edit 'b99999.99c'
        Print #amountCe            (,{Col48})  edit '999,999,999.99c'
     end-if
     if #countCd >= #printItemC
        Let $pinName = ''
        get #pinCd $pinName #amountCd #unitCd from TotComDed(#printItemC) Cdcode Cdname Cdamount Cdunit
        if $pinName <> ''
           do Get-Pin-Descr2
       Print $pinName          (,{col64},12)
        else          
           Let #pin_nmp = #pinCd
           do Get-Pin-Descr
           Let $piner = $pin_nm
           Print $piner               (,{Col64},12)
        end-if
        Print $pin_descr           (,{Col82},20)
        Print #unitCd              (,{Col98}) edit 'b99999.99c'
        Print #amountCd            (,{Col109}) edit '999,999,999.99c'
     end-if
     print '' (+1,2)
     Add 1 to #printItemC
  end-while

  if #earn_tot <> 0 
     Let #ac_pinnm = #earn_tot
     DO Get-Accum-Tot-Com
     Let #amount_erntot = #amount_acc
  end-if   
  if #ded_tot  <> 0 
     Let #ac_pinnm = #ded_tot
     DO Get-Accum-Tot-Com
     Let #amount_dedtot = #amount_acc
  end-if    
  if #net_pay  <> 0   
     Let #ac_pinnm = #net_pay
     DO Get-Accum-Tot-Com
     Let #amount_netpay = #amount_acc
  end-if
  if #amount_erntot > 0 or
       #amount_dedtot > 0 or
       #amount_netpay > 0
       uppercase $TTotalCompany
       print $TTotalCompany (+1,{Col02}) bold
       print $pin_erntotnm   (+1,{Col02},15)
       print $pin_erntot     (,{Col20},30)
       Print #amount_erntot  (,{Col48}) edit '999,999,999.99c'
       print $pin_dedtotnm   (,{Col64},15)
       print $pin_dedtot     (,{Col82},30)
       Print #amount_dedtot  (,{Col109})  edit '999,999,999.99c'
       Print $pin_netpaynm   (+1,{Col64},15) bold
       Print $pin_netpay     (,{Col82},30) bold
       Print #amount_netpay  (,{Col109}) edit '$$$,$$$,$$9.99c' bold
    end-if
  
    if #totalCb > 0
       print $TBase (+1,{col02}) bold
       Let #ContCb = 1
       while #ContCb <= #totalCb
         get #pinac #amount_ac #unit_ac $userKey1 from TotComBase(#ContCb) Cbcode Cbamount Cbunit CbUserKey1
         Let #pin_nmp = #pinac
         do Get-Pin-Descr
         Let $pinac = $pin_nm
         Print $pinac               (+1,{col02},12)
         Print $userKey1            (,+2,7)
         Print $pin_descr           (,{colbad},20)
         Print #amount_ac           (,{Col48})  edit '999,999,999.99c'
          
         Add 1 to #ContCb
       end-while
    end-if
         
       graphic (+1,1,125) horz-line 10
      
      Let #countCe = 0 
      Let #countCd = 0
      Let #countCb = 0
      Let #TotalCb = 0
      clear-array name = TotComErns
      clear-array name = TotComDed
      clear-array name = TotComBase
    
end-procedure Print-Total-C

!**************************************
begin-procedure Get-Accum
!**************************************
Let #amount_acc = 0
begin-select
EEE.RSLT_SEG_NUM
EEE.CALC_RSLT_VAL
EEE.USER_ADJ_VAL  

    MOVE &EEE.CALC_RSLT_VAL  TO  #amount_acc
    LET #amount_acc = #amount_acc +  &EEE.USER_ADJ_VAL           

FROM PS_GP_RSLT_ACUM_VW EEE
WHERE EEE.PIN_NUM      = #ac_pinnm
AND   EEE.EMPLID       = $Emplid
AND   EEE.EMPL_RCD     = #EmplRcd
AND   EEE.CAL_RUN_ID   = $CalRunID
and   EEE.CAL_ID       = $CalID
AND   EEE.RSLT_SEG_NUM = #RsltSegNum
AND   EEE.GP_PAYGROUP  = $Paygroup
end-select
end-procedure Get-Accum

!**************************************
begin-procedure Get-Accum-Summary
!**************************************
Let #amount_acc = 0

Let $alias = 'J'
Do BuildCompanyWhere
#debug show $CCWhereClause

begin-select
EE.PIN_NM
SUM(EE.CALC_RSLT_VAL) &EE.CALC_RSLT_VAL

    MOVE &EE.CALC_RSLT_VAL  TO  #amount_acc

FROM PS_GP_RSLT_ACUM_VW EE
    ,PS_JOB J
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S   
WHERE EE.PIN_NUM      = #ac_pinnm
and   EE.CAL_RUN_ID   = $CalRunID
and   EE.CAL_ID       = $CalID
AND   EE.EMPLID       = J.EMPLID
AND   EE.EMPL_RCD     = J.EMPL_RCD
[$CCWhereClause]
and   P.GP_PAYGROUP     = J.GP_PAYGROUP
AND   J.ESTABID       = $Estabid
AND   J.EFFDT         = (SELECT MAX(JJ.EFFDT) 
                         FROM PS_JOB JJ
                         WHERE JJ.EMPLID    = J.EMPLID
                         AND   JJ.EMPL_RCD  = J.EMPL_RCD
                         AND   JJ.EFFDT    <= S.SEG_END_DT)
AND   J.EFFSEQ        = (SELECT MAX(JJJ.EFFSEQ) 
                         FROM PS_JOB JJJ
                         WHERE JJJ.EMPLID   = J.EMPLID
                         AND   JJJ.EMPL_RCD = J.EMPL_RCD
                         AND   JJJ.EFFDT    = J.EFFDT )  
AND   P.CAL_RUN_ID      = EE.CAL_RUN_ID
AND   P.EMPLID          = EE.EMPLID
AND   P.EMPL_RCD        = EE.EMPL_RCD
and   P.GP_PAYGROUP     = EE.GP_PAYGROUP
and   P.CAL_ID          = EE.CAL_ID
AND   P.ORIG_CAL_RUN_ID = EE.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = EE.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
and   P.CAL_ID          = S.CAL_ID
and   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'                              
GROUP BY EE.PIN_NM
ORDER BY EE.PIN_NM 
end-select
end-procedure Get-Accum-Summary

!**************************************
begin-procedure Get-Accum-Tot-Est
!**************************************
Let #amount_acc = 0
Let $alias = 'HB'
Do BuildEmployeeWhere
Do BuildCompanyWhere


begin-select
!HA.CAL_ID
HA.PIN_NM
HA.PIN_NUM
SUM(HA.CALC_RSLT_VAL) &HA.CALC_RSLT_VAL

    MOVE &HA.CALC_RSLT_VAL  TO  #amount_acc

FROM PS_GP_RSLT_ACUM_VW HA
    ,PS_JOB HB
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S   
WHERE HA.PIN_NUM      = #ac_pinnm
and   HA.CAL_RUN_ID   = $CalRunID
!and   HA.CAL_ID       = $CalID
AND   HA.EMPLID       = HB.EMPLID
AND   HA.EMPL_RCD     = HB.EMPL_RCD
[$CCWhereClause]
[$ESWhereClause]
[$EEWhereClause] 
AND   P.GP_PAYGROUP     = HB.GP_PAYGROUP
AND   HB.EFFDT        = (SELECT MAX(JJ.EFFDT) 
                         FROM PS_JOB JJ
                         WHERE JJ.EMPLID    = HB.EMPLID
                         AND   JJ.EMPL_RCD  = HB.EMPL_RCD
                         AND   JJ.EFFDT    <= S.SEG_END_DT)
AND   HB.EFFSEQ        = (SELECT MAX(JJJ.EFFSEQ) 
                         FROM PS_JOB JJJ
                         WHERE JJJ.EMPLID   = HB.EMPLID
                         AND   JJJ.EMPL_RCD = HB.EMPL_RCD
                         AND   JJJ.EFFDT    = HB.EFFDT )   
AND   P.CAL_RUN_ID      = HA.CAL_RUN_ID
AND   P.EMPLID          = HA.EMPLID
AND   P.EMPL_RCD        = HA.EMPL_RCD
and   P.GP_PAYGROUP     = HA.GP_PAYGROUP
and   P.CAL_ID          = HA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = HA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = HA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
and   P.CAL_ID          = S.CAL_ID
and   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'                               
!GROUP BY HA.CAL_ID, HA.PIN_NM, HA.PIN_NUM
!order by HA.CAL_ID, HA.PIN_NM, HA.PIN_NUM 
group by HA.PIN_NM, HA.PIN_NUM
order by HA.PIN_NM, HA.PIN_NUM 
end-select
end-procedure Get-Accum-Tot-Est

!**************************************
begin-procedure Get-Accum-Tot-Com
!**************************************
Let #amount_acc = 0
Let $alias = 'WB'
Do BuildEmployeeWhere

begin-select
!WA.CAL_ID
WB.COMPANY
WA.PIN_NM
WA.PIN_NUM
SUM(WA.CALC_RSLT_VAL) &WA.CALC_RSLT_VAL

    MOVE &WA.CALC_RSLT_VAL  TO  #amount_acc

FROM PS_GP_RSLT_ACUM_VW WA
    ,PS_JOB WB
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GP_PYE_SEG_STAT S   
WHERE WA.PIN_NUM      = #ac_pinnm
AND   WA.CAL_RUN_ID   = $CalRunID
!and   WA.CAL_ID       = $CalID
AND   WA.EMPLID       = WB.EMPLID
AND   WA.EMPL_RCD     = WB.EMPL_RCD
AND   WB.COMPANY      = $TCompany
[$ESWhereClause]
[$EEWhereClause] 
AND   P.GP_PAYGROUP     = WB.GP_PAYGROUP
AND   WB.EFFDT         = (SELECT MAX(JJ.EFFDT) 
                         FROM PS_JOB JJ
                         WHERE JJ.EMPLID    = WB.EMPLID
                         AND   JJ.EMPL_RCD  = WB.EMPL_RCD
                         AND   JJ.EFFDT    <= WA.SLICE_END_DT)
AND   WB.EFFSEQ        = (SELECT MAX(JJJ.EFFSEQ) 
                         FROM PS_JOB JJJ
                         WHERE JJJ.EMPLID   = WB.EMPLID
                         AND   JJJ.EMPL_RCD = WB.EMPL_RCD
                         AND   JJJ.EFFDT    = WB.EFFDT )   
AND   P.CAL_RUN_ID      = WA.CAL_RUN_ID
AND   P.EMPLID          = WA.EMPLID
AND   P.EMPL_RCD        = WA.EMPL_RCD
and   P.GP_PAYGROUP     = WA.GP_PAYGROUP
and   P.CAL_ID          = WA.CAL_ID
AND   P.ORIG_CAL_RUN_ID = WA.ORIG_CAL_RUN_ID
AND   S.RSLT_SEG_NUM    = WA.RSLT_SEG_NUM
AND   S.CALC_ACTION       = 'C'
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
AND   P.CAL_RUN_ID      = S.CAL_RUN_ID
AND   P.EMPLID          = S.EMPLID
AND   P.EMPL_RCD        = S.EMPL_RCD
and   P.CAL_ID          = S.CAL_ID
and   P.GP_PAYGROUP     = S.GP_PAYGROUP
AND   P.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID
AND   P.RSLT_VER_NUM    = (SELECT MAX (X.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT X
                           WHERE X.EMPLID       = P.EMPLID
                           AND X.EMPL_RCD       = P.EMPL_RCD
                           AND X.CAL_ID         = P.CAL_ID
                           AND X.GP_PAYGROUP    = P.GP_PAYGROUP
                           AND X.CALC_TYPE      = P.CALC_TYPE)
AND   P.RSLT_REV_NUM      = 1
AND   P.PYE_PRC_IND       = 'N'
AND   P.SEL_STAT          IN ( 'A', 'I')
AND   P.SEL_ACTION        = 'C'
AND   P.CALC_TYPE         = 'P'                               
!GROUP BY WA.CAL_ID, WB.COMPANY, WA.PIN_NM ,WA.PIN_NUM
!order by WA.CAL_ID, WB.COMPANY, WA.PIN_NM ,WA.PIN_NUM 
group by WB.COMPANY, WA.PIN_NM ,WA.PIN_NUM
order by WB.COMPANY, WA.PIN_NM ,WA.PIN_NUM 
end-select
end-procedure Get-Accum-Tot-Com

!**************************************
begin-procedure Get-Date-emplid
!**************************************
begin-select
EM.SERVICE_DT

  Let $ServiceDt        = Rtrim(&EM.SERVICE_DT, ' ')
  if $ServiceDt <> ''
     do Format-DateTime($ServiceDt, $ServiceDt, {DEFDMY}, '', '')
  end-if
  
FROM PS_EMPLOYMENT EM
WHERE EM.EMPLID = $Emplid
AND EM.EMPL_RCD = #EmplRcd
end-select
end-procedure get-date-emplid

!**************************************
begin-procedure Store-Company
#debug show 'Store-Company'
!**************************************
if $company <> ''
!   If $SummaryInd = 'N'
      Let $company = rtrim(&J.COMPANY, ' ')
!   else
!      Let $company = rtrim(&JJ.COMPANY, ' ')
      Let $Tcompany = rtrim(&JJ.COMPANY, ' ')
!   end-if
end-if

#debug show '$company: '  $company

end-procedure Store-Company

!**************************************
begin-procedure Store-Deptid
#debug show 'Store-Deptid'
!**************************************

  If #regpro = 0 
     Let $Tcompany = rtrim(&JJ.COMPANY, ' ')
  end-if
 
end-procedure Store-Deptid



!**************************************
begin-procedure Def-Arrays
!**************************************
CREATE-ARRAY NAME = arr_erns SIZE = 1000
     FIELD = e_code:number
     FIELD = e_name:char
     FIELD = e_amount:number
     FIELD = e_unit:number

CREATE-ARRAY NAME = arr_ded SIZE = 1000
     FIELD = d_code:number
     FIELD = d_name:char
     FIELD = d_amount:number
     FIELD = d_unit:number
     
CREATE-ARRAY NAME = arr_acum SIZE = 1000
     FIELD = a_code:number
     FIELD = a_amount:number
     FIELD = a_unit:number  
     FIELD = a_userKey1:char
     
CREATE-ARRAY NAME = TotEstErns SIZE = 1000
     FIELD = EeCode:number
     FIELD = Eename:char
     FIELD = EeAmount:number
     FIELD = EeUnit:number

CREATE-ARRAY NAME = TotEstDed SIZE = 1000
     FIELD = EdCode:number
     FIELD = Edname:char
     FIELD = EdAmount:number
     FIELD = EdUnit:number

CREATE-ARRAY NAME = TotEstBase SIZE = 1000
     FIELD = EbCode:number
     FIELD = EbName:char
     FIELD = EbAmount:number
     FIELD = EbUnit:number    
     FIELD = EbUserKey1:char

CREATE-ARRAY NAME = TotComErns SIZE = 1000
     FIELD = CeCode:number
     FIELD = CeName:char
     FIELD = CeAmount:number
     FIELD = CeUnit:number

CREATE-ARRAY NAME = TotComDed SIZE = 1000
     FIELD = CdCode:number
     FIELD = CdName:char
     FIELD = CdAmount:number
     FIELD = CdUnit:number

CREATE-ARRAY NAME = TotComBase SIZE = 1000
     FIELD = CbCode:number
     FIELD = CbName:char
     FIELD = CbAmount:number
     FIELD = CbUnit:number      
     FIELD = CbUserKey1:char

CREATE-ARRAY NAME = Establishment SIZE = 1000
     FIELD = Estabid:Char
     
CREATE-ARRAY NAME = Company SIZE = 1000
     FIELD = Company:Char
     FIELD = Estabid:Char

end-procedure Def-Arrays

!***************************************
begin-procedure Report-Translation
!***************************************
  do Init_Report_Translation ($ReportID, $curr_language_cd)
  do Append_Report_Translation ('GPBRRR01')  
  
  do Get_Field_Information ('GPBRRR01', 'AMOUNT',         $TAmount,        #DW)
  do Get_Field_Information ('GPBRRR01', 'DESCRIPTION',    $TDescription,   #DW)  
  do Get_Field_Information ('GPBRRR01', 'COMPANY',        $TTCompany,      #DW)
  do Get_Field_Information ('GPBRRR01', 'EMPLID',         $TEmplid,        #DW)
  do Get_Field_Information ('GPBRRR01', 'END_PR_STATUS',  $TStatusEnd,     #DW)
  do Get_Field_Information ('GPBRRR01', 'NAME',           $TName,          #DW)
  do Get_Field_Information ('GPBRRR01', 'OPEN_PR_STATUS', $TStatusOpen,    #DW)
  do Get_Field_Information ('GPBRRR01', 'PAGE',           $TPage,          #DW)  
  do Get_Field_Information ('GPBRRR01', 'PAYGROUP',       $TPaygroup,      #DW) 
  do Get_Field_Information ('GPBRRR01', 'PEOPLESOFT',     $TPeopleSoft,    #DW)
  do Get_Field_Information ('GPBRRR01', 'PERIOD_END',     $TEndPeriod,     #DW)
  do Get_Field_Information ('GPBRRR01', 'PERIOD_BEGIN',   $TBeginPeriod,   #DW)  
  do Get_Field_Information ('GPBRRR01', 'REPORTID',       $TReportID,      #DW)
  do Get_Field_Information ('GPBRRR01', 'RUN_DT',         $TRunDt,         #DW)
  do Get_Field_Information ('GPBRRR01', 'TITLE01',        $TTitle01,       #DW)
  do Get_Field_Information ('GPBRRR01', 'FORMAT',         $TFormat,        #DW) 
  do Get_Field_Information ('GPBRRR01', 'UNIT',           $TUnit,          #DW)
  do Get_Field_Information ('GPBRRR01', 'DEPTID',         $TTDeptid,       #DW)
  do Get_Field_Information ('GPBRRR01', 'ESTABID',        $TTEstabid,      #DW)
  do Get_Field_Information ('GPBRRR01', 'SERVICE_DT',     $TServiceDt,     #DW)
  do Get_Field_Information ('GPBRRR01', 'TERMINATION_DT', $TTerminationDt, #DW)
  do Get_Field_Information ('GPBRRR01', 'PAYMENT_DT',     $TPaymentDt,     #DW)
  do Get_Field_Information ('GPBRRR01', 'DAILY_RT',       $TDailyRt,       #DW)
  do Get_Field_Information ('GPBRRR01', 'CAL_GROUP_ID',   $TCalGroupID,    #DW)
  do Get_Field_Information ('GPBRRR01', 'CAL_ID',         $TCalID,         #DW)
  do Get_Field_Information ('GPBRRR01', 'ELEMENT',        $TElement,       #DW)
  do Get_Field_Information ('GPBRRR01', 'BASE',           $TBase,          #DW)
  do Get_Field_Information ('GPBRRR01', 'TOTAL01',        $TTotalEmployee, #DW)
  do Get_Field_Information ('GPBRRR01', 'TOTAL02',        $TTotalCompany,  #DW)
  do Get_Field_Information ('GPBRRR01', 'TOTAL03',        $TTotalEstab,    #DW)
  do Get_Field_Information ('GPBRRR01', 'TOTAL04',        $TTotalDept,     #DW)
  do Get_Field_Information ('GPBRRR01', 'ANALYTICAL',     $TTitle02,       #DW)
  do Get_Field_Information ('GPBRRR01', 'SYNTHETIC',      $TTitle03,       #DW)
  do Get_Field_Information ('GPBRRR01', 'EARNINGS',       $TEarnings,      #DW)
  do Get_Field_Information ('GPBRRR01', 'DEDUCTIONS',     $TDeductions,    #DW)
  do Get_Field_Information ('GPBRRR01', 'NET_PAY',        $TNetPay,        #DW)
  
end-procedure Report-Translation

!***********************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'gpbrmape.sqc'  !Get Pin Code