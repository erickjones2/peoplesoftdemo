!***********************************************************************
!  GPINYE01:  Form24                                                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:04:00:36                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!  Modification History:                                               *
!                                                                      *
!  Date         Incident                                               *
! ----------    -----------                                            *
! DD/MM/YYYY                                                           *
! 27/11/2003    143428   The SQR has been updated to make it run       *
!                        for Terminated Employee. Form 12 was printing *
!                        wrong values for Tax dedctions.               *
!***********************************************************************
#include 'setenv.sqc'      !Set environment
#include 'rellang.sqc'

Begin-Setup

  #Include 'ptset02.sqc'   ! Printer and page-size initialization

End-Setup



!***********************************************************************
begin-program
  do Init-Report
  do Stdapi-Term
end-program

!***********************************************************************
!  Heading
!***********************************************************************
Begin-Heading 4
   #Include 'stdhdgtr.sqc'
End-Heading
!***********************************************************************
!  Init Report
!***********************************************************************
begin-procedure Init-Report

  move 'GPINYE01' to $ReportID
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Stdapi-Init
  let $language_cd = $CURR_LANGUAGE_CD

  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)

  if $prcs_process_instance = ''
  else
    let #prcs_process_instance=To_number($prcs_process_instance)
  end-if
  do Get_Translat_Info
  do Init_Printer

  do Get_Run_Cntrl_Dtls
  do  Get-Estab-Info

end-procedure !Init-Report


!***********************************************************************
! Function:    Print_Header                                            *
!                                                                      *
! Description: Prints the Header of the report                  *
!                                                                      *
!***********************************************************************
begin-procedure   Print_Header

  Do Get-Employer-Address

  alter-printer font=4 point-size=12
  alter-printer font=4 point-size=8
  print $xv_TANPAN   (+1,1,#xfw_TANPAN)
  Let $esttan = rtrim(ltrim($esttan,' '),' ')
  print $esttan      ( ,+7,)
  print 'and'        ( ,+6,)
  print $estpan      (,+6,)
  add 1 to #line
  print $xv_EMPLRCD    (+1,1,#xfw_EMPLRCD)
  print $emplclscd     (,+13,)
  print $xv_EMPLRNAME   (+1,1,#xfw_EMPLRNAME)
  Do Print-Estab-Address
  print $xv_SALPAYR  (+1,1,#xfw_SALPAYR)
  Let $emplrname = rtrim(ltrim($emplrname,' '),' ')
  if rtrim(ltrim($addrflg,' '),' ') = 'Yes'
    print $emplrname      (,,)
  end-if
  add 1 to #line
  print $xv_ADDRCHNG   (+1,1,#xfw_ADDRCHNG)
  print $xv_CONTD      (+1,1,#xfw_CONTD)
  Let $addrflg = rtrim(ltrim($addrflg,' '),' ')
  print $addrflg       (,41,)
  add 4 to #line
  Let #ln = #line
  print $xv_01   (21,1,#xfw_01)
  add 2 to #line
  print $xv_02   (+2,1,#xfw_02)
  add 2 to #line
  print $xv_03   (+2,1,#xfw_03)
  add 2 to #line
  print $xv_04   (+2,1,#xfw_04)
  add 2 to #line
  print $xv_05   (+2,1,#xfw_05)
  add 2 to #line
  print $xv_06   (+2,1,#xfw_06)
  add 2 to #line
  print $xv_07   (+2,1,#xfw_07)
  add 2 to #line
  print $xv_08   (+2,1,#xfw_08)
  add 2 to #line
  print $xv_09   (+2,1,#xfw_09)
  add 2 to #line
  print $xv_10   (+2,1,#xfw_10)
  add 2 to #line
  print $xv_11   (+2,1,#xfw_11)
  add 2 to #line
  print $xv_12   (+2,1,#xfw_12)
  add 2 to #line
  print $xv_13   (+2,1,#xfw_13)
  add 2 to #line
  print $xv_14   (+2,1,#xfw_14)
  add 2 to #line
  print $xv_15   (+2,1,#xfw_15)
  let #line = #ln
  print $xv_16   (21,80,#xfw_16)
  add 2 to #line
  print $xv_17   (+2,80,#xfw_17)
  add 2 to #line
  print $xv_18   (+2,80,#xfw_18)
  add 2 to #line
  print $xv_19   (+2,80,#xfw_19)
  add 2 to #line
  print $xv_20   (+2,80,#xfw_20)
  add 2 to #line
  print $xv_21   (+2,80,#xfw_21)
  add 2 to #line
  print $xv_22   (+2,80,#xfw_22)
  add 2 to #line
  print $xv_23   (+2,80,#xfw_23)
  add 2 to #line
  print $xv_24   (+2,80,#xfw_24)
  add 2 to #line
  print $xv_25   (+2,80,#xfw_25)
  add 2 to #line
  print $xv_26   (+2,80,#xfw_26)
  add 2 to #line
  print $xv_27   (+2,80,#xfw_27)
  add 2 to #line
  print $xv_28   (+2,80,#xfw_28)
  add 2 to #line
  print $xv_29   (+2,80,#xfw_29)
  add 2 to #line
  print $xv_30   (+2,80,#xfw_30)
  new-page
  Do Print_Header2
end-procedure  !Print_Header

!**************************************************************************
Begin-Procedure Print_Header2
!***********************************************************************
  let #line = 4
  let #col = 5

  GRAPHIC (+1,5,150) HORZ-LINE
  print 'Col-01' (#line,5,)

  add 6 to #col
  print 'Col-02' (,#col,)
  add 12 to #col
  print 'Col-03' (,#col,)
  add 28 to #col
  print 'Col-04' (,#col,)
           add 30 to #col
           print 'Col-05' (,#col,)
           add 15 to #col
           print 'Col-06' (,#col,)
           add 15 to #col
           print 'Col-07' (,#col,)
           add 15 to #col
           print 'Col-08' (,#col,)
           add 15 to #col
           print 'Col-09' (,#col,)
           Let #col = 81
         GRAPHIC (+1,81,74) HORZ-LINE
         add 1 to #line

         print 'Col-10' (+2,#col,)
         add 15 to #col
         print 'Col-11' (,#col,)
         add 15 to #col
         print 'Col-12' (,#col,)
         add 15 to #col
         print 'Col-13' (,#col,)
         add 15 to #col
         print 'Col-14' (,#col,)
         add 1 to #line
         Let #col = 81
         GRAPHIC (+1,81,74) HORZ-LINE
         add 2 to #line
         print 'Col-15' (+2,#col,)
         add 15 to #col
         print 'Col-16' (,#col,)
         add 15 to #col
         print 'Col-17' (,#col,)
         add 15 to #col
         print 'Col-18' (,#col,)
         add 15 to #col
         print 'Col-19' (,#col,)
         add 1 to #line
         Let #col = 81
         GRAPHIC (+1,81,74) HORZ-LINE
         add 2 to #line
         print 'Col-20' (+2,#col,)
         add 15 to #col
         print 'Col-21' (,#col,)
         add 15 to #col
         print 'Col-22' (,#col,)
         add 15 to #col
         print 'Col-23' (,#col,)
         add 15 to #col
         print 'Col-24' (,#col,)
         Let #col = 81
         GRAPHIC (+1,81,74) HORZ-LINE
         add 1 to #line
         print 'Col-25' (+2,#col,)
         add 15 to #col
         print 'Col-26' (,#col,)
         add 15 to #col
         print 'Col-27' (,#col,)
         add 15 to #col
         print 'Col-28' (,#col,)
         add 15 to #col
         print 'Col-29' (,#col,)
         add 15 to #col
         Let #col = 81
         GRAPHIC (+1,81,74) HORZ-LINE
         add 2 to #line
         print 'Col-30' (+2,#col,)
         GRAPHIC (+1,5,150) HORZ-LINE
         add 1 to #line

end-procedure  !Print_Header2

! *************************************************************************************
Begin-Procedure print_Report_flds

let #sum8910 = #totsal + #hra + #perq
let #dif1213 = #sum8910 - #sec16ded
let #sum1415 = #dif1213 + #incnotsal
let #sum1718 = #sec80don + #sec80rent
let #val19   = #totded - #sum1718
let #val21   = #sum1415 - #totded
let #sum2627 = #tottds + #tdssur
let #val29   = #inctaxpbl - #tdsval
let #col = 5
add 1 to #sl_no
print #sl_no  (+2,#col,6) edit 9999
let #line_sav = #current-line
add 6 to #col
print  $emppan   (,#col,12)
add 12 to #col
print  $empname  (,#col,28)
add 28 to #col
do Print-Employee-Address
add 30 to #col
print $empclascd (,#col,15)
add 15 to #col
Do Format-DateTime($hrdt, $out, {DEFMDY}, '','')
print $hrdt      (,#col,15) edit 'DD-MM-YYYY'
add 15 to #col
print $termntdt  (,#col,15) edit 'DD-MM-YYYY'
add 15 to #col
print  #totsal   (,#col,15)
add 15 to #col
print  #hra      (,#col,15)
GRAPHIC (,81,74) HORZ-LINE
add 2 to #line
Let #col = 81
print  #perq      (+2,#col,15)
add 15 to #col
print  #perqex    (,#col,15)
add 15 to #col
print #sum8910    (,#col,15)
add 15 to #col
print  #sec16ded  (,#col,15)
add 15 to #col
print #dif1213    (,#col,15)
GRAPHIC (,81,74)   HORZ-LINE
add 2 to #line
Let #col = 81
print  #incnotsal (+2,#col,15)
add 15 to #col
print #sum1415    (,#col,15)
add 15 to #col
print  #sec80don  (,#col,15)
add 15 to #col
print  #sec80rent (,#col,15)
add 15 to #col
print #val19      (,#col,15)
GRAPHIC (,81,74)  HORZ-LINE
add 2 to #line
Let #col = 81
print #totded     (+2,#col,15)
add 15 to #col
print #val21      (,#col,15)
add 15 to #col
print #totinctax  (,#col,15)
add 15 to #col
print  #taxreb    (,#col,15)
add 15 to #col
print  #sec89rel  (,#col,15)
add 15 to #col
GRAPHIC (,81,74)  HORZ-LINE
add 2 to #line
Let #col = 81
print #inctaxpbl  (+2,#col,15)
add 15 to #col
print  #tottds    (,#col,15)
add 15 to #col
print  #tdssur    (,#col,15)
add 15 to #col

let #t1 = round(#tdsval,2)
let #t2 = mod(#t1,10)

if #t2 >= 5
   let #t3 = (#t1 - #t2) + 10
else
   let #t3 = (#t1 - #t2)
end-if
if #t3 > 0
print #t3    (,#col,15) 
else
let #t3=0
print #t3    (,#col,15) 
end-if

add 15 to #col
print #val29      (,#col,15)
add 15 to #col
GRAPHIC (,81,74)  HORZ-LINE
add 2 to #line
Let #col = 81
!print '30'        (+2,#col,15)
GRAPHIC (,5,150) HORZ-LINE
add 2 to #line
let #totsal = 0
let #hra = 0
let #perq = 0
let #perqex = 0
let #sec16ded = 0
let #incnotsal = 0
let #sec80don = 0
let #sec80rent = 0
let #taxreb = 0
let #sec89rel = 0
let #tottds = 0
let #tdssur = 0

End-Procedure  !print_Report_flds
!  ************************************************************************************!
!  Purpose : This procedure gets the run control values from the run control record    !
!  ************************************************************************************!
Begin-Procedure Get_Run_Cntrl_Dtls
Begin-Select
RNCT.GPIN_REPORT_ID
RNCT.ESTABID
RNCT.CAL_PRD_ID
RNCT.BGN_DT
RNCT.END_DT
FROM PS_GPIN_PR_RC RNCT
WHERE  RNCT.OPRID = $prcs_oprid
AND RNCT.RUN_CNTL_ID = $prcs_run_cntl_id
End-Select
End-Procedure    ! Get_Run_Cntrl_Dtls

!  ************************************************************************************ !
!  Purpose : Since Form 24 prints the annual payroll data for all employees by PAN/TAN  !
!            combination,  we join the GPIN_PR_TMP. GP_GENRPT_BREAK1 field which has    !
!            the ESTABID value  to ESTAB_TBL_GPIN.ESTABID to fetch the GPIN_IT_PAN_NBR  !
!            and GPIN_IT_TAN_NBR and order it by same. It calls the  Do Get-Rpt-Fields  !
!            procedure to print details of each report field. This procedure will be    !
!            modified to hard code the fields at appropriate columns.                   !
!************************************************************************************ !
Begin-Procedure Get-Estab-Info

Let #line = 16
let #sl_no = 0
Let #col = 5
Let $prevpan = ''
Let $prevtan = ''
let $sav_emplid = ''
LET $empclascd = ''
Begin-Select
C.GPIN_IT_PAN_NBR
C.GPIN_IT_TAN_NBR
A.EMPLID
A.CAL_RUN_ID
A.EMPL_RCD
A.GP_PAYGROUP
A.CAL_ID
A.RSLT_SEG_NUM
A.RSLT_VER_NUM
A.RSLT_REV_NUM
A.GP_GENRPT_BREAK1
  
  if $prevpan = '' and  $prevtan = ''
     Move &a.gp_genrpt_break1 to $tmpestab
     let $prevpan = &c.gpin_it_pan_nbr
     let $prevtan = &c.gpin_it_tan_nbr
     do Print_Header
  end-if

  If ($prevpan <> &c.gpin_it_pan_nbr or &c.gpin_it_tan_nbr <> $prevtan)
      do Get_Emp_TanPan_Info
      do Get-Rpt-Fields
      do print_Report_flds

     do Get_Remittance_Det
     Move &a.gp_genrpt_break1 to $tmpestab
     NEW-PAGE
     let $prevpan = &c.gpin_it_pan_nbr
     let $prevtan = &c.gpin_it_tan_nbr
     do Print_Header
  end-if

  if $sav_emplid = ''
     let $sav_emplid = &a.emplid
  end-if

  if $sav_emplid <> &a.emplid
      do Get_Emp_TanPan_Info
      do Get-Rpt-Fields
      do print_Report_flds
      do initialize-empl-vars
      Move &a.gp_genrpt_break1 to $tmpestab
  end-if

  let $sav_emplid = &A.EMPLID

FROM PS_GPIN_PR_TMP A , PS_ESTAB_TBL_GPIN C
WHERE A.GP_GENRPT_BREAK1 = C.ESTABID
AND A.JOBINSTANCE = #prcs_job_instance
AND C.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
                 WHERE ESTABID = C.ESTABID
                 AND   EFFDT <= &RNCT.END_DT)
ORDER BY C.GPIN_IT_PAN_NBR ,C.GPIN_IT_TAN_NBR ,A.EMPLID
End-Select
  do Get_Remittance_Det

End-Procedure ! Get-Estab-Info

! *************************************************************************************  !
! This prints the detail report field and also the Employee PAN number and Name details  !
! *************************************************************************************  !
Begin-Procedure Get-Rpt-Fields
Begin-Select
MP2.GP_CALC_TS
MP3.GPIN_FLD_NAME
MP3.CALC_RSLT_VAL

   Move &mp3.gpin_fld_name  To  $rptfldname
   Move &mp3.calc_rslt_val To #repval
   let $rptfldname = rtrim($rptfldname,' ')
   let $rptfldname = ltrim($rptfldname,' ')


   Evaluate  $rptfldname
     when = 'F24_TOTAL_SAL'
          ADD #repval to #totsal
          break

     when = 'F24_TDS'
          move #repval to #tdsval
          break

     when = 'F24_HRA_OTHALL'
          move #repval to #hra
          break

      when = 'F24_PERQAMT'
          move #repval to #perq
          break

      when = 'F24_PERQAMT_EXM'
           move #repval to #perqex
           break

      when = 'F24_SEC16_DEDN'
           move #repval to #sec16ded
           break

      when = 'F24_INC_NOT_SAL'
           move #repval to #incnotsal
           break

      when = 'F24_S80G_DON'
           move #repval to #sec80don
           break

      when = 'F24_S80GG_RENT'
           move #repval to #sec80rent
           break

      when = 'F24_TOT_TAX_REB'
           move #repval to #taxreb
           break

      when = 'F24_SEC89_RELIEF'
           move #repval to #sec89rel
           break

      when = 'F24_TOTAL_TDS'
           move #repval to #tottds
           break

      when = 'F24_TDS_SURCH'
           move #repval to #tdssur
           break
      when = 'F24_TOT_DEDTN'
           move #repval to #totded
           break
      when = 'F24_TOT_INCTAX'
            move #repval to #totinctax
            break
      when = 'F24_INCTAX_PYBL'
            move #repval to #inctaxpbl
            break
   End-Evaluate


FROM PS_GPIN_PR_TMP3 MP3 ,PS_GPIN_PR_TMP MP, PS_GP_PYE_SEG_STAT MP2
WHERE  MP3.JOBINSTANCE = MP.JOBINSTANCE
AND MP3.EMPLID = MP.EMPLID
AND MP.EMPLID = MP2.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP.CAL_RUN_ID = MP2.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = MP2.EMPL_RCD
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP.GP_PAYGROUP = MP2.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP.CAL_ID = MP2.CAL_ID
AND MP3.ORIG_CAL_RUN_ID = MP.ORIG_CAL_RUN_ID
AND MP.ORIG_CAL_RUN_ID = MP2.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP.RSLT_SEG_NUM  = MP2.RSLT_SEG_NUM
AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
AND MP.RSLT_VER_NUM  = MP2.RSLT_VER_NUM
AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
AND MP.RSLT_REV_NUM  = MP2.RSLT_REV_NUM
AND MP3.EMPLID = $sav_emplid
AND MP.PRD_END_DT IN (Select PRD_END_DT FROM PS_GPIN_PR_TMP
                      WHERE JOBINSTANCE = #prcs_job_instance
                      AND GP_GENRPT_BREAK1=$tmpestab      !added to get transfer employees
                      AND EMPLID = $sav_emplid)
AND MP3.JOBINSTANCE = #prcs_job_instance
ORDER BY MP3.GPIN_FLD_NAME, MP2.GP_CALC_TS ASC
End-Select
End-Procedure !Get-Rpt-Fields

!************************************************************************************
Begin-Procedure  Get-Employer-Address

Let $addrflg =''
Begin-Select

ESTBL.GPIN_IT_PAN_NBR
   Move &estbl.gpin_it_pan_nbr To $estpan
ESTBL.GPIN_IT_TAN_NBR
   Move &estbl.gpin_it_tan_nbr To $esttan
ESTBL.ESTABID
   Move &estbl.estabid To $estab
ESTBL.EMPLID
   Move &estbl.emplid To $emplrid
ESTBL.GPIN_CLS_EMPL_CODE
   Move &estbl.gpin_cls_empl_code To $emplclscd
EST.DESCR
   Move &est.descr To $est_company
EST.COUNTRY
   move &EST.country to $est_country
EST.ADDRESS1
   move &EST.address1 to $est_address1
EST.ADDRESS2
   if rtrim(&EST.address2,' ')<>''
      move &EST.address2 to $est_address2
   else
      move '' to $est_address2
   end-if
EST.ADDRESS3
   if rtrim(&EST.address3,' ')<>''
      move &EST.address3 to $est_address3
   else
      move '' to $est_address3
   end-if
EST.ADDRESS4
   if rtrim(&EST.address4,' ')<>''
      move &EST.address4 to $est_address4
   else
      move '' to $est_address4
   end-if
EST.CITY
   if rtrim(&EST.city,' ')<>''
         move &EST.city to $est_city
   else
         move '' to $est_city
   end-if
EST.NUM1
   if rtrim(&EST.num1,' ')<>''
      move &EST.num1 to $est_num1
   else
      move '' to $est_num1
   end-if
EST.NUM2
   if rtrim(&EST.num2,' ')<>''
      move &EST.num2 to $est_num2
   else
      move '' to $est_num2
   end-if
EST.HOUSE_TYPE
   if rtrim(&EST.house_type,' ')<>''
      move &EST.house_type to $est_house_type
   else
      move '' to $est_house_type
   end-if
EST.ADDR_FIELD1
   if rtrim(&EST.addr_field1,' ')<>''
      move &EST.addr_field1 to $est_afield1
   else
      move '' to $est_afield1
   end-if
EST.ADDR_FIELD2
   if rtrim(&EST.addr_field2,' ')<>''
      move &EST.addr_field2 to $est_afield2
   else
      move '' to $est_afield2
   end-if
EST.ADDR_FIELD3
   if rtrim(&EST.addr_field3,' ')<>''
      move &EST.addr_field3 to $est_afield3
   else
      move '' to $est_afield3
   end-if
EST.POSTAL
   if rtrim(&est.postal,' ')<>''
         move &est.postal to $est_postal
      else
         move '' to $est_postal
   end-if


FROM PS_ESTAB_TBL EST , PS_ESTAB_TBL_GPIN ESTBL
WHERE ESTBL.ESTABID = $tmpestab
AND EST.ESTABID = ESTBL.ESTABID
AND EST.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
                  WHERE ESTABID = EST.ESTABID
                  AND   EFFDT <= &RNCT.END_DT)
AND ESTBL.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
                  WHERE ESTABID = ESTBL.ESTABID
                  AND   EFFDT <= &RNCT.END_DT)
End-Select

Begin-Select
EMPLRNM.NAME
  Move &emplrnm.name To $emplrname
FROM PS_NAMES EMPLRNM
WHERE EMPLRNM.EMPLID = $emplrid
AND EMPLRNM.NAME_TYPE ='PRI'
AND EMPLRNM.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
                       WHERE EMPLID = EMPLRNM.EMPLID
                       AND   NAME_TYPE = EMPLRNM.NAME_TYPE
                       AND   EFFDT <= &RNCT.END_DT)
End-Select

let $addrdt = ''
Begin-Select
ADDR.EFFDT
  Move &addr.effdt To $addrdt
From PS_ADDRESSES ADDR
Where ADDR.EMPLID = $emplrid
AND   ADDR.ADDRESS_TYPE = 'HOME'
and ADDR.EFFDT between &rnct.bgn_dt and &rnct.end_dt
End-Select
  If $addrdt <> ''
         Let $addrflg = 'Yes'
  Else
     Let $addrflg = 'No'
  End-If
End-Procedure   !Get-Employer-Address
!*************************************************************************************   !

Begin-Procedure Get_Emp_TanPan_Info
Begin-Select
PNID.NATIONAL_ID
  Move &pnid.national_id To $emppan
FROM PS_PERS_NID PNID
WHERE PNID.COUNTRY = 'IND'
AND PNID.NATIONAL_ID_TYPE = 'PAN'
AND PNID.EMPLID = $sav_emplid
End-Select

Begin-Select
EMPNM.NAME
JB.HIRE_DT
JB.LAST_HIRE_DT
JB.TERMINATION_DT

  Move &empnm.name To $empname
 If (&jb.hire_dt >= &rnct.bgn_dt)
    Move &jb.hire_dt To $hrdt
 Else
    If (&jb.last_hire_dt >= &rnct.bgn_dt )
       Move &jb.last_hire_dt To $hrdt
    Else
       let $hrdt = &rnct.bgn_dt
    End-If
 End-If

 If (&jb.termination_dt <> '') and (&jb.termination_dt <= &rnct.end_dt )
    Move &jb.termination_dt To $termntdt
 Else
    let $termntdt = &rnct.end_dt
 End-If

FROM PS_NAMES  EMPNM ,PS_JOB JB
WHERE JB.EMPLID = EMPNM.EMPLID
AND EMPNM.EMPLID = $sav_emplid
AND EMPNM.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
                    WHERE EMPLID = $sav_emplid
                    AND EFFDT <= &rnct.end_dt)
End-Select


Begin-Select
ECLSCD.GPIN_CLASS_CODE

   Move &ECLSCD.GPIN_CLASS_CODE To $empclascd

FROM PS_GPIN_TDS_GEN ECLSCD
WHERE ECLSCD.EMPLID = $sav_emplid
AND   ECLSCD.EFFDT = (SELECT MAX(EFFDT) FROM PS_GPIN_TDS_GEN
                        WHERE EMPLID = ECLSCD.EMPLID
                        AND   EFFDT <= &RNCT.END_DT)
End-Select

!****************************** Reset all the Address Variables*******************************

let $EMP_address1 = ''
let $EMP_address2 = ''
let $EMP_address3 = ''
let $EMP_address4 = ''
let $EMP_city     = ''
let $EMP_state    = ''
let $EMP_country  = ''
LET $EPOSTAL      = ''


Begin-Select
EMP.COUNTRY
EMP.ADDRESS1
EMP.ADDRESS2
EMP.ADDRESS3
EMP.ADDRESS4
EMP.CITY
EMP.NUM1
EMP.NUM2
EMP.HOUSE_TYPE
EMP.ADDR_FIELD1
EMP.ADDR_FIELD2
EMP.ADDR_FIELD3
EMP.POSTAL

   move &EMP.country to $EMP_country
   move &EMP.address1 to $EMP_address1

   if rtrim(&EMP.address2,' ')<>''
      move &EMP.address2 to $EMP_address2
   else
      move '' to $EMP_address2
   end-if

   if rtrim(&EMP.address3,' ')<>''
      move &EMP.address3 to $EMP_address3
   else
      move '' to $EMP_address3
   end-if

   if rtrim(&EMP.address4,' ')<>''
      move &EMP.address4 to $EMP_address4
   else
      move '' to $EMP_address4
   end-if

   if rtrim(&EMP.city,' ')<>''
        move &EMP.city to $EMP_city
   else
         move '' to $EMP_city
   end-if

   if rtrim(&EMP.num1,' ')<>''
      move &EMP.num1 to $EMP_num1
   else
      move '' to $EMP_num1
   end-if

   if rtrim(&EMP.num2,' ')<>''
      move &EMP.num2 to $EMP_num2
   else
      move '' to $EMP_num2
   end-if

   if rtrim(&EMP.house_type,' ')<>''
      move &EMP.house_type to $EMP_house_type
   else
      move '' to $EMP_house_type
   end-if


   if rtrim(&EMP.addr_field1,' ')<>''
      move &EMP.addr_field1 to $EMP_afield1
   else
      move '' to $EMP_afield1
   end-if

   if rtrim(&EMP.addr_field2,' ')<>''
      move &EMP.addr_field2 to $EMP_afield2
   else
      move '' to $EMP_afield2
   end-if


   if rtrim(&EMP.addr_field3,' ')<>''
      move &EMP.addr_field3 to $EMP_afield3
   else
      move '' to $EMP_afield3
   end-if

   if rtrim(&EMP.POSTAL,' ')<>''
         move &EMP.POSTAL to $EPOSTAL
      else
         move '' to $EPOSTAL
   end-if

From PS_PERSON_ADDRESS EMP
Where EMP.EMPLID = $sav_emplid
AND EMP.ADDRESS_TYPE = 'HOME'
AND EMP.EFF_STATUS = 'A'
End-Select
End-Procedure ! Get_Emp_TanPan_Info

!**************************************************************************************   !
Begin-Procedure Get_Remittance_Det
new-page
 Let #line = 5
 let #coll = 5
 GRAPHIC (5,5,150) HORZ-LINE
 print 'Details of Remittances to the Account of the Central Government:' (+1,7,) Bold Underline
 print 'TAN No:' (,93,) Bold
 print $esttan   (,+1,)
 print 'PAN No:' (+1,93,) Bold
 print $estpan   (,+1,)
 GRAPHIC (+1,#coll,150) HORZ-LINE
 print 'Sl.no'  (+2,#coll,)
 Add 9 to #coll
 print 'Amount Deducted' (,#coll,)
 Add 30 to #coll
 print 'Month of transfer of Voucher'  (,#coll,) wrap 30 2
 add 30 to #coll
 print 'Date of Payment' (,#coll,)
 add 36 to #coll
 print 'Name and Address of the bank ' (,#coll,)
 add 50 to #coll
 GRAPHIC (+1,5,150) HORZ-LINE
 let #slno = 0
 let $month =''
 Let #line = 13
 Let $esttan = ltrim(rtrim($esttan,' '),' ')
 Let $estpan = ltrim(rtrim($estpan,' '),' ')
 
begin-select
A.CAL_PRD_ID
A.GPIN_VCHR_DT
A.GPIN_VCHR_AMT
A.BANK_CD
A.BRANCH_EC_CD
BRANCH.DESCR
BK.BANK_NM
D.PRD_BGN_DT
D.PRD_END_DT

   Move &A.cal_prd_id To $vchrprd
   Move &A.gpin_vchr_dt To $vchrdt
   Move &A.gpin_vchr_amt To #vchramt
   Move &A.bank_cd To $bnkcd
   Move &A.branch_ec_cd To $brchcd
   move &bk.bank_nm to $BNK_company
   Do Get_Month
   Do Get_Bank_Address
   DO Print-Remittance-Det

FROM  PS_GPIN_YE_F24_F16 A,                       
      PS_BANK_BRANCH_TBL BRANCH,                  
      PS_GP_CAL_PRD D,                            
      PS_BANK_EC_TBL BK,                          
      PS_GPIN_PANTAN_VCR PT                       
WHERE BRANCH.COUNTRY_CD = 'IND'                   
AND BRANCH.BANK_CD = A.BANK_CD                    
AND A.BANK_CD = BK.BANK_CD                        
AND BRANCH.BRANCH_EC_CD = A.BRANCH_EC_CD          
                                                  
AND D.PRD_BGN_DT >= &RNCT.BGN_DT
AND D.PRD_END_DT <= &RNCT.END_DT
AND A.GPIN_IT_PAN_NBR = &estbl.gpin_it_pan_nbr
AND A.GPIN_IT_TAN_NBR = &estbl.gpin_it_tan_nbr
AND A.GPIN_IT_PAN_NBR = PT.GPIN_IT_PAN_NBR        
AND A.GPIN_IT_TAN_NBR = PT.GPIN_IT_TAN_NBR        
AND A.GPIN_PERIOD_ID = PT.GPIN_PERIOD_ID          
AND A.CAL_PRD_ID = D.CAL_PRD_ID                   
ORDER BY D.PRD_END_DT                             
end-select
 let #col = 5

End-Procedure ! Get_Remittance_Det
!********************************************************************************
Begin-Procedure Get_Bank_Address
Begin-Select
BNK.BANK_NM
   move &bnk.bank_nm To $bnkname
BNK.COUNTRY
   move &BNK.country to $BNK_country
C5.ADDRESS1
   move &C5.address1 to $BNK_address1
C5.ADDRESS2
   if rtrim(&C5.address2,' ')<>''
      move &C5.address2 to $BNK_address2
   else
      move '' to $BNK_address2
   end-if
C5.ADDRESS3
   if rtrim(&C5.address3,' ')<>''
      move &C5.address3 to $BNK_address3
   else
      move '' to $BNK_address3
   end-if
C5.ADDRESS4
   if rtrim(&C5.address4,' ')<>''
      move &C5.address4 to $BNK_address4
   else
      move '' to $BNK_address4
   end-if
C5.CITY
   if rtrim(&C5.city,' ')<>''
         move &C5.city to $BNK_city
   else
         move '' to $BNK_city
   end-if
C5.NUM1
   if rtrim(&C5.num1,' ')<>''
      move &C5.num1 to $BNK_num1
   else
      move '' to $BNK_num1
   end-if
C5.NUM2
   if rtrim(&C5.num2,' ')<>''
      move &C5.num2 to $BNK_num2
   else
      move '' to $BNK_num2
   end-if
C5.HOUSE_TYPE
   if rtrim(&C5.house_type,' ')<>''
      move &C5.house_type to $BNK_house_type
   else
      move '' to $BNK_house_type
   end-if
C5.ADDR_FIELD1
   if rtrim(&C5.addr_field1,' ')<>''
      move &C5.addr_field1 to $BNK_afield1
   else
      move '' to $BNK_afield1
   end-if
C5.ADDR_FIELD2
   if rtrim(&C5.addr_field2,' ')<>''
      move &C5.addr_field2 to $BNK_afield2
   else
      move '' to $BNK_afield2
   end-if
C5.ADDR_FIELD3
   if rtrim(&C5.addr_field3,' ')<>''
      move &C5.addr_field3 to $BNK_afield3
   else
      move '' to $BNK_afield3
   end-if

From PS_BANK_EC_TBL BNK, PS_BANK_BRANCH_TBL C5
Where BNK.COUNTRY_CD = 'IND'
AND BNK.BANK_CD = $bnkcd
AND BNK.BANK_CD = C5.BANK_CD
AND C5.BRANCH_EC_CD = $brchcd
End-Select
End-Procedure !Get_Bank_Address
!*******************************************************************************
Begin-Procedure Get_Month
Begin-Select
CALPRD.PRD_END_DT
  Move &calprd.prd_end_dt To $prdenddt 'mm-dd-yyyy'

    Extract $month from $prdenddt 0  2

    Evaluate $month
      When = '01'
              Let $vchrmonth = 'Jan'
                  break
          When = '02'
              Let $vchrmonth = 'Feb'
                  break
          When ='03'
              Let $vchrmonth = 'March'
                  break
       When = '04'
              Let $vchrmonth = 'April'
                  break
           When = '05'
              Let $vchrmonth = 'May'
                  break
           When = '06'
              Let $vchrmonth = 'June'
                  break
       When = '07'
              Let $vchrmonth = 'July'
                  break
           When = '08'
              Let $vchrmonth = 'Aug'
                  break
           When = '09'
              Let $vchrmonth = 'Sept'
                  break
           When = '10'
              Let $vchrmonth = 'Oct'
                  break
           When = '11'
              Let $vchrmonth = 'Nov'
                  break
       When = '12'
              Let $vchrmonth = 'Dec'
                  break
    End-Evaluate
From PS_GP_CAL_PRD CALPRD
Where CALPRD.CAL_PRD_ID = $vchrprd
End-Select
End-Procedure !Get-Month
!*******************************************************************************
Begin-Procedure Print-Remittance-Det

 Let #col = 5
 let #line_sav = #current-line
 add 1 to #slno
 print  #slno       (+1,#col,) edit 9999
 Add 10 to #col
 print  #vchramt    (,#col,)
 Add 30 to #col
 print  $vchrmonth  (,#col,)
 Add 36 to #col
 print   $vchrdt    (,#col,) edit 'MM-DD-YYYY'
 Add 40 to #col
 Do Print_Bank_Address
 let #line = #line+1
 Let #vchramt = 0
 Let $vchrmonth =  ' '
 Let $vchrdt = ' '


End-Procedure !Print-Remittance-Det
!**************************************************************************************

Begin-Procedure Print-Estab-Address

Let #line = 6
Let #pos = 42
     if $est_company <> ''
       print $est_company         (, #pos, 30)
       add 1 to #line
    end-if

    if $EST_ADDRESS1 <> ''
       print $EST_ADDRESS1        (+1, #pos, 30)
      add 1 to #line
    end-if

    if $EST_ADDRESS2<> ''
      print $EST_ADDRESS2         (+1, #pos, 30)
      add 1 to #line
    end-if

    if $EST_ADDRESS3<> ''
       print $EST_ADDRESS3        (+1, #pos, 30)
       add 1 to #line
    end-if

    if $EST_ADDRESS4 <> ''
       print $EST_ADDRESS4        (+1, #pos, 30)
       add 1 to #line
    end-if

    let $est_city = rtrim(ltrim($est_city,' '),' ') ||' - '|| $est_postal

    if $EST_CITY <> ''
       print $EST_CITY            (+1, #pos, 45)
       add 1 to #line
    end-if

    if $EST_STATE <> ''
       print $EST_STATE           (+1, #pos, 30)
      add 1 to #line
    end-if

    if $EST_COUNTRY <> ''
       print $EST_COUNTRY         (+1, #pos, 30)
    end-if



End-Procedure   !Print-Estab-Address
!**********************************************************************
Begin-Procedure Print-Employee-Address
!Let #ln = #line
let $empl_addr = ''
Let #pos = 52
     if rtrim(ltrim($EMP_company,' '),' ') <> ''
       !print $EMP_company         (#line_sav, #pos, 30)
       let $empl_addr = rtrim(ltrim($EMP_company,' '),' ')
       add 1 to #ln
    end-if

    if rtrim(ltrim($EMP_ADDRESS1,' '),' ') <> ''
       !print $EMP_ADDRESS1        (+1, #pos, 30)
       if $empl_addr = ''
          let $empl_addr = rtrim(ltrim($EMP_ADDRESS1,' '),' ')
       else
          let $empl_addr = $empl_addr || ', ' || rtrim(ltrim($EMP_ADDRESS1,' '),' ')
       end-if
      add 1 to #ln
    end-if

    if rtrim(ltrim($EMP_ADDRESS2,' '),' ') <> ''
      !print $EMP_ADDRESS2         (+1, #pos, 30)
      let $empl_addr = $empl_addr || ', ' || rtrim(ltrim($EMP_ADDRESS2,' '),' ')
      add 1 to #ln
    end-if

    if rtrim(ltrim($EMP_ADDRESS3,' '),' ') <> ''
       !print $EMP_ADDRESS3        (+1, #pos, 30)
       let $empl_addr = $empl_addr || ', ' || rtrim(ltrim($EMP_ADDRESS3,' '),' ')
       add 1 to #ln
    end-if

    if rtrim(ltrim($EMP_ADDRESS4,' '),' ') <> ''
       !print $EMP_ADDRESS4        (+1, #pos, 30)
       let $empl_addr = $empl_addr || ', ' || rtrim(ltrim($EMP_ADDRESS4,' '),' ')
       add 1 to #ln
    end-if


   if rtrim(ltrim($EMP_CITY,' '),' ') <> ''
       !print $EMP_CITY            (+1, #pos, 30)
       let $empl_addr = $empl_addr || ', ' || rtrim(ltrim($EMP_CITY,' '),' ')|| '-'||$epostal
       add 1 to #ln
    end-if

    if rtrim(ltrim($EMP_STATE,' '),' ') <> ''
       !print $EMP_STATE           (+1, #pos, 30)
       let $empl_addr = $empl_addr || ', ' || rtrim(ltrim($EMP_STATE,' '),' ')
      add 1 to #ln
    end-if

    if rtrim(ltrim($EMP_COUNTRY,' '),' ') <> ''
       !print $EMP_COUNTRY         (+1, #pos, 30)
       let $empl_addr = $empl_addr || ', ' || rtrim(ltrim($EMP_COUNTRY,' '),' ')
    end-if
    print $empl_addr    (,#pos,30) wrap 30 8 keep-top on=','
End-Procedure !Print-Employee-Address
!******************************************************************
Begin-Procedure Print_Bank_Address
Let #ln = #line
Let #pos = #col
     if $BNK_company <> ''
       print $BNK_company         (, #pos, 30)
       add 1 to #ln
    end-if

    if $BNK_ADDRESS1 <> ''
       print $BNK_ADDRESS1        (+1, #pos, 30)
      add 1 to #ln
    end-if

    if $BNK_ADDRESS2<> ''
      print $BNK_ADDRESS2         (+1, #pos, 30)
      add 1 to #ln
    end-if

    if $BNK_ADDRESS3<> ''
       print $BNK_ADDRESS3        (+1, #pos, 30)
       add 1 to #ln
    end-if

    if $BNK_ADDRESS4 <> ''
       print $BNK_ADDRESS4        (+1, #pos, 30)
       add 1 to #ln
    end-if


   if $BNK_CITY <> ''
       print $BNK_CITY            (+1, #pos, 30)
       add 1 to #ln
    end-if

    if $BNK_STATE <> ''
       print $BNK_STATE           (+1, #pos, 30)
      add 1 to #ln
    end-if

    if $BNK_COUNTRY <> ''
       print $BNK_COUNTRY         (+1, #pos, 30)
    end-if

  GRAPHIC (+1,5,150) HORZ-LINE
  
  IF #CURRENT-LINE >= 48
     NEW-PAGE
     GRAPHIC (+1,5,150) HORZ-LINE
  END-IF


End-Procedure !Print_Bank_Address
!***********************************************************************
! Function:    Get_Translat_Info                                       *
!                                                                      *
! Description: Gets the strings printed in this report                 *
!                                                                      *
!***********************************************************************

begin-procedure Get_Translat_Info

   do Add_Report_Translation($ReportID, $rpt_language_cd)

   do Get_Field_Information('GPINYE01','TANPAN',$xv_TANPAN,
     #xfw_TANPAN)
   do Get_Field_Information('GPINYE01','EMPLRCD',$xv_EMPLRCD ,#xfw_EMPLRCD)
   do Get_Field_Information('GPINYE01','EMPLRNAME',$xv_EMPLRNAME,
     #xfw_EMPLRNAME)
   do Get_Field_Information('GPINYE01','SALPAYR',$xv_SALPAYR,
     #xfw_SALPAYR)
   do Get_Field_Information('GPINYE01','ADDRCHNG',$xv_ADDRCHNG,
     #xfw_ADDRCHNG)
   do Get_Field_Information('GPINYE01','CONTD',$xv_CONTD,
     #xfw_CONTD)
   do Get_Field_Information('GPINYE01','01',$xv_01,
     #xfw_01)
     do Get_Field_Information('GPINYE01','02',$xv_02,
     #xfw_02)
   do Get_Field_Information('GPINYE01','03',$xv_03,
     #xfw_03)
   do Get_Field_Information('GPINYE01','04',$xv_04,
     #xfw_04)
   do Get_Field_Information('GPINYE01','05',$xv_05,
     #xfw_05)
   do Get_Field_Information('GPINYE01','06',$xv_06,
     #xfw_06)
   do Get_Field_Information('GPINYE01','07',$xv_07,
     #xfw_07)
   do Get_Field_Information('GPINYE01','08',$xv_08,
     #xfw_08)
   do Get_Field_Information('GPINYE01','09',$xv_09,
     #xfw_09)
   do Get_Field_Information('GPINYE01','10',$xv_10,
     #xfw_10)
   do Get_Field_Information('GPINYE01','11',$xv_11,
     #xfw_11)
     do Get_Field_Information('GPINYE01','12',$xv_12,
     #xfw_12)
   do Get_Field_Information('GPINYE01','13',$xv_13,
     #xfw_13)
   do Get_Field_Information('GPINYE01','14',$xv_14,
     #xfw_14)
   do Get_Field_Information('GPINYE01','15',$xv_15,
     #xfw_15)
   do Get_Field_Information('GPINYE01','16',$xv_16,
     #xfw_16)
   do Get_Field_Information('GPINYE01','17',$xv_17,
     #xfw_17)
   do Get_Field_Information('GPINYE01','18',$xv_18,
     #xfw_18)
   do Get_Field_Information('GPINYE01','19',$xv_19,
     #xfw_19)
   do Get_Field_Information('GPINYE01','20',$xv_20,
     #xfw_20)
   do Get_Field_Information('GPINYE01','21',$xv_21,
     #xfw_21)
     do Get_Field_Information('GPINYE01','22',$xv_22,
     #xfw_22)
   do Get_Field_Information('GPINYE01','23',$xv_23,
     #xfw_23)
   do Get_Field_Information('GPINYE01','24',$xv_24,
     #xfw_24)
   do Get_Field_Information('GPINYE01','25',$xv_25,
     #xfw_25)
   do Get_Field_Information('GPINYE01','26',$xv_26,
     #xfw_26)
   do Get_Field_Information('GPINYE01','27',$xv_27,
     #xfw_27)
   do Get_Field_Information('GPINYE01','28',$xv_28,
     #xfw_28)
   do Get_Field_Information('GPINYE01','29',$xv_29,
     #xfw_29)
   do Get_Field_Information('GPINYE01','30',$xv_30,
     #xfw_30)
end-procedure !Get_Translat_Info

!*************************************************************************************
!    Initialize Employee Variables
!*************************************************************************************
begin-procedure initialize-empl-vars

          let #repval = 0
          move #repval to #totsal
          move #repval to #hra
          move #repval to #perq
          move #repval to #perqex
          move #repval to #sec16ded
          move #repval to #incnotsal
          move #repval to #sec80don
          move #repval to #sec80rent
          move #repval to #taxreb
          move #repval to #sec89rel
          move #repval to #tottds
          move #repval to #tdssur
          move #repval to #totded
          move #repval to #totinctax
          move #repval to #inctaxpbl
          move #repval to #tdsval



end-procedure !initialize-empl-vars


!***********************************************************************
#include 'stdapi.sqc'    !Routines to update run status
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#include 'address.sqc'   !global address formating
#include 'readxlat.sqc'  ! Get shortname or longname from xlattable
!***********************************************************************