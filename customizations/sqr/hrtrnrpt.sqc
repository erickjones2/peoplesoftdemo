!*****************************************************************
!  hrtrnrpt : user procedures for active and global scenario.    *
!             for TRN010 and TRN011                              *
!*****************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:13:45:55                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

!***********************************************************************
! Print-Department                                                     *
!***********************************************************************

begin-procedure Print-Department
begin-SELECT
DESCR (,+2,71)
FROM PS_DEPT_TBL
WHERE DEPTID = &A.DEPTID
AND EFFDT = (SELECT MAX(X.EFFDT) FROM PS_DEPT_TBL X
WHERE X.DEPTID = &A.DEPTID
AND X.EFFDT <= &BaseEffDt
AND X.SETID = $BudgetBusUnit)
AND SETID = $BudgetBusUnit
end-SELECT
end-procedure

!***********************************************************************
! Compute-Cost                                                         *
!***********************************************************************

begin-procedure Compute-Cost
let #ComputedCost = 0
begin-SELECT
A.DEMAND_ID
A.DEMAND_APPROVED
  do Compute-Demand-Cost
FROM PS_TRN_SIMULATION A
WHERE A.BUDGET_PERIOD = $BudgetPeriod
AND A.DEPTID = &A.DEPTID
AND A.SCENARIO = &A.SCENARIO
GROUP BY A.DEMAND_ID, A.DEMAND_APPROVED
end-SELECT
if #BudgetAmt = 0
  print '    --'                  (, 77,0)
else
  let #Ratio = #ComputedCost / #BudgetAmt * 100
  if  #Ratio > 999.99
    print '999.99'                (, 77,0)
  else
    print #Ratio                  (, 77,0) edit 999.99
  end-if
end-if
print '%'                         (, +1,10)
print #ComputedCost               (, 88,33) edit 999999999999999.999
let #TotalBudget = #TotalBudget + #BudgetAmt
let #TotalCost = #TotalCost + #ComputedCost
end-procedure

!***********************************************************************
! Compute-Demand-Cost                                                  *
!***********************************************************************

begin-procedure Compute-Demand-Cost
begin-SELECT
VARIABLE_COST
FIXED_COST
  let #Cost = &VARIABLE_COST * &A.DEMAND_APPROVED + &FIXED_COST
  if $ReportCurr <> $BaseCurrency
    do ConvertCurrency(#Cost,$ReportCurr,$BaseCurrency,$ReportRtType,$BaseEffDt,#Cost,$MsgType)
  end-if
  let #ComputedCost = #ComputedCost + #Cost
FROM PS_TRN_SML_SUM_VW
WHERE BUDGET_PERIOD = $BudgetPeriod
AND DEMAND_ID = &A.DEMAND_ID
end-SELECT
end-procedure

!***********************************************************************
! Get-Department-Budget                                                *
!***********************************************************************

begin-procedure Get-Department-Budget
let #BudgetAmt = 0.00
begin-SELECT
BUDGET_AMT
CURRENCY_CD
FROM PS_TRN_BUDGET
WHERE BUDGET_PERIOD = $BudgetPeriod
AND DEPTID = &A.DEPTID
end-SELECT
let #BudgetAmt = &BUDGET_AMT
do Print-Department-Budget(&BUDGET_AMT, &CURRENCY_CD, $BaseCurrency, &BaseEffDt, $ReportRtType, #BudgetAmt)
end-procedure

!***********************************************************************
! Print-Department-Budget                                              *
!***********************************************************************

begin-procedure Print-Department-Budget(#BudgetAmt, $CurrencyCd, $BaseCurrency, $BaseEffdt, $ReportRtType, :#BudgetAmt)
if #BudgetAmt = 0
  print #BudgetAmt (, 56) edit 999999999999999.999
else
  if $CurrencyCd = $BaseCurrency
    print #BudgetAmt (, 56) edit 999999999999999.999
  else
    do ConvertCurrency(#BudgetAmt,$CurrencyCd,$BaseCurrency,$ReportRtType,$BaseEffDt,#BudgetAmt,$MsgType)
    print #BudgetAmt (, 56) edit 999999999999999.999
  end-if
end-if
end-procedure

!***********************************************************************
! Print-Tail                                                           *
!***********************************************************************

begin-procedure Print-Tail
print '-'                (+2, 1, 108) fill
if #HeaderType = 1
  print #TotalApproved     (+1, 48) edit 999999
  print #TotalBudget       (, 56,33) edit 999999999999999.999
  print #TotalCost         (, 88,33) edit 999999999999999.999
  if #TotalBudget = 0
    print '    --'                  (, 77,0)
  else
    let #Ratio = #TotalCost / #TotalBudget * 100
    if  #Ratio > 999.99
      print '999.99'                (, 77,0)
    else
      print #Ratio                  (, 77,0) edit 999.99
    end-if
  end-if
  print '%'                           (, +1,)
else
  print #TotalApproved              (+1, 50) edit 999999
  print #TotalDemand                (, 61) edit 999999
end-if
end-procedure

!***********************************************************************
! Print-Demand-Type                                                    *
!***********************************************************************

begin-procedure Print-Demand-Type
if &C.EE_DEMAND_SW = 'Y'
  print 'I' (+1, 1)
else
  print 'C' (+1, 1)
end-if
end-procedure


