!***********************************************************************
! GPJPIH02 : Monthly Inhabitant Tax Report                             *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:46:59                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!***********************************************************************
! This report will show Inhabitant Tax totals for each municipality    *
! for each pay period.                                                 *
!***********************************************************************

Begin-setup

#define  REPORTID  'GPJPIH02'
#include 'setenv.sqc'      !Set environment
#include 'ptset02.sqc'     !Init printer and page sizeLandscape

end-setup

begin-Report
    do Init-DateTime
    do Init-Number
    do Get-Current-DateTime
    do Define-Prcs-Vars
    do Init-Report
    do Process-Main
    do Reset
    do Successful-EOJ
end-Report

!***********************************************************************
begin-heading 10

  #Include 'stdhdgtr.sqc'

  print '*'                    (+1, 21, 14) FILL
  print $select_condit_lbl     ( 0, 37, 24)
  print '*'                    ( 0, 59, 96) FILL

  print $salary_payer_lbl      (+1, 23, 14)
  print $Gpjp_tax_estab        ( 0, 38, 15)
  print $object_year_lbl       ( 0, 60, 13)
  print #Rc_year               ( 0, 74,  4)
  print $month_lbl             ( 0, 85,  7)
  print $month                 ( 0, 93,  9)
  print $municipal_code_lbl    ( 0,109, 16)
  print $Pr_Municipal_cd       ( 0,126,  6)

  print '*'                    (+1, 21,142) FILL

  print $salary_payer_num_lbl  (+1, 23, 31)
  print $Gpjp_tax_estab        ( 0, +2, 15)
  print $Salary_payer_name     ( 0, +2, 30)

  print $number_of_lbl         (+1,109, 11)

  print $number_lbl            (+1, 23,  3)
  print $municipality_code_lbl ( 0, 31, 18)
  print $municipality_name_lbl ( 0, 53, 17)
  print $specified_num_lbl     ( 0, 88, 16)
  print $collections_lbl       ( 0,109, 11)
  print $collect_amount_lbl    ( 0,125, 17)
  print '-'                    (+1, 21,142) FILL

end-heading
!*************************************************************************!
! Init-Report
!*************************************************************************!
begin-procedure Init-Report

  move {REPORTID} to $ReportID
  do Get-Run-Control-Parms
  do Get-Run-Cntl-Acq

  Let $Estab = $Gpjp_tax_estab
  Let $EstabType = 'IT'
  do Get-Estab-Name
  let $Salary_payer_name = $EstabName

  do Init_Report_Translation ('GPJPIH02', $curr_language_cd)
  do Append_Report_Translation ('GPJPIH02')
  do Get_Field_Information('GPJPIH02' ,'GPJPIH02_TITLE'    ,$GPJPIH02_Title        ,#DW)
  do Get_Field_Information('GPJPIH02' ,'SELECT_CONDITIONS' ,$select_condit_lbl     ,#DW)
  do Get_Field_Information('GPJPIH02' ,'SALARY_PAYER'      ,$salary_payer_lbl      ,#DW)
  do Get_Field_Information('GPJPIH02' ,'MUNICIPAL_CODE'    ,$municipal_code_lbl    ,#DW)
  do Get_Field_Information('GPJPIH02' ,'OBJECT_YEAR'       ,$object_year_lbl       ,#DW)
  do Get_Field_Information('GPJPIH02' ,'MONTH'             ,$month_lbl             ,#DW)
  do Get_Field_Information('GPJPIH02' ,'SALARY_PAYER_NUM'  ,$salary_payer_num_lbl  ,#DW)
  do Get_Field_Information('GPJPIH02' ,'NUMBER_OF'         ,$number_of_lbl         ,#DW)
  do Get_Field_Information('GPJPIH02' ,'NUMBER'            ,$number_lbl            ,#DW)
  do Get_Field_Information('GPJPIH02' ,'MUNICIPALITY_CODE' ,$municipality_code_lbl ,#DW)
  do Get_Field_Information('GPJPIH02' ,'MUNICIPALITY_NAME' ,$municipality_name_lbl ,#DW)
  do Get_Field_Information('GPJPIH02' ,'SPECIFIED_NUM'     ,$specified_num_lbl     ,#DW)
  do Get_Field_Information('GPJPIH02' ,'COLLECTIONS'       ,$collections_lbl       ,#DW)
  do Get_Field_Information('GPJPIH02' ,'COLLECT_AMOUNT'    ,$collect_amount_lbl    ,#DW)
  do Get_Field_Information('GPJPIH02' ,'SUM_TOTAL'         ,$sum_total_lbl         ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M01_JANUARY'       ,$January               ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M02_FEBRUARY'      ,$February              ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M03_MARCH'         ,$March                 ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M04_APRIL'         ,$April                 ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M05_MAY'           ,$May                   ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M06_JUNE'          ,$June                  ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M07_JULY'          ,$July                  ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M08_AUGUST'        ,$August                ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M09_SEPTEMBER'     ,$September             ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M10_OCTOBER'       ,$October               ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M11_NOVEMBER'      ,$November              ,#DW)
  do Get_Field_Information('GPJPIH02' ,'M12_DECEMBER'      ,$December              ,#DW)

  move $GPJPIH02_Title to $ReportTitle

  Evaluate #Month
    When = 01
      let $Month = $January
      break
    When = 02
      let $Month = $February
      break
    When = 03
      let $Month = $March
      break
    When = 04
      let $Month = $April
      break
    When = 05
      let $Month = $May
      break
    When = 06
      let $Month = $June
      break
    When = 07
      let $Month = $July
      break
    When = 08
      let $Month = $August
      break
    When = 09
      let $Month = $September
      break
    When = 10
      let $Month = $October
      break
    When = 11
      let $Month = $November
      break
    When = 12
      let $Month = $December
      break
    when-other
  end-evaluate

  let #Line_Number            = 1
  let $Print_Municipal_cd     = ''
  let #Municipality_count     = 0
  let #Sub_total_amount       = 0
  let #Sum_total_Municipality = 0
  let #Sum_total_amount       = 0


end-procedure !Init-Report
!*************************************************************************!
! Process-Main
!*************************************************************************!
begin-procedure Process-Main

  if $Municipal_cd = ''
    let $_TableAlias = 'ID1'
    do Security-Param
    do Get_Empl_ID1
  else
    let $_TableAlias = 'ID2'
    do Security-Param
    do Get_Empl_ID2
  end-if

  print $sum_total_lbl          (+2, 53, 21)
  print #Sum_total_Municipality ( 0,113,  7) edit 999,999
  print #Sum_total_amount       ( 0,127, 15) edit 999,999,999,999

end-procedure !Process-Main
!*************************************************************************!
! Get_Empl_ID1
!*************************************************************************!
begin-procedure Get_Empl_ID1
begin-SELECT

ID1.EMPLID
ID1.EMPL_RCD
ID1.GPJP_TAX_ESTAB
IDZ.MUNICIPAL_CD_JPN

  let $Empl_id = rtrim(&ID1.EMPLID,' ')
  LET #Empl_rcd = &ID1.EMPL_RCD
  if $Empl_id <> ''

    do Get_Tax_Amt1

    if ($Municipal_cd <> ''  AND  #Tax_amt <> 0)
      if $Print_Municipal_cd = ''
        let $Print_Municipal_cd = $Municipal_cd
        Let $Munic_code = $Municipal_cd
        do Get-Munic-Descr
        Let $Municipality_Name = $Munic_descr
        do Get_Specified_Number
      else
        if $Print_Municipal_cd != $Municipal_cd
          do Print_Line
          Let $Munic_code = $Municipal_cd
          do Get-Munic-Descr
          Let $Municipality_Name = $Munic_descr
          do Get_Specified_Number
          let $Print_Municipal_cd = $Municipal_cd
          let #Municipality_count = 0
          let #Sub_total_amount   = 0
          Add 1 to #Line_Number
        end-if
      end-if

      Add 1 to #Municipality_count
      Add #Tax_amt to #Sub_total_amount
      Add 1 to #Sum_total_Municipality
      Add #Tax_amt to #Sum_total_amount
    end-if
  end-if

FROM
PS_GPJP_IT_PYE_TAX ID1,
PS_GPJP_IH_PYE_TAX IDZ

WHERE
ID1.EMPLID = IDZ.EMPLID
AND ID1.EMPL_RCD = IDZ.EMPL_RCD
AND ID1.GPJP_TAX_ESTAB = $Gpjp_tax_estab
AND ID1.EFFDT = (SELECT MAX(B.EFFDT)
                 FROM PS_GPJP_IT_PYE_TAX B
                 WHERE ID1.EMPLID=B.EMPLID
                 AND ID1.EMPL_RCD = B.EMPL_RCD
                 AND B.EFFDT < $NextMonth)
AND IDZ.EFFDT = (SELECT MAX(C.EFFDT)
                        FROM PS_GPJP_IH_PYE_TAX C
                        WHERE IDZ.EMPLID=C.EMPLID
                        AND IDZ.EMPL_RCD = C.EMPL_RCD
                        AND C.EFFDT < $NextMonth)
[$SecurityClausewithERN]

ORDER BY ID1.GPJP_TAX_ESTAB,
         IDZ.MUNICIPAL_CD_JPN
end-SELECT

  do Print_Line

end-procedure !Get_Empl_ID1
!*************************************************************************!
! Get_Tax_Amt1
!*************************************************************************!
begin-procedure Get_Tax_Amt1

  let #Tax_amt = 0

begin-SELECT

AMT13.MUNICIPAL_CD_JPN,
AMT13.TAX_AMT,
AMT13.GPJP_TAX_ESTAB,

  let $Municipal_cd = rtrim(&AMT13.MUNICIPAL_CD_JPN,' ')
  let #Tax_amt = &AMT13.TAX_AMT

FROM
PS_GP_CAL_RUN  AMT11,
PS_GP_CALENDAR AMT12,
PS_GPJP_WA_PIN AMT13

WHERE
AMT13.EMPLID = $Empl_id
AND AMT13.EMPL_RCD = #Empl_rcd
AND AMT13.GPJP_TAX_ESTAB = $Gpjp_tax_estab
AND AMT12.CAL_ID = AMT13.CAL_ID
AND AMT12.PYMT_DT >= $Objectdate
AND AMT12.PYMT_DT < $Nextmonth
AND AMT11.CAL_RUN_ID  = AMT13.CAL_RUN_ID
AND AMT12.GP_PAYGROUP = AMT13.GP_PAYGROUP

ORDER BY AMT13.GPJP_TAX_ESTAB,
         AMT13.MUNICIPAL_CD_JPN

end-SELECT
end-procedure !Get_Tax_Amt1
!*************************************************************************!
! Get_Empl_ID2
!*************************************************************************!
begin-procedure Get_Empl_ID2
begin-SELECT

ID2.EMPLID
ID2.EMPL_RCD
ID2.GPJP_TAX_ESTAB
IDX.MUNICIPAL_CD_JPN

  let $Empl_id = rtrim(&ID2.EMPLID,' ')
  LET #Empl_rcd = &ID2.EMPL_RCD

  if $Empl_id <> ''
    do Get_Tax_Amt2
    if #Tax_amt <> 0
      Add 1 to #Municipality_count
      Add #Tax_amt to #Sub_total_amount
    end-if
  end-if

FROM
PS_GPJP_IT_PYE_TAX ID2,
PS_GPJP_IH_PYE_TAX IDX

WHERE
ID2.EMPLID = IDX.EMPLID
AND ID2.EMPL_RCD = IDX.EMPL_RCD
AND ID2.GPJP_TAX_ESTAB = $Gpjp_tax_estab
AND IDX.MUNICIPAL_CD_JPN = $Municipal_cd
AND ID2.EFFDT = ( SELECT MAX(B.EFFDT)
                  FROM PS_GPJP_IT_PYE_TAX B
                  WHERE ID2.EMPLID = B.EMPLID
                  AND ID2.EMPL_RCD = B.EMPL_RCD
                  AND B.EFFDT < $NextMonth)
AND IDX.EFFDT = (SELECT MAX(C.EFFDT)
                        FROM PS_GPJP_IH_PYE_TAX C
                        WHERE IDX.EMPLID=C.EMPLID
                        AND IDX.EMPL_RCD = C.EMPL_RCD
                        AND C.EFFDT < $NextMonth)
[$SecurityClausewithERN]

ORDER BY ID2.GPJP_TAX_ESTAB,
         IDX.MUNICIPAL_CD_JPN
end-SELECT

  let $Print_Municipal_cd     = $Municipal_cd
  let #Sum_total_Municipality = #Municipality_count
  let #Sum_total_amount       = #Sub_total_amount
  Let $Munic_code = $Municipal_cd
  do Get-Munic-Descr
  Let $Municipality_Name = $Munic_descr
  do Get_Specified_Number
  do Print_Line

end-procedure !Get_Empl_ID2
!*************************************************************************!
! Get_Tax_Amt2
!*************************************************************************!
begin-procedure Get_Tax_Amt2

  let #Tax_amt = 0

begin-SELECT

AMT23.TAX_AMT
AMT23.GPJP_TAX_ESTAB
AMT23.MUNICIPAL_CD_JPN

  let #Tax_amt = &AMT23.TAX_AMT

FROM
PS_GP_CAL_RUN  AMT21,
PS_GP_CALENDAR AMT22,
PS_GPJP_WA_PIN AMT23

WHERE
AMT23.EMPLID = $Empl_id
AND AMT23.EMPL_RCD = #Empl_rcd
AND AMT23.GPJP_TAX_ESTAB = $Gpjp_tax_estab
AND AMT23.MUNICIPAL_CD_JPN = $Municipal_cd
AND AMT22.PYMT_DT >= $Objectdate
AND AMT22.PYMT_DT < $Nextmonth
AND AMT22.CAL_ID = AMT23.CAL_ID
AND AMT21.CAL_RUN_ID  = AMT23.CAL_RUN_ID
AND AMT22.GP_PAYGROUP = AMT23.GP_PAYGROUP

ORDER BY AMT23.GPJP_TAX_ESTAB,
         AMT23.MUNICIPAL_CD_JPN

end-SELECT
end-procedure !Get_Tax_Amt2
!*************************************************************************!
! Print_Line
!*************************************************************************!
begin-procedure Print_Line

  print #Line_Number        (+1, 21, 5) edit 99999
  print $Print_Municipal_cd ( 0, 31, 6)
  print $Municipality_Name  ( 0, 53,30)
  print $Specified_Number   ( 0, 88,12)
  print #Municipality_count ( 0,113, 7) edit 999,999
  print #Sub_total_amount   ( 0,127,15) edit 999,999,999,999

end-procedure !Print_Line
!*************************************************************************!
! Get-Run-Cntl-Acq
!*************************************************************************!
begin-procedure Get-Run-Cntl-Acq

  let $Gpjp_tax_estab  = ''
  let #Object_Year     = 0
  let #Month           = 0
  let $Municipal_cd    = ''
  let $Pr_Municipal_cd = ''

begin-SELECT

RN.GPJP_TAX_ESTAB
RN.DATE_YEAR_VAL,
RN.MONTHCD,
RN.MUNICIPAL_CD_JPN

  let $Gpjp_tax_estab  = rtrim(&RN.GPJP_TAX_ESTAB,' ')
  let #Rc_year         = &RN.DATE_YEAR_VAL
  let #Month           = to_number( rtrim(&RN.MONTHCD,' ') )

  do Calc-Date

  let $Municipal_cd    = rtrim(&RN.MUNICIPAL_CD_JPN,' ')
  let $Pr_Municipal_cd = $Municipal_cd

FROM
PS_GPJP_RC_IH_MNTH RN

WHERE
RN.OPRID = $prcs_oprid
AND RN.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT
end-procedure !Get-Run-Cntl-Acq

!*************************************************************************!
! Get_Specified_Number
!*************************************************************************!
begin-procedure Get_Specified_Number
begin-Select

M.GPJP_IH_SPEC_CLC

  let $Specified_Number = rtrim(&M.GPJP_IH_SPEC_CLC,' ')

FROM
PS_GPJP_IH_MUNIC2 M

WHERE
M.MUNICIPAL_CD_JPN = $Municipal_cd
AND M.GPJP_TAX_ESTAB = $Gpjp_tax_estab
AND M.EFFDT = ( SELECT MAX(Z.EFFDT)
                FROM PS_GPJP_IH_MUNIC2 Z
                WHERE M.MUNICIPAL_CD_JPN = Z.MUNICIPAL_CD_JPN
                  AND M.GPJP_TAX_ESTAB = Z.GPJP_TAX_ESTAB )
end-SELECT
end-procedure !Get_Specified_Number
!***********************************************************************
! Calc-Date                                                            *
! Called By:    Begin-Report                                           *
! Description:  Calculate the first day of the month on the runcontrol *
!               record as well as the first day of the next month      *
!***********************************************************************
begin-procedure Calc-Date

  let #first_day = 01
  do dtu-format-date(#Rc_year  , #Month     , #first_day, $Date_first)

  if #Month = 12
    let #next_Month = 01
    let #Rc_year_2 = #Rc_year + 1
  else
    let #next_Month =  #Month + 1
    let #Rc_year_2 = #Rc_year
  end-if
  do dtu-format-date(#Rc_year_2, #next_month, #first_day, $Date_next)

  do Convert-From-DTU-Date($Date_first,$Objectdate)
  do Convert-From-DTU-Date($Date_next ,$Nextmonth)

end-procedure !Calc-Date
!*************************************************************************!
! SQC Files for called procedures
!*************************************************************************!
#include 'prcsdef.sqc'       !Update Process Request variable declare
#include 'prcsapi.sqc'       !Update Process Request API
#include 'hrsecty.sqc'       !Get SQR Security parameters
#include 'eoj.sqc'           !End of Job procedure
#include 'readxlat.sqc'      !Read Translate Table
#include 'reset.sqc'         !End of Program
#include 'curdttim.sqc'      !Get-Current-DateTime procedure
#include 'datetime.sqc'      !Routines for date and time formatting
#include 'number.sqc'        !Routines to format numbers
#include 'sqrtrans.sqc'      !Translate SQR strings to given language
#include 'datemath.sqc'      !Date conversion procedures
#include 'getestab.sqc'      !Establishment Name Lookup
#include 'getmunic.sqc'      !Municipality Table Lookup
