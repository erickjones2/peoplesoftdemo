!***********************************************************************
!  BACXMIT: Used for ACA Transmittal File processing                   *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  31640707                                            !
!                                                                      *
!***********************************************************************
!
!***********************************************************************


begin-procedure Write-1094C-Xmit

  do Write-1094C-Xmit-Part1
  do Write-1094C-Xmit-Part2A

  if rtrim($A.AuthoritativeTransmittalInd, ' ') = '1'
    do Write-1094C-Xmit-Part2B
    do Write-1094C-Xmit-Part3
    do Write-1094C-Xmit-Part4
  end-if

end-procedure


begin-procedure Write-1094C-Xmit-Part1

  do Build-XML-Line('SubmissionId', $A.Submission_Count, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if rtrim($A.OriginalUniqueSubmissionId, ' ') <> ''
    do Build-XML-Line('OriginalUniqueSubmissionId', $A.OriginalUniqueSubmissionId, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($ACA_XML_RUNCTL.ACA_TestScenarioID, ' ') <> ''
    let $A.TestScenarioId = $ACA_XML_RUNCTL.ACA_TestScenarioID || '-0'
    do Build-XML-Line('TestScenarioId', $A.TestScenarioId, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do Build-XML-Line('TaxYr', $A.TaxYr, 'Y', #FNum3, 0, 'N', $nsPrefix_2)

  do Build-XML-Line('CorrectedInd', $A.CorrectedInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if $A.CorrectedInd = '1'
    do XML-Open-Tag('CorrectedSubmissionInfoGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    do Build-XML-Line('CorrectedUniqueSubmissionId', $A.CorrectedUniqueSubmissionId, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    do XML-Open-Tag('CorrectedSubmissionPayerName', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    if rtrim($A.BusinessNameLine1Txt, ' ') <> ''
      do Build-XML-Line('BusinessNameLine1Txt', $A.Corr_BusinessNameLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($A.BusinessNameLine2Txt, ' ') <> ''
      do Build-XML-Line('BusinessNameLine2Txt', $A.Corr_BusinessNameLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do XML-Close-Tag('CorrectedSubmissionPayerName', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)

    do Build-XML-Line('CorrectedSubmissionPayerTIN', $A.CorrectedSubmissionPayerTIN, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    do XML-Close-Tag('CorrectedSubmissionInfoGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

! Part I Applicable Large Employer Member (ALE Member)

  do XML-Open-Tag('EmployerInformationGrp', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  do XML-Open-Tag('BusinessName', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  if rtrim($A.BusinessNameLine1Txt, ' ') <> ''
    do Build-XML-Line('BusinessNameLine1Txt', $A.BusinessNameLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.BusinessNameLine2Txt, ' ') <> ''
    do Build-XML-Line('BusinessNameLine2Txt', $A.BusinessNameLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do XML-Close-Tag('BusinessName', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

  if rtrim($A.BusinessNameControlTxt, ' ') <> ''
    do Build-XML-Line('BusinessNameControlTxt', $A.BusinessNameControlTxt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.TINRequestTypeCd, ' ') <> ''
    do Build-XML-Line('TINRequestTypeCd', $A.TINRequestTypeCd, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
  end-if

  do Build-XML-Line('EmployerEIN', $Federal_EIN, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

  do XML-Open-Tag('MailingAddressGrp', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  if rtrim($A.CountryCd, ' ') = 'USA'
    do XML-Open-Tag('USAddressGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    let $A.AddressLine1Txt  =   substr($A.AddressLine1Txt, 1, 35)

    if rtrim($A.AddressLine1Txt, ' ') <> ''
      do Build-XML-Line('AddressLine1Txt', $A.AddressLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($A.AddressLine2Txt, ' ') <> ''
      let $A.AddressLine2Txt  =   substr($A.AddressLine2Txt, 1, 35)
      do Build-XML-Line('AddressLine2Txt', $A.AddressLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    let $A.CityNm = substr($A.CityNm, 1, 22)
    do Build-XML-Line('CityNm', $A.CityNm, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

    do Build-XML-Line('USStateCd', $A.USStateCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    move $A.Zip            to $A.ZipExtsn ~~~~~~xxxx
    if instr($A.Zip,'-',6) = 0
       and $A.ZipExtsn <> '    '
      let $A.Zip = substr($A.Zip,1,5) || '-' || substr($A.Zip,6,4)
    end-if
    let $A.Zip = rtrim($A.Zip, ' ')
    let $A.USZIPCd_Xmit = substr($A.Zip,1,5)
    move $A.Zip  to $A.ZipExtsn_Xmit ~~~~~~xxxx
    do Build-XML-Line('USZIPCd', $A.USZIPCd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

    if rtrim($A.ZipExtsn_Xmit, ' ') <> ''
      do Build-XML-Line('USZIPExtensionCd', $A.ZipExtsn_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
    end-if

    do XML-Close-Tag('USAddressGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)

  else
    do XML-Open-Tag('ForeignAddressGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    if rtrim($A.AddressLine1Txt, ' ') <> ''
      let $A.AddressLine1Txt  =   substr($A.AddressLine1Txt, 1, 35)
      do Build-XML-Line('AddressLine1Txt', $A.AddressLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($A.AddressLine2Txt, ' ') <> ''
      let $A.AddressLine2Txt  =   substr($A.AddressLine2Txt, 1, 35)
      do Build-XML-Line('AddressLine2Txt', $A.AddressLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($A.CityNm, ' ') <> ''
      let $A.CityNm = substr($A.CityNm, 1, 22)
      do Build-XML-Line('CityNm', $A.CityNm, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
    end-if

    if rtrim($A.CountryNm, ' ') <> ''

      evaluate $ACA_Calendar_Year
        when = '2015'
          do Build-XML-Line('CountryNm', $A.CountryNm, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
          break
        when-other
          do Build-XML-Line('CountryNm', $A.CountryNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          break
      end-evaluate
    else
      do Build-XML-Line('CountryCd', $A.CountryCd_2Char, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($A.ForeignProvinceNm, ' ') <> ''
      evaluate $ACA_Calendar_Year
        when = '2015'
          do Build-XML-Line('ForeignProvinceNm', $A.ForeignProvinceNm, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
          break
        when-other
          let $A.ForeignProvinceNm = rtrim(substr($A.ForeignProvinceNm, 1, 17), ' ')
          do Build-XML-Line('ForeignProvinceNm', $A.ForeignProvinceNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          break
      end-evaluate
    end-if

    if rtrim($A.ForeignPostalCd, ' ') <> ''
      evaluate $ACA_Calendar_Year
        when = '2015'
          do Build-XML-Line('ForeignPostalCd', $A.ForeignPostalCd, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
          break
        when-other
          do Build-XML-Line('ForeignPostalCd', $A.ForeignPostalCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          break
      end-evaluate
    end-if

    do XML-Close-Tag('ForeignAddressGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

  do XML-Close-Tag('MailingAddressGrp', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

  do XML-Open-Tag('ContactNameGrp', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  do Build-XML-Line('PersonFirstNm', $A.PersonFirstNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if rtrim($A.PersonMiddleNm, ' ') <> ''
    do Build-XML-Line('PersonMiddleNm', $A.PersonMiddleNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do Build-XML-Line('PersonLastNm', $A.PersonLastNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if rtrim($A.SuffixNm, ' ') <> ''
    do Build-XML-Line('SuffixNm', $A.SuffixNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do XML-Close-Tag('ContactNameGrp', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

  if rtrim($A.ContactPhoneNum, ' ') <> ''
    do Build-XML-Line('ContactPhoneNum', $A.ContactPhoneNum, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do XML-Close-Tag('EmployerInformationGrp', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

  if #DGE_Count > 0

    do XML-Open-Tag('GovtEntityEmployerInfoGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    do XML-Open-Tag('BusinessName', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    if rtrim($A.DGEBusinessNameLine1Txt, ' ') <> ''
      do Build-XML-Line('BusinessNameLine1Txt', $A.DGEBusinessNameLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($A.DGEBusinessNameLine2Txt, ' ') <> ''
      do Build-XML-Line('DGEBusinessNameLine2Txt', $A.DGEBusinessNameLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do XML-Close-Tag('BusinessName', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)

    if rtrim($A.DGEBusinessNameControlTxt, ' ') <> ''
      do Build-XML-Line('BusinessNameControlTxt', $A.DGEBusinessNameControlTxt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($A.DGETINRequestTypeCd, ' ') <> ''
      do Build-XML-Line('TINRequestTypeCd', $A.DGETINRequestTypeCd, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
    end-if

    if rtrim($A.DGEEmployerEIN, ' ') <> ''
      do Build-XML-Line('EmployerEIN', $A.DGEEmployerEIN, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
    end-if

    do XML-Open-Tag('MailingAddressGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    if rtrim($A.DGECountryCd, ' ') = 'USA'
      do XML-Open-Tag('USAddressGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      let $A.DGEAddressLine1Txt  = substr($A.DGEAddressLine1Txt, 1, 35)
      if rtrim($A.DGEAddressLine1Txt, ' ') <> ''
        do Build-XML-Line('AddressLine1Txt', $A.DGEAddressLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.DGEAddressLine2Txt, ' ') <> ''
        let $A.DGEAddressLine2Txt  = substr($A.DGEAddressLine2Txt, 1, 35)
        do Build-XML-Line('AddressLine2Txt', $A.DGEAddressLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      let $A.DGECityNm =  substr($A.DGECityNm, 1, 22)
      do Build-XML-Line('CityNm', $A.DGECityNm, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

      do Build-XML-Line('USStateCd', $A.DGEUSStateCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

      do Build-XML-Line('USZIPCd', $A.DGEUSZIPCd, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

      if rtrim($A.DGEUSZIPExtensionCd, ' ') <> ''
        do Build-XML-Line('USZIPExtensionCd', $A.DGEUSZIPExtensionCd, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
      end-if

      do XML-Close-Tag('USAddressGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)

    else
      do XML-Open-Tag('ForeignAddressGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      let $A.DGEAddressLine1Txt  = substr($A.DGEAddressLine1Txt, 1, 35)
      do Build-XML-Line('AddressLine1Txt', $A.DGEAddressLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

      if rtrim($A.DGEAddressLine2Txt, ' ') <> ''
        let $A.DGEAddressLine2Txt  = substr($A.DGEAddressLine2Txt, 1, 35)
        do Build-XML-Line('AddressLine2Txt', $A.DGEAddressLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.DGECityNm, ' ') <> ''
        let $A.DGECityNm =  substr($A.DGECityNm, 1, 22)
        do Build-XML-Line('CityNm', $A.DGECityNm, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
      end-if

      if rtrim($A.DGECountryNm, ' ') <> ''
        evaluate $ACA_Calendar_Year
          when = '2015'
            do Build-XML-Line('CountryNm', $A.DGECountryNm, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
            break
          when-other
            do Build-XML-Line('CountryNm', $A.DGECountryNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
            break
        end-evaluate
      else
        do Build-XML-Line('CountryCd', $A.DGECountryCd_2Char, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.DGEForeignProvinceNm, ' ') <> ''
        evaluate $ACA_Calendar_Year
          when = '2015'
            do Build-XML-Line('ForeignProvinceNm', $A.DGEForeignProvinceNm, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
            break
          when-other
            let $A.DGEForeignProvinceNm = rtrim(substr($A.DGEForeignProvinceNm, 1, 17), ' ')
            do Build-XML-Line('ForeignProvinceNm', $A.DGEForeignProvinceNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
            break
        end-evaluate
      end-if

      if rtrim($A.DGEForeignPostalCd, ' ') <> ''
        evaluate $ACA_Calendar_Year
          when = '2015'
            do Build-XML-Line('ForeignPostalCd', $A.DGEForeignPostalCd, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
            break
          when-other
            do Build-XML-Line('ForeignPostalCd', $A.DGEForeignPostalCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
            break
        end-evaluate
      end-if

      do XML-Close-Tag('ForeignAddressGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    do XML-Close-Tag('MailingAddressGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)

    do XML-Open-Tag('ContactNameGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    do Build-XML-Line('PersonFirstNm', $A.DGEPersonFirstNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    if rtrim($A.DGEPersonMiddleNm, ' ') <> ''
      do Build-XML-Line('PersonMiddleNm', $A.DGEPersonMiddleNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do Build-XML-Line('PersonLastNm', $A.DGEPersonLastNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    if rtrim($A.DGESuffixNm, ' ') <> ''
      do Build-XML-Line('SuffixNm', $A.DGESuffixNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do XML-Close-Tag('ContactNameGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)

    if rtrim($A.DGEContactPhoneNum, ' ') <> ''
      do Build-XML-Line('ContactPhoneNum', $A.DGEContactPhoneNum, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do XML-Close-Tag('GovtEntityEmployerInfoGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

  if rtrim($A.Form1095CAttachedCnt, ' ') <> ''
    do Build-XML-Line('Form1095CAttachedCnt', $A.Form1095CAttachedCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

end-procedure


begin-procedure Write-1094C-Xmit-Part2A

! Part II ALE Member Information - authoritative transmitter

  if rtrim($A.AuthoritativeTransmittalInd, ' ') = '1'
    do Build-XML-Line('AuthoritativeTransmittalInd', $A.AuthoritativeTransmittalInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

end-procedure


begin-procedure Write-1094C-Xmit-Part2B

! Part II ALE Member Information

  if rtrim($ACA_XML_RUNCTL.ACA_TestScenarioID, ' ') <> ''
    do Format-Number (#ACA_XML_RUNCTL.ACA_Tot_Forms_ALE, $A.TotalForm1095CALEMemberCnt, '9999999999')
    let $A.TotalForm1095CALEMemberCnt = ltrim($A.TotalForm1095CALEMemberCnt, ' ')
  else
    if rtrim($ACA_XML_RUNCTL.ACA_TOT_FORMS_OVRD, ' ') = 'Y'
      let #A.TotalForm1095CALEMemberCnt = #A.TotalForm1095CALEMemberCnt + #ACA_XML_RUNCTL.ACA_TOT_FORMS_ADD
      do Format-Number (#A.TotalForm1095CALEMemberCnt, $A.TotalForm1095CALEMemberCnt, '9999999999')
      let $A.TotalForm1095CALEMemberCnt = ltrim($A.TotalForm1095CALEMemberCnt, ' ')
    end-if
  end-if

  if rtrim($A.TotalForm1095CALEMemberCnt, ' ') <> '0'
    do Build-XML-Line('TotalForm1095CALEMemberCnt', $A.TotalForm1095CALEMemberCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.AggregatedGroupMemberInd, ' ') <> ''
    do Build-XML-Line('AggregatedGroupMemberCd', $A.AggregatedGroupMemberInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  else
    do Build-XML-Line('AggregatedGroupMemberCd', '2', 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.QualifyingOfferMethodInd, ' ') <> ''
    do Build-XML-Line('QualifyingOfferMethodInd', $A.QualifyingOfferMethodInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  evaluate $ACA_Calendar_Year
    when = '2015'
      if rtrim($A.QlfyOfferMethodTrnstReliefInd, ' ') <> ''
        do Build-XML-Line('QlfyOfferMethodTrnstReliefInd', $A.QlfyOfferMethodTrnstReliefInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if
      break
  end-evaluate

  if rtrim($A.Section4980HReliefInd, ' ') <> ''
    do Build-XML-Line('Section4980HReliefInd', $A.Section4980HReliefInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.NinetyEightPctOfferMethodInd, ' ') <> ''
    do Build-XML-Line('NinetyEightPctOfferMethodInd', $A.NinetyEightPctOfferMethodInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.JuratSignaturePIN, ' ') <> ''
    do Build-XML-Line('JuratSignaturePIN', $A.JuratSignaturePIN, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.PersonTitleTxt, ' ') <> ''
    do Build-XML-Line('PersonTitleTxt', $A.PersonTitleTxt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($A.SignatureDt, ' ') <> ''
    do Build-XML-Line('SignatureDt', $A.SignatureDt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

end-procedure


begin-procedure Write-1094C-Xmit-Part3

! Part III ALE Member Information - Monthly

  if rtrim($A.YrlyMinEssentialCvrOffrInd, ' ') <> ''
     or rtrim($A.YrlyTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.YrlyAggregatedGroupInd, ' ') <> ''
     or rtrim($A.YrlyALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.JanALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.JanTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.JanAggregatedGroupInd, ' ') <> ''
     or rtrim($A.JanALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.FebALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.FebTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.FebAggregatedGroupInd, ' ') <> ''
     or rtrim($A.FebALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.MarALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.MarTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.MarAggregatedGroupInd, ' ') <> ''
     or rtrim($A.MarALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.AprALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.AprTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.AprAggregatedGroupInd, ' ') <> ''
     or rtrim($A.AprALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.MayALEMemberFTECnt, ' ') <> '00'
     or rtrim($A.MayTotalEmployeeCnt, ' ') <> ''
     or rtrim($A.MayAggregatedGroupInd, ' ') <> ''
     or rtrim($A.MayALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.JunALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.JunTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.JunAggregatedGroupInd, ' ') <> ''
     or rtrim($A.JunALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.JulALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.JulTotalEmployeeCnt, ' ') = 'Y'
     or rtrim($A.JulAggregatedGroupInd, ' ') <> ''
     or rtrim($A.JulALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.AugALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.AugTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.AugAggregatedGroupInd, ' ') <> ''
     or rtrim($A.AugALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.SepALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.SepTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.SepAggregatedGroupInd, ' ') <> ''
     or rtrim($A.SepALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.OctALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.OctTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.OctAggregatedGroupInd, ' ') <> ''
     or rtrim($A.OctALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.NovALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.NovTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.NovAggregatedGroupInd, ' ') <> ''
     or rtrim($A.NovALESect4980HTrnstReliefCd, ' ') <> ''
     or rtrim($A.DecALEMemberFTECnt, ' ') <> '0'
     or rtrim($A.DecTotalEmployeeCnt, ' ') <> '0'
     or rtrim($A.DecAggregatedGroupInd, ' ') <> ''
     or rtrim($A.DecALESect4980HTrnstReliefCd, ' ') <> ''

    do XML-Open-Tag('ALEMemberInformationGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    if rtrim($A.YrlyMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.YrlyALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.YrlyTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.YrlyAggregatedGroupInd, ' ') <> ''
       or rtrim($A.YrlyALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('YearlyALEMemberDetail', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.YrlyMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.YrlyMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.YrlyALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.YrlyALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.YrlyTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.YrlyTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.YrlyAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.YrlyAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.YrlyALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.YrlyALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('YearlyALEMemberDetail', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.JanMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.JanALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.JanTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.JanAggregatedGroupInd, ' ') <> ''
       or rtrim($A.JanALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('JanALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.JanMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.JanMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JanALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.JanALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JanTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.JanTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JanAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.JanAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JanALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.JanALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('JanALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.FebMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.FebALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.FebTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.FebAggregatedGroupInd, ' ') <> ''
       or rtrim($A.FebALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('FebALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.FebMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.FebMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.FebALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.FebALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.FebTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.FebTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.FebAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.FebAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.FebALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.FebALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('FebALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.MarMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.MarALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.MarTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.MarAggregatedGroupInd, ' ') <> ''
       or rtrim($A.MarALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('MarALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.MarMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.MarMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MarALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.MarALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MarTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.MarTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MarAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.MarAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MarALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.MarALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('MarALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.AprMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.AprALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.AprTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.AprAggregatedGroupInd, ' ') <> ''
       or rtrim($A.AprALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('AprALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.AprMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.AprMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AprALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.AprALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AprTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.AprTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AprAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.AprAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AprALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.AprALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('AprALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.MayMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.MayALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.MayTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.MayAggregatedGroupInd, ' ') <> ''
       or rtrim($A.MayALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('MayALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.MayMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.MayMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MayALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.MayALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MayTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.MayTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MayAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.MayAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.MayALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.MayALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('MayALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.JunMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.JunALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.JunTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.JunAggregatedGroupInd, ' ') <> ''
       or rtrim($A.JunALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('JunALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.JunMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.JunMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JunALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.JunALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JunTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.JunTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JunAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.JunAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JunALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.JunALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('JunALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.JulMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.JulALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.JulTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.JulAggregatedGroupInd, ' ') <> ''
       or rtrim($A.JulALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('JulALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.JulMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.JulMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JulALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.JulALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JulTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.JulTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JulAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.JulAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.JulALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.JulALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('JulALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.AugMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.AugALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.AugTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.AugAggregatedGroupInd, ' ') <> ''
       or rtrim($A.AugALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('AugALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.AugMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.AugMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AugALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.AugALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AugTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.AugTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AugAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.AugAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.AugALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.AugALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('AugALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.SepMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.SepALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.SepTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.SepAggregatedGroupInd, ' ') <> ''
       or rtrim($A.SepALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('SeptALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.SepMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.SepMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.SepALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.SepALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.SepTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.SepTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.SepAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.SepAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.SepALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.SepALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('SeptALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.OctMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.OctALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.OctTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.OctAggregatedGroupInd, ' ') <> ''
       or rtrim($A.OctALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('OctALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.OctMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.OctMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.OctALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.OctALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.OctTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.OctTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.OctAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.OctAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.OctALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.OctALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('OctALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.NovMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.NovALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.NovTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.NovAggregatedGroupInd, ' ') <> ''
       or rtrim($A.NovALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('NovALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.NovMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.NovMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.NovALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.NovALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.NovTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.NovTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.NovAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.NovAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.NovALESect4980HTrnstReliefCd, ' ') <> ''
        do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.NovALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('NovALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    if rtrim($A.DecMinEssentialCvrOffrInd, ' ') <> ''
       or rtrim($A.DecALEMemberFTECnt, ' ') <> '0'
       or rtrim($A.DecTotalEmployeeCnt, ' ') <> '0'
       or rtrim($A.DecAggregatedGroupInd, ' ') <> ''
       or rtrim($A.DecALESect4980HTrnstReliefCd, ' ') <> ''

      do XML-Open-Tag('DecALEMonthlyInfoGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.DecMinEssentialCvrOffrInd, ' ') <> ''
        do Build-XML-Line('MinEssentialCvrOffrCd', $A.DecMinEssentialCvrOffrInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.DecALEMemberFTECnt, ' ') <> '0'
        do Build-XML-Line('ALEMemberFTECnt', $A.DecALEMemberFTECnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.DecTotalEmployeeCnt, ' ') <> '0'
        do Build-XML-Line('TotalEmployeeCnt', $A.DecTotalEmployeeCnt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.DecAggregatedGroupInd, ' ') <> ''
        do Build-XML-Line('AggregatedGroupInd', $A.DecAggregatedGroupInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.DecALESect4980HTrnstReliefCd, ' ') <> ''
         do Build-XML-Line('ALESect4980HTrnstReliefCd', $A.DecALESect4980HTrnstReliefCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('DecALEMonthlyInfoGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    do XML-Close-Tag('ALEMemberInformationGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

end-procedure


begin-procedure Write-1094C-Xmit-Part4

! Pat IV Other ALE Members of Aggregated ALE Group

  let #i = 0
  while #i < {OthALEMemGrpMax}
    get $ALE_Member                   -
        $BusinessNameLine1Txt         -
        $BusinessNameLine2Txt         -
        $BusinessNameControlTxt       -
        $TINRequestTypeCd             -
        $EIN
    from OthALEMemGrp(#i) ALE_Member  -
        BusinessNameLine1Txt          -
        BusinessNameLine2Txt          -
        BusinessNameControlTxt        -
        TINRequestTypeCd              -
        EIN

    if rtrim($ALE_Member, ' ') = ''
      move {OthALEMemGrpMax} to #i
    else
      do XML-Open-Tag('OtherALEMembersGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      do XML-Open-Tag('BusinessName', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      if rtrim($A.BusinessNameLine1Txt, ' ') <> ''
        do Build-XML-Line('BusinessNameLine1Txt', $BusinessNameLine1Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($A.BusinessNameLine2Txt, ' ') <> ''
        do Build-XML-Line('BusinessNameLine2Txt', $BusinessNameLine2Txt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('BusinessName', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)

      if rtrim($BusinessNameControlTxt, ' ') <> ''
        do Build-XML-Line('BusinessNameControlTxt', $BusinessNameControlTxt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($TINRequestTypeCd, ' ') <> ''
        do Build-XML-Line('TINRequestTypeCd', $TINRequestTypeCd, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
      end-if

      do Build-XML-Line('EIN ', $EIN, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

      do XML-Close-Tag('OtherALEMembersGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if

    add 1  to #i
  end-while

end-procedure


begin-procedure XMIT-EE-DepBen-Data

  do XMIT-EE-Data

  if rtrim($D.CoveredIndividualInd, ' ') <> ''
    do Build-XML-Line('CoveredIndividualInd', $D.CoveredIndividualInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  let #i = 0
  while #i < {DepBenXmitMax}
    do Prepare-DepBen-Data

    if rtrim($DependentBenef, ' ') <> ''
      do XMIT-DepBen-Data
    end-if

    let #i = #i + 1
  end-while

end-procedure


begin-procedure XMIT-EE-Data

  do Format-Number (#EE_Count, $EE_Count, '9999999')
  let $EE_Count = ltrim($EE_Count, ' ')
  do Build-XML-Line('RecordId', $EE_Count, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if rtrim($ACA_XML_RUNCTL.ACA_TestScenarioID, ' ') <> ''
    let $A.TestScenarioId = $ACA_XML_RUNCTL.ACA_TestScenarioID || '-' || $EE_Count
    do Build-XML-Line('TestScenarioId', $A.TestScenarioId, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do Build-XML-Line('CorrectedInd', $E.CorrectedInd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if rtrim($E.CorrectedInd, ' ') <> '0'
    evaluate $ACA_Calendar_Year
      when = '2015'
      when = '2016'
        do XML-Open-Tag('CorrectedRecordInfoGrp', $openTag3, $nsPrefix_1)
      when-other
        do XML-Open-Tag('CorrectedRecordRecipientGrp', $openTag3, $nsPrefix_1)
    end-evaluate

    do Write-XML-Line(#Fnum3, $openTag3)
    do Build-XML-Line('CorrectedUniqueRecordId', $E.CorrectedUniqueRecordId, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    if rtrim($E.Corr_First_Name, ' ') <> ''
      evaluate $ACA_Calendar_Year
        when = '2015'
        when = '2016'
          do XML-Open-Tag('CorrectedRecordPayeeName', $openTag3, $nsPrefix_1)
        when-other
          do XML-Open-Tag('CorrectedRecRecipientPrsnName', $openTag3, $nsPrefix_1)
      end-evaluate

      do Write-XML-Line(#Fnum3, $openTag3)
      do Build-XML-Line('PersonFirstNm', $E.Corr_First_Name, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

      if rtrim($E.Corr_MiddleNm, ' ') <> ''
        do Build-XML-Line('PersonMiddleNm', $E.Corr_MiddleNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do Build-XML-Line('PersonLastNm', $E.Corr_Last_Name, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

      if rtrim($E.Corr_Name_Suffix, ' ') <> ''
        do Build-XML-Line('SuffixNm', $E.Corr_Name_Suffix, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      evaluate $ACA_Calendar_Year
        when = '2015'
        when = '2016'
          do XML-Close-Tag('CorrectedRecordPayeeName', $closeTag3, $nsPrefix_1)
        when-other
          do XML-Close-Tag('CorrectedRecRecipientPrsnName', $closeTag3, $nsPrefix_1)
      end-evaluate
      do Write-XML-Line(#Fnum3, $CloseTag3)
    end-if

    if rtrim($E.CorrectedRecordPayeeTIN, ' ') <> ''
      evaluate $ACA_Calendar_Year
        when = '2015'
        when = '2016'
          do Build-XML-Line('CorrectedRecordPayeeTIN', $E.CorrectedRecordPayeeTIN, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
        when-other
          do Build-XML-Line('CorrectedRecRecipientTIN', $E.CorrectedRecordPayeeTIN, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-evaluate
    end-if

    evaluate $ACA_Calendar_Year
      when = '2015'
      when = '2016'
        do XML-Close-Tag('CorrectedRecordInfoGrp', $closeTag3, $nsPrefix_1)
      when-other
        do XML-Close-Tag('CorrectedRecordRecipientGrp', $closeTag3, $nsPrefix_1)
    end-evaluate
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

  do Build-XML-Line('TaxYr', $A.TaxYr, 'Y', #FNum3, 0, 'N', $nsPrefix_2)

  do XML-Open-Tag('EmployeeInfoGrp', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  if rtrim($E.Xmit_Fname, ' ') <> ''
    do XML-Open-Tag('OtherCompletePersonName', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    do Build-XML-Line('PersonFirstNm', $E.Xmit_Fname , 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    if rtrim($E.Xmit_MiddleName, ' ') <> ''
      do Build-XML-Line('PersonMiddleNm', $E.Xmit_MiddleName, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do Build-XML-Line('PersonLastNm', $E.Xmit_LName, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    if rtrim($E.Xmit_Suffix, ' ') <> ''
      do Build-XML-Line('SuffixNm', $E.Xmit_Suffix, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do XML-Close-Tag('OtherCompletePersonName', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

  if rtrim($E.PersonNameControlTxt, ' ') <> ''
    do Build-XML-Line('PersonNameControlTxt', $E.PersonNameControlTxt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($E.TINRequestTypeCd, ' ') <> ''
    do Build-XML-Line('TINRequestTypeCd', $E.TINRequestTypeCd, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
  end-if

  if rtrim($E.SSN_Orig, ' ') <> ''
    do Build-XML-Line('SSN', $E.SSN_Orig, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
  end-if

  do XML-Open-Tag('MailingAddressGrp', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  if $E.Country = 'USA'
    do XML-Open-Tag('USAddressGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    let $E.Address1  = substr($E.Address1, 1, 35)
    do Build-XML-Line('AddressLine1Txt', $E.Address1, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    if rtrim($E.Address2, ' ') <> ''
      let $E.Address2  = substr($E.Address2, 1, 35)
      do Build-XML-Line('AddressLine2Txt', $E.Address2, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    let $E.City      = substr($E.City, 1, 22)
    do Build-XML-Line('CityNm', $E.City, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

    do Build-XML-Line('USStateCd', $E.State, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    let $E.USZIPCd_Xmit = substr($E.Zip,1,5)
    move $E.Zip  to $E.ZipExtsn_Xmit ~~~~~~xxxx
    do Build-XML-Line('USZIPCd', $E.USZIPCd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_3)

    if rtrim($E.ZipExtsn_Xmit, ' ') <> ''
      do Build-XML-Line('USZIPExtensionCd', $E.ZipExtsn_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
    end-if

    do XML-Close-Tag('USAddressGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  else
    do XML-Open-Tag('ForeignAddressGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    let $E.Address1  = substr($E.Address1, 1, 35)
    do Build-XML-Line('AddressLine1Txt', $E.Address1, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

    if rtrim($E.Address2, ' ') <> ''
      let $E.Address2  = substr($E.Address2, 1, 35)
      do Build-XML-Line('AddressLine2Txt', $E.Address2, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.City, ' ') <> ''
      let $E.City      = substr($E.City, 1, 22)
      do Build-XML-Line('CityNm', $E.City, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
    end-if

    if rtrim($E.CountryNm, ' ') <> ''
      evaluate $ACA_Calendar_Year
        when = '2015'
          do Build-XML-Line('CountryNm', $E.CountryNm, 'Y', #FNum3,   0, 'N', $nsPrefix_2)
          break
        when-other
          do Build-XML-Line('CountryNm', $E.CountryNm, 'Y', #FNum3,   0, 'N', $nsPrefix_1)
          break
      end-evaluate
    else
      do Build-XML-Line('CountryCd', $E.CountryCd_2Char, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.ForeignProvinceNm, ' ') <> ''
      evaluate $ACA_Calendar_Year
        when = '2015'
          do Build-XML-Line('ForeignProvinceNm', $E.ForeignProvinceNm, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
          break
        when-other
          let $E.ForeignProvinceNm = rtrim(substr($E.ForeignProvinceNm, 1, 17), ' ')
          do Build-XML-Line('ForeignProvinceNm', $E.ForeignProvinceNm, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          break
      end-evaluate
    end-if

    if rtrim($E.ForeignPostalCd, ' ') <> ''
      evaluate $ACA_Calendar_Year
        when = '2015'
          do Build-XML-Line('ForeignPostalCd', $E.ForeignPostalCd, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
          break
        when-other
          do Build-XML-Line('ForeignPostalCd', $E.ForeignPostalCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          break
      end-evaluate
    end-if

    do XML-Close-Tag('ForeignAddressGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

  do XML-Close-Tag('MailingAddressGrp', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

  do XML-Close-Tag('EmployeeInfoGrp', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

  if rtrim($E.Contact_Phone, ' ') <> ''
    do Build-XML-Line('ALEContactPhoneNum', $E.Contact_Phone, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($E.PlanStartMonth, ' ') <> ''
    do Build-XML-Line('StartMonthNumberCd', $E.PlanStartMonth, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do Set-Flags

  evaluate $ACA_Calendar_Year
    when = '2020'
      if $ZIPFlag = 'Y'
         or $JanZIPFlag = 'Y'
         or $FebZIPFlag = 'Y'
         or $MarZIPFlag = 'Y'
         or $AprZIPFlag = 'Y'
         or $MayZIPFlag = 'Y'
         or $JunZIPFlag = 'Y'
         or $JulZIPFlag = 'Y'
         or $AugZIPFlag = 'Y'
         or $SepZIPFlag = 'Y'
         or $OctZIPFlag = 'Y'
         or $NovZIPFlag = 'Y'
         or $DecZIPFlag = 'Y'
        do Build-XML-Line('AgeNum', $E.AgeJan1, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if
      break
  end-evaluate

  do XML-Open-Tag('EmployeeOfferAndCoverageGrp', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

! Box 14 Annual Offer of Coverage

  if rtrim($E.AnnualOfferCoverageCd, ' ') <> ''
    do Build-XML-Line('AnnualOfferOfCoverageCd', $E.AnnualOfferCoverageCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

! Box 14 Monthly Offer of Coverage

  if rtrim($E.AnnualOfferCoverageCd, ' ') = ''
    do XML-Open-Tag('MonthlyOfferCoverageGrp', $openTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $openTag3)

    if rtrim($E.JanOfferCd, ' ') <> ''
      do Build-XML-Line('JanOfferCd', $E.JanOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.FebOfferCd, ' ') <> ''
      do Build-XML-Line('FebOfferCd', $E.FebOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.MarOfferCd, ' ') <> ''
      do Build-XML-Line('MarOfferCd', $E.MarOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.AprOfferCd, ' ') <> ''
      do Build-XML-Line('AprOfferCd', $E.AprOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.MayOfferCd, ' ') <> ''
      do Build-XML-Line('MayOfferCd', $E.MayOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.JunOfferCd, ' ') <> ''
      do Build-XML-Line('JunOfferCd', $E.JunOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.JulOfferCd, ' ') <> ''
      do Build-XML-Line('JulOfferCd', $E.JulOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.AugOfferCd, ' ') <> ''
      do Build-XML-Line('AugOfferCd', $E.AugOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.SepOfferCd, ' ') <> ''
      do Build-XML-Line('SepOfferCd', $E.SepOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.OctOfferCd, ' ') <> ''
      do Build-XML-Line('OctOfferCd', $E.OctOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.NovOfferCd, ' ') <> ''
      do Build-XML-Line('NovOfferCd', $E.NovOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    if rtrim($E.DecOfferCd, ' ') <> ''
      do Build-XML-Line('DecOfferCd', $E.DecOfferCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
    end-if

    do XML-Close-Tag('MonthlyOfferCoverageGrp', $closeTag3, $nsPrefix_1)
    do Write-XML-Line(#Fnum3, $closeTag3)
  end-if

! Box 15 Annual Employee Required Contribution

  evaluate $ACA_Calendar_Year
    when = '2015'
    when = '2016'
      if $AmountFlag = 'Y'
        if rtrim($E.AnnlShrLowestCostMthlyPremAmt, ' ') <> '0.00'
          do Build-XML-Line('AnnlShrLowestCostMthlyPremAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
        end-if
      end-if
      break
    when = '2017'
    when = '2018'
    when = '2019'
    when = '2020'
      if $AmountFlag = 'Y'
        if rtrim($E.AnnlShrLowestCostMthlyPremAmt, ' ') <> '0.00'
          do Build-XML-Line('AnnlEmployeeRequiredContriAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
        end-if
      end-if
      break
  end-evaluate

! Box 15 Monthly Employee Required Contribution

  if $JanAmountFlag = 'Y'
     or $FebAmountFlag = 'Y'
     or $MarAmountFlag = 'Y'
     or $AprAmountFlag = 'Y'
     or $MayAmountFlag = 'Y'
     or $JunAmountFlag = 'Y'
     or $JulAmountFlag = 'Y'
     or $AugAmountFlag = 'Y'
     or $SepAmountFlag = 'Y'
     or $OctAmountFlag = 'Y'
     or $NovAmountFlag = 'Y'
     or $DecAmountFlag = 'Y'
    evaluate $ACA_Calendar_Year
      when = '2015'
      when = '2016'
        do XML-Open-Tag('MonthlyShareOfLowestCostMonthlyPremGrp', $openTag3, $nsPrefix_1)
        do Write-XML-Line(#Fnum3, $openTag3)
        break
      when = '2017'
      when = '2018'
      when = '2019'
      when = '2020'
        do XML-Open-Tag('MonthlyEmployeeRequiredContriGrp', $openTag3, $nsPrefix_1)
        do Write-XML-Line(#Fnum3, $openTag3)
        break
    end-evaluate
    if rtrim($E.AnnlShrLowestCostMthlyPremAmt, ' ') = '0.00'
      if $JanAmountFlag = 'Y'
        do Build-XML-Line('JanuaryAmt', $E.JanAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $FebAmountFlag = 'Y'
        do Build-XML-Line('FebruaryAmt', $E.FebAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MarAmountFlag = 'Y'
        do Build-XML-Line('MarchAmt', $E.MarAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AprAmountFlag = 'Y'
        do Build-XML-Line('AprilAmt', $E.AprAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MayAmountFlag = 'Y'
        do Build-XML-Line('MayAmt', $E.MayAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JunAmountFlag = 'Y'
        do Build-XML-Line('JuneAmt', $E.JunAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JulAmountFlag = 'Y'
        do Build-XML-Line('JulyAmt', $E.JulAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AugAmountFlag = 'Y'
        do Build-XML-Line('AugustAmt', $E.AugAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $SepAmountFlag = 'Y'
        do Build-XML-Line('SeptemberAmt', $E.SepAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $OctAmountFlag = 'Y'
        do Build-XML-Line('OctoberAmt', $E.OctAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $NovAmountFlag = 'Y'
        do Build-XML-Line('NovemberAmt', $E.NovAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $DecAmountFlag = 'Y'
        do Build-XML-Line('DecemberAmt', $E.DecAmt_MonthlyShare, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if
    else
      if $JanAmountFlag = 'Y'
        do Build-XML-Line('JanuaryAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $FebAmountFlag = 'Y'
        do Build-XML-Line('FebruaryAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MarAmountFlag = 'Y'
        do Build-XML-Line('MarchAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AprAmountFlag = 'Y'
        do Build-XML-Line('AprilAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MayAmountFlag = 'Y'
        do Build-XML-Line('MayAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JunAmountFlag = 'Y'
        do Build-XML-Line('JuneAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JulAmountFlag = 'Y'
        do Build-XML-Line('JulyAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AugAmountFlag = 'Y'
        do Build-XML-Line('AugustAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $SepAmountFlag = 'Y'
        do Build-XML-Line('SeptemberAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $OctAmountFlag = 'Y'
        do Build-XML-Line('OctoberAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $NovAmountFlag = 'Y'
        do Build-XML-Line('NovemberAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $DecAmountFlag = 'Y'
        do Build-XML-Line('DecemberAmt', $E.AnnlShrLowestCostMthlyPremAmt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if
    end-if
    evaluate $ACA_Calendar_Year
      when = '2015'
      when = '2016'
        do XML-Close-Tag('MonthlyShareOfLowestCostMonthlyPremGrp', $closeTag3, $nsPrefix_1)
        do Write-XML-Line(#Fnum3, $closeTag3)
        break
      when = '2017'
      when = '2018'
      when = '2019'
      when = '2020'
        do XML-Close-Tag('MonthlyEmployeeRequiredContriGrp', $closeTag3, $nsPrefix_1)
        do Write-XML-Line(#Fnum3, $closeTag3)
        break
    end-evaluate
  end-if

! Box 16 Safe Harbor

  evaluate $ACA_Calendar_Year
    when = '2015'
    when = '2016'
    when = '2017'
    when = '2018'
    when = '2019'
    when = '2020'
      if rtrim($E.AnnualSafeHarborCd, ' ') = ''
        if rtrim($E.JanSafeHarborCd, ' ') <> ''
           or rtrim($E.FebSafeHarborCd, ' ') <> ''
           or rtrim($E.MarSafeHarborCd, ' ') <> ''
           or rtrim($E.AprSafeHarborCd, ' ') <> ''
           or rtrim($E.MaySafeHarborCd, ' ') <> ''
           or rtrim($E.JunSafeHarborCd, ' ') <> ''
           or rtrim($E.JulSafeHarborCd, ' ') <> ''
           or rtrim($E.AugSafeHarborCd, ' ') <> ''
           or rtrim($E.SepSafeHarborCd, ' ') <> ''
           or rtrim($E.OctSafeHarborCd, ' ') <> ''
           or rtrim($E.NovSafeHarborCd, ' ') <> ''
           or rtrim($E.DecSafeHarborCd, ' ') <> ''

          do XML-Open-Tag('MonthlySafeHarborGrp', $openTag3, $nsPrefix_1)
          do Write-XML-Line(#Fnum3, $openTag3)

          if rtrim($E.JanSafeHarborCd, ' ') <> ''
            do Build-XML-Line('JanSafeHarborCd', $E.JanSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.FebSafeHarborCd, ' ') <> ''
            do Build-XML-Line('FebSafeHarborCd', $E.FebSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.MarSafeHarborCd, ' ') <> ''
            do Build-XML-Line('MarSafeHarborCd', $E.MarSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.AprSafeHarborCd, ' ') <> ''
            do Build-XML-Line('AprSafeHarborCd', $E.AprSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.MaySafeHarborCd, ' ') <> ''
            do Build-XML-Line('MaySafeHarborCd', $E.MaySafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.JunSafeHarborCd, ' ') <> ''
            do Build-XML-Line('JunSafeHarborCd', $E.JunSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.JulSafeHarborCd, ' ') <> ''
            do Build-XML-Line('JulSafeHarborCd', $E.JulSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.AugSafeHarborCd, ' ') <> ''
            do Build-XML-Line('AugSafeHarborCd', $E.AugSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.SepSafeHarborCd, ' ') <> ''
            do Build-XML-Line('SepSafeHarborCd', $E.SepSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.OctSafeHarborCd, ' ') <> ''
            do Build-XML-Line('OctSafeHarborCd', $E.OctSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.NovSafeHarborCd, ' ') <> ''
            do Build-XML-Line('NovSafeHarborCd', $E.NovSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          if rtrim($E.DecSafeHarborCd, ' ') <> ''
            do Build-XML-Line('DecSafeHarborCd', $E.DecSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
          end-if

          do XML-Close-Tag('MonthlySafeHarborGrp', $closeTag3, $nsPrefix_1)
          do Write-XML-Line(#Fnum3, $closeTag3)
        end-if
      else
        do Build-XML-Line('AnnualSafeHarborCd', $E.AnnualSafeHarborCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if
      break
  end-evaluate

! Box 17 Annual Employee Zip Code

  evaluate $ACA_Calendar_Year
    when = '2020'
      if $ZipFlag = 'Y'
        if rtrim($E.AnnualICHRAZipCd, ' ') <> ''
          do Build-XML-Line('AnnualICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
        end-if
      end-if
      break
  end-evaluate

! Box 17 Monthly Employee Zip Code

  if $JanZIPFlag = 'Y'
     or $FebZIPFlag = 'Y'
     or $MarZIPFlag = 'Y'
     or $AprZIPFlag = 'Y'
     or $MayZIPFlag = 'Y'
     or $JunZIPFlag = 'Y'
     or $JulZIPFlag = 'Y'
     or $AugZIPFlag = 'Y'
     or $SepZIPFlag = 'Y'
     or $OctZIPFlag = 'Y'
     or $NovZIPFlag = 'Y'
     or $DecZIPFlag = 'Y'
    evaluate $ACA_Calendar_Year
      when = '2020'
        do XML-Open-Tag('MonthlyICHRAZipCdGrp', $openTag3, $nsPrefix_1)
        do Write-XML-Line(#Fnum3, $openTag3)
        break
    end-evaluate

    if rtrim($E.AnnualICHRAZipCd, ' ') = ''
      if $JanZIPFlag = 'Y'
        do Build-XML-Line('JanICHRAZipCd', $E.JanICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $FebZIPFlag = 'Y'
        do Build-XML-Line('FebICHRAZipCd', $E.FebICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MarZIPFlag = 'Y'
        do Build-XML-Line('MarICHRAZipCd', $E.MarICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AprZIPFlag = 'Y'
        do Build-XML-Line('AprICHRAZipCd', $E.AprICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MayZIPFlag = 'Y'
        do Build-XML-Line('MayICHRAZipCd', $E.MayICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JunZIPFlag = 'Y'
        do Build-XML-Line('JunICHRAZipCd', $E.JunICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JulZIPFlag = 'Y'
        do Build-XML-Line('JulICHRAZipCd', $E.JulICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AugZIPFlag = 'Y'
        do Build-XML-Line('AugICHRAZipCd', $E.AugICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $SepZIPFlag = 'Y'
        do Build-XML-Line('SepICHRAZipCd', $E.SepICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $OctZIPFlag = 'Y'
        do Build-XML-Line('OctICHRAZipCd', $E.OctICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $NovZIPFlag = 'Y'
        do Build-XML-Line('NovICHRAZipCd', $E.NovICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $DecZIPFlag = 'Y'
        do Build-XML-Line('DecICHRAZipCd', $E.DecICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if
    else
      if $JanZIPFlag = 'Y'
        do Build-XML-Line('JanICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $FebZIPFlag = 'Y'
        do Build-XML-Line('FebICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MarZIPFlag = 'Y'
        do Build-XML-Line('MarICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AprZIPFlag = 'Y'
        do Build-XML-Line('AprICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $MayZIPFlag = 'Y'
        do Build-XML-Line('MayICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JunZIPFlag = 'Y'
        do Build-XML-Line('JunICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $JulZIPFlag = 'Y'
        do Build-XML-Line('JulICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $AugZIPFlag = 'Y'
        do Build-XML-Line('AugICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $SepZIPFlag = 'Y'
        do Build-XML-Line('SepICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $OctZIPFlag = 'Y'
        do Build-XML-Line('OctICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $NovZIPFlag = 'Y'
        do Build-XML-Line('NovICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if $DecZIPFlag = 'Y'
        do Build-XML-Line('DecICHRAZipCd', $E.AnnualICHRAZipCd, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if
    end-if

    evaluate $ACA_Calendar_Year
      when = '2020'
        do XML-Close-Tag('MonthlyICHRAZipCdGrp', $closeTag3, $nsPrefix_1)
        do Write-XML-Line(#Fnum3, $closeTag3)
        break
    end-evaluate
  end-if

  do XML-Close-Tag('EmployeeOfferAndCoverageGrp', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

end-procedure


begin-procedure Set-Flags

  let $JanAmountFlag = 'N'
  let $FebAmountFlag = 'N'
  let $MarAmountFlag = 'N'
  let $AprAmountFlag = 'N'
  let $MayAmountFlag = 'N'
  let $JunAmountFlag = 'N'
  let $JulAmountFlag = 'N'
  let $AugAmountFlag = 'N'
  let $SepAmountFlag = 'N'
  let $OctAmountFlag = 'N'
  let $NovAmountFlag = 'N'
  let $DecAmountFlag = 'N'

  let $JanZIPFlag = 'N'
  let $FebZIPFlag = 'N'
  let $MarZIPFlag = 'N'
  let $AprZIPFlag = 'N'
  let $MayZIPFlag = 'N'
  let $JunZIPFlag = 'N'
  let $JulZIPFlag = 'N'
  let $AugZIPFlag = 'N'
  let $SepZIPFlag = 'N'
  let $OctZIPFlag = 'N'
  let $NovZIPFlag = 'N'
  let $DecZIPFlag = 'N'

  let $AmountFlag = 'N'
  let $ZipFlag = 'N'

  evaluate $ACA_Calendar_Year
    when = '2015'
    when = '2016'
      if rtrim($E.AnnualOfferCoverageCd, ' ') = '1B'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1C'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1D'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1E'
        let $AmountFlag = 'Y'
        if rtrim($E.AnnlShrLowestCostMthlyPremAmt, ' ') = '0.00'
          let $JanAmountFlag = 'Y'
          let $FebAmountFlag = 'Y'
          let $MarAmountFlag = 'Y'
          let $AprAmountFlag = 'Y'
          let $MayAmountFlag = 'Y'
          let $JunAmountFlag = 'Y'
          let $JulAmountFlag = 'Y'
          let $AugAmountFlag = 'Y'
          let $SepAmountFlag = 'Y'
          let $OctAmountFlag = 'Y'
          let $NovAmountFlag = 'Y'
          let $DecAmountFlag = 'Y'
        end-if
      end-if
      break
    when = '2017'
    when = '2018'
    when = '2019'
      if rtrim($E.AnnualOfferCoverageCd, ' ') = '1B'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1C'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1D'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1E'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1J'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1K'
        let $AmountFlag = 'Y'
        if rtrim($E.AnnlShrLowestCostMthlyPremAmt, ' ') = '0.00'
          let $JanAmountFlag = 'Y'
          let $FebAmountFlag = 'Y'
          let $MarAmountFlag = 'Y'
          let $AprAmountFlag = 'Y'
          let $MayAmountFlag = 'Y'
          let $JunAmountFlag = 'Y'
          let $JulAmountFlag = 'Y'
          let $AugAmountFlag = 'Y'
          let $SepAmountFlag = 'Y'
          let $OctAmountFlag = 'Y'
          let $NovAmountFlag = 'Y'
          let $DecAmountFlag = 'Y'
        end-if
      end-if
      break
    when = '2020'
      if rtrim($E.AnnualOfferCoverageCd, ' ') = '1B'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1C'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1D'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1E'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1J'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1K'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1L'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1M'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1N'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1O'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1P'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1Q'
        let $AmountFlag = 'Y'
        if rtrim($E.AnnlShrLowestCostMthlyPremAmt, ' ') = '0.00'
          let $JanAmountFlag = 'Y'
          let $FebAmountFlag = 'Y'
          let $MarAmountFlag = 'Y'
          let $AprAmountFlag = 'Y'
          let $MayAmountFlag = 'Y'
          let $JunAmountFlag = 'Y'
          let $JulAmountFlag = 'Y'
          let $AugAmountFlag = 'Y'
          let $SepAmountFlag = 'Y'
          let $OctAmountFlag = 'Y'
          let $NovAmountFlag = 'Y'
          let $DecAmountFlag = 'Y'
        end-if
      end-if
      if rtrim($E.AnnualOfferCoverageCd, ' ') = '1L'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1M'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1N'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1O'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1P'
         or rtrim($E.AnnualOfferCoverageCd, ' ') = '1Q'
        let $ZIPFlag = 'Y'
        if rtrim($E.AnnualICHRAZipCd, ' ') = ''
          let $JanZIPFlag = 'Y'
          let $FebZIPFlag = 'Y'
          let $MarZIPFlag = 'Y'
          let $AprZIPFlag = 'Y'
          let $MayZIPFlag = 'Y'
          let $JunZIPFlag = 'Y'
          let $JulZIPFlag = 'Y'
          let $AugZIPFlag = 'Y'
          let $SepZIPFlag = 'Y'
          let $OctZIPFlag = 'Y'
          let $NovZIPFlag = 'Y'
          let $DecZIPFlag = 'Y'
        end-if
      end-if
      break
  end-evaluate

  if rtrim($E.AnnualOfferCoverageCd, ' ') = ''
    evaluate $ACA_Calendar_Year
      when = '2015'
        if rtrim($E.JanOfferCd, ' ') = '1B'
           or rtrim($E.JanOfferCd, ' ') = '1C'
           or rtrim($E.JanOfferCd, ' ') = '1D'
           or rtrim($E.JanOfferCd, ' ') = '1E'
          let $JanAmountFlag = 'Y'
        end-if

        if rtrim($E.FebOfferCd, ' ') = '1B'
           or rtrim($E.FebOfferCd, ' ') = '1C'
           or rtrim($E.FebOfferCd, ' ') = '1D'
           or rtrim($E.FebOfferCd, ' ') = '1E'
          let $FebAmountFlag = 'Y'
        end-if

        if rtrim($E.MarOfferCd, ' ') = '1B'
           or rtrim($E.MarOfferCd, ' ') = '1C'
           or rtrim($E.MarOfferCd, ' ') = '1D'
           or rtrim($E.MarOfferCd, ' ') = '1E'
          let $MarAmountFlag = 'Y'
        end-if

        if rtrim($E.AprOfferCd, ' ') = '1B'
           or rtrim($E.AprOfferCd, ' ') = '1C'
           or rtrim($E.AprOfferCd, ' ') = '1D'
           or rtrim($E.AprOfferCd, ' ') = '1E'
          let $AprAmountFlag = 'Y'
        end-if

        if rtrim($E.MayOfferCd, ' ') = '1B'
           or rtrim($E.MayOfferCd, ' ') = '1C'
           or rtrim($E.MayOfferCd, ' ') = '1D'
           or rtrim($E.MayOfferCd, ' ') = '1E'
          let $MayAmountFlag = 'Y'
        end-if

        if rtrim($E.JunOfferCd, ' ') = '1B'
           or rtrim($E.JunOfferCd, ' ') = '1C'
           or rtrim($E.JunOfferCd, ' ') = '1D'
           or rtrim($E.JunOfferCd, ' ') = '1E'
          let $JunAmountFlag = 'Y'
        end-if

        if rtrim($E.JulOfferCd, ' ') = '1B'
           or rtrim($E.JulOfferCd, ' ') = '1C'
           or rtrim($E.JulOfferCd, ' ') = '1D'
           or rtrim($E.JulOfferCd, ' ') = '1E'
          let $JulAmountFlag = 'Y'
        end-if

        if rtrim($E.AugOfferCd, ' ') = '1B'
           or rtrim($E.AugOfferCd, ' ') = '1C'
           or rtrim($E.AugOfferCd, ' ') = '1D'
           or rtrim($E.AugOfferCd, ' ') = '1E'
          let $AugAmountFlag = 'Y'
        end-if

        if rtrim($E.SepOfferCd, ' ') = '1B'
           or rtrim($E.SepOfferCd, ' ') = '1C'
           or rtrim($E.SepOfferCd, ' ') = '1D'
           or rtrim($E.SepOfferCd, ' ') = '1E'
          let $SepAmountFlag = 'Y'
        end-if

        if rtrim($E.OctOfferCd, ' ') = '1B'
           or rtrim($E.OctOfferCd, ' ') = '1C'
           or rtrim($E.OctOfferCd, ' ') = '1D'
           or rtrim($E.OctOfferCd, ' ') = '1E'
          let $OctAmountFlag = 'Y'
        end-if

        if rtrim($E.NovOfferCd, ' ') = '1B'
           or rtrim($E.NovOfferCd, ' ') = '1C'
           or rtrim($E.NovOfferCd, ' ') = '1D'
           or rtrim($E.NovOfferCd, ' ') = '1E'
          let $NovAmountFlag = 'Y'
        end-if

        if rtrim($E.DecOfferCd, ' ') = '1B'
           or rtrim($E.DecOfferCd, ' ') = '1C'
           or rtrim($E.DecOfferCd, ' ') = '1D'
           or rtrim($E.DecOfferCd, ' ') = '1E'
          let $DecAmountFlag = 'Y'
        end-if
        break
      when = '2016'
      when = '2017'
      when = '2018'
      when = '2019'
        if rtrim($E.JanOfferCd, ' ') = '1B'
           or rtrim($E.JanOfferCd, ' ') = '1C'
           or rtrim($E.JanOfferCd, ' ') = '1D'
           or rtrim($E.JanOfferCd, ' ') = '1E'
           or rtrim($E.JanOfferCd, ' ') = '1J'
           or rtrim($E.JanOfferCd, ' ') = '1K'
          let $JanAmountFlag = 'Y'
        end-if

        if rtrim($E.FebOfferCd, ' ') = '1B'
           or rtrim($E.FebOfferCd, ' ') = '1C'
           or rtrim($E.FebOfferCd, ' ') = '1D'
           or rtrim($E.FebOfferCd, ' ') = '1E'
           or rtrim($E.FebOfferCd, ' ') = '1J'
           or rtrim($E.FebOfferCd, ' ') = '1K'
          let $FebAmountFlag = 'Y'
        end-if

        if rtrim($E.MarOfferCd, ' ') = '1B'
           or rtrim($E.MarOfferCd, ' ') = '1C'
           or rtrim($E.MarOfferCd, ' ') = '1D'
           or rtrim($E.MarOfferCd, ' ') = '1E'
           or rtrim($E.MarOfferCd, ' ') = '1J'
           or rtrim($E.MarOfferCd, ' ') = '1K'
          let $MarAmountFlag = 'Y'
        end-if

        if rtrim($E.AprOfferCd, ' ') = '1B'
           or rtrim($E.AprOfferCd, ' ') = '1C'
           or rtrim($E.AprOfferCd, ' ') = '1D'
           or rtrim($E.AprOfferCd, ' ') = '1E'
           or rtrim($E.AprOfferCd, ' ') = '1J'
           or rtrim($E.AprOfferCd, ' ') = '1K'
          let $AprAmountFlag = 'Y'
        end-if

        if rtrim($E.MayOfferCd, ' ') = '1B'
           or rtrim($E.MayOfferCd, ' ') = '1C'
           or rtrim($E.MayOfferCd, ' ') = '1D'
           or rtrim($E.MayOfferCd, ' ') = '1E'
           or rtrim($E.MayOfferCd, ' ') = '1J'
           or rtrim($E.MayOfferCd, ' ') = '1K'
          let $MayAmountFlag = 'Y'
        end-if

        if rtrim($E.JunOfferCd, ' ') = '1B'
           or rtrim($E.JunOfferCd, ' ') = '1C'
           or rtrim($E.JunOfferCd, ' ') = '1D'
           or rtrim($E.JunOfferCd, ' ') = '1E'
           or rtrim($E.JunOfferCd, ' ') = '1J'
           or rtrim($E.JunOfferCd, ' ') = '1K'
          let $JunAmountFlag = 'Y'
        end-if

        if rtrim($E.JulOfferCd, ' ') = '1B'
           or rtrim($E.JulOfferCd, ' ') = '1C'
           or rtrim($E.JulOfferCd, ' ') = '1D'
           or rtrim($E.JulOfferCd, ' ') = '1E'
           or rtrim($E.JulOfferCd, ' ') = '1J'
           or rtrim($E.JulOfferCd, ' ') = '1K'
          let $JulAmountFlag = 'Y'
        end-if

        if rtrim($E.AugOfferCd, ' ') = '1B'
           or rtrim($E.AugOfferCd, ' ') = '1C'
           or rtrim($E.AugOfferCd, ' ') = '1D'
           or rtrim($E.AugOfferCd, ' ') = '1E'
           or rtrim($E.AugOfferCd, ' ') = '1J'
           or rtrim($E.AugOfferCd, ' ') = '1K'
          let $AugAmountFlag = 'Y'
        end-if

        if rtrim($E.SepOfferCd, ' ') = '1B'
           or rtrim($E.SepOfferCd, ' ') = '1C'
           or rtrim($E.SepOfferCd, ' ') = '1D'
           or rtrim($E.SepOfferCd, ' ') = '1E'
           or rtrim($E.SepOfferCd, ' ') = '1J'
           or rtrim($E.SepOfferCd, ' ') = '1K'
          let $SepAmountFlag = 'Y'
        end-if

        if rtrim($E.OctOfferCd, ' ') = '1B'
           or rtrim($E.OctOfferCd, ' ') = '1C'
           or rtrim($E.OctOfferCd, ' ') = '1D'
           or rtrim($E.OctOfferCd, ' ') = '1E'
           or rtrim($E.OctOfferCd, ' ') = '1J'
           or rtrim($E.OctOfferCd, ' ') = '1K'
          let $OctAmountFlag = 'Y'
        end-if

        if rtrim($E.NovOfferCd, ' ') = '1B'
           or rtrim($E.NovOfferCd, ' ') = '1C'
           or rtrim($E.NovOfferCd, ' ') = '1D'
           or rtrim($E.NovOfferCd, ' ') = '1E'
           or rtrim($E.NovOfferCd, ' ') = '1J'
           or rtrim($E.NovOfferCd, ' ') = '1K'
          let $NovAmountFlag = 'Y'
        end-if

        if rtrim($E.DecOfferCd, ' ') = '1B'
           or rtrim($E.DecOfferCd, ' ') = '1C'
           or rtrim($E.DecOfferCd, ' ') = '1D'
           or rtrim($E.DecOfferCd, ' ') = '1E'
           or rtrim($E.DecOfferCd, ' ') = '1J'
           or rtrim($E.DecOfferCd, ' ') = '1K'
          let $DecAmountFlag = 'Y'
        end-if
        break
      when = '2020'
        if rtrim($E.JanOfferCd, ' ') = '1B'
           or rtrim($E.JanOfferCd, ' ') = '1C'
           or rtrim($E.JanOfferCd, ' ') = '1D'
           or rtrim($E.JanOfferCd, ' ') = '1E'
           or rtrim($E.JanOfferCd, ' ') = '1J'
           or rtrim($E.JanOfferCd, ' ') = '1K'
          let $JanAmountFlag = 'Y'
        end-if

        if rtrim($E.FebOfferCd, ' ') = '1B'
           or rtrim($E.FebOfferCd, ' ') = '1C'
           or rtrim($E.FebOfferCd, ' ') = '1D'
           or rtrim($E.FebOfferCd, ' ') = '1E'
           or rtrim($E.FebOfferCd, ' ') = '1J'
           or rtrim($E.FebOfferCd, ' ') = '1K'
          let $FebAmountFlag = 'Y'
        end-if

        if rtrim($E.MarOfferCd, ' ') = '1B'
           or rtrim($E.MarOfferCd, ' ') = '1C'
           or rtrim($E.MarOfferCd, ' ') = '1D'
           or rtrim($E.MarOfferCd, ' ') = '1E'
           or rtrim($E.MarOfferCd, ' ') = '1J'
           or rtrim($E.MarOfferCd, ' ') = '1K'
          let $MarAmountFlag = 'Y'
        end-if

        if rtrim($E.AprOfferCd, ' ') = '1B'
           or rtrim($E.AprOfferCd, ' ') = '1C'
           or rtrim($E.AprOfferCd, ' ') = '1D'
           or rtrim($E.AprOfferCd, ' ') = '1E'
           or rtrim($E.AprOfferCd, ' ') = '1J'
           or rtrim($E.AprOfferCd, ' ') = '1K'
          let $AprAmountFlag = 'Y'
        end-if

        if rtrim($E.MayOfferCd, ' ') = '1B'
           or rtrim($E.MayOfferCd, ' ') = '1C'
           or rtrim($E.MayOfferCd, ' ') = '1D'
           or rtrim($E.MayOfferCd, ' ') = '1E'
           or rtrim($E.MayOfferCd, ' ') = '1J'
           or rtrim($E.MayOfferCd, ' ') = '1K'
          let $MayAmountFlag = 'Y'
        end-if

        if rtrim($E.JunOfferCd, ' ') = '1B'
           or rtrim($E.JunOfferCd, ' ') = '1C'
           or rtrim($E.JunOfferCd, ' ') = '1D'
           or rtrim($E.JunOfferCd, ' ') = '1E'
           or rtrim($E.JunOfferCd, ' ') = '1J'
           or rtrim($E.JunOfferCd, ' ') = '1K'
          let $JunAmountFlag = 'Y'
        end-if

        if rtrim($E.JulOfferCd, ' ') = '1B'
           or rtrim($E.JulOfferCd, ' ') = '1C'
           or rtrim($E.JulOfferCd, ' ') = '1D'
           or rtrim($E.JulOfferCd, ' ') = '1E'
           or rtrim($E.JulOfferCd, ' ') = '1J'
           or rtrim($E.JulOfferCd, ' ') = '1K'
          let $JulAmountFlag = 'Y'
        end-if

        if rtrim($E.AugOfferCd, ' ') = '1B'
           or rtrim($E.AugOfferCd, ' ') = '1C'
           or rtrim($E.AugOfferCd, ' ') = '1D'
           or rtrim($E.AugOfferCd, ' ') = '1E'
           or rtrim($E.AugOfferCd, ' ') = '1J'
           or rtrim($E.AugOfferCd, ' ') = '1K'
          let $AugAmountFlag = 'Y'
        end-if

        if rtrim($E.SepOfferCd, ' ') = '1B'
           or rtrim($E.SepOfferCd, ' ') = '1C'
           or rtrim($E.SepOfferCd, ' ') = '1D'
           or rtrim($E.SepOfferCd, ' ') = '1E'
           or rtrim($E.SepOfferCd, ' ') = '1J'
           or rtrim($E.SepOfferCd, ' ') = '1K'
          let $SepAmountFlag = 'Y'
        end-if

        if rtrim($E.OctOfferCd, ' ') = '1B'
           or rtrim($E.OctOfferCd, ' ') = '1C'
           or rtrim($E.OctOfferCd, ' ') = '1D'
           or rtrim($E.OctOfferCd, ' ') = '1E'
           or rtrim($E.OctOfferCd, ' ') = '1J'
           or rtrim($E.OctOfferCd, ' ') = '1K'
          let $OctAmountFlag = 'Y'
        end-if

        if rtrim($E.NovOfferCd, ' ') = '1B'
           or rtrim($E.NovOfferCd, ' ') = '1C'
           or rtrim($E.NovOfferCd, ' ') = '1D'
           or rtrim($E.NovOfferCd, ' ') = '1E'
           or rtrim($E.NovOfferCd, ' ') = '1J'
           or rtrim($E.NovOfferCd, ' ') = '1K'
          let $NovAmountFlag = 'Y'
        end-if

        if rtrim($E.DecOfferCd, ' ') = '1B'
           or rtrim($E.DecOfferCd, ' ') = '1C'
           or rtrim($E.DecOfferCd, ' ') = '1D'
           or rtrim($E.DecOfferCd, ' ') = '1E'
           or rtrim($E.DecOfferCd, ' ') = '1J'
           or rtrim($E.DecOfferCd, ' ') = '1K'
          let $DecAmountFlag = 'Y'
        end-if

        if rtrim($E.JanOfferCd, ' ') = '1L'
           or rtrim($E.JanOfferCd, ' ') = '1M'
           or rtrim($E.JanOfferCd, ' ') = '1N'
           or rtrim($E.JanOfferCd, ' ') = '1O'
           or rtrim($E.JanOfferCd, ' ') = '1P'
           or rtrim($E.JanOfferCd, ' ') = '1Q'
          let $JanAmountFlag = 'Y'
          let $JanZIPFlag = 'Y'
        end-if

        if rtrim($E.FebOfferCd, ' ') = '1L'
           or rtrim($E.FebOfferCd, ' ') = '1M'
           or rtrim($E.FebOfferCd, ' ') = '1N'
           or rtrim($E.FebOfferCd, ' ') = '1O'
           or rtrim($E.FebOfferCd, ' ') = '1P'
           or rtrim($E.FebOfferCd, ' ') = '1Q'
          let $FebAmountFlag = 'Y'
          let $FebZIPFlag = 'Y'
        end-if

        if rtrim($E.MarOfferCd, ' ') = '1L'
           or rtrim($E.MarOfferCd, ' ') = '1M'
           or rtrim($E.MarOfferCd, ' ') = '1N'
           or rtrim($E.MarOfferCd, ' ') = '1O'
           or rtrim($E.MarOfferCd, ' ') = '1P'
           or rtrim($E.MarOfferCd, ' ') = '1Q'
          let $MarAmountFlag = 'Y'
          let $MarZIPFlag = 'Y'
        end-if

        if rtrim($E.AprOfferCd, ' ') = '1L'
           or rtrim($E.AprOfferCd, ' ') = '1M'
           or rtrim($E.AprOfferCd, ' ') = '1N'
           or rtrim($E.AprOfferCd, ' ') = '1O'
           or rtrim($E.AprOfferCd, ' ') = '1P'
           or rtrim($E.AprOfferCd, ' ') = '1Q'
          let $AprAmountFlag = 'Y'
          let $AprZIPFlag = 'Y'
        end-if

        if rtrim($E.MayOfferCd, ' ') = '1L'
           or rtrim($E.MayOfferCd, ' ') = '1M'
           or rtrim($E.MayOfferCd, ' ') = '1N'
           or rtrim($E.MayOfferCd, ' ') = '1O'
           or rtrim($E.MayOfferCd, ' ') = '1P'
           or rtrim($E.MayOfferCd, ' ') = '1Q'
          let $MayAmountFlag = 'Y'
          let $MayZIPFlag = 'Y'
        end-if

        if rtrim($E.JunOfferCd, ' ') = '1L'
           or rtrim($E.JunOfferCd, ' ') = '1M'
           or rtrim($E.JunOfferCd, ' ') = '1N'
           or rtrim($E.JunOfferCd, ' ') = '1O'
           or rtrim($E.JunOfferCd, ' ') = '1P'
           or rtrim($E.JunOfferCd, ' ') = '1Q'
          let $JunAmountFlag = 'Y'
          let $JunZIPFlag = 'Y'
        end-if

        if rtrim($E.JulOfferCd, ' ') = '1L'
           or rtrim($E.JulOfferCd, ' ') = '1M'
           or rtrim($E.JulOfferCd, ' ') = '1N'
           or rtrim($E.JulOfferCd, ' ') = '1O'
           or rtrim($E.JulOfferCd, ' ') = '1P'
           or rtrim($E.JulOfferCd, ' ') = '1Q'
          let $JulAmountFlag = 'Y'
          let $JulZIPFlag = 'Y'
        end-if

        if rtrim($E.AugOfferCd, ' ') = '1L'
           or rtrim($E.AugOfferCd, ' ') = '1M'
           or rtrim($E.AugOfferCd, ' ') = '1N'
           or rtrim($E.AugOfferCd, ' ') = '1O'
           or rtrim($E.AugOfferCd, ' ') = '1P'
           or rtrim($E.AugOfferCd, ' ') = '1Q'
          let $AugAmountFlag = 'Y'
          let $AugZIPFlag = 'Y'
        end-if

        if rtrim($E.SepOfferCd, ' ') = '1L'
           or rtrim($E.SepOfferCd, ' ') = '1M'
           or rtrim($E.SepOfferCd, ' ') = '1N'
           or rtrim($E.SepOfferCd, ' ') = '1O'
           or rtrim($E.SepOfferCd, ' ') = '1P'
           or rtrim($E.SepOfferCd, ' ') = '1Q'
          let $SepAmountFlag = 'Y'
          let $SepZIPFlag = 'Y'
        end-if

        if rtrim($E.OctOfferCd, ' ') = '1L'
           or rtrim($E.OctOfferCd, ' ') = '1M'
           or rtrim($E.OctOfferCd, ' ') = '1N'
           or rtrim($E.OctOfferCd, ' ') = '1O'
           or rtrim($E.OctOfferCd, ' ') = '1P'
           or rtrim($E.OctOfferCd, ' ') = '1Q'
          let $OctAmountFlag = 'Y'
          let $OctZIPFlag = 'Y'
        end-if

        if rtrim($E.NovOfferCd, ' ') = '1L'
           or rtrim($E.NovOfferCd, ' ') = '1M'
           or rtrim($E.NovOfferCd, ' ') = '1N'
           or rtrim($E.NovOfferCd, ' ') = '1O'
           or rtrim($E.NovOfferCd, ' ') = '1P'
           or rtrim($E.NovOfferCd, ' ') = '1Q'
          let $NovAmountFlag = 'Y'
          let $NovZIPFlag = 'Y'
        end-if

        if rtrim($E.DecOfferCd, ' ') = '1L'
           or rtrim($E.DecOfferCd, ' ') = '1M'
           or rtrim($E.DecOfferCd, ' ') = '1N'
           or rtrim($E.DecOfferCd, ' ') = '1O'
           or rtrim($E.DecOfferCd, ' ') = '1P'
           or rtrim($E.DecOfferCd, ' ') = '1Q'
          let $DecAmountFlag = 'Y'
          let $DecZIPFlag = 'Y'
        end-if
        break
    end-evaluate
  end-if

end-procedure


begin-procedure XMIT-DepBen-Data

  do XML-Open-Tag('CoveredIndividualGrp', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  do XML-Open-Tag('CoveredIndividualName', $openTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $openTag3)

  ! Covered Individual(s)
  evaluate $ACA_Calendar_Year
    when = '2015'
      let $PersonFirstNm_Xmit = $PersonFirstNm
      let $PersonMiddleNm_Xmit = substr($PersonMiddleNm, 1, 1)
      let $PersonLastNm_Xmit = $PersonLastNm
      break
    when-other
      let $PersonFirstNm_Xmit = substr($PersonFirstNm, 1, 20)
      let $PersonMiddleNm_Xmit = substr($PersonMiddleNm, 1, 20)
      let $PersonLastNm_Xmit = substr($PersonLastNm, 1, 20)
      break
  end-evaluate
  let $SuffixNm_Xmit = $SuffixNm

  do Build-XML-Line('PersonFirstNm', $PersonFirstNm_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if rtrim($PersonMiddleNm_Xmit, ' ') <> ''
    do Build-XML-Line('PersonMiddleNm', $PersonMiddleNm_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do Build-XML-Line('PersonLastNm', $PersonLastNm_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)

  if rtrim($SuffixNm_Xmit, ' ') <> ''
    do Build-XML-Line('SuffixNm', $SuffixNm_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  do XML-Close-Tag('CoveredIndividualName', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

  if rtrim($PersonNameControlTxt, ' ') <> ''
    do Build-XML-Line('PersonNameControlTxt', $PersonNameControlTxt, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if rtrim($D.TINRequestTypeCd, ' ') <> ''
    do Build-XML-Line('TINRequestTypeCd', $D.TINRequestTypeCd, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
  end-if

  if rtrim($CoveredIndividualSSNOrig, ' ') <> ''
    do Build-XML-Line('SSN', $CoveredIndividualSSNOrig, 'Y', #FNum3, 0, 'N', $nsPrefix_3)
  else
    if rtrim($CoveredIndividualDOB, ' ') <> ''
      do Build-XML-Line('BirthDt', $CoveredIndividualDOB, 'Y', #FNum3, 0, 'N', $nsPrefix_2)
    end-if
  end-if

  move ''  to $CoveredIndividualAnnualInd1_Xmit
  move ''  to $JanInd_Xmit
  move ''  to $FebInd_Xmit
  move ''  to $MarInd_Xmit
  move ''  to $AprInd_Xmit
  move ''  to $MayInd_Xmit
  move ''  to $JunInd_Xmit
  move ''  to $JulInd_Xmit
  move ''  to $AugInd_Xmit
  move ''  to $SepInd_Xmit
  move ''  to $OctInd_Xmit
  move ''  to $NovInd_Xmit
  move ''  to $DecInd_Xmit

  if rtrim($DependentBenef, ' ') <> ''
    move $CoveredIndividualAnnualInd1  to $CoveredIndividualAnnualInd_Xmit

    if rtrim($JanInd, ' ') <> ''
      move $JanInd to $JanInd_Xmit
    end-if

    if rtrim($FebInd, ' ') <> ''
      move $FebInd to $FebInd_Xmit
    end-if

    if rtrim($MarInd, ' ') <> ''
      move $MarInd to $MarInd_Xmit
    end-if

    if rtrim($AprInd, ' ') <> ''
      move $AprInd to $AprInd_Xmit
    end-if

    if rtrim($MayInd, ' ') <> ''
      move $MayInd to $MayInd_Xmit
    end-if

    if rtrim($JunInd, ' ') <> ''
      move $JunInd to $JunInd_Xmit
    end-if

    if rtrim($JulInd, ' ') <> ''
      move $JulInd to $JulInd_Xmit
    end-if

    if rtrim($AugInd, ' ') <> ''
      move $AugInd to $AugInd_Xmit
    end-if

    if rtrim($SepInd, ' ') <> ''
      move $SepInd to $SepInd_Xmit
    end-if

    if rtrim($OctInd, ' ') <> ''
      move $OctInd to $OctInd_Xmit
    end-if

    if rtrim($NovInd, ' ') <> ''
      move $NovInd to $NovInd_Xmit
    end-if

    if rtrim($DecInd, ' ') <> ''
      move $DecInd to $DecInd_Xmit
    end-if
  end-if

  if rtrim($CoveredIndividualAnnualInd_Xmit, ' ') <> ''
    do Build-XML-Line('CoveredIndividualAnnualInd', $CoveredIndividualAnnualInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
  end-if

  if $ACA_Calendar_Year = '2015'
     or $ACA_Calendar_Year = '2016'
     or ($ACA_Calendar_Year = '2017'
         and rtrim($CoveredIndividualAnnualInd_Xmit, ' ') = '')
     or ($ACA_Calendar_Year = '2018'
         and rtrim($CoveredIndividualAnnualInd_Xmit, ' ') = '')
     or ($ACA_Calendar_Year = '2019'
         and rtrim($CoveredIndividualAnnualInd_Xmit, ' ') = '')
     or ($ACA_Calendar_Year = '2020'
         and rtrim($CoveredIndividualAnnualInd_Xmit, ' ') = '')
    if rtrim($JanInd_Xmit, ' ') <> ''
       or rtrim($FebInd_Xmit, ' ') <> ''
       or rtrim($MarInd_Xmit, ' ') <> ''
       or rtrim($AprInd_Xmit, ' ') <> ''
       or rtrim($MayInd_Xmit, ' ') <> ''
       or rtrim($JunInd_Xmit, ' ') <> ''
       or rtrim($JulInd_Xmit, ' ') <> ''
       or rtrim($AugInd_Xmit, ' ') <> ''
       or rtrim($SepInd_Xmit, ' ') <> ''
       or rtrim($OctInd_Xmit, ' ') <> ''
       or rtrim($NovInd_Xmit, ' ') <> ''
       or rtrim($DecInd_Xmit, ' ') <> ''

      do XML-Open-Tag('CoveredIndividualMonthlyIndGrp', $openTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $openTag3)

      ! Months of Coverage
      if rtrim($JanInd_Xmit, ' ') <> ''
        do Build-XML-Line('JanuaryInd', $JanInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($FebInd_Xmit, ' ') <> ''
        do Build-XML-Line('FebruaryInd', $FebInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($MarInd_Xmit, ' ') <> ''
        do Build-XML-Line('MarchInd', $MarInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($AprInd_Xmit, ' ') <> ''
        do Build-XML-Line('AprilInd', $AprInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($MayInd_Xmit, ' ') <> ''
        do Build-XML-Line('MayInd', $MayInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($JunInd_Xmit, ' ') <> ''
        do Build-XML-Line('JuneInd', $JunInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($JulInd_Xmit, ' ') <> ''
        do Build-XML-Line('JulyInd', $JulInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($AugInd_Xmit, ' ') <> ''
        do Build-XML-Line('AugustInd', $AugInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($SepInd_Xmit, ' ') <> ''
        do Build-XML-Line('SeptemberInd', $SepInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($OctInd_Xmit, ' ') <> ''
        do Build-XML-Line('OctoberInd', $OctInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($NovInd_Xmit, ' ') <> ''
        do Build-XML-Line('NovemberInd', $NovInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      if rtrim($DecInd_Xmit, ' ') <> ''
        do Build-XML-Line('DecemberInd', $DecInd_Xmit, 'Y', #FNum3, 0, 'N', $nsPrefix_1)
      end-if

      do XML-Close-Tag('CoveredIndividualMonthlyIndGrp', $closeTag3, $nsPrefix_1)
      do Write-XML-Line(#Fnum3, $closeTag3)
    end-if
  end-if

  do XML-Close-Tag('CoveredIndividualGrp', $closeTag3, $nsPrefix_1)
  do Write-XML-Line(#Fnum3, $closeTag3)

end-procedure
