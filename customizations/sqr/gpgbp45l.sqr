!***********************************************************************
!  GPGBP45L.SQR - EMPLOYEE LEAVING WORK P45   - LASER landscape        *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:04:05:33                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!  Date         Modification
!  ----         ------------
!  06/2001      8.8 Enhancements + adjustments
!  08/2001      Change P45 Reporting values
!  08/2002      Adjustments: SL continuity, Print Tax Basis
!  06/2003      Date Format in Oracle + Date of Decease
!  07/2003      Laser Landscape
!  11/2003      Change report stucture   (based on 'LETTER' page-size)
!  03/2004      NINO Temporay numbers
!  08/2004      8.9 New Dev - Changed to read file generated by
!               GPGB_P45 Application Engine Program
!
!*=================================================================

!******************************************************************
!*** Setting up the environment
!******************************************************************

#include 'setenv.sqc'   ! Set environment
#include 'gpgbp45.sqc'  ! Set P45 file path
#include 'setup31.sqc'  ! Printer and page-size initialization

!******************************************************************
!*** Constants definitions
!******************************************************************
!Define Column Location Variables

#define PageLength              170
#define PosStart                 1
#define Pos1                    70
#define PosOfficeRef            55
#define Col01        14
#define Col02        17
#define Col03        19
#define Col04        21
#define Col05        23
#define Col06        25
#define Col07        27
#define Col08        30
#define Col09        35
#define Col22        74
#define Col22a       73
#define Col22b       73
#define Col23        89 
#define Col23a       87 
#define Col24        91
#define Col24a       90
#define Col25        112
#define Col25a       110
#define Col26        82
#define Col27        121
#define xReg          -3
#define yReg          0

!******************************************************************
!***    Begin Report Section
!******************************************************************


begin-report

      SHOW 'P45 Laser Version'

        !----------------------------------------------------------
        !***    ! SHOW timedate of the beginning
        !----------------------------------------------------------

        let $Time_Begin = edit(datenow(), 'DD/MM/YYYY HH24:MI:SS')

      show 'Time Program Began = ' $Time_Begin

        !----------------------------------------------------------
        !***    Call the main procedures
        !----------------------------------------------------------

        do INIT-REPORT
        do MAIN-REPORT

        !----------------------------------------------------------
        !***    SHOW informations
        !----------------------------------------------------------
        move #CountError to $CountError 99999

      SHOW 'CountError  ==> ' noline
      SHOW $CountError
      SHOW ' '

        !----------------------------------------------------------
        !***    SHOW timedate of the end
        !----------------------------------------------------------
        !let $Time_Ended = edit(datenow(), 'DD/MM/YYYY HH24:MI:SS')
        !show 'Time Program Ended = ' $Time_Ended
end-report



!******************************************************************
! I N I T I A L I Z E   A N D / O R   G E T    V A R I A B L E S
!******************************************************************
!*=================================================================
! Procedure     :INIT-REPORT
! Comment       :This procedure performs the application
!                initializations formats variables for use, and
!                calls the procedures to get input parameters.
!*=================================================================


begin-procedure INIT-REPORT

        let $ProcedureName      = 'INIT-REPORT'

      SHOW 'PROCEDURE->' $ProcedureName

        do INIT-DATETIME
        do INIT-NUMBER
        do INIT-VARIABLES
        do DEFINE-PRCS-VARS
        do GET-RUN-CONTROL-PARMS
        do GET-CURRENT-DATETIME

        if isnull($prcs_process_instance)

              SHOW 'Running P45 SQR'

                do ASK-VALUES !SQR not run through process scheduler
        else

              SHOW 'Running P45.SQR in the Process Scheduler'

                do GET-VALUES !SQR run through process scheduler
        end-if


        let $ReportID    = 'P45'
        let $ReportTitle = 'Employee Leaving Work'

      SHOW  ' '
      show $ReportID  ' '      $ReportTitle
      SHOW ' '
      show    'Operator ID: ' $Prcs_OprID  ' ' $Prcs_Run_Cntl_ID
      SHOW ' '

        let #Col01 = {Col01} 
        let #Col02 = {Col02} 
        let #Col03 = {Col03} 
        let #Col04 = {Col04}
        let #Col05 = {Col05} 
        let #Col06 = {Col06} 
        let #Col07 = {Col07} 
        let #Col08 = {Col08} 
        let #Col09 = {Col09} 
        let #Col22 = {Col22} 
        let #Col22a = {Col22a} 
        let #Col22b ={Col22b}
        let #Col23 = {Col23} 
        let #Col23a = {Col23a}        
        let #Col24 = {Col24} 
        let #Col24a = {Col24a} 
        let #Col25 = {Col25} 
        let #Col25a = {Col25a} 
        let #Col26 = {Col26}
        let #Col27 = {Col27}
end-procedure INIT-REPORT



!*=================================================================
! Procedure    :INIT-VARIABLES
! Comment      :Initializations of all varaibles used by the report
!*=================================================================


begin-procedure INIT-VARIABLES

        let $ProcedureName      = 'INIT-VARIABLES'
        LET #CountError         = 0
end-procedure INIT-VARIABLES



!*=================================================================
! Procedure   :ASK-VALUES
! Comment     :This procedure prompts the user for those variable
!              values that will be used throughout the report.
!              ASK-VALUES is called when the user is not using
!              the process scheduler. This procedure calls whatever
!              procedures are needed. (eg. do ASK-FROM-THRU-DATE).
!*=================================================================


begin-procedure ASK-VALUES

        let $ProcedureName      = 'ASK-VALUES'

        !*---------------------------------------------------------
        !***    Enter P45 File Name and File Path output by AE Program
        !*---------------------------------------------------------
        !input $PNL_P45_FILENAME 'Enter P45 File Name'
        !input $PNL_P45_FILEPATH 'Enter P45 File Path'
end-procedure ASK-VALUES



!*=================================================================
! Procedure     :GET-VALUES
! Comment       :This procedure gets the variable name (beginning
!                with a $) that will be used throughout the report
!                using the run control parameters called in
!                GET-RUN-CONTROL-PARMS.
!*=================================================================


begin-procedure GET-VALUES

        let $ProcedureName      = 'GET-VALUES'

begin-SELECT on-error=SQL-ERROR   !SELECTS THE DATA FROM THE PANEL
RUNDB.GPGB_FILE_PATH
RUNDB.GPGB_FILE_NAME

          LET $PNL_P45_FILEPATH       = RTRIM(&RUNDB.GPGB_FILE_PATH,' ')
          LET $PNL_P45_FILENAME       = RTRIM(&RUNDB.GPGB_FILE_NAME,' ')

          FROM  PS_GPGB_RUNCTL_P45 RUNDB

          WHERE RUNDB.OPRID         = $Prcs_OprID
          AND RUNDB.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

        #ifdef debug_x
        display 'Exiting GPGBP45.SQR: GET-VALUES'
        #end-if
end-procedure GET-VALUES



!******************************************************************
!           S T A R T   O F   T H E   R E P O R T
!******************************************************************
!*=================================================================
! Procedure     : MAIN REPORT                                     !
! Descr         : This procedure is the main procedure of the     !
!                 report and calls other procedures               !
!                                                                 !
!*=================================================================


begin-procedure MAIN-REPORT

        let $ProcedureName      = 'MAIN-REPORT'

      SHOW 'PROCEDURE->' $ProcedureName

        if $PNL_P45_FILEPATH <= ' '

                LET $FileID = '{GPGBIMPORTPREFIX}' || $PNL_P45_FILENAME
        else

                LET $FileID = $PNL_P45_FILEPATH || $PNL_P45_FILENAME
        end-if 

        open $FileID as 1 for-reading record=824 status=#filestat

        if #filestat != 0
                display $PNL_P45_FILEPATH noline
                display $PNL_P45_FILENAME noline
                display ' not found '
                display ' '
        else

                DO PROCESS-FILE
        end-if


        DO UPDATE-PRCS-RUN-STATUS
end-procedure MAIN-REPORT



!*=================================================================
! Procedure:  DO-PROCESS-FILE                                     !
! Descr:      Reads file and Prints P45 Report per Employee       !
!*=================================================================


begin-procedure PROCESS-FILE

        let $ProcedureName      = 'DO-PROCESS-FILE'

      SHOW 'PROCEDURE->' $ProcedureName
        while 1
        read 1 into
        $PYENT_TAXNUM:3
        $PYENT_PAYE_REF:10
        $NI_NUMBER:20
        $PERS_DT_nameprefix:4
        $PERS_DT_surname:30
        $PERS_DT_FORENAME:30
        $PERS_DT_MIDDLENAME:30
        $TERMINATION_DT:10
        $EE_STLOAN_IND:1
        $TAXCODE:6
        $TAX_BASIS:1
        $FREQUENCY_P45:5
        $TAX_PERIOD:3
        $VALP45_PAY:10
        $VALP45_TAX:10
        $VAL3:10
        $VAL7Y:10
        $EMPLID:11
        $ST_EMPL_RCD:3
        $DEPTID_P45:10
        $EE_ADDRESS1:55
        $EE_ADDRESS2:55
        $EE_ADDRESS3:55
        $EE_CITY:30
        $EE_COUNTY:6
        $EE_POSTAL:12
        $EE_Country:3
        $EE_COUNTRY_Descr:30
        $PYENT_NAME:36
        $PYENT_Descr:30
        $PYENT_Addr1:55
        $PYENT_Addr2:55
        $PYENT_Addr3:55
        $PYENT_City:30
        $PYENT_County:6
        $PYENT_PostCode:12
        $PYENT_Country:3
        $PYENT_Country_DESCR:30
        $Date:10
        $EE_DIED_IND:1
        $P45_PRINTED:1
        $CAL_RUN_ID:18
        $BIRTHDATE:10  
        $SEX:1

        LET $PYENT_PAYE_REF = RTRIM($PYENT_PAYE_REF, ' ')
        LET $PERS_DT_nameprefix = RTRIM($PERS_DT_nameprefix, ' ')
        LET $PERS_DT_surname = RTRIM($PERS_DT_surname, ' ')
        LET $PERS_DT_FORENAME = RTRIM($PERS_DT_FORENAME, ' ')
        LET $PERS_DT_MIDDLENAME = RTRIM($PERS_DT_MIDDLENAME, ' ')
        LET $PERS_DT_forenames = $PERS_DT_FORENAME || ' ' || $PERS_DT_MIDDLENAME
        LET $TAXCODE = RTRIM($TAXCODE, ' ')
        LET $FREQUENCY_P45 = RTRIM($FREQUENCY_P45, ' ')
        LET $TAX_PERIOD = RTRIM($TAX_PERIOD, ' ')
        LET $EMPLID = RTRIM($EMPLID, ' ')
        LET $DEPTID_P45 = RTRIM($DEPTID_P45, ' ')
        LET $EE_ADDRESS1 = RTRIM($EE_ADDRESS1, ' ')
        LET $EE_ADDRESS2 = RTRIM($EE_ADDRESS2, ' ')
        LET $EE_ADDRESS3 = RTRIM($EE_ADDRESS3, ' ')
        LET $EE_CITY = RTRIM($EE_CITY, ' ')
        LET $EE_COUNTY = RTRIM($EE_COUNTY, ' ')
        LET $EE_POSTAL = RTRIM($EE_POSTAL, ' ')
        LET $EE_COUNTRY_Descr = RTRIM($EE_COUNTRY_Descr, ' ')
        LET $PYENT_NAME = RTRIM($PYENT_NAME, ' ')
        LET $PYENT_Descr = RTRIM($PYENT_Descr, ' ')
        LET $PYENT_Addr1 = RTRIM($PYENT_Addr1, ' ')
        LET $PYENT_Addr2 = RTRIM($PYENT_Addr2, ' ')
        LET $PYENT_Addr3 = RTRIM($PYENT_Addr3, ' ')
        LET $PYENT_City = RTRIM($PYENT_City, ' ')
        LET $PYENT_County = RTRIM($PYENT_County, ' ')
        LET $PYENT_PostCode = RTRIM($PYENT_PostCode, ' ')
        LET $PYENT_Country_DESCR = RTRIM($PYENT_Country_DESCR, ' ')
        LET $BIRTHDATE = RTRIM($BIRTHDATE,' ')
        LET #PYENT_TAXNUM = to_number($PYENT_TAXNUM)
        LET #VALP45_PAY   = to_number($VALP45_PAY)/100
        LET #VALP45_TAX   = to_number($VALP45_TAX)/100
        LET #VAL3         = to_number($VAL3)/100
        LET #VAL7Y        = to_number($VAL7Y)/100
        LET #ST_EMPL_RCD  = to_number($ST_EMPL_RCD)

        if #end-file
                break
        end-if


        IF Substr($NI_NUMBER,1,2) <> 'TN'

                LET $NI = $NI_NUMBER
        ELSE

                LET $NI = ' '
        END-IF


        LET $TERM_DT = RTRIM($TERMINATION_DT, ' ')
        LET $DT_ISSUED = RTRIM($Date, ' ') 
        ALTER-PRINTER font=4 POINT-SIZE=9

        LET #PAGE=1

        DO PRINT-REPORT
        NEW-PAGE

        LET #PAGE=2

        DO PRINT-REPORT2
        NEW-PAGE

        LET #PAGE=3

        DO PRINT-REPORT3
        NEW-PAGE

        LET #PAGE=4

        DO PRINT-REPORT4
        NEW-PAGE
        end-while
        close 1
end-procedure DO PROCESS-FILE


!*=================================================================
! Procedure: PRINT-REPORT                                         !
! Descr:     Prints P45 Employee information                      !
!                                                                 !
!*=================================================================

begin-procedure PRINT-REPORT

        LET $ProcedureName = 'PRINT-REPORT'
        SHOW 'PROCEDURE->' $ProcedureName

   
   print #PYENT_TAXNUM                   ( 13,#Col01)     edit 009
   print $PYENT_PAYE_REF                 (   ,#Col07)
   Let $NI1 = substr($NI,1,2)
   Let $NI2 = substr($NI,3,2)
   Let $NI3 = substr($NI,5,2)
   Let $NI4 = substr($NI,7,2)
   Let $NI5 = substr($NI,9,(length($NI)-9)+1)
    let $NI1=$NI1 ||$NI2 ||$NI3||$NI4 ||$NI5
   print $NI1                            ( 18,#Col01)
  
   print $PERS_DT_nameprefix             ( 23 ,#Col01)
   
    Let $Surname = Upper($PERS_DT_Surname)
    print $Surname                        ( 27,#Col01)
   Let $Forenames = Upper($PERS_DT_forenames)
   print $Forenames                      (31,#Col01)
       
   Let $TERM_DT1 = substr($TERM_DT,1,2)
   Let $TERM_DT2 = substr($TERM_DT,4,2)
   Let $TERM_DT3 = substr($TERM_DT,7,4)
   print $TERM_DT1                       (37,#Col01)
   print $TERM_DT2                       (  ,#Col04)
   print $TERM_DT3                       (  ,#Col08)
   Print $EE_STLOAN_IND                  (11,#Col22)   !Bold

   print $TAXCODE                           ( 17,#Col22)
    IF $TAX_BASIS = '1'
      Print 'X'                             ( 21 ,#Col24)
         END-IF

   ! Tax Basis Cumulative = 0 / Week1/Month1 = 1
   IF $TAX_BASIS = '0'

      If $FREQUENCY_P45 = 'W' OR $FREQUENCY_P45 = 'B' OR $FREQUENCY_P45 = 'F'
         print $TAX_PERIOD                  ( 29,#Col23a)
             Else
         print $TAX_PERIOD                  ( 29,#Col25a)
          End-If

      move #VALP45_PAY to $VALP45_PAY 999999999999.999999
      move #VALP45_TAX to $VALP45_TAX 999999999999.999999

      let $PAYPOUNDS = substr($VALP45_PAY,1,12)
      let $PAYPENCE  = substr($VALP45_PAY,14,2)
      let $TAXPOUNDS = substr($VALP45_TAX,1,12)
      let $TAXPENCE  = substr($VALP45_TAX,14,2)
      let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
      let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE  
        
      print $PAYPOUNDS                      ( 34,#Col22)
      print $TAXPOUNDS                      (38,#Col22)
      

        IF  (#VALP45_PAY <> #VAL3 AND #VALP45_TAX <> #VAL7Y)

         move #VAL3 to $VAL3 999999999999.999999
         move #VAL7Y to $VAL7Y 999999999999.999999
   
         let $PAYPOUNDS = substr($VAL3,1,12)
         let $PAYPENCE  = substr($VAL3,14,2)
         let $TAXPOUNDS = substr($VAL7Y,1,12)
         let $TAXPENCE  = substr($VAL7Y,14,2)
         let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
         let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE  
                 
         print $PAYPOUNDS                      (47,#Col01)
          print $TAXPOUNDS                      (51,#Col01)
          END-IF
          else
         move #VAL3 to $VAL3 999999999999.999999
         move #VAL7Y to $VAL7Y 999999999999.999999
   
         let $PAYPOUNDS = substr($VAL3,1,12)
         let $PAYPENCE  = substr($VAL3,14,2)
         let $TAXPOUNDS = substr($VAL7Y,1,12)
         let $TAXPENCE  = substr($VAL7Y,14,2)
         let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
         let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE  
                 
         print $PAYPOUNDS                      (47,#Col01)
         print $TAXPOUNDS                      (51,#Col01)
 End-If
         
   If length($EMPLID) < 11
      let $ST_EMPL_RCD = EDIT(#ST_EMPL_RCD,'009')     
      let $EMPLIDR = $EMPLID ||','||$ST_EMPL_RCD
      
      print $EMPLIDR                        (58,#Col01)
      print $DEPTID_P45                        (  ,#Col08)
      LET $EMPLIDR =' '
      else
      let $ST_EMPL_RCD = EDIT(#ST_EMPL_RCD,'009')     
      let $EMPLIDR = $EMPLID ||$ST_EMPL_RCD
      print $EMPLIDR                         (58,#Col01)
      print $DEPTID_P45                        (  ,#Col08)
      LET $EMPLIDR =' '
      End-if

       if $SEX='M'
       print 'X'   (64,#Col03)
        else
       print 'X'   (64,#Col09)
       end-if
    Let $BRTH_DT1 = substr($BIRTHDATE,1,2)
    Let $BRTH_DT2 = substr($BIRTHDATE,4,2)
    Let $BRTH_DT3 = substr($BIRTHDATE,7,4)
     print $BRTH_DT1                       (70,#Col01)
     print $BRTH_DT2                       (  ,#Col04)
     print $BRTH_DT3                       (  ,#Col08)

!employee address
      Let #iAddRow = 45
      If Length(rtrim($EE_ADDRESS1,' ')) > 0
      print $EE_ADDRESS1                       (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_ADDRESS2,' ')) > 0
      print $EE_ADDRESS2                       (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_ADDRESS3,' ')) > 0
      print $EE_ADDRESS3                       (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_CITY,' ')) > 0
      print $EE_CITY                           (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_County,' ')) > 0
      print $EE_County                         (#iAddRow,#Col22)
   End-If
      If $EE_COUNTRY <> 'GBR'
      Let #iAddRow = #iAddRow + 1
      print $EE_COUNTRY_Descr                  (#iAddRow,#Col22)
   End-If
    Let #iAddRow = 53
   If Length(rtrim($EE_POSTAL,' ')) > 0
      print $EE_POSTAL                         (#iAddRow,#Col22)
   End-If

  !employer address
  Let #iAddRow = 60
     If Length(rtrim($PYENT_NAME,' ')) > 0
      print $PYENT_NAME                     (#iAddRow,#Col22)
            Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($PYENT_Addr1,' ')) > 0
      print $PYENT_Addr1                    (#iAddRow,#Col22)
           Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($PYENT_Addr2,' ')) > 0
      print $PYENT_Addr2                    (#iAddRow,#Col22)
      Let #Add3Col = #Col22 + Length(rtrim($PYENT_Addr2,' ')) + 2
      print $PYENT_Addr3                    (        ,#Add3Col)
      Let #iAddRow = #iAddRow + 1      
     else
      If Length(rtrim($PYENT_Addr3,' ')) > 0
         print $PYENT_Addr3                 (#iAddRow,#Col22)
                  Let #iAddRow = #iAddRow + 1
   
   End-If
   End-If
   If Length(rtrim($PYENT_City,' ')) > 0
      print $PYENT_City                     (#iAddRow,#Col22)
          Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($PYENT_County,' ')) > 0
      print $PYENT_County                   (#iAddRow,#Col22)
     End-If
      If $PYENT_Country <> 'GBR'
      Let #iAddRow = #iAddRow + 1
      print $PYENT_Country_DESCR            (#iAddRow,#Col22)
        end-if
     Let #iAddRow = 70
      If Length(rtrim($PYENT_Postcode,' ')) > 0
      print $PYENT_Postcode                 (#iAddRow,#Col22)
        End-If


 
    Let $ISSUE_DT1 = substr($DT_ISSUED,1,2)
    Let $ISSUE_DT2 = substr($DT_ISSUED,4,2)
    Let $ISSUE_DT3 = substr($DT_ISSUED,7,4)
    
     print $ISSUE_DT1                       (74,#Col22)
     print $ISSUE_DT2                       (  ,#Col26)
     print $ISSUE_DT3                       (  ,#Col24)

   If $EE_DIED_IND = 'Y'     
   Let $EE_DIED_IND = 'D' 
   Print $EE_DIED_IND  (79, #Col27)   
   End-If   


end-procedure PRINT-REPORT


!*=================================================================
! Procedure: PRINT-REPORT2                                        !
! Descr:     Prints P45 Employee information -page2               !
!                                                                 !
!*=================================================================
begin-procedure PRINT-REPORT2

        LET $ProcedureName = 'PRINT-REPORT'
        SHOW 'PROCEDURE->' $ProcedureName

   
   print #PYENT_TAXNUM                   ( 13,#Col01)     edit 009
   print $PYENT_PAYE_REF                 (   ,#Col07)
   Let $NI1 = substr($NI,1,2)
   Let $NI2 = substr($NI,3,2)
   Let $NI3 = substr($NI,5,2)
   Let $NI4 = substr($NI,7,2)
   Let $NI5 = substr($NI,9,(length($NI)-9)+1)
   let $NI1=$NI1 ||$NI2 ||$NI3||$NI4 ||$NI5
   print $NI1                            ( 18,#Col01)
  
   print $PERS_DT_nameprefix             ( 23 ,#Col01)
   
    Let $Surname = Upper($PERS_DT_Surname)
    print $Surname                        ( 27,#Col01)
   Let $Forenames = Upper($PERS_DT_forenames)
   print $Forenames                      (31,#Col01)
       
   Let $TERM_DT1 = substr($TERM_DT,1,2)
   Let $TERM_DT2 = substr($TERM_DT,4,2)
   Let $TERM_DT3 = substr($TERM_DT,7,4)
   print $TERM_DT1                       (37,#Col01)
   print $TERM_DT2                       (  ,#Col04)
   print $TERM_DT3                       (  ,#Col08)
   Print $EE_STLOAN_IND                  (11,#Col22)   !Bold

   print $TAXCODE                           ( 17,#Col22)
    IF $TAX_BASIS = '1'
      Print 'X'                             ( 21 ,#Col24)
         END-IF

   ! Tax Basis Cumulative = 0 / Week1/Month1 = 1
  IF $TAX_BASIS = '0'

       If $FREQUENCY_P45 = 'W' OR $FREQUENCY_P45 = 'B' OR $FREQUENCY_P45 = 'F'
            print $TAX_PERIOD                  ( 29,#Col23a)
            Else
         print $TAX_PERIOD                  ( 29,#Col25a)
           End-If

      move #VALP45_PAY to $VALP45_PAY 999999999999.999999
      move #VALP45_TAX to $VALP45_TAX 999999999999.999999

      let $PAYPOUNDS = substr($VALP45_PAY,1,12)
      let $PAYPENCE  = substr($VALP45_PAY,14,2)
      let $TAXPOUNDS = substr($VALP45_TAX,1,12)
      let $TAXPENCE  = substr($VALP45_TAX,14,2)
      let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
      let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE  
        
      print $PAYPOUNDS                      ( 34,#Col22)
      print $TAXPOUNDS                      (38,#Col22)
      

        IF  (#VALP45_PAY <> #VAL3 AND #VALP45_TAX <> #VAL7Y)

         move #VAL3 to $VAL3 999999999999.999999
         move #VAL7Y to $VAL7Y 999999999999.999999
   
         let $PAYPOUNDS = substr($VAL3,1,12)
         let $PAYPENCE  = substr($VAL3,14,2)
         let $TAXPOUNDS = substr($VAL7Y,1,12)
         let $TAXPENCE  = substr($VAL7Y,14,2)
         let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
         let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE  
           
         print $PAYPOUNDS                      (47,#Col01)
           print $TAXPOUNDS                      (51,#Col01)
       
         END-IF
 else
         move #VAL3 to $VAL3 999999999999.999999
         move #VAL7Y to $VAL7Y 999999999999.999999
   
         let $PAYPOUNDS = substr($VAL3,1,12)
         let $PAYPENCE  = substr($VAL3,14,2)
         let $TAXPOUNDS = substr($VAL7Y,1,12)
         let $TAXPENCE  = substr($VAL7Y,14,2)
         let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
         let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE  
           
         print $PAYPOUNDS                      (47,#Col01)
          print $TAXPOUNDS                      (51,#Col01)


  End-If
         
      If length($EMPLID) < 11
      let $ST_EMPL_RCD = EDIT(#ST_EMPL_RCD,'009')     
      let $EMPLIDR = $EMPLID ||','||$ST_EMPL_RCD
      print $EMPLIDR                        (58,#Col01)
      print $DEPTID_P45                        (  ,#Col08)
       LET $EMPLIDR =' '
      else
      let $ST_EMPL_RCD = EDIT(#ST_EMPL_RCD,'009')     
      let $EMPLIDR = $EMPLID ||$ST_EMPL_RCD
      print $EMPLIDR                         (58,#Col01)
      print $DEPTID_P45                        (  ,#Col08)
      LET $EMPLIDR =' '
      End-if

     
       if $SEX='M'
       print 'X'   (64,#Col03)
        else
       print 'X'   (64,#Col09)
       end-if

    Let $BRTH_DT1 = substr($BIRTHDATE,1,2)
    Let $BRTH_DT2 = substr($BIRTHDATE,4,2)
    Let $BRTH_DT3 = substr($BIRTHDATE,7,4)
     print $BRTH_DT1                       (70,#Col01)
     print $BRTH_DT2                       (  ,#Col04)
     print $BRTH_DT3                       (  ,#Col08)

!employee address
      Let #iAddRow = 45
      If Length(rtrim($EE_ADDRESS1,' ')) > 0
      print $EE_ADDRESS1                       (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_ADDRESS2,' ')) > 0
      print $EE_ADDRESS2                       (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_ADDRESS3,' ')) > 0
      print $EE_ADDRESS3                       (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_CITY,' ')) > 0
      print $EE_CITY                           (#iAddRow,#Col22)
      Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($EE_County,' ')) > 0
      print $EE_County                         (#iAddRow,#Col22)
   End-If
      If $EE_COUNTRY <> 'GBR'
      Let #iAddRow = #iAddRow + 1
      print $EE_COUNTRY_Descr                  (#iAddRow,#Col22)
   End-If
    Let #iAddRow = 53
   If Length(rtrim($EE_POSTAL,' ')) > 0
      print $EE_POSTAL                         (#iAddRow,#Col22)
   End-If

  !employer address
  Let #iAddRow = 60
     If Length(rtrim($PYENT_NAME,' ')) > 0
      print $PYENT_NAME                     (#iAddRow,#Col22)
            Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($PYENT_Addr1,' ')) > 0
      print $PYENT_Addr1                    (#iAddRow,#Col22)
           Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($PYENT_Addr2,' ')) > 0
      print $PYENT_Addr2                    (#iAddRow,#Col22)
      Let #Add3Col = #Col22 + Length(rtrim($PYENT_Addr2,' ')) + 2
      print $PYENT_Addr3                    (        ,#Add3Col)
      Let #iAddRow = #iAddRow + 1      
     else
      If Length(rtrim($PYENT_Addr3,' ')) > 0
         print $PYENT_Addr3                 (#iAddRow,#Col22)
                  Let #iAddRow = #iAddRow + 1
   
   End-If
   End-If
   If Length(rtrim($PYENT_City,' ')) > 0
      print $PYENT_City                     (#iAddRow,#Col22)
          Let #iAddRow = #iAddRow + 1
   End-If
   If Length(rtrim($PYENT_County,' ')) > 0
      print $PYENT_County                   (#iAddRow,#Col22)
     End-If
      If $PYENT_Country <> 'GBR'
      Let #iAddRow = #iAddRow + 1
      print $PYENT_Country_DESCR            (#iAddRow,#Col22)
        end-if
     Let #iAddRow = 70
      If Length(rtrim($PYENT_Postcode,' ')) > 0
      print $PYENT_Postcode                 (#iAddRow,#Col22)
        End-If


 
    Let $ISSUE_DT1 = substr($DT_ISSUED,1,2)
    Let $ISSUE_DT2 = substr($DT_ISSUED,4,2)
    Let $ISSUE_DT3 = substr($DT_ISSUED,7,4)
    
     print $ISSUE_DT1                       (74,#Col22)
     print $ISSUE_DT2                       (  ,#Col26)
     print $ISSUE_DT3                       (  ,#Col24)



  end-procedure PRINT-REPORT2



!*=================================================================
! Procedure: PRINT-REPORT3                                        !
! Descr:     Prints P45 Employee information -page3               !
!                                                                 !
!*=================================================================
begin-procedure PRINT-REPORT3

        LET $ProcedureName = 'PRINT-REPORT3'
        SHOW 'PROCEDURE->' $ProcedureName


   print #PYENT_TAXNUM                   ( 13,#Col01)     edit 009
   print $PYENT_PAYE_REF                 (   ,#Col07)
   Let $NI1 = substr($NI,1,2)
   Let $NI2 = substr($NI,3,2)
   Let $NI3 = substr($NI,5,2)
   Let $NI4 = substr($NI,7,2)
   Let $NI5 = substr($NI,9,(length($NI)-9)+1)
   let $NI1=$NI1 ||$NI2 ||$NI3||$NI4 ||$NI5
   print $NI1                            ( 18,#Col01)
  
   print $PERS_DT_nameprefix             ( 23 ,#Col01)
   
    Let $Surname = Upper($PERS_DT_Surname)
    print $Surname                        ( 27,#Col01)
   Let $Forenames = Upper($PERS_DT_forenames)
   print $Forenames                      (31,#Col01)
       
   Let $TERM_DT1 = substr($TERM_DT,1,2)
   Let $TERM_DT2 = substr($TERM_DT,4,2)
   Let $TERM_DT3 = substr($TERM_DT,7,4)
   print $TERM_DT1                       (37,#Col01)
   print $TERM_DT2                       (  ,#Col04)
   print $TERM_DT3                       (  ,#Col08)
   Print $EE_STLOAN_IND                  (11,#Col22)   !Bold

   print $TAXCODE                           ( 17,#Col22)
    IF $TAX_BASIS = '1'
      Print 'X'                             ( 21 ,#Col24)
         END-IF

   ! Tax Basis Cumulative = 0 / Week1/Month1 = 1
   IF $TAX_BASIS = '0'

      If $FREQUENCY_P45 = 'W' OR $FREQUENCY_P45 = 'B' OR $FREQUENCY_P45 = 'F'
          print $TAX_PERIOD                  ( 29,#Col23a)
               Else
         print $TAX_PERIOD                  ( 29,#Col25a)
       
      End-If

      move #VALP45_PAY to $VALP45_PAY 999999999999.999999
      move #VALP45_TAX to $VALP45_TAX 999999999999.999999

      let $PAYPOUNDS = substr($VALP45_PAY,1,12)
      let $PAYPENCE  = substr($VALP45_PAY,14,2)
      let $TAXPOUNDS = substr($VALP45_TAX,1,12)
      let $TAXPENCE  = substr($VALP45_TAX,14,2)
      let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
      let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE   
      print $PAYPOUNDS                      ( 34,#Col22)
    
      print $TAXPOUNDS                      (38,#Col22)
      
     End-If
 
end-procedure PRINT-REPORT3

!*=================================================================
! Procedure: PRINT-REPORT4                                        !
! Descr:     Prints P45 Employee information-page4                !
!                                                                 !
!*=================================================================
begin-procedure PRINT-REPORT4

        LET $ProcedureName = 'PRINT-REPORT4'
        SHOW 'PROCEDURE->' $ProcedureName


   print #PYENT_TAXNUM                   ( 13,#Col01)     edit 009
   print $PYENT_PAYE_REF                 (   ,#Col07)
   Let $NI1 = substr($NI,1,2)
   Let $NI2 = substr($NI,3,2)
   Let $NI3 = substr($NI,5,2)
   Let $NI4 = substr($NI,7,2)
   Let $NI5 = substr($NI,9,(length($NI)-9)+1)
   
   let $NI1=$NI1 ||$NI2 ||$NI3||$NI4 ||$NI5
   print $NI1                            ( 18,#Col01)
     
   print $PERS_DT_nameprefix             ( 23 ,#Col01)
   
    Let $Surname = Upper($PERS_DT_Surname)
    print $Surname                        ( 27,#Col01)
   Let $Forenames = Upper($PERS_DT_forenames)
   print $Forenames                      (31,#Col01)
       
   Let $TERM_DT1 = substr($TERM_DT,1,2)
   Let $TERM_DT2 = substr($TERM_DT,4,2)
   Let $TERM_DT3 = substr($TERM_DT,7,4)
   print $TERM_DT1                       (37,#Col01)
   print $TERM_DT2                       (  ,#Col04)
   print $TERM_DT3                       (  ,#Col08)
   Print $EE_STLOAN_IND                  (11,#Col22)   !Bold

   print $TAXCODE                           ( 17,#Col22)
    IF $TAX_BASIS = '1'
      Print 'X'                             ( 21 ,#Col24)
         END-IF

   ! Tax Basis Cumulative = 0 / Week1/Month1 = 1
   IF $TAX_BASIS = '0'

      If $FREQUENCY_P45 = 'W' OR $FREQUENCY_P45 = 'B' OR $FREQUENCY_P45 = 'F'
         print $TAX_PERIOD                  ( 29,#Col23a)
               Else
         print $TAX_PERIOD                  ( 29,#Col25a)
        
    End-If

      move #VALP45_PAY to $VALP45_PAY 999999999999.999999
      move #VALP45_TAX to $VALP45_TAX 999999999999.999999

      let $PAYPOUNDS = substr($VALP45_PAY,1,12)
      let $PAYPENCE  = substr($VALP45_PAY,14,2)
      let $TAXPOUNDS = substr($VALP45_TAX,1,12)
      let $TAXPENCE  = substr($VALP45_TAX,14,2)
      let $PAYPOUNDS = $PAYPOUNDS||'.'|| $PAYPENCE 
      let $TAXPOUNDS =$TAXPOUNDS ||'.'|| $TAXPENCE 
      print $PAYPOUNDS                      ( 34,#Col22)
     
      print $TAXPOUNDS                      (38,#Col22)
     
     End-If
 
end-procedure PRINT-REPORT4


!******************************************************************
!                  G E N E R A L   F U N C T I O N S
!******************************************************************
!******************************************************************
!***    Common SQC Modules Copied In For Program Usage
!******************************************************************

#include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#include 'datetime.sqc'  ! Routines for date and time formatting
#include 'number.sqc'    ! Routines to format numbers
#include 'prcsapi.sqc'   ! Update Process Request API
#include 'prcsdef.sqc'   ! Update Process Request variable declaration
#include 'tranctrl.sqc'  ! Handle Commit/Rollback per platform
#include 'useprntr.sqc'  ! Init Printer
#include 'datemath.sqc'  ! Routines for date and time operations

!******************************* End Of Program *******************



