!**********************************************************************!
!  gpnlsyee:  Social Security Year-End Employee Report (NLD)           !
!**********************************************************************!
!**********************************************************************!
!                                                                      !
!                                                                      !
!                                                                      !
!                                                                      !
! This software and related documentation are provided under a         !
! license agreement containing restrictions on use and                 !
! disclosure and are protected by intellectual property                !
! laws. Except as expressly permitted in your license agreement        !
! or allowed by law, you may not use, copy, reproduce,                 !
! translate, broadcast, modify, license, transmit, distribute,         !
! exhibit, perform, publish or display any part, in any form or        !
! by any means. Reverse engineering, disassembly, or                   !
! decompilation of this software, unless required by law for           !
! interoperability, is prohibited.                                     !
! The information contained herein is subject to change without        !
! notice and is not warranted to be error-free. If you find any        !
! errors, please report them to us in writing.                         !
!                                                                      !
!                                                                      !
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              !
! All Rights Reserved.                                                 !
!**********************************************************************!
!                                                                      !
!          $Date:  2013/01/18:03:57:14                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define iCol1  1
#define iCol2  9
#define iCol3  30
#define iCol4  37
#define iCol5  44
#define iCol6  51
#define iCol7  62
#define iCol8  71
#define iCol9  79
#define iCol10 88
#define iCol11 97
#define iCol12 105
#define iCol12a 113
#define iCol12b 122
#define iCol13 131
#define iCol14 140
#define iCol15 148
#define iCol16 157
#define iCol17 166

#define DataLines 47

#define  COMPANY_TBL
#include 'rellang.sqc'   ! Translations File
#include 'hrctlnld.sqc'  !Get run control parameter values (NLD)

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-heading 7
  alter-printer font=1 point-size=7.2
  #Include 'stdhdgtr.sqc'
  print $PERIOD_TITLE (+1, 1)
  let $Period = ' : ' || $BEGIN_DT || ' - ' || $END_DT
  print $Period       (,)
  alter-printer font=4 point-size=5
end-heading

!***********************************************************************
!  Init-Report
!***********************************************************************
begin-procedure Init-Report
  move 'GPNLSYEE' to $ReportID

  alter-locale
   thousand-separator = '.'
   decimal-separator  = ','

  do Stdapi-Init
  let $language_cd = $PRCS_LANGUAGE_CD

  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)
  do Get_Tranlat_Info
  if $prcs_process_instance = ''
     !No Prompt
  else
     let #prcs_process_instance = To_number($prcs_process_instance)
     Do Get-values
  end-if
  do Format-DateTime(&BEGIN_DT, $BGN_Proc_Dt, {DEFCMP}, '', '')
  do Get-DateComponents($BGN_Proc_Dt, #CurrentYear,#CurrentMonth,#CurrentDate)
  let #FiscalYear = 2006
end-procedure

!***********************************************************************
!  Get-Values
!***********************************************************************
begin-procedure Get-Values

   let $sql-statement = 'gpnlsyee,Select,Get-Values (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
{DATETIMEOUT-PREFIX}BEGIN_DT{DATETIMEOUT-SUFFIX}   &BEGIN_DT
{DATETIMEOUT-PREFIX}END_DT{DATETIMEOUT-SUFFIX}     &END_DT
        Do Format-DateTime(&BEGIN_DT, $BEGIN_DT, {DEFDMY},'','')
        Do Format-DateTime(&END_DT, $END_DT, {DEFDMY},'','')
FROM PS_GPNL_RC_SOC
WHERE OPRID = $prcs_oprid
AND RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT

end-procedure

!***********************************************************************
! Get_Tranlat_Info                                                     *
!***********************************************************************

begin-procedure Get_Tranlat_Info
   do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #CW)
   do Get_Field_Information($ReportID, 'EMPLOYEE_ID', $EMPLOYEE_ID, #CW)
   do Get_Field_Information($ReportID, 'EMPLOYEE_NAME', $EMPLOYEE_NAME, #CW)
   do Get_Field_Information($ReportID, 'DATE_OF', $DATE_OF, #CW)
   do Get_Field_Information($ReportID, 'TOTAL', $TOTAL, #CW)
   do Get_Field_Information($ReportID, 'COMPANY_TITLE', $COMPANY_TITLE, #CW)
   do Get_Field_Information($ReportID, 'ESTAB_TITLE', $ESTAB_TITLE, #CW)
   do Get_Field_Information($ReportID, 'SOCSECNUM', $SOCSECNUM, #CW)
   do Get_Field_Information($ReportID, 'BIRTH', $BIRTH, #CW)
   do Get_Field_Information($ReportID, 'DAYS', $DAYS, #CW)
   do Get_Field_Information($ReportID, 'INCOME', $INCOME, #CW)
   do Get_Field_Information($ReportID, 'EMPLOYEE', $EMPLOYEE, #CW)
   do Get_Field_Information($ReportID, 'BASIS', $BASIS, #CW)
   do Get_Field_Information($ReportID, 'PERIOD_TITLE', $PERIOD_TITLE, #CW)
end-procedure

!***********************************************************************
!  Company-Before
!***********************************************************************
begin-procedure Company-Before

  let $CompDescr = ''
  let $CompAddress = ''

  let $sql-statement = 'gpnlsyee,Select,Company-Before (1)'
  let $company = &COMPANY

BEGIN-SELECT ON-ERROR = SQL-Error
ADCOMP.EFFDT
   let $Company-Effdt = &ADCOMP.EFFDT
ADCOMP.DESCR
   do Get_Related_COMPANY_TBL($Company,$Company-Effdt)
   let $CompDescr = ' ' || rtrim($COMPANY_TBL-DESCR, ' ')
   if $CompDescr = ' '
      let $CompDescr = ' ' || rtrim(&ADCOMP.DESCR,' ')
   end-if
ADCOMP.ADDRESS1
ADCOMP.ADDRESS2
ADCOMP.ADDRESS3
ADCOMP.ADDRESS4
ADCOMP.CITY
ADCOMP.NUM1
ADCOMP.NUM2
ADCOMP.POSTAL

  let $CompAddress = ' ' || rtrim(ltrim(rtrim(&ADCOMP.ADDRESS1, ' ')
                     || ' ' || rtrim(&ADCOMP.ADDRESS2, ' ')
                     || ' ' || rtrim(&ADCOMP.ADDRESS3, ' ')
                     || ' ' || rtrim(&ADCOMP.ADDRESS4, ' ')
                     || ' ' || rtrim(&ADCOMP.NUM1, ' ')
                     || ' ' || rtrim(&ADCOMP.NUM2, ' '), ' '), ' ')
                     || ' ' || rtrim(&ADCOMP.POSTAL, ' ')
                     || ' ' || rtrim(&ADCOMP.CITY, ' ')

FROM PS_COMPANY_TBL ADCOMP
WHERE ADCOMP.COMPANY = &COMPANY
AND ADCOMP.EFFDT = (
  SELECT MAX(EFFDT)
  FROM PS_COMPANY_TBL B
  WHERE B.COMPANY = ADCOMP.COMPANY
  AND B.EFFDT <= {DATETIMEIN-PREFIX}&END_DT{DATETIMEIN-SUFFIX}
)
END-SELECT

  let $Company = rtrim(&COMPANY, ' ') || ' - ' || $CompDescr
                                      || ' - ' || $CompAddress

  add 2 to #row

  if #row > {DataLines}
    let #row = 1
    NEW-PAGE
  end-if

  print $COMPANY_TITLE (#row, {iCol1}) bold
  print $Company       (, {iCol3}) bold

  let #TotCompCol5 = 0
  let #TotCompCol6 = 0
  let #TotCompCol7 = 0
  let #TotCompCol8 = 0
  let #TotCompCol9 = 0
  let #TotCompCol10 = 0
  let #TotCompCol11 = 0
  let #TotCompCol12 = 0
  let #TotCompCol12a = 0
  let #TotCompCol12b = 0
  let #TotCompCol13 = 0
  let #TotCompCol14 = 0
  let #TotCompCol15 = 0
  let #TotCompCol16 = 0
  let #TotCompCol17 = 0

end-procedure

!***********************************************************************
!  Company-After
!***********************************************************************
begin-procedure Company-After
  let $Company_Total = $TOTAL || ' ' || $COMPANY_TITLE
  add 2 to #row

  if #row > {DataLines}
    let #row = 1
    NEW-PAGE
  end-if

  print $Company_Total (#row, {iCol1}) bold
  print #TotCompCol5   (, {iCol5})  edit B,999,999
  print #TotCompCol6   (, {iCol6})  edit B,9,999,999,999
  print #TotCompCol7   (, {iCol7})  edit B,999,999,999
  print #TotCompCol8   (, {iCol8})  edit B,99,999,999
  print #TotCompCol9   (, {iCol9})  edit B,99,999,999
  print #TotCompCol10  (, {iCol10}) edit B,999,999,999
  print #TotCompCol11  (, {iCol11}) edit B,99,999,999
  print #TotCompCol12  (, {iCol12}) edit B,99,999,999
  print #TotCompCol12a (,{iCol12a}) edit B,999,999,999
  print #TotCompCol12b (,{iCol12b}) edit B,99,999,999
  print #TotCompCol13  (, {iCol13}) edit B,999,999,999
  print #TotCompCol14  (, {iCol14}) edit B,99,999,999
  print #TotCompCol15  (, {iCol15}) edit B,99,999,999
  print #TotCompCol16  (, {iCol16}) edit B,999,999,999
  print #TotCompCol17  (, {iCol17}) edit B,99,999,999
  NEW-PAGE
end-procedure


!***********************************************************************
!  Social-Security-Before
!***********************************************************************
begin-procedure Social-Security-Before

  let $SSIN = rtrim(&GPNL_SOC_NUM, ' ')

  add 2 to #row

  if #row > {DataLines}
    let #row = 1
    NEW-PAGE
  end-if

  print $SOCSECNUM   (#row, {iCol1}) bold
  print $SSIN        (, {iCol3}) bold

  let #TotSocSecCol5 = 0
  let #TotSocSecCol6 = 0
  let #TotSocSecCol7 = 0
  let #TotSocSecCol8 = 0
  let #TotSocSecCol9 = 0
  let #TotSocSecCol10 = 0
  let #TotSocSecCol11 = 0
  let #TotSocSecCol12 = 0
  let #TotSocSecCol12a = 0
  let #TotSocSecCol12b = 0
  let #TotSocSecCol13 = 0
  let #TotSocSecCol14 = 0
  let #TotSocSecCol15 = 0
  let #TotSocSecCol16 = 0
  let #TotSocSecCol17 = 0

end-procedure

!***********************************************************************
!  Social-Security-After
!***********************************************************************
begin-procedure Social-Security-After

  let $SocSec_Total = $TOTAL || ' ' || $SSIN
  add 2 to #row

  if #row > {DataLines}
    let #row = 1
    NEW-PAGE
  end-if

  print $SocSec_Total (#row, {iCol1}) bold

  print #TotSocSecCol5   (, {iCol5})  edit B,999,999
  print #TotSocSecCol6   (, {iCol6})  edit B,9,999,999,999
  print #TotSocSecCol7   (, {iCol7})  edit B,999,999,999
  print #TotSocSecCol8   (, {iCol8})  edit B,99,999,999
  print #TotSocSecCol9   (, {iCol9})  edit B,99,999,999
  print #TotSocSecCol10  (, {iCol10}) edit B,999,999,999
  print #TotSocSecCol11  (, {iCol11}) edit B,99,999,999
  print #TotSocSecCol12  (, {iCol12}) edit B,99,999,999
  print #TotSocSecCol12a (,{iCol12a}) edit B,999,999,999
  print #TotSocSecCol12b (,{iCol12b}) edit B,99,999,999
  print #TotSocSecCol13  (, {iCol13}) edit B,999,999,999
  print #TotSocSecCol14  (, {iCol14}) edit B,99,999,999
  print #TotSocSecCol15  (, {iCol15}) edit B,99,999,999
  print #TotSocSecCol16  (, {iCol16}) edit B,999,999,999
  print #TotSocSecCol17  (, {iCol17}) edit B,99,999,999

end-procedure

begin-procedure Print-Columns
 alter-printer font=4 point-size=5
  add 1 to #row

  if #row + 3 > {DataLines}
    let #row = 1
    NEW-PAGE
  end-if

  graphic                   (#row,{iCol1},177) horz-line

  print $EMPLOYEE_ID        (+1, {iCol1})
  print $EMPLOYEE_NAME      (, {iCol2})
  print 'BSN/Sofi'          (, {iCol3})
  print $DATE_OF            (, {iCol4})
  print 'SV'                (, {iCol5})
  print 'SV'                (, {iCol6})
  if #CurrentYear < #FiscalYear
    print 'ZFW'               (, {iCol7})
    print 'ZFW'               (, {iCol8})
    print 'ZFW'               (, {iCol9})
  else
    print 'ZVW'               (, {iCol7})
    print 'ZVW'               (, {iCol8})
    print 'ZVW'               (, {iCol9})
  end-if
  print 'WW1'                (, {iCol10})
  print 'WW1'                (, {iCol11})
  print 'WW1'                (, {iCol12})
  print 'WW2'                (, {iCol12a})
  print 'WW2'                (, {iCol12b})
  print 'WAO/WIA1'           (, {iCol13})
  print 'WAO/WIA'            (, {iCol14})
  print 'WAO/WIA1'           (, {iCol15})
  print 'WAO/WIA2'           (, {iCol16})
  print 'WAO/WIA2'           (, {iCol17})
  print $BIRTH              (+1, {iCol4})
  print $DAYS               (, {iCol5})
  print $INCOME             (, {iCol6})
  print $BASIS              (, {iCol7})
  print $EMPLOYEE           (, {iCol8})
  print $TOTAL              (, {iCol9})
  print $BASIS              (, {iCol10})
  print $EMPLOYEE           (, {iCol11})
  print $TOTAL              (, {iCol12})
  print $BASIS              (, {iCol12a})
  print $TOTAL              (, {iCol12b})
  print $BASIS              (, {iCol13})
  print $EMPLOYEE           (, {iCol14})
  print $TOTAL              (, {iCol15})
  print $BASIS              (, {iCol16})
  print $TOTAL              (, {iCol17})
  graphic                   (,{iCol1},177) horz-line
  add 2 to #row
end-procedure

!***********************************************************************
!  EstabId-Before
!***********************************************************************
begin-procedure EstabId-Before
  alter-printer font=4 point-size=6

  let $EstabDescr = ''

  let $sql-statement = 'gpnlsyee,Select,EstabId-Before (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
E.DESCR

  let $EstabDescr = ' ' || rtrim(&E.DESCR, ' ')

FROM PS_ESTAB_TBL E
WHERE E.ESTABID = &ESTABID
AND E.EFFDT = (
  SELECT MAX(E2.EFFDT)
  FROM PS_ESTAB_TBL E2
  WHERE E2.ESTABID = E.ESTABID
  AND E2.EFFDT <= {DATETIMEIN-PREFIX}&END_DT{DATETIMEIN-SUFFIX}
)
END-SELECT

  let $Estab = rtrim(&ESTABID, ' ') || ' - ' || $EstabDescr

  add 2 to #row

  if #row > {DataLines}
    let #row = 1
    NEW-PAGE
  end-if

  print $ESTAB_TITLE  (#row, {iCol1}) bold
  print $Estab        (, {iCol3}) bold

  do Print-Columns
  let #TotEstCol5 = 0
  let #TotEstCol6 = 0
  let #TotEstCol7 = 0
  let #TotEstCol8 = 0
  let #TotEstCol9 = 0
  let #TotEstCol10 = 0
  let #TotEstCol11 = 0
  let #TotEstCol12 = 0
  let #TotEstCol12a = 0
  let #TotEstCol12b = 0
  let #TotEstCol13 = 0
  let #TotEstCol14 = 0
  let #TotEstCol15 = 0
  let #TotEstCol16 = 0
  let #TotEstCol17 = 0

end-procedure

!***********************************************************************
!  EstabId-After
!***********************************************************************
begin-procedure EstabId-After
  graphic                   (,{iCol1},177) horz-line
  let $Estab_Total = $TOTAL || ' ' || $ESTAB_TITLE
  add 2 to #row

  if #row > {DataLines}
    let #row = 1
    NEW-PAGE
  end-if

  print $Estab_Total (#row, {iCol1}) bold
  print #TotEstCol5   (, {iCol5})  edit B,999,999
  print #TotEstCol6   (, {iCol6})  edit B,9,999,999,999
  print #TotEstCol7   (, {iCol7})  edit B,999,999,999
  print #TotEstCol8   (, {iCol8})  edit B,99,999,999
  print #TotEstCol9   (, {iCol9})  edit B,99,999,999
  print #TotEstCol10  (, {iCol10}) edit B,999,999,999
  print #TotEstCol11  (, {iCol11}) edit B,99,999,999
  print #TotEstCol12  (, {iCol12}) edit B,99,999,999
  print #TotEstCol12a (,{iCol12a}) edit B,999,999,999
  print #TotEstCol12b (,{iCol12b}) edit B,99,999,999
  print #TotEstCol13  (, {iCol13}) edit B,999,999,999
  print #TotEstCol14  (, {iCol14}) edit B,99,999,999
  print #TotEstCol15  (, {iCol15}) edit B,99,999,999
  print #TotEstCol16  (, {iCol16}) edit B,999,999,999
  print #TotEstCol17  (, {iCol17}) edit B,99,999,999
end-procedure

!***********************************************************************
!  Process-Main
!***********************************************************************
begin-procedure Process-Main

  let $sql-statement = 'gpnlsyee,Select,Process-Main (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
MAX(JOBINSTANCE) &INSTANCE
FROM PS_GPNL_SYEE_TMP
END-SELECT

  alter-printer font=4 point-size=6

  let $sql-statement = 'gpnlsyee,Select,Process-Main (2)'
BEGIN-SELECT ON-ERROR = SQL-Error
COMPANY () on-break print=never level=1 before=Company-Before after=Company-After
GPNL_SOC_NUM () on-break print=never level=2 before=Social-Security-Before after=Social-Security-After
ESTABID () on-break print=never level=3 before=EstabId-Before after=EstabId-After
EMPLID
EMPL_RCD
  alter-printer font=4 point-size=5
  let $EmplId = rtrim(&EMPLID, ' ') 
  add 1 to #row
  print $EmplId              (#row, {iCol1})
NAME_INITIALS
NAME_PREFIX
FIRST_NAME
LAST_NAME
NAME_ROYAL_PREFIX
NATIONAL_ID
  let $Name = substr(rtrim(&LAST_NAME, ' ') || ', ' || rtrim(&NAME_INITIALS, ' ') || ' ' || rtrim(&NAME_ROYAL_PREFIX, ' '), 1, 32)
  print $Name              (, {iCol2})
{DATETIMEOUT-PREFIX}BIRTHDATE{DATETIMEOUT-SUFFIX}     &BIRTHDATE
  Do Format-DateTime(&BIRTHDATE, $BIRTHDATE, {DEFDMY},'','')
  print &NATIONAL_ID      (, {iCol3})
  print $BIRTHDATE        (, {iCol4})

GPNL_SV_DAYS_1E       (, {iCol5}) edit  B,9,999.99
GPNL_SV_INCOME_1E     (, {iCol6}) edit  B,99,999,999.99
  if #CurrentYear < #FiscalYear
GPNL_ZFW_BS_1E        (, {iCol7}) edit  B,9,999,999.99
GPNL_ZFW_CT_EE_1E     (, {iCol8}) edit  B,999,999.99
GPNL_ZFW_CT_TT_1E     (, {iCol9}) edit  B,999,999.99 
  else
GPNL_ZVW_BS_1E        (, {iCol7}) edit  B,9,999,999.99
GPNL_ZVW_CT_EE_1E     (, {iCol8}) edit  B,999,999.99
GPNL_ZVW_CT_TT_1E     (, {iCol9}) edit  B,999,999.99  
  end-if
GPNL_WW_BS_1E         (, {iCol10}) edit B,9,999,999.99
GPNL_WW_CT_EE_1E      (, {iCol11}) edit B,999,999.99
GPNL_WW_CT_TT_1E      (, {iCol12}) edit B,999,999.99
GPNL_WW_BS_2E         (, {iCol12a}) edit B,9,999,999.99
GPNL_WW_CT_TT_2E      (, {iCol12b}) edit B,999,999.99
GPNL_WAO_BS_1E        (, {iCol13}) edit B,9,999,999.99
GPNL_WAO_CT_EE_1E     (, {iCol14}) edit B,999,999.99
GPNL_WAO_CT_TT_1E     (, {iCol15}) edit B,999,999.99
GPNL_WAO_BS_2E        (, {iCol16}) edit B,9,999,999.99
GPNL_WAO_CT_TT_2E     (, {iCol17}) edit B,999,999.99

  add &GPNL_SV_DAYS_1E    to #TotEstCol5
  add &GPNL_SV_INCOME_1E     to #TotEstCol6
  if #CurrentYear < #FiscalYear
    add &GPNL_ZFW_BS_1E        to #TotEstCol7
    add &GPNL_ZFW_CT_EE_1E     to #TotEstCol8
    add &GPNL_ZFW_CT_TT_1E     to #TotEstCol9
  else
    add &GPNL_ZVW_BS_1E        to #TotEstCol7
    add &GPNL_ZVW_CT_EE_1E     to #TotEstCol8
    add &GPNL_ZVW_CT_TT_1E     to #TotEstCol9
  end-if
  add &GPNL_WW_BS_1E         to #TotEstCol10
  add &GPNL_WW_CT_EE_1E      to #TotEstCol11
  add &GPNL_WW_CT_TT_1E      to #TotEstCol12
  add &GPNL_WW_BS_2E         to #TotEstCol12a
  add &GPNL_WW_CT_TT_2E      to #TotEstCol12b
  add &GPNL_WAO_BS_1E        to #TotEstCol13
  add &GPNL_WAO_CT_EE_1E     to #TotEstCol14
  add &GPNL_WAO_CT_TT_1E     to #TotEstCol15
  add &GPNL_WAO_BS_2E        to #TotEstCol16
  add &GPNL_WAO_CT_TT_2E     to #TotEstCol17

  add &GPNL_SV_DAYS_1E    to #TotSocSecCol5
  add &GPNL_SV_INCOME_1E     to #TotSocSecCol6
  if #CurrentYear < #FiscalYear
    add &GPNL_ZFW_BS_1E        to #TotSocSecCol7
    add &GPNL_ZFW_CT_EE_1E     to #TotSocSecCol8
    add &GPNL_ZFW_CT_TT_1E     to #TotSocSecCol9
  else
    add &GPNL_ZVW_BS_1E        to #TotSocSecCol7
    add &GPNL_ZVW_CT_EE_1E     to #TotSocSecCol8
    add &GPNL_ZVW_CT_TT_1E     to #TotSocSecCol9
  end-if
  add &GPNL_WW_BS_1E         to #TotSocSecCol10
  add &GPNL_WW_CT_EE_1E      to #TotSocSecCol11
  add &GPNL_WW_CT_TT_1E      to #TotSocSecCol12
  add &GPNL_WW_BS_2E         to #TotSocSecCol12a
  add &GPNL_WW_CT_TT_2E      to #TotSocSecCol12b
  add &GPNL_WAO_BS_1E        to #TotSocSecCol13
  add &GPNL_WAO_CT_EE_1E     to #TotSocSecCol14
  add &GPNL_WAO_CT_TT_1E     to #TotSocSecCol15
  add &GPNL_WAO_BS_2E        to #TotSocSecCol16
  add &GPNL_WAO_CT_TT_2E     to #TotSocSecCol17

  add &GPNL_SV_DAYS_1E    to #TotCompCol5
  add &GPNL_SV_INCOME_1E     to #TotCompCol6
  if #CurrentYear < #FiscalYear
    add &GPNL_ZFW_BS_1E        to #TotCompCol7
    add &GPNL_ZFW_CT_EE_1E     to #TotCompCol8
    add &GPNL_ZFW_CT_TT_1E     to #TotCompCol9
  else
    add &GPNL_ZVW_BS_1E        to #TotCompCol7
    add &GPNL_ZVW_CT_EE_1E     to #TotCompCol8
    add &GPNL_ZVW_CT_TT_1E     to #TotCompCol9
  end-if
  add &GPNL_WW_BS_1E         to #TotCompCol10
  add &GPNL_WW_CT_EE_1E      to #TotCompCol11
  add &GPNL_WW_CT_TT_1E      to #TotCompCol12
  add &GPNL_WW_BS_2E         to #TotCompCol12a
  add &GPNL_WW_CT_TT_2E      to #TotCompCol12b
  add &GPNL_WAO_BS_1E        to #TotCompCol13
  add &GPNL_WAO_CT_EE_1E     to #TotCompCol14
  add &GPNL_WAO_CT_TT_1E     to #TotCompCol15
  add &GPNL_WAO_BS_2E        to #TotCompCol16
  add &GPNL_WAO_CT_TT_2E     to #TotCompCol17

  if #row > {DataLines}
    let #row = 0
    NEW-PAGE
    do Print-Columns
  end-if

FROM PS_GPNL_SYEE_TMP
WHERE JOBINSTANCE = &INSTANCE
ORDER BY COMPANY, GPNL_SOC_NUM, ESTABID, EMPLID, EMPL_RCD
END-SELECT

  let $sql-statement = 'gpnlsyee,Delete,Process-Main (3)'
BEGIN-SQL ON-ERROR=SQL-Error
DELETE FROM PS_GPNL_SYEE_TMP
WHERE JOBINSTANCE = &INSTANCE
END-SQL

end-procedure

!************************************************************************
!End of the SQR statements                                              *
!************************************************************************
#include 'stdapi.sqc'    !Routines to update run status
#include 'readmsgc.sqc'  !Read the Message Catalog Table
#Include 'reset1.sqc'    !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#Include 'getprimj.sqc'  !Routines for selecting EE's primary job
#Include 'readxlat.sqc'
