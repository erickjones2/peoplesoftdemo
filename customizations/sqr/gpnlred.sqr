!**********************************************************************!
!  gpnlred:  Tax Reductions Report (NLD)                               !
!**********************************************************************!
!**********************************************************************!
!                                                                      !
!                                                                      !
!                                                                      !
!                                                                      !
! This software and related documentation are provided under a         !
! license agreement containing restrictions on use and                 !
! disclosure and are protected by intellectual property                !
! laws. Except as expressly permitted in your license agreement        !
! or allowed by law, you may not use, copy, reproduce,                 !
! translate, broadcast, modify, license, transmit, distribute,         !
! exhibit, perform, publish or display any part, in any form or        !
! by any means. Reverse engineering, disassembly, or                   !
! decompilation of this software, unless required by law for           !
! interoperability, is prohibited.                                     !
! The information contained herein is subject to change without        !
! notice and is not warranted to be error-free. If you find any        !
! errors, please report them to us in writing.                         !
!                                                                      !
!                                                                      !
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              !
! All Rights Reserved.                                                 !
!**********************************************************************!
!                                                                      !
!          $Date:  2013/01/18:03:57:04                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define iCol1          5
#define iCol2          18
#define iCol3          33
#define iCol4          60
#define iCol5          75
#define iCol6          95
#define iCol7          115
#define iCol8          135
#define iCol9          155

#define  COMPANY_TBL

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-heading 7
  alter-printer font=1 point-size=7.2
  #Include 'stdhtr02.sqc'
  print $PERIOD_TITLE (+1, 1)
  let $Period = ' : ' || $BEGIN_DT || ' - ' || $END_DT
  print $Period       (,)
  alter-printer font=4 point-size=6
end-heading

!***********************************************************************
!  Init-Report
!***********************************************************************
begin-procedure Init-Report
  move 'GPNLRED' to $ReportID

  alter-locale
   thousand-separator = '.'
   decimal-separator  = ','

  do Stdapi-Init
  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)
  do Get_Tranlat_Info
  if $prcs_process_instance = ''
     !No Prompt
  else
     let #prcs_process_instance = To_number($prcs_process_instance)
     Do Get-values
  end-if
end-procedure

!***********************************************************************
!  Get-Values
!***********************************************************************
begin-procedure Get-Values

   let $sql-statement = 'gpnlred,Select,Get-Values (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
{DATETIMEOUT-PREFIX}BEGIN_DT{DATETIMEOUT-SUFFIX}   &BEGIN_DT
{DATETIMEOUT-PREFIX}END_DT{DATETIMEOUT-SUFFIX}     &END_DT
GPNL_RED_ORDER
COMPANY
        Do Format-DateTime(&BEGIN_DT, $BEGIN_DT, {DEFDMY},'','')
        Do Format-DateTime(&END_DT, $END_DT, {DEFDMY},'','')
        LET $COMPANY = &COMPANY

FROM PS_GPNL_RC_RED
WHERE OPRID = $prcs_oprid
AND RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT

end-procedure

!***********************************************************************
! Get_Tranlat_Info                                                     *
!***********************************************************************

begin-procedure Get_Tranlat_Info
   do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #CW)
   do Get_Field_Information($ReportID, 'TAX_RED', $TAX_RED_TITLE, #CW)
   do Get_Field_Information($ReportID, 'PERIOD', $PERIOD_END, #CW)
   do Get_Field_Information($ReportID, 'NUMBER', $NUMBER, #CW)
   do Get_Field_Information($ReportID, 'NAME', $NAME_TITLE, #CW)
   do Get_Field_Information($ReportID, 'NUMMER', $NUMMER, #CW)
   do Get_Field_Information($ReportID, 'INCOME', $INCOME, #CW)
   do Get_Field_Information($ReportID, 'HOURS', $HOURS, #CW)
   do Get_Field_Information($ReportID, 'STANDARD', $STANDARD, #CW)
   do Get_Field_Information($ReportID, 'END_DATE', $END_DATE_TITLE, #CW)
   do Get_Field_Information($ReportID, 'TOTAL', $TOTAL, #CW)
   do Get_Field_Information($ReportID, 'GRANDTOTAL', $GRANDTOTAL, #CW)
   do Get_Field_Information($ReportID, 'PERIOD_TITLE', $PERIOD_TITLE, #CW)
end-procedure

!***********************************************************************
!  TaxRed-Before
!***********************************************************************
begin-procedure TaxRed-Before
  if &GPNL_RED_ORDER = '2'
    move 'GPNL_TAX_RED_KEY'   to $FieldName
    move &GPNL_TAX_RED_KEY    to $FieldValue
    do Read-Translate-Table
    let $TaxRed = $TAX_RED_TITLE || ' ' || $XlatLongName
  else
    let $TaxRed = rtrim(&RED1.EMPLID, ' ')
                  || ' - ' || rtrim(&RED1.LAST_NAME, ' ')
                  || ', ' || rtrim(&RED1.NAME_INITIALS, ' ')
                  || ' ' ||  rtrim(&RED1.NAME_ROYAL_PREFIX, ' ')

  end-if
  let #TotalRed = 0

  print $TaxRed (+2, {iCol1}) bold

  graphic                   (+1,{iCol1},170) horz-line

  print $PERIOD_END         (+1, {iCol1})
  if &GPNL_RED_ORDER = '2'
    print $NUMBER             (, {iCol2})
    print $NAME_TITLE         (, {iCol3})
  else
    print $TAX_RED_TITLE      (, {iCol2})
  end-if
  print $NUMMER             (, {iCol4})
  print $INCOME             (, {iCol5})
  print $HOURS              (, {iCol6})
  print $STANDARD           (, {iCol7})
  print $TAX_RED_TITLE      (, {iCol8})
  print $TAX_RED_TITLE      (, {iCol9})

  print $END_DATE_TITLE     (+1, {iCol1})
  print $END_DATE_TITLE     (, {iCol9})

  graphic                   (,{iCol1},170) horz-line

end-procedure

!***********************************************************************
!  TaxRed-After
!***********************************************************************
begin-procedure TaxRed-After
  graphic                   (,{iCol1},170) horz-line
  let $TaxRed = $TOTAL || ' ' || $TaxRed
  print $TaxRed (+2, {iCol1}) bold
  print #TotalRed (, {iCol8}) edit B,99,999,999.99 bold
  add #TotalRed to #Total
end-procedure

!***********************************************************************
!  Process-Main
!***********************************************************************
begin-procedure Process-Main

  alter-printer font=4 point-size=6

  let #Total = 0

  let $sql-statement = 'gpnlred,Select,Process-Main (1)'
BEGIN-SELECT ON-ERROR = SQL-Error
MAX(JOBINSTANCE) &INSTANCE
FROM PS_GPNL_RED1_TMP
END-SELECT

  if &GPNL_RED_ORDER = '2'

  let $sql-statement = 'gpnlred,Select,Process-Main (2)'
BEGIN-SELECT ON-ERROR = SQL-Error
GPNL_TAX_RED_KEY () on-break print=never level=1 before=TaxRed-Before after=TaxRed-After
{DATETIMEOUT-PREFIX}SEG_END_DT{DATETIMEOUT-SUFFIX}     &SEG_END_DT
  Do Format-DateTime(&SEG_END_DT, $SEG_END_DT, {DEFDMY},'','')
  alter-printer font=4 point-size=6
  print $SEG_END_DT        (+1, {iCol1})
EMPLID
EMPL_RCD
  let $EmplId = rtrim(&EMPLID, ' ')
  print $EmplId              (, {iCol2})
NATIONAL_ID (, {iCol4})
FIRST_NAME
LAST_NAME
NAME_INITIALS
NAME_ROYAL_PREFIX
  let $Name = substr(rtrim(&LAST_NAME, ' ') || ', ' || rtrim(&NAME_INITIALS, ' ') || ' ' || rtrim(&NAME_ROYAL_PREFIX, ' ') , 1, 25)
  print $Name              (, {iCol3})
GPNL_INCOME (, {iCol5}) edit B,99,999,999.99
GPNL_NBR_HOURS (, {iCol6}) edit B,999,999.99
GPNL_STD_HOURS (, {iCol7}) edit B,999,999.99
GPNL_TAX_RED (, {iCol8}) edit B,99,999,999.99
  Add &GPNL_TAX_RED to #TotalRed
{DATETIMEOUT-PREFIX}END_DT{DATETIMEOUT-SUFFIX}     &RED_END_DT
  Do Format-DateTime(&RED_END_DT, $RED_END_DT, {DEFDMY},'','')
  print $RED_END_DT        (, {iCol9})

FROM PS_GPNL_RED1_TMP
WHERE JOBINSTANCE = &INSTANCE
ORDER BY GPNL_TAX_RED_KEY, EMPLID, EMPL_RCD, SEG_END_DT
END-SELECT

  else

  let $sql-statement = 'gpnlred,Select,Process-Main (3)'
BEGIN-SELECT ON-ERROR = SQL-Error
RED1.EMPLID  () on-break print=never level=1 before=TaxRed-Before after=TaxRed-After
RED1.EMPL_RCD () on-break print=never level=1
{DATETIMEOUT-PREFIX}RED1.SEG_END_DT{DATETIMEOUT-SUFFIX}     &RED1.SEG_END_DT
  Do Format-DateTime(&RED1.SEG_END_DT, $SEG_END_DT, {DEFDMY},'','')
  alter-printer font=4 point-size=6
  print $SEG_END_DT        (+1, {iCol1})
RED1.GPNL_TAX_RED_KEY
  move 'GPNL_TAX_RED_KEY'   to $FieldName
  move &RED1.GPNL_TAX_RED_KEY    to $FieldValue
  do Read-Translate-Table
  print $XlatLongName (, {iCol2})
RED1.NATIONAL_ID (, {iCol4})
RED1.FIRST_NAME
RED1.LAST_NAME
RED1.NAME_INITIALS
RED1.NAME_ROYAL_PREFIX
RED1.GPNL_INCOME (, {iCol5}) edit B,99,999,999.99
RED1.GPNL_NBR_HOURS (, {iCol6}) edit B,999,999.99
RED1.GPNL_STD_HOURS (, {iCol7}) edit B,999,999.99
RED1.GPNL_TAX_RED (, {iCol8}) edit B,99,999,999.99
  Add &RED1.GPNL_TAX_RED to #TotalRed
{DATETIMEOUT-PREFIX}RED1.END_DT{DATETIMEOUT-SUFFIX}     &RED1.RED_END_DT
  Do Format-DateTime(&RED1.RED_END_DT, $RED_END_DT, {DEFDMY},'','')
  print $RED_END_DT        (, {iCol9})

FROM PS_GPNL_RED1_TMP RED1
WHERE RED1.JOBINSTANCE = &INSTANCE
ORDER BY RED1.EMPLID, RED1.EMPL_RCD, RED1.SEG_END_DT, RED1.GPNL_TAX_RED_KEY
END-SELECT


  end-if

  if #Total <> 0
    print $GRANDTOTAL (+2, {iCol1}) bold
    print #Total (, {iCol8}) edit B,99,999,999.99 bold
  end-if

  let $sql-statement = 'gpnlred,Delete,Process-Main (4)'
BEGIN-SQL ON-ERROR=SQL-Error
DELETE FROM PS_GPNL_RED1_TMP
WHERE JOBINSTANCE = &INSTANCE
END-SQL

end-procedure

!************************************************************************
!End of the SQR statements                                              *
!************************************************************************
#include 'stdapi.sqc'    !Routines to update run status
#include 'readmsgc.sqc'  !Read the Message Catalog Table
#Include 'reset1.sqc'    !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#Include 'getprimj.sqc'  !Routines for selecting EE's primary job
#Include 'readxlat.sqc'
#Include 'getcodta.sqc'  !Get-Company-Name procedure
#include 'rellang.sqc'   ! Translations File


