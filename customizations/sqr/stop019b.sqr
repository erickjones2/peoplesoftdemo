!-----------------------------------------------------------------------
!  STOP019B: Options Broker Invoices (Releases)
!-----------------------------------------------------------------------
!-----------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!-----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:54:42                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!-----------------------------------------------------------------------
! Prompts:       Stock ID, Reprint , Emplid, Control #, from Date, Thru
!                Dates Broker ID, Branch ID
! Tables:        ST_GRANT_EXER
!                ST_EXER_ISSUE
!                PERS_NID
!                ST_BROKER_TBL
!                ST_BROKER_DTL
!                ST_BRKR_BRANCH
!                STOCK_BRNCH_DTL
!                STOCK_BRANCH
! Sorts:         Brokerage
!                Branch
!                Release Date
!                Emplid
!-----------------------------------------------------------------------

  #include 'setenv.sqc'

!-----------------------------------------------------------------------
Begin-Setup
!-----------------------------------------------------------------------

  #include 'ptpsl177.sqc'

End-Setup

!-----------------------------------------------------------------------
Begin-Report
!-----------------------------------------------------------------------

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  show 'Process started at: ' $SysDateTime
  do Process-Main
  do Reset
  do Successful-EOJ
  show 'Process ended at:   ' $SysDateTime

End-Report

!-----------------------------------------------------------------------
Begin-Procedure Report-Translation
!-----------------------------------------------------------------------

 do Init_Report_Translation ('STOCK', $language_cd)
 do Append_Report_Translation ('STOP018')

  do Get_Field_Information ('STOCK','NAME',               $NameLbl,            #DW)
  do Get_Field_Information ('STOCK','NUMBER',             $NumberLbl,          #DW)
  do Get_Field_Information ('STOCK','DATE',               $DateLbl,            #DW)
  do Get_Field_Information ('STOCK','STOCK_ID',           $StockIdLbl,         #DW)
  do Get_Field_Information ('STOCK','EMPLID',             $EmplidLbl,          #DW)
  do Get_Field_Information ('STOCK','NID',                $NidLbl,             #DW)
  do Get_Field_Information ('STOCK','STOCK_PLAN_DESC',    $StockPlanLbl,       #DW)
  do Get_Field_Information ('STOCK','SHARES',             $SharesLbl,          #DW)
  do Get_Field_Information ('STOCK','TOTAL',              $TotalLbl,           #DW)
  do Get_Field_Information ('STOCK','SHARES_RELEASED',    $SharesRelLbl,       #DW)
 
  do Get_Field_Information ('STOP018','TRANSFER_CNTL_NO', $TransferLbl,        #DW)
  do Get_Field_Information ('STOP018','CONTROL_NO',       $ControlLbl,         #DW)
  do Get_Field_Information ('STOP018','REPRINT',          $ReprintLbl,         #DW)
  do Get_Field_Information ('STOP018','REG_NAME',         $RegNameLbl,         #DW)
  do Get_Field_Information ('STOP018','EMPLOYEE',         $EmployeeLbl,        #DW)
  do Get_Field_Information ('STOP018','TRANSACTION',      $TransactionLbl,     #DW)
  do Get_Field_Information ('STOP018','NO_OF',            $NoOfLbl,            #DW)
  do Get_Field_Information ('STOP018','REPORT_TITLE_INV', $ReportTitle,        #DW)
  do Get_Field_Information ('STOP018','TRANSACTION_TYPE', $TransactionTypeLbl, #DW)
  do Get_Field_Information ('STOP018','REPORT_TYPE2',     $ReportType2Lbl,     #DW)
  do Get_Field_Information ('STOP018','ACCOUNT_NUMBER',   $AccountNbrLbl,      #DW)
  do Get_Field_Information ('STOP018','DATE_RANGE_FROM',  $DateFromLbl,        #DW)
  do Get_Field_Information ('STOP018','DATE_RANGE_THRU',  $DateThruLbl,        #DW)
  do Get_Field_Information ('STOP018','CUSIP_NUMBER',     $CusipNbrLbl,        #DW)
  do Get_Field_Information ('STOP018','SUB_TOTAL',        $SubTotalLbl,        #DW)
  do Get_Field_Information ('STOP018','GRANT_TOTAL',      $GrandTotalLbl,      #DW)
  do Get_Field_Information ('STOP018','SOLD',             $SoldLbl,            #DW)
  do Get_Field_Information ('STOP018','COST_OF',          $CostOfLbl,          #DW)
  do Get_Field_Information ('STOP018','TAX_DUE',          $TaxDueLbl,          #DW)
  do Get_Field_Information ('STOP018','TOTAL_DUE',        $TotalDueLbl,        #DW)
  do Get_Field_Information ('STOP018','TO_COMPANY',       $ToCompanyLbl,       #DW)

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Init-Report
!-----------------------------------------------------------------------

  move 'STOP019B' to $ReportID
  display $ReportTitle

  !set input currency for formating, from the installation table - number.sqc
  let $cur = $basecurr

  do Get-Report-Language
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms

  if $prcs_process_instance = ''
    do Get-Stock-Values
  else
    do Get-SQR-Parms
  end-if

  let $RC_STOCK_ID        = rtrim($RC_STOCK_ID, ' ')
  let $RC_EMPLID          = rtrim($RC_EMPLID, ' ')
  let $RC_BROKERAGE_ID    = rtrim($RC_BROKERAGE_ID, ' ')
  let $RC_BRANCH_ID       = rtrim($RC_BRANCH_ID, ' ')
  let $RC_REPRINT_PROMPT  = rtrim($RC_REPRINT_PROMPT, ' ')
  let $RC_FROMDATE        = rtrim($RC_FROMDATE, ' ')
  let $RC_THRUDATE        = rtrim($RC_THRUDATE, ' ')
  let $RC_BRANCH_CNTL_NBR = rtrim($RC_BRANCH_CNTL_NBR, ' ')

Begin-Select

Z.CUSIP_NBR

  let $CusipNbr = rtrim(&z.cusip_nbr, ' ')

from PS_STOCK_TBL Z
 where STOCK_ID = $RC_STOCK_ID

End-Select

  if $RC_REPRINT_PROMPT = 'Y'
    let $MAX_CNTL_NO  = $RC_BRANCH_CNTL_NBR
  end-if

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Get-Stock-Values
!-----------------------------------------------------------------------
  INPUT $RC_STOCK_ID              MAXLEN=10  'Enter Stock ID'                TYPE=CHAR
  INPUT $RC_EMPLID                MAXLEN=10  'Enter Employee ID'             TYPE=CHAR
  INPUT #RC_TRANSFER_CNTL_NBR     MAXLEN=10  'Enter Transfer Control number' TYPE=INTEGER
  INPUT $RC_BROKERAGE_ID          MAXLEN=10  'Enter Brokerage ID'            TYPE=CHAR
  INPUT $RC_BRANCH_ID             MAXLEN=10  'Enter Branch ID'               TYPE=CHAR
  INPUT $RC_REPRINT_PROMPT        MAXLEN=1   'Reprint? (Y/N)'                TYPE=CHAR
  INPUT $RC_FROMDATE              MAXLEN=10  'Enter from Date'               TYPE=DATE
  INPUT $RC_THRUDATE              MAXLEN=10  'Enter Through Date'            TYPE=DATE

  if $RC_REPRINT_PROMPT = 'Y'
    INPUT $RC_BRANCH_CNTL_NBR MAXLEN=12  'Enter Branch Control Number'      TYPE=CHAR
  end-if

End-Procedure

!-----------------------------------------------------------------------
Begin-Heading 16
!-----------------------------------------------------------------------

  #include 'stdhdg01.sqc'
  print $TransactionTypeLbl                                (03,001,017)
  print $ReportType2Lbl                                    (  ,023,011)
  print $DateFromLbl                                       (  ,074,005)
  do Format-DateTime($RC_FROMDATE, $DateOut, {DEFDATE}, '', '')  
  print $DateOut                                           (  , +1,010)
  print $DateThruLbl                                       (  , +2,005)
  do Format-DateTime($RC_THRUDATE, $DateOut, {DEFDATE}, '', '')
  print $DateOut                                           (  , +1,010)
  print $StockIdLbl                                        (04,001,008)
  print ':'                                                (  ,000,001)
  print $RC_STOCK_ID                                       (  ,023,008)
  print $TransferLbl                                       (05,001,020)
  print ':'                                                (  ,000,001)
  let $CntrolNumber = TO_CHAR (#RC_TRANSFER_CNTL_NBR)
  print $CntrolNumber                                      (  ,023,006)
  print $CusipNbrLbl                                       (06,001,013)
  print $CusipNbr                                          (  ,023,009)
  if $RC_REPRINT_PROMPT = 'Y'
    print $ReprintLbl                                      (07,001,008)
    print $RC_REPRINT_PROMPT                               (  ,023,001)
  end-if
  print $ControlLbl                                        (05,084,016) bold
  print ':'                                                (  ,000,001) bold
  if $RC_REPRINT_PROMPT = 'N'
    print $LastControlNbr                                  (  , +2,010) bold
  else
    print $RC_BRANCH_CNTL_NBR                              (  , +2,010) bold
  end-if
  print $BrokerDescr                                       (07,084,030) bold
  print $BranchDescr                                       (08,084,030) bold
  print $Address1                                          (09,084,035) bold
  if $Address2 <> ''
    print $Address2                                        (+1,084,035) bold
  end-if
  Let $City-Zip = $City ||', '|| $State ||' '|| $Postal
  print $City-Zip                                          (+1,084,042) bold
  print $Country                                           (+1,084,003) bold
  print $Phone                                             (+1,084,024) bold
  print $TransactionLbl                                    (15,001,011)
  print $EmplidLbl                                         (  ,054,011)
  print $AccountNbrLbl                                     (  ,076,014)
  print $SharesLbl                                         (  ,111,006)
  print $CostOfLbl                                         (  ,130,007)
  print $TotalLbl                                          (  ,152,005)
  print $TotalDueLbl                                       (  ,168,009)
  print $DateLbl                                           (+1,001,005)
  print $RegNameLbl                                        (  ,012,020)
  print $NidLbl                                            (  ,054,003)
  print $StockPlanLbl                                      (  ,076,010)
  print $SoldLbl                                           (  ,113,004)
  print $SharesRelLbl                                      (  ,122,015)
  print $TaxDueLbl                                         (  ,150,007)
  print $ToCompanyLbl                                      (  ,167,010)
  print '-'                                                (+1,001,177) fill

End-Heading

!-----------------------------------------------------------------------
Begin-Procedure Process-Main
!-----------------------------------------------------------------------

  let $SQLQuote          = ''''
  let $WhereEmplid       = ''
  let $WhereBranch       = ''
  let $WhereBrokerID     = ''
  let $WhereBranchID     = ''

  if $RC_BROKERAGE_ID <> ''
    let $WhereBrokerID = ' and B.ST_BROKERAGE_ID = '||$SQLQuote || $RC_BROKERAGE_ID || $SQLQuote
  else
    let $WhereBrokerID = ''
  end-if

  if $RC_BRANCH_ID <> ''
    let $WhereBranchID = ' and B.ST_BRANCH_ID = '||$SQLQuote || $RC_BRANCH_ID || $SQLQuote
  else
    let $WhereBranchID = ''
  end-if

  if $RC_EMPLID <> ''
    let $WhereEmplid = ' and A.EMPLID = ' || $SQLQuote || $RC_EMPLID || $SQLQuote
  else
    let $WhereEmplid = ''
  end-if

  if $RC_REPRINT_PROMPT = 'Y'
    let $WhereBranch = ' and B.BRANCH_CNTL_NBR = ' || $SQLQuote || $MAX_CNTL_NO || $SQLQuote
  end-if

  do Process-Records

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Process-Records
!-----------------------------------------------------------------------

  let #Rows = 0

Begin-Select

A.RELEASE_DT
A.SWAP_FMV
A.SHARES_TRADED
A.SHARES_RELEASED
A.ST_COST_SHARE_SOLD
B.ST_BROKERAGE_ID
B.ST_BRANCH_ID
B.BRANCH_CNTL_NBR
B.EMPLID
B.GRANT_NBR
B.EXERCISE_NBR
B.RELEASE_NBR
B.ISSUANCE_NBR
B.ST_ACCOUNT_NBR
B.SHARES_ISSUED
B.REGISTRATION_NAME

  let #Rows          = #Rows + 1
  let $ReleaseDt     = rtrim(&a.release_dt, ' ')
  let #SwapFmv       = &a.swap_fmv
  let #SharesTrade   = &a.shares_traded
  let #SharesRel     = &a.shares_released
  let #CostShareSold = &a.st_cost_share_sold
  let $BrokerId      = rtrim(&b.st_brokerage_id, ' ')
  let $BranchId      = rtrim(&b.st_branch_id, ' ')
  let $ControlNbr    = rtrim(&b.branch_cntl_nbr, ' ')
  let $Emplid        = rtrim(&b.emplid, ' ')
  let $GrantNbr      = rtrim(&b.grant_nbr, ' ')
  let #ExerciseNbr   = &b.exercise_nbr
  let #ReleaseNbr    = &b.release_nbr
  let #IssuanceNbr   = &b.issuance_nbr
  let $AccountNbr    = rtrim(&b.st_account_nbr, ' ')
  let #SharesIssued  = &b.shares_issued
  let $Name          = rtrim(&b.registration_name, ' ')
  do Get-National-Id
  do Get-Grant-Price
  do Print-Details

from PS_ST_EXER_RELEASE A,
     PS_ST_REL_ISSUE    B
where A.STOCK_ID          = $RC_STOCK_ID
  and A.TRANSFER_CNTL_NBR = #RC_TRANSFER_CNTL_NBR
  and A.RELEASE_STATUS    = 'A'
  and A.EMPLID            = B.EMPLID
  and A.STOCK_ID          = B.STOCK_ID
  and A.GRANT_NBR         = B.GRANT_NBR
  and A.EXERCISE_NBR      = B.EXERCISE_NBR
  and A.RELEASE_NBR       = B.RELEASE_NBR
  and B.ISSUANCE_TYPE     = 'B'
  and A.RELEASE_DT between $RC_FROMDATE and $RC_THRUDATE
[$WhereEmplid]
[$WhereBrokerID]
[$WhereBranchID]
[$WhereBranch]
order by B.ST_BROKERAGE_ID,
         B.ST_BRANCH_ID,
         A.RELEASE_DT,
         B.EMPLID

End-Select

  if #Rows > 0
    do Print-Footer
    do Print-Grand-Totals
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-National-Id
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-National-Id

  let $NationalId = ''

Begin-Select

PERS_NID.NATIONAL_ID

  let $NationalId = rtrim(&pers_nid.national_id, ' ')

 from PS_PERS_NID PERS_NID
where PERS_NID.EMPLID      = $Emplid
  and PERS_NID.PRIMARY_NID = 'Y'

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Grant-Price
! Descr:   Retrieves the Grant Price
!-----------------------------------------------------------------------
Begin-Procedure Get-Grant-Price

  let #GrantPrice = 0

Begin-Select

ST_GRANT.GRANT_PRICE
ST_GRANT.STOCK_PLAN

  let #GrantPrice = &st_grant.grant_price
  let $StockPlan  = rtrim(&st_grant.stock_plan, ' ')

from PS_ST_GRANT ST_GRANT
where ST_GRANT.EMPLID    = $Emplid
  and ST_GRANT.STOCK_ID  = $RC_STOCK_ID
  and ST_GRANT.GRANT_NBR = $GrantNbr

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Details
!-----------------------------------------------------------------------
Begin-Procedure Print-Details

  if #Rows = 1
    do Get-Branch-Address
    let $BrokerIdOld = $BrokerId
    let $BranchIdOld = $BranchId
  else
    if $BrokerId <> $BrokerIdOld
      or $BranchId <> $BranchIdOld
      do Print-Footer
      new-page
      do Get-Branch-Address
      let $BrokerIdOld = $BrokerId
      let $BranchIdOld = $BranchId
    end-if
  end-if

  let #CostRelease  = round(#SharesRel * #GrantPrice,2)
  do Calculate-Tax-Due
  let #TradeValue   = round(#SwapFmv * #SharesTrade,2)
  let #CompanyDue   = #CostRelease + #TaxDue - #TradeValue

  do Format-DateTime($ReleaseDt, $out, {DEFDATE}, '', '')
  print $out                                               (+1,001,010)
  print $Name                                              (  ,012,040)
  print $Emplid                                            (  ,054,011)
  print $AccountNbr                                        (  ,076,017)
  print #CostShareSold                                     (  ,095,022) edit 999,999,999,999.999999
  print #CostRelease                                       (  ,119,018) edit $$9,999,999,999.99
  print #TaxDue                                            (  ,139,018) edit $$9,999,999,999.99
  print #CompanyDue                                        (  ,159,018) edit $$9,999,999,999.99
  print $NationalId                                        (+1,054,020)
  print $StockPlan                                         (  ,076,010)

  let #TotalCostShareSold = #TotalCostShareSold + #CostShareSold
  let #GrandCostShareSold = #GrandCostShareSold + #CostShareSold
  let #TotalCostRelease   = #TotalCostRelease   + #CostRelease
  let #GrandCostRelease   = #GrandCostRelease   + #CostRelease
  let #TotalTaxDue        = #TotalTaxDue        + #TaxDue
  let #GrandTaxDue        = #GrandTaxDue        + #TaxDue
  let #TotalCompanyDue    = #TotalCompanyDue    + #CompanyDue
  let #GrandCompanyDue    = #GrandCompanyDue    + #CompanyDue

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Branch-Address
!-----------------------------------------------------------------------
Begin-Procedure Get-Branch-Address

Begin-Select

C.DTC_ACCOUNT_NBR
D.DESCR
E.DESCR
E.ADDRESS1
E.ADDRESS2
E.ADDRESS3
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.PHONE

  let $DtcAcctNbr  = rtrim(&c.dtc_account_nbr, ' ')
  let $BrokerDescr = rtrim(&d.descr, ' ')
  let $BranchDescr = rtrim(&e.descr, ' ')
  let $Address1    = rtrim(&e.address1, ' ')
  let $Address2    = rtrim(&e.address2, ' ')
  let $Address3    = rtrim(&e.address3, ' ')
  let $City        = rtrim(&e.city, ' ')
  let $State       = rtrim(&e.state, ' ')
  let $Postal      = rtrim(&e.postal, ' ')
  let $Country     = rtrim(&e.country, ' ')
  let $Phone       = rtrim(&e.phone, ' ')

from PS_ST_BROKER_TBL  C,
     PS_ST_BROKER_DTL  D,
     PS_ST_BRKR_BRANCH E
where C.ST_BROKERAGE_ID = $BrokerId
  and C.ST_BROKERAGE_ID = D.ST_BROKERAGE_ID
  and D.EFFDT           = (SELECT MAX(DD.EFFDT) 
                             from PS_ST_BROKER_DTL DD
                            where DD.ST_BROKERAGE_ID = D.ST_BROKERAGE_ID
                              and DD.EFFDT          <= $AsOfToday)
  and C.ST_BROKERAGE_ID = E.ST_BROKERAGE_ID
  and E.ST_BRANCH_ID    = $BranchId
  and E.EFFDT           = (SELECT MAX(EE.EFFDT) 
                             from PS_ST_BRKR_BRANCH EE
                            where EE.ST_BROKERAGE_ID = E.ST_BROKERAGE_ID
                              and EE.ST_BRANCH_ID    = E.ST_BRANCH_ID)

End-Select

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Calculate-Tax-Due
!-----------------------------------------------------------------------

  let #TaxDue = 0

Begin-Select

SUM(ST_REL_TAXES.TAX_CUR) &Tax-due

  let #TaxDue = round(&Tax-due,2)

from PS_ST_REL_TAXES ST_REL_TAXES
where ST_REL_TAXES.EMPLID       = $Emplid
  and ST_REL_TAXES.STOCK_ID     = $RC_STOCK_ID
  and ST_REL_TAXES.GRANT_NBR    = $GrantNbr
  and ST_REL_TAXES.EXERCISE_NBR = #ExerciseNbr
  and ST_REL_TAXES.RELEASE_NBR  = #ReleaseNbr

End-Select

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Print-Footer
!-----------------------------------------------------------------------
  next-listing need=4
  print '-'                                                (+1,001,177) fill
  print $SubTotalLbl                                       (+1,076,010) bold
  print #TotalCostShareSold                                (  ,095,022) bold edit 999,999,999,999.999999
  print #TotalCostRelease                                  (  ,119,018) bold edit $$9,999,999,999.99
  print #TotalTaxDue                                       (  ,139,018) bold edit $$9,999,999,999.99
  print #TotalCompanyDue                                   (  ,159,018) bold edit $$9,999,999,999.99
  print '-'                                                (+1,001,177) fill

  let #TotalCostShareSold = 0
  let #TotalCostRelease   = 0
  let #TotalTaxDue        = 0
  let #TotalCompanyDue    = 0

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Print-Grand-Totals
!-----------------------------------------------------------------------
  next-listing need=4
  print '-'                                                (+1,001,177) fill
  print $GrandTotalLbl                                     (+1,076,012) bold
  print #GrandCostShareSold                                (  ,095,022) bold edit 999,999,999,999.999999
  print #GrandCostRelease                                  (  ,119,018) bold edit $$9,999,999,999.99
  print #GrandTaxDue                                       (  ,139,018) bold edit $$9,999,999,999.99
  print #GrandCompanyDue                                   (  ,159,018) bold edit $$9,999,999,999.99
  print '-'                                                (+1,001,177) fill

End-Procedure

!-----------------------------------------------------------------------
!  SQC Include Files
!-----------------------------------------------------------------------
#include 'strunctl.sqc'   ! Stock Admin's Run Control Record
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'    ! Update Process Open_Trans variable declaration
#include 'eoj.sqc'        ! End of Report Format
#include 'sqrtrans.sqc'   ! Access Strings Table
#include 'reset.sqc'      ! Reset printer procedure
#include 'curdttim.sqc'   ! Get-Current-DateTime procedure
                          ! Procedures: Get-Current-DateTime
#include 'datemath.sqc'
#include 'datetime.sqc'   ! Routines for date and time formatting
                          ! Procedures: Init-Datetime
                          ! Procedures: Format-DateTime
                          ! Procedures: Diff-Date
                          ! Procedures: many others.
#include 'number.sqc'     ! Procedures: Init-Number
#include 'getrplng.sqc'   ! Get the report language
