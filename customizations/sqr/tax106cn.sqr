!***********************************************************************
!  TAX106CN: Update Data T4 Box 57 - 60                                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!                                                                      *
!   Copyright (C) 1988, 2020, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  32267236                                            !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization
#include 'canrpt.sqc'  !Get Canadian-specific variables

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Stdapi-Init
  move 'TAX106CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $TAX106CN_Title_Rpt to $ReportTitle

  let $Title =  $TAX106CN_Title_Rpt
  display $Title
  display ' '
  display ' '

  do Init-DateTime
  do Init-Number
  do Initialize

  do Select-Run-Parameters
  do Convert-Parameters


end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from TAX907CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('TAX106CN', 'TITLE_RPT'           , $TAX106CN_Title_Rpt       , #dummy_width)
   do Get_Field_Information ('TAX106CN', 'NO_EE_FOUND'         , $TAX106CN_No_EE_Found     , #dummy_width)
   do Get_Field_Information ('TAX106CN', 'HEADING1'            , $Tax104cn_Heading1        , #dummy_width)
   do Get_Field_Information ('TAX106CN', 'HEADING2'            , $Tax104cn_Heading2        , #dummy_width)
   do Get_Field_Information ('TAX106CN', 'HEADING3'            , $Tax104cn_Heading3        , #dummy_width)
   do Get_Field_Information ('TAX106CN', 'COMPANY'             , $TAX106CN_Company         , #dummy_width)
 !npa

end-procedure

begin-heading 8
  #Include 'stdhdgtr.sqc'

  print $TAX106CN_Company            (3,1,)
  print &PC.COMPANY                  (0,18,)

  print &RC.BOX_AA_ERNCD                                (6,114,3)
  print &RC.BOX_BB_ERNCD                                (0,133,3)
  print &RC.BOX_CC_ERNCD                                (0,152,3)
  print &RC.BOX_DD_ERNCD                                (0,171,3)

  print $Tax104cn_Heading1                              (7,1)
  print $Tax104cn_Heading2                              (0,72)
  print $Tax104cn_Heading3                              (0,104)

end-heading


begin-procedure Initialize

  do Get-Current-DateTime

  move '1' to $MMLZero
  move '0' to $Year4         !YY
  do Format-DateTime($AsOfToday, $FootNote_Date, {DEFMDY},'','')
  let $BP1-begin = strtodate('20200315')
  let $BP1-end   = strtodate('20200509')
  let $BP2-begin = strtodate('20200510')
  let $BP2-end   = strtodate('20200704')
  let $BP3-begin = strtodate('20200705')
  let $BP3-end   = strtodate('20200829')
  let $BP4-begin = strtodate('20200830')
  let $BP4-end   = strtodate('20200926')
  let $YearEnd   = strtodate('20201231')
  let #Total_Box1_Wages    = 0
  let #Total_Box2_Wages    = 0
  let #Total_Box3_Wages    = 0
  let #Total_Box4_Wages    = 0
  let $Last-Company = 'N'
  let $Report-Start = 'Y'
  move 'N' to $RunEmployeeFound

end-procedure


begin-procedure Select-Run-Parameters

begin-SELECT
RC.PY_T4_CO_OPT
RC.BOX_AA_ERNCD
RC.BOX_BB_ERNCD
RC.BOX_CC_ERNCD
RC.BOX_DD_ERNCD
  move &RC.PY_T4_CO_OPT  to $Process_Option
  let $AA_ERNCD = rtrim(&RC.BOX_AA_ERNCD, ' ')
  let $BB_ERNCD = rtrim(&RC.BOX_BB_ERNCD, ' ')
  let $CC_ERNCD = rtrim(&RC.BOX_CC_ERNCD, ' ')
  let $DD_ERNCD = rtrim(&RC.BOX_DD_ERNCD, ' ')

FROM  PS_RC_TAX106CN  RC
WHERE RC.OPRID              = $Prcs_OprID
  AND RC.RUN_CNTL_ID        = $Prcs_Run_Cntl_ID
end-SELECT

end-procedure


begin-procedure Convert-Parameters

  move ' ' to $ANDEXISTS
  move ' ' to $CO.SELECTEDCOMPANIES


  if $Process_Option = 'S'

    let $ANDEXISTS = 'AND EXISTS (SELECT C.COMPANY FROM PS_PY_T4_UPDATE_CO C WHERE '
    let $ANDEXISTS = $ANDEXISTS  || ' C.OPRID = ''' || $Prcs_OprID ||'''  '
    let $ANDEXISTS = $ANDEXISTS  || ' AND C.RUN_CNTL_ID = ''' || $Prcs_Run_Cntl_ID ||'''  '
    let $ANDEXISTS = $ANDEXISTS  || ' AND C.COMPANY = S.COMPANY)'

    do Get-Calendar-Year-Id

    do Read-Companies

  end-if

end-procedure


begin-procedure Process-Main

  do Process-One-Or-More-Companies

  if $RunEmployeeFound = 'N'
    display ''
    display ''
    display '******************************'
    display   $TAX106CN_No_EE_Found
    display '******************************'

  end-if

end-procedure


begin-procedure Read-Companies

  move 'WHERE SELECTCO.COMPANY IN (''' to $CO.SELECTEDCOMPANIES

  move ' ' to $SelectedCompany

begin-SELECT
CO.COMPANY

  move &CO.COMPANY    to $SelectedCompany

  let $CO.SELECTEDCOMPANIES = $CO.SELECTEDCOMPANIES || $SelectedCompany || ''','''


  move 'Y' to $Company_Selected

FROM  PS_PY_T4_UPDATE_CO  CO
WHERE CO.OPRID         = $Prcs_OprID
  AND CO.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

  if $Company_Selected = 'Y'
      let $CO.SELECTEDCOMPANIES  = SUBSTR($CO.SELECTEDCOMPANIES,1,LENGTH($CO.SELECTEDCOMPANIES) - 2)

  else
      let $CO.SELECTEDCOMPANIES  = $CO.SELECTEDCOMPANIES || ''''

  end-if

  let $CO.SELECTEDCOMPANIES = $CO.SELECTEDCOMPANIES  || ')'

end-procedure


begin-procedure Process-One-Or-More-Companies

  let $Multi-company = 'N'

begin-SELECT DISTINCT
SELECTCO.COMPANY

  let #Empl-Comp-Count     = 0
  let #Total_Box1_Wages    = 0
  let #Total_Box2_Wages    = 0
  let #Total_Box3_Wages    = 0
  let #Total_Box4_Wages    = 0


  do Process-Company

FROM PS_COMPANY_TBL SELECTCO
#ifdef MVS
  \$CO.SELECTEDCOMPANIES\
#else
  [$CO.SELECTEDCOMPANIES]
#endif
ORDER BY SELECTCO.COMPANY
end-SELECT



end-procedure


begin-procedure Process-Company

  move 'N' to $EmployeeFound
  let $First-Company = 'Y'
  let $First-EMPLID = 'Y'
  let $Prev-Emplid = ''
  let $Prev-Company = ''
  let #CP-Earnings = 0
  let #Empl-Sub-Cnt = 0
  let #Comp_Total_Box1_Wages    = 0
  let #Comp_Total_Box2_Wages    = 0
  let #Comp_Total_Box3_Wages    = 0
  let #Comp_Total_Box4_Wages    = 0
  let #Total_Box1_Wages    = 0
  let #Total_Box2_Wages    = 0
  let #Total_Box3_Wages    = 0
  let #Total_Box4_Wages    = 0

  do Get-Calendar-Year-Id

begin-SELECT
PC.COMPANY
PC.CHECK_DT
PTC.PROVINCE
PTC.WAGE_LOSS_PLAN
CP1A.COMPANY
CP1A.PAYGROUP
CP1A.PAY_END_DT
CP1A.OFF_CYCLE
CP1A.PAGE_NUM
CP1A.LINE_NUM
CP1A.SEPCHK
CP1A.EMPLID
PTC.TXGRS_CUR

  if $First-EMPLID = 'Y'

    let $Prev-Emplid = rtrim(&CP1A.EMPLID,' ')
    do Get-Prev-EE-Empl-Rcd
    let $Prev-Province = rtrim(&PTC.PROVINCE,' ')
    let $Prev-Wage-loss-Plan = rtrim(&PTC.WAGE_LOSS_PLAN,' ')
    let $First-Emplid = 'N'
  end-if

  move 'Y' to $EmployeeFound
  move 'Y' to $RunEmployeeFound

  if (rtrim(&CP1A.EMPLID,' ')        <>  $Prev-Emplid) or
     (rtrim(&PTC.PROVINCE,' ')       <>  $Prev-Province) or
     (rtrim(&PTC.WAGE_LOSS_PLAN,' ') <>  $Prev-Wage-loss-Plan)

    do Print-Empl-Line

    do T4-Change
  end-if

  do Process-Info

  let $Prev-Emplid = rtrim(&CP1A.EMPLID,' ')
  do Get-Prev-EE-Empl-Rcd
  let $Prev-Province = rtrim(&PTC.PROVINCE,' ')
  let $Prev-Wage-loss-Plan = rtrim(&PTC.WAGE_LOSS_PLAN,' ')
  let $Prev-Company = rtrim(&CP1A.COMPANY,' ')
  let $First-Company = 'N'
  let $First-Emplid = 'N'

FROM PS_PAY_CALENDAR PC,
     PS_PAY_CHECK CP1A,
     PS_PAY_TAX_CAN PTC,
     PS_PAYGROUP_TBL CP1B
WHERE PC.COMPANY           = &SELECTCO.COMPANY
  AND PC.CHECK_DT         >= $BP1-begin
  AND PC.CHECK_DT         <= $BP4-end
  AND CP1A.COMPANY         = PC.COMPANY
  AND CP1A.PAYGROUP        = PC.PAYGROUP
  AND CP1A.PAY_END_DT      = PC.PAY_END_DT
 ! AND CP1A.EMPLID          = 'CPY0783'
  AND PTC.COMPANY          = CP1A.COMPANY
  AND PTC.PAYGROUP         = CP1A.PAYGROUP
  AND PTC.PAY_END_DT       = CP1A.PAY_END_DT
  AND PTC.OFF_CYCLE        = CP1A.OFF_CYCLE
  AND PTC.PAGE_NUM         = CP1A.PAGE_NUM
  AND PTC.LINE_NUM         = CP1A.LINE_NUM
  AND PTC.SEPCHK           = CP1A.SEPCHK
  AND PTC.TAX_CLASS_CAN    = 'TT4'
 ! AND CP1A.EMPLID          = 'KC0036'
  AND CP1A.PAYCHECK_STATUS  = 'F'
  AND CP1B.COMPANY          = CP1A.COMPANY
  AND CP1B.PAYGROUP         = CP1A.PAYGROUP
  AND CP1B.EFFDT            = (SELECT MAX (CP1B1.EFFDT)
                               FROM PS_PAYGROUP_TBL CP1B1
                               WHERE CP1B1.COMPANY = CP1B.COMPANY
                               AND CP1B1.PAYGROUP = CP1B.PAYGROUP
                               AND CP1B1.EFFDT <= $BP4-end)
  AND CP1B.COUNTRY          = 'CAN'
ORDER BY CP1A.COMPANY, CP1A.EMPLID, PTC.PROVINCE, PTC.WAGE_LOSS_PLAN
end-SELECT

  if $EmployeeFound = 'Y'

    do Print-Empl-Line
    do T4-Change

    new-page

    display 'Totals for company '  noline
    display &SELECTCO.COMPANY

    display 'Number of employees     = ' noline
    display #Empl-Sub-Cnt

    display 'Total for code 57 = ' noline
    display #Comp_Total_Box1_Wages

    display 'Total for code 58 = ' noline
    display #Comp_Total_Box2_Wages

    display 'Total for code 59 = ' noline
    display #Comp_Total_Box3_Wages

    display 'Total for code 60 = ' noline
    display #Comp_Total_Box4_Wages

    display ' '

  end-if
  let #Total_Box1_Wages    = 0
  let #Total_Box2_Wages    = 0
  let #Total_Box3_Wages    = 0
  let #Total_Box4_Wages    = 0


end-procedure


begin-procedure Get-Name
begin-SELECT
EN.NAME
FROM  PS_NAMES EN
WHERE EN.EMPLID    = $Prev-Emplid
  AND EN.NAME_TYPE = 'PRI'
  AND EN.EFFDT =
      (SELECT MAX(ENB.EFFDT)
       FROM   PS_NAMES ENB
       WHERE  ENB.EMPLID    = EN.EMPLID
         AND  ENB.NAME_TYPE = EN.NAME_TYPE
         AND  ENB.EFFDT    <= $YearEnd)
end-SELECT
end-procedure


begin-procedure Print-Empl-Line

  do Get-Name
  print $Prev-Emplid                 (+1,1)
  print &EN.NAME                     (0,13)
 !print $Prev-Company                (0,65)
  print $Prev-Wage-loss-Plan         (0,77)
  print $Prev-Province               (0,91,2)
  do Format-Number(#Total_Box1_Wages, $out, '999,999,999,999.99')
  print $out                         (0,99)
  do Format-Number(#Total_Box2_Wages, $out, '999,999,999,999.99')
  print $out                         (0,118)
  do Format-Number(#Total_Box3_Wages, $out, '999,999,999,999.99')
  print $out                         (0,137)
  do Format-Number(#Total_Box4_Wages, $out, '999,999,999,999.99')
  print $out                         (0,156)
end-procedure


begin-procedure Get-Prev-EE-Empl-Rcd

  let #Prev-Empl_Rcd = 0

begin-SELECT
CPC.EMPL_RCD

  let #Prev-Empl_Rcd = &CPC.EMPL_RCD

FROM PS_PAY_CHECK CPC
WHERE CPC.COMPANY            = &CP1A.COMPANY
  AND CPC.PAYGROUP           = &CP1A.PAYGROUP
  AND CPC.PAY_END_DT         = &CP1A.PAY_END_DT
  AND CPC.OFF_CYCLE          = &CP1A.OFF_CYCLE
  AND CPC.PAGE_NUM           = &CP1A.PAGE_NUM
  AND CPC.LINE_NUM           = &CP1A.LINE_NUM
  AND CPC.SEPCHK             = &CP1A.SEPCHK
  AND CPC.EMPLID             = &CP1A.EMPLID
end-SELECT

end-procedure


begin-procedure T4-Change

  let $Balance-Row-Found = 'N'
  let #Empl-Sub-Cnt = #Empl-Sub-Cnt
                    + 1

begin-SELECT
EB1.ERNCD
  let $Balance-Row-Found = 'Y'
FROM  PS_CAN_ERN_BALANCE EB1
WHERE EB1.EMPLID             = $Prev-Emplid
  AND EB1.COMPANY            = &SELECTCO.COMPANY
  AND EB1.BALANCE_ID         = $Calendar_Year_Id
  AND EB1.BALANCE_YEAR       = 2020
  AND EB1.WAGE_LOSS_PLAN     = $Prev-Wage-loss-Plan
  AND EB1.PROVINCE           = $Prev-Province
  AND EB1.BALANCE_QTR        = 1
  AND EB1.BALANCE_PERIOD     = 1
  AND EB1.EMPL_RCD           = #Prev-Empl_Rcd
  AND EB1.SPCL_BALANCE       = 'Y'
  AND EB1.ERNCD              = $AA_ERNCD
end-SELECT

  let #Bal-Earns = #Total_Box1_Wages
  let $Bal-Erncd = rtrim(&RC.BOX_AA_ERNCD, ' ')
  if $Balance-Row-Found = 'Y'

    do Update-Balance
  else

    do Insert-Balance
  end-if

  let $Balance-Row-Found = 'N'

begin-SELECT
EB2.ERNCD
  let $Balance-Row-Found = 'Y'
FROM  PS_CAN_ERN_BALANCE EB2
WHERE EB2.EMPLID             = $Prev-Emplid
  AND EB2.COMPANY            = &SELECTCO.COMPANY
  AND EB2.BALANCE_ID         = $Calendar_Year_Id
  AND EB2.BALANCE_YEAR       = 2020
  AND EB2.WAGE_LOSS_PLAN     = $Prev-Wage-loss-Plan
  AND EB2.PROVINCE           = $Prev-Province
  AND EB2.BALANCE_QTR        = 1
  AND EB2.BALANCE_PERIOD     = 1
  AND EB2.EMPL_RCD           = #Prev-Empl_Rcd
  AND EB2.SPCL_BALANCE       = 'Y'
  AND EB2.ERNCD              = $BB_ERNCD
end-SELECT

  let #Bal-Earns = #Total_Box2_Wages
  let $Bal-Erncd = rtrim(&RC.BOX_BB_ERNCD, ' ')
  if $Balance-Row-Found = 'Y'

    do Update-Balance
  else

    do Insert-Balance
  end-if

  let $Balance-Row-Found = 'N'

begin-SELECT
EB3.ERNCD
  let $Balance-Row-Found = 'Y'
FROM  PS_CAN_ERN_BALANCE EB3
WHERE EB3.EMPLID             = $Prev-Emplid
  AND EB3.COMPANY            = &SELECTCO.COMPANY
  AND EB3.BALANCE_ID         = $Calendar_Year_Id
  AND EB3.BALANCE_YEAR       = 2020
  AND EB3.WAGE_LOSS_PLAN     = $Prev-Wage-loss-Plan
  AND EB3.PROVINCE           = $Prev-Province
  AND EB3.BALANCE_QTR        = 1
  AND EB3.BALANCE_PERIOD     = 1
  AND EB3.EMPL_RCD           = #Prev-Empl_Rcd
  AND EB3.SPCL_BALANCE       = 'Y'
  AND EB3.ERNCD              = $CC_ERNCD
end-SELECT

  let #Bal-Earns = #Total_Box3_Wages
  let $Bal-Erncd = rtrim(&RC.BOX_CC_ERNCD, ' ')
  if $Balance-Row-Found = 'Y'

    do Update-Balance
  else

    do Insert-Balance
  end-if

  let $Balance-Row-Found = 'N'

begin-SELECT
EB4.ERNCD
  let $Balance-Row-Found = 'Y'
FROM  PS_CAN_ERN_BALANCE EB4
WHERE EB4.EMPLID             = $Prev-Emplid
  AND EB4.COMPANY            = &SELECTCO.COMPANY
  AND EB4.BALANCE_ID         = $Calendar_Year_Id
  AND EB4.BALANCE_YEAR       = 2020
  AND EB4.WAGE_LOSS_PLAN     = $Prev-Wage-loss-Plan
  AND EB4.PROVINCE           = $Prev-Province
  AND EB4.BALANCE_QTR        = 1
  AND EB4.BALANCE_PERIOD     = 1
  AND EB4.EMPL_RCD           = #Prev-Empl_Rcd
  AND EB4.SPCL_BALANCE       = 'Y'
  AND EB4.ERNCD              = $DD_ERNCD
end-SELECT

  let #Bal-Earns = #Total_Box4_Wages
  let $Bal-Erncd = rtrim(&RC.BOX_DD_ERNCD, ' ')
  if $Balance-Row-Found = 'Y'

    do Update-Balance
  else

    do Insert-Balance
  end-if
  let #Comp_Total_Box1_Wages = #Comp_Total_Box1_Wages
                             + #Total_Box1_Wages
  let #Comp_Total_Box2_Wages = #Comp_Total_Box2_Wages
                             + #Total_Box2_Wages
  let #Comp_Total_Box3_Wages = #Comp_Total_Box3_Wages
                             + #Total_Box3_Wages
  let #Comp_Total_Box4_Wages = #Comp_Total_Box4_Wages
                             + #Total_Box4_Wages
  let #Total_Box1_Wages    = 0
  let #Total_Box2_Wages    = 0
  let #Total_Box3_Wages    = 0
  let #Total_Box4_Wages    = 0


end-procedure


begin-procedure Update-Balance

begin-SQL on-error=Error-Empl-Bal-Update
  UPDATE PS_CAN_ERN_BALANCE
  SET GRS_YTD   = #Bal-Earns,
      GRS_QTD   = #Bal-Earns,
      GRS_MTD   = #Bal-Earns
  WHERE EMPLID             = $Prev-Emplid
    AND COMPANY            = &SELECTCO.COMPANY
    AND BALANCE_ID         = $Calendar_Year_Id
    AND BALANCE_YEAR       = 2020
    AND WAGE_LOSS_PLAN     = $Prev-Wage-loss-Plan
    AND PROVINCE           = $Prev-Province
    AND BALANCE_QTR        = 1
    AND BALANCE_PERIOD     = 1
    AND EMPL_RCD           = #Prev-Empl_Rcd
    AND SPCL_BALANCE       = 'Y'
    AND ERNCD              = $Bal-Erncd
end-SQL


end-procedure


begin-procedure Insert-Balance

begin-SQL  on-error=Error-Empl-Bal-Insert
  INSERT INTO PS_CAN_ERN_BALANCE (EMPLID,
                                  COMPANY,
                                  BALANCE_ID,
                                  BALANCE_YEAR,
                                  WAGE_LOSS_PLAN,
                                  PROVINCE,
                                  BALANCE_QTR,
                                  BALANCE_PERIOD,
                                  EMPL_RCD,
                                  SPCL_BALANCE,
                                  ERNCD,
                                  HRS_YTD,
                                  HRS_QTD,
                                  HRS_MTD,
                                  GRS_YTD,
                                  GRS_QTD,
                                  GRS_MTD)
                          VALUES ($Prev-Emplid,
                                  &SELECTCO.COMPANY,
                                  $Calendar_Year_Id,
                                  2020,
                                  $Prev-Wage-loss-Plan,
                                  $Prev-Province,
                                  1,
                                  1,
                                  #Prev-Empl_Rcd,
                                  'Y',
                                  $Bal-Erncd,
                                  0,
                                  0,
                                  0,
                                  #Bal-Earns,
                                  #Bal-Earns,
                                  #Bal-Earns);
end-SQL

end-procedure


begin-procedure Error-Empl-Bal-Insert

    display ''
    display ''
    display '******************************'
    display ' TAX106CN INSERT ERROR        '
    display ' ON EMPLOYEE ' noline
    display  $Prev-Emplid
    display '******************************'


end-procedure


begin-procedure Error-Empl-Bal-Update

    display ''
    display ''
    display '******************************'
    display ' TAX106CN UPDATE ERROR        '
    display ' ON EMPLOYEE ' noline
    display  $Prev-Emplid
    display '******************************'


end-procedure


begin-procedure Process-Info

  if (&PC.CHECK_DT       >= $BP1-Begin) and
     (&PC.CHECK_DT       <= $BP1-End)

    let #Total_Box1_Wages = #Total_Box1_Wages
                          + &PTC.TXGRS_CUR
  end-if

  if (&PC.CHECK_DT       >= $BP2-Begin) and
     (&PC.CHECK_DT       <= $BP2-End)

    let #Total_Box2_Wages = #Total_Box2_Wages
                          + &PTC.TXGRS_CUR
  end-if

  if (&PC.CHECK_DT       >= $BP3-Begin) and
     (&PC.CHECK_DT       <= $BP3-End)

    let #Total_Box3_Wages = #Total_Box3_Wages
                          + &PTC.TXGRS_CUR
  end-if

  if (&PC.CHECK_DT       >= $BP4-Begin) and
     (&PC.CHECK_DT       <= $BP4-End)

    let #Total_Box4_Wages = #Total_Box4_Wages
                          + &PTC.TXGRS_CUR
  end-if

 !do Other-Earnings

end-procedure


begin-procedure Other-Earnings

begin-SELECT
CP3OB.ERNCD
CP3OB.OTH_EARNS

  if (&PC.CHECK_DT         >= $BP1-Begin) and
     (&PC.CHECK_DT         <= $BP1-End)

    let #Total_Box1_Wages = #Total_Box1_Wages
                          + &CP3OB.OTH_EARNS
  end-if

  if (&PC.CHECK_DT         >= $BP2-Begin) and
     (&PC.CHECK_DT         <= $BP2-End)

    let #Total_Box2_Wages = #Total_Box2_Wages
                          + &CP3OB.OTH_EARNS
  end-if

  if (&PC.CHECK_DT         >= $BP3-Begin) and
     (&PC.CHECK_DT         <= $BP3-End)

    let #Total_Box3_Wages = #TotaL_Box3_Wages
                          + &CP3OB.OTH_EARNS
  end-if

  if (&PC.CHECK_DT         >= $BP4-Begin) and
     (&PC.CHECK_DT         <= $BP4-End)

    let #Total_Box4_Wages = #Total_Box4_Wages
                          + &CP3OB.OTH_EARNS
  end-if


FROM PS_PAY_OTH_EARNS CP3OB
WHERE CP3OB.COMPANY    = &CP1A.COMPANY
  AND CP3OB.PAYGROUP   = &CP1A.PAYGROUP
  AND CP3OB.PAY_END_DT = &CP1A.PAY_END_DT
  AND CP3OB.OFF_CYCLE  = &CP1A.OFF_CYCLE
  AND CP3OB.PAGE_NUM   = &CP1A.PAGE_NUM
  AND CP3OB.LINE_NUM   = &CP1A.LINE_NUM
! AND CP3OB.ADDL_NBR   = &CP1A.ADDL_NBR
  AND CP3OB.SEPCHK     = &CP1A.SEPCHK
  AND EXISTS (SELECT 'X'
              FROM PS_EARNINGS_TBL CP3OC1
              WHERE CP3OC1.ERNCD = CP3OB.ERNCD
                AND CP3OC1.EFFDT = (SELECT MAX (CP3OC2.EFFDT)
                                 FROM PS_EARNINGS_TBL CP3OC2
                                 WHERE CP3OC2.ERNCD = CP3OB.ERNCD
                                   AND CP3OC2.EFFDT <= CP3OB.PAY_END_DT)
                AND CP3OC1.SUBJECT_CUI = 'Y')
end-SELECT


end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
#Include 'datewrk.sqc'
#Include 'datemath.sqc'
