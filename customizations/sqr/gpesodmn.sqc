!*************************************************************!
!       $Release:  HR92                                       !
!           $Bug:  22202648                                   !
!*************************************************************!
! ************************************************************* !
!                                                               !
!                                                               !
! This software and related documentation are provided under a  !
! license agreement containing restrictions on use and          !
! disclosure and are protected by intellectual property         !
! laws. Except as expressly permitted in your license agreement !
! or allowed by law, you may not use, copy, reproduce,          !
! translate, broadcast, modify, license, transmit, distribute,  !
! exhibit, perform, publish or display any part, in any form or !
! by any means. Reverse engineering, disassembly, or            !
! decompilation of this software, unless required by law for    !
! interoperability, is prohibited.                              !
! The information contained herein is subject to change without !
! notice and is not warranted to be error-free. If you find any !
! errors, please report them to us in writing.                  !
!                                                               !
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.       !
! All Rights Reserved.                                          !
! ************************************************************* !
!************************************************************************
! Procedure Print-Certificate-ON-DEMAND
!************************************************************************
begin-procedure Print-Certificate-ON-DEMAND
#debug do Fin-Debug-Msg('Print-Certificate-ON-DEMAND')

  #define DFLT_COL1                02
  #define DFLT_COL2                16
  #define CMPNY_NYA_BOX            {DFLT_COL1}
  #define CMPNY_NYA_FLD            03
  #define CMPNY_CRG_BOX            69
  #define CMPNY_CRG_FLD            70
  #define CMPNY_NM_BOX             {DFLT_COL1}
  #define CMPNY_NM_FLD             03
  #define CMPNY_INDSTRY_BOX        53
  #define CMPNY_INDSTRY_FLD        54
  #define CMPNY_CCC_BOX            92
  #define CMPNY_CCC_FLD            93
  #define CMPNY_ADDR_BOX           {DFLT_COL1}
  #define CMPNY_ADDR_FLD           03
  #define CMPNY_TEL_BOX            67
  #define CMPNY_TEL_FLD            68
  #define CMPNY_FAX_BOX            105
  #define CMPNY_FAX_FLD            106
  #define CMPNY_POSTAL_BOX         {DFLT_COL1}
  #define CMPNY_POSTAL_FLD         03
  #define CMPNY_CITY_BOX           20
  #define CMPNY_CITY_FLD           21
  #define CMPNY_STATE_BOX          72
  #define CMPNY_STATE_FLD          73

  #define EMPL_NM_BOX              {DFLT_COL1}
  #define EMPL_NM_FLD              03
  #define EMPL_DNI_BOX             67
  #define EMPL_DNI_FLD             68
  #define EMPL_FNC_BOX             103
  #define EMPL_FNC_FLD             104
  #define EMPL_LFN_BOX             {DFLT_COL1}
  #define EMPL_LFN_FLD             03
  #define EMPL_PFN_BOX             40
  #define EMPL_PFN_FLD             41
  #define EMPL_SSN_BOX             90
  #define EMPL_SSN_FLD             91
  #define EMPL_ADDR_BOX            {DFLT_COL1}
  #define EMPL_ADDR_FLD            03
  #define EMPL_CP_BOX              59
  #define EMPL_CP_FLD              60
  #define EMPL_LOCAL_BOX           76
  #define EMPL_LOCAL_FLD           77
  #define EMPL_PROV_BOX            109
  #define EMPL_PROV_FLD            110
  #define EMPL_CTG_BOX             {DFLT_COL1}
  #define EMPL_CTG_FLD             03
  #define EMPL_DES_BOX             39
  #define EMPL_DES_FLD             40
  #define EMPL_SER_BOX             {DFLT_COL1}
  #define EMPL_SER_FLD             03
  #define EMPL_SIT_BOX             30
  #define EMPL_SIT_FLD             31
  #define EMPL_SS_TERMDT_BOX       105
  #define EMPL_SS_TERMDT_FLD       106

  #define EMPL_D1_BOX              {DFLT_COL1}
  #define EMPL_D1_FLD              04
  #define EMPL_D2_BOX              63
  #define EMPL_D2_FLD              65


  #define EMPL_DMA_BOX             {DFLT_COL1}
  #define EMPL_DMA_FLD             04
  #define EMPL_BC_BOX              63
  #define EMPL_BC_FLD              65

  #define MAIN_BOX_WIDTH           {ColR}
  #define MAIN_BOX_WIDTH_2         65

  #define ARIAL                    4
  #define ARIAL_BOLD               400
  #define COURIER_NEW              3
  #define HELVETICA_NARROW         38
  #define TIMES_ITALIC             32

    !---- HEADER PART----!
  PRINT-IMAGE  (  1,  {DFLT_COL1})
  type         = jpeg-file
  image-size   = (32,7)
  source       = $FileDir

   PRINT-IMAGE  (  3,  100)
   type         = jpeg-file
   image-size   = (25,9)
   source       = $FileDir2
 
  alter-printer point-size=12 font={ARIAL_BOLD}
  print 'CERTIFICACIÓN DE EMPRESA'                                                                      (12,{DFLT_COL1})

  alter-printer point-size=16 font={ARIAL}
  graphic (+3, {CMPNY_NYA_BOX}, {MAIN_BOX_WIDTH}) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_CRG_BOX} + 2
  graphic (  , {CMPNY_CRG_BOX}, #Width) box 3
  alter-printer point-size=7 font={ARIAL}
  print 'Nombre y apellidos de la persona que certifica'                                                (  , {CMPNY_NYA_FLD})
  print 'Cargo que desempeña'                                                                           (  , {CMPNY_CRG_FLD})
  print $Responsible-Name                                                                               (+1, {CMPNY_NYA_FLD})
  print $Reponsible-JobCode                                                                             (  , {CMPNY_CRG_FLD})

  alter-printer point-size=16 font={ARIAL}
  graphic (+2, {CMPNY_NM_BOX}, {MAIN_BOX_WIDTH}) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_INDSTRY_BOX} + 2
  graphic ( , {CMPNY_INDSTRY_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_CCC_BOX} + 2
  graphic (  , {CMPNY_CCC_BOX}, #Width) box 3
  alter-printer point-size=7 font={ARIAL}
  print 'Denominación de la Empresa'                                                                    (  , {CMPNY_NM_FLD})
  print 'Actividad'                                                                                     (  , {CMPNY_INDSTRY_FLD})
  print 'Código de cuenta de cotización (CCC)'                                                          (  , {CMPNY_CCC_FLD})
  print $Cmpny-Descr                                                                                    (+1, {CMPNY_NM_FLD})
  Do INDSTRY-ACT-ESP
  print $Cmpny-Indstry-Desc                                                                             (  , {CMPNY_INDSTRY_FLD})
  print $Cmpny-Ssn                                                                                      (  , {CMPNY_CCC_FLD})

  alter-printer point-size=16 font={ARIAL}
  graphic (+2, {CMPNY_ADDR_BOX}, {MAIN_BOX_WIDTH}) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_TEL_BOX} + 2
  graphic ( , {CMPNY_TEL_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_FAX_BOX} + 2
  graphic ( , {CMPNY_FAX_BOX}, #Width) box 3
  alter-printer point-size=7 font={ARIAL}
  print 'Domicilio (calle o plaza y número)'                                                            (  , {CMPNY_ADDR_FLD})
  print 'Número de telefono'                                                                            (  , {CMPNY_TEL_FLD})
  print 'Número de telefax'                                                                             (  , {CMPNY_FAX_FLD})
  print $Cmpny-Domicilio                                                                                  (+1, {CMPNY_ADDR_FLD})
  print $Cmpny-Telefono                                                                                 (  , {CMPNY_TEL_FLD})
  print $Cmpny-Fax                                                                                      (  , {CMPNY_FAX_FLD})

  alter-printer point-size=16 font={ARIAL}
  graphic (+2, {CMPNY_POSTAL_BOX}, {MAIN_BOX_WIDTH}) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_CITY_BOX} + 2
  graphic ( , {CMPNY_CITY_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_STATE_BOX} + 2
  graphic ( , {CMPNY_STATE_BOX}, #Width) box 3

  alter-printer point-size=7 font={ARIAL}
  print 'Código postal'                                                                                 (  , {CMPNY_POSTAL_FLD})
  print 'Localidad'                                                                                     (  , {CMPNY_CITY_FLD})
  print 'Provincia'                                                                                     (  , {CMPNY_STATE_FLD})
  print $Cmpny-Postal                                                                                   (+1, {CMPNY_POSTAL_FLD})
  PRINT $Cmpny-City                                                                                     (  , {CMPNY_CITY_FLD})
  print $Cmpny-State-Desc                                                                               (  , {CMPNY_STATE_FLD})

  alter-printer point-size=11 font={ARIAL}
  print 'CERTIFICA:'                                                                                    (+3,60)

  alter-printer point-size=9 font={ARIAL}
  print '1º Que el trabajador que a continuación se indica ha prestado servicios en esta Empresa'       (+2, {DFLT_COL1})
  Let #Empl-Data-Hdr-Ln = #current-line + 2
  alter-printer point-size=16 font={ARIAL}
  position (#Empl-Data-Hdr-Ln, {DFLT_COL1})
  Let #Width = {DFLT_COL2} - 2

  alter-printer point-size=16 font={ARIAL}
  position (#Empl-Data-Hdr-Ln, {DFLT_COL1})
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_NM_BOX} + 2
  graphic ( , {EMPL_NM_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_DNI_BOX} + 2
  graphic ( , {EMPL_DNI_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_FNC_BOX} + 2
  graphic ( , {EMPL_FNC_BOX}, #Width) box 3
  alter-printer point-size=7 font={ARIAL}
  print 'Apellidos y nombre'                                                                            (  , {EMPL_NM_FLD})
  print 'DNI-NIE-pasaporte'                                                                                (  , {EMPL_DNI_FLD})
  print 'Fecha de nacimiento'                                                                           (  , {EMPL_FNC_FLD})
  PRINT $Empl-Name                                                                                      (+1, {EMPL_NM_FLD})
  PRINT $Empl-DNI                                                                                       (  , {EMPL_DNI_FLD})


  do Format-DateTime($Empl-FechaNacimiento, $Empl-FechaNacimiento-print, {DEFDMY}, '', '')
  PRINT $Empl-FechaNacimiento-print                                                                     (  , {EMPL_FNC_FLD})
  alter-printer point-size=16 font={ARIAL}
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_LFN_BOX} + 2
  graphic (+2, {EMPL_LFN_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PFN_BOX} + 2
  graphic ( , {EMPL_PFN_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_SSN_BOX} + 2
  graphic ( , {EMPL_SSN_BOX}, #Width) box 3
  alter-printer point-size=7 font={ARIAL}
  print 'Localidad de nacimiento'                                                                       (  , {EMPL_LFN_FLD})
  print 'Provincia'                                                                                     (  , {EMPL_PFN_FLD})
  print 'Núm.de la Seguridad Social'                                                         (  , {EMPL_SSN_FLD})
  PRINT $Empl-LocalidadNacimiento                                                                       (+1, {EMPL_LFN_FLD})
  PRINT $Empl-ProvinciaNacimiento                                                                       (  , {EMPL_PFN_FLD})
  PRINT $Empl-SSN                                                                                       (  , {EMPL_SSN_FLD})      EDIT 'XX/XXXXXXXX/XX'

  alter-printer point-size=16 font={ARIAL}
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_ADDR_BOX} + 2
  graphic (+2, {EMPL_ADDR_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_CP_BOX} + 2
  graphic (  , {EMPL_CP_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_LOCAL_BOX} + 2
  graphic (  , {EMPL_LOCAL_BOX}, #Width) box 3
  !Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PROV_BOX} + 2
  !graphic (  , {EMPL_PROV_BOX}, #Width) box 3
  alter-printer point-size=7 font={ARIAL}
  print 'Domicilio (calle o plaza y número)'                                                            (  , {EMPL_ADDR_FLD})
  print 'Código postal'                                                                                 (  , {EMPL_CP_FLD})
  print 'Localidad'                                                                                     (  , {EMPL_LOCAL_FLD})
 !print 'Provincia'                                                                                     (  , {EMPL_PROV_FLD})
  PRINT $Empl-Address                                                                                   (+1, {EMPL_ADDR_FLD})
  print $Empl-Postal                                                                                    (  , {EMPL_CP_FLD})
  print $Empl-City                                                                                      (  , {EMPL_LOCAL_FLD})
 !print $Empl-State-Desc                                                                                (  , {EMPL_PROV_FLD})

  alter-printer point-size=16 font={ARIAL}
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_CTG_BOX} + 2
  graphic (+2, {EMPL_CTG_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_DES_BOX} + 2
  graphic (  , {EMPL_DES_BOX}, #Width) box 3
  alter-printer point-size=7 font={ARIAL}
  !print 'Categoría profesional'                                                                         (  , {EMPL_CTG_FLD})
  print 'Provincia'                                                                                      (  , {EMPL_CTG_FLD})
  print 'Descripción de las tareas realizadas'                                                           (  , {EMPL_DES_FLD})
  !PRINT $Empl-Ctg-Desc                                                                                  (+1, {EMPL_CTG_FLD})
  PRINT $Empl-State-Desc                                                                                 (+1, {EMPL_CTG_FLD})

  alter-printer point-size=9 font={ARIAL}
  print '2º Que en la actualidad se encuentra en la siguiente situación'                                (+3, {DFLT_COL1})
  alter-printer point-size=16 font={ARIAL}
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_SER_BOX} + 2
  graphic (+2, {EMPL_SER_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_SIT_BOX} + 2
  graphic (  , {EMPL_SIT_BOX}, #Width) box 3
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_SS_TERMDT_BOX} + 2
  graphic (  , {EMPL_SS_TERMDT_BOX}, #Width) box 3

  alter-printer point-size=7 font={ARIAL}
  print 'En situación de baja por'                                                                      (  , {EMPL_SIT_FLD})
  print 'Fecha de la baja'                                                                              (  , {EMPL_SS_TERMDT_FLD})
  alter-printer point-size=7 font={ARIAL}
  print 'En Servicio activo'                                                                            (+1, {EMPL_SER_FLD})
  print 'SI'  (  , 18)
  graphic     (  ,21, 2) box 1
  print 'NO'  (  , 24)
  graphic     (  ,27, 2) box 1

  Do ABSENCE-DATA-ONDEMAND

  alter-printer point-size=8 font={ARIAL_BOLD}
  If $Abs_Begin_Dt <> ''
    print 'X'                                                                                           (  , 27)
    alter-printer point-size=7 font={ARIAL}
    print $Abs_Take_Descr                                                                               (  , 31)
    do Format-DateTime($Abs_Begin_Dt , $Out, {DEFDMY}, '', '')
    print $Out                                                                                          (  , 106)
  Else
    print 'X'                                                                                           (  , 21)
  End-If
  
  alter-printer point-size=9 font={ARIAL}
  print '3º Que los servicios han sido prestados en los siguientes períodos'                            (+3, {DFLT_COL1})
  do Format-DateTime($Contract_begin_dt, $out, {DEFCMP}, '', '')
  let $Day_contract = substr($out, 7, 2)
  let $Month_contract = substr($out, 5, 2)
  let $Year_contract = substr($out, 1, 4)

  alter-printer point-size=16 font={ARIAL}
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_D1_BOX} + 2
  graphic (+2, {EMPL_D1_BOX}, #Width) box 9
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_D2_BOX} + 2
  graphic ( , {EMPL_D2_BOX}, #Width) box 9

  alter-printer point-size=7 font={ARIAL}

  let #Contract-ln = #current-line + 1
  print 'Desde ..............................................  hasta ....................................................'         (+1  , {EMPL_D1_FLD})
  print 'Desde ..............................................  hasta ....................................................'         (  , {EMPL_D2_FLD})

  !***This block need not be filled****!
  !print  $Day_contract     (-1 ,10)
  !print  $Month_contract   ( ,15)
  !print  $Year_contract    ( ,25)

  print 'Desde ..............................................  hasta ....................................................'         (+1  , {EMPL_D1_FLD})
  print 'Desde ..............................................  hasta ....................................................'         (  , {EMPL_D2_FLD})

  print 'Desde ..............................................  hasta ....................................................'         (+1  , {EMPL_D1_FLD})
  print 'Desde ..............................................  hasta ....................................................'         (  , {EMPL_D2_FLD})
  print 'Desde ..............................................  hasta ....................................................'         (+1  , {EMPL_D1_FLD})
  print 'Desde ..............................................  hasta ....................................................'         (  , {EMPL_D2_FLD})

  
  alter-printer point-size=9 font={ARIAL}
  print '4º Que en el período que a continuación se detalla cotizó a la Seguridad Social por las bases que se señalan (*)'    (+2, {DFLT_COL1})

  ! TABLA 1
  #define TABLE-ROWS          5
  #define DFLT_BC_HEIGHT      2
  #define DFLT_LINE_HEIGHT    2

  alter-printer point-size=16 font={ARIAL}
  graphic (+2, {DFLT_COL1}, 61) box {DFLT_BC_HEIGHT} 1
  Let #Line-Prev = #current-line
  Let #Height = {DFLT_BC_HEIGHT}
  Let #I = 1
  While #I <= {TABLE-ROWS}
       graphic (  , {DFLT_COL1}, 10) box #Height 1 #Shadow      !Column MES
       graphic (  , {DFLT_COL1}, 18) box #Height 1 0            !Column NUMEROS DIAS COTIZADOS (4)
       graphic (  , {DFLT_COL1}, 37) box #Height 1 0            !Column BASE COTIZACIÓN CONTINGENCIAS COMUNES (6)
       graphic (  , {DFLT_COL1}, 61) box #Height 1 0
       position (+#Height, )
       Let #Height = {DFLT_LINE_HEIGHT}
       Let #I = #I + 1
  End-While

  alter-printer point-size=7 font={ARIAL}
  print 'Mes'                                                                                          (#Line-Prev, {EMPL_D1_FLD})
  print 'Num.'                                                                                          (  ,14)
  PRINT ' Grupo'                                                                                        (  ,25)
  print 'Bases de cotización'                                                                           (  ,41)
  print 'y Año'                                                                                         (+1, {EMPL_D1_FLD})
  print 'de días'                                                                                       (  ,13)
  print 'cotización'                                                                                    (  ,24)

  !TABLA 2
  #define TABLE-ROWS          5
  #define DFLT_BC_HEIGHT      2
  #define DFLT_LINE_HEIGHT    2

  alter-printer point-size=8 font={ARIAL}
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_D2_BOX} + 2
  graphic (-1, 63, #Width) box {DFLT_BC_HEIGHT} 1

  Let #Line-Prev = #current-line
  Let #Height = {DFLT_BC_HEIGHT}
  Let #I = 1
  While #I <= {TABLE-ROWS}
       graphic (  , 63, 10)  box #Height 1 #Shadow     !Column MES
       graphic (  , 63, 18) box #Height 1 0            !Column NUMEROS DIAS COTIZADOS (4)
       graphic (  , 63, 37) box #Height 1 0            !Column BASE COTIZACIÓN CONTINGENCIAS COMUNES (6)
       graphic (  , 63, 61) box #Height 1 0
       position (+#Height, )
       Let #Height = {DFLT_LINE_HEIGHT}
       Let #I = #I + 1
  End-While

  alter-printer point-size=7 font={ARIAL}
  print 'Mes'                                                                                           (#Line-Prev, {EMPL_D2_FLD})
  print 'Num.'                                                                                          (  ,75)
  PRINT ' Grupo'                                                                                        (  ,87)
  print 'Bases de cotización'                                                                           (  ,102)
  print 'y Año'                                                                                         (+1, {EMPL_D2_FLD})
  print 'de días'                                                                                       ( ,74)
  print 'cotización'                                                                                    (  ,86)

end-procedure


!************************************************************************
! Procedure Print-Certificate-ON-DEMAND_Pg2
!************************************************************************
begin-procedure Print-Certificate-ON-DEMAND_Pg2
#debug do Fin-Debug-Msg('Print-Certificate-ON-DEMAND_Pg2')

   new-page
 
   alter-printer point-size=16 font={ARIAL}
  
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_NM_BOX} + 3
   graphic ( +4, {EMPL_NM_BOX}, #Width) box 4
   
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_CCC_BOX} + 3
   graphic ( , {CMPNY_CCC_BOX}, #Width) box 4
   
     
   alter-printer point-size=7 font={ARIAL}
   print 'Apellidos y nombre'                                                                            (+1, {EMPL_NM_FLD})
   print 'DNI-NIE-pasaporte'                                                                             (  , {CMPNY_CCC_FLD})
  
   PRINT $Empl-Name                                                                                      (+1, {EMPL_NM_FLD})
   PRINT $Empl-DNI                                                                                       (  , {CMPNY_CCC_FLD})

 
  alter-printer point-size=9 font={ARIAL}
  print '5º Que existen los períodos de vacaciones anuales retribuídas y no disfrutadas que a continuación se indican' (+5, {DFLT_COL1})

  alter-printer point-size=16 font={ARIAL}
  Let #Width = {MAIN_BOX_WIDTH} - {EMPL_DMA_BOX} + 2
  graphic (+2, {EMPL_DMA_BOX}, #Width) box 9
  
  Let #Vactn-Line = #current-line + 1
  alter-printer point-size=7 font={ARIAL}
  print 'Desde ..............................................  hasta ....................................................'  (+1  , {EMPL_D1_FLD})
  print 'Bases de cotización ........................................................................................'      (  , {EMPL_BC_FLD})
  print 'Desde ..............................................  hasta ....................................................'  (+1  , {EMPL_D1_FLD})
  print 'Bases de cotización ........................................................................................'      (  , {EMPL_BC_FLD})
  print 'Desde ..............................................  hasta ....................................................'  (+1  , {EMPL_D1_FLD})
  print 'Bases de cotización ........................................................................................'      (  , {EMPL_BC_FLD})
  print 'Desde ..............................................  hasta ....................................................'  (+1  , {EMPL_D1_FLD})
  print 'Bases de cotización ........................................................................................'      (  , {EMPL_BC_FLD})

  do Format-DateTime($AsOfToday, $out, {DEFCMP}, '', '')
  let $Day = substr($out, 7, 2)
  let $Month = substr($out, 5, 2)
  let $Year = substr($out, 1, 4)

  let $FieldName = 'GPES_MONTHCD'
  let $FieldValue = $Month
  let $AsOfDate = $Select-ASOFDATE
  Do Read-Translate-Table
  let $Month_Cd_Descr = RTrim($XLatshortName, ' ')

  alter-printer point-size=9 font={ARIAL}

  print 'Y para que conste ante la Direccion Provisional Del Instituto Nacional de la Seguridad Social, firma la presente '     (+2,  10)
  Let $As-Of-String ='certificación, en ' ||$Cmpny-State-Desc ||'        , ' ||' a ' || $Day || '    de ' || $Month_Cd_Descr || ' de     ' || $Year || ' . '
  print $As-Of-String                                                                                   (+2, 03)
  print '(Firma y sello de la Empresa)'                                                                 (+2, 73)


  alter-printer point-size=6 font={ARIAL}

  print '-------------------'                                                                           (+65, 03)
  print 'La certificación deberá expedirse:'                                                            (+1, 03)
  print ' - A petición de una Entidad Gestora o Servicio Común de la Seguridad Social.'                 (+1, 07)
  print ' - A petición de un trabajador que preste o haya prestado servicios en la Empresa o a solicitud de sus derechohabientes.'  (+1, 07)
  print '(*) Las bases de cotización que han de certificarse serán, como máximo, de 6 mensualidades sucesivas que deberán coincidir siempre con las'  (+1, 03)
  print ' que figuren en las relaciones nominales (modelo TC-2) referidas a iguales meses.'             (, 06)
  print ' Las empresas que tramiten la cotización por vías telemáticas mediante el sistema RED desde hace mas de 6 meses, no necesitan certificar'  (+1, 06)
  print ' las bases anteriores a los 3 últimos meses.'                                                  (, 06)

end-procedure


!************************************************************************
! Procedure Print-Vacations-Ln-ONDEMAND_Pg2
!************************************************************************
begin-procedure Print-Vacations-Ln-ONDEMAND_Pg2
#debug do Fin-Debug-Msg('Print-Vacations-Ln-ONDEMAND_pg2')

move 0 to #i
alter-printer point-size=7 font={ARIAL}
while #i < #vacationcount

  Let #Cnt-Col = {EMPL_D1_FLD}
  Let #Cnt-Col = #Cnt-Col + 6
  
  !Read data from the array
  get $Vactn-Bgn-dt-CMP $Vactn-End-dt-CMP #Vactn-Total-Dsmpl from vacationarray(#i)

  do Format-DateTime($Vactn-Bgn-dt-CMP,$Vactn-Bgn-dt-CMP_out,{DEFDMY},'','')
  print $Vactn-Bgn-dt-CMP_out                                                       ( #Vactn-Line, #Cnt-Col)
  
  Let #Cnt-Col = #Cnt-Col + 26
  do Format-DateTime($Vactn-End-dt-CMP,$Vactn-End-dt-CMP_out,{DEFDMY},'','')
  print $Vactn-End-dt-CMP_out                                                        ( #Vactn-Line, #Cnt-Col)

  Do Format-Number(#Vactn-Total-Dsmpl, $out, '999,999.99')
  let $Out = lpad($out, 11, ' ')
  print $Out                                                                     ( #Vactn-Line, 79)
 
  add 1 to #i
  let #Vactn-Line = #Vactn-Line + 2
end-while

end-procedure


!************************************************************************
! Procedure New-Certificate-ON-DEMAND-Page
!************************************************************************
begin-procedure New-Certificate-ON-DEMAND-Page1
#debug do Fin-Debug-Msg('New-Certificate-ON-DEMAND-Page')

  New-Page 1
  Do Print-Certificate-ON-DEMAND
  Do Print-Contracts-Periods
  let #Table-Row = {TABLE-ROWS} - 3
  let #linea_ant = 68
  let #linea_ant2 = 68

end-procedure


!************************************************************************
! Procedure Print-Contracts-Periods
!************************************************************************
begin-procedure Print-Contracts-Periods
#debug do Fin-Debug-Msg('Print-Contracts-Periods')

do Convert-To-DTU-Date($Select-ASOFDATE, $End-dt-DTU)
do dtu-add-years($End-dt-DTU, -6, $Begin-dt-DTU)
do Convert-From-DTU-Date($Begin-dt-DTU, $Begin-dt)

!---if $Empl-Terminated = 'Y'
do Format-DateTime($Termination-Dt, $Termination-Dt-CMP, {DEFCMP}, '', '')
!---else
!---  do Format-DateTime($Select-ASOFDATE, $Termination-Dt-CMP, {DEFCMP}, '', '')
!---end-if
let #TermMonth = substr($Termination-Dt-CMP, 5, 2)
let #TermYear = substr($Termination-Dt-CMP, 1, 4)

do Format-DateTime($Begin-dt, $Begin-dt-CMP, {DEFCMP}, '', '')
do Format-DateTime($Hire-Dt, $Hire-Dt-CMP, {DEFCMP}, '', '')
If $Hire-Dt-CMP > $Begin-dt-CMP
   Let $Begin-dt-CMP = $Hire-Dt-CMP
end-if
let #BgnMonth = substr($Begin-dt-CMP, 5, 2)
let #BgnYear = substr($Begin-dt-CMP, 1, 4)

#Debugd show 'Contract Period Begin Yr/Mnth: ' #BgnYear  '/'  #BgnMonth
#Debugd show 'Contract Period End Yr/Mnth:   ' #TermYear '/'  #TermMonth
#debugd show 'EMPLID:  ' $Select-EMPLID
#debugd show 'EMPLRCD: ' #Select-EMPL-RCD

Let #Contract-Col = 1
Let #CntrtCount   = 0

alter-printer point-size=7 font={ARIAL}

let $sql-statement = 'GPESFNQ1.SQR,Print-Contracts-Periods,Select,PS_GPES_SSTC_RS_VW SSCTWK'
Begin-SELECT DISTINCT on-error=SQL-Error
CWK_DEMAND.EMPLID
CWK_DEMAND.CONTRACT_NUM
CWK_DEMAND.CONTRACT_BEGIN_DT         &CNTRCT_BGN_DT_DEMAND
MIN(CWK_DEMAND.CONTRACT_END_DT)      &CNTRCT_END_DT_DEMAND

  Let $Contract-Bgn-Dt = &CNTRCT_BGN_DT_DEMAND

  do Format-DateTime(&CNTRCT_END_DT_DEMAND, $Contract-End-Dt-CMP, {DEFCMP}, '', '')
  do Format-DateTime($Select-ASOFDATE, $Select-ASOFDATE-CMP, {DEFCMP}, '', '')
  If NVL(&CNTRCT_END_DT_DEMAND, '') <> '' and $Contract-End-Dt-CMP <= $Select-ASOFDATE-CMP
    Let $Contract-End-Dt = &CNTRCT_END_DT_DEMAND
  else
    !Executing INEM report for an active employee needs a contract end date
    Let $Contract-End-Dt = $Select-ASOFDATE
  End-if

  #Debugd show 'Contract Period Bg. Dt:         ' &CNTRCT_BGN_DT_DEMAND
  #Debugd show 'Contract Period En. Dt:         ' &CNTRCT_END_DT_DEMAND
  #Debugd show 'Contract Period En. Dt (Final): ' $Contract-End-Dt

      do Format-DateTime($Contract-Bgn-Dt, $Cntrct_Bgn_Dt-CMP, {DEFCMP}, '', '')
      do Format-DateTime($Contract-End-Dt, $Cntrct_End_Dt-CMP, {DEFCMP}, '', '')
      If #Contract-Col = 1
        Let #Cnt-Col = {EMPL_D1_FLD}

        Let #Contract-Col = 2
      Else
        Let #Cnt-Col = {EMPL_D2_FLD}

        Let #Contract-Col = 1
      End-if
      
      Let #Cnt-Col = #Cnt-Col + 6
      !Let #DtPart = substr($Cntrct_Bgn_Dt-CMP, 7, 2)
      !Do Format-Number(#DtPart, $Out, '99')
      !print $Out                                             (#Contract-ln, #Cnt-Col, 2)
      !Let #Cnt-Col = #Cnt-Col + 5
      !Let #DtPart = substr($Cntrct_Bgn_Dt-CMP, 5, 2)
      !Do Format-Number(#DtPart, $Out, '09')
      !let $FieldName = 'GPES_MONTHCD'
      !let $FieldValue = $Out
      !let $AsOfDate = $Select-ASOFDATE
      !Do Read-Translate-Table
      !let $Month_Cd_Descr = RTrim($XLatshortName, ' ')
      !print $Month_Cd_Descr                                  (            , #Cnt-Col, 17)
      !Let #Cnt-Col = #Cnt-Col + 13
      !Let #DtPart = substr($Cntrct_Bgn_Dt-CMP, 1, 4)
      !Do Format-Number(#DtPart, $Out, '9999')
      !print $Out                                             (            , #Cnt-Col, 4)
      
       do Format-DateTime($Contract-Bgn-Dt, $Cntrct_Bgn_Dt-CMP_out, {DEFDMY}, '', '')
       print $Cntrct_Bgn_Dt-CMP_out                           (#Contract-ln, #Cnt-Col)
       
      Let #Cnt-Col = #Cnt-Col + 26

      !Let #Cnt-Col = #Cnt-Col + 6
      
      !Let #DtPart = substr($Cntrct_End_Dt-CMP, 7, 2)
      !Do Format-Number(#DtPart, $Out, '99')
      !print $Out                                             (            , #Cnt-Col, 2)
      !Let #Cnt-Col = #Cnt-Col + 5
      !Let #DtPart = substr($Cntrct_End_Dt-CMP, 5, 2)
      !Do Format-Number(#DtPart, $Out, '09')
      !let $FieldName = 'GPES_MONTHCD'
      !let $FieldValue = $Out
      !let $AsOfDate = $Select-ASOFDATE
      !Do Read-Translate-Table
      !let $Month_Cd_Descr = RTrim($XLatshortName, ' ')
      !print $Month_Cd_Descr                                  (            , #Cnt-Col, 17)
      !Let #Cnt-Col = #Cnt-Col + 13
      !Let #DtPart = substr($Cntrct_End_Dt-CMP, 1, 4)
      !Do Format-Number(#DtPart, $Out, '9999')
      !print $Out                                             (            , #Cnt-Col, 4)

       do Format-DateTime($Contract-End-Dt, $Cntrct_End_Dt-CMP_out, {DEFDMY}, '', '')
       print $Cntrct_End_Dt-CMP_out                           (            , #Cnt-Col)
       
      If #Contract-Col = 1
        Let #Contract-ln = #Contract-ln + 2
      End-if

  Let #CntrtCount = #CntrtCount + 1
  If #CntrtCount = 8
    EXIT-SELECT
  End-if

FROM PS_GPES_SSTC_RS_VW SSTCWK_DEMAND
    ,PS_CONTRACT_DATA CWK_DEMAND

WHERE SSTCWK_DEMAND.EMPLID = $Select-EMPLID
 AND  SSTCWK_DEMAND.EMPL_RCD = #Select-EMPL-RCD
 AND  SSTCWK_DEMAND.EMPLID = CWK_DEMAND.EMPLID
 AND  SSTCWK_DEMAND.CONTRACT_NUM = CWK_DEMAND.CONTRACT_NUM
 !AND  SSTCWK_DEMAND.GPES_SSTC_HRS_FLAG = 'H'

 AND  SSTCWK_DEMAND.GPES_SSTC_ELEMENT IN ('BA01','BA22')
 AND  SSTCWK_DEMAND.GPES_SSTC_LGL_CUST <> 'T'

 AND (((SSTCWK_DEMAND.GPES_YEAR_RECALC = #BgnYear AND SSTCWK_DEMAND.GPES_MONTH_RECALC >= #BgnMonth) OR SSTCWK_DEMAND.GPES_YEAR_RECALC > #bgnYear)
   AND ((SSTCWK_DEMAND.GPES_YEAR_RECALC = #TermYear AND SSTCWK_DEMAND.GPES_MONTH_RECALC <= #TermMonth) OR SSTCWK_DEMAND.GPES_YEAR_RECALC < #TermYear)
   AND SSTCWK_DEMAND.SLICE_BGN_DT >= $Hire-Dt AND SSTCWK_DEMAND.SLICE_BGN_DT <= $Termination-Dt)

 AND  SSTCWK_DEMAND.GPES_SSTC_PAYMNT NOT IN ('L13')

GROUP BY CWK_DEMAND.EMPLID, CWK_DEMAND.CONTRACT_NUM, CWK_DEMAND.CONTRACT_BEGIN_DT
ORDER BY CWK_DEMAND.EMPLID, CWK_DEMAND.CONTRACT_NUM, CWK_DEMAND.CONTRACT_BEGIN_DT DESC

End-SELECT
  #debugd show ''
  #debugd show '******************************PRINT CONTRACTS PERIODS WHERE CLAUSE************************'
  #debugd show 'FROM PS_GPES_SSTC_RS_VW SSTCWK_DEMAND'
  #debugd show '    ,PS_CONTRACT_DATA CWK_DEMAND'
  #debugd show 'WHERE SSTCWK_DEMAND.EMPLID = ''' $Select-EMPLID ''''
  #debugd show 'AND  SSTCWK_DEMAND.EMPL_RCD = ' #Select-EMPL-RCD
  #debugd show 'AND  SSTCWK_DEMAND.EMPLID = CWK_DEMAND.EMPLID'
  #debugd show 'AND  SSTCWK_DEMAND.CONTRACT_NUM = CWK_DEMAND.CONTRACT_NUM  '
  #debugd show '--AND  SSTCWK_DEMAND.GPES_SSTC_HRS_FLAG = ''H'''
  #debugd show 'AND  SSTCWK_DEMAND.GPES_SSTC_ELEMENT IN (''BA01'',''BA22'')'
  #debugd show 'AND  SSTCWK_DEMAND.GPES_SSTC_LGL_CUST <> ''T'''
  #debugd show 'AND (((SSTCWK_DEMAND.GPES_YEAR_RECALC = ' #BgnYear ' AND SSTCWK_DEMAND.GPES_MONTH_RECALC >= ' #BgnMonth ') OR SSTCWK_DEMAND.GPES_YEAR_RECALC > ' #bgnYear ')'
  #debugd show '   AND ((SSTCWK_DEMAND.GPES_YEAR_RECALC = ' #TermYear ' AND SSTCWK_DEMAND.GPES_MONTH_RECALC <= ' #TermMonth ') OR SSTCWK_DEMAND.GPES_YEAR_RECALC < ' #TermYear ')'
  #debugd show '   AND SSTCWK_DEMAND.SLICE_BGN_DT >= ''' $Hire-Dt ''' AND SSTCWK_DEMAND.SLICE_BGN_DT <= ''' $Termination-Dt ''')'
  #debugd show ' AND  SSTCWK_DEMAND.GPES_SSTC_PAYMNT NOT IN (''L13'')'
  #debugd show '******************************PRINT CONTRACTS PERIODS WHERE CLAUSE************************'
  #debugd show ''

end-procedure


!************************************************************************
! Procedure Print-Contribution-bases-ON-DEMAND
!************************************************************************
begin-procedure Print-Contribution-bases-ON-DEMAND
#debug do Fin-Debug-Msg('Print-Contribution-bases-ON-DEMAND')

create-array name=vacationarray size=10 field=begindate:date field=enddt:date field=bases:number
let #vacationcount = 0

  do Format-DateTime($Select-ASOFDATE, $out, {DEFCMP}, '', '') ! - CONTAR LOS DÍAS DESDE LA FECHA DE LANZAMIENTO DEL INFORME
  let #From-Year = substr($out, 1, 4)
  let #From-Month = substr($out, 5, 2)
  let #Prev-Year = #From-Year
  let #Prev-Month = #From-Month
  let  #Prev_GPES_YEAR=#From-Year
  let  #Prev_GPES_MONTH=#From-Month

  do Format-DateTime($Hire-Dt, $out, {DEFCMP}, '', '')
  let #To-Year =  substr($out, 1, 4)
  let #To-Month = substr($out, 5, 2)
  let #To-Day = substr($out, 7, 2)

  #Debugd show 'HR STATUS: ' &JOB.HR_STATUS
  If &JOB.HR_STATUS = 'I'
     #Debugd show 'Employee inactive. Cnt End Dt: ' &CNTRCT.CONTRACT_END_DT
  End-if
  let #Total-CC = 0
  let #Total-Dsmpl = 0
  let #OT_hrs = 0
  let #denormalzdCP = 0
  let #OTbetCeilings = 0
  let #Ctz-Days = 0
  let #Ctz-Days_L03  = 0
  let #Init-Natural-Days = 1
  let #Empl-Total-CC = 0
  let #Empl-Total-Dsmpl = 0
  let #Empl-Ctz-Days = 0
  let #Vactn-Total-CC = 0
  let #Vactn-Total-Dsmpl = 0
  let #Vactn-Ctz-Days = 0
  let $Prev-sstc-Paymnt = ' '
  !let $Prev-Cmpny-Ssn = $Cmpny-Ssn
  let $Vacn-Cnt-End-Dt-Prev = &CNTRCT.CONTRACT_END_DT
  let #Natural-Days = 0
  let #Contributing-Days = 0
  let $Forced-Exit-Flag = ''
  let #prev_month_imp = 0
  let #linea_ant = 68
  let #linea_ant2 = 68
  let #contador = 1
  let #Table-Row = {TABLE-ROWS} - 3
  Do Print-Certificate-ON-DEMAND
  Do Print-Contracts-Periods

let $sql-statement = 'GPESFNQ1.SQR,Print-Contribution-bases-BAJ,Select,PS_GPES_SSTC_RS_VW'
Begin-SELECT on-error=SQL-Error
SSTC_DEMAND.EMPLID
SSTC_DEMAND.GPES_YEAR_RECALC
SSTC_DEMAND.GPES_MONTH_RECALC
SSTC_DEMAND.GPES_YEAR
SSTC_DEMAND.GPES_MONTH
  !SSTC_DEMAND.SSN_EMPLOYER
SSTC_DEMAND.GPES_SSTC_ELEMENT
SSTC_DEMAND.GPES_SSTC_PAYMNT
MIN(SSTC_DEMAND.CONTRACT_NUM)  &SSTC_DEMAND.CONTRACT_NUM
SSTC_DEMAND.GPES_SSTC_LGL_CUST
SSTC_DEMAND.GPES_SSTC_OTHERS
CWKD.CONTRACT_END_DT           &CNT_END_DT_D
  Let $Vacn-Cnt-End-Dt = &CNT_END_DT_D
  #debugd show 'Vactn Cnt End Dt: ' $Vacn-Cnt-End-Dt   '  (' &CNT_END_DT_D ')'
  !Let $Cmpny-Ssn = &SSTC_DEMAND.SSN_EMPLOYER

  !In case of litigation salaries we find L00 & L02 records in the table that make to print
  ! two lines in the report for the same month. We just want to print one line with the sum of
  ! L00 & L02 records for a month.
  let $sstc-Paymnt = &SSTC_DEMAND.GPES_SSTC_PAYMNT
  if &SSTC_DEMAND.GPES_SSTC_PAYMNT <> 'L13'
    let $sstc-Paymnt = 'L00'
  end-if

SUM(SSTC_DEMAND.GPES_SSTC_DAYS)    &SSTC_DEMAND.GPES_SSTC_DAYS
SUM(SSTC_DEMAND.GPES_SSTC_AMOUNT)  &SSTC_DEMAND.GPES_SSTC_AMOUNT

   let $Forced-Exit-Flag = 'N'

   !#debugd show 'ssn er/prev ssn er: ' $Cmpny-Ssn '/' $Prev-Cmpny-Ssn
   #debugd show 'Month/PrevMonth:   ' &SSTC_DEMAND.GPES_MONTH_RECALC '/' #Prev-Month
   #debugd show 'Year/prev year:     ' &SSTC_DEMAND.GPES_YEAR_RECALC  '/' #Prev-Year
   #debugd show 'Paymnt/prev paymnt: ' $sstc-Paymnt '/' $Prev-sstc-Paymnt
   #debugd show '#Ctz-Days/#Ctz-Days_L03: ' #Ctz-Days '/' #Ctz-Days_L03
   
   
    if #Prev-Month <> &SSTC_DEMAND.GPES_MONTH_RECALC
       or #Prev-Year <> &SSTC_DEMAND.GPES_YEAR_RECALC
      or $Prev-sstc-Paymnt <> $sstc-Paymnt
      ! or $Prev-Cmpny-Ssn <> $Cmpny-Ssn
       if $Prev-sstc-Paymnt <> 'L13'
   
         if #Ctz-Days <> 0 or #Ctz-Days_L03 <> 0
 
 if  #Ctz-Days = 0
 let  #Ctz-Days = #Ctz-Days_L03
 end-if
 
       !*** Just printing last 6 months. Not printing last 180 days.
       !  if #Table-Row > {TABLE-ROWS} - 3 and #contador > 6
       !    Do New-Certificate-ON-DEMAND-Page
       !  end-if
       !*** Just printing last 6 months. Not printing last 180 days.

           Do Print-Contribution-Ln-ON-DEMAND
           
           let #Contributing-Days = #Contributing-Days + #Ctz-Days
           #debugd show 'Contributing Days Count: ' #Contributing-Days
       !*** Just printing last 6 months. Not printing last 180 days.
           !if #Contributing-Days >= 180
           if #contador > 6
       !*** Just printing last 6 months. Not printing last 180 days.
             let $Forced-Exit-Flag = 'Y'
             EXIT-SELECT
           end-if
           !If $Prev-Cmpny-Ssn <> $Cmpny-Ssn
           !end-if
         end-if        
       else
         Do Print-Vacations-Ln-ONDEMAND
       end-if

       let #Prev-Year          = &SSTC_DEMAND.GPES_YEAR_RECALC
       let #Prev-Month         = &SSTC_DEMAND.GPES_MONTH_RECALC
       let  #Prev_GPES_YEAR=&SSTC_DEMAND.GPES_YEAR
       let  #Prev_GPES_MONTH=&SSTC_DEMAND.GPES_MONTH
       let #Total-CC           =  0
       let #Total-Dsmpl        =  0
       let #Ctz-Days           =  0
       let #Ctz-Days_L03 = 0
       let $Prev-sstc-Paymnt   =  $sstc-Paymnt
       !let $Prev-Cmpny-Ssn     =  $Cmpny-Ssn
       let $Vacn-Cnt-End-Dt-Prev = $Vacn-Cnt-End-Dt
       let #OT_hrs             =  0
       let #denormalzdCP       =  0
       let #OTbetCeilings      =  0
    end-if


   #debugd show 'TC Payment/Element:       ' &SSTC_DEMAND.GPES_SSTC_PAYMNT '/' &SSTC_DEMAND.GPES_SSTC_ELEMENT
   #debugd show 'Year Recalc/Month Recalc: ' &SSTC_DEMAND.GPES_YEAR_RECALC '/' &SSTC_DEMAND.GPES_MONTH_RECALC
   #debugd show 'TC contributing days:     ' &SSTC_DEMAND.GPES_SSTC_DAYS
   #debugd show 'TC Base Amount:           ' &SSTC_DEMAND.GPES_SSTC_AMOUNT

   !** Procedure to get the company code of the employee's contract id***!
   let $mult_contract = &SSTC_DEMAND.CONTRACT_NUM
   !do GetEmployeeContractCompany
   #debugd show 'Job/contract company: ' $CMP '/' $EmpContractCompany
   #debugd show 'Job/FAN rslt table contract: ' &JOB.CONTRACT_NUM '/' &SSTC_DEMAND.CONTRACT_NUM 
   #debugd show ' '

   #debugd show 'TC Payment/Element:       ' &SSTC_DEMAND.GPES_SSTC_PAYMNT '/' &SSTC_DEMAND.GPES_SSTC_ELEMENT
   #debugd show 'Year Recalc/Month Recalc: ' &SSTC_DEMAND.GPES_YEAR_RECALC '/' &SSTC_DEMAND.GPES_MONTH_RECALC
   #debugd show 'TC contributing days:     ' &SSTC_DEMAND.GPES_SSTC_DAYS
   #debugd show 'TC Base Amount:           ' &SSTC_DEMAND.GPES_SSTC_AMOUNT

   !**1648916000 - We add Contributions pertaining to last 180days (across contracts) but of the same company as the terminated one**!
   !if $EmpContractCompany = $CMP
     if &SSTC_DEMAND.GPES_SSTC_ELEMENT = 'BA01' or &SSTC_DEMAND.GPES_SSTC_ELEMENT = 'BA21'
       if &SSTC_DEMAND.GPES_SSTC_PAYMNT = 'L13'
         let #Vactn-Total-CC =  #Vactn-Total-CC +  &SSTC_DEMAND.GPES_SSTC_AMOUNT
       else
         let #Total-CC = #Total-CC + &SSTC_DEMAND.GPES_SSTC_AMOUNT
       end-if
     end-if
     if &SSTC_DEMAND.GPES_SSTC_ELEMENT = 'BA02' or &SSTC_DEMAND.GPES_SSTC_ELEMENT = 'BA22' or &SSTC_DEMAND.GPES_SSTC_ELEMENT = 'BA42'
       if &SSTC_DEMAND.GPES_SSTC_PAYMNT = 'L13'
         let #Vactn-Total-Dsmpl = #Vactn-Total-Dsmpl +  &SSTC_DEMAND.GPES_SSTC_AMOUNT
        if &SSTC_DEMAND.GPES_YEAR_RECALC = &SSTC_DEMAND.GPES_YEAR AND &SSTC_DEMAND.GPES_MONTH_RECALC = &SSTC_DEMAND.GPES_MONTH
         let #Vactn-Ctz-Days    = #Vactn-Ctz-Days +  &SSTC_DEMAND.GPES_SSTC_DAYS
         let #Contributing-Days =  #Contributing-Days + &SSTC_DEMAND.GPES_SSTC_DAYS
         #debugd show 'Contributing Days Count (L13): ' #Contributing-Days
        end-if 
       else
         let #Total-Dsmpl = #Total-Dsmpl +  &SSTC_DEMAND.GPES_SSTC_AMOUNT
         if $sstc-Paymnt = $Prev-sstc-Paymnt and &SSTC_DEMAND.GPES_SSTC_PAYMNT <> 'L03' AND &SSTC_DEMAND.GPES_SSTC_PAYMNT <> 'L09'
  AND  &SSTC_DEMAND.GPES_SSTC_PAYMNT <> 'L90' AND &SSTC_DEMAND.GPES_SSTC_PAYMNT <> 'L91'
           If (&SSTC_DEMAND.GPES_SSTC_PAYMNT <> 'L02' AND (&SSTC_DEMAND.GPES_SSTC_LGL_CUST <> 'T' AND &SSTC_DEMAND.GPES_SSTC_OTHERS <> 'P'))
               OR (&SSTC_DEMAND.GPES_SSTC_PAYMNT = 'L02' AND &SSTC_DEMAND.GPES_YEAR_RECALC = &SSTC_DEMAND.GPES_YEAR AND &SSTC_DEMAND.GPES_MONTH_RECALC = &SSTC_DEMAND.GPES_MONTH)
             let #Ctz-Days = #Ctz-Days +  &SSTC_DEMAND.GPES_SSTC_DAYS
           end-if
   end-if
     
 
        if $sstc-Paymnt = $Prev-sstc-Paymnt 
                                      and   #Prev_GPES_YEAR=&SSTC_DEMAND.GPES_YEAR and   #Prev_GPES_MONTH=&SSTC_DEMAND.GPES_MONTH
                                      and (&SSTC_DEMAND.GPES_SSTC_PAYMNT = 'L03' OR  &SSTC_DEMAND.GPES_SSTC_PAYMNT = 'L09'
                                                         OR &SSTC_DEMAND.GPES_SSTC_PAYMNT = 'L90' OR &SSTC_DEMAND.GPES_SSTC_PAYMNT = 'L91')
           
                                                        If &SSTC_DEMAND.GPES_SSTC_LGL_CUST <> 'T' AND &SSTC_DEMAND.GPES_SSTC_OTHERS <> 'P'
                                                               let #Ctz-Days_L03 = #Ctz-Days_L03 +  &SSTC_DEMAND.GPES_SSTC_DAYS
                                                        end-if
         
 end-if 
       end-if
     end-if

#debugd show 'Agregate contributing days: ' #Ctz-Days
     #debugd show '  '

     !** refer incident id:1649774001 for explantaions on the below code **!
     if &SSTC_DEMAND.GPES_SSTC_ELEMENT = 'BA10' or &SSTC_DEMAND.GPES_SSTC_ELEMENT = 'BA11'
       let #OT_hrs = #OT_hrs + &SSTC_DEMAND.GPES_SSTC_AMOUNT
     End-if
   !end-if

FROM PS_GPES_SSTC_RS_VW  SSTC_DEMAND
    ,PS_CONTRACT_DATA CWKD

WHERE SSTC_DEMAND.EMPLID = $Select-EMPLID
 AND SSTC_DEMAND.EMPL_RCD = #Select-EMPL-RCD
 AND SSTC_DEMAND.EMPLID = CWKD.EMPLID
 AND SSTC_DEMAND.CONTRACT_NUM = CWKD.CONTRACT_NUM
 AND SSTC_DEMAND.GPES_SSTC_ELEMENT IN ('BA01','BA02','BA21','BA22','BA42','BA10','BA11')
 AND  SSTC_DEMAND.SLICE_BGN_DT >= $Hire-Dt
 AND ((SSTC_DEMAND.SLICE_BGN_DT <= $Termination-Dt AND &A.GPES_EMPLOYEE_TYPE = 'I') 
         OR (SSTC_DEMAND.SLICE_BGN_DT <= $Select-ASOFDATE AND &A.GPES_EMPLOYEE_TYPE = 'A' ))
 AND (((SSTC_DEMAND.GPES_YEAR_RECALC = #From-Year AND  SSTC_DEMAND.GPES_MONTH_RECALC <= #From-Month) OR SSTC_DEMAND.GPES_YEAR_RECALC < #From-Year)
         AND ((SSTC_DEMAND.GPES_YEAR_RECALC = #To-Year AND  SSTC_DEMAND.GPES_MONTH_RECALC >= #To-Month) OR SSTC_DEMAND.GPES_YEAR_RECALC > #To-Year)
  OR  (SSTC_DEMAND.GPES_YEAR = #From-Year AND SSTC_DEMAND.GPES_MONTH = #From-Month AND GPES_SSTC_PAYMNT = 'L13'))

GROUP BY SSTC_DEMAND.EMPLID, SSTC_DEMAND.GPES_YEAR_RECALC, SSTC_DEMAND.GPES_MONTH_RECALC, SSTC_DEMAND.GPES_YEAR, SSTC_DEMAND.GPES_MONTH, SSTC_DEMAND.GPES_SSTC_PAYMNT
       , SSTC_DEMAND.GPES_SSTC_ELEMENT, CWKD.CONTRACT_END_DT, SSTC_DEMAND.GPES_SSTC_LGL_CUST, SSTC_DEMAND.GPES_SSTC_OTHERS
ORDER BY SSTC_DEMAND.EMPLID, SSTC_DEMAND.GPES_YEAR_RECALC DESC, SSTC_DEMAND.GPES_MONTH_RECALC DESC, SSTC_DEMAND.GPES_SSTC_PAYMNT DESC, SSTC_DEMAND.GPES_SSTC_ELEMENT DESC

End-SELECT
  #debugd show ''
  #debugd show '******************************PRINT CONTRIBUTION BASES WHERE CLAUSE************************'
  #debugd show 'FROM PS_GPES_SSTC_RS_VW  SSTC_DEMAND'
  #debugd show '    ,PS_CONTRACT_DATA CWKD'
  #debugd show 'WHERE SSTC_DEMAND.EMPLID = ''' $Select-EMPLID ''''
  #debugd show 'AND  SSTC_DEMAND.EMPL_RCD = ' #Select-EMPL-RCD
  #debugd show ' AND SSTC_DEMAND.EMPLID = CWKD.EMPLID'
  #debugd show ' AND SSTC_DEMAND.CONTRACT_NUM = CWKD.CONTRACT_NUM'
  #debugd show 'AND  SSTC_DEMAND.GPES_SSTC_ELEMENT IN (''BA01'',''BA02'',''BA21'',''BA22'',''BA42'',''BA10'',''BA11'')'
  #debugd show 'AND  SSTC_DEMAND.SLICE_BGN_DT >= ''' $Hire-Dt ''''
  #debugd show 'AND ((SSTC_DEMAND.SLICE_BGN_DT <= ''' $Termination-Dt ''' AND ''' &A.GPES_EMPLOYEE_TYPE ''' = ''I'')'
  #debugd show '        OR (SSTC_DEMAND.SLICE_BGN_DT <= ''' $Select-ASOFDATE ''' AND ''' &A.GPES_EMPLOYEE_TYPE ''' = ''A''))'
  #debugd show 'AND (((SSTC_DEMAND.GPES_YEAR_RECALC = ' #From-Year ' AND  SSTC_DEMAND.GPES_MONTH_RECALC <= ' #From-Month ') OR SSTC_DEMAND.GPES_YEAR_RECALC < ' #From-Year ')'
  #debugd show '    AND ((SSTC_DEMAND.GPES_YEAR_RECALC = ' #To-Year ' AND  SSTC_DEMAND.GPES_MONTH_RECALC >= ' #To-Month ') OR SSTC_DEMAND.GPES_YEAR_RECALC > ' #To-Year ')'
  #debugd show ' OR  (SSTC_DEMAND.GPES_YEAR = ' #From-Year ' AND SSTC_DEMAND.GPES_MONTH = ' #From-Month ' AND GPES_SSTC_PAYMNT = ''L13''))'
  #debugd show '******************************PRINT CONTRIBUTION BASES WHERE CLAUSE************************'
  #debugd show ''

 #debugd show 'Agregate contributing days_00: ' #Ctz-Days
 #debugd show 'Agregate contributing days_03: ' #Ctz-Days_L03
 
  #debugd show 'Year/Month From (Backward); ' #From-Year '/' #From-Month
  #debugd show 'Employee ID:    ' $Select-EMPLID
  #debugd show 'Empl Rcd#:      ' #Select-EMPL-RCD
  #debugd show 'Termination Dt: ' $Termination-Dt

  #debugd show 'Forced Exit/#Table-row/TABLE-ROWS: ' $Forced-Exit-Flag '/' #Table-Row '/' {TABLE-ROWS}
  if $Forced-Exit-Flag = 'N'
    if #Ctz-Days <> 0  or #Ctz-Days_L03 <> 0
    if  #Ctz-Days = 0
    let  #Ctz-Days = #Ctz-Days_L03
    end-if

      if not #contador > 6
        Do Print-Contribution-Ln-ON-DEMAND        
      end-if
    end-if   
    Do Print-Vacations-Ln-ONDEMAND
  end-if
Do Print-Certificate-ON-DEMAND_Pg2
Do Print-Vacations-Ln-ONDEMAND_Pg2
end-procedure


!***********************************************************************************************
! Procedure Print-Contribution-Ln-ON-DEMAND
!***********************************************************************************************
begin-procedure Print-Contribution-Ln-ON-DEMAND
#debug do Fin-Debug-Msg('Print-Contribution-Ln-ON-DEMAND')

  alter-printer point-size=8 font={COURIER_NEW}

  !** refer incident id:1649774001 for explantaions on the below code **!
  !** The below check is made only if the employee has OT earnings **!
  If #OT_hrs > 0
   let #denormalzdCP = #Total-CC + #OT_hrs
   if #denormalzdCP > #Total-Dsmpl
     let #OTbetCeilings = #OT_hrs - (#denormalzdCP - #Total-Dsmpl)
   else
     let #OTbetCeilings = #OT_hrs
   End-if
   let #Total-Dsmpl = #Total-Dsmpl - #OTbetCeilings
  End-if

  !If #Contributing-Days + #Ctz-Days >= 180    ***Do not prorate the last month.***
    !Active employee filter criteria contributing base proration only for first month
  If (&A.GPES_EMPLOYEE_TYPE = 'A' and #Init-Natural-Days = 1       !Active employees filter criteria..
        and #Prev-Year = #From-Year AND #Prev-Month = #From-Month)   !only for first month
    !Active employee filter criteria contributing base proration

    If &A.GPES_EMPLOYEE_TYPE = 'A' and #Init-Natural-Days = 1
      let $SchDays-Last-Month-PdEnd = $Select-ASOFDATE    !Sets variable for procedure Get-Schedule-Days-Last-Month

      !Carefull when hiring/terminating in the same month
      If #From-Year = #To-Year and #From-Month = #To-Month
        do Convert-To-DTU-Date($Hire-Dt, $TC-Period-Begin-DTU)
      else
        let $TC-Period-Begin-DTU = to_char(#Prev-Year) || '-' || to_char(#Prev-Month) || '-01'
      End-if

      Do DTU-Month-End($TC-Period-Begin-DTU, $TC-Period-End-DTU)
      Do Convert-From-DTU-Date($TC-Period-Begin-DTU, $TC-Period-Begin)
      Do Convert-From-DTU-Date($TC-Period-End-DTU, $TC-Period-End)
      #debugd show 'Last Month Begin/End Dates: ' $TC-Period-Begin '/' $TC-Period-End
      Do Get-Full-Part-Time-Last-Month     !Fills $FPLM-Full-Part-Time, $Contract-Bgn-Dt and $Contract-End-Dt

      let $OVRD-Bgn-Dt = $Contract-Bgn-Dt
      let $OVRD-End-Dt = $Contract-End-Dt
      Do Get-WorkDay-Reduction

      do Convert-To-DTU-Date($Termination-Dt, $Termination-Dt-DTU)
      do dtu-diff-days($TC-Period-Begin-DTU, $TC-Period-End-DTU, #diff-month-day)
      do dtu-diff-days($TC-Period-Begin-DTU, $Termination-Dt-DTU, #diff-day)
      let #diff-month-day = #diff-month-day + 1
      let #diff-day       = #diff-day       + 1
      #debugd show 'Month days: ' #diff-month-day ' As Of Date days: ' #diff-day
      If #diff-month-day = #diff-day
        let #Partial-Days = #Ctz-Days
      Else
        let #Partial-Days = #diff-day
        if $FPLM-Full-Part-Time = 'P' and $Workday-Reduction <> 'WKR'
          Do Get-Schedule-Days-Last-Month_Main
          let #Partial-Days = #LastMonthWorkDays_Total
        end-if
      End-If
      #debugd show 'Partial Contribution days(1): ' #Partial-Days

    else
      Let #Partial-Days = #Ctz-Days - (#Contributing-Days + #Ctz-Days - 180)
    end-if


    #debugd show 'Partial Contribution days: ' #Partial-Days
    #debugd show 'Base CC proration:         ' #Total-CC '/' #Ctz-Days '*' #Partial-Days '='
    Let #Total-CC = round((#Total-CC / #Ctz-Days) * #Partial-Days, 2)
    #debugd show '.......................... ' #Total-CC
    let #Total-Dsmpl = round((#Total-Dsmpl / #Ctz-Days) * #Partial-Days, 2)
    Let #Ctz-Days = #Partial-Days

    #debugd show 'Contributing Days (Prorated): ' #Ctz-Days
  End-if

  let #Init-Natural-Days = 0
  #Debugd show 'Contador:          ' #contador
  #Debugd show 'Prev Month / imp:          ' #prev_month_imp ' / ' #Prev-Month
      if #prev_month_imp <> #Prev-Month
         if #linea_ant <= 75
            print #Prev-Month                                                                   (#linea_ant, 3)   EDIT '99'
            PRINT '/'                                                                           (  ,5)
            print #Prev-Year                                                                    (  ,6)    EDIT '9999'
            Do Format-Number(#Ctz-Days, $out, '999')
            let $Out = lpad($out, 3, ' ')
            print $out                                                                          (  ,13)
            print $Empl-SS-Grp-Cd                                                               (  ,26)
            Do Format-Number(#Total-CC, $out, '999,999.99')
            let $Out = lpad($out, 11, ' ')
            print $Out                                                                          (  ,41)
            let #prev_month_imp = #Prev-Month
            let #linea_ant = #linea_ant + 2
         else
            print #Prev-Month                                                                   (#linea_ant2, 64)   EDIT '99'
            PRINT '/'                                                                           (  ,66)
            print #Prev-Year                                                                    (  ,67)    EDIT '9999'
            Do Format-Number(#Ctz-Days, $out, '999')
            let $Out = lpad($out, 3, ' ')
            print $out                                                                          (  ,74)
            print $Empl-SS-Grp-Cd                                                               (  ,88)
            Do Format-Number(#Total-CC, $out, '999,999.99')
            let $Out = lpad($out, 11, ' ')
            print $Out                                                                          (  ,102)
            let #prev_month_imp = #Prev-Month
            let #linea_ant2 = #linea_ant2 + 2
         end-if
         let #contador = #contador + 1
      end-if
   !end-if
   let #Table-Row = #Table-Row + 1

end-procedure


!************************************************************************
! Procedure Print-Vacations-Ln-ONDEMAND
!************************************************************************
begin-procedure Print-Vacations-Ln-ONDEMAND
#debug do Fin-Debug-Msg('Print-Vacations-Ln-ONDEMAND')

#debugd show 'Vactn Cnt End Dt: ' $Vacn-Cnt-End-Dt '   AsOfDate: ' $Select-ASOFDATE

do Format-DateTime($Vacn-Cnt-End-Dt-Prev, $Vacn-Cnt-End-Dt-CMP, {DEFCMP}, '', '')
do Format-DateTime($Select-ASOFDATE, $Select-ASOFDATE-CMP, {DEFCMP}, '', '')

If #Vactn-Ctz-Days <> 0
    and $Vacn-Cnt-End-Dt-CMP <= $Select-ASOFDATE-CMP
    
  let #Vactn_Month = Substr($Vacn-Cnt-End-Dt-CMP, 5, 2)
  #Debugd show 'Vactn. Month: ' #Vactn_Month '     Prev. Month: ' #Prev-Month
  
  If #Vactn_Month = #Prev-Month
    do Convert-To-DTU-Date($Vacn-Cnt-End-Dt-Prev, $Cntrct_End_Dt-DTU)
    do dtu-add-days($Cntrct_End_Dt-DTU, 1, $Vactn-Bgn-dt-DTU)
  Else
    let $Vactn-Bgn-dt-DTU = to_char(#Prev-Year) || '-' || to_char(#Prev-Month) || '-01'
  End-If
  
  do Convert-From-DTU-Date($Vactn-Bgn-dt-DTU, $Vactn-Bgn-dt)
  #Debugd show 'Vactn.Bgn.Dt: ' $Vactn-Bgn-dt
  do dtu-add-days($Vactn-Bgn-dt-DTU, #Vactn-Ctz-Days, $Vactn-End-dt-DTU)
  do dtu-add-days($Vactn-End-dt-DTU, -1, $Vactn-End-dt-DTU)
  do Convert-From-DTU-Date($Vactn-End-dt-DTU, $Vactn-End-dt)


  alter-printer point-size=7 font={ARIAL}
  do Format-DateTime($Vactn-Bgn-dt, $Vactn-Bgn-dt-CMP, {DEFCMP}, '', '')
  do Format-DateTime($Vactn-End-dt, $Vactn-End-dt-CMP, {DEFCMP}, '', '') 
  !Commenting just the printing part as printing is done in new proc  Print-Vacations-Ln-ONDEMAND_Pg2
  !Let #Cnt-Col = {EMPL_D1_FLD}
  !Let #Cnt-Col = #Cnt-Col + 6
  !Let #DtPart = substr($Vactn-Bgn-dt-CMP, 7, 2)
  !Do Format-Number(#DtPart, $Out, '99')
  !print $Out                                                            (#Vactn-Line, #Cnt-Col, 2)
  !Let #Cnt-Col = #Cnt-Col + 5
  !Let #DtPart = substr($Vactn-Bgn-dt-CMP, 5, 2)
  !Do Format-Number(#DtPart, $Out, '09')
  !let $FieldName = 'GPES_MONTHCD'
  !let $FieldValue = $Out
  !let $AsOfDate = $Select-ASOFDATE
  !Do Read-Translate-Table
  !let $Month_Cd_Descr = RTrim($XLatshortName, ' ')
  !print $Month_Cd_Descr                                                 (           , #Cnt-Col, 17)
  !Let #Cnt-Col = #Cnt-Col + 13
  !Let #DtPart = substr($Vactn-Bgn-dt-CMP, 1, 4)
  !Do Format-Number(#DtPart, $Out, '9999')
  !print $Out                                                            (           , #Cnt-Col, 4)

  !Let #Cnt-Col = #Cnt-Col + 4

  !Let #Cnt-Col = #Cnt-Col + 6
  !Let #DtPart = substr($Vactn-End-dt-CMP, 7, 2)
  !Do Format-Number(#DtPart, $Out, '99')
  !print $Out                                                            (           , #Cnt-Col, 2)
  !Let #Cnt-Col = #Cnt-Col + 5
  !Let #DtPart = substr($Vactn-End-dt-CMP, 5, 2)
  !Do Format-Number(#DtPart, $Out, '09')
  !let $FieldName = 'GPES_MONTHCD'
  !let $FieldValue = $Out
  !let $AsOfDate = $Select-ASOFDATE
  !Do Read-Translate-Table
  !let $Month_Cd_Descr = RTrim($XLatshortName, ' ')
  !print $Month_Cd_Descr                                                 (           , #Cnt-Col, 17)
  !Let #Cnt-Col = #Cnt-Col + 13
  !Let #DtPart = substr($Vactn-End-dt-CMP, 1, 4)
  !Do Format-Number(#DtPart, $Out, '9999')
  !print $Out                                                            (           , #Cnt-Col, 4)
 
  ! Code fragment commented out as this is only printed out under ERE condition;
  ! but we do not support EREs at this point.
  ! Do Format-Number(#Vactn-Total-CC, $out, '999,999.99')
  ! let $Out = lpad($out, 12, ' ')
  ! print $Out                                                          (#Vactn-Line, 57)
 !Do Format-Number(#Vactn-Total-Dsmpl, $out, '999,999.99')
 !let $Out = lpad($out, 11, ' ')
 !print $Out                                                            (#Vactn-Line, 79)

!Array is populated
put $Vactn-Bgn-dt-CMP $Vactn-End-dt-CMP #Vactn-Total-Dsmpl into vacationarray(#vacationcount)
let #vacationcount = #vacationcount + 1

  !let #Vactn-Line = #Vactn-Line + 2

  ! Print employee totals
  let #Empl-Ctz-Days = #Empl-Ctz-Days + #Vactn-Ctz-Days
  let #Empl-Total-CC = #Empl-Total-CC + #Vactn-Total-CC
  let #Empl-Total-Dsmpl = #Empl-Total-Dsmpl + #Vactn-Total-Dsmpl
end-if

let #Vactn-Total-CC = 0
let #Vactn-Total-Dsmpl = 0
let #Vactn-Ctz-Days = 0

end-procedure


!************************************************************************
!Procedure ABSENCE-DATA-ONDEMAND
!************************************************************************
begin-procedure ABSENCE-DATA-ONDEMAND
#debug do Fin-Debug-Msg('ABSENCE-DATA-ONDEMAND')

Let #Abs_Pin_Take = 0
Let $Abs_Begin_Dt = ''
Let $Abs_Take_Descr =  ''

let $sql-statement = 'GPESODMN.SQR,ABSENCE-DATA-ONDEMAND,Select,PS_GP_ABS_EVENT'
begin-SELECT DISTINCT on-error=SQL-Error
BJ.PIN_TAKE_NUM
BJ.BGN_DT
   let #Abs_Pin_Take = &BJ.PIN_TAKE_NUM
   let $Abs_Begin_Dt = &BJ.BGN_DT

FROM PS_GP_ABS_EVENT BJ
    ,PS_GP_ABS_TAKE TAKE
    ,PS_GP_ABS_TYPE TYP
WHERE BJ.EMPLID = $Select-EMPLID
  AND BJ.EMPL_RCD = #Select-EMPL-RCD
  AND BJ.BGN_DT <=  $Select-ASOFDATE
  AND BJ.END_DT >=  $Select-ASOFDATE
  AND TAKE.PIN_NUM = BJ.PIN_TAKE_NUM
  AND TYP.USED_BY = 'C'
  AND TYP.COUNTRY = 'ESP'
  AND TYP.ABS_TYPE_OPTN IN ('DIS','ACC','MAT','RSK')
  AND TYP.EFFDT = (SELECT MAX(EFFDT) FROM PS_GP_ABS_TYPE
                   WHERE USED_BY = TYP.USED_BY
                     AND COUNTRY = TYP.COUNTRY
                     AND ABS_TYPE_OPTN = TYP.ABS_TYPE_OPTN
                     AND EFFDT <= $Select-ASOFDATE)
  AND TYP.EFF_STATUS = 'A'
end-SELECT

If $Abs_Begin_Dt <> ''

let $sql-statement = 'GPESODMN.SQR,ABSENCE-DATA-ONDEMAND,Select,PS_GP_PIN'
begin-SELECT on-error=SQL-Error
PN.DESCR
  let $GP_PIN-DESCR = rtrim(&PN.DESCR, ' ')
  Do Get_Related_GP_PIN(&BJ.PIN_TAKE_NUM)
  let $Abs_Take_Descr = $GP_PIN-DESCR
   
FROM PS_GP_PIN PN
WHERE PN.PIN_NUM = #Abs_Pin_Take
end-SELECT

End-If

end-procedure
