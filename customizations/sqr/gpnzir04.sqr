!*************************************************************************
!  GPNZIR04:  EDF ir-File                                                *
!*************************************************************************
!*************************************************************************
!                                                                        *
!                                                                        *
!                                                                        *
! This software and related documentation are provided under a           *
! license agreement containing restrictions on use and                   *
! disclosure and are protected by intellectual property                  *
! laws. Except as expressly permitted in your license agreement          *
! or allowed by law, you may not use, copy, reproduce,                   *
! translate, broadcast, modify, license, transmit, distribute,           *
! exhibit, perform, publish or display any part, in any form or          *
! by any means. Reverse engineering, disassembly, or                     *
! decompilation of this software, unless required by law for             *
! interoperability, is prohibited.                                       *
! The information contained herein is subject to change without          *
! notice and is not warranted to be error-free. If you find any          *
! errors, please report them to us in writing.                           *
!                                                                        *
!                                                                        *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.                *
! All Rights Reserved.                                                   *
!*************************************************************************
!          $Date:  2013/01/18:03:58:05                                   *
!       $Release:  HR92                                                  *
!      $Revision:  103                                                   *
!***********************************************************************
!                                                                      *
!  This SQR generates the Electronic Deductions Form (EDF) ir-File     *
!                                                                      *
! Modification History                                                 *
! 1737796000 - Retrieving new Field of  KiwiSaver ETC; Changed the     *
!              the length of the Amounts fields to 13.                 *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment

!************************************************************************
!  Define Variables                                                     *
!************************************************************************
#define BLANK                       ' '
#define NULL                        ''
#define TRUE                        1
#define FALSE                       0

#define REPORT_ID                   'GPNZIR04'

Begin-Setup

#include 'setupdb.sqc'

   declare-layout FORM_EDF
      PAPER-SIZE    = (a4)
      orientation   = portrait
      top-margin    = 0.30
      left-margin   = 0.2
      right-margin   = 0.2
      Line-Height   = 11.3
   end-declare

   declare-report FORM_EDF_RPT
      layout = FORM_EDF
   end-declare
End-Setup


!***********************************************************************
begin-program
   do Init-Report
   do Process-Main
   do Stdapi-Term
end-program

!***********************************************************************
! Procedure:    Init_Val                                               *
!                                                                      *
! Description: Prints the Header of the report                         *
!                                                                      *
!***********************************************************************
begin-procedure   Init_Val
   !let #Heading_Font      = 4
   !let #HeadingPntSize    = 11
   !let #StdPntSize        = 9
   !let #dataPntSize       = 7
   !let #CurrentRow        = 10

   let #LineNum           = 1
   let $REC_TYPE_ER       = 'EDF'
   let $ER_IR_VER_NUM     = '0003'

end-procedure

!***********************************************************************
!  Procedure: Init Report                                              *
!                                                                      *
!***********************************************************************
begin-procedure Init-Report

   !move 'GPNZKD01' to $ReportID
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Stdapi-Init

   if $proc__instance = ''
   else
      let #proc_instance=To_number($proc__instance)
   end-if

   do Get_Run_Cntrl_Dtls
   do Init_Val

end-procedure !Init-Report


!***************************************************************************************
!  Procedure: Get_Run_Cntrl_Dtls                                                       *
!  Purpose  : This procedure gets the run control values from the run control record   *
!                                                                                      *
!***************************************************************************************
Begin-Procedure Get_Run_Cntrl_Dtls


Begin-Select
RNCT.PAY_ENTITY
RNCT.GPNZ_YEARCD
RNCT.GPNZ_MONTHCD
RNCT.GPNZ_IRD_HALF_SEL

   let $Run_Pay_Entity = rtrim(&RNCT.PAY_ENTITY, ' ')
   let $Run_Year = rtrim(&RNCT.GPNZ_YEARCD, ' ')
   let $Run_Month = rtrim(&RNCT.GPNZ_MONTHCD, ' ')
   Let $Half_Month_Sel = &RNCT.GPNZ_IRD_HALF_SEL

FROM PS_GPNZ_RC_EDF RNCT
WHERE  RNCT.OPRID    = $prcs_oprid
AND RNCT.RUN_CNTL_ID = $prcs_run_cntl_id
End-Select

do Get-Period-end

End-Procedure    ! Get_Run_Cntrl_Dtls

!**************************************************************************
! Procedure:   Process-Main                                               *
! Description: The main process                                           *
!                                                                         *
!**************************************************************************
begin-procedure Process-Main

   Do Open-File
   Do Process-ER-Dtls
   Do Write-Employer-Dtls

   close 1

End-Procedure

!********************************************************************
! Get-Period-end
! Procedure to get Period End date
! called by: Select-Parameters
!********************************************************************
begin-procedure Get-Period-end

let #period_year =0
let $period_start_DD='01'
if $Half_Month_Sel = 'F' or $Half_Month_Sel = '2'
   EVALUATE $Run_month
     WHEN = '02'
       move $Run_year to #period_year
       let #period_year_rem = #period_year % 4
       if #period_year % 4 = 0
         let $period_end_DD='29'
       else
         let $period_end_DD='28'
       end-if
       break
     WHEN = '01'
     WHEN = '03'
     WHEN = '05'
     WHEN = '07'
     WHEN = '08'
     WHEN = '10'
     WHEN = '12'
       LET $period_end_DD='31'
       break
     WHEN-OTHER
       let $period_end_DD='30'
       break
   END-EVALUATE
else
 let $period_end_DD='15'
end-if

LET $period_end_dt_str= $Run_Year||'-'||$run_month||'-'||$period_end_DD

let $period_end_dt=strtodate($period_end_dt_str,'YYYY-MM-DD')

    if $sqr-database = 'DB2'
     Let $period_end_dt = substr($period_end_dt, 1 , 10)
    end-if

end-procedure !Get-Period-end

!**************************************************************************
! Procedure: Open-File                                                    *
!                                                                         *
! Description: Opening the output files for writing                       *                                                  *
!                                                                         *
!**************************************************************************
begin-procedure Open-File



 !  MOVE 'EDF.csv' to $Filename1
 !  open $Filename1 as 1 for-writing record=9999:vary
 !
 !  status = #filestat
 !  show $Filename1
 !  if #filestat != 0
 !     show 'Cannot open file ' $Filename1
 !  end-if

  #ifdef UNIX
    let $slash = '/'
  #else
    let $slash = '\'
  #endif

  if $slash <> ''   !If Slash has a value then...
    let #start = 1
    let #location = 0
    while #location <> -1
       let #start = #location + 1
       Find $slash In $SQR-Report #start #location
    end-while
    let $path     = substr($SQR-Report,          1, #start)
    let $filename = substr($SQR-Report, #start + 1, length($SQR-Report)-#start)
  end-if

  let  $Filename1 = $Run_Pay_entity||$Run_year||$Run_month||$Half_Month_Sel|| 'EDF.CSV'
  let  $Filename1 = $path || $Filename1
  
  #ifdef OS390
      !Show 'Inside OS390'
      let #pos  = instr($sqr-report,'GPNZIR04',0)
      let #pos  = #pos - 1
      !Show '#Pos Value: ' #pos 
      let $path = substr($sqr-report,1,#pos)
      let  $Filename1 = 'EDF.DAT'
      let  $Filename1 = $path || $Filename1
      !let $Filename1 = $path || 'GPNZIR04(GPNZIR04)'
      !Do Get-Process-Directory
      !let $path =  $prcspath || '/'
  #endif

  #ifdef OS400
      !Show 'Inside OS400'
      let #pos  = instr($sqr-report,'GPNZIR04',0)
      let #pos  = #pos - 1
      !Show '#Pos Value: ' #pos 
      let  $path = substr($sqr-report,1,#pos)
      let  $Filename1 = 'EDF.DAT'
      let  $Filename1 = $path || $Filename1
      !Do Get-Process-Directory
      !let $path =  $prcspath || '/'
  #endif

  #ifdef MVS
      !Show 'Inside MVS'
      let #pos  = instr($sqr-report,'GPNZIR04',0)
      let #pos  = #pos - 1
      !Show '#Pos Value: ' #pos 
      let  $path = substr($sqr-report,1,#pos)
      let  $Filename1 = 'EDF.DAT'
      let  $Filename1 = $path || $Filename1
      !Do Get-Process-Directory
      !let $path =  $prcspath || '/'
  #endif

  !Show '$path: ' $path
  !Show $Filename1

  
  open $Filename1 as 1 for-writing record=999
   status = #filestat
   if #filestat != 0
      display $Filename1 noline
      display ' not found '
    else
      display 'Processing ' noline
   end-if

End-Procedure !OPEN-FILE

 
!**************************************************************************
! Procedure: Get-Process-Directory                                        *
!                                                                         *
! Description: Get-Process-Directory                                      *
!                                                                         *
!**************************************************************************
begin-procedure Get-Process-Directory

begin-select
A.PRCSOUTPUTDIR
   LET $prcspath = &A.PRCSOUTPUTDIR
FROM PSPRCSPARMS A 
WHERE A.PRCSINSTANCE = $prcs_process_instance
end-select

end-procedure

!**************************************************************************
! Procedure: Employer Details                                             *
!                                                                         *
! Description: Get the Employer Details                                   *
!                                                                         *
!**************************************************************************
begin-procedure Process-ER-Dtls


begin-select
PYENT.GPNZ_IRD_NUMBER
PYENT.GPNZ_CONTACT_PHONE

    MOVE &PYENT.GPNZ_IRD_NUMBER    to $ER_IRD_NUM

FROM PS_GPNZ_PYENT_DTL PYENT
WHERE PYENT.PAY_ENTITY = $Run_Pay_Entity
   AND PYENT.EFFDT = (SELECT MAX(PYENT1.EFFDT) FROM PS_GPNZ_PYENT_DTL PYENT1
                     WHERE PYENT.EFFDT = PYENT1.EFFDT
                     AND PYENT1.EFFDT <= $period_end_dt)
end-select

Let $PYMT_DT = $Run_Year||$run_month||$period_end_DD

BEGIN-SELECT
HDR.PAY_ENTITY
HDR.GPNZ_YEARCD
HDR.GPNZ_MONTHCD
HDR.GPNZ_PAYE_TAX_1ST
HDR.GPNZ_STUD_LOAN_1ST
HDR.GPNZ_CHILD_SUP_1ST
HDR.GPNZ_PAYE_TAX_2ND
HDR.GPNZ_STUD_LOAN_2ND
HDR.GPNZ_CHILD_SUP_2ND
HDR.GPNZ_TAX_GROSS
HDR.GPNZ_GROSS_NO_EP
HDR.GPNZ_ISSUE_STATUS
HDR.GPNZ_DT_1ST_CREATE
HDR.GPNZ_DT_2ND_CREATE
HDR.GPNZ_DT_IR_ISSUED
HDR.GPNZ_SSCWT_1ST
HDR.GPNZ_SSCWT_2ND
HDR.GPNZ_KIWI_EE_1ST
HDR.GPNZ_KIWI_EE_2ND
HDR.GPNZ_KIWI_ER_1ST
HDR.GPNZ_KIWI_ER_2ND
HDR.GPNZ_KIWI_ETC_1ST
HDR.GPNZ_KIWI_ETC_2ND

   Evaluate $Half_Month_Sel

     WHEN = '1'
         let #PAYE_ded = &HDR.GPNZ_PAYE_TAX_1ST
         let #child_support = &HDR.GPNZ_CHILD_SUP_1ST
         let #student_loan = &HDR.GPNZ_STUD_LOAN_1ST
         let #sscwt_ded = &HDR.GPNZ_SSCWT_1ST
         let #kiwi_ee = &HDR.GPNZ_KIWI_EE_1ST
         let #kiwi_er = &HDR.GPNZ_KIWI_ER_1ST
         let #kiwi_etc = &HDR.GPNZ_KIWI_ETC_1ST

     WHEN = '2'

         let #PAYE_ded = &HDR.GPNZ_PAYE_TAX_2ND
         let #child_support = &HDR.GPNZ_CHILD_SUP_2ND
         let #student_loan = &HDR.GPNZ_STUD_LOAN_2ND
         let #sscwt_ded = &HDR.GPNZ_SSCWT_2ND
         let #kiwi_ee = &HDR.GPNZ_KIWI_EE_2ND
         let #kiwi_er = &HDR.GPNZ_KIWI_ER_2ND
         let #kiwi_etc = &HDR.GPNZ_KIWI_ETC_2ND

     WHEN = 'F'
         let #PAYE_ded = &HDR.GPNZ_PAYE_TAX_1ST + &HDR.GPNZ_PAYE_TAX_2ND
         let #child_support = &HDR.GPNZ_CHILD_SUP_1ST + &HDR.GPNZ_CHILD_SUP_2ND
         let #student_loan = &HDR.GPNZ_STUD_LOAN_1ST + &HDR.GPNZ_STUD_LOAN_2ND
         let #sscwt_ded = &HDR.GPNZ_SSCWT_1ST + &HDR.GPNZ_SSCWT_2ND
         let #kiwi_ee = &HDR.GPNZ_KIWI_EE_1ST + &HDR.GPNZ_KIWI_EE_2ND
         let #kiwi_er = &HDR.GPNZ_KIWI_ER_1ST + &HDR.GPNZ_KIWI_ER_2ND
         let #kiwi_etc = &HDR.GPNZ_KIWI_ETC_1ST + &HDR.GPNZ_KIWI_ETC_2ND

   End-Evaluate

from PS_GPNZ_IRD_HEADER HDR
WHERE HDR.PAY_ENTITY=$Run_Pay_Entity
AND HDR.GPNZ_YEARCD=$Run_Year
AND HDR.GPNZ_MONTHCD=$Run_Month
END-SELECT

let #tot_ded_pybl= #PAYE_ded + #child_support + #student_loan + #kiwi_ee + #kiwi_er + #sscwt_ded - #kiwi_etc

let #kiwi_etc_comply = 0

do #IRD_convert_str_num(#PAYE_ded, $TOT_PAYE_TAX)
do #IRD_convert_str_num(#child_support, $TOT_CHILD_SUP)
do #IRD_convert_str_num(#student_loan, $TOT_STUD_LOAN)
do #IRD_convert_str_num(#kiwi_ee, $TOT_KIWI_EE)
do #IRD_convert_str_num(#kiwi_er, $TOT_KIWI_ER)
do #IRD_convert_str_num(#kiwi_etc, $TOT_KIWI_ETC)
do #IRD_convert_str_num(#kiwi_etc_comply, $TOT_KIWI_ETC_COMPLY)
do #IRD_convert_str_num(#sscwt_ded, $TOT_SSCWT)
do #IRD_convert_str_num(#tot_ded_pybl, $TOT_DED_PYBL)

End-Procedure !Process-ER-Dtls

!**************************************************************************
! Procedure: Write Employer Details                                             *
!                                                                         *
! Description: Write the Employer Details                                   *
!                                                                         *
!**************************************************************************
begin-procedure Write-Employer-Dtls


let $REPORT_TEXT = ltrim(rtrim($REC_TYPE_ER,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($ER_IRD_NUM,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','

let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($PYMT_DT,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_PAYE_TAX,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_CHILD_SUP,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_STUD_LOAN,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_KIWI_EE,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_KIWI_ER,' '),' ')
!let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
!let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_KIWI_ETC,' '),' ')
!let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
!let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_KIWI_ETC_COMPLY,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_SSCWT,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($TOT_DED_PYBL,' '),' ')
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ','
let $REPORT_TEXT = ltrim(rtrim ($REPORT_TEXT,' '),' ') || ltrim(rtrim($ER_IR_VER_NUM,' '),' ')
 Show $REPORT_TEXT
   WRITE 1 FROM $REPORT_TEXT

end-procedure !Write-Employer-Dtls

begin-procedure #IRD_convert_str_num(#num, :$str)
let #value = trunc(#num, 2) * 100

if #value < 0
  let #value = 0
end-if
move #value to $str 9999999999999

end-procedure


#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for Date Arithmetic
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'address.sqc'   !global address formating
#include 'readxlat.sqc'  ! Get shortname or longname from xlattable
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
