!***********************************************************************
!  PUPYL05:  Rel 9.1 Upgrade - Contract Audit                          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      !
!          $Date:  2013/01/18:06:12:13                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      !
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !printer and page-size initialization



begin-report

  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-procedure Init-Report


  move 'PUPYL05' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  move 'Contract Audit' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

end-procedure

begin-HEADING 11

  #Include 'stdhdgtr.sqc'

  print 'EmplID'                     (+2,2)
  print 'Empl'                       (0,14)
  print 'Contract'                   (0,20)
  print 'Contract'                   (0,32)
  print 'Contract'                   (0,49)
  print 'Payment'                    (0,74)
  print 'Contract Amount'            (0,91)
  print 'Actual'                     (0,109)
  print 'Termination'                (0,122)
  print 'Work'                       (0,135)
  print 'Holiday'                    (0,145)
  print 'Use Hol'                    (0,155)
  print 'Contract'                   (0,166)

  print 'Rcd'                        (+1,14)
  print 'Effdt'                      (0,20)
  print 'Status'                     (0,32)
  print 'Begin Date    End Date'     (0,42)
  print 'Begin Date    End Date'     (0,66)
  print 'Start Dt'                   (0,109)
  print 'Date'                       (0,122)
  print 'Schedule'                   (0,135)
  print 'Schedule'                   (0,145)
  print 'Schedule'                   (0,155)
  print 'ID'                         (0,166)

  print 'Add Pay Seq'                (+2,45)
  print 'Track Actuals'              (0,61)
  print 'Paid to Date'               (0,80)
  print 'Earned to Date'             (0,101)
  print 'Days Worked to Date'        (0,120)

end-HEADING


!***********************************************************************
!  PROC REPORT                                                         *
!         Main Procedure                                               *
!***********************************************************************

BEGIN-PROCEDURE Process-Main

   do Get-Contract-Data

END-PROCEDURE


!***********************************************************************
!  Get-Contract-Data                                                 *
!***********************************************************************

BEGIN-PROCEDURE Get-Contract-Data


BEGIN-SELECT
C.EMPLID
C.EMPL_RCD
C.EFFDT
C.CONTRACT_BEGIN_DT
C.CONTRACT_END_DT
C.PAYMENT_BEGIN_DT
C.PAYMENT_END_DT
C.CONTRACT_TERM_DT
C.ADDL_SEQ
C.HP_TRACK_ACTUALS
C.HP_CONTRACT_START
C.HP_PAID_TO_DT
C.HP_EARNED_TO_DT
C.HP_WORKED_TO_DT
C.HP_USE_HOL_SCHD

  move &C.EMPLID            to $EmplID
  move &C.EMPL_RCD          to $EmplRcd
  move &C.HP_USE_HOL_SCHD   to $UseHolSch
  move &C.ADDL_SEQ          to $AddlSeq
  move &C.HP_TRACK_ACTUALS  to $TrackAct

  let  #PaidToDt            = &C.HP_PAID_TO_DT

  let  #EarnToDt            = &C.HP_EARNED_TO_DT

  move &C.HP_WORKED_TO_DT   to $WorkToDt

  do Get-Contract-Status

  do Get-Holiday-Schedule

  IF $PayCalEndDt = ''
     move $AsOfToday to $PayCalEndDt
  END-IF

  move '' to $ContrStatus

  do Format-DateTime($PayCalEndDt, $PayCalEnd, {DEFCMP}, '', '')
  do Format-DateTime(&C.PAYMENT_BEGIN_DT, $PayBegDt, {DEFCMP}, '', '')
  do Format-DateTime(&C.PAYMENT_END_DT, $PayEndDt, {DEFCMP}, '', '')

  IF $PayBegDt > $PayCalEnd
      move 'FUTURE' to $ContrStatus
  END-IF

  IF $PayEndDt <= $PayCalEnd
      move 'COMPLETE' to $ContrStatus
  END-IF

  IF $ContrStatus = ''
      move 'ACTIVE' to $ContrStatus
  END-IF

  let #ContrID = 0
  let #EmplRcdN = $EmplRcd
  IF $ContrStatus = 'ACTIVE' or
     $ContrStatus = 'COMPLETE'
      let #ContrID = #EmplRcdN + 1
  ELSE
      do Get-Max-EmplRcd
      let #ContrID = #EmplRcdN + #MaxEmplRcd + 2
  END-IF

  do Format-Number(#ContrID, $out, 'B999999')
  let $ContrID = $out

  do Print-Contract-Data

FROM PS_CONTRACT C
 WHERE C.EMPLID <> ' '

ORDER BY C.EMPLID, C.EMPL_RCD, C.EFFDT

END-SELECT
END-PROCEDURE


!***********************************************************************
!  Get-Contract-Status                                                 *
!***********************************************************************
BEGIN-PROCEDURE Get-Contract-Status
   add 1 to #Count
END-PROCEDURE

!***********************************************************************
!  Get-Holiday-Schedule                                                *
!***********************************************************************
BEGIN-PROCEDURE Get-Holiday-Schedule

BEGIN-SELECT
J.COMPANY
J.PAYGROUP
J.HOLIDAY_SCHEDULE
J.COMPRATE

  move &J.HOLIDAY_SCHEDULE to $HolSch
  let  #ContrAmt           =  &J.COMPRATE

  move &J.COMPANY          to $Company
  move &J.PAYGROUP         to $Paygroup

  do Get-Work-Schedule

  do Get-Pay-Calendar

FROM PS_JOB J
 WHERE J.EMPLID = $Emplid
   AND J.EMPL_RCD = $EmplRcd
   AND J.EFFDT =
       (SELECT MAX(JOB.EFFDT)
         FROM PS_JOB JOB
         WHERE JOB.EMPLID = J.EMPLID
           AND JOB.EMPL_RCD = J.EMPL_RCD
           AND JOB.EFFDT <= &C.PAYMENT_END_DT)
   AND J.EFFSEQ =
         (SELECT MAX(JOB1.EFFSEQ)
           FROM PS_JOB JOB1
           WHERE JOB1.EMPLID = J.EMPLID
             AND JOB1.EMPL_RCD = J.EMPL_RCD
             AND JOB1.EFFDT = J.EFFDT)
END-SELECT
END-PROCEDURE


!***********************************************************************
!  Get-Max-EmplRcd                                                     *
!***********************************************************************
BEGIN-PROCEDURE Get-Max-EmplRcd

BEGIN-SELECT
CO.EMPL_RCD

  move &CO.EMPL_RCD to #MaxEmplRcd

FROM PS_CONTRACT CO
 WHERE CO.EMPLID = $EmplID
   AND CO.EMPL_RCD = (SELECT
                   MAX(CON.EMPL_RCD)
          FROM PS_CONTRACT CON
         WHERE CON.EMPLID = CO.EMPLID)

END-SELECT
END-PROCEDURE
!***********************************************************************
!  Get-Work-Schedule                                                   *
!***********************************************************************
BEGIN-PROCEDURE Get-Work-Schedule

BEGIN-SELECT
P.WORK_SCHEDULE

  move &P.WORK_SCHEDULE to $WorkSch

FROM PS_PAYGROUP_TBL P
 WHERE P.COMPANY = $Company
   AND P.PAYGROUP = $Paygroup
   AND P.EFFDT = (SELECT
               MAX(PAYGROUP.EFFDT)
         FROM PS_PAYGROUP_TBL PAYGROUP
        WHERE PAYGROUP.COMPANY  = $Company
          AND PAYGROUP.PAYGROUP = $Paygroup
          AND PAYGROUP.EFFDT <= &C.CONTRACT_END_DT
          AND PAYGROUP.EFF_STATUS = 'A')

END-SELECT
END-PROCEDURE

!***********************************************************************
!  Get-Pay-Calendar                                                   *
!***********************************************************************
BEGIN-PROCEDURE Get-Pay-Calendar

   move '' to $PayCalEndDt

BEGIN-SELECT
PC.PAY_END_DT

   move  &PC.PAY_END_DT      to  $PayCalEndDt

FROM PS_PAY_CALENDAR PC
 WHERE PC.COMPANY = $Company
   AND PC.PAYGROUP = $Paygroup
   AND PC.PAY_END_DT = (SELECT
                     MAX(PAYCAL.PAY_END_DT)
          FROM PS_PAY_CALENDAR PAYCAL
         WHERE PAYCAL.COMPANY  = $Company
           AND PAYCAL.PAYGROUP = $Paygroup
           AND PAYCAL.PAY_CONFIRM_RUN = 'Y')

END-SELECT
END-PROCEDURE

!***********************************************************************
!  Print-Contract-Data                                                 *
!***********************************************************************
BEGIN-PROCEDURE Print-Contract-Data

  print $EmplID            (+1,2)
  print $EmplRcd           (0,15)
  do Format-DateTime(&C.EFFDT, $out, {DEFDATE}, '', '')
  print $out               (0,20)
  print $ContrStatus       (0,32)
  do Format-DateTime(&C.CONTRACT_BEGIN_DT, $out, {DEFDATE}, '', '')
  print $out               (0,42)
  do Format-DateTime(&C.CONTRACT_END_DT, $out, {DEFDATE}, '', '')
  print $out               (0,54)
  do Format-DateTime(&C.PAYMENT_BEGIN_DT, $out, {DEFDATE}, '', '')
  print $out               (0,66)
  do Format-DateTime(&C.PAYMENT_END_DT, $out, {DEFDATE}, '', '')
  print $out               (0,78)
  do Format-Number(#ContrAmt, $out, 'B9999999999.99')
  print  $out              (0,92)
  do Format-DateTime(&C.HP_CONTRACT_START, $out, {DEFDATE}, '', '')
  print $out               (0,109)
  do Format-DateTime(&C.CONTRACT_TERM_DT, $out, {DEFDATE}, '', '')
  print $out               (0,122)
  print $WorkSch           (0,135)
  print $HolSch            (0,146)
  print $UseHolSch         (0,158)
  print $ContrID           (0,167)
  print $AddlSeq           (+1,50)
  print $TrackAct          (0,67)
  do Format-Number(#PaidToDt, $out, '9999999999.99')
  print $out               (0,79)
  do Format-Number(#EarnToDt, $out, '9999999999.99')
  print $out               (0,102)
  print $WorkToDt          (0,132)


END-PROCEDURE

#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
