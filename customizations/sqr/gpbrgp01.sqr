!***********************************************************************
!  GPBRGP01:  Guia da Previdência Social - GPS                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:20:57                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   ! set enviroment

Begin-Setup
  #include 'setupdb.sqc'   ! Database specific setup
  Declare-Printer   THIS_REPORT
       Type=HPLASERJET
       Font=22
       Point-Size=12
       Pitch=17
       Symbol-Set=0U     ! ASCII symbol set
  End-Declare
 
  Declare-Layout THIS_REPORT
       Orientation=Portrait
       Top-Margin= .4
       Left-Margin=.60
       Max-Lines=82
       Max-Columns=130
       Char-Width=4.3    ! 7.2
       Line-Height=9     ! 72/printer_point-size
  End-Declare
 
  Declare-Report THIS_REPORT
      Printer-Type=HPLASERJET
      LayOut=THIS_REPORT
  End-Declare

end-Setup

!**************************************
begin-report
!**************************************
  move '1' to $ReportDateType   ! Set for date to format as DMY
  move '1' to $ReportYear4      ! Set for year to be formatted YYYY
  let #FontStd  = 24            !12arial 3curier 18              
  let #SizeGrd  = 11 
  let #SizeStd  = 9   
  let #SizeSml  = 7
  do Init-Report
  do Process-Main
  do Stdapi-Term
  do Reset
  date-time () hh:mi:ss &timeEnd
  display 'Report Ended: ' noline
  display &timeEnd  
end-report

!**************************************
begin-procedure Init-Report
!**************************************
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  move 'GPBRGP01' to $ReportID
  move 'GPS (Guia de Previdencia Social) Report' to $ReportTitle
  move 'Ver.2010F' to $ReportVersion
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  
  let #pos  = instr($sqr-program,'gpbrgp01',0)
  let #pos  = #pos - 1
  let $path = substr($sqr-program,1,#pos)
  let $FileDir = $path || 'brcat01.gif'
       
  #ifdef MVS
   let #pos  = instr($sqr-program,'gpbrgp01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'brcat01)'
  #end-if
    
  #ifdef OS390
   let #pos  = instr($sqr-program,'gpbrgp01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'brcat01)'
  #end-if
       
  #ifdef OS400
   let #pos  = instr($sqr-program,'gpbrgp01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'brcat01)'
  #end-if
       
  #ifdef UNIX
   let $FileDir = $path || 'brcat01.gif'
  #end-if

end-procedure Init-Report
 
!**************************************
begin-procedure Select-Parameters
!#debug show '* Select-Parameters'
!**************************************
Let $Process = 'N'
begin-select
RC.ESTABID
RC.GPBR_START_MONTH
RC.GPBR_END_YEAR
RC.GPBR_FINE_PCT
RC.GPBR_INTEREST_PCT
RC.GPBR_RECALC_13
RC.GPBR_AUTONOM_VAL
 
  Let $Process          = 'Y'
  Let $estabID       = Rtrim(&RC.ESTABID, ' ')
  let #RC_Month         = &RC.GPBR_START_MONTH
  let #RC_Year          = &RC.GPBR_END_YEAR
  let #RC_Fine_Pct      = &RC.GPBR_FINE_PCT
  let #RC_Interest_Pct  = &RC.GPBR_INTEREST_PCT
  let #Fine_Pct         = #RC_Fine_Pct / 100
  let #Interest_Pct     = #RC_Interest_Pct / 100
  let #13_Base          = &RC.GPBR_RECALC_13
  let #Autonom_Val      = &RC.GPBR_AUTONOM_VAL
  move &RC.GPBR_START_MONTH to $RC_Month 00
   
  
  let $RC_Year          = to_char(#RC_Year)
  let $RC_MonthYear     = $RC_Month || '/' || $RC_Year 
   
  If #RC_Year = 0
     Let $RC_Year = '1900'
  End-If
  
  If #RC_Month = 0
     Let $RC_Month = '01'
  else 
     if $RC_Month = '12' OR  $RC_Month = '13' 
     
        Do Select-RunTypes
        
        if $RunTypeFlg = 'Y'
           Let $condition03 = 'AND RT.RUN_TYPE IN (SELECT RT.RUN_TYPE FROM PS_GPBR_GPS_RUNT RT WHERE'
           Let $condition03 = $condition03 || ' RT.OPRID = ' || '''' || $prcs_oprid || ''''
           Let $condition03 = $condition03 || ' AND RT.RUN_CNTL_ID = ' || '''' || $prcs_run_cntl_id || ''')'
        end-if
        
        #debug show $condition03 
 
        if $RC_Month = '13'
           Let #RC_Month = 12
           Let $RC_Month = '12'
        end-if
     else
        Let $condition03 = ''
     end-if
  End-If
  
  Let $BgnDt = $RC_Year || '-' || $RC_Month || '-' || '01'
  do dtu-month-end($BgnDt, $EndDt) 

  #debug show '$BgnDtDTU ' $BgnDt
  #debug show '$EndDtDTU ' $EndDt
  
  do Convert-From-DTU-Date($BgnDt,$BgnDt)
  do Convert-From-DTU-Date($EndDt,$EndDt)  
  
FROM  PS_GPBR_RC_GPS RC
WHERE RC.OPRID = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure Select-Parameters

!**************************************
begin-procedure Select-RunTypes
#debug show '* Select-RunTypes'
!**************************************
Let $RunTypeFlg = 'N'
begin-select
RC2.RUN_TYPE

  Let $RunTypeFlg = 'Y'

FROM  PS_GPBR_GPS_RUNT RC2
WHERE RC2.OPRID = $prcs_oprid
AND   RC2.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure Select-RunTypes


!**************************************
begin-procedure Process-Main

  Do Select-Parameters

  If $Process = 'Y' 

     do Get-Estab-Data   
     do Get-Service-Taker
     do Get-Elements                   
     
!     let #INSS_Base          = #INSS_Base_Add - #INSS_Base_Subs     
!     let #Company            = #INSS_Base * #companyPct
!     let #Work_Risk          = #INSS_Base * #Work_Risk_Pct
!    let #3rd_Party          = #INSS_Base * #3rd_Party_Pct
     
     let #INSS               = #INSS_Add - #INSS_Subs
     let #ADJ_3rdParty       = #3rdparty_Add - #3rdparty_Subs

     let #Autonomous_Val     = #Autonom_Val * #Independent_Pct
!    let #Fine_Amt           = #INSS_Base * #Fine_Pct
!     let #Fine_Amt           = #INSS * #Fine_Pct
!     let #Interest_Amt       = #INSS_Base * #Interest_Pct
!     let #Interest_Amt       = #INSS * #Interest_Pct     
!     let #Total_ATM_Fine_Int = #Fine_Amt + #Interest_Amt
     
!     let #Total_INSS         = (#Company + #Work_Risk + #INSS + #Autonomous_Val ) - #RetComp    
     let #Total_INSS         = (#INSS + #Autonomous_Val ) - #RetComp
     let #Total_INSS         = round(#Total_INSS, 2)
!     let #Total_3rdParty     = #3rd_Party - #ADJ_3rdParty
     let #Total_3rdParty     = #ADJ_3rdParty
     let #Total_3rdParty     = round(#Total_3rdParty, 2)
     let #Fine_Amt           = (#Total_INSS + #Total_3rdParty) * #Fine_Pct
     let #Interest_Amt       = (#Total_INSS + #Total_3rdParty) * #Interest_Pct
     let #Total_ATM_Fine_Int = #Fine_Amt + #Interest_Amt
     let #Total              = #Total_INSS + #Total_3rdParty + #Total_ATM_Fine_Int
     
!    **********************************   
     #debug show ' '
     !#debug show 'GPS type 30:'
     !#debug show '  #INSS_Base = #INSS_Base_Add + #INSS_Base_Subs '
     !#debug show '  = ' #INSS_Base
     !#debug show ' '
     !#debug show '#Company= #INSS_Base * #companyPct (estab tbl bra)'
     !#debug show '#companyPct: ' #companyPct
     !#debug show '= ' #Company
     !#debug show ' '
     !#debug show '#Work_Risk =   #INSS_Base * #Work_Risk_Pct (estab tbl bra)' 
     !#debug show '#Work_Risk_Pct: ' #Work_Risk_Pct
     !#debug show '= ' #Work_Risk       
     !#debug show ' '
     !#debug show '#3rd_Party = #INSS_Base * #3rd_Party_Pct (estab tbl bra) '
     !#debug show '#3rd_Party_Pct: ' #3rd_Party_Pct
     !#debug show '= ' #3rd_Party
     #debug show ' '
     #debug show '#INSS =  #INSS_Add - #INSS_Subs'
     #debug show '= ' #INSS  
     #debug show ' '
     #debug show '#ADJ_3rdParty =  #3rdparty_Add - #3rdparty_Subs'
     #debug show '#3rdparty_Add  ' #3rdparty_Add  
     #debug show '#3rdparty_Subs ' #3rdparty_Subs
     #debug show ' = ' #ADJ_3rdParty
     #debug show ' '
     #debug show 'Autonomous_Val     = #Autonom_Val * #Independent_Pct '
     #debug show '#Autonom_Val ' #Autonom_Val
     #debug show '#Independent_Pct ' #Independent_Pct
     #debug show ' = ' #Autonomous_Val
     #debug show ' '
     #debug show '*** 06 *** #Total_INSS = (#INSS + #Autonomous_Val) - #RetComp '
     #debug show '           - #RetComp : '  #RetComp
     #debug show ' =       ' #Total_INSS
     #debug show ' '
     !#debug show '*** 09 *** #Total_3rdParty     = #3rd_Party - #ADJ_3rdParty'
     #debug show '*** 09 *** #Total_3rdParty     =  #ADJ_3rdParty'
     #debug show ' =      '  #Total_3rdParty
     #debug show ' ' 

    do Print-Page03
  else
     show 'Run Control Missing'
  end-if    
end-procedure Process-Main

!**************************************
Begin-procedure Get-Estab-Data
!#debug show '* Get-Estab-Data'

begin-select
A1.ESTABID
A1.DESCR
A1.ADDRESS1
A1.NUM1
A1.ADDRESS2
A1.ADDRESS3
A1.ADDRESS4
A1.POSTAL
A1.CITY
A1.STATE
A1.COMPANY
A1.EFFDT

  let $Estabid_Descr  = rtrim(&A1.DESCR,' ')
  let $Estabid_Addr1  = rtrim(&A1.ADDRESS1,' ')
  let $Estabid_Num1   = rtrim(&A1.NUM1,' ')
  let $Estabid_Addr2  = rtrim(&A1.ADDRESS2,' ')
  let $Estabid_Addr3  = rtrim(&A1.ADDRESS3,' ')
  let $Estabid_Addr4  = rtrim(&A1.ADDRESS4,' ')
  let $Estabid_Postal = rtrim(&A1.POSTAL,' ')
  let $Estabid_City   = rtrim(&A1.CITY,' ')
  let $Estabid_State  = rtrim(&A1.STATE,' ')
  let $Address_Estab  = $Estabid_Addr1 || ' ' || $Estabid_Num1
  let $Address_Estab1 = $Estabid_Addr2
  let $Address_Estab2 = $Estabid_Addr3 || ' ' || $Estabid_Addr4
  let $Address_Estab3 = $Estabid_City  || ', ' || $Estabid_State || '. ' || $Estabid_Postal
  let $estabEffdt     = &A1.EFFDT
  let $Company = &A1.COMPANY

from PS_ESTAB_TBL A1
where A1.ESTABID = $estabID
AND   A1.EFFDT   = (SELECT MAX(EFFDT) 
                    FROM PS_ESTAB_TBL
                    WHERE ESTABID = A1.ESTABID
                    AND   EFFDT <= $EndDt)
end-select

begin-select 
EP.PHONE
  let $Estab_Phone = rtrim(&EP.PHONE,' ')
  
FROM PS_ESTAB_PHONE EP
WHERE EP.ESTABID = $estabID
  AND EP.EFFDT   = $estabEffdt
  AND EP.PHONE_TYPE = 'BUSN'
end-select

begin-select
B1.COMP_INS_TYPE_BRA
B1.GPS_PAY_CD_BRA
B1.COMPANY_PCT_BRA
B1.WORK_RISK_PCT_BRA
B1.THIRD_PTY_PCT_BRA
B1.INDEPENDNT_PCT_BRA
B1.COUNTY_CD_BRA
B1.LEGAL_ENT_TYPE_BRA

  let $Estabid_Comp_Ins     = rtrim(&B1.COMP_INS_TYPE_BRA,' ')
  let $GPS_Pay_CD_Bra       = to_char(&B1.GPS_PAY_CD_BRA) 
  let #companyPct           = &B1.COMPANY_PCT_BRA / 100
  let #Work_Risk_Pct        = &B1.WORK_RISK_PCT_BRA / 100
  let #3rd_Party_Pct        = &B1.THIRD_PTY_PCT_BRA / 100
  let #Independent_Pct      = &B1.INDEPENDNT_PCT_BRA / 100
  let #countyCd             = &B1.COUNTY_CD_BRA
  let $legalName            = &B1.LEGAL_ENT_TYPE_BRA  

from PS_ESTAB_TBL_BRA B1
where B1.ESTABID = $estabID
AND   B1.EFFDT   = (SELECT MAX(EFFDT) 
                    FROM PS_ESTAB_TBL
                    WHERE ESTABID = B1.ESTABID
                    AND   EFFDT <= $EndDt)
end-select

begin-select
EIB.ESTAB_ID_TYPE_BRA
EIB.ESTAB_ID_BRA
  let $EstabIdType = rtrim(&EIB.ESTAB_ID_TYPE_BRA,' ')
  let $Estab_Id_BRA = rtrim(&EIB.ESTAB_ID_BRA,' ')
  Evaluate $EstabIdType
     when = 'CEI'
        let $Estabid_CEI = $Estab_Id_BRA
     when = 'CNPJ'
        let $Estabid_CNPJ = $Estab_Id_BRA
  End-Evaluate
  if $Estabid_Comp_Ins = 'CEI'
     let $Estabid_Ident = $Estabid_CEI
  else
     let $Estabid_Ident = $Estabid_CNPJ
  end-if

FROM PS_ESTAB_ID_BRA  EIB
WHERE EIB.ESTABID = $estabID
  AND EIB.COUNTY_CD_BRA = #countyCd
  AND EIB.EFFDT   = $estabEffdt
  AND EIB.COUNTRY = 'BRA'
end-select

If $legalName = 'COM'
Begin-SELECT  
CO.DESCR

  let $Estabid_Descr    = rtrim(&CO.DESCR,' ')
   
FROM PS_COMPANY_TBL CO
WHERE CO.COMPANY = $Company
AND CO.EFFDT = (SELECT MAX(L.EFFDT) 
                FROM PS_COMPANY_TBL L 
                WHERE L.COMPANY=CO.COMPANY 
                AND L.EFFDT <= $EndDt)
end-select
end-if
End-procedure Get-Estab-Data

begin-procedure Get-Service-Taker
Let #Ret9711 = 0
Let #RetComp = 0
begin-select DISTINCT
ST.GPBR_SERVICE_TAKER

  Let $Taker = &ST.GPBR_SERVICE_TAKER  
  Do Get-Service-Taker-Amt

FROM PS_GPBR_SERV_T_DTL ST
WHERE ST.ESTABID = $estabID
AND ST.YEARCD = $RC_Year
AND ST.MONTHCD = $RC_Month
end-select
end-procedure Get-Service-Taker

begin-procedure Get-Service-Taker-Amt
begin-select
ST2.GPBR_RET_9711
ST2.GPBR_CORRECT_COMP

   Let #Ret9711 = #Ret9711 + &ST2.GPBR_RET_9711
   Let #RetComp = #RetComp + &ST2.GPBR_CORRECT_COMP
   #debug show '#Ret9711: '  #Ret9711
   #debug show '#RetComp: '  #RetComp

FROM PS_GPBR_STAKER_DTA ST2
WHERE ST2.GPBR_SERVICE_TAKER = $Taker
AND ST2.YEARCD = $RC_Year
AND ST2.MONTHCD = $RC_Month
end-select
end-procedure Get-Service-Takers-Amt


!**************************************
begin-procedure Get-Elements
#debug show '* Get-Elements'
#debug show '**************'

!Let $condition01 = ' AND RSLT1.ACM_FROM_DT = ' || '''' || $BgnDt || '''' || ' AND RSLT1.ACM_THRU_DT = ' || '''' || $EndDt || ''''
Let $condition02 = ' AND J.ESTABID  = ' || '''' || $estabID || ''''
Let $datachoicewhere = '0'

begin-select
P.PIN_NUM 
P.GPBR_GPS_RTYPE 
P.ACM_SIGN
PIN.PIN_NM
P.ENTRY_TYPE_ELEM
  
  Let #pinNum = &P.PIN_NUM 
  Let $pinNum = edit(#pinNum, '00000000')
  Let $entryType = rtrim(&P.ENTRY_TYPE_ELEM, ' ')
  
  if $entryType = 'AC0'
     Let $condition01 = ' AND RSLT1.ACM_FROM_DT = ' || '''' || $BgnDt || '''' || ' AND RSLT1.ACM_THRU_DT = ' || '''' || $EndDt || ''''
     
     #debug show '$condition03 '  $condition03
     Do Get-Result-Acum-by-Elem(#pinNum,$EndDt, $condition01, $condition02, $condition03, #calcRsltVal) 
  else
     Let $condition01 = ' AND RSLT1.SLICE_BGN_DT >= ' || '''' || $BgnDt || '''' || ' AND RSLT1.SLICE_END_DT <= ' || '''' || $EndDt || ''''     
     #debug show '$condition01 '  $condition01 
     Do Get-Results-by-Elem     
  end-if
  
  
  
  #debug show ' '
  #debug show '**************'
  #debug show 'pin name:      ' $pinNum '-' &PIN.PIN_NM  
  #debug show 'GPS type:      ' &P.GPBR_GPS_RTYPE      
  #debug show '#calcRsltVal:  ' #calcRsltVal

  if #13_Base = 1
     Evaluate &P.GPBR_GPS_RTYPE 
      when = '10'
      when = '50'
           if &P.ACM_SIGN = 'A'  
              Let #INSS_Add = #INSS_Add +  #calcRsltVal
           else
              Let #INSS_Subs = #INSS_Subs +  #calcRsltVal
           end-if
      when = '20'
           if &P.ACM_SIGN = 'A'
             Let #3rdparty_Add = #3rdparty_Add +  #calcRsltVal
           else
             Let #3rdparty_Subs = #3rdparty_Subs +  #calcRsltVal 
           end-if 
     when = '40'
     when = '30'
          if &P.ACM_SIGN = 'A'  
             Let #INSS_Base_Add =  #INSS_Base_Add + #calcRsltVal   
          else
             Let #INSS_Base_Subs = #INSS_Base_Subs + #calcRsltVal              
          end-if   
     End-Evaluate
  else
     Evaluate &P.GPBR_GPS_RTYPE 
        when = '10'
           if &P.ACM_SIGN = 'A'  
              Let #INSS_Add = #INSS_Add +  #calcRsltVal
           else
              Let #INSS_Subs = #INSS_Subs +  #calcRsltVal
           end-if
        when = '20'
           if &P.ACM_SIGN = 'A'
              Let #3rdparty_Add = #3rdparty_Add +  #calcRsltVal
           else
             Let #3rdparty_Subs = #3rdparty_Subs +  #calcRsltVal 
           end-if 
        when = '30'
           if &P.ACM_SIGN = 'A'  
              Let #INSS_Base_Add =  #INSS_Base_Add + #calcRsltVal   
           else
              Let #INSS_Base_Subs = #INSS_Base_Subs + #calcRsltVal  
           end-if
      End-Evaluate  
  end-if
  
FROM PS_GPBR_GPS_ELEM P
    ,PS_GP_PIN PIN 
WHERE P.OPRID = $prcs_oprid
AND   P.RUN_CNTL_ID = $prcs_run_cntl_id                
AND   P.PIN_NUM = PIN.PIN_NUM
ORDER BY P.GPBR_GPS_RTYPE 
end-select

  #debug show '***********'
  #debug show ' '
  #debug show '**** GPS Type 30, 40  INSS Calc BASE & 13th Salary Base:'
  #debug show '#INSS_Base_Add:  ' #INSS_Base_Add
  #debug show '#INSS_Base_Subs: ' #INSS_Base_Subs 
  #debug show ' '
  #debug show '**** GPS Type 50, 10  INSS & INSS 13:'
  #debug show '#INSS_Add:  ' #INSS_Add
  #debug show '#INSS_Subs: ' #INSS_Subs
  #debug show ' '
  #debug show '**** GPS Type 20      Third Party Base:'
  #debug show '#3rdparty_Add  ' #3rdparty_Add
  #debug show '#3rdparty_Subs ' #3rdparty_Subs
end-procedure Get-Elements

!**************************************
begin-procedure Print-Page03
#debug show '*** Print-Page03 ***'
!**************************************

    print-image (5,3)
    type       = gif-file
    image-size =(11,3)
    source     = $FileDir

    graphic (3,72,21) vert-line 12
    graphic (3,97,21) vert-line 12      
    graphic (4,1,117) box 25 12  !big box
    graphic (5,72,46) horz-line 10
    graphic (7,72,46) horz-line 10
    graphic (9,1,117) horz-line 10
    graphic (11,72,46) horz-line 10
    graphic (13,72,46) horz-line 10
    graphic (15,72,46) horz-line 10
    graphic (17,1,117) horz-line 10
    graphic (17,16,3)  vert-line 12
    graphic (20,1,117) horz-line 10
    graphic (24,1,117) horz-line 10

    Alter-Printer Point-size = #SizeSml Font-Type = Proportional Font = #FontStd
    Print '1. NOME OU RAZÃO SOCIAL/FONE/ENDEREÇO:'     (10, 15) Bold 
    Print '2. VENCIMENTO'                              (18, 2)  Bold 
    Print '(Uso do INSS)'                              (19, 2)  Bold 
    Print '3. CÓDIGO DE PAGAMENTO'                     (4,73)   Bold 
    Print '4. COMPETÉNCIA'                             (6,73)   Bold 
    Print '5. IDENTIFICADOR'                           (8,73)   Bold
    Print '6. VALOR DO INSS'                           (10,73)  Bold
    Print '7.'                                         (12,73)  Bold
    Print '8.'                                         (14,73)  Bold
    Print '9. VALOR DE OUTRAS'                         (16,73)  Bold
    Print 'ENTIDADES'                                  (17,73)  Bold
    Print '10. ATM, MULTA E JUROS'                     (18,73)  Bold
    Print '11. TOTAL'                                  (21,73)  Bold
    Print '12. AUTENTICAÇÃO BANCÁRIA'                  (25,93)  Bold
     
    Alter-Printer Point-size = #SizeSml Font-Type = Fixed Font = #FontStd
    Print 'ATENÇÃO: '                                                                             (21, 2) Bold
    Alter-Printer Point-size = 5.8 Font-Type = Fixed Font = #FontStd
    Print 'É vedada a utilização de GPS para recolhimento de receita de valor'                    (,)
    Print 'inferior ao estipulado em Resolução publicada pelo INSS. A receita que resultar valor' (+1, 2)
    Print 'inferior deverá ser adicionada à contribução ou importância correspondente nos'        (+1, 2)
    Print 'meses subseqüentes, até que o total seja igual ou superior ao valor mínimo fixado.'    (+1, 2)   
     
    Alter-Printer Point-size = 7 Font-Type = Proportional Font = #FontStd
    Print 'MINISTÉRIO DA PREVIDÊNCIA SOCIAL - MPS'     (5,  18)
    Print 'INSTITUTO NACIONAL DO SEGURO SOCIAL - INSS' (+1, 18)
    Alter-Printer Point-size = 9 Font-Type = Proportional Font = #FontStd
    Print 'GUIA DE PREVIDÊNCIA SOCIAL - GPS'               (+1, 19) Bold


    Alter-Printer Point-size = #SizeSml Font-Type = Proportional Font = #FontStd
    Print $Estabid_Descr                   (12, 2, 70)  Bold
    Print $Address_Estab                   (13, 2, 70)  Bold
    Print $Address_Estab1                  (14, 2, 70)  Bold
    Print $Address_Estab2                  (15, 2, 70)  Bold
    Print $Address_Estab3                  (16, 2, 70)  Bold
    Print $Estab_Phone                     (17, 2, 70)  Bold

    Print $GPS_Pay_CD_Bra                  (4, 98)     Bold
    Print $RC_MonthYear                    (6, 98)     Bold
    Print $Estabid_Ident                   (8, 98)     Bold
     
    Print #Total_INSS                      (10, 98)     Bold
    Print #Total_3rdParty                  (16, 98)     Bold
    Print #Total_ATM_Fine_Int              (18, 98)     Bold
    Print #Total                           (21, 98)     Bold
end-procedure Print-Page03

Begin-Procedure Get-Results-by-Elem 
#debug show '* Get-Results-by-Elem'

Begin-Select
SUM(RSLT1.CALC_RSLT_VAL) &RSLT1.CALC_RSLT_VAL

   Let #calcRsltVal = &RSLT1.CALC_RSLT_VAL

FROM PS_GP_PYE_PRC_STAT ST
    ,PS_GP_PYE_SEG_STAT SE
    ,PS_GP_RUN_TYPE     RT
    ,PS_GP_RSLT_ERN_DED  RSLT1
WHERE RSLT1.PIN_NUM    = #pinNum
AND RSLT1.GP_PAYGROUP  = ST.GP_PAYGROUP 
AND RSLT1.CAL_RUN_ID   = ST.CAL_RUN_ID 
AND RSLT1.EMPLID       = ST.EMPLID 
AND RSLT1.EMPL_RCD     = ST.EMPL_RCD 
AND RSLT1.CAL_ID       = ST.CAL_ID 
AND RSLT1.RSLT_SEG_NUM = SE.RSLT_SEG_NUM
AND RT.RUN_TYPE        = ST.RUN_TYPE
AND RT.CALC_TYPE       = 'P'
AND SE.CAL_RUN_ID      = ST.CAL_RUN_ID 
AND SE.EMPLID          = ST.EMPLID 
AND SE.EMPL_RCD        = ST.EMPL_RCD 
AND SE.GP_PAYGROUP     = ST.GP_PAYGROUP 
AND SE.CAL_ID          = ST.CAL_ID 
AND SE.ORIG_CAL_RUN_ID = ST.ORIG_CAL_RUN_ID 
AND SE.PYE_CALC_STAT  >= '50' 
AND SE.CALC_ACTION     = 'C' 
AND SE.RSLT_VER_NUM    = ST.RSLT_VER_NUM
AND SE.RSLT_REV_NUM    = ST.RSLT_REV_NUM
AND ST.RSLT_VER_NUM = (SELECT MAX (X.RSLT_VER_NUM) FROM PS_GP_PYE_PRC_STAT X
                                WHERE ST.EMPLID       = X.EMPLID
                         !      AND ST.CAL_RUN_ID     = X.CAL_RUN_ID         --> Non selected to get the last calc.
                                AND ST.EMPL_RCD       = X.EMPL_RCD
                                AND ST.CAL_ID         = X.CAL_ID
                                AND ST.GP_PAYGROUP    = X.GP_PAYGROUP
                                AND ST.CALC_TYPE      = X.CALC_TYPE)
AND ST.RSLT_REV_NUM = 1                                              
AND EXISTS         (SELECT J.EMPLID                                     
                    FROM PS_JOB J 
                    WHERE J.EMPLID =  RSLT1.EMPLID
                    AND   J.EMPL_RCD = RSLT1.EMPL_RCD
                    AND   J.EFFDT  = (SELECT MAX(JJ.EFFDT) 
                                      FROM PS_JOB JJ
                                      WHERE JJ.EMPLID    = J.EMPLID
                                      AND   JJ.EMPL_RCD  = J.EMPL_RCD
                                      AND   JJ.EFFDT    <= RSLT1.SLICE_END_DT)
                    AND   J.EFFSEQ = (SELECT MAX(JJJ.EFFSEQ) 
                                      FROM PS_JOB JJJ
                                      WHERE JJJ.EMPLID   = J.EMPLID
                                      AND   JJJ.EMPL_RCD = J.EMPL_RCD
                                     AND   JJJ.EFFDT    = J.EFFDT)      
                    [$condition02]  
                    )                          
[$condition01]
[$condition03]
End-Select
  
End-Procedure Get-Results-by-Elem


!**************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports
#Include 'gpbrac01.sqc'  !Get-Result-Acum