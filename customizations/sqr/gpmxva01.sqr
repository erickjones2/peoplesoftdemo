!***********************************************************************
!  GPMXVA01: Vacations                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:53:56                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   ! set enviroment
#include 'setup02.sqc'  ! landscape orientation and printer initialize

#define c1  1           !Empl. Code
#define c2  12          !Empl. Rcd
#define c2a 16
#define c3  21          !Name

#define c4  62          !Fecha Antigüedad
#define c5  78          !Antigüedad
#define c5a 84  

#define c6  93          !Fecha Inicio
#define c7  109         !Fecha Fin  

#define c8  125         !Devengados
#define c8a 132
#define c9  141         !Disfrutados
#define c9a 149
#define c10  158        !Ajustados
#define c10a 164
#define c11 173         !Saldo
#define c11a 175

#define c98 159
#define c99 168

!***********************************************************************
begin-setup
!***********************************************************************
PAGE-SIZE 60 180

declare-variable
   date $FROM
   date $TO
   date $SERVICEDT
end-declare
  
end-setup

!***********************************************************************
! Main of Program
begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  
  Let $AsOfToday = datenow()
  let $AsOfToday  = edit($AsOfToday,'YYYY-MM-DD')
  Do Convert-From-DTU-Date ($AsOfToday,$AsOfToday)
  
  display &timeBegan
  move 'GPMXVA01' to $ReportID
  move 'Historial de Vacaciones por Empleado' to $ReportTitle
  display $ReportTitle
end-procedure Init-Report

begin-report
  move '1' to $ReportDateType
  move '1' to $ReportYear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Init-Report
  do Select-Params
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
end-report

!***********************************************************************
begin-heading 08
!***********************************************************************
print 'PeopleSoft'            (1,)    center
uppercase $ReportTitle
print $ReportTitle            (2,)    center
print 'Página:'               (3,{c98})
page-number                   (,{c99})
print 'Hora:'                 (4,{c98})
print $ReportTime             (,{c99})
print 'Fecha:'                (5,{c98})
print $ReportDate             (,{c99})

print 'Reporte:'              (3,1)
print $ReportID               (,20)
print 'Compañía:'             (4,1)
print $Comp                   (,20)
print $CompDescr              (,30)
If rtrim($Dept, ' ') = ''
  print ''                     (5,)
else
  print 'Departamento:'        (5,1)
  print $Deptid                (,20)
  print $DeptDescr             (,30)
end-if

print '='                       (+1,1,177) fill
print 'Fecha'                   (+1,{c4})
print 'Antigüedad'              (,{c5})
print 'Fecha'                   (,{c6})
print 'Fecha'                   (,{c7})
print 'Días'                    (,{c8})
print 'Días'                    (,{c9})
print 'Días'                    (,{c10})
print 'Días'                    (,{c11})
print 'EmplID'                  (+1,{c1})
print 'EmplRcd'                 (,{c2})
print 'Nombre del Empleado'     (,{c3},40)
print 'Antigüedad'              (,{c4})
print '(Años)'                  (,{c5})
print 'Inicio'                  (,{c6})
print 'Fin'                     (,{c7})
print 'Devengados'              (,{c8})
print 'Disfrutados'             (,{c9})
print 'Ajustados'               (,{c10})
print 'Saldo'                   (,{c11})
print '='                       (+1,1,177) fill

end-heading

!***********************************************************************
Begin-procedure Select-Params
!***********************************************************************
Let $WhereCompany = ''
Let $WhereDeptID = ''
BEGIN-SELECT
A.COMPANY
A.DEPTID
A.SETID_DEPT
A.GPMX_SELECT_OPTION
A.GB_GROUP_ID

  LET $Comp = rtrim(&A.COMPANY, ' ')
  LET $Dept = rtrim(&A.DEPTID, ' ')
  LET $Setid = rtrim(&A.SETID_DEPT, ' ')
  Let $option = rtrim(&A.GPMX_SELECT_OPTION, ' ')
  Let $groupID = rtrim(&A.GB_GROUP_ID, ' ')
  Let $whereClause = ''
  
   
  If $option  = '1'
     let $whereClause = ' AND J.EMPLID IN (SELECT E.EMPLID FROM  PS_GPMX_RC_VAC_EMP E '  
     Let $whereClause = $whereClause || ' WHERE E.OPRID = ' || '''' || $prcs_oprid  || ''''
     let $whereClause = $whereClause || ' AND E.RUN_CNTL_ID = ' || '''' || $prcs_run_cntl_id || '''' || ' )'
  else
     If $option  = '2'
         Let $whereClause = ' AND J.EMPLID IN (SELECT GR.EMPLID FROM  PS_GB_GRP_RES_TBL GR' 
         Let $whereClause = $whereClause || ' WHERE GR.GB_GROUP_ID = ''' || $groupID  || ''''
         Let $whereClause = $whereClause || ' AND GR.VERSIONGBQDM = (SELECT MAX(G.VERSIONGBQDM) FROM'
         Let $whereClause = $whereClause || ' PS_GB_GRP_RES_TBL G WHERE G.GB_GROUP_ID = GR.GB_GROUP_ID))' 
     end-if
  end-if
  
FROM PS_GPMX_RC_VACATN A
WHERE A.OPRID     = $Prcs_OprID
AND A.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SELECT

If $Dept <> ''
   Do Get-Dept-Descr
   Let $WhereDeptID = 'AND J.DEPTID = ''' || $Dept ||  ''' AND J.SETID_DEPT = ''' || $Setid || ''''
End-If 
If $Comp <> ''
   Do Get-Comp-Descr
   Let $WhereCompany = 'AND J.COMPANY = ''' || $Comp ||  ''''
End-If

do Get-Pin-Code
do Get-Pin-Num
do Get-Data
End-procedure Select-Params

!***********************************************************************
begin-procedure Get-Comp-Descr
!***********************************************************************
BEGIN-SELECT
CC.DESCR

  Let $CompDescr = rtrim(&CC.DESCR, ' ')
  
FROM PS_COMPANY_TBL CC
WHERE CC.COMPANY = $Comp
AND CC.EFFDT     = (SELECT MAX(CC1.EFFDT) FROM PS_COMPANY_TBL CC1
                    WHERE CC1.COMPANY    = CC.COMPANY
                    AND   CC1.EFFDT     <= $AsOfToday
                    AND   CC1.EFF_STATUS = 'A')
END-SELECT
end-procedure Get-Comp-Descr

!***********************************************************************
Begin-Procedure Get-Dept-Descr
!***********************************************************************
BEGIN-SELECT
DP1.DESCR

  Let $DeptDescr = rtrim(&DP1.DESCR, ' ')
  
FROM PS_DEPT_TBL DP1
WHERE DP1.DEPTID = $Dept 
AND DP1.EFFDT    = (SELECT MAX(EFFDT) FROM PS_DEPT_TBL 
                    WHERE DEPTID   = DP1.DEPTID 
                    AND SETID      = DP1.SETID
                    AND EFF_STATUS = 'A'
                    AND EFFDT     <= $AsOfToday)
AND DP1.SETID    = $Setid           
END-SELECT

BEGIN-SELECT
DP.DESCR

  Let $DeptDescr = &DP.DESCR

FROM PS_DEPT_TBL_LANG DP
WHERE DP.DEPTID    = $Dept
AND DP.EFFDT       = (SELECT MAX(L.EFFDT) FROM PS_DEPT_TBL_LANG L 
                      WHERE L.DEPTID    = DP.DEPTID                 
                      AND L.SETID       = DP.SETID 
                      AND L.LANGUAGE_CD = DP.LANGUAGE_CD
                      AND L.EFFDT      <= $AsOfToday)                       
AND DP.SETID       = $Setid      
AND DP.LANGUAGE_CD = $Curr_language_Cd   
END-SELECT
End-Procedure Get-Dept-Descr


!***********************************************************************
Begin-Procedure Get-Pin-Code
!***********************************************************************
Let $PinCode_Ajust = ''
Let $PinCode_Ausen = ''
Let $PinCode_Deven = ''
Let $PinCode_Saldo = ''
Do GetPinCode('GPMX_RC_VACATN','ANIV_AJUST',$PinCode_Ajust)
Do GetPinCode('GPMX_RC_VACATN','ANIV_AUSEN',$PinCode_Ausen)
Do GetPinCode('GPMX_RC_VACATN','ANIV_DEVNG',$PinCode_Deven)
Do GetPinCode('GPMX_RC_VACATN','ANIV_SALDO',$PinCode_Saldo)
End-procedure Get-Pin-Code

!***********************************************************************
Begin-procedure Get-Pin-Num
!***********************************************************************
BEGIN-SELECT
W.PIN_NUM
 LET #WPINNUM = &W.PIN_NUM
FROM PS_GP_PIN W
WHERE W.PIN_CODE = $PinCode_Deven !'VAC ANIV_DEVNG MEX'
AND W.COUNTRY='MEX'
END-SELECT
BEGIN-SELECT
X.PIN_NUM
 LET #XPINNUM = &X.PIN_NUM
FROM PS_GP_PIN X
WHERE X.PIN_CODE = $PinCode_Ausen !'VAC ANIV_AUSEN MEX'
AND X.COUNTRY='MEX'
END-SELECT
BEGIN-SELECT
Y.PIN_NUM
 LET #YPINNUM = &Y.PIN_NUM
FROM PS_GP_PIN Y
WHERE Y.PIN_CODE= $PinCode_Ajust !'VAC ANIV_AJUST MEX'
AND Y.COUNTRY='MEX'
END-SELECT
BEGIN-SELECT
Z.PIN_NUM
 LET #ZPINNUM=&Z.PIN_NUM
FROM PS_GP_PIN Z
WHERE Z.PIN_CODE= $PinCode_Saldo !'VAC ANIV_SALDO MEX'
AND Z.COUNTRY='MEX'
END-SELECT
end-procedure Get-Pin-Num

!***********************************************************************
begin-procedure Get-Name
!***********************************************************************
BEGIN-SELECT
EM.NAME

   Let $NAME = rtrim(&EM.NAME, ' ')
   
FROM PS_PERSON_NAME EM 
WHERE EM.EMPLID = $EMPLID
AND EM.NAME_TYPE = 'PRI'
END-SELECT
end-procedure Get-Name

!***********************************************************************
Begin-procedure Get-Entitlement
!***********************************************************************
Let #ENTITLE = 0
Begin-Select
CE.CALC_RSLT_VAL

   Let #ENTITLE = &CE.CALC_RSLT_VAL
   
FROM PS_GP_RSLT_ACUM CE
WHERE CE.EMPLID          = $EMPLID
AND CE.CAL_RUN_ID        = $CALRUNID
AND CE.EMPL_RCD          = #EMPLRCD
AND CE.GP_PAYGROUP       = $GPPAYGROUP
AND CE.CAL_ID            = $CALID
AND CE.ORIG_CAL_RUN_ID   = $ORIGCALRUNID
AND CE.RSLT_SEG_NUM      = #RSLTSEGNUM
AND CE.EMPL_RCD_ACUM     = #EMPLRCDACUM
AND CE.ACM_FROM_DT       = $ACMFROM
AND CE.SLICE_BGN_DT      = $SLICEBGNDT
AND CE.SLICE_END_DT      = $SLICEENDDT
AND CE.PIN_NUM           = #WPINNUM
AND CE.USER_KEY1         = $USERKEY1
End-Select
End-procedure Get-Entitlement

!***********************************************************************
Begin-procedure Get-Taken
!***********************************************************************
Let #TAKEN = 0
Begin-Select
CT.CALC_RSLT_VAL 

   Let #TAKEN = &CT.CALC_RSLT_VAL
   
FROM PS_GP_RSLT_ACUM CT
WHERE CT.EMPLID          = $EMPLID
AND CT.CAL_RUN_ID        = $CALRUNID
AND CT.EMPL_RCD          = #EMPLRCD
AND CT.GP_PAYGROUP       = $GPPAYGROUP
AND CT.CAL_ID            = $CALID
AND CT.ORIG_CAL_RUN_ID   = $ORIGCALRUNID
AND CT.RSLT_SEG_NUM      = #RSLTSEGNUM
AND CT.EMPL_RCD_ACUM     = #EMPLRCDACUM
AND CT.ACM_FROM_DT       = $ACMFROM
AND CT.SLICE_BGN_DT      = $SLICEBGNDT
AND CT.SLICE_END_DT      = $SLICEENDDT
AND CT.PIN_NUM           = #XPINNUM
AND CT.USER_KEY1         = $USERKEY1
End-Select
End-procedure Get-Taken

!***********************************************************************
Begin-procedure Get-Adjustment
!***********************************************************************
Let #ADJUST = 0
Begin-Select 
CA.CALC_RSLT_VAL 

   Let #ADJUST = &CA.CALC_RSLT_VAL

FROM PS_GP_RSLT_ACUM CA
WHERE CA.EMPLID          = $EMPLID
AND CA.CAL_RUN_ID        = $CALRUNID
AND CA.EMPL_RCD          = #EMPLRCD
AND CA.GP_PAYGROUP       = $GPPAYGROUP
AND CA.CAL_ID            = $CALID
AND CA.ORIG_CAL_RUN_ID   = $ORIGCALRUNID
AND CA.RSLT_SEG_NUM      = #RSLTSEGNUM
AND CA.EMPL_RCD_ACUM     = #EMPLRCDACUM
AND CA.ACM_FROM_DT       = $ACMFROM
AND CA.SLICE_BGN_DT      = $SLICEBGNDT
AND CA.SLICE_END_DT      = $SLICEENDDT
AND CA.PIN_NUM           = #YPINNUM
AND CA.USER_KEY1         = $USERKEY1
End-Select
End-procedure Get-Adjustment

!***********************************************************************
Begin-procedure Get-Balance
!***********************************************************************
Let #BALANCE = 0
Begin-Select 
CB.CALC_RSLT_VAL 

   Let #BALANCE = &CB.CALC_RSLT_VAL
   
FROM PS_GP_RSLT_ACUM CB
WHERE CB.EMPLID          = $EMPLID
AND CB.CAL_RUN_ID        = $CALRUNID
AND CB.EMPL_RCD          = #EMPLRCD
AND CB.GP_PAYGROUP       = $GPPAYGROUP
AND CB.CAL_ID            = $CALID
AND CB.ORIG_CAL_RUN_ID   = $ORIGCALRUNID
AND CB.RSLT_SEG_NUM      = #RSLTSEGNUM
AND CB.EMPL_RCD_ACUM     = #EMPLRCDACUM
AND CB.ACM_FROM_DT       = $ACMFROM
AND CB.SLICE_BGN_DT      = $SLICEBGNDT
AND CB.SLICE_END_DT      = $SLICEENDDT
AND CB.PIN_NUM           = #ZPINNUM
AND CB.USER_KEY1         = $USERKEY1
End-Select
End-procedure Get-Balance

!***********************************************************************
Begin-procedure Get-Data
!***********************************************************************
Let #TOTENTITLE = 0
Let #TOTTAKEN   = 0
Let #TOTADJUST  = 0
Let #TOTBALANCE = 0
BEGIN-SELECT
A.EMPLID          () on-break print=never after=PrintEmpl-Tot skiplines=1
A.EMPL_RCD
C.ACM_FROM_DT
C.ACM_THRU_DT
B.CAL_RUN_ID
C.GP_PAYGROUP
B.CAL_ID
B.ORIG_CAL_RUN_ID
C.RSLT_SEG_NUM
C.EMPL_RCD_ACUM 
C.SLICE_BGN_DT
C.SLICE_END_DT
C.USER_KEY1
D.SERVICE_DT
J.DEPTID
J.SETID_DEPT

   Let $EMPLID          =  &A.EMPLID
   Let #EMPLRCD         =  &A.EMPL_RCD
   Let $ACMFROM         =  &C.ACM_FROM_DT
   Let $ACMTHRU         =  &C.ACM_THRU_DT
   Let $CALRUNID        =  &B.CAL_RUN_ID
   Let $GPPAYGROUP      =  &C.GP_PAYGROUP
   Let $CALID           =  &B.CAL_ID
   Let $ORIGCALRUNID    =  &B.ORIG_CAL_RUN_ID
   Let #RSLTSEGNUM      =  &C.RSLT_SEG_NUM
   Let #EMPLRCDACUM     =  &C.EMPL_RCD_ACUM
   Let $SLICEBGNDT      =  &C.SLICE_BGN_DT
   Let $SLICEENDDT      =  &C.SLICE_END_DT
   Let $USERKEY1        =  &C.USER_KEY1
   Let #anio            =  to_number($USERKEY1)
   Let $SERVICEDT       =  &D.SERVICE_DT
   Let $DEPTID          =  &J.DEPTID
   Let $SETID           =  &J.SETID_DEPT
   
   do Get-Name
   do Get-Entitlement
   do Get-Taken
   do Get-Adjustment
   do Get-Balance   
   
   Let $FROM            = dateadd($SERVICEDT, 'year', #anio)
   Let $TO              = dateadd($SERVICEDT, 'year', #anio + 1)
   Let $TO              = dateadd($TO, 'day', -1)
    
   Do Print-Data
   
   Let #TOTENTITLE = #TOTENTITLE + #ENTITLE
   Let #TOTTAKEN   = #TOTTAKEN + #TAKEN
   Let #TOTADJUST  = #TOTADJUST + #ADJUST
   Let #TOTBALANCE = #TOTBALANCE + #BALANCE

   
FROM PS_GP_PYE_PRC_STAT A,
PS_GP_PYE_SEG_STAT B,
PS_GP_RSLT_ACUM C,
PS_GP_PIN E,
PS_EMPLOYMENT D,
PS_JOB J
WHERE A.PRC_ORD_TS    = (SELECT MAX(F.PRC_ORD_TS) FROM PS_GP_PYE_PRC_STAT F, PS_GP_CAL_RUN G 
                         WHERE F.CALC_TYPE='P' 
                         AND F.EMPLID=A.EMPLID
                         AND F.EMPL_RCD=A.EMPL_RCD 
                         AND G.CAL_RUN_ID=F.CAL_RUN_ID) 
AND A.CALC_TYPE       = 'P' 
AND B.RSLT_SEG_NUM    = (SELECT MAX(H.RSLT_SEG_NUM) FROM PS_GP_PYE_SEG_STAT H 
                         WHERE H.EMPLID=B.EMPLID
                         AND H.CAL_RUN_ID=B.CAL_RUN_ID 
                         AND H.EMPL_RCD=B.EMPL_RCD
                         AND H.GP_PAYGROUP=B.GP_PAYGROUP
                         AND H.CAL_ID=B.CAL_ID
                         AND H.ORIG_CAL_RUN_ID=B.ORIG_CAL_RUN_ID) 
AND A.EMPLID          = B.EMPLID 
AND A.EMPLID          = D.EMPLID 
AND A.EMPL_RCD        = D.EMPL_RCD 
AND A.CAL_RUN_ID      = B.CAL_RUN_ID 
AND A.EMPL_RCD        = B.EMPL_RCD 
AND A.GP_PAYGROUP     = B.GP_PAYGROUP 
AND A.CAL_ID          = B.CAL_ID 
AND A.ORIG_CAL_RUN_ID = B.ORIG_CAL_RUN_ID 
AND B.EMPLID          = C.EMPLID 
AND B.CAL_RUN_ID      = C.CAL_RUN_ID 
AND B.EMPL_RCD        = C.EMPL_RCD 
AND B.GP_PAYGROUP     = C.GP_PAYGROUP 
AND B.CAL_ID          = C.CAL_ID 
AND B.ORIG_CAL_RUN_ID = C.ORIG_CAL_RUN_ID 
AND B.RSLT_SEG_NUM    = C.RSLT_SEG_NUM 
AND E.PIN_NUM         = C.PIN_NUM 
AND J.EMPLID          = A.EMPLID 
AND J.EMPL_RCD        = A.EMPL_RCD 
AND C.CALC_RSLT_VAL   > 0 
AND E.PIN_NUM         IN (#WPINNUM, #XPINNUM, #YPINNUM, #ZPINNUM) 
AND J.EFFDT           = (SELECT MAX(ZZ.EFFDT) FROM PS_JOB ZZ 
                         WHERE ZZ.EMPLID = J.EMPLID
                         AND ZZ.EMPL_RCD = J.EMPL_RCD
                         AND ZZ.EFFDT <= $AsOfToday) 
AND J.EFFSEQ          = (SELECT MAX(EFFSEQ) FROM PS_JOB S 
                         WHERE S.EMPLID = J.EMPLID 
                         AND S.EMPL_RCD = J.EMPL_RCD 
                         AND S.COMPANY = J.COMPANY 
                         AND S.EFFDT = J.EFFDT)
AND (C.EMPL_RCD = C.EMPL_RCD_ACUM OR C.ACM_TYPE = 'N') 
[$WhereCompany]
[$WhereDeptID]
[$whereClause]
GROUP BY A.EMPLID, B.CAL_RUN_ID, A.EMPL_RCD, C.GP_PAYGROUP, B.CAL_ID, B.ORIG_CAL_RUN_ID
, C.RSLT_SEG_NUM, C.EMPL_RCD_ACUM, C.ACM_FROM_DT, C.ACM_THRU_DT, C.SLICE_BGN_DT
, C.SLICE_END_DT, C.USER_KEY1, D.SERVICE_DT, J.SETID_DEPT, J.DEPTID
ORDER BY A.EMPLID, A.EMPL_RCD
END-SELECT

show '' $WhereCompany
show '' $WhereDeptID

End-procedure Get-Data


!***********************************************************************
begin-procedure Print-Data
!***********************************************************************
Do Format-DateTime($FROM,$FROMP,{DEFDMY}, '','')
Do Format-DateTime($TO,$TOP,{DEFDMY}, '','')
Do Format-DateTime($SERVICEDT,$SRVDT,{DEFDMY}, '','')
Let $EmpRcd = Edit(#EMPLRCD, '999')
PRINT $EMPLID            (+1,{c1})    
PRINT $EmpRcd            (,{c2a})     
PRINT $NAME              (,{c3},40)
PRINT $SRVDT             (,{c4})
PRINT #anio              (,{c5a})     edit b999
PRINT $FROMP             (,{c6})
PRINT $TOP               (,{c7})
PRINT #ENTITLE           (,{c8a})     edit 999
PRINT #TAKEN             (,{c9a})     edit 999
PRINT #ADJUST            (,{c10a})    edit 999
PRINT #BALANCE           (,{c11a})    edit 999
end-procedure Print-Data

!***********************************************************************
begin-procedure PrintEmpl-Tot
!***********************************************************************
PRINT 'T O T A L E S:'  (+1,{c6})    bold
PRINT '-'               (,{c8},10)   fill
PRINT '-'               (,{c9},11)   fill
PRINT '-'               (,{c10},9)   fill
PRINT '-'               (,{c11},5)   fill
PRINT #TOTENTITLE       (+1,{c8a})   edit 999 bold
PRINT #TOTTAKEN         (,{c9a})     edit 999 bold
PRINT #TOTADJUST        (,{c10a})    edit 999 bold
PRINT #TOTBALANCE       (,{c11a})    edit 999 bold
Let #TOTENTITLE = 0
Let #TOTTAKEN   = 0
Let #TOTADJUST  = 0
Let #TOTBALANCE = 0
end-procedure PrintEmpl-Tot

!***********************************************************************
#Include 'reset.sqc'    !Reset printer procedure
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'datetime.sqc' !Routines for date and time formatting
#Include 'number.sqc'   !Routines to format numbers
#Include 'stdapi.sqc'   !Update Process API
#Include 'datemath.sqc' !Routines for date math
#include 'getcodta.sqc' !Get-Company-data
#include 'gpmxpinm.sqc' !Get pin number from PS_GPMX_ELEM_MAP_D

