!***********************************************************************
!  Appendix 8B: Gains on Exercise of Stock Option Report               *
!               Generate IRAS Appendix 8B Interface file               *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  25339323                                            !
!***********************************************************************
! Modification History                                                 *
! Dated      Author  Changes                                           *
!12/01/2007  Deepak Change in the format of Appendix 8B 1538443000     *
!15/01/2007  Shilpa Modified the SQR so that the sections which are    *
!                   not applicable appear in the flat file with zero   *
!                   values.
!17/7/2007  Shilpa 1674199000 SQR modified so that the report prints   *
!                              employer name of 70 characters long     *
!06/03/2008 1742054000        The sqr has been modified such that the  *
!                             Employer name is printed in IR8A flat    *
!                             file                                     *
!***********************************************************************
!
#Include 'setenv.sqc'  !Set environment

begin-setup
#include 'setupdb.sqc'
end-setup

begin-report

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  Let $ReportID    = 'Report Name : GPSGIR09'
  Let $ReportTitle = 'Appendix 8B Electronic File'
  show $ReportID
  show $ReportTitle

  do Select-Parameters
  Let $WrkTaxYear    = edit(#Tax_Year,'9999')
  Let $GPSG_TAX_YEAR     =  $WrkTaxYear

  Let $YrEndSrch_Dt = '31/' || '12/' || $WrkTaxYear

  do Format-DateTime ($YrEndSrch_Dt, $YrEndSrch_Dt, {DEFDMY}, '', 'native')

  Let $InDate1 = $WrkTaxyear || '0101'
  Let $InDate2 = $WrkTaxyear || '1231'
  Do Count-LeapDays ($indate1,$indate2,#Leapdays)

  if #Leapdays = 0
     Let #DivYear = 365
  else
     Let #DivYear = 366
  end-if

  do Build-Process
  do reset
  do Stdapi-Term
end-report
!
!***********************************************************************
!  Procedure: Build-Process                                            *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Build-Process

    do Get-Company-Details

    let $NewFile     = 'Y'
    let $FirstTime   = 'Y'
    let $PrevEmpl    = '  '
    let $PrevOpt     = '1'
    let  #ESOP_Cnt   = 1
    let  #EESOP_Cnt  = 1
    let  #CSOP_Cnt   = 1
    let  #NSOP_Cnt   = 1
    let  #Rec_Cnt    = 0

!Process ESOP
  do Process-Employees

end-procedure
!

!***********************************************************************
! Procedure: Get-Company-Details                                       *
!            Gets the Company Details that are printed on the form.    *
!***********************************************************************
begin-procedure Get-Company-Details
Show $AsofToday
begin-SELECT
CO.GPSG_REGISTERED_NM
CO.GPSG_CPY_DESCR
CO.GPSG_ADDRESS1
CO.GPSG_ADDRESS2
CO.GPSG_ADDRESS3
CO.POSTAL
CO.GPSG_TAX_CONT_ID
CO.PHONE
CO.GPSG_CPY_TYPE
CO.GPSG_ROB_ROC_NO
CO.GPSG_ROB_ROC_TYPE
CO.GPSG_OHQ_STATUS
CO.GPSG_8B_INCORP_DT
CO.EMAIL_ADDR

 FROM PS_GPSG_IRAS_CPY CO
WHERE CO.GPSG_CPY_TAX_REF = $Company_Tax_Ref
  AND CO.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_GPSG_IRAS_CPY
                   WHERE GPSG_CPY_TAX_REF = CO.GPSG_CPY_TAX_REF
                     AND EFFDT <= $AsofToday)
end-SELECT


  let $Co_Tax_Contact_Id = rtrim(&CO.GPSG_TAX_CONT_ID, ' ')
  let $Co_Name = rtrim(&CO.GPSG_REGISTERED_NM, ' ')
  Let $Email_Company = rtrim(&CO.EMAIL_ADDR, ' ')
  if $Co_Name = ''
     let $Co_Name = rtrim(&CO.GPSG_CPY_DESCR, ' ')
  end-if

  let $Co_Type  =  &CO.GPSG_CPY_TYPE

  if &CO.GPSG_ROB_ROC_TYPE = 'R'
     let $CO_Payer_ID_Type = '7'
  else
     if &CO.GPSG_ROB_ROC_TYPE = 'C'
        let $CO_Payer_ID_Type = '8'
     else
        let $CO_Payer_ID_Type = '0'
     end-if
  end-if

   Let $Adr1 = &CO.GPSG_ADDRESS1
   Let $Adr2 = &CO.GPSG_ADDRESS2

!get Name of Tax Contact

begin-SELECT
A.NAME
FROM PS_PERSON_NAME A
WHERE A.EMPLID = $Co_Tax_Contact_Id
end-SELECT

 let $Co_Tax_Contact_Name = rtrim(&A.NAME, ' ')

Begin-SELECT
RC.GPSG_CREATE_DATE

      Move &RC.GPSG_CREATE_DATE to $Date_Created

FROM PS_GPSG_RC_IRAS RC
WHERE RC.GPSG_CPY_TAX_REF = $Company_Tax_Ref
AND RC.GPSG_CREATE_DATE = (SELECT MAX(RC1.GPSG_CREATE_DATE)
                                FROM PS_GPSG_RC_IRAS RC1
                                WHERE RC1.GPSG_CPY_TAX_REF = RC.GPSG_CPY_TAX_REF)
AND RC.GPSG_CREATE_DATE <= $AsofToday

end-SELECT

!get Designation of Authorised Person


Begin-SELECT
JC.DESCR

        !let $AuthPersDesig  = rtrim(&JC.DESCR,' ')

FROM PS_JOBCODE_TBL JC, PS_JOB J
WHERE JC.JOBCODE = J.JOBCODE
AND JC.SETID   = J.SETID_JOBCODE
AND J.EMPLID   = $Co_Tax_Contact_Id
AND J.EMPL_RCD = 0
AND J.EFFDT    = (SELECT MAX(EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.EMPLID = $Co_Tax_Contact_Id
                    AND J1.EMPL_RCD = 0
                    AND J1.EFFDT <= $AsofToday )
AND J.EFFSEQ   = (SELECT MAX(EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = $Co_Tax_Contact_Id
                    AND J2.EMPL_RCD = 0
                    AND J2.EFFDT = J.EFFDT )
AND JC.EFFDT   = (SELECT MAX(EFFDT)
                    FROM PS_JOBCODE_TBL JC1
                    WHERE JC1.SETID = JC.SETID
                    AND JC1.JOBCODE = JC.JOBCODE
                    AND JC1.EFFDT <= $AsofToday)
end-SELECT

 let $AuthPersDesig  = rtrim(&JC.DESCR, ' ')

end-procedure


!***********************************************************************
! Procedure: Process-Employees                                             *
!                                                                      *
!***********************************************************************
begin-Procedure Process-Employees
   Let $COUNTRY_NM_FORMAT = ''

begin-SELECT
A8B.EMPLID
A8B.BALANCE_GRP_NUM
A8B.GPSG_CPY_TAX_REF
A8B.GPSG_TAX_YEAR
A8B.SEQNUM
A8B.GPSG_8B_GRANT_DT
A8B.GPSG_8B_MKT_VAL
A8B.GPSG_8B_EXER_DT
A8B.GPSG_8B_EXER_VAL
A8B.GPSG_8B_EXER_PRICE
A8B.GPSG_8B_SHARES_ACQ
A8B.GPSG_8B_GROSS_GAIN
A8B.GPSG_8B_EXEMPT_GN
A8B.GPSG_8B_NONEXEMPT
A8B.GPSG_8B_RCB_NUM
A8B.GPSG_8B_STOCK_CPY
A8B.GPSG_8B_STOCK_IND
A8B.GPSG_8B_PLAN_IND
I.GPSG_8A_STATUS
I.GPSG_8B_REMARKS
NM.EMPLID
NM.LAST_NAME
NM.MIDDLE_NAME
NM.FIRST_NAME
K.NATIONAL_ID_TYPE
K.NATIONAL_ID
PE.SEX
PD.BIRTHDATE
NP.COUNTRY_NM_FORMAT
NP.NAME


   let  $Emplid             =  &A8B.EMPLID
   let  $Bal_Grp_Num        =  &A8B.BALANCE_GRP_NUM

   let  $CompanyN1          =  substr(&A8B.GPSG_8B_STOCK_CPY,1,20)
   let  $CompanyN2          =  substr(&A8B.GPSG_8B_STOCK_CPY,21,20)
   Let $COUNTRY_NM_FORMAT  =  &NP.COUNTRY_NM_FORMAT
   Let $PayeeFName = &NM.FIRST_NAME
   Let $PayeeLName = &NM.LAST_NAME
   Let $PayeeMName = &NM.MIDDLE_NAME
   Let $PayeeName  = rtrim($PayeeFName, ' ') || ' ' ||rtrim($PayeeLName, ' ') || ' ' ||rtrim($PayeeMName, ' ')

    If $COUNTRY_NM_FORMAT = 'CHN'
     Let $PayeeName  = rtrim($PayeeLName, ' ') || ' ' ||rtrim($PayeeFName, ' ') || ' ' ||rtrim($PayeeMName, ' ')
    End-if

   let  #GPSG_8B_SHARES_ACQ    =  &A8B.GPSG_8B_SHARES_ACQ

   let  $Emp_Name           =  &NP.NAME
   let  $TaxRefType         =  RTrim(&K.NATIONAL_ID_TYPE, ' ')
   let  $TaxRefNo           =  &K.NATIONAL_ID
   let  $Sex                =  &PE.SEX

   let  $ThisEmplid         =  $Emplid || $BALANCE_GRP_NUM
   let  $ThisOpt            =  &A8B.GPSG_8B_STOCK_IND
   let  $GPSG_8B_STOCK_IND        =  &A8B.GPSG_8B_STOCK_IND

   let  $FieldName          = 'NATIONAL_ID_TYPE'
   let  $FieldValue         = rtrim(&K.NATIONAL_ID_TYPE, ' ')
   let  $UIN_Value          = $FieldValue

   do Read-Translate-Table

   let $UIN_Type            = $XlatShortName
   let $UIN                 = rtrim(&K.NATIONAL_ID, ' ')

   let $Sex = &PE.SEX

   let $BirthDate           = rtrim(&PD.BIRTHDATE, ' ')
   do format-Datetime($BirthDate,$BirthDate_Out,{DEFCMP},'','')

   let #GPSG_8B_EXER_VAL    =   &A8B.GPSG_8B_EXER_VAL
   let #GPSG_8B_EXER_PRICE  =   &A8B.GPSG_8B_EXER_PRICE
   let #GPSG_8B_MKT_VAL     =   &A8B.GPSG_8B_MKT_VAL
   let #GPSG_8B_SHARES_ACQ  =   &A8B.GPSG_8B_SHARES_ACQ
   let #GPSG_8B_GROSS_GAIN  =   &A8B.GPSG_8B_GROSS_GAIN
   let #GPSG_8B_EXEMPT_GN   =   &A8B.GPSG_8B_EXEMPT_GN
   let #GPSG_8B_NONEXEMPT   =   &A8B.GPSG_8B_NONEXEMPT

   let $GPSG_8B_EXER_DT     =   &A8B.GPSG_8B_EXER_DT
   let $GPSG_8B_GRANT_DT_1    =  rtrim(&A8B.GPSG_8B_GRANT_DT,' ')
   let $GPSG_8B_RCB_NUM     =   &A8B.GPSG_8B_RCB_NUM

   Let #Sum_Of_Values = 0
   Add #GPSG_8B_EXER_VAL   to #Sum_Of_Values
   Add #GPSG_8B_EXER_PRICE to #Sum_Of_Values
   Add #GPSG_8B_MKT_VAL    to #Sum_Of_Values
   Add #GPSG_8B_GROSS_GAIN to #Sum_Of_Values
   Add #GPSG_8B_EXEMPT_GN  to #Sum_Of_Values
   Add #GPSG_8B_NONEXEMPT  to #Sum_Of_Values

   If #Sum_Of_Values = 0
    Let #TempVar1 = 0
   Else
    Let #TempVar1 = 1
   End-If

   If #GPSG_8B_GROSS_GAIN < 0
        Let #TempVar2 = 0
   Else
        Let #TempVar2 = 1
   End-If

   do format-Datetime($GPSG_8B_GRANT_DT_1,$GPSG_8B_GRANT_DT,{DEFCMP},'','')
   Let $Dt = '20030101'
   !do format-Datetime($Dt,$Dt_1,{DEFCMP},'','')


!Payee's ID Type

  evaluate $TaxRefType

    when = 'IC'   ! Nat. Registration ID Card

      let $PayeeIdType     = '1'  ! NRIC
      let $NationalityCode = '301'! Singapore Citizen
      let $Nationality     = 'Singapore Citizen'

    when = 'PR'   ! Permanent Residency Number
      let $PayeeIdType     = '1'  ! NRIC
      do get-citizenship-country

    when = 'MI1'   ! Malaysian NRIC
    When = 'MI2'
    When = 'MI3'
      let $PayeeIdType     = '5'  ! NRIC
      do get-citizenship-country


    when = 'EP'   ! Employment Pass
    when = 'FI'   ! Foreign ID

      let $PayeeIdType     = '2'  ! FIN
      do get-citizenship-country

    When = 'IF'
      let $PayeeIdType = '3'
      do get-citizenship-country

    when-other

      let $PayeeIdType = '0'  ! Others
      do get-citizenship-country

  end-evaluate

  let $plan =  &A8B.GPSG_8B_PLAN_IND
     if $plan = '1'
        let $PlanType = 'ESOP'
     else
          let $PlanType = 'ESOW'
     end-if

  do Get-Employee-Designation

!**********************************
!    Create the Interface File    *
!**********************************

   Do Create-File

  FROM PS_GPSG_APP_8B I,
       PS_GPSG_APP_8B_DTL A8B,
       PS_PERSON PD,
       PS_PERS_NID K,
       PS_PERS_DATA_EFFDT PE,
       PS_PERSON_NAME NP,
       PS_NAMES_VW NM

 WHERE A8B.GPSG_CPY_TAX_REF = $Company_Tax_Ref
    AND I.GPSG_TAX_YEAR = $GPSG_TAX_YEAR
    AND A8B.GPSG_TAX_YEAR = I.GPSG_TAX_YEAR
    AND A8B.EMPLID = I.EMPLID
    AND A8B.BALANCE_GRP_NUM = I.BALANCE_GRP_NUM
    AND A8B.GPSG_CPY_TAX_REF = I.GPSG_CPY_TAX_REF
    AND I.GPSG_8A_STATUS = 'Y'
    AND PD.EMPLID = A8B.EMPLID
    AND K.EMPLID = A8B.EMPLID
    AND K.TAX_REF_ID_SGP = 'Y'
    AND PE.EMPLID = A8B.EMPLID
    AND NP.EMPLID = A8B.EMPLID
    AND NM.EMPLID = I.EMPLID
    AND NM.NAME_TYPE = 'PRI'
    AND PE.EFFDT = (SELECT MAX(PE1.EFFDT)
                      FROM PS_PERS_DATA_EFFDT PE1
                     WHERE PE1.EMPLID = PE.EMPLID
                       AND PE1.EFFDT <= $YrEndSrch_Dt)

ORDER BY
A8B.EMPLID, A8B.BALANCE_GRP_NUM, A8B.GPSG_TAX_YEAR,
A8B.GPSG_8B_STOCK_IND, A8B.GPSG_8B_GRANT_DT, A8B.SEQNUM

end-SELECT

   If #rec_Cnt > 0 and
      (#Esop_Cnt > 0
         or #EESOP_Cnt > 0
            or #CSOP_Cnt > 0
               or #NSOP_Cnt > 0)

      do Control-Break-Option
      do Control-Break-Empl
      do Print-Trailer

  else
      show ' *** No Records Processed *** '
  end-if

  if $FileOpen ='Y'
     do Close-File
  end-if

end-procedure



!**************************************************************************
! Procedure: Create-File                                                  *
!                                                                         *
!**************************************************************************
begin-procedure Create-File

  if $NewFile = 'Y'
    do Start-New-File
    move 'N' to $NewFile
    let #EmplOcc = 0
  end-if
  If #TempVar1 = 1 and #TempVar2 = 1
    do Process-Employee
  End-If

End-Procedure


!**************************************************************************
! Procedure: Start-New-File                                               *
!            Initialises variables and writes header information for a new*
!            file.                                                        *
!**************************************************************************
begin-procedure Start-New-File

  do Open-File

!Message Title
  do Write-Entry-Detail(1,'','','','','','','','','','','')            !Segment 1 - UNB

!Message Header
  do Write-Entry-Detail(2,'','','','','','','','','','','')            !Segment 2 - UNH

!Beginning of Message
  do Write-Entry-Detail(3,'','','','','','','','','','','')            !Segment 3 - BGM


!Header Information - Indicators  (Three Occurences)
  do Write-Entry-Detail(4,'AWH','0','','','','','','','','','')        !Segment 4/1 - RFF


  let $Source = &CO.GPSG_CPY_TYPE
  If $Source = '6'
        Let $Source = '6'
  Else
        Let $Source = '9'
  End-If
!Company Type
  do Write-Entry-Detail(4,'AWI',$Source,'','','','','','','','','')    !Segment 4/2 - RFF

!Type of Payment
  do Write-Entry-Detail(4,'AWJ','13','','','','','','','','','')       !Segment 4/3 - RFF

  evaluate &CO.GPSG_ROB_ROC_TYPE
    when = '7' !UEN - Business(ROB)
      let $PayerIdType = '7'
    when = '8' !UEN - Local Company(ROC)
      let $PayerIdType = '8'
    When = 'U' !UEN - Others
      Let $PayerIdType = 'U'
    !when = 'X'
    !  let $PayerIdType = 'C'
    when = 'A'
      let $PayerIdType = 'A'
    when = 'I'
      let $PayerIdType = 'I'
    !when = 'M'
    !  let $PayerIdType = 'M'
    !when = 'G'
    !  let $PayerIdType = 'G'
    when-other
      let $PayerIdType = '0'
  end-evaluate

!Payer's ID Type
  do Write-Entry-Detail(4,'AWK',$PayerIdType,'','','','','','','','','')
                                                           !Segment 4 - RFF
!Record Indicator
  do Write-Entry-Detail(4,'AWL','O','','','','','','','','','')        !Segment 4 - RFF

!Header Information - Dates (Two Occurences)
  move &A8B.GPSG_TAX_YEAR  to #TaxYear
  do Format-Number(#TaxYear, $TaxYear, '0009')

!Basis Year
  do Write-Entry-Detail(5,'441',$TaxYear,'602','','','','','','','','')!Segment 5 - DTM

! convert native date to dtu without delimiters eg. 19990101
  do format-Datetime($Date_Created,$Date_Created_Out,{DEFCMP},'','')

!Date of Creation
  do Write-Entry-Detail(5,'416',$Date_Created_Out,'102','','','','','','','','') !Segment 5 - DTM

!Date of Incorporation
  Let $Date_Incorporation = &CO.GPSG_8B_INCORP_DT
  do format-Datetime($Date_Incorporation,$Date_Incorporation_Out,{DEFCMP},'','')
  do Write-Entry-Detail(5,'417',$Date_Incorporation_Out,'102','','','','','','','','') !Segment 5 - DTM

!Employer's Information                                    !Segment 5 - DTM

  if $PayerIdType = '7' or $PayerIdType = '8' or $PayerIdType = 'U' or $PayerIdType = 'A' or $PayerIdType = 'I' or $PayerIdType = 'C' or $PayerIdType = 'M' or $PayerIdType = 'G'
     let $PayerIdNo     = &CO.GPSG_ROB_ROC_NO
  else
     let $PayerIdNo     = $Company_Tax_Ref
  end-if

begin-SELECT
E.EMAIL_ADDR
FROM PS_EMAIL_ADDRESSES E
WHERE E.EMPLID = $Co_Tax_Contact_Id
AND E.PREF_EMAIL_FLAG = 'Y'
end-SELECT

  let $email_add = &E.EMAIL_ADDR
     If $Email_Company = ''
    Let $email_add_file = $email_add
  else
    Let $email_add_file = $Email_Company
  End-if


begin-SELECT
I8A.GPSG_DIVISION
FROM PS_GPSG_IR8A_FORM I8A
WHERE I8A.EMPLID = $Co_Tax_Contact_Id
end-SELECT
  MOVE &I8A.GPSG_DIVISION to $Division


  do Write-Entry-Detail(6,$PayerIdNo,'',
                          $Co_Name,'',
 !                         $email_add,
                          $email_add_file,
                          $Division,'','','','','')                           !Segment 6 - NAD
!Employer's Contact No
  let $TelNum = rtrim(&CO.PHONE, ' ')
  do Write-Entry-Detail(7,$TelNum,'','','','','','','','','','')       !Segment 7 - COM

end-procedure


!
!************************************************************
! Procedure: Process-Employee                               *
!************************************************************
!
begin-procedure Process-Employee

   If $ThisEmplid <> $PrevEmplid

      if $FirstTime = 'Y'

         let $PrevEmplid    = $ThisEmplid
         let $PrevOpt       = $ThisOpt
         let $This_Remarks  = &I.GPSG_8B_REMARKS
         let $Prev_Remarks  = $This_Remarks
         let $ESOP_Done     = 'N'
         let $EESOP_Done    = 'N'
         let $CSOP_Done     = 'N'
         let $NSOP_Done     = 'N'
         do Control-Break-Empl
         do Write-Employee-Details

         do Write-Gis-Rec
         let $FirstTime     = 'N'

      else

         do Control-Break-Option
         do Control-Break-Empl

         do Write-Employee-Details

         let $This_Remarks = &I.GPSG_8B_REMARKS
         let $Prev_Remarks  = $This_Remarks

         do Write-Gis-Rec

      end-if

    end-if


    If $ThisOpt  <> $PrevOpt

        if $FirstTime = 'Y'
           let $PrevOpt      = $ThisOpt
        else
           do Control-Break-Option
           do Write-Gis-Rec
        end-if
     end-if

!**************************************
!Process Each Stock Option separately *
!**************************************

Evaluate $ThisOpt
 When  = '1'
   do  Process_Emp_ESOP
 Break
 When = '2'
    do Process_Emp_EESOP
 break
 When = '3'
    do Process_Emp_CSOP
 break
 When = '4'
    do Process_Emp_Nsop
 break
End-Evaluate


end-procedure



!***********************************************************************
! Procedure: Open-File                                                 *
!            This procedure opens the Appendix 8B file.                *
!***********************************************************************
begin-procedure Open-File

  let #filenum = #filenum + 1
  do Format-Number(#filenum, $filenum, '009')
  let $File1 = 'A8B' || $Company_Tax_Ref || $FileNum ||'.txt'
  let $File1 = '{FILEPREFIX}' || $File1 || '{FILESUFFIX}'
  show 'Appendix 8B FileName = ' $File1
  open $File1 as 1 for-writing record=425:fixed  ! Appendix 8B File

  let $FileOpen = 'Y'
end-procedure



!***********************************************************************
! Procedure: Write-Employee-Details                                    *
!            This procedure writes employee details.                   *
!***********************************************************************
begin-procedure Write-Employee-Details


! 8.LIN
!Line No denoting the occurence of employee

  let #EmplOcc = #EmplOcc + 1
  let $EmplOcc = ltrim(edit(to_char(#EmplOcc),'9999'),' ')

  do Write-Entry-Detail(8,$EmplOcc,'LN1','','','','','','','','','')   !Segment 8 - LIN

! 9.RFF
!Details Information - Indicators (Four Occurences)

!Rec Type
  do Write-Entry-Detail(9,'AWM','1','','','','','','','','','')        !Segment 9 - RFF

!Payee's ID Type
  do Write-Entry-Detail(9,'AWN',$PayeeIdType,'','','','','','','','','')
                                                           !Segment 9 - RFF
!Nationality Code
  do Write-Entry-Detail(9,'AWO',$NationalityCode,'','','','','','','','','')
                                                           !Segment 9 - RFF
!Sex
  do Write-Entry-Detail(9,'AWP',$Sex,'','','','','','','','','')       !Segment 9 - RFF


!10.NAD                                                    !Segment 10 - NAD
!Employee's Information

  let $PayeeIdNo        = rtrim($TaxRefNo,' ')

  do Write-Entry-Detail(10,$PayeeIdNo,'',
                           $PayeeName,
                           '','','','','','', '', '')
!11.DTM                                                   !Segment 11 - DTM

!Date of Birth

  do Write-Entry-Detail(11,'329',$Birthdate_Out,'102','','','','','','','','')
                                                          !Segment 11 - DTM
end-procedure


!***********************************************************************
! Procedure: Process_Emp_Esop                                          *
!            This procedure processes all ESOP entries.                *
!***********************************************************************
begin-procedure Process_Emp_Esop

If #ESOP_Cnt  <=  15

!13 Line Number ESOP Occurrence

  let $Esop_Cnt = edit(#Esop_Cnt, '88')
  let $Esop_Cnt = translate($Esop_Cnt,'.','')
  let $Esop_Cnt = ltrim($Esop_Cnt,' ')
  let $Esop_Cnt = lpad($Esop_Cnt,1,'0')

  do Write-Entry-Detail(13,$Esop_Cnt,'LN2','','','','','','','','','')


!14 Details Information Indicators

  do Write-Entry-Detail(14,'AWQ','ESOP','','','','','','','','','')
  do Write-Entry-Detail(14,'AWR',$PayerIdType,'','','','','','','','','')        ! 8 = ROC
  do Write-Entry-Detail(14,'AWA',$PlanType,'','','','','','','','','')  !Segment 14 -RFF

!15 Employee's Information

  do Write-Entry-Detail(15,'R1',$GPSG_8B_RCB_NUM,$CompanyN1,$CompanyN2,'','','','','','','')
                                                               !ROC Number
                                                               !Company Name 1 giving stock 20bytes

!16 Monetary Amounts

  let $GPSG_8B_EXER_PRICE = edit(#GPSG_8B_EXER_PRICE, '8888888.88888')
  let $GPSG_8B_EXER_PRICE = ltrim($GPSG_8B_EXER_PRICE,' ')

  let $GPSG_8B_MKT_VAL = edit(#GPSG_8B_MKT_VAL, '8888888.88888')
  let $GPSG_8B_MKT_VAL = ltrim($GPSG_8B_MKT_VAL,' ')

  let $GPSG_8B_EXER_VAL = edit(#GPSG_8B_EXER_VAL, '8888888.88888')
  let $GPSG_8B_EXER_VAL = ltrim($GPSG_8B_EXER_VAL,' ')

  let $GPSG_8B_NONEXEMPT = edit(#GPSG_8B_NONEXEMPT, '8888888.88')
  let $GPSG_8B_NONEXEMPT = ltrim($GPSG_8B_NONEXEMPT,' ')

  let $GPSG_8B_GROSS_GAIN = edit(#GPSG_8B_GROSS_GAIN, '8888888.88')
  let $GPSG_8B_GROSS_GAIN = ltrim($GPSG_8B_GROSS_GAIN,' ')

  do Write-Entry-Detail(16,'300',$GPSG_8B_EXER_PRICE,'','','','','','','','','')
  do Write-Entry-Detail(16,'301',$GPSG_8B_EXER_VAL,'','','','','','','','','')
  do Write-Entry-Detail(16,'302',$GPSG_8B_NONEXEMPT,'','','','','','','','','')
  do Write-Entry-Detail(16,'303',$GPSG_8B_GROSS_GAIN,'','','','','','','','','')
  do Write-Entry-Detail(16,'350',$GPSG_8B_MKT_VAL,'','','','','','','','','')



!17 Details Information - Dates
! convert native date to dtu without delimiters eg. 19990101

  do format-Datetime($GPSG_8B_EXER_DT,$GPSG_8B_EXER_DT_Out,{DEFCMP},'','')
  do Write-Entry-Detail(17,'400',$GPSG_8B_EXER_DT_Out,'102','','','','','','','','')


  do Write-Entry-Detail(17,'401',$GPSG_8B_GRANT_DT,'102','','','','','','','','')


!18 Details Information - Quantity ( Shares Acquired )

  let $GPSG_8B_SHARES_ACQ = edit(#GPSG_8B_SHARES_ACQ, '8888888.88888')
  let $GPSG_8B_SHARES_ACQ = ltrim($GPSG_8B_SHARES_ACQ,' ')

  do Write-Entry-Detail(18,'500',$GPSG_8B_SHARES_ACQ,'','','','','','','','','')

!Accumulate Totals here for ESOP.

  If($GPSG_8B_GRANT_DT < $Dt And $Plan = '1')
    let #Tot_Gross_Gain_Before =  #Tot_Gross_Gain_Before + #GPSG_8B_GROSS_GAIN
    let #Tot_Gross_GNex_Before =  #Tot_Gross_GNex_Before + #GPSG_8B_NONEXEMPT
  Else
   let #Tot_Gross_Gain_After =  #Tot_Gross_Gain_After + #GPSG_8B_GROSS_GAIN
   let #Tot_Gross_GNex_After =  #Tot_Gross_GNex_After + #GPSG_8B_NONEXEMPT
  End-if

   let #ESOP_Cnt     =  #ESOP_Cnt + 1
  let $ESOP_Done    =  'Y'
end-if

end-procedure


!***********************************************************************
! Procedure: Process_Emp_Eesop                                          *
!            This procedure processes all EESOP entries.                *
!***********************************************************************
begin-procedure Process_Emp_Eesop

If #EESOP_Cnt  <=  15

!21 Line Number EESOP Occurrence

  let $Eesop_Cnt = edit(#Eesop_Cnt, '99')
  let $Eesop_Cnt = translate($Eesop_Cnt,'.','')
  let $Eesop_Cnt = ltrim($Eesop_Cnt,' ')

  do Write-Entry-Detail(21,$Eesop_Cnt,'LN3','','','','','','','','','')

!22 Details Information Indicators

  do Write-Entry-Detail(22,'AWS','EESOP','','','','','','','','','')
  do Write-Entry-Detail(22,'AWT',$PayerIdType,'','','','','','','','','')        ! 8 = ROC
  do Write-Entry-Detail(22,'AWF',$PlanType,'','','','','','','','','')        ! 8 = ROC

!23 Employee's Information

  do Write-Entry-Detail(23,'R2',$GPSG_8B_RCB_NUM,$CompanyN1,$CompanyN2,'','','','','','','')
                                                               !ROC Number
                                                               !Company Name 1 giving stock 40bytes

!24 Monetary Amounts


  let $GPSG_8B_EXER_PRICE = edit(#GPSG_8B_EXER_PRICE, '8888888.88888')
  let $GPSG_8B_EXER_PRICE = ltrim($GPSG_8B_EXER_PRICE,' ')

  let $GPSG_8B_MKT_VAL = edit(#GPSG_8B_MKT_VAL, '8888888.88888')
  let $GPSG_8B_MKT_VAL = ltrim($GPSG_8B_MKT_VAL,' ')

  let $GPSG_8B_EXER_VAL = edit(#GPSG_8B_EXER_VAL, '8888888.88888')
  let $GPSG_8B_EXER_VAL = ltrim($GPSG_8B_EXER_VAL,' ')

  let $GPSG_8B_EXEMPT_GN = edit(#GPSG_8B_EXEMPT_GN, '88888888.88')
  let $GPSG_8B_EXEMPT_GN = ltrim($GPSG_8B_EXEMPT_GN,' ')

  let $GPSG_8B_NONEXEMPT = edit(#GPSG_8B_NONEXEMPT, '88888888.88')
  let $GPSG_8B_NONEXEMPT = ltrim($GPSG_8B_NONEXEMPT,' ')

  let $GPSG_8B_GROSS_GAIN = edit(#GPSG_8B_GROSS_GAIN, '8888888.88')
  let $GPSG_8B_GROSS_GAIN = ltrim($GPSG_8B_GROSS_GAIN,' ')

  do Write-Entry-Detail(24,'311',$GPSG_8B_EXER_PRICE,'','','','','','','','','')
  do Write-Entry-Detail(24,'312',$GPSG_8B_MKT_VAL,'','','','','','','','','')
  do Write-Entry-Detail(24,'313',$GPSG_8B_EXER_VAL,'','','','','','','','','')
  do Write-Entry-Detail(24,'314',$GPSG_8B_EXEMPT_GN,'','','','','','','','','')
  do Write-Entry-Detail(24,'315',$GPSG_8B_NONEXEMPT,'','','','','','','','','')
  do Write-Entry-Detail(24,'316',$GPSG_8B_GROSS_GAIN,'','','','','','','','','')


!25 Details Information - Dates

  !do format-Datetime($GPSG_8B_GRANT_DT,$GPSG_8B_GRANT_DT_Out,{DEFCMP},'','')
  do format-Datetime($GPSG_8B_EXER_DT,$GPSG_8B_EXER_DT_Out,{DEFCMP},'','')

  do Write-Entry-Detail(25,'410',$GPSG_8B_GRANT_DT,'102','','','','','','','','')
  do Write-Entry-Detail(25,'411',$GPSG_8B_EXER_DT_Out,'102','','','','','','','','')


!26 Details Information - Quantity ( Shares Acquired )

  let $GPSG_8B_SHARES_ACQ = edit(#GPSG_8B_SHARES_ACQ, '8888888.88888')
  let $GPSG_8B_SHARES_ACQ = ltrim($GPSG_8B_SHARES_ACQ,' ')

  do Write-Entry-Detail(26,'510',$GPSG_8B_SHARES_ACQ,'','','','','','','','','')

!Accumulate Totals here for EESOP.

 If($GPSG_8B_GRANT_DT < $Dt And $Plan = '1')
  let #Tot_Gross_Gain_Before   =  #Tot_Gross_Gain_Before + #GPSG_8B_GROSS_GAIN
  let #Tot_Gross_GNex_Before   =  #Tot_Gross_GNex_Before + #GPSG_8B_NONEXEMPT
  let #Tot_Gross_Gex_Before    =  #Tot_Gross_Gex_Before  + #GPSG_8B_EXEMPT_GN
 else
  let #Tot_Gross_Gain_After   =  #Tot_Gross_Gain_After + #GPSG_8B_GROSS_GAIN
  let #Tot_Gross_GNex_After   =  #Tot_Gross_GNex_After + #GPSG_8B_NONEXEMPT
  let #Tot_Gross_Gex_After    =  #Tot_Gross_Gex_After  + #GPSG_8B_EXEMPT_GN
 end-if

  let #EESOP_Cnt     =  #EESOP_Cnt + 1
  let $EESOP_Done    =  'Y'
end-if

end-procedure




!***********************************************************************
! Procedure: Process_Emp_Csop                                          *
!            This procedure processes all CSOP entries.                *
!***********************************************************************
begin-procedure Process_Emp_Csop


If #CSOP_Cnt  <=  15

!29 Line Number CSOP Occurrence

  let $Csop_Cnt = edit(#Csop_Cnt, '88')
  let $Csop_Cnt = translate($Csop_Cnt,'.','')
  let $Csop_Cnt = ltrim($Csop_Cnt,' ')
  let $Csop_Cnt = lpad($Csop_Cnt,1,'0')

  do Write-Entry-Detail(29,$Csop_Cnt,'LN4','','','','','','','','','')

!30 Details Information Indicators

  do Write-Entry-Detail(30,'AWU','CSOP','','','','','','','','','')
  do Write-Entry-Detail(30,'AWV',$PayerIdType,'','','','','','','','','')        ! 8 = ROC
  do Write-Entry-Detail(30,'AWG',$PlanType,'','','','','','','','','')

!31 Employee's Information

  do Write-Entry-Detail(31,'R3',$GPSG_8B_RCB_NUM,$CompanyN1,$CompanyN2,'','','','','','','')
                                               !ROC Number
                                               !Company Name 1 giving stock 20bytes
                                               !Company Name 2 giving stock 20bytes

!32 Monetary Amounts

  let $GPSG_8B_EXER_PRICE = edit(#GPSG_8B_EXER_PRICE, '8888888.88888')
  let $GPSG_8B_EXER_PRICE = ltrim($GPSG_8B_EXER_PRICE,' ')

  let $GPSG_8B_MKT_VAL = edit(#GPSG_8B_MKT_VAL, '8888888.88888')
  let $GPSG_8B_MKT_VAL = ltrim($GPSG_8B_MKT_VAL,' ')

  let $GPSG_8B_EXER_VAL = edit(#GPSG_8B_EXER_VAL, '8888888.88888')
  let $GPSG_8B_EXER_VAL = ltrim($GPSG_8B_EXER_VAL,' ')

  let $GPSG_8B_EXEMPT_GN = edit(#GPSG_8B_EXEMPT_GN, '88888888.88')
  let $GPSG_8B_EXEMPT_GN = ltrim($GPSG_8B_EXEMPT_GN,' ')

  let $GPSG_8B_NONEXEMPT = edit(#GPSG_8B_NONEXEMPT, '88888888.88')
  let $GPSG_8B_NONEXEMPT = ltrim($GPSG_8B_NONEXEMPT,' ')

  let $GPSG_8B_GROSS_GAIN = edit(#GPSG_8B_GROSS_GAIN, '8888888.88')
  let $GPSG_8B_GROSS_GAIN = ltrim($GPSG_8B_GROSS_GAIN,' ')

  do Write-Entry-Detail(32,'331',$GPSG_8B_EXER_PRICE,'','','','','','','','','')
  do Write-Entry-Detail(32,'332',$GPSG_8B_MKT_VAL,'','','','','','','','','')
  do Write-Entry-Detail(32,'333',$GPSG_8B_EXER_VAL,'','','','','','','','','')
  do Write-Entry-Detail(32,'334',$GPSG_8B_EXEMPT_GN,'','','','','','','','','')
  do Write-Entry-Detail(32,'335',$GPSG_8B_NONEXEMPT,'','','','','','','','','')
  do Write-Entry-Detail(32,'336',$GPSG_8B_GROSS_GAIN,'','','','','','','','','')

!33 Details Information - Dates

  !do format-Datetime($GPSG_8B_GRANT_DT,$GPSG_8B_GRANT_DT_Out,{DEFCMP},'','')
  do Write-Entry-Detail(33,'420',$GPSG_8B_GRANT_DT,'102','','','','','','','','')

  do format-Datetime($GPSG_8B_EXER_DT,$GPSG_8B_EXER_DT_Out,{DEFCMP},'','')
  do Write-Entry-Detail(33,'421',$GPSG_8B_EXER_DT_Out,'102','','','','','','','','')

!34 Details Information - Quantity ( Shares Acquired )

  let $GPSG_8B_SHARES_ACQ = edit(#GPSG_8B_SHARES_ACQ, '8888888.88888')
  let $GPSG_8B_SHARES_ACQ = ltrim($GPSG_8B_SHARES_ACQ,' ')

  do Write-Entry-Detail(34,'520',$GPSG_8B_SHARES_ACQ,'','','','','','','','','')


!Accumulate Totals here for CSOP.

 If($GPSG_8B_GRANT_DT < $Dt And $Plan = '1')
  let #Tot_Gross_Gain_Before =  #Tot_Gross_Gain_Before + #GPSG_8B_GROSS_GAIN
  let #Tot_Gross_GNex_Before =  #Tot_Gross_GNex_Before + #GPSG_8B_NONEXEMPT
  let #Tot_Gross_Gex_Before  =  #Tot_Gross_Gex_Before  + #GPSG_8B_EXEMPT_GN
 else
  let #Tot_Gross_Gain_After =  #Tot_Gross_Gain_After + #GPSG_8B_GROSS_GAIN
  let #Tot_Gross_GNex_After =  #Tot_Gross_GNex_After + #GPSG_8B_NONEXEMPT
  let #Tot_Gross_Gex_After  =  #Tot_Gross_Gex_After  + #GPSG_8B_EXEMPT_GN
 END-IF

  let #CSOP_Cnt     =  #CSOP_Cnt + 1
  let $CSOP_Done    =  'Y'
end-if

end-procedure

!***********************************************************************
! Procedure: Process_Emp_Nsop                                          *
!            This procedure processes all NSOP entries.                *
!***********************************************************************
begin-procedure Process_Emp_Nsop


If #NSOP_Cnt  <=  15

!29 Line Number NSOP Occurrence

  let $Nsop_Cnt = edit(#NSOP_Cnt, '88')
  let $Nsop_Cnt = translate($Nsop_Cnt,'.','')
  let $Nsop_Cnt = ltrim($Nsop_Cnt,' ')
  let $Nsop_Cnt = lpad($Nsop_Cnt,1,'0')

  do Write-Entry-Detail(37,$Nsop_Cnt,'LN5','','','','','','','','','')

!30 Details Information Indicators

  do Write-Entry-Detail(38,'AWY','NSOP','','','','','','','','','')
  do Write-Entry-Detail(38,'AWZ',$PayerIdType,'','','','','','','','','')        ! 8 = ROC
  do Write-Entry-Detail(38,'AWB',$PlanType,'','','','','','','','','')

!31 Employee's Information

  do Write-Entry-Detail(39,'R4',$GPSG_8B_RCB_NUM,$CompanyN1,$CompanyN2,'','','','','','','')
                                               !ROC Number
                                               !Company Name 1 giving stock 20bytes
                                               !Company Name 2 giving stock 20bytes

!32 Monetary Amounts

  let $GPSG_8B_EXER_PRICE = edit(#GPSG_8B_EXER_PRICE, '8888888.88888')
  let $GPSG_8B_EXER_PRICE = ltrim($GPSG_8B_EXER_PRICE,' ')

  let $GPSG_8B_MKT_VAL = edit(#GPSG_8B_MKT_VAL, '8888888.88888')
  let $GPSG_8B_MKT_VAL = ltrim($GPSG_8B_MKT_VAL,' ')

  let $GPSG_8B_EXER_VAL = edit(#GPSG_8B_EXER_VAL, '8888888.88888')
  let $GPSG_8B_EXER_VAL = ltrim($GPSG_8B_EXER_VAL,' ')

  let $GPSG_8B_EXEMPT_GN = edit(#GPSG_8B_EXEMPT_GN, '88888888.88')
  let $GPSG_8B_EXEMPT_GN = ltrim($GPSG_8B_EXEMPT_GN,' ')

  let $GPSG_8B_NONEXEMPT = edit(#GPSG_8B_NONEXEMPT, '88888888.88')
  let $GPSG_8B_NONEXEMPT = ltrim($GPSG_8B_NONEXEMPT,' ')

  let $GPSG_8B_GROSS_GAIN = edit(#GPSG_8B_GROSS_GAIN, '8888888.88')
  let $GPSG_8B_GROSS_GAIN = ltrim($GPSG_8B_GROSS_GAIN,' ')

  do Write-Entry-Detail(40,'340',$GPSG_8B_EXER_PRICE,'','','','','','','','','')
  do Write-Entry-Detail(40,'341',$GPSG_8B_MKT_VAL,'','','','','','','','','')
  do Write-Entry-Detail(40,'342',$GPSG_8B_EXER_VAL,'','','','','','','','','')
  do Write-Entry-Detail(40,'343',$GPSG_8B_EXEMPT_GN,'','','','','','','','','')
  do Write-Entry-Detail(40,'344',$GPSG_8B_NONEXEMPT,'','','','','','','','','')
  do Write-Entry-Detail(40,'345',$GPSG_8B_GROSS_GAIN,'','','','','','','','','')

!33 Details Information - Dates

  !do format-Datetime($GPSG_8B_GRANT_DT,$GPSG_8B_GRANT_DT_Out,{DEFCMP},'','')
  do Write-Entry-Detail(41,'430',$GPSG_8B_GRANT_DT,'102','','','','','','','','')

  do format-Datetime($GPSG_8B_EXER_DT,$GPSG_8B_EXER_DT_Out,{DEFCMP},'','')
  do Write-Entry-Detail(41,'431',$GPSG_8B_EXER_DT_Out,'102','','','','','','','','')

!34 Details Information - Quantity ( Shares Acquired )

  let $GPSG_8B_SHARES_ACQ = edit(#GPSG_8B_SHARES_ACQ, '8888888.88888')
  let $GPSG_8B_SHARES_ACQ = ltrim($GPSG_8B_SHARES_ACQ,' ')

  do Write-Entry-Detail(42,'530',$GPSG_8B_SHARES_ACQ,'','','','','','','','','')


!Accumulate Totals here for NSOP.

  let #Tot_Gross_Gain_After =  #Tot_Gross_Gain_After + #GPSG_8B_GROSS_GAIN
  let #Tot_Gross_GNex_After =  #Tot_Gross_GNex_After + #GPSG_8B_NONEXEMPT
  let #Tot_Gross_Gex_After =  #Tot_Gross_Gex_After  + #GPSG_8B_EXEMPT_GN

  let #NSOP_Cnt     =  #NSOP_Cnt + 1
  let $NSOP_Done    =  'Y'

end-if

end-procedure



!***********************************************************************
! Procedure: Write-Entry-Detail                                        *
!            Write data into A8B interface file depending              *
!            on Segment#.                                              *
!***********************************************************************
begin-procedure Write-Entry-Detail(#Segment, $Parm1, $Parm2,
                                             $Parm3, $Parm4,
                                             $Parm5, $Parm6,
                                             $Parm7, $Parm8,
                                             $Parm9, $Parm10,
                                             $Parm11)

  evaluate #Segment
    when = 1
      let $Var1 = 'UNB'
      let $Var2 = 'IRA8B'
      write 1 from $Var1:156     ! 1
                   $Var2:173     ! 157
      break
    when = 2
      let $Var1 = 'UNH'
      let $Var2 = 'IRESOP'
      let $Var3 = '011'
      write 1 from $Var1:19      ! 1
                   $Var2:6       ! 20
                   $Var3:304     ! 26
      break
    when = 3
      let $Var1 = 'BGM'
      let $Var2 = '938'
      write 1 from $Var1:5       ! 1
                   $Var2:324     ! 6
      break
    when = 4
      let $Var1 = 'RFF'
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:321    ! 9
      break
    when = 5
      let $Var1 = 'DTM'
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:8      ! 9
                   $Parm3:313    ! 17
      break
    when = 6
      let $Var1 = 'NAD'
      let $Var2 = 'SE'
      write 1 from $Var1:5       ! 1
                   $Var2:3       ! 6
                   $Parm1:12     ! 9
                   $Parm2:239    ! 21
                   $Parm3:60     ! 260
                   $Parm4:10     ! 320
                   $Parm5:50     ! 330
                   $Parm6:30     ! 380
      break

    when = 7
      let $Var1 = 'COM'
      write 1 from $Var1:5       ! 1
                   $Parm1:20    ! 6
      break

    when = 8
      let $Var1 = 'LIN'
      write 1 from $Var1:5       ! 1
                   $Parm1:6      ! 6
                   $Parm2:315    !12
      break

    when = 9
      let $Var1 = 'RFF'
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:321    ! 9
      break


    when = 10
      let $Var1 = 'NAD'
      let $Var2 = 'PE'
      write 1 from $Var1:5       ! 1
                   $Var2:3       ! 6
                   $Parm1:12     ! 9
                   $Parm2:204    ! 21
                   $Parm3:80     ! 225
      break

    when = 11
      let $Var1 = 'DTM'
      let $Var2 = '329'
      write 1 from $Var1:5       ! 1
                   $Var2:3       ! 6
                   $Parm2:35     ! 9
                   $Parm3:286    !44
      break

    when = 12
    when = 20
    when = 28
    When = 36
      let $Var1 = 'GIS'
      write 1 from $Var1:5       ! 1
                   $Parm1:324    ! 6
      break


    when = 13
    when = 21
    when = 29
    When = 37
      let $Var1 = 'LIN'
      write 1 from $Var1:5       ! 1
                   $Parm1:6      ! 6
                   $Parm2:318    ! 12
      break

    when = 14
    when = 22
    when = 30
    When = 38
      let $Var1 = 'RFF'
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:321    ! 9
      break

    when = 15
    when = 23
    when = 31
    When = 39
      let $Var1 = 'NAD'
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:41     ! 9
                   $Parm3:35     !50
                   $Parm4:245    !85
      break

    when = 16
    when = 19
    When = 40
      let $Var1 = 'MOA'
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:321    ! 9
      break

    when = 17
    when = 25
    when = 33
    When = 41
      let $Var1 = 'DTM'
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:35     ! 9
                   $Parm3:286    !44
      break

    when = 18
    when = 26
    when = 34
    When = 42
      let $Var1 = 'QTY'          ! Shares Acquired
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:321    ! 9
      break


    when = 24
    when = 27
    when = 32
    when = 35
    When = 43
      let $Var1 = 'MOA'          ! Mkt Val & Price
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:321    ! 9
      break

    when = 44
      let $Var1 = 'RFF'          ! Trailer Info
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:221    ! 9
      break

    when = 45
      let $Var1 = 'MOA'          ! Trailer - Totals
      write 1 from $Var1:5       ! 1
                   $Parm1:3      ! 6
                   $Parm2:221    ! 9
      break

    when = 46
      let $Var1 = 'RES'
      let $Var2 = 'ZZ'
      write 1 from $Var1:5       ! 1
                   $Var2:224     ! 6
      break


    when-other
      show 'Invalid $Segment_Type: ' #Segment_Type
      break

  end-evaluate

end-procedure

!***********************************************************************
! Procedure: Control-Break-Option                                      *
!            Change in Stock Option Processing                         *
!***********************************************************************
begin-procedure Control-Break-Option

! Write Totals for each section

  let $Tot_Gross_GNex_Before = edit((#Tot_Gross_GNex_Before),'888888888.88')
  let $Tot_Gross_GNex_Before = ltrim($Tot_Gross_GNex_Before,' ')
  let $Tot_Gross_Gain_Before = edit((#Tot_Gross_Gain_Before), '88888888.88')
  let $Tot_Gross_Gain_Before = ltrim($Tot_Gross_Gain_Before,' ')
  let $Tot_Gross_Gex_Before = edit((#Tot_Gross_Gex_before), '888888888.88')
  let $Tot_Gross_Gex_Before = ltrim($Tot_Gross_Gex_Before,' ')

  let $Tot_Gross_GNex_After = edit((#Tot_Gross_GNex_After),'888888888.88')
  let $Tot_Gross_GNex_After = ltrim($Tot_Gross_GNex_After,' ')
  let $Tot_Gross_Gain_After = edit((#Tot_Gross_Gain_After), '88888888.88')
  let $Tot_Gross_Gain_After = ltrim($Tot_Gross_Gain_After,' ')
  let $Tot_Gross_Gex_After = edit((#Tot_Gross_Gex_After), '888888888.88')
  let $Tot_Gross_Gex_After = ltrim($Tot_Gross_Gex_After,' ')

  Evaluate $PrevOpt
  when = '1'    !ESOP
      do Plan-Type_ESOP
    break
  when  = '2'    !EESOP
      do Plan-Type_EESOP
    break
  when = '3'    !CSOP
      do Plan-Type_CSOP
    break
  When = '4'    !NSOP
      do Plan-Type_NSOP
  break
  end-evaluate

end-procedure

  !*****************************************************************
! Procedure: Employee plan-type is ESOP
!*****************************************************************
begin-Procedure Plan-Type_ESOP

            do Write-Entry-Detail(19,'304',$Tot_Gross_GNex_Before,'','','','','','','','','') !Segment 19 - MOA
            do Write-Entry-Detail(19,'305',$Tot_Gross_Gain_Before,'','','','','','','','','') !Segment 19 - MOA
            do Write-Entry-Detail(19,'351',$Tot_Gross_GNex_After,'','','','','','','','','')  !Segment 19 - MOA
            do Write-Entry-Detail(19,'352',$Tot_Gross_Gain_After,'','','','','','','','','')  !Segment 19 - MOA

            let  #GTot_Gross_Gain_After = #GTot_Gross_Gain_After
                                          + #Tot_Gross_Gain_After
            let  #GTot_Gross_Gex_After  = #GTot_Gross_Gex_After
                                          + #Tot_Gross_Gex_After
            let  #GTot_Gross_GNex_After = #GTot_Gross_GNex_After
                                          + #Tot_Gross_GNex_After

            let  #GTot_Gross_Gain_Before = #GTot_Gross_Gain_Before
                                           + #Tot_Gross_Gain_Before
            let  #GTot_Gross_Gex_Before  = #GTot_Gross_Gex_Before
                                           + #Tot_Gross_Gex_Before
            let  #GTot_Gross_GNex_Before = #GTot_Gross_GNex_Before
                                           + #Tot_Gross_GNex_Before

            let  #ESOP_Gross_Gain_After = #ESOP_Gross_Gain_After + #Tot_Gross_Gain_After
            let  #ESOP_Gross_Gex_After  = #ESOP_Gross_Gex_After + #Tot_Gross_Gex_After
            let  #ESOP_Gross_GNex_After = #ESOP_Gross_GNex_After + #Tot_Gross_GNex_After

            let  #ESOP_Gross_Gain_Before = #ESOP_Gross_Gain_Before + #Tot_Gross_Gain_Before
            let  #ESOP_Gross_Gex_Before  = #ESOP_Gross_Gex_Before + #Tot_Gross_Gex_Before
            let  #ESOP_Gross_GNex_Before = #ESOP_Gross_GNex_Before + #Tot_Gross_GNex_Before

        let  $PrevOpt        =  $ThisOpt
        let  #Tot_Gross_Gain_Before  = 0
        let  #Tot_Gross_Gex_Before   = 0
        let  #Tot_Gross_GNex_Before  = 0
        let  #Tot_Gross_Gain_After   = 0
        let  #Tot_Gross_Gex_After    = 0
        let  #Tot_Gross_GNex_After   = 0

end-procedure



!*****************************************************************
! Procedure: Employee plan-type is EESOP
!*****************************************************************
Begin-Procedure Plan-Type_EESOP

            do Write-Entry-Detail(27,'317',$Tot_Gross_Gex_Before,'','','','','','','','','')  !Segment 27 - MOA
            do Write-Entry-Detail(27,'318',$Tot_Gross_GNex_Before,'','','','','','','','','') !Segment 27 - MOA
            do Write-Entry-Detail(27,'319',$Tot_Gross_Gain_Before,'','','','','','','','','') !Segment 27 - MOA
            do Write-Entry-Detail(27,'353',$Tot_Gross_Gex_After,'','','','','','','','','')  !Segment 27 - MOA
            do Write-Entry-Detail(27,'354',$Tot_Gross_GNex_After,'','','','','','','','','') !Segment 27 - MOA
            do Write-Entry-Detail(27,'355',$Tot_Gross_Gain_After,'','','','','','','','','') !Segment 27 - MOA

            let  #GTot_Gross_Gain_After = #GTot_Gross_Gain_After
                                            + #Tot_Gross_Gain_After
            let  #GTot_Gross_Gex_After  = #GTot_Gross_Gex_After
                                            + #Tot_Gross_Gex_After
            let  #GTot_Gross_GNex_After = #GTot_Gross_GNex_After
                                             + #Tot_Gross_GNex_After
            let  #GTot_Gross_Gain_Before = #GTot_Gross_Gain_Before
                                            + #Tot_Gross_Gain_Before
            let  #GTot_Gross_Gex_Before  = #GTot_Gross_Gex_Before
                                            + #Tot_Gross_Gex_Before
            let  #GTot_Gross_GNex_Before = #GTot_Gross_GNex_Before
                                             + #Tot_Gross_GNex_Before

         let  #EESOP_Gross_Gain_After = #EESOP_Gross_Gain_After + #Tot_Gross_Gain_After
         let  #EESOP_Gross_Gex_After  = #EESOP_Gross_Gex_After  + #Tot_Gross_Gex_After
         let  #EESOP_Gross_GNex_After = #EESOP_Gross_GNex_After + #Tot_Gross_GNex_After
         let  #EESOP_Gross_Gain_Before = #EESOP_Gross_Gain_Before + #Tot_Gross_Gain_Before
         let  #EESOP_Gross_Gex_Before  = #EESOP_Gross_Gex_Before  + #Tot_Gross_Gex_Before
         let  #EESOP_Gross_GNex_Before = #EESOP_Gross_GNex_Before + #Tot_Gross_GNex_Before

         let  $PrevOpt        =  $ThisOpt
         let  #Tot_Gross_Gain_Before  = 0
         let  #Tot_Gross_GNex_Before  = 0
         let  #Tot_Gross_Gex_Before   = 0
         let  #Tot_Gross_Gain_After  = 0
         let  #Tot_Gross_GNex_After  = 0
         let  #Tot_Gross_Gex_After   = 0
end-Procedure

!*****************************************************************
! Procedure: Employee plan-type is CSOP
!*****************************************************************
Begin-Procedure Plan-Type_CSOP
         do Write-Entry-Detail(35,'337',$Tot_Gross_Gex_Before,'','','','','','','','','') !Segment 35 - MOA
         do Write-Entry-Detail(35,'338',$Tot_Gross_GNex_Before,'','','','','','','','','') !Segment 35 - MOA
         do Write-Entry-Detail(35,'339',$Tot_Gross_Gain_Before,'','','','','','','','','') !Segment 35 - MOA

            let  #GTot_Gross_Gain_After = #GTot_Gross_Gain_After
                                        + #Tot_Gross_Gain_After
            let  #GTot_Gross_Gex_After  = #GTot_Gross_Gex_After
                                       + #Tot_Gross_Gex_After
            let  #GTot_Gross_GNex_After = #GTot_Gross_GNex_After
                                       + #Tot_Gross_GNex_After
            let  #GTot_Gross_Gain_Before = #GTot_Gross_Gain_Before
                                        + #Tot_Gross_Gain_Before
            let  #GTot_Gross_Gex_Before  = #GTot_Gross_Gex_Before
                                         + #Tot_Gross_Gex_Before
            let  #GTot_Gross_GNex_Before = #GTot_Gross_GNex_Before
                                        + #Tot_Gross_GNex_Before

       let $GTot_Gross_Gain_Before = edit((#GTot_Gross_Gain_Before),'8888888888.88')
       let $GTot_Gross_Gain_Before = ltrim($GTot_Gross_Gain_Before,' ')

       do Write-Entry-Detail(35,'601',$GTot_Gross_Gain_Before,'','','','','','','','','') !Segment 35 - MOA
       do Write-Entry-Detail(35,'356',$Tot_Gross_Gex_After,'','','','','','','','','') !Segment 35 - MOA
       do Write-Entry-Detail(35,'357',$Tot_Gross_GNex_After,'','','','','','','','','') !Segment 35 - MOA
       do Write-Entry-Detail(35,'358',$Tot_Gross_Gain_After,'','','','','','','','','') !Segment 35 - MOA

         let  #CSOP_Gross_Gain_After = #CSOP_Gross_Gain_After + #Tot_Gross_Gain_After
         let  #CSOP_Gross_Gex_After  = #CSOP_Gross_Gex_After  + #Tot_Gross_Gex_After
         let  #CSOP_Gross_GNex_After = #CSOP_Gross_GNex_After + #Tot_Gross_GNex_After

         let  #CSOP_Gross_Gain_Before = #CSOP_Gross_Gain_Before + #Tot_Gross_Gain_Before
         let  #CSOP_Gross_Gex_Before  = #CSOP_Gross_Gex_Before  + #Tot_Gross_Gex_Before
         let  #CSOP_Gross_GNex_Before = #CSOP_Gross_GNex_Before + #Tot_Gross_GNex_Before

         let  $PrevOpt        =  $ThisOpt
         let  #Tot_Gross_Gain_Before  = 0
         let  #Tot_Gross_GNex_Before  = 0
         let  #Tot_Gross_Gex_Before   = 0
         let  #Tot_Gross_Gain_After   = 0
         let  #Tot_Gross_GNex_After   = 0
         let  #Tot_Gross_Gex_After    = 0

       do Calc-Total-NSOP

    let $GTot_Gross_Gain_After = edit((#GTot_Gross_Gain_After),'8888888888.88')
    let $GTot_Gross_Gain_After = ltrim($GTot_Gross_Gain_After,' ')
    do Write-Entry-Detail(35,'602',$GTot_Gross_Gain_After,'','','','','','','','','') !Segment 35 - MOA

    let $GTot_Gross_GNex_Before = edit((#GTot_Gross_GNex_Before),'8888888888.88')
    let $GTot_Gross_GNex_Before = ltrim($GTot_Gross_GNex_Before,' ')
    do Write-Entry-Detail(35,'603',$GTot_Gross_GNex_Before,'','','','','','','','','') !Segment 35 - MOA

    let $GTot_Gross_GNex_After = edit((#GTot_Gross_GNex_After),'8888888888.88')
    let $GTot_Gross_GNex_After = ltrim($GTot_Gross_GNex_After,' ')
    do Write-Entry-Detail(35,'604',$GTot_Gross_GNex_After,'','','','','','','','','') !Segment 35 - MOA


End-Procedure

!*****************************************************************
! Procedure: Employee plan-type is NSOP
!*****************************************************************
Begin-Procedure Plan-Type_NSOP

       do Write-Entry-Detail(43,'346',$Tot_Gross_Gex_After,'','','','','','','','','')    !Segment 43 - MOA
       do Write-Entry-Detail(43,'347',$Tot_Gross_GNex_After,'','','','','','','','','')   !Segment 43 - MOA
       do Write-Entry-Detail(43,'348',$Tot_Gross_Gain_After,'','','','','','','','','') !  Segment 43 - MOA

         let  #NSOP_Gross_Gain_After  = #NSOP_Gross_Gain_After + #Tot_Gross_Gain_After
         let  #NSOP_Gross_Gex_After   = #NSOP_Gross_Gex_After  + #Tot_Gross_Gex_After
         let  #NSOP_Gross_GNex_After  = #NSOP_Gross_GNex_After + #Tot_Gross_GNex_After

         let  $PrevOpt        =  $ThisOpt
         let  #Tot_Gross_Gain_Before  = 0
         let  #Tot_Gross_GNex_Before  = 0
         let  #Tot_Gross_Gex_Before   = 0
         let  #Tot_Gross_Gain_After   = 0
         let  #Tot_Gross_GNex_After   = 0
         let  #Tot_Gross_Gex_After    = 0

end-Procedure

!*****************************************************************
! Procedure: Calculate NSOP totals
!*****************************************************************
Begin-Procedure Calc-Total-NSOP

Begin-SELECT
APP8B.EMPLID
APP8B.BALANCE_GRP_NUM
APP8B.GPSG_TAX_YEAR
APP8B.GPSG_8B_GROSS_GAIN
APP8B.GPSG_8B_EXEMPT_GN
APP8B.GPSG_8B_NONEXEMPT

         Let #GPSG_8B_GROSS_GAIN = &APP8B.GPSG_8B_GROSS_GAIN
         Let #GPSG_8B_EXEMPT_GN  = &APP8B.GPSG_8B_EXEMPT_GN
         Let #GPSG_8B_NONEXEMPT  = &APP8B.GPSG_8B_NONEXEMPT

         Let #Tot_Gross_Gain_After =  #Tot_Gross_Gain_After + #GPSG_8B_GROSS_GAIN
         Let #Tot_Gross_Gex_After  =  #Tot_Gross_Gex_After + #GPSG_8B_EXEMPT_GN
         Let #Tot_Gross_GNex_After =  #Tot_Gross_GNex_After + #GPSG_8B_NONEXEMPT

         let  #GTot_Gross_Gain_After = #GTot_Gross_Gain_After
                                     + #Tot_Gross_Gain_After
         let  #GTot_Gross_Gex_After  = #GTot_Gross_Gex_After
                                    + #Tot_Gross_Gex_After
         let  #GTot_Gross_GNex_After = #GTot_Gross_GNex_After
                                       + #Tot_Gross_GNex_After

         let  $PrevOpt        =  $ThisOpt
         let  #Tot_Gross_Gain_Before  = 0
         let  #Tot_Gross_GNex_Before  = 0
         let  #Tot_Gross_Gex_Before   = 0
         let  #Tot_Gross_Gain_After   = 0
         let  #Tot_Gross_GNex_After   = 0
         let  #Tot_Gross_Gex_After    = 0

FROM PS_GPSG_APP_8B_DTL APP8B, PS_GPSG_APP_8B I1
  WHERE I1.GPSG_CPY_TAX_REF = $Company_Tax_Ref
    AND I1.GPSG_TAX_YEAR = $GPSG_TAX_YEAR
    AND APP8B.GPSG_TAX_YEAR = I1.GPSG_TAX_YEAR
    AND APP8B.EMPLID = I1.EMPLID
    AND APP8B.EMPLID = $PrevEmplid
    AND APP8B.BALANCE_GRP_NUM = I1.BALANCE_GRP_NUM
    AND APP8B.GPSG_CPY_TAX_REF = I1.GPSG_CPY_TAX_REF
    AND APP8B.GPSG_8B_STOCK_IND = '4'
 ORDER BY APP8B.EMPLID, APP8B.BALANCE_GRP_NUM, APP8B.GPSG_TAX_YEAR

end-SELECT
end-Procedure

!***********************************************************************
! Procedure: Control-Break-Empl                                        *
!            Change in Employee ID Processing                          *
!***********************************************************************
begin-procedure Control-Break-Empl

If $FirstTime = 'N'
 If $EESOP_Done = 'N'
    do Dummy-EEsop
 end-if

 If $CSOP_Done  = 'N'
    do Dummy-Csop
 end-if

 If $NSOP_Done  = 'N'
    do Dummy-Nsop
 end-if
End-If

! Write Employee Total

 let $GTot_Gross_Gain = edit((#GTot_Gross_Gain),'8888888')
 let $GTot_Gross_Gain = ltrim($GTot_Gross_Gain,' ')

 !do Write-Entry-Detail(35,'601',$GTot_Gross_Gain,'','','','','')
                                                    !Segment 35 - MOA
 let  #GTot_Gross_Gain_After = 0
 let  #GTot_Gross_Gain_Before = 0
 let  #GTot_Gross_GNex_After = 0
 let  #GTot_Gross_GNex_Before = 0
 let  #GTot_Gross_Gex_After  = 0
 let  #GTot_Gross_Gex_Before  = 0

 let  #ESOP_Cnt        = 1
 let  #EESOP_Cnt       = 1
 let  #CSOP_Cnt        = 1
 let  #NSOP_Cnt        = 1

  let $PrevEmplid   = $ThisEmplid

  let $ESOP_Done     = 'N'
  let $EESOP_Done    = 'N'
  let $CSOP_Done     = 'N'
  let $NSOP_Done     = 'N'

  let #Rec_Cnt      =  #Rec_Cnt + 1

end-procedure


!***********************************************************************
! Procedure: Close-File                                                  *
!            Write footer record and close file.                       *
!***********************************************************************
begin-procedure Close-File

  close 1

end-procedure


!***********************************************************************
! Procedure: Write-Gis-Rec                                             *
!            Write the GIS record.                                     *
!***********************************************************************
begin-procedure Write-Gis-Rec

!12 GIS

  Evaluate   $ThisOpt

      When  =  '1'
          do Write-Entry-Detail(12,'ESOP','','','','','','','','','','')
      break

      When  =  '2'
          If $ESOP_Done = 'N'
             do Dummy-Esop
          end-if

          do Write-Entry-Detail(20,'EESOP','','','','','','','','','','')
      break

      When  =  '3'
          If $ESOP_Done = 'N'
             do Dummy-Esop
          End-if
          If $EESOP_Done = 'N'
             do Dummy-EEsop
          End-if

          do Write-Entry-Detail(28,'CSOP','','','','','','','','','','')
      break

      When  =  '4'
          If $ESOP_Done = 'N'
             do Dummy-Esop
          End-if
          If $EESOP_Done = 'N'
             do Dummy-EEsop
          End-if
          If $CSOP_Done = 'N'
             do Dummy-Csop
          End-if

          do Write-Entry-Detail(36,'NSOP','','','','','','','','','','')
      break


      When-other
         show ' *** Invalid Stock Option Type = ' $ThisOpt

  end-evaluate

end-procedure


!***********************************************************************
! Procedure: Print-Trailer                                             *
!            Write Grand Totals and Trailer record                     *
!***********************************************************************
begin-procedure Print-Trailer


!37.FTX
!Trailer Records

  Let #Rec_Cnt = #Rec_Cnt - 1
  let $Rec_Cnt = edit(#Rec_Cnt, '888888')
  let $Rec_Cnt = ltrim($Rec_Cnt,' ')

  do Write-Entry-Detail(44,'AWW' ,'2','','','','','','','','','')
  do Write-Entry-Detail(44,'AWX' ,$Rec_Cnt,'','','','','','','','','')
                                        !Segment 37 - Trailer

!38 Grand Total Amounts

  let $ESOP_Gross_GNex_Before = edit(#ESOP_Gross_GNex_Before, '8888888888888.88')
  let $ESOP_Gross_GNex_Before = ltrim($ESOP_Gross_GNex_Before,' ')

  let $ESOP_Gross_GNex_After = edit(#ESOP_Gross_GNex_After, '8888888888888.88')
  let $ESOP_Gross_GNex_After = ltrim($ESOP_Gross_GNex_After,' ')

  let $ESOP_Gross_Gain_Before = edit(#ESOP_Gross_Gain_Before, '8888888888888.88')
  let $ESOP_Gross_Gain_Before = ltrim($ESOP_Gross_Gain_Before,' ')

  let $ESOP_Gross_Gain_After = edit(#ESOP_Gross_Gain_After, '8888888888888.88')
  let $ESOP_Gross_Gain_After = ltrim($ESOP_Gross_Gain_After,' ')

  let $EESOP_Gross_Gex_Before = edit(#EESOP_Gross_Gex_Before, '8888888888888.88')
  let $EESOP_Gross_Gex_Before = ltrim($EESOP_Gross_Gex_Before,' ')

  let $EESOP_Gross_Gex_After = edit(#EESOP_Gross_Gex_After, '8888888888888.88')
  let $EESOP_Gross_Gex_After = ltrim($EESOP_Gross_Gex_After,' ')


  let $EESOP_Gross_GNex_Before = edit(#EESOP_Gross_GNex_Before, '8888888888888.88')
  let $EESOP_Gross_GNex_Before = ltrim($EESOP_Gross_GNex_Before,' ')

  let $EESOP_Gross_GNex_After = edit(#EESOP_Gross_GNex_After, '8888888888888.88')
  let $EESOP_Gross_GNex_After = ltrim($EESOP_Gross_GNex_After,' ')

  let $EESOP_Gross_Gain_Before = edit(#EESOP_Gross_Gain_Before, '8888888888888.88')
  let $EESOP_Gross_Gain_Before = ltrim($EESOP_Gross_Gain_Before,' ')

  let $EESOP_Gross_Gain_After = edit(#EESOP_Gross_Gain_After, '8888888888888.88')
  let $EESOP_Gross_Gain_After = ltrim($EESOP_Gross_Gain_After,' ')

  let $CSOP_Gross_Gex_Before = edit(#CSOP_Gross_Gex_Before, '8888888888888.88')
  let $CSOP_Gross_Gex_Before = ltrim($CSOP_Gross_Gex_Before,' ')

  let $CSOP_Gross_Gex_After = edit(#CSOP_Gross_Gex_After, '8888888888888.88')
  let $CSOP_Gross_Gex_After = ltrim($CSOP_Gross_Gex_After,' ')

  let $CSOP_Gross_GNex_Before = edit(#CSOP_Gross_GNex_Before, '8888888888888.88')
  let $CSOP_Gross_GNex_Before = ltrim($CSOP_Gross_GNex_Before,' ')


  let $CSOP_Gross_GNex_After = edit(#CSOP_Gross_GNex_After, '8888888888888.88')
  let $CSOP_Gross_GNex_After = ltrim($CSOP_Gross_GNex_After,' ')

  let $CSOP_Gross_Gain_Before = edit(#CSOP_Gross_Gain_Before, '8888888888888.88')
  let $CSOP_Gross_Gain_Before = ltrim($CSOP_Gross_Gain_Before,' ')

  let $CSOP_Gross_Gain_After = edit(#CSOP_Gross_Gain_After, '8888888888888.88')
  let $CSOP_Gross_Gain_After = ltrim($CSOP_Gross_Gain_After,' ')

  do Write-Entry-Detail(45,'710',$ESOP_Gross_GNex_Before,'','','','','','','','','')
  do Write-Entry-Detail(45,'711',$ESOP_Gross_Gain_Before,'','','','','','','','','')

  do Write-Entry-Detail(45,'712',$EESOP_Gross_Gex_Before,'','','','','','','','','')
  do Write-Entry-Detail(45,'713',$EESOP_Gross_GNex_Before,'','','','','','','','','')
  do Write-Entry-Detail(45,'714',$EESOP_Gross_Gain_Before,'','','','','','','','','')

  do Write-Entry-Detail(45,'715',$CSOP_Gross_Gex_Before,'','','','','','','','','')
  do Write-Entry-Detail(45,'716',$CSOP_Gross_GNex_Before,'','','','','','','','','')
  do Write-Entry-Detail(45,'717',$CSOP_Gross_Gain_Before,'','','','','','','','','')


  let #Grand_Gross_Gain_Before =   #ESOP_Gross_Gain_Before
                          + #EESOP_Gross_Gain_Before
                          + #CSOP_Gross_Gain_Before

  let $Grand_Gross_Gain_Before = edit(#Grand_Gross_Gain_Before, '8888888888888.88')
  let $Grand_Gross_Gain_Before = ltrim($Grand_Gross_Gain_Before,' ')

  do Write-Entry-Detail(45,'718',$Grand_Gross_Gain_Before,'','','','','','','','','')

  do Write-Entry-Detail(45,'719',$ESOP_Gross_GNex_After,'','','','','','','','','')
  do Write-Entry-Detail(45,'720',$ESOP_Gross_Gain_After,'','','','','','','','','')

  do Write-Entry-Detail(45,'721',$EESOP_Gross_Gex_After,'','','','','','','','','')
  do Write-Entry-Detail(45,'722',$EESOP_Gross_GNex_After,'','','','','','','','','')
  do Write-Entry-Detail(45,'723',$EESOP_Gross_Gain_After,'','','','','','','','','')

  do Write-Entry-Detail(45,'724',$CSOP_Gross_Gex_After,'','','','','','','','','')
  do Write-Entry-Detail(45,'725',$CSOP_Gross_GNex_After,'','','','','','','','','')
  do Write-Entry-Detail(45,'726',$CSOP_Gross_Gain_After,'','','','','','','','','')

  let #Grand_Gross_Gain_After =   #ESOP_Gross_Gain_After
                                   + #EESOP_Gross_Gain_After
                                   + #CSOP_Gross_Gain_After
                                   + #NSOP_Gross_Gain_After

  let $Grand_Gross_Gain_After = edit(#Grand_Gross_Gain_After, '8888888888888.88')
  let $Grand_Gross_Gain_After = ltrim($Grand_Gross_Gain_After,' ')

  do Write-Entry-Detail(45,'727',$Grand_Gross_Gain_After,'','','','','','','','','')

  Let #Grand_Gross_GNex_Before = #ESOP_Gross_GNex_Before
                                + #EESOP_Gross_GNex_Before
                                + #CSOP_Gross_GNex_Before

 let $Grand_Gross_GNex_Before = edit(#Grand_Gross_GNex_Before, '8888888888888.88')
 let $Grand_Gross_GNex_Before = ltrim($Grand_Gross_GNex_Before,' ')

  do Write-Entry-Detail(45,'728',$Grand_Gross_GNex_Before,'','','','','','','','','')

  Let #Grand_Gross_GNex_After = #ESOP_Gross_GNex_After
                                + #EESOP_Gross_GNex_After
                                + #CSOP_Gross_GNex_After
                                + #NSOP_Gross_GNex_After

 let $Grand_Gross_GNex_After = edit(#Grand_Gross_GNex_After, '8888888888888.88')
 let $Grand_Gross_GNex_After = ltrim($Grand_Gross_GNex_After,' ')

  do Write-Entry-Detail(45,'729',$Grand_Gross_GNex_After,'','','','','','','','','')


  let $NSOP_Gross_Gex_After = edit(#NSOP_Gross_Gex_After, '8888888888888.88')
  let $NSOP_Gross_Gex_After = ltrim($NSOP_Gross_Gex_After,' ')

  let $NSOP_Gross_GNex_After = edit(#NSOP_Gross_GNex_After, '8888888888888.88')
  let $NSOP_Gross_GNex_After = ltrim($NSOP_Gross_GNex_After,' ')

  let $NSOP_Gross_Gain_After = edit(#NSOP_Gross_Gain_After, '888888888888.88')
  let $NSOP_Gross_Gain_After = ltrim($NSOP_Gross_Gain_After,' ')

  do Write-Entry-Detail(45,'730',$NSOP_Gross_Gex_After,'','','','','','','','','')
  do Write-Entry-Detail(45,'731',$NSOP_Gross_GNex_After,'','','','','','','','','')
  do Write-Entry-Detail(45,'732',$NSOP_Gross_Gain_After,'','','','','','','','','')

!write 'RES  ZZ' segment
  do Write-Entry-Detail(46,'','','','','','','','','','','')       !Segment 46 - RES

end-procedure

!
!***********************************************************************
! Procedure: get-citizenship-country                                   !
!            select citizenship country for emplid and translate
!            to nationality code
!***********************************************************************
begin-procedure get-citizenship-country

  let $Cntry = ''

  begin-SELECT
CZN.CITIZENSHIP_STATUS
     if &CZN.CITIZENSHIP_STATUS = '1' or &CZN.CITIZENSHIP_STATUS = '2' or &CZN.CITIZENSHIP_STATUS = '5'
        let $Cntry = 'SGP'
     else
        if &CZN.CITIZENSHIP_STATUS = '7'
           let $Cntry = ''
        end-if
     end-if

   FROM PS_CITIZENSHIP CZN
  WHERE CZN.EMPLID = $ThisEmplid
    AND CZN.DEPENDENT_ID = ' '
    AND CZN.COUNTRY = 'SGP'
  end-SELECT

  if $Cntry = ''
     begin-SELECT
CZP.DT_ISSUED
CZP.COUNTRY_PASSPORT
        let $Cntry = &CZP.COUNTRY_PASSPORT

  FROM PS_CITIZEN_PSSPRT CZP
 WHERE CZP.EMPLID = $ThisEmplid
   AND CZP.DEPENDENT_ID = ' '
 ORDER BY CZP.DT_ISSUED
     end-SELECT
  end-if

  if $Cntry = ''
     begin-SELECT
CZN1.COUNTRY
        let $Cntry = &CZN1.COUNTRY

      FROM PS_CITIZENSHIP CZN1
     WHERE CZN1.EMPLID       = $ThisEmplid
       AND CZN1.DEPENDENT_ID = ' '
       AND CZN1.COUNTRY     <> 'SGP'
     end-SELECT
  end-if

  evaluate $Cntry
  when = 'SGP' ! Singapore
    let $NationalityCode    = '301'
  when = 'IDN' ! Indonesia
    let $NationalityCode    = '303'
  when = 'MYS' ! Malaysia
    let $NationalityCode    = '304'
  when = 'PHL' ! Phillipines
    let $NationalityCode    = '305'
  when = 'THA' ! Thailand
    let $NationalityCode    = '306'
  when = 'JPN' ! Japan
    let $NationalityCode    = '331'
  when = 'TWN' ! Taiwan
    let $NationalityCode    = '334'
  when = 'CHN' ! China
    let $NationalityCode    = '336'
  when = 'HKG' ! Hong Kong
    let $NationalityCode    = '336'
  when = 'GBR' ! UK
    let $NationalityCode    = '110'
  when = 'USA' ! USA
    let $NationalityCode    = '503'
  when = 'AUS' ! Australia
    let $NationalityCode    = '701'
  when = 'NZL' ! New Zealand
    let $NationalityCode    = '705'
   when = 'BEL' ! Belgium
        let $NationalityCode    = '101'
     when = 'DNK' ! Denmark
        let $NationalityCode    = '102'
     when = 'FRA' ! France
        let $NationalityCode    = '103'
     when = 'DEU' ! Germany
        let $NationalityCode    = '104'
     when = 'GRC' ! Greece
        let $NationalityCode    = '105'
     when = 'IRL' ! Ireland
        let $NationalityCode    = '106'
     when = 'ITA' ! Italy
        let $NationalityCode    = '107'
     when = 'LUX' ! Luxembourg
        let $NationalityCode    = '108'
     when = 'NLD' ! Netherlands
        let $NationalityCode    = '109'
     when = 'PRT' ! Portugal
        let $NationalityCode    = '111'
     when = 'ESP' ! spain
        let $NationalityCode    = '112'
     when = 'AUT' ! Austria
        let $NationalityCode    = '131'
     when = 'FIN' ! finland
        let $NationalityCode    = '132'
     when = 'ISL' ! Iceland
        let $NationalityCode    = '133'
     when = 'NOR' ! Norway
        let $NationalityCode    = '134'
     when = 'SJM' ! Svalbard
        let $NationalityCode    = '135'
     when = 'SWE' ! Sweden
        let $NationalityCode    = '136'
     when = 'CHE' ! Switzerland
        let $NationalityCode    = '137'
     when = 'LIE' ! Liechstenstein
        let $NationalityCode    = '138'
     when = 'BVT' ! Bouvet
        let $NationalityCode    = '139'
     when = 'FRO' ! faeroe
        let $NationalityCode    = '141'
     when = 'GRL' ! Greenland
        let $NationalityCode    = '142'
     when = 'MCO' ! Monaco
        let $NationalityCode    = '143'
     when = 'SMR' ! San Marino
        let $NationalityCode    = '144'
     when = 'VAT' ! Vatican
        let $NationalityCode    = '145'
     when = 'TUR' ! Turkey
        let $NationalityCode    = '152'
     when = 'AND' ! Andorra
        let $NationalityCode    = '153'
     when = 'GIB' ! Gibraltar
        let $NationalityCode    = '154'
     when = 'MLT' ! Malta
        let $NationalityCode    = '155'
     when = 'ALB' ! Albania
        let $NationalityCode    = '201'
     when = 'BGR' ! Bulgaria
        let $NationalityCode    = '202'
     when = 'CZE' ! Czech Republic
        let $NationalityCode    = '234'
     when = 'HUN' ! Hungary
        let $NationalityCode    = '205'
     when = 'POL' ! Poland
        let $NationalityCode    = '206'
     when = 'ROU' ! Romania
        let $NationalityCode    = '207'
     when = 'YUG' ! Yugoslavia
        let $NationalityCode    = '209'
     when = 'UKR' ! Ukrainia
        let $NationalityCode    = '212'
     when = 'EST' ! Estonia
        let $NationalityCode    = '213'
     when = 'LVA' ! Latvia
        let $NationalityCode    = '214'
     when = 'LTU' ! Lithuania
        let $NationalityCode    = '215'
     when = 'GEO' ! Georgia
        let $NationalityCode    = '216'
     when = 'ARM' ! Armenia
        let $NationalityCode    = '217'
     when = 'AZE' ! Azerbaijan
        let $NationalityCode    = '218'
     when = 'KGZ' ! Kyrgyzstan
        let $NationalityCode    = '219'
     when = 'KAZ' ! Kazakhstan
        let $NationalityCode    = '221'
     when = 'MDA' ! Moldova
        let $NationalityCode    = '222'
     when = 'RUS' ! Russia
        let $NationalityCode    = '223'
     when = 'TJK' ! Tajikistan
        let $NationalityCode    = '224'
     when = 'TKM' ! Turkmenistan
        let $NationalityCode    = '225'
     when = 'UZB' ! Uzbekistan
        let $NationalityCode    = '226'
     when = 'HRV' ! Croatia
        let $NationalityCode    = '232'
     when = 'SVN' ! Slovenia
        let $NationalityCode    = '233'
     when = 'SVK' ! Slovakia
        let $NationalityCode    = '235'
     when = 'IDN' ! Indonesia
        let $NationalityCode    = '303'
     when = 'BRN' ! Brunei
        let $NationalityCode    = '302'
     when = 'TLS' ! East Timor
        let $NationalityCode    = '307'
     when = 'MMR' ! Myanmar
        let $NationalityCode    = '311'
     when = 'LAO' ! Lao People's Democratic Rep
        let $NationalityCode    = '313'
     when = 'VNM' ! Viet Nam
        let $NationalityCode    = '314'
     when = 'HKG' ! Hong Kong
        let $NationalityCode    = '332'
     when = 'KOR' ! Korea, Republic of
        let $NationalityCode    = '333'
     when = 'MAC' ! Macao
        let $NationalityCode    = '335'
     when = 'PRK' ! North Korea
        let $NationalityCode    = '337'
     when = 'MNG' ! Mongolia
        let $NationalityCode    = '338'
     when = 'AFG' ! Afghanistan
        let $NationalityCode    = '351'
     when = 'BGD' ! Bangladesh
        let $NationalityCode    = '352'
     when = 'BTN' ! Bhutan
        let $NationalityCode    = '353'
     when = 'IND' ! India
        let $NationalityCode    = '354'
     when = 'MDV' ! Maldives
        let $NationalityCode    = '355'
     when = 'NPL' ! Nepal
        let $NationalityCode    = '356'
     when = 'PAK' ! Pakistan
        let $NationalityCode    = '357'
     when = 'LKA' ! Sri Lanka
        let $NationalityCode    = '358'
     when = 'BHR' ! Bahrain
        let $NationalityCode    = '371'
     when = 'CYP' ! Cyprus
        let $NationalityCode    = '372'
     when = 'IRN' ! Iran
        let $NationalityCode    = '373'
     when = 'IRQ' ! Iraq
        let $NationalityCode    = '374'
     when = 'ISR' ! Israel
        let $NationalityCode    = '375'
     when = 'JOR' ! jordan
        let $NationalityCode    = '376'
     when = 'KWT' ! Kuwait
        let $NationalityCode    = '377'
     when = 'LBN' ! Lebanon
        let $NationalityCode    = '378'
     when = 'OMN' ! Oman
        let $NationalityCode    = '379'
     when = 'QAT' ! Qatar
        let $NationalityCode    = '380'
     when = 'SAU' ! Saudi Arabia
        let $NationalityCode    = '381'
     when = 'SYR' ! Syrian
        let $NationalityCode    = '382'
     when = 'ARE' ! UAE
        let $NationalityCode    = '383'
     when = 'YEM' ! Rep of Yemen
        let $NationalityCode    = '385'
     when = 'PSE' ! Palestine
        let $NationalityCode    = '386'
     when = 'DZA' ! Algeria
        let $NationalityCode    = '401'
     when = 'EGY' ! Egypt
        let $NationalityCode    = '402'
     when = 'LBY' ! Libya
        let $NationalityCode    = '403'
     when = 'MAR' ! Morocco
        let $NationalityCode    = '404'
     when = 'SDN' ! Sudan
        let $NationalityCode    = '405'
     when = 'TUN' ! Tunisia
        let $NationalityCode    = '406'
     when = 'DJI' ! Djibouti
        let $NationalityCode    = '407'
     when = 'ETH' ! Ethiopia
        let $NationalityCode    = '408'
     when = 'SOM' ! Somalia
        let $NationalityCode    = '409'
     when = 'ERI' ! Eritrea
        let $NationalityCode    = '410'
     when = 'GHA' ! Ghana
        let $NationalityCode    = '421'
     when = 'CIV' ! Cote D'ivoire
        let $NationalityCode    = '422'
     when = 'KEN' ! Kenya
        let $NationalityCode    = '423'
     when = 'LBR' ! Liberia
        let $NationalityCode    = '424'
     when = 'MDG' ! Madagascar
        let $NationalityCode    = '425'
     when = 'MUS' ! Mauritius
        let $NationalityCode    = '426'
     when = 'MOZ' ! Mozambique
        let $NationalityCode    = '427'
     when = 'NGA' ! Nigeria
        let $NationalityCode    = '428'
     when = 'REU' ! Reunion
        let $NationalityCode    = '429'
     when = 'TZA' ! Tanzania
        let $NationalityCode    = '430'
     when = 'UGA' ! Uganda
        let $NationalityCode    = '431'
     when = 'ZMB' ! Zambia
        let $NationalityCode    = '432'
     when = 'AGO' ! Angola
        let $NationalityCode    = '451'
     when = 'BEN' ! Benin
        let $NationalityCode    = '452'
     when = 'BWA' ! Botswana
        let $NationalityCode    = '453'
     when = 'BFA' ! Burnika Faso
        let $NationalityCode    = '454'
     when = 'BDI' ! Burundi
        let $NationalityCode    = '455'
     when = 'CMR' ! Cameroon
        let $NationalityCode    = '456'
     when = 'CPV' ! Cape Verde
        let $NationalityCode    = '457'
     when = 'CAF' ! Central African Rep
        let $NationalityCode    = '458'
     when = 'TCD' ! Chad
        let $NationalityCode    = '459'
     when = 'COM' ! Comoros
        let $NationalityCode    = '460'
     when = 'COG' ! Congo
        let $NationalityCode    = '461'
     when = 'GNQ' ! Equatorial Guinea
        let $NationalityCode    = '462'
     when = 'GAB' ! Gabon
        let $NationalityCode    = '463'
     when = 'GMB' ! Gambia
        let $NationalityCode    = '464'
     when = 'GIN' ! Rep of Guinea
        let $NationalityCode    = '465'
     when = 'GNB' ! Rep of Guinea-Bissau
        let $NationalityCode    = '466'
     when = 'LSO' ! Kingdom of Lesotho
        let $NationalityCode    = '467'
     when = 'MWI' ! Malawi
        let $NationalityCode    = '468'
     when = 'MLI' ! Mali
        let $NationalityCode    = '469'
     when = 'MRT' ! Mauritania
        let $NationalityCode    = '470'
     when = 'NAM' ! Namibia
        let $NationalityCode    = '471'
     when = 'NER' ! Niger
        let $NationalityCode    = '472'
     when = 'RWA' ! Rwanda
        let $NationalityCode    = '473'
     when = 'STP' ! Sao Tome and Principe
        let $NationalityCode    = '474'
     when = 'SEN' ! Senegal
        let $NationalityCode    = '475'
     when = 'SYC' ! Seychelles
        let $NationalityCode    = '476'
     when = 'SLE' ! Sierra Leone
        let $NationalityCode    = '477'
     when = 'ZAF' ! South Africa
        let $NationalityCode    = '478'
     when = 'ESH' ! Western Sahara
        let $NationalityCode    = '479'
     when = 'SWZ' ! Swaziland
        let $NationalityCode    = '480'
     when = 'TGO' ! Togo
        let $NationalityCode    = '481'
     when = 'ZWE' ! Zimbabwe
        let $NationalityCode    = '483'
     when = 'SHN' ! St. Helena
        let $NationalityCode    = '484'
     when = 'CAN' ! Canada
        let $NationalityCode    = '501'
     when = 'PRI' ! Puerto Rico
        let $NationalityCode    = '502'
     when = 'UMI' ! US Minor Outlaying Islands
        let $NationalityCode    = '504'
     when = 'SPM' ! St. Pierre
        let $NationalityCode    = '505'
     when = 'ARG' ! Argentina
        let $NationalityCode    = '601'
     when = 'BRA' ! Brazil
        let $NationalityCode    = '602'
     when = 'CHL' ! Chile
        let $NationalityCode    = '603'
     when = 'COL' ! Colombia
        let $NationalityCode    = '604'
     when = 'ECU' ! Ecuador
        let $NationalityCode    = '605'
     when = 'MEX' ! Mexico
        let $NationalityCode    = '606'
     when = 'PRY' ! Paraguay
        let $NationalityCode    = '607'
     when = 'PER' ! Peru
        let $NationalityCode    = '608'
     when = 'URY' ! Uruguay
        let $NationalityCode    = '609'
     when = 'VEN' ! Venezuela
        let $NationalityCode    = '610'
     when = 'CUB' ! Cuba
        let $NationalityCode    = '621'
     when = 'DOM' ! Dominican Republic
        let $NationalityCode    = '622'
     when = 'ANT' ! Netherlands Antilles
        let $NationalityCode    = '623'
     when = 'PAN' ! Panama
        let $NationalityCode    = '624'
     when = 'ABW' ! Aruba
        let $NationalityCode    = '625'
     when = 'BHS' ! Bahamas Island
        let $NationalityCode    = '641'
     when = 'BRB' ! Barbados
        let $NationalityCode    = '642'
     when = 'BLZ' ! Belize
        let $NationalityCode    = '643'
     when = 'BMU' ! Bermuda
        let $NationalityCode    = '645'
     when = 'BOL' ! Bolivia
        let $NationalityCode    = '646'
     when = 'CYM' ! Cayman Islands
        let $NationalityCode    = '647'
     when = 'CRI' ! Costa Rica
        let $NationalityCode    = '648'
     when = 'DMA' ! Dominica
        let $NationalityCode    = '649'
     when = 'SLV' ! El Salvador
        let $NationalityCode    = '650'
     when = 'FLK' ! Falkland Island
        let $NationalityCode    = '651'
     when = 'GUF' ! French Guiana
        let $NationalityCode    = '652'
     when = 'GLP' ! Guadeloupe
        let $NationalityCode    = '654'
     when = 'GTM' ! Guatemala
        let $NationalityCode    = '655'
     when = 'GUY' ! Guyana
        let $NationalityCode    = '656'
     when = 'HTI' ! Haiti
        let $NationalityCode    = '657'
     when = 'HND' ! Honduras
        let $NationalityCode    = '658'
     when = 'JAM' ! Jamaica
        let $NationalityCode    = '659'
     when = 'NIC' ! Nicaragua
        let $NationalityCode    = '660'
     when = 'MTQ' ! Martinique
        let $NationalityCode    = '661'
     when = 'MSR' ! Montserrat
        let $NationalityCode    = '662'
     when = 'KNA' ! St Kitts Nevis
        let $NationalityCode    = '663'
     when = 'LCA' ! St. Lucia
        let $NationalityCode    = '664'
     when = 'SUR' ! Surinam
        let $NationalityCode    = '666'
     when = 'TTO' ! Trinidad and Tobago
        let $NationalityCode    = '667'
     when = 'TCA' ! Turks and Caicos Islands
        let $NationalityCode    = '668'
     when = 'VIR' ! Virgin Islands US
        let $NationalityCode    = '669'
     when = 'AIA' ! Anguilla
        let $NationalityCode    = '670'
     when = 'VGB' ! British Virgin Islands
        let $NationalityCode    = '671'
     when = 'FJI' ! Fiji
        let $NationalityCode    = '702'
     when = 'URU' ! Nauru
        let $NationalityCode    = '703'
     when = 'NCL' ! New Caledonia
        let $NationalityCode    = '704'
     when = 'PNG' ! Papua New Guinea
        let $NationalityCode    = '706'
     when = 'WSM' ! Western Samoa
        let $NationalityCode    = '707'
     when = 'IOT' ! British Indian Ocean Territory
        let $NationalityCode    = '708'
     when = 'CXR' ! Christmas Island
        let $NationalityCode    = '709'
     when = 'CCK' ! Cocos Island
        let $NationalityCode    = '710'
     when = 'ATF' ! French Southern Territory
        let $NationalityCode    = '711'
     when = 'HMD' ! Heard and McDonald Island
        let $NationalityCode    = '712'
     when = 'NFK' ! Norfolk island
        let $NationalityCode    = '713'
     when = 'ASM' ! American Samoa
        let $NationalityCode    = '721'
     when = 'COK' ! Cook Island
        let $NationalityCode    = '722'
     when = 'PYF' ! French Polynesia
        let $NationalityCode    = '723'
     when = 'GUM' ! Guam
        let $NationalityCode    = '724'
     when = 'KIR' ! Kiribati
        let $NationalityCode    = '725'
     when = 'NIU' ! Niue
        let $NationalityCode    = '726'
     when = 'PCN' ! Pitcairn
        let $NationalityCode    = '727'
     when = 'SLB' ! Solomon Islands
        let $NationalityCode    = '728'
     when = 'TKL' ! Tokelau
        let $NationalityCode    = '729'
     when = 'TON' ! Tonga
        let $NationalityCode    = '730'
     when = 'TUV' ! Tuvalu
        let $NationalityCode    = '731'
     when = 'VUT' ! Vanuatu
        let $NationalityCode    = '732'
     when = 'WLF' ! Wallis and Futuna
        let $NationalityCode    = '733'
     when = 'MNP' ! North Mariana Islands
        let $NationalityCode    = '734'
     when = 'MHL' ! Marshall Islands
        let $NationalityCode    = '735'
     when = 'FSM' ! Micronesia
        let $NationalityCode    = '736'
     when = 'PLW' ! Palau
        let $NationalityCode    = '737'
  when-other
    let $NationalityCode    = '999'
end-evaluate

end-procedure


!***********************************************************************
! Procedure: Dummy-Esop                                                *
!            This procedure writes dummy ESOP entries.                 *
!***********************************************************************
begin-procedure  Dummy-Esop
If #ESOP_Cnt  <  16

!13 Line Number ESOP Occurrence

  let $Esop_Cnt = edit(#Esop_Cnt, '88')
  let $Esop_Cnt = translate($Esop_Cnt,'.','')
  let $Esop_Cnt = ltrim($Esop_Cnt,' ')
  let $Esop_Cnt = lpad($Esop_Cnt,1,'0')
  do Write-Entry-Detail(12,'ESOP','','','','','','','','','','')
  do Write-Entry-Detail(19,'304','0','','','','','','','','','')
  do Write-Entry-Detail(19,'305','0','','','','','','','','','')
  do Write-Entry-Detail(19,'351','0','','','','','','','','','')
  do Write-Entry-Detail(19,'352','0','','','','','','','','','')


  let #ESOP_Cnt     =  #ESOP_Cnt + 1
  let  $ESOP_Done  =  'Y'
end-if
      let  $ESOP_Done  =  'Y'

end-procedure



!***********************************************************************
! Procedure: Dummy-EEsop                                                *
!            This procedure writes dummy EESOP entries.                 *
!***********************************************************************
begin-procedure Dummy-EEsop
 If #EESOP_Cnt  <  16

!21 Line Number EESOP Occurrence

  let $Eesop_Cnt = edit(#Eesop_Cnt, '99')
  let $Eesop_Cnt = translate($Eesop_Cnt,'.','')
  let $Eesop_Cnt = ltrim($Eesop_Cnt,' ')

   do Write-Entry-Detail(20,'EESOP','','','','','','','','','','')
   do Write-Entry-Detail(27,'317','0','','','','','','','','','')
   do Write-Entry-Detail(27,'318','0','','','','','','','','','')
   do Write-Entry-Detail(27,'319','0','','','','','','','','','')
   do Write-Entry-Detail(27,'353','0','','','','','','','','','')
   do Write-Entry-Detail(27,'354','0','','','','','','','','','')
   do Write-Entry-Detail(27,'355','0','','','','','','','','','')

  let #EESOP_Cnt     =  #EESOP_Cnt + 1
  let $EESOP_Done = 'Y'
 end-if

 let  $EESOP_Done = 'Y'

end-procedure


!***********************************************************************
! Procedure: Dummy-Csop                                                *
!            This procedure writes dummy CSOP entries.                 *
!***********************************************************************
begin-procedure Dummy-Csop

If #CSOP_Cnt  < 16

!29 Line Number CSOP Occurrence

  let $Csop_Cnt = edit(#Csop_Cnt, '88')
  let $Csop_Cnt = translate($Csop_Cnt,'.','')
  let $Csop_Cnt = ltrim($Csop_Cnt,' ')
  let $Csop_Cnt = lpad($Csop_Cnt,1,'0')

   do Calc-Total-NSOP
   do Write-Entry-Detail(28,'CSOP','','','','','','','','','','')
   do Write-Entry-Detail(35,'337','0','','','','','','','','','')
   do Write-Entry-Detail(35,'338','0','','','','','','','','','')
   do Write-Entry-Detail(35,'339','0','','','','','','','','','')

   let $GTot_Gross_Gain_Before = edit((#GTot_Gross_Gain_Before),'888888888.88')
   let $GTot_Gross_Gain_Before = ltrim($GTot_Gross_Gain_Before,' ')

   do Write-Entry-Detail(35,'601',$GTot_Gross_Gain_Before,'','','','','','','','','')
   do Write-Entry-Detail(35,'356','0','','','','','','','','','')
   do Write-Entry-Detail(35,'357','0','','','','','','','','','')
   do Write-Entry-Detail(35,'358','0','','','','','','','','','')

   let $GTot_Gross_Gain_After = edit((#GTot_Gross_Gain_After),'888888888.88')
   let $GTot_Gross_Gain_After = ltrim($GTot_Gross_Gain_After,' ')

   do Write-Entry-Detail(35,'602',$GTot_Gross_Gain_After,'','','','','','','','','')

   let $GTot_Gross_GNex_Before = edit((#GTot_Gross_GNex_Before),'8888888888.88')
   let $GTot_Gross_GNex_Before = ltrim($GTot_Gross_GNex_Before,' ')

   do Write-Entry-Detail(35,'603',$GTot_Gross_GNex_Before,'','','','','','','','','')

   let $GTot_Gross_GNex_After = edit((#GTot_Gross_GNex_After),'8888888888.88')
   let $GTot_Gross_GNex_After = ltrim($GTot_Gross_GNex_After,' ')

   do Write-Entry-Detail(35,'604',$GTot_Gross_GNex_After,'','','','','','','','','')

  let #CSOP_Cnt     =  #CSOP_Cnt + 1
  let  $CSOP_Done  =  'Y'

end-if
      let  $CSOP_Done  =  'Y'

end-procedure

!***********************************************************************
! Procedure: Dummy-Nsop                                                *
!            This procedure writes dummy NSOP entries.                 *
!***********************************************************************
begin-procedure Dummy-Nsop

If #NSOP_Cnt  <  16

!29 Line Number CSOP Occurrence

  let $Nsop_Cnt = edit(#Nsop_Cnt, '88')
  let $Nsop_Cnt = translate($Nsop_Cnt,'.','')
  let $Nsop_Cnt = ltrim($Nsop_Cnt,' ')
  let $Nsop_Cnt = lpad($Nsop_Cnt,1,'0')

  !32 Monetary Amounts
   do Write-Entry-Detail(36,'NSOP','','','','','','','','','','')
   do Write-Entry-Detail(43,'346','0','','','','','','','','','')
   do Write-Entry-Detail(43,'347','0','','','','','','','','','')
   do Write-Entry-Detail(43,'348','0','','','','','','','','','')

  let #NSOP_Cnt     =  #NSOP_Cnt + 1
  let  $NSOP_Done  =  'Y'

end-if
      let  $NSOP_Done  =  'Y'

end-procedure


!***********************************************************************
! Procedure: Get-Employee-Designation                                  *
!            This procedure gets the employee designation.             *
!***********************************************************************
begin-procedure Get-Employee-Designation
!get Designation of Authorised Person

begin-SELECT
T.EMPL_STATUS
T.EMPL_RCD
TC.DESCR
 FROM PS_JOBCODE_TBL TC
    , PS_JOB T
    , PS_JOB_JR TJ
WHERE TC.JOBCODE  = T.JOBCODE
  AND TC.SETID    = T.SETID_JOBCODE
  AND T.EMPLID    = $Emplid
  AND TJ.EMPLID   = T.EMPLID
  AND TJ.EMPL_RCD = T.EMPL_RCD
  AND TJ.EFFDT    = T.EFFDT
  AND TJ.EFFSEQ   = T.EFFSEQ
  AND TJ.BALANCE_GRP_NUM = $Bal_Grp_Num
  AND T.EFFDT     = (SELECT MAX(J1.EFFDT)
                       FROM PS_JOB J1
                      WHERE J1.EMPLID = $Emplid
                        AND J1.EMPL_RCD = T.EMPL_RCD
                        AND J1.EFFDT <= $YrEndSrch_Dt)
  AND T.EFFSEQ    = (SELECT MAX(J2.EFFSEQ)
                       FROM PS_JOB J2
                      WHERE J2.EMPLID = $Emplid
                        AND J2.EMPL_RCD = T.EMPL_RCD
                        AND J2.EFFDT = T.EFFDT)
 ORDER BY T.EMPL_STATUS ASC, T.EMPL_RCD DESC
end-SELECT

 let $EmployeeDesig  = rtrim(&TC.DESCR, ' ')

end-procedure

!
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for Date Arithmetic
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'gpsgirrc.sqc'  !Select-Parameters procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
