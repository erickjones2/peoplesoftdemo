!***********************************************************************
!  GPGBRTEE.SQC - RETRIEVE EMPLOYEE DATA                               *
!                      Tax Year 2001/2002                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:04:06:08                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!  Date         Modification
!  ----         ------------
!  03/2001      Changes in WHERE Clause to consider Version and Revision Number
!               + misc. enhancements
!  10/2001      Change P45 Reporting values
!  09/2002      Setup GPGB_PYENT
!  10/2002      Change date format; new procedure for EE address
!  07/2004      Made changes as required by the splitup of GPGB_EE_STDTLS record 
!               into GPGB_EE_TAX, GPGB_EE_NI and GPGB_EE_TAX_NTS.
!  08/2005      Statutory modifications for 2004/2005; Modified to print NI 
!               as taxcode if earnings b/w LEL and ET 
!
!*=================================================================
! Procedure     : RETRIEVE EMPLOYEE DATA                          !
! Descr         : Retrieves information for all selected Employees!
!
! >>>>>           GP Accumulators Results for                     !
! >>>>>           GBGPP11A.sqr                                    !
!                 GPGBP11B.sqr                                    !
!                 GPGBP14.SQR
!                 GPGBP60.SQR
!*=================================================================

begin-procedure RETRIEVE-EMPLOYEE-DATA ($SELECTED_EMPLOYEE,
                #SELECTED_TAX_PERIOD, $SELECTED_FREQUENCY, :$PERIOD, :$NI_CATEGORY,
                :$EMPLID, :$PAY_ENTITY)

        let $ProcedureName      = 'RETRIEVE-EMPLOYEE-DATA'
        SHOW 'PROCEDURE->' $ProcedureName  '<>' $SELECTED_EMPLOYEE

        LET $PERIOD  = 'NEW'
        LET $REFUND  = ' '
! 12/01        LET $_PRINTA = 'N'
        LET $_PRINTB = 'N'

!**********************************
! Define Array for NI Categories         03/2001
  if #NI_Def <> 1
    Do DEFINE-NI-CATEGORY
    Let #NI_Def = 1
  end-if
!**********************************

BEGIN-SELECT

GP.PIN_CODE           &PIN_CODE
GRA.CALC_RSLT_VAL     &CALC_RSLT_VAL
GRA.EMPLID            &EMPLID
GER.GPGB_TAX_PERIOD   &TAX_PERIOD
GER.GP_PAYGROUP       &PAYGROUP
GER.PAY_ENTITY        &PAY_ENTITY
GER.FREQUENCY_ID      &FREQUENCY_ID
GER.DEPTID            &DEPTID
GER.GPGB_NI_CATEGORY  &NI_CATEGORY
GER.TAX_CODE_UK       &TAX_CODE
GER.TAX_BASIS_UK      &TAX_BASIS_UK               ! 03/2001
GER.NATIONAL_ID       &NATIONAL_ID
GER.ADDRESS1          &ADDRESS1
GER.ADDRESS2          &ADDRESS2
GER.ADDRESS3          &ADDRESS3
GER.ADDRESS4          &ADDRESS4
GER.COUNTY            &COUNTY
GER.POSTAL            &POSTAL
GPY.DESCR             &DESCR
GPY.DESCRSHORT        &DESCRSHORT
GPD.ADDRESS1          &EADDRESS1
GPD.ADDRESS2          &EADDRESS2
GPD.ADDRESS3          &EADDRESS3
GPD.ADDRESS4          &EADDRESS4
GPD.COUNTY            &ECOUNTY
GPD.POSTAL            &EPOSTAL
PD.FIRST_NAME         &FIRSTNAME
PD.MIDDLE_NAME        &MIDDLENAME
PD.LAST_NAME          &LAST_NAME
PD.BIRTHDATE          &DOB
PD.SEX                &SEX
PD.NAME_PREFIX        &NAME_PREFIX
! JJ.TAX_BASIS_UK       &TAX_BASIS_UK              03/2001   now taken from GER.TAX_BASIS_UK
JTX.GPGB_P45_PAY_TD   &GPGB_P45_PAY_TD
JTX.GPGB_P45_TAX_TD   &GPGB_P45_TAX_TD
JNI.GPGB_SCON         &GPGB_SCON
! E.HIRE_DT             &HIRE_DT                   03/2001   moved to gpgbslee.sqc
! E.TERMINATION_DT      &TERM_DT                   03/2001   moved to gpgbslee.sqc
GPPS.PYMT_DT          &PYMT_DT

       ! Retrieved from Personal Data (PS)
        LET $_FORENAME         = RTRIM(&FIRSTNAME , ' ')
        LET $_MIDDLENAME       = RTRIM(&MIDDLENAME, ' ')
        LET $_SURNAME          = &LAST_NAME
        LET $_FORENAMES        = $_FORENAME || ' ' || $_MIDDLENAME
        LET $_FULLNAME         = $_FORENAME || ' ' || $_SURNAME
        LET $_DOB              = DATETOSTR(&DOB, 'DD/MM/YYYY')
        LET $_DOB_SP           = DATETOSTR(&DOB, 'DD MM YYYY')             ! 10/2002
        LET $_SEX              = &SEX
        LET $_NAMEPREFIX       = &NAME_PREFIX

       ! Retrieved from Pay Entity(GPY & GPD)
        LET $_DESCR            = &DESCR
        LET $_DESCRSHORT       = &DESCRSHORT
        LET $_EADDRESS1        = &EADDRESS1
        LET $_EADDRESS2        = &EADDRESS2
        LET $_EADDRESS3        = &EADDRESS3
        LET $_EADDRESS4        = &EADDRESS4
        LET $_ECOUNTY          = &ECOUNTY
        LET $_EPOSTAL          = &EPOSTAL

       ! Retrieved from Pin Table (GP) & Acum RSLT (GRA)
        LET $PIN_CODE          = RTRIM(&PIN_CODE,' ')
        !LET $_PIN_CODE         = RTRIM(&PIN_CODE,' ') Changed this to local might effect other SQR
        LET $RSLT              = &CALC_RSLT_VAL
        LET $_EMPLID           = &EMPLID

       ! Retrieved from UK RSLT (GER)
        LET $_TAX_PERIOD       = EDIT(&TAX_PERIOD,'99')
        LET $PAYGROUP          = &PAYGROUP
        LET $PAY_ENTITY        = &PAY_ENTITY
        LET $_FREQUENCY_ID     = &FREQUENCY_ID                         ! 10/2002
        LET $PERIOD            = $_FREQUENCY_ID || $_TAX_PERIOD
        LET $_DEPTID           = &DEPTID
        LET $NI_CATEGORY       = RTRIM(&NI_CATEGORY,' ')
        LET $_TAXCODE          = &TAX_CODE
        LET #_TAX_BASIS        = &TAX_BASIS_UK
        LET $_NI               = &NATIONAL_ID
        LET $_ADDRESS1         = &ADDRESS1
        LET $_ADDRESS2         = &ADDRESS2
        LET $_ADDRESS3         = &ADDRESS3
        LET $_ADDRESS4         = &ADDRESS4
        LET $_COUNTY           = &COUNTY
        LET $_POSTAL           = &POSTAL

       ! Retrieved from Statutory Details (JJ)
        LET #_P45_PAY_TD       = &GPGB_P45_PAY_TD
        LET #_P45_TAX_TD       = &GPGB_P45_TAX_TD
        LET $_SCON             = &GPGB_SCON

        Do SELECT-RSLT-ACUM($PIN_CODE,$RSLT)

FROM PS_GP_PIN GP,
PS_GPGB_EE_RSLT GER,
PS_GP_RSLT_ACUM GRA,
PS_PERSONAL_DT_FST PD,
PS_GPGB_EE_TAX JTX,
PS_GPGB_EE_NI JNI,
PS_GP_PYENT GPY,
PS_GP_PYENT_DTL GPD,
PS_GP_PYE_PRC_STAT GPPS

WHERE GP.PIN_NUM = GRA.PIN_NUM

AND GRA.EMPLID = GER.EMPLID
AND GRA.CAL_RUN_ID = GER.CAL_RUN_ID
AND GRA.EMPL_RCD = GER.EMPL_RCD
AND GRA.GP_PAYGROUP = GER.GP_PAYGROUP
AND GRA.CAL_ID = GER.CAL_ID
AND GRA.RSLT_SEG_NUM = GER.RSLT_SEG_NUM
AND (GRA.USER_KEY2 = GER.GPGB_NI_CATEGORY OR GRA.USER_KEY2 <= ' ')

AND GER.EMPLID = $SELECTED_EMPLOYEE
AND GER.GPGB_TAX_PERIOD = #SELECTED_TAX_PERIOD
AND GER.FREQUENCY_ID = $SELECTED_FREQUENCY
AND GER.GPGB_TAX_BGN_YR = #_Pnl_Tax_Year

AND GPY.PAY_ENTITY = GER.PAY_ENTITY
AND GPD.PAY_ENTITY = GPY.PAY_ENTITY

AND PD.EMPLID = GER.EMPLID

AND GPPS.EMPLID      = GER.EMPLID
AND GPPS.CAL_RUN_ID  = GER.CAL_RUN_ID
AND GPPS.EMPL_RCD    = GER.EMPL_RCD
AND GPPS.CAL_ID      = GER.CAL_ID
AND GPPS.GP_PAYGROUP = GER.GP_PAYGROUP
AND GPPS.CALC_TYPE   = 'P'
AND GPPS.RSLT_VER_NUM = (SELECT MAX (X.RSLT_VER_NUM) FROM PS_GP_PYE_PRC_STAT X
                                WHERE GPPS.EMPLID       = X.EMPLID
                         !      AND GPPS.CAL_RUN_ID     = X.CAL_RUN_ID         --> Non selected to get the last calc.
                                AND GPPS.EMPL_RCD       = X.EMPL_RCD
                                AND GPPS.CAL_ID         = X.CAL_ID
                                AND GPPS.GP_PAYGROUP    = X.GP_PAYGROUP
                                AND GPPS.CALC_TYPE      = X.CALC_TYPE)
AND GPPS.RSLT_REV_NUM = (SELECT MAX (X.RSLT_REV_NUM) FROM PS_GP_PYE_PRC_STAT X
                                WHERE GPPS.EMPLID       = X.EMPLID
                         !      AND GPPS.CAL_RUN_ID     = X.CAL_RUN_ID         --> Non selected to get the last calc.
                                AND GPPS.EMPL_RCD       = X.EMPL_RCD
                                AND GPPS.CAL_ID         = X.CAL_ID
                                AND GPPS.GP_PAYGROUP    = X.GP_PAYGROUP
                                AND GPPS.CALC_TYPE      = X.CALC_TYPE)

AND JTX.EMPLID = GER.EMPLID
AND JTX.EMPL_RCD = GER.EMPL_RCD
AND JTX.EFFDT = (SELECT MAX(JTX2.EFFDT)
                FROM PS_GPGB_EE_TAX JTX2
                WHERE JTX2.EMPLID = JTX.EMPLID
                AND JTX2.EMPL_RCD = JTX.EMPL_RCD
                AND JTX2.EFFDT <= GPPS.PYMT_DT)
AND JTX.EFFSEQ= (SELECT MAX(JTX3.EFFSEQ)
                FROM PS_GPGB_EE_TAX JTX3
                WHERE JTX3.EMPLID = JTX.EMPLID
                AND JTX3.EMPL_RCD = JTX.EMPL_RCD
                AND JTX3.EFFDT = JTX.EFFDT)
AND JNI.EMPLID = GER.EMPLID
AND JNI.EMPL_RCD = GER.EMPL_RCD
AND JNI.EFFDT = (SELECT MAX(JNI2.EFFDT)
                FROM PS_GPGB_EE_NI JNI2
                WHERE JNI2.EMPLID = JNI.EMPLID
                AND JNI2.EMPL_RCD = JNI.EMPL_RCD
                AND JNI2.EFFDT <= GPPS.PYMT_DT)
AND GP.PIN_CODE IN (                   'NI AC LEL 1A PTD GBR',
                    'NI AC LEL PTD GBR',
                                       'NI AC LEL 1B PTD GBR',
                    'NI AC E(E)T PTD GBR',
                                       'NI AC EET 1C PTD GBR',
                    'NI AC ERT 1D PTD GBR',
                    'NI AC UEL PTD GBR',
                                        'NI DD EES FPDA GBR',
                    'NI DD EES PTD GBR',
                                        'NI DD ERS FPDA GBR',
                    'NI DD ERS PTD GBR',
                                        'NI DD EESRBT FPDA GBR',
                    'NI DD EESRBT PTD GBR',
                                        'NI DD ERSRBT FPDA GBR',
                    'NI DD ERSRBT PTD GBR',
                    'SSP ER PAY PTD GBR',
                    'SMP AC PAY PTD GBR',
                    'SPPA ER PAY_PTD GBR',
                    'SPPB ER PAY_PTD GBR',
                    'SAP ER PAY_PTD GBR',
                                       'NI AC LEL 1A YTD GBR',
                    'NI AC LEL YTD GBR',
                                       'NI AC LEL 1B YTD GBR',
                    'NI AC E(E)T YTD GBR',
                                       'NI AC EET 1C YTD GBR',
                                       'NI AC ERT 1D YTD GBR',
                    'NI AC UEL YTD GBR',
                                        'NI DD EES FYDA GBR',
                    'NI DD EES YTD GBR',
                                        'NI DD ERS FYDA GBR',
                    'NI DD ERS YTD GBR',
                                        'NI DD EESRBT FYDA GBR',
                    'NI DD EESRBT YTD GBR',
                                        'NI DD ERSRBT FYDA GBR',
                    'NI DD ERSRBT YTD GBR',
                    'SSP ER PAY YTD GBR',
                    'SMP ER PAY YTD GBR',
                    'SPPA ER PAY_YTD GBR',
                    'SPPB ER PAY_YTD GBR',
                    'SAP ER PAY_YTD GBR',
                                        'SL DD AMOUNT FPDA GBR',
                    'SL DD AMOUNT PTD GBR',
                                        'SL DD AMOUNT FYDA GBR',
                    'SL DD AMOUNT YTD GBR',
                    'GBR AC GRTX PTD GBR',
                    'GBR AC GRTX YTD GBR',
                    'TAX AC TXPD PTD GBR',
                    'TAX AC TXPD YTD GBR',
                                        'TC AC TOTAL PAID GBR',
                    'TC AC TOT PAID PTD GBR',
                    'TC AC TOT PAID YTD GBR',
                    'P45 AC REPORT PAY GBR' ,
                    'P45 AC REPORT TAX GBR' ,
                    'TAX DD PAYE PTD GBR',
                    'TAX DD PAYE YTD GBR')
ORDER BY GRA.EMPLID, GER.FREQUENCY_ID, GER.GPGB_TAX_PERIOD

 !*************************************************************
 ! Modified in above 'IN' list:
 !  'SMP ER PAY PTD GBR' renamed to 'SMP AC PAY PTD GBR'
 !  'TC ER TXCRD1 GBR' is an 'ER'
 !  'TAX VR WK53IND GBR' is a 'VR'
 !  'NI AC ERT 1D PTD GBR' and 'NI AC ERT 1D YTD GBR' removed
 !   --> at least not used in the selection
 ! Nota !!!!
 ! This list should match the one in the SELECT-RSLT-ACUM
 !*************************************************************

END-SELECT

        SHOW $_FULLNAME
        IF $PERIOD <> 'NEW'                                                     ! 10/2002
                DO LOAD-NI-CATEGORY($NI_CATEGORY, $PERIOD)                      ! 03/2001
        END-IF
        DO PRINT-REPORT ($PIN_CODE, $PERIOD, $NI_CATEGORY, $EMPLID,
        $PAY_ENTITY)

end-procedure RETRIEVE-EMPLOYEE-DATA


!*===================================================================
! Procedure     : SELECT-RSLT-ACUM                                  !
! Descr         : Retrieve/evaluate selected Accumulators           !
! Nota !!!!       The accum refered in the 'When' should match the  !
!                 'IN' list of the RETRIEVE_EMPLOYEE_DATA procedure !
!*===================================================================
begin-procedure SELECT-RSLT-ACUM($PIN_CODE,$RSLT)

        !------------**********************************
        EVALUATE $PIN_CODE
        WHEN = 'NI AC LEL 1A PTD GBR'
        WHEN = 'NI AC LEL PTD GBR'
                LET #_VAL1A = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                SHOW 'RED 1A->' #_VAL1A
                BREAK
        WHEN = 'NI AC LEL 1A YTD GBR'
        WHEN = 'NI AC LEL YTD GBR'
                LET #_VAL1AY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'NI AC LEL 1B PTD GBR'
        WHEN = 'NI AC E(E)T PTD GBR'
                LET #_VAL1B = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                SHOW 'RED 1B->' #_VAL1B
                BREAK
        WHEN = 'NI AC LEL 1B YTD GBR'
        WHEN = 'NI AC E(E)T YTD GBR'
                LET #_VAL1BY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
 ! 03/01       WHEN = 'NI AC EET 1C PTD GBR'
 ! 03/01       WHEN = 'NI AC EET PTD GBR'
 ! 03/01               LET #_VAL1C = TO_NUMBER($RSLT)
 ! 03/01               LET $_PRINTA = 'Y'
 ! 03/01               SHOW 'RED 1C->' #_VAL1C
 ! 03/01               BREAK
 ! 03/01       WHEN = 'NI AC EET 1C YTD GBR'
 ! 03/01       WHEN = 'NI AC EET YTD GBR'
 ! 03/01               LET #_VAL1CY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
 ! 03/01               BREAK
        !------------
        WHEN = 'NI AC ERT 1D PTD GBR'
        WHEN = 'NI AC UEL PTD GBR'
                LET #_VAL1C = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                SHOW 'RED 1C->' #_VAL1C
                BREAK
        WHEN = 'NI AC ERT 1D YTD GBR'
        WHEN = 'NI AC UEL YTD GBR'
                LET #_VAL1CY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'NI DD ERS FPDA GBR'
        WHEN = 'NI DD ERS PTD GBR'
                LET #_VAL1D = TO_NUMBER($RSLT)
                LET #_NI_DD_ERS_PTD = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'NI DD ERS FYDA GBR'
        WHEN = 'NI DD ERS YTD GBR'
                LET #_VAL1DY = TO_NUMBER($RSLT)
                LET #_NI_DD_ERS_YTD = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'NI DD EES FPDA GBR'
        WHEN = 'NI DD EES PTD GBR'
                LET #_VAL1E = TO_NUMBER($RSLT)
                LET #_NI_DD_EES_PTD = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'NI DD EES FYDA GBR'
        WHEN = 'NI DD EES YTD GBR'
                LET #_VAL1EY = TO_NUMBER($RSLT)
                LET #_NI_DD_EES_YTD = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'NI DD EESRBT FPDA GBR'
        WHEN = 'NI DD EESRBT PTD GBR'
                LET #_VAL1FF = TO_NUMBER($RSLT)
                LET #_NI_DD_EESRBT_PTD = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'NI DD EESRBT FYDA GBR'
        WHEN = 'NI DD EESRBT YTD GBR'
                LET #_VAL1FFY = TO_NUMBER($RSLT)
                LET #_NI_DD_EESRBT_YTD = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'NI DD ERSRBT FPDA GBR'
        WHEN = 'NI DD ERSRBT PTD GBR'
                LET #_VAL1GG = TO_NUMBER($RSLT)
                LET #_NI_DD_ERSRBT_PTD = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'NI DD ERSRBT FYDA GBR'
        WHEN = 'NI DD ERSRBT YTD GBR'
                LET #_VAL1GGY = TO_NUMBER($RSLT)
                LET #_NI_DD_ERSRBT_YTD = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'SSP ER PAY PTD GBR'
                LET #_VAL1F = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'SSP ER PAY YTD GBR'
                LET #_VAL1FY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'SMP AC PAY PTD GBR'
                LET #_VAL1G = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'SMP ER PAY YTD GBR'
                LET #_VAL1GY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
              !------------
        WHEN = 'SPPA ER PAY_PTD GBR'
                LET #_VAL1HA = TO_NUMBER($RSLT)
                LET #_SPPA_PTD = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'SPPA ER PAY_YTD GBR'
                LET #_VAL1HAY = TO_NUMBER($RSLT)
                LET #_SPPA_YTD = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'SPPB ER PAY_PTD GBR'
                LET #_VAL1HB = TO_NUMBER($RSLT)
                LET #_SPPB_PTD = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'SPPB ER PAY_YTD GBR'
                LET #_VAL1HBY = TO_NUMBER($RSLT)
                LET #_SPPB_YTD = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'SAP ER PAY_PTD GBR'
                LET #_VAL1I = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'SAP ER PAY_YTD GBR'
                LET #_VAL1IY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK        
        !------------
        WHEN = 'SL DD AMOUNT FPDA GBR'
        WHEN = 'SL DD AMOUNT PTD GBR'
                LET #_VAL1J = TO_NUMBER($RSLT)
                LET $_PRINTA = 'Y'
                BREAK
        WHEN = 'SL DD AMOUNT FYDA GBR'
        WHEN = 'SL DD AMOUNT YTD GBR'
                LET #_VAL1JY = TO_NUMBER($RSLT)
                LET $_PRINTA_Y = 'Y'
                BREAK
        !------------
        WHEN = 'GBR AC GRTX PTD GBR'
                LET #_VAL2 = TO_NUMBER($RSLT)
                LET $_PRINTB = 'Y'
                BREAK
        WHEN = 'GBR AC GRTX YTD GBR'
                LET #_VAL3 = TO_NUMBER($RSLT)
                LET $_PRINTB = 'Y'
                BREAK
        WHEN = 'TAX AC TXPD YTD GBR'
                LET #_TAX_AC_TXPD_YTD = TO_NUMBER($RSLT)
                LET $_PRINTB = 'Y'
                BREAK
        WHEN = 'TAX DD PAYE PTD GBR'
                LET #_VAL7 = TO_NUMBER($RSLT)
                IF  #_VAL7 < 0
                        LET #_VAL7 = ABS(TO_NUMBER($RSLT))
                        LET $_REFUND = 'R'
                ELSE
                        LET $_REFUND = ' '
                END-IF
                LET $_PRINTB = 'Y'
                BREAK
        WHEN = 'TAX DD PAYE YTD GBR'
                LET #_VAL7Y = TO_NUMBER($RSLT)
                BREAK
        !------------
        WHEN = 'TC AC TOTAL PAID GBR'
        WHEN = 'TC AC TOT PAID PTD GBR'
                   LET #_VAL9 = TO_NUMBER($RSLT)
                LET $_PRINTB = 'Y'
                BREAK
        WHEN = 'TC AC TOT PAID YTD GBR'
                LET #_VAL9Y = TO_NUMBER($RSLT)
                LET $_PRINTB = 'Y'
                BREAK
        !------------ 10/2001 - P45 Reporting
        WHEN = 'P45 AC REPORT PAY GBR'
                LET #_VALP45_PAY = TO_NUMBER($RSLT)
        BREAK
        WHEN = 'P45 AC REPORT TAX GBR'
                LET #_VALP45_TAX = TO_NUMBER($RSLT)
        BREAK
        !------------*************
        END-EVALUATE
       
        
        IF #_VAL1AY  > 0 AND #_VAL1B  > 0 AND  #_VAL1C = 0 
             LET  $_TAXCODE = 'NI' 
        END-IF    
        

end-procedure SELECT-RSLT-ACUM

!*=================================================================
! Procedure     : DEFINE-NI-CATEGORY                              !
! Descr         : Define Array for NI Categories                  !
! Nota !!!!       The last column of the array (#19) contain the  !
!                 grand total of all occurences                   !
!*=================================================================
begin-procedure DEFINE-NI-CATEGORY

   Create-Array name=NI_Category_ARR size=20
                field=NI_Code:char
                field=NI_Scon:char
                field=NI_Total:number:13

end-procedure DEFINE-NI-CATEGORY

!*=================================================================
! Procedure     : LOAD-NI-CATEGORY                                !
! Descr         : Load Array to totalize Ytd per NI Codes         !
!                 SSP, SMP and Student Loan are loaded in the     !
!                 Grand Total only (no split on NI code)          !
!                 Grand Total Calculation is stored in Column #19 !
!                 It is calculated when printing
!*=================================================================
begin-procedure LOAD-NI-CATEGORY($NI_CATEGORY,$PERIOD)

   LET #i = 0
   WHILE #i<18         ! (19 columns available, the 20th contains the grand total)

   Get $W_NI_Code From NI_Category_ARR(#i) NI_Code

        SHOW 'Array->' $W_NI_Code '<>' #i  '<>' $NI_CATEGORY   '< Period >'  $PERIOD
        SHOW '#_VAL1DY = ' #_VAL1DY


   if  $W_NI_Code = $NI_CATEGORY or $W_NI_Code <= ''
        Put $NI_CATEGORY Into NI_Category_ARR(#i) NI_Code
        Put #_VAL1AY Into NI_Category_ARR(#i) NI_Total(0)
        Put #_VAL1BY Into NI_Category_ARR(#i) NI_Total(1)
        Put #_VAL1CY Into NI_Category_ARR(#i) NI_Total(2)
   !    Put #_VAL1DY Into NI_Category_ARR(#i) NI_Total(3)
        Put #_NI_DD_ERS_YTD Into NI_Category_ARR(#i) NI_Total(3)
        Put #_VAL1EY Into NI_Category_ARR(#i) NI_Total(4)
        Put #_NI_DD_EESRBT_YTD Into NI_Category_ARR(#i) NI_Total(5)
        Put #_NI_DD_ERSRBT_YTD Into NI_Category_ARR(#i) NI_Total(6)
        Put $_SCON Into NI_Category_ARR(#i) NI_Scon
        Put #_VAL1FY Into NI_Category_ARR(19) NI_Total(7)
        Put #_VAL1GY Into NI_Category_ARR(19) NI_Total(8)
        Put #_VAL1HAY Into NI_Category_ARR(19) NI_Total(9)
        Put #_VAL1HBY Into NI_Category_ARR(19) NI_Total(10)
        Put #_VAL1IY Into NI_Category_ARR(19) NI_Total(11)
        Put #_VAL1JY Into NI_Category_ARR(19) NI_Total(12)
        BREAK
   end-if

   let #i = #i + 1
   END-WHILE

end-procedure LOAD-NI-CATEGORY
!*=================================================================
! Procedure     :GET-PAY-ENTITY
! Comment       :This procedure get informations stored in
!                the GP Pay Entity tables
!
!*=================================================================
begin-procedure GET-PAY-ENTITY

  if $AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $AsOfToday to $AsOfDate
  end-if

let $sql-statement = 'GET-PAY-ENTITY,Select,PS_GP_PYENT/PS_GP_PYENT_DTL/PS_GPGB_PYENT'
BEGIN-SELECT on-error=SQL-ERROR

GP_PYENT.DESCR,
GP_PYENT.DESCRSHORT,
GP_PYENT_DTL.ADDRESS1,
GP_PYENT_DTL.ADDRESS2,
GP_PYENT_DTL.ADDRESS3,
GP_PYENT_DTL.ADDRESS4,
GP_PYENT_DTL.CITY,
GP_PYENT_DTL.STATE,
GP_PYENT_DTL.POSTAL,
GP_PYENT_DTL.COUNTRY,
GPGB_PYENT.GPGB_ER_NAME,
GPGB_PYENT.GPGB_ER_TAXNUM,
GPGB_PYENT.GPGB_ER_TAX_DNAME,
GPGB_PYENT.GPGB_ER_PAYE_REF,
GPGB_PYENT.GPGB_ER_PERMIT_NUM

        let $PYENT_Descr      = rtrim(&GP_PYENT.DESCR,' ')
        let $PYENT_DescrShort = rtrim(&GP_PYENT.DESCRSHORT,' ')
        let $PYENT_Addr1      = rtrim(&GP_PYENT_DTL.ADDRESS1,' ')
        let $PYENT_Addr2      = rtrim(&GP_PYENT_DTL.ADDRESS2,' ')
        let $PYENT_Addr3      = rtrim(&GP_PYENT_DTL.ADDRESS3,' ')
        let $PYENT_Addr4      = rtrim(&GP_PYENT_DTL.ADDRESS4,' ')
        let $PYENT_City       = rtrim(&GP_PYENT_DTL.CITY,' ')
        let $PYENT_County     = rtrim(&GP_PYENT_DTL.STATE,' ')
        let $PYENT_PostCode   = rtrim(&GP_PYENT_DTL.POSTAL,' ')
        let $PYENT_Country    = rtrim(&GP_PYENT_DTL.COUNTRY,' ')
        let $PYENT_NAME       = rtrim(&GPGB_PYENT.GPGB_ER_NAME,' ')
        let #PYENT_TAXNUM     = &GPGB_PYENT.GPGB_ER_TAXNUM
        let $PYENT_TAX_DNAME  = rtrim(&GPGB_PYENT.GPGB_ER_TAX_DNAME,' ')
        let $PYENT_PAYE_REF   = rtrim(&GPGB_PYENT.GPGB_ER_PAYE_REF,' ')
        let $PYENT_PERMIT_NUM = rtrim(&GPGB_PYENT.GPGB_ER_PERMIT_NUM,' ')

        if  $PYENT_NAME <= ' '
            let $PYENT_NAME = $PYENT_Descr
        end-if



FROM  PS_GP_PYENT GP_PYENT,
      PS_GP_PYENT_DTL GP_PYENT_DTL,
      PS_GPGB_PYENT GPGB_PYENT

WHERE GP_PYENT.PAY_ENTITY     = $MAIN_SEL_PAY_ENTITY
AND   GP_PYENT_DTL.PAY_ENTITY = GP_PYENT.PAY_ENTITY
AND   GP_PYENT_DTL.EFFDT      = (SELECT MAX(X.EFFDT)
                                FROM   PS_GP_PYENT_DTL X
                                WHERE  X.PAY_ENTITY = GP_PYENT_DTL.PAY_ENTITY
                                AND    X.EFFDT     <= $AsOfDate)
AND   GPGB_PYENT.PAY_ENTITY   = GP_PYENT.PAY_ENTITY

end-SELECT

end-procedure GET-PAY-ENTITY

!*=========================================================================
! Procedure     :GET-EE-ADDRESS
! Comment       :This procedure get informations stored in
!                the Addresses table
!                Input Parameters:   Employee ID
!                                    Address Type ('HOME', 'MAIL', etc...)
!
!*==========================================================================
begin-procedure GET-EE-ADDRESS($Emplid, $Address_Type,:$EE_ADDRESS1,:$EE_ADDRESS2,:$EE_ADDRESS3,
                                :$EE_CITY, :$EE_POSTAL, :$EE_COUNTY, :$EE_COUNTRY)

 if $_AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $_AsOfToday to $_AsOfDate
 end-if

 if $Address_Type <= ''
    let $Address_Type = 'HOME'
 end-if

let $sql-statement = 'GET-EE-ADDRESS,Select,PS_EE_ADDRESS/PS_ADDRESSES'
BEGIN-SELECT on-error=SQL-ERROR
EE_ADDRESS.ADDRESS1,
EE_ADDRESS.ADDRESS2,
EE_ADDRESS.ADDRESS3,
EE_ADDRESS.ADDRESS4,
EE_ADDRESS.CITY,
EE_ADDRESS.STATE,
EE_ADDRESS.POSTAL,
EE_ADDRESS.COUNTRY

        LET $EE_ADDRESS1         = RTRIM(&EE_ADDRESS.ADDRESS1, ' ')
        LET $EE_ADDRESS2         = RTRIM(&EE_ADDRESS.ADDRESS2, ' ')
        LET $EE_ADDRESS3         = RTRIM(&EE_ADDRESS.ADDRESS3, ' ')
        LET $EE_CITY             = RTRIM(&EE_ADDRESS.CITY, ' ')
        LET $EE_POSTAL           = RTRIM(&EE_ADDRESS.POSTAL, ' ')
        LET $EE_COUNTY           = RTRIM(&EE_ADDRESS.STATE, ' ')
        LET $EE_COUNTRY          = RTRIM(&EE_ADDRESS.COUNTRY, ' ')

FROM PS_ADDRESSES EE_ADDRESS
WHERE EE_ADDRESS.EMPLID       = $Emplid
AND   EE_ADDRESS.ADDRESS_TYPE = $Address_Type
AND   EE_ADDRESS.EFFDT        = (SELECT MAX(X.EFFDT)
                                FROM   PS_ADDRESSES X
                                WHERE  X.EMPLID       = EE_ADDRESS.EMPLID
                                AND    X.ADDRESS_TYPE = EE_ADDRESS.ADDRESS_TYPE
                                AND    X.EFFDT       <= $_AsOfDate)

end-SELECT

end-procedure GET-EE-ADDRESS
