!***********************************************************************
! MXSTP006.SQR   STPS DC-3 Courses/Events Certificates List.           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:13:46:54                                 *
!       $Release:  HR92                                                *
!      $Revision:  102                                                 *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
  Type=HPLASERJET
  Font=5
  Point-Size=14
  Pitch=17
  Symbol-Set=19U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
  Orientation=Portrait
  Top-Margin= .35
  Left-Margin=.2
  Max-Lines=82
  Max-Columns=190
  Char-Width=3  !6.5  ! 4.3    ! 7.2
  Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
  Printer-Type=HPLASERJET
  LayOut=THIS_REPORT
 End-Declare
End-Setup

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
!  do Declare-Printer
  do Init-Report
  do Select-Parameters
  do Report
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  display 'V.2010#3'
  do Stdapi-Term
  !do Reset
end-report

begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'MXSTP006' to $ReportID
  let $ReportTitle = 'STPS DC-3 Constancia de Habilidades Laborales'
  display $ReportTitle
end-procedure Init-Report

begin-heading 1
  position  (1)
end-heading

begin-procedure Report
  do Get-Report-Data
  do Get-ER-Locations
  do Get-Program-Data
  do Get-Employee-Data
  !do Print-Format
end-procedure Report

begin-procedure Select-Parameters
begin-select
RC.COMPANY
RC.ESTABID
RC.NAME_MEX
RC.FROM_EMPLID_MEX
RC.TO_EMPLID_MEX
RC.PLAN_TYPE_MEX
RC.TRN_PROGRAM
RC.ACCUM_HRS
RC.COURSE_START_DT
RC.COURSE_END_DT
RC.INSTRUCTOR_ID

  let $Company      = &RC.COMPANY
  let $ESTABID    = rtrim(&RC.ESTABID,' ')
  let $Emp_Rep_Name = upper(&RC.NAME_MEX)
  let $From_Emplid  = rtrim(&RC.FROM_EMPLID_MEX,' ')
  let $To_Emplid    = rtrim(&RC.TO_EMPLID_MEX,' ')
  let $Plan_Type    = &RC.PLAN_TYPE_MEX
  let $Train_Prog   = &RC.TRN_PROGRAM
  let #Accum_Hrs    = &RC.ACCUM_HRS
  let $Instr_Id     = &RC.INSTRUCTOR_ID
  let $Start_Dt     = &RC.COURSE_START_DT
  let $End_Dt       = &RC.COURSE_END_DT
  do Convert-To-Dtu-Date($Start_Dt,$Start_Dt)
  do Convert-To-Dtu-Date($End_Dt,$End_Dt)

  let $IMS_ER_S  = substr($ESTABID,1,11)
  let $IMS_ER_1  = substr($IMS_ER_S,1,1)
  let $IMS_ER_2  = substr($IMS_ER_S,2,1)
  let $IMS_ER_3  = substr($IMS_ER_S,3,1)
  let $IMS_ER_4  = substr($IMS_ER_S,4,1)
  let $IMS_ER_5  = substr($IMS_ER_S,5,1)
  let $IMS_ER_6  = substr($IMS_ER_S,6,1)
  let $IMS_ER_7  = substr($IMS_ER_S,7,1)
  let $IMS_ER_8  = substr($IMS_ER_S,8,1)
  let $IMS_ER_9  = substr($IMS_ER_S,9,1)
  let $IMS_ER_10 = substr($IMS_ER_S,10,1)
  let $IMS_ER_11 = substr($IMS_ER_S,11,1)

  let $Start_Dt_Y1 = substr($Start_Dt,3,1)
  let $Start_Dt_Y2 = substr($Start_Dt,4,1)
  let $Start_Dt_M1 = substr($Start_Dt,6,1)
  let $Start_Dt_M2 = substr($Start_Dt,7,1)
  let $Start_Dt_D1 = substr($Start_Dt,9,1)
  let $Start_Dt_D2 = substr($Start_Dt,10,1)

  let $End_Dt_Y1 = substr($End_Dt,3,1)
  let $End_Dt_Y2 = substr($End_Dt,4,1)
  let $End_Dt_M1 = substr($End_Dt,6,1)
  let $End_Dt_M2 = substr($End_Dt,7,1)
  let $End_Dt_D1 = substr($End_Dt,9,1)
  let $End_Dt_D2 = substr($End_Dt,10,1)

FROM PS_RUN_STPS_MEX RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters


begin-procedure Get-Report-Data
let $RFC_ER_1   = ' '
begin-select
C.DESCR
CM.RFC_ER_ID_MEX
CM.COMP_ACTIVITY_MEX
CM.REP_NAME_MEX
  let $Comp_Descr = upper(&C.DESCR)
  let $RFC_ER_ID  = &CM.RFC_ER_ID_MEX
  let $RFC_ER_ID  = rtrim($RFC_ER_ID,' ')
  let $Comp_Act   = upper(&CM.COMP_ACTIVITY_MEX)
  let $Rep_Name   = upper(&CM.REP_NAME_MEX)
  let $RFC_ER_S   = substr($RFC_ER_ID,1,12)
  let $RFC_ER_2   = substr($RFC_ER_S,1,1)
  let $RFC_ER_3   = substr($RFC_ER_S,2,1)
  let $RFC_ER_4   = substr($RFC_ER_S,3,1)
  let $RFC_ER_5   = substr($RFC_ER_S,4,1)
  let $RFC_ER_6   = substr($RFC_ER_S,5,1)
  let $RFC_ER_7   = substr($RFC_ER_S,6,1)
  let $RFC_ER_8   = substr($RFC_ER_S,7,1)
  let $RFC_ER_9  = substr($RFC_ER_S,8,1)
  let $RFC_ER_10   = substr($RFC_ER_S,9,1)
  let $RFC_ER_11  = substr($RFC_ER_S,10,1)
  let $RFC_ER_12  = substr($RFC_ER_S,11,1)
  let $RFC_ER_13  = substr($RFC_ER_S,12,1)
  do Get-Comp-Descr-Lang

FROM PS_COMPANY_TBL     C,
     PS_COMPANY_TBL_MEX CM
WHERE C.COMPANY = $Company
and C.COMPANY = CM.COMPANY
and C.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL
               WHERE COMPANY = C.COMPANY
               AND EFFDT <= $AsofToday)
and CM.EFFDT = C.EFFDT
end-select
end-procedure Get-Report-Data


begin-procedure Get-Comp-Descr-Lang
begin-SELECT
CTL.DESCR
  if rtrim(&CTL.Descr,' ') <> ''
     let $Comp_Descr  = upper(rtrim(&CTL.Descr,' '))
  end-if
FROM  PS_COMPNY_TBL_LANG CTL
WHERE CTL.COMPANY     = $Company
  AND CTL.LANGUAGE_CD = $Curr_language_Cd
  AND CTL.EFFDT       =
     (SELECT MAX(EFFDT)
      FROM   PS_COMPNY_TBL_LANG
      WHERE  COMPANY     = $Company
        AND  LANGUAGE_CD = CTL.LANGUAGE_CD
        AND  EFFDT      <= $AsofToday)
end-SELECT
end-procedure Get-Comp-Descr-Lang


begin-procedure Get-ER-Locations
  let $Where_Location = '('
begin-select
L.LOCATION
  let $Locat = rtrim(&L.LOCATION,' ')
  concat ''''   with $Where_Location
  concat $Locat with $Where_Location
  concat ''''   with $Where_Location
  concat ','   with $Where_Location
FROM PS_LOCATION_TBL L
WHERE L.ESTABID = $ESTABID
AND L.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
              WHERE SETID = L.SETID
              AND LOCATION = L.LOCATION
              AND EFF_STATUS = 'A'
              AND EFFDT <= $AsOfToday)
end-select
  let #L-Locat = length($Where_Location)
  if #L-Locat > 1
    let $Where_Location = rtrim($Where_Location,',')
    concat ')' with $Where_Location
  else
     move '(' to $Where_Location
     concat '''' with $Where_Location
     concat '''' with $Where_Location
     concat ')' with $Where_Location
  end-if
  !show '$Where_Location ' $Where_Location
end-procedure Get-ER-Locations


begin-procedure Get-Employee-Data
begin-select
J.EMPLID
P.NAME
P.LAST_NAME
P.LAST_NAME_SRCH
P.SECOND_LAST_NAME
P.SECOND_LAST_SRCH
P.FIRST_NAME
P.FIRST_NAME_SRCH
J.JOBCODE
J.SETID_JOBCODE
  
  let $Emplid = &J.EMPLID
  
  #debug show '$Emplid  ' $Emplid 
  
  let $Empl_Name = upper(ltrim(rtrim(&P.LAST_NAME,' '), ' ')) || ' ' || rtrim(&P.SECOND_LAST_SRCH,' ') || ' ' || rtrim(&P.FIRST_NAME_SRCH,' ')
  let $JobCode = &J.JOBCODE
  let $SetIDJobCd = rtrim(&J.SETID_JOBCODE, ' ')
  
  #debug show '$JobCode  ' $JobCode
  #debug show '$SetIDJobCd  ' $SetIDJobCd
  
  do Get-Empl-RFC
  do Get-Empl-JobCode
  do Get-Courses
!  if $Plan_Type = '0010'
!     do Get-Courses
!  else
!     do Print-Format
!     do Get-Instructor-Name
!     do Print-Program-Detail
!    new-page
!  end-if

FROM PS_JOB J,
     PS_NAMES P
WHERE J.COMPANY = $Company
AND J.EMPLID = P.EMPLID
AND J.LOCATION IN [$Where_Location]
AND J.EMPLID BETWEEN $From_Emplid AND $To_Emplid
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND EFFDT <= $AsOfToday)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND EFFDT = J.EFFDT)
and   P.NAME_TYPE = 'PRI'
and   P.EFFDT     = (SELECT MAX(EFFDT) FROM PS_NAMES
                     WHERE EMPLID = P.EMPLID
                     AND   NAME_TYPE = P.NAME_TYPE
                     AND   EFFDT <= $AsOfToday)
end-select
end-procedure Get-Employee-Data


begin-procedure Print-Format

Let #rIni = 19
Let #rCUR = #rIni + 4
Let #rCom = #rIni + 11
Let #rRFC = #rIni + 15
Let #rAct = #rIni + 18
Let #rCus = #rIni + 25
Let #rHrs = #rIni + 28
Let #rTem = #rIni + 31

Let #cIni = 18
Let #cOcu = #cIni + 84
Let #cIMS = #cIni + 89

print $Empl_Name            (#rIni,#cIni)

print $EmplCURP_1           (#rCur,#cIni)
print $EmplCURP_2           (,+4)
print $EmplCURP_3           (,+4)
print $EmplCURP_4           (,+3)
print $EmplCURP_5           (,+4)
print $EmplCURP_6           (,+3)
print $EmplCURP_7           (,+4)
print $EmplCURP_8           (,+4)
print $EmplCURP_9           (,+3)
print $EmplCURP_10          (,+4)
print $EmplCURP_11          (,+3)
print $EmplCURP_12          (,+4)
print $EmplCURP_13          (,+3)
print $EmplCURP_14          (,+4)
print $EmplCURP_15          (,+3)
print $EmplCURP_16          (,+4)
print $EmplCURP_17          (,+4)
print $EmplCURP_18          (,+4)
print $JobFamily            (,#cOcu,33)

!print $Empl_RFC_1           (22,2)
!print $Empl_RFC_2           (22,5)
!print $Empl_RFC_3           (22,8)
!print $Empl_RFC_4           (22,11)
!print $Empl_RFC_5           (22,17)
!print $Empl_RFC_6           (22,20)
!print $Empl_RFC_7           (22,23)
!print $Empl_RFC_8           (22,26)
!print $Empl_RFC_9           (22,29)
!print $Empl_RFC_10          (22,32)
!print $Empl_RFC_11          (22,38)
!print $Empl_RFC_12          (22,41)
!print $Empl_RFC_13          (22,44)
!print $JobCode_Descr        (22,47,34)

print $Comp_Descr           (#rCom,#cIni)
print $RFC_ER_1             (#rRFC,#cIni)
print $RFC_ER_2             (,+5)
print $RFC_ER_3             (,+5)
print $RFC_ER_4             (,+5)
print $RFC_ER_5             (,+10)
print $RFC_ER_6             (,+5)
print $RFC_ER_7             (,+4)
print $RFC_ER_8             (,+5)
print $RFC_ER_9             (,+5)
print $RFC_ER_10            (,+5)
print $RFC_ER_11            (,+11)
print $RFC_ER_12            (,+5)
print $RFC_ER_13            (,+5)

print $IMS_ER_1             (,#cIMS)
print $IMS_ER_2             (,+5)
print $IMS_ER_3             (,+5)
print $IMS_ER_4             (,+6)
print $IMS_ER_5             (,+5)
print $IMS_ER_6             (,+6)
print $IMS_ER_7             (,+5)
print $IMS_ER_8             (,+6)
print $IMS_ER_9             (,+6)
print $IMS_ER_10            (,+6)
print $IMS_ER_11            (,+10)
print $Comp_Act             (#rAct,#cIni)
end-procedure Print-Format


begin-procedure Print-Program-Detail
print $Prog_Desc            (#rCus,#cIni)
print #Accum_Hrs            (#rHrs,#cIni)
print $Start_Dt_Y1          (,85)
print $Start_Dt_Y2          (,+4)
print $Start_Dt_Y3          (,+4)
print $Start_Dt_Y4          (,+4)
print $Start_Dt_M1          (,+5)
print $Start_Dt_M2          (,+5)
print $Start_Dt_D1          (,+5)
print $Start_Dt_D2          (,+5)
print $End_Dt_Y1            (,+12)
print $End_Dt_Y2            (,+4)
print $End_Dt_Y3            (,+5)
print $End_Dt_Y4            (,+4)
print $End_Dt_M1            (,+5)
print $End_Dt_M2            (,+5)
print $End_Dt_D1            (,+5)
print $End_Dt_D2            (,+5)
!print $Comp_Descr           (53,#cIni)
print $Instructor_Name      (54,#cIni)

print $Emp_Rep_Name         (65,7,20)
print $Rep_Name             (65,76,20)
end-procedure Print-Program-Detail


begin-procedure Print-Course-Detail
print $Course_Descr         (#rCus,#cIni)
print #Course_Hrs           (#rHrs,#cIni)
print $Course_Start_Dt_Y1   (,85)
print $Course_Start_Dt_Y2   (,+4)
print $Course_Start_Dt_Y3   (,+4)
print $Course_Start_Dt_Y4   (,+4)
print $Course_Start_Dt_M1   (,+5)
print $Course_Start_Dt_M2   (,+5)
print $Course_Start_Dt_D1   (,+5)
print $Course_Start_Dt_D2   (,+5)
print $Course_End_Dt_Y1     (,+12)
print $Course_End_Dt_Y2     (,+4)
print $Course_End_Dt_Y3     (,+5)
print $Course_End_Dt_Y4     (,+4)
print $Course_End_Dt_M1     (,+5)
print $Course_End_Dt_M2     (,+5)
print $Course_End_Dt_D1     (,+5)
print $Course_End_Dt_D2     (,+5)
print $CourseType           (#rTem,#cIni)
!if $Int_Ext = 'E'
!   print $Vendor_Name       (52,#cIni)
!else
!print $Comp_Descr           (52,#cIni)
!end-if
print $Instructor_Name      (54,#cIni)

print $Emp_Rep_Name         (65,20,20)
print $Rep_Name             (65,77,20)
end-procedure Print-Course-Detail


begin-procedure Get-Program-Data
begin-select
T.DESCR
  let $Prog_Desc = upper(&T.DESCR)
FROM PS_TRN_PROGRM_TBL T
WHERE T.TRN_PROGRAM = $Train_Prog
and T.COURSE_STATUS = 'A'
end-select
end-procedure Get-Program-Data


begin-procedure Get-Empl-RFC
  move '' to $Empl_RFC
begin-select
N.NATIONAL_ID
N.NATIONAL_ID_TYPE

  Evaluate &N.NATIONAL_ID_TYPE
  when = 'RFC'
       let $Empl_RFC    = rtrim(&N.NATIONAL_ID,' ')
       let $Empl_RFC_S  = substr($Empl_RFC,1,13)
       let $Empl_RFC_1  = substr($Empl_RFC_S,1,1)
       let $Empl_RFC_2  = substr($Empl_RFC_S,2,1)
       let $Empl_RFC_3  = substr($Empl_RFC_S,3,1)
       let $Empl_RFC_4  = substr($Empl_RFC_S,4,1)
       let $Empl_RFC_5  = substr($Empl_RFC_S,5,1)
       let $Empl_RFC_6  = substr($Empl_RFC_S,6,1)
       let $Empl_RFC_7  = substr($Empl_RFC_S,7,1)
       let $Empl_RFC_8  = substr($Empl_RFC_S,8,1)
       let $Empl_RFC_9  = substr($Empl_RFC_S,9,1)
       let $Empl_RFC_10 = substr($Empl_RFC_S,10,1)
       let $Empl_RFC_11 = substr($Empl_RFC_S,11,1)
       let $Empl_RFC_12 = substr($Empl_RFC_S,12,1)
       let $Empl_RFC_13 = substr($Empl_RFC_S,13,1)
  when = 'CURP'
       let $EmplCURP    = rtrim(&N.NATIONAL_ID,' ')
       let $EmplCURP_S  = substr($EmplCURP,1,18)
       let $EmplCURP_1  = substr($EmplCURP_S,1,1)
       let $EmplCURP_2  = substr($EmplCURP_S,2,1)
       let $EmplCURP_3  = substr($EmplCURP_S,3,1)
       let $EmplCURP_4  = substr($EmplCURP_S,4,1)
       let $EmplCURP_5  = substr($EmplCURP_S,5,1)
       let $EmplCURP_6  = substr($EmplCURP_S,6,1)
       let $EmplCURP_7  = substr($EmplCURP_S,7,1)
       let $EmplCURP_8  = substr($EmplCURP_S,8,1)
       let $EmplCURP_9  = substr($EmplCURP_S,9,1)
       let $EmplCURP_10 = substr($EmplCURP_S,10,1)
       let $EmplCURP_11 = substr($EmplCURP_S,11,1)
       let $EmplCURP_12 = substr($EmplCURP_S,12,1)
       let $EmplCURP_13 = substr($EmplCURP_S,13,1)  
       let $EmplCURP_14  = substr($EmplCURP_S,14,1)
       let $EmplCURP_15 = substr($EmplCURP_S,15,1)
       let $EmplCURP_16 = substr($EmplCURP_S,16,1)
       let $EmplCURP_17 = substr($EmplCURP_S,17,1)
       let $EmplCURP_18 = substr($EmplCURP_S,18,1)  
  end-evaluate 
  
FROM PS_PERS_NID N
WHERE N.EMPLID = $Emplid
AND N.COUNTRY = 'MEX'
AND N.NATIONAL_ID_TYPE IN ('RFC', 'CURP')
end-select
end-procedure Get-Empl-RFC


begin-procedure Get-Empl-JobCode
#debug show 'Get-Empl-JobCode'
#debug show '$JobCode ' $JobCode
begin-select
JC.DESCR
JC.JOB_FAMILY

  let $JobCode_Descr = &JC.DESCR
  let $JobFamilyCd = rtrim(&JC.JOB_FAMILY, ' ')
  
  Do Get-Job-Family
  Do Get-Lang-JobCode
  
FROM PS_JOBCODE_TBL JC
WHERE JC.JOBCODE = $JobCode
AND JC.SETID  = $SetIDJobCd
AND JC.EFFDT = (SELECT MAX(EFFDT) 
                FROM PS_JOBCODE_TBL
                WHERE JOBCODE = JC.JOBCODE
                AND SETID = JC.SETID
                AND EFFDT <= $AsOfToday)
end-select


end-procedure Get-Empl-JobCode

begin-procedure Get-Lang-JobCode
begin-select
JCL.DESCR

  let $JobCode_Descr = &JCL.DESCR 
  
FROM PS_JOBCODE_LANG JCL
WHERE JCL.JOBCODE = $JobCode
AND JCL.SETID  = $SetIDJobCd
AND JCL.LANGUAGE_CD = $Curr_language_Cd
AND JCL.EFFDT = (SELECT MAX(EFFDT) 
                FROM PS_JOBCODE_LANG
                WHERE JOBCODE = JCL.JOBCODE
                AND SETID = JCL.SETID
                AND LANGUAGE_CD = JCL.LANGUAGE_CD
                AND EFFDT <= $AsOfToday)
end-select
end-procedure Get-Lang-JobCode

begin-procedure Get-Job-Family
#debug show '$JobFamilyCd ' $JobFamilyCd
let $JobFamily = ''
begin-select
JF.DESCR

  let $JobFamily = $JobFamilyCd || ' ' || upper(&JF.DESCR)
  Do Get-Lang-Job-Family
  
FROM PS_JOB_FAMILY_TBL JF
WHERE JF.JOB_FAMILY = $JobFamilyCd
AND JF.EFF_STATUS = 'A'
AND JF.EFFDT = (SELECT MAX(EFFDT) 
                FROM PS_JOB_FAMILY_TBL
                WHERE JOB_FAMILY = JF.JOB_FAMILY
                AND EFFDT <= $AsOfToday)
end-select
end-procedure Get-Job-Family

begin-procedure Get-Lang-Job-Family
begin-select
JFL.DESCR

  let $JobFamily = $JobFamilyCd || ' ' || &JFL.DESCR 
  
FROM PS_JOB_FAMILY_LNG JFL
WHERE JFL.JOB_FAMILY = $JobFamilyCd
AND JFL.LANGUAGE_CD = $Curr_language_Cd
AND JFL.EFFDT = (SELECT MAX(EFFDT) 
                FROM PS_JOB_FAMILY_LNG
                WHERE JOB_FAMILY = JFL.JOB_FAMILY
                AND LANGUAGE_CD = JFL.LANGUAGE_CD
                AND EFFDT <= $AsOfToday)
end-select
end-procedure Get-Lang-Job-Family

begin-procedure Get-Courses
!show '* Get-Courses *'
let $Couse = ''

begin-select
STPS.COURSE
STPS.HRS_UNITS
STPS.COURSE_START_DT
STPS.COURSE_END_DT
STPS.DESCR
STPS.INSTRUCTOR_ID

  let $Course          = &STPS.COURSE
  let $Course_Descr    = upper(rtrim(&STPS.DESCR, ' '))
  
  let #Course_Hrs      = &STPS.HRS_UNITS
  
   if $Plan_Type = '0020' and ltrim(rtrim($Instr_Id, ' '), ' ') <> ''
      do Get-Instructor-Name
   else 
      let $Instr_Id        = &STPS.INSTRUCTOR_ID
   end-if 
  
  let $Course_Start_Dt = &STPS.COURSE_START_DT
  let $Course_End_Dt   = &STPS.COURSE_END_DT
  
  #debug show $Course ' Dates: ' $Course_Start_Dt ' ' $Course_End_Dt
  do Convert-To-Dtu-Date($Course_Start_Dt,$Course_Start_Dt)
  do Convert-To-Dtu-Date($Course_End_Dt,$Course_End_Dt)

  let $Course_Start_Dt_Y1 = substr($Course_Start_Dt,1,1)
  let $Course_Start_Dt_Y2 = substr($Course_Start_Dt,2,1)
  let $Course_Start_Dt_Y3 = substr($Course_Start_Dt,3,1)
  let $Course_Start_Dt_Y4 = substr($Course_Start_Dt,4,1)
  let $Course_Start_Dt_M1 = substr($Course_Start_Dt,6,1)
  let $Course_Start_Dt_M2 = substr($Course_Start_Dt,7,1)
  let $Course_Start_Dt_D1 = substr($Course_Start_Dt,9,1)
  let $Course_Start_Dt_D2 = substr($Course_Start_Dt,10,1)

  let $Course_End_Dt_Y1   = substr($Course_End_Dt,1,1)
  let $Course_End_Dt_Y2   = substr($Course_End_Dt,2,1)
  let $Course_End_Dt_Y3   = substr($Course_End_Dt,3,1)
  let $Course_End_Dt_Y4   = substr($Course_End_Dt,4,1)
  let $Course_End_Dt_M1   = substr($Course_End_Dt,6,1)
  let $Course_End_Dt_M2   = substr($Course_End_Dt,7,1)
  let $Course_End_Dt_D1   = substr($Course_End_Dt,9,1)
  let $Course_End_Dt_D2   = substr($Course_End_Dt,10,1)
  
  #debug show $Course_End_Dt ' ' $Course_End_Dt_D1
  
  do Get-Training-Vendor
  do Get-Vendor-Name
  do Get-Instructor-Name
  do Get-Course-Detail
  
  do Print-Format
  do Print-Course-Detail
  new-page

FROM PS_RUN_STPS2_MEX STPS
WHERE STPS.OPRID       = $Prcs_OprID
  AND STPS.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Get-Courses


begin-procedure Get-Instructor-Name
begin-select
PD.NAME
PD.LAST_NAME
PD.LAST_NAME_SRCH
PD.SECOND_LAST_NAME
PD.SECOND_LAST_SRCH
PD.FIRST_NAME
PD.FIRST_NAME_SRCH
  let $Instructor_Name = upper(rtrim(&PD.LAST_NAME_SRCH,' ') || ' ' || rtrim(&PD.SECOND_LAST_SRCH,' ') || ' ' || rtrim(&PD.FIRST_NAME_SRCH,' '))

FROM PS_NAMES PD
WHERE PD.EMPLID = $Instr_Id
and   PD.NAME_TYPE = 'PRI'
and   PD.EFFDT     = (SELECT MAX(EFFDT) FROM PS_NAMES
                     WHERE EMPLID = PD.EMPLID
                     AND   NAME_TYPE = PD.NAME_TYPE
                     AND   EFFDT <= $AsOfToday)
end-select
end-procedure Get-Instructor-Name

!**************************************
begin-procedure Get-Course-Detail
#debug show '* Get-Course-Detail'
#debug show '$Course: ' $Course

begin-select
C.COURSE_TYPE
  let $XlatValue = rtrim(&C.COURSE_TYPE,' ') 
  let $XlatField  = 'COURSE_TYPE'
  
  Do Get-Xlat
  Let $CourseType = upper($XlatDescr)
  
FROM PS_COURSE_TBL C
WHERE C.COURSE = $Course
end-select
end-procedure Get-Course-Detail

!**************************************
begin-procedure Get-Xlat
#debug show '* Get-Xlat'

Let $XlatDescr = ''

Begin-Select     
XX.XLATLONGNAME

  Let $XlatDescr = substr(Rtrim(&XX.XLATLONGNAME,' '),1,29)
  
FROM XLATTABLE_VW XX
WHERE XX.FIELDNAME  = $XlatField
AND   XX.FIELDVALUE = $XlatValue
End-Select

Begin-Select     
XL.XLATLONGNAME 

  Let $XlatDescr = substr(Rtrim(&XL.XLATLONGNAME,' '),1,29)  
  
FROM PSXLATITEMLANG XL
WHERE XL.FIELDNAME = $XlatField
AND XL.FIELDVALUE  = $XlatValue
AND XL.LANGUAGE_CD = $Curr_language_Cd 
End-Select

#debug show '$XlatDescr: '  $XlatDescr

End-Procedure Get-Xlat

begin-procedure Get-Training-Vendor
begin-select
I.INTERNAL_EXTERNAL
I.VENDOR
  let $Int_Ext = rtrim(&I.INTERNAL_EXTERNAL,' ')
  let $Course_Vendor = &I.VENDOR
FROM PS_TRN_INSTRCT_TBL I
WHERE I.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_TRN_INSTRCT_TBL A_ED
                     WHERE I.INSTRUCTOR_ID = A_ED.INSTRUCTOR_ID
                     AND A_ED.EFF_STATUS = 'A'
                     AND A_ED.EFFDT <=$AsOfToday)
AND I.INSTRUCTOR_ID = $Instr_Id
end-select
end-procedure Get-Training-Vendor


begin-procedure Get-Vendor-Name
begin-select
V.DESCR
  let $Vendor_Name = &V.DESCR
FROM PS_TRN_VENDOR_TBL V
WHERE V.VENDOR = $Course_Vendor
end-select
end-procedure Get-Vendor-Name

!***************************************************************
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
