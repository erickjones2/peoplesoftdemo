!***********************************************************************
!  GPMYSO04.SQR:  SOCSO Form 3: Employee Termination Form                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:55:50                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup
  page-size 60 180
    declare printer
      type          = HPLASERJET
      orientation   = landscape
      lines-inch    = 8
      chars-inch    = 16.6
      top-margin    = .60
      left-margin   = 0.25
      font          = 5
      point-size    = 7

   end-setup

begin-report

  do Init-Processing
  Move &SysDateTime to $AsOfToday


end-report


begin-procedure Init-Processing

        do Init-Datetime
        do Get-Current-Datetime
        Move &SysDateTime to $AsOfToday
        Let $todayDate = datenow()
        do Define-Prcs-Vars
        do Init-Number
        do Init-Report
        do Stdapi-Term
end-procedure ! Init-Processing

!
!****************************
!Procedure : Init-Report    *
!****************************
  begin-procedure Init-Report

move 'GPMYSO04' to $ReportID
do Stdapi-Init
do Get-Language-Codes   ! get the current language in which user wants to print the report
do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
do Append_Report_Translation ($ReportID)        ! from settrans.sqc
do Get_Translat_Info
do Select-Parameters
do Build-Date
do Main
do Get-Company-Details
do get-contrb-mmm
  let #print_cnt = 0


  end-procedure


!****************************
!Procedure :Select-Parameters
!****************************



begin-procedure Select-Parameters


begin-select

RC.GPMY_ORG_LINK_OPTN
RC.ORG_LINK_UNIT
RC.GPMY_SOCSO_NBR
!RC.MONTHCD
RC.GPMY_FROM_DT
RC.GPMY_TO_DT


FROM  PS_GPMY_RPT_RC RC
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select

  let $ORG_LINK_OPTN     = rtrim(&RC.GPMY_ORG_LINK_OPTN, ' ')
  let $ORG_LINK_UNIT = rtrim(&RC.ORG_LINK_UNIT,' ')
  let $Org_Clause = ' '
  if rtrim($ORG_LINK_UNIT,' ') = ''
             let $ORG_LINK_UNIT ='%'
             let $Org_Clause ='AND SOC1.ORG_LINK_UNIT LIKE ''' ||$ORG_LINK_UNIT||''''
    else
             let $Org_Clause ='AND SOC1.ORG_LINK_UNIT = '''||$ORG_LINK_UNIT||''''
  end-if
  let $GPMY_SOCSO_NBR  =  &RC.GPMY_SOCSO_NBR
  let $SocNbr_Clause = ' '
      if rtrim($GPMY_SOCSO_NBR,' ') = ''
             let $GPMY_SOCSO_NBR = '%'
             let $SocNbr_Clause = 'AND SOC1.GPMY_SOCSO_NBR LIKE ''' ||$GPMY_SOCSO_NBR||''''
      else
             let $SocNbr_Clause = 'AND SOC1.GPMY_SOCSO_NBR = '''||$GPMY_SOCSO_NBR||''''
  end-if

  let $FROMDATE         = &RC.GPMY_FROM_DT
  let $TODATE           = &RC.GPMY_TO_DT
  !let $MONTHCD          =&RC.MONTHCD



end-procedure

!*********************************
!Procedure : Build-Date
!*********************************
begin-procedure Build-Date
   do Format-DateTime(&RC.GPMY_TO_DT, $out, {DEFYMD}, '', '')
   do dtu-parse-date($out,#dtu_yr,  #Month_Cd, #dtu_da)

!let $year= #dtu_yr

let $dtu_yr = #dtu_yr
let $Month_Cd = edit(#Month_Cd,'99')
let $Month_Cd = ltrim($Month_Cd,' ')
let $Month_Cd = rtrim($Month_Cd,' ')
let $year = edit($dtu_yr,'9999')
end-procedure


!***********************************************************************
! Procedure: Main                                                      *
!***********************************************************************
begin-Procedure Main

begin-SELECT DISTINCT

SOC1.GPMY_SOCSO_NBR
    let $SocNbr = &SOC1.GPMY_SOCSO_NBR
    Let #page-number = 1
    let #flag = 0
    let #emp_flag = 0


    do ProcessSocNumber

FROM PS_GPMY_SOC_ORG_VW SOC1
WHERE SOC1.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
  !AND SOC1.ORG_LINK_UNIT LIKE $ORG_LINK_UNIT
  [$Org_Clause]
  !AND SOC1.GPMY_SOCSO_NBR LIKE $GPMY_SOCSO_NBR
  [$SocNbr_Clause]
  AND SOC1.EFFDT <= $TODATE


end-SELECT

end-procedure
!***********************************************************************
! Procedure: ProcessSocNumber                                          *
!            Process for each SOCSO number                               *
!                                                                      *
!***********************************************************************
begin-Procedure ProcessSocNumber

  do Get-Company-Details

    Let #flag = 0

  do Get-Empl-SOCSO


 if #emp_flag = 1
  let #print_cnt = #print_cnt+1
 end-if






end-procedure

!*********************************************************************************
!  Procedure: Get-ManagerLegal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-ManagerLegal-Name

begin-SELECT
NAMESMn.NAME

    let $MnLegalName = &NAMESMn.NAME

FROM PS_NAMES NAMESMn
WHERE NAMESMn.EMPLID =$ResponcibleId
AND NAMESMn.EFFDT=(SELECT MAX(NAMES11.EFFDT) FROM PS_NAMES NAMES11
                                          WHERE NAMES11.EMPLID=NAMESMn.EMPLID
                                            AND NAMES11.NAME_TYPE = NAMESMn.NAME_TYPE
                                            AND NAMES11.EFFDT <= $TODATE)


AND NAMESMn.NAME_TYPE = 'LEG'
end-SELECT

end-procedure


!************************************
!Procedure : Get-company-details    *
!************************************
begin-procedure Get-Company-Details


begin-SELECT
L.GPMY_REGISTERED_NM
L.ADDRESS1
L.ADDRESS2
L.ADDRESS3
L.ADDRESS4
L.PHONE               &PicPhone
L.GPMY_SOCSO_NBR
L.NAME
L.CITY
L.STATE
L.POSTAL
L.COUNTRY
L.COUNTY
L.GPMY_RESPONSIBLEID !





        let $MnLegalName = '' !
        let $ResponcibleId = rtrim(&L.GPMY_RESPONSIBLEID, ' ')
        do Get-ManagerLegal-Name      !


        IF $MnLegalName = '' or $MnLegalName = ' '
       move &L.NAME to $NameMn
      ELSE
       move $MnLegalName to $NameMn
      END-IF



FROM PS_GPMY_SOC_TBL L
WHERE L.GPMY_SOCSO_NBR = $SocNbr
     AND L.EFF_STATUS = 'A'
     AND L.EFFDT = (SELECT MAX(L1.EFFDT)
                    FROM PS_GPMY_SOC_TBL L1
                    WHERE L1.GPMY_SOCSO_NBR = L.GPMY_SOCSO_NBR
               AND L1.EFFDT <= $TODATE)
end-SELECT

   let $CompanyName = rtrim(&L.GPMY_REGISTERED_NM, ' ')
   uppercase $CompanyName
   let $Pers_In_Chg = Upper($NameMn)

   let $COUNTRY  = &L.COUNTRY
    let $ADDRESS1 = &L.ADDRESS1
    let $ADDRESS2 = &L.ADDRESS2
    let $ADDRESS3 = &L.ADDRESS3
    let $ADDRESS4 = &L.ADDRESS4
    let $CITY = &L.CITY
    let $STATE =&L.STATE
    let $POSTAL = &L.POSTAL
    let $County = &L.COUNTY

    do Adformat
    do Compress-Address
    let $Co_Addr1 = $ADDRESS2
    let $Co_Addr2 = $ADDRESS3
    let $Co_Addr3 = $ADDRESS4

end-procedure



!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.NAME_TYPE = 'LEG'
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT)
                 FROM PS_NAMES NAMES1
                 WHERE NAMES1.EMPLID = NAMES.EMPLID
                 AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                 AND NAMES1.EFFDT <= $TODATE)
end-SELECT

end-procedure

!************************************
!Procedure : Get-Empl-SOCSO         *
!************************************
begin-procedure Get-Empl-SOCSO

  Let $FirstPage = 'Y'
  Let #TotRecs = 0
  Let $National_Id_Type = ''
  let $reason=''

begin-SELECT

DISTINCT(J.EMPLID)       &Emplid
J.EMPL_RCD               &EmplRcd
ES.GPMY_MMBRSHIP_NBR     &EmplMemShip
ES.EFFDT                 &EmplStartDt
ES.GPMY_IC_INDICATOR     &IdType
P1.NAME                  &EmplName
J.EFFDT                  &TermDate
J.ACTION_REASON          &ActReason
J.ACTION                 &Action

     let $action=&Action
     let $reason= &ActReason
     let $EmplId = &Emplid
      let #emp_flag = 1
      if #flag = 0  and #print_cnt > 0
       New-page
       Let #flag = 1

      end-if
    !let $EmplId = &Emplid

     let $EELegalName = ''
        do Get-Legal-Name

        LET $EELegalName = LTRIM(RTRIM($EELegalName, ' '), ' ')
        IF $EELegalName = ''
            let $Name = &EmplName
        ELSE
            let $Name = $EELegalName
        END-IF

   ! let $Name = &EmplName
    !do Rotate-Name
    Let $EmplName = replace(Upper($Name),',',' ')


     Let $OldIc = ''
     Let $NewICNbr = ''
         do Get-IC-Number
     Let $OldIc = rtrim(&OldIcNbr, ' ')
     Let $NewICNbr = translate(&NewIcNbr,'-','')


     let $ICPassport = $OldIC
      if $OldIC = ''
        do GetICPassportInfo
     else
       ! let $ICPassport = $OldIC
        let $ID_Type = 'O'
     end-if

    Add 1 to #TotRecs
    if #TotRecs >8
       Let $FirstPage = 'Y'
       NEW-PAGE
      Let #page-number = #page-number + 1

       Let #TotRecs =1
    end-if
    Do Get-Reason-Descr
    Do Print-Output




FROM PS_JOB J, PS_GPMY_SOC_PYE ES, PS_NAMES P1 ,PS_PERSON P2,PS_PERS_DATA_EFFDT P3
        WHERE J.EMPLID     = ES.EMPLID
          AND J.EMPL_RCD  = ES.EMPL_RCD
          AND P1.EMPLID = J.EMPLID
          AND ES.GPMY_SOCSO_NBR = $SocNbr
          AND J.ACTION IN ('TAS','TDL','TER','TWP','TWB')
          AND J.EFFDT =
               (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.EMPLID = J.EMPLID
                    AND J1.EMPL_RCD = J.EMPL_RCD
                    AND J1.EFFDT BETWEEN  $FromDate AND  $ToDate )
          AND J.EFFSEQ =
               (SELECT MAX(J2.EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = J.EMPLID
                    AND J2.EMPL_RCD = J.EMPL_RCD
                    AND J2.EFFDT = J.EFFDT)
          AND P1.EMPLID = J.EMPLID
          AND ES.EFFDT =(SELECT MAX(X.EFFDT) FROM PS_GPMY_SOC_PYE X
                          WHERE X.EMPLID=ES.EMPLID
                          AND X.EMPL_RCD=ES.EMPL_RCD
                           )
          AND  ES.EMPLID NOT IN  (SELECT ES1.EMPLID FROM PS_GPMY_SOC_PYE ES1
                                  WHERE ES1.EMPLID=ES.EMPLID
                                     AND  ES1.GPMY_SOCSO_NBR = ES.GPMY_SOCSO_NBR
                                     AND  ES1.EFFDT >= J.EFFDT)
                                     AND P1.EMPLID = ES.EMPLID
                                     AND P1.NAME_TYPE='PRI'
                                     AND P1.EFFDT=(SELECT MAX(EFFDT) FROM PS_NAMES P5
                                               WHERE P5.EMPLID   =P1.EMPLID
                                                    AND   P5.NAME_TYPE=P1.NAME_TYPE
                                                    AND   P5.EFFDT <= $TODATE)
                                                    AND P2.EMPLID=P1.EMPLID
                                                    AND P3.EMPLID=P1.EMPLID
                                                    AND P3.EFFDT=(SELECT MAX(EFFDT) FROM PS_PERS_DATA_EFFDT P6
                                                        WHERE P6.EMPLID   =P3.EMPLID )

ORDER BY J.EMPLID


end-SELECT





end-procedure
!****************************************************************
!Procedure-Get-Reason-Descr
!***************************************************************
begin-procedure Get-Reason-Descr

begin-SELECT
A.DESCR  &Descr

FROM PS_ACTN_REASON_TBL A
WHERE A.ACTION=$action
AND A.ACTION_REASON=$reason
AND A.EFFDT=(SELECT MAX(A1.EFFDT)
             FROM PS_ACTN_REASON_TBL A1
             WHERE A1.ACTION=A.ACTION
             AND A1.ACTION_REASON=A.ACTION_REASON
             AND A1.EFFDT<=$ToDate)
end-SELECT

end-procedure




!***********************************************************************
! Procedure: Get-IC-Number                                         *
!            Gets the National Id Number.                      *
!***********************************************************************
begin-procedure Get-IC-Number
begin-SELECT
A.EMPLID
A.NATIONAL_ID  &NewIcNbr
B.NATIONAL_ID  &OldIcNbr

FROM PS_PERS_NID A, PS_PERS_NID B where A.EMPLID=B.EMPLID and
A.COUNTRY=B.COUNTRY
and (A.NATIONAL_ID_TYPE='NEWIC' and B.NATIONAL_ID_TYPE='OLDIC') and
A.EMPLID=&Emplid
UNION
SELECT EMPLID,'',NATIONAL_ID FROM PS_PERS_NID WHERE NATIONAL_ID_TYPE
='OLDIC' AND EMPLID NOT IN (select A.EMPLID from PS_PERS_NID A, PS_PERS_NID
B where A.EMPLID=B.EMPLID and A.COUNTRY=B.COUNTRY
and (A.NATIONAL_ID_TYPE='NEWIC' and B.NATIONAL_ID_TYPE='OLDIC')) and EMPLID
=&Emplid
UNION
SELECT EMPLID,NATIONAL_ID,'' FROM PS_PERS_NID WHERE NATIONAL_ID_TYPE
='NEWIC' AND EMPLID NOT IN (select A.EMPLID from PS_PERS_NID A, PS_PERS_NID
B where A.EMPLID=B.EMPLID and A.COUNTRY=B.COUNTRY
and (A.NATIONAL_ID_TYPE='NEWIC' and B.NATIONAL_ID_TYPE='OLDIC')) and EMPLID
=&Emplid

end-SELECT
end-Procedure



!
!***********************************************************************
! Procedure: GetICPassportInfo                                         *
!***********************************************************************
begin-Procedure GetICPassportInfo

begin-SELECT
CP.PASSPORT_NBR     &Passport
CP.DEPENDENT_ID     &DependId
CP.DT_ISSUED        &CPIssueDt
CP.EXPIRATN_DT      &CPExpireDt
  do Format-DateTime (&CPExpireDt, $CPExpireDt, {DEFYMD}, '', '')
  do Format-DateTime ($$ToDate , $ToDateMDF, {DEFYMD}, '', '')
  if ($ToDateMDF <= $CPExpireDt OR rtrim($CPExpireDt,' ') = '')
     if RTRIM(&DependId, ' ') = ''
       Move &Passport to $ICPassport
     end-if
  end-if
   FROM PS_CITIZEN_PSSPRT CP
 WHERE  CP.EMPLID = $Emplid
    AND $ToDate  >= CP.DT_ISSUED
end-SELECT

end-Procedure
!
!
!
!***********************************************************************
! Function:    Get_Translat_Info                                       *
!                                                                      *
! Description: Gets the strings printed in this report                 *
!                                                                      *
!***********************************************************************

begin-procedure Get_Translat_Info

   do Add_Report_Translation($ReportID, $rpt_language_cd)
  ! do Get_Field_Information ('GPMYSO04', 'GPMYSO04_TITLE',     $ReportTitle,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'EMPLOYER_CODE',     $Employer_code_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE1',     $Title1_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE2',     $Title2_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE3',     $Title3_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE4',     $Title4_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE5',     $Title5_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE55',     $Title55_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE6',     $Title6_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'EE_IC_NBR',    $EE_IC_Number_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'EMP_NAME',     $Emp_name_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'EMP_SOC_REF1',    $Emp_soc_ref1_Lbl,   #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TERM_DATE',     $Term_date_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'COMMENTS',     $Comments_Lbl ,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'EE_IC_NBR2',     $EE_IC_number2_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'EMP_SOC_REF2',     $Emp_soc_ref2_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TERM_DATE2',     $Term_date2_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE7',     $Title7_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'TITLE77',     $Title77_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'DATE',     $Date_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'PERS_IN_CHG',     $Pers_in_chg_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'COMPANY_ADDRESS',     $Company_address_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'NAME',    $Name_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'PHONE',     $Phone_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'EE_SIGNATURE',    $EE_signature_Lbl,   #DW)
  ! do Get_Field_Information ('GPMYSO04', 'LAMA',    $Lama_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'JAN',     $mon1_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'FEB',     $mon2_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'MAR',     $mon3_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'APR',     $mon4_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'MAY',     $mon5_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'JUN',     $mon6_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'JUL',     $mon7_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'AUG',     $mon8_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'SEP',     $mon9_Lbl,     #DW)
  ! do Get_Field_Information ('GPMYSO04', 'OCT',     $mon10_Lbl,    #DW)
  ! do Get_Field_Information ('GPMYSO04', 'NOV',     $mon11_Lbl,    #DW)
  ! do Get_Field_Information ('GPMYSO04', 'DEC',     $mon12_Lbl,    #DW)
  ! do Get_Field_Information ('GPMYSO04', 'OFFICER', $officer_Lbl,  #DW)

    LET $ReportTitle = 'BORANG 3'
    LET $Employer_code_Lbl = 'NOMBOR KOD MAJIKAN'
    LET $Title1_Lbl = 'BORANG PEMBERHENTIAN PEKERJAAN'
    LET $Title2_Lbl = 'BAGI KEGUNAAN RASMI'
    LET $Title3_Lbl = 'PERATURAN-PERATURAN (AM) KESELAMATAN SOSIAL PEKERJA 1971'
    LET $Title4_Lbl =  '(Peraturan 13)'
    LET $Title5_Lbl = 'Di bawah ini saya berikan nama-nama dan butir-butir lain orang-orang yang berhenti menjadi pekerja'
    LET $Title55_Lbl = 'dalam bulan'
    LET $Title6_Lbl = 'SILA GUNAKAN HURUF BESAR'
    LET $EE_IC_Number_Lbl = 'Nombor Kad Pengenalan'
    LET $Emp_name_Lbl = 'Nama Penuh (Mengikut Kad Pengenalan)'
    LET $Emp_soc_ref1_Lbl ='Nombor Pendaftaran'
    LET $Term_date_Lbl = 'Tarikh Berhenti'
    LET $Comments_Lbl = 'Catatan'
    LET $EE_IC_number2_Lbl ='(Lama dan Baru, Jika ada)'
    LET $Emp_soc_ref2_Lbl ='Keselamatan Sosial'
    LET $Term_date2_Lbl ='Bekerja'
    LET $Title7_Lbl ='Saya mengaku bahawa senarai yang diberikan di atas adalah betul sepanjang pengetahuan dan kepercayaan'
    LET $Title77_Lbl ='saya'
    LET $Date_Lbl ='Tarikh'
    LET $Pers_in_chg_Lbl ='Tandatangan Majikan atau Wakilnya'
    LET $Company_address_Lbl ='Nama dan Alamat Perusahaan'
    LET $Name_Lbl='Nama'
    LET $Phone_Lbl='Nombor Telefon'
    LET $EE_signature_Lbl='Cop Rasmi Perusahaan'
    LET $Lama_Lbl='Lama'
    LET $mon1_Lbl='JANUARY'
    LET $mon2_Lbl='FEBRUARY'
    LET $mon3_Lbl='MARCH'
    LET $mon4_Lbl='APRIL'
    LET $mon5_Lbl='MAY'
    LET $mon6_Lbl='JUNE'
    LET $mon7_Lbl='JULY'
    LET $mon8_Lbl='AUGUST'
    LET $mon9_Lbl='SEPTEMBER'
    LET $mon10_Lbl='OCTOBER'
    LET $mon11_Lbl='NOVEMBER'
    LET $mon12_Lbl='DECEMBER'
    LET $officer_Lbl='(HURUF BESAR)'



end-procedure


!!*********************************
!Procedure : get-contrb-mmm
!*********************************

begin-procedure get-contrb-mmm


  evaluate $Month_Cd
    when = '1'
          let $mmStr = $mon1_Lbl
    when = '2'
          let $mmStr = $mon2_Lbl
    when = '3'
          let $mmStr = $mon3_Lbl
    when = '4'
          let $mmStr = $mon4_Lbl
    when = '5'
          let $mmStr = $mon5_Lbl
    when = '6'
          let $mmStr = $mon6_Lbl
    when = '7'
          let $mmStr = $mon7_Lbl
    when = '8'
          let $mmStr = $mon8_Lbl
    when = '9'
          let $mmStr = $mon9_Lbl
    when = '10'
          let $mmStr = $mon10_Lbl
    when = '11'
          let $mmStr = $mon11_Lbl
    when = '12'
          let $mmStr = $mon12_Lbl
    when-other
      let $mmStr = ' '
    end-evaluate

end-procedure
!

!************************************
!Procedure : Print-Output           *
!************************************
begin-procedure Print-Output

   do get-contrb-mmm

   if $FirstPage = 'Y'
      Let $FirstPage = 'N'
      !graphic () font 5 8
      !page-number             (2,1)   'Lembaran     '
      !last-page               () 'of    '
      graphic () font 5 8
      print 'Muka Surat' (1,1)
            print #page-number (1,14) edit '9999'

      graphic () font 5 10
      print $ReportTitle (1,86)
      graphic () font 5 8
      print $Employer_code_Lbl (1,157)
      graphic (2,140,40) box 3 10
      graphic (1,161,3) vert-line 8
      graphic () font 5 10
      print $Title1_Lbl (3,75)
      graphic () font 5 7
      print $Title2_Lbl (3,141)
      graphic () font 5 10
      print $SocNbr (3,163) BOLD
      print $Title3_Lbl (5,45)
      graphic () font 5 8
      print $Title4_Lbl (6,79)
      graphic () font 3 8
      Let $Title_5 = $Title5_Lbl || ' '||$Title55_Lbl
      print $Title_5 (8,1)
      graphic () font 5 9
      Let $Month_Yr = $mmStr ||' ' ||$year
      print $Month_Yr (8,125)

      !print $ToDate (8,112) edit 'MONTH-YYYY'
      graphic (9,1,33) box 2
      !graphic () font 5 6
       graphic () font 3 8

      print $Title6_Lbl (10,2)
      graphic (11,1,180) box 31
      graphic (10,34,31) vert-line 8
      graphic (10,81,31) vert-line 8
      graphic (10,107,31) vert-line 8
      graphic (10,128,31) vert-line 8
      print $EE_IC_Number_Lbl (12,3)
      print $Emp_name_Lbl (12,40) WRAP 30 2
      print $Emp_soc_ref1_Lbl (12,83)
      print $Term_date_Lbl (12,108)
      print $Comments_Lbl (12,145)
      print $EE_IC_number2_Lbl (13,1)
      print $Emp_soc_ref2_Lbl (13,83)
      print $Term_date2_Lbl (13,109)
      graphic (15,1,180) horz-line 8
      let $Title7 = $Title7_Lbl ||' ' || $Title77_Lbl
      print $Title7 (43,1)


      print $Date_Lbl (45,1)
      graphic (45,10,19) horz-line
      print $Pers_in_chg_Lbl (46,106)
      graphic (46,145,34) horz-line
      print $Company_address_Lbl (48,1)
      graphic () font 5 10
      print $todaydate (44,10) edit 'DD/MM/YYYY'
      print $CompanyName  (48,34)
      print $ADDRESS1  (+1,34)
      print $Co_Addr1  (+1,34)
      print $Co_Addr2  (+1,34)
      print $Co_Addr3  (+1,34)
      Let $City = rtrim($City,' ')
      Let $City-Postal = $CITY ||' ' || $POSTAL
      print $City-Postal (+1,34)
      let $STATE = rtrim($STATE,' ')
      Let $state_country = $STATE||'-'|| $County
      print $state_country (+1,34)

      print &PicPhone    (+2,34)
      print $Pers_In_Chg (50,125)
      graphic () font 3 8
      print $Name_Lbl              (50,106)
      graphic (50,112,67) horz-line
      print $officer_Lbl  (51,130)
      print $Phone_Lbl    (56,1)
      graphic (56,34,15) horz-line
      print $EE_signature_Lbl (54,106)
      graphic (54,129,50) horz-line

      PRINT '(1)'(15,15)
      PRINT '(2)'(15,55)
      PRINT '(3)'(15,93)
      PRINT '(4)'(15,115)
      PRINT '(5)'(15,150)
      Let #CurLine = 17
   end-if


   Add 1 to #CurLine
   if $ICPassport <> ''
   let #IC_Line = #CurLine
   else
    let #IC_Line = #CurLine - 1
   end-if

   graphic () font 4 8
   print $ICPassport  (#IC_Line,2)
   if &OldIcNbr <> ''
   print $Lama_Lbl      (#CurLine,27)
   end-if
   print $EmplName    (#CurLine,38)  wrap 30 2
   print &EmplMemShip (#CurLine,83)

   do Convert-to-DTU-Date(&TermDate, $Term_Eff_dtu)
   !do DTU-Add-Days($Term_Eff_dtu, -1, $Term_dtu)
   do Convert-from-DTU-Date($Term_Eff_dtu, $Term_Dt)
   do Format-DateTime($Term_Dt,$TrmDate,{DEFDMY},'','')

   print $TrmDate     (#CurLine,108)
   print &Descr       (#CurLine,130)

   !Add 2 to #CurLine
   Add 1 to #IC_Line
   print $NewICNbr    (#IC_Line,1)
   Add 2 to #CurLine
   Graphic (#CurLine,1,180) horz-line

end-procedure

!************************************
!Procedure : Print-footer         *
!************************************
begin-procedure Print-footer
      !let $Title7 = $Title7_Lbl ||' ' || $Title77_Lbl
      !print $Title7 (41,1)
      !print $Date_Lbl (44,1)
      !graphic (44,10,19) horz-line
      !print $Pers_in_chg_Lbl (46,106)
      !graphic (46,145,34) horz-line
      !print $Company_address_Lbl (48,1)
      graphic () font 5 10
      print $todaydate (45,10) edit 'DD/MM/YYYY'
      print $CompanyName  (48,34)
      print $ADDRESS1  (+1,34)
      print $Co_Addr1  (+1,34)
      print $Co_Addr2  (+1,34)
      print $Co_Addr3  (+1,34)
      Let $City = rtrim($City,' ')
      Let $City-Postal = $CITY ||' ' || $POSTAL
      print $City-Postal (+1,34)
      let $STATE = rtrim($STATE,' ')
      Let $state_country = $STATE||'-'|| $County
      print $state_country (+1,34)

      print &PicPhone    (+2,34)
      print $Pers_In_Chg (50,125)
      graphic () font 3 8
      print $Name_Lbl              (50,106)
      graphic (50,112,67) horz-line
      print $officer_Lbl  (51,130)
      print $Phone_Lbl    (56,1)
      graphic (56,34,15) horz-line
      print $EE_signature_Lbl (54,106)
      graphic (54,129,50) horz-line


end-procedure




#include 'prcslng.sqc'
#include 'adformat.sqc'  !Formats the address lines
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  !Date processing routines
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'ldnumlit.sqc'  !Load-NumberLits-Array procedure
!#Include 'netinwds.sqc'
#include 'readxlat.sqc'  !enables xlat table read
#Include 'rotname1.sqc'  !Rotate-Name Procedure
#include 'sqrtrans.sqc'  ! Translate SQR strings to given language
