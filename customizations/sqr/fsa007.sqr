!***********************************************************************
! FSA007: FSA Claim Reversal.
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:12:28:59                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'

Begin-Setup
  #Include 'setupdb.sqc'
End-Setup

!**************************************
Begin-Program
!**************************************

  do Init-Report

  display 'Report Began at: ' NoLine
  do display-time

  do Main-Program

  display 'Report Ended at: ' NoLine
  do display-time

  do StdAPI-Term

End-Program

!**************************************
Begin-Procedure Init-Report
!**************************************

  let $ReportID    = 'FSA007'
  let $ReportTitle = 'FSA Claim Reversal'

  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  do Init-DateTime
  do Get-Current-DateTime
  let $ReportYear4 = 1

  do StdAPI-Init
  if ($PRCS_Process_Instance = '')
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!**************************************
Begin-Procedure Ask-Values
!**************************************

  do Ask-EmplID
  do Ask-Plan-Type
  do Ask-FSA-ClaimID

End-Procedure

!**************************************
Begin-Procedure Get-Values
!**************************************

  do Select-Parameters
  do Get-EmplID
  do Get-Plan-Type
  do Get-FSA-ClaimID

End-Procedure

!**************************************
Begin-Procedure Ask-EmplID
!**************************************

  input $EmplID MaxLen=11 'Enter Employee ID'
  let $EmplID = UPPER(RTRIM($EmplID, ' '))

End-Procedure

!**************************************
Begin-Procedure Ask-Plan-Type
!**************************************

  input $Plan_Type MaxLen=2 'Enter Plan Type of FSA Account'
  let $Plan_Type = UPPER(RTRIM($Plan_Type, ' '))

End-Procedure

!**************************************
Begin-Procedure Ask-FSA-ClaimID
!**************************************

  input $ClaimID MaxLen=8 'Enter FSA Claim ID to be reversed'
  let $ClaimID = UPPER(RTRIM($ClaimID, ' '))

End-Procedure

!**************************************
Begin-Procedure Main-Program
!**************************************

  !-------------- Display Entered Keys --------------
  display 'EmplID:     ' NoLine
  display $EmplID
  display 'Plan Type:  ' NoLine
  display $Plan_Type
  display 'ClaimID:    ' NoLine
  display $ClaimID
  display ''
  !--------------------------------------------------

  let $ClaimFound  = 'N'
  let #Check_Total = 0

Begin-Select
CL.EMPLID
CL.EMPL_RCD
PD.NAME
CL.PLAN_TYPE
CL.BENEFIT_PLAN
CL.CLAIMID
CL.SVC_FROM_DT
CL.SVC_TO_DT
CL.FSA_CLAIM_SUB_AMT
CL.FSA_CLAIM_APR_AMT
CL.FSA_CLAIM_STATUS

  do Get-Balance-Year

  !--------------- Display Claim Info ---------------
  display 'Submitted by: '        NoLine
  display &PD.NAME
  display 'Service from '         NoLine
  do Format-DateTime(&CL.Svc_From_DT, $Out, {DEFDATE}, '', '')
  display $Out                    NoLine
  display ' to '                  NoLine
  do Format-DateTime(&CL.Svc_To_DT, $Out, {DEFDATE}, '', '')
  display $Out                    NoLine
  display ' for '                 NoLine
  move 'PLAN_TYPE'   to $FieldName
  move &CL.Plan_Type to $FieldValue
  do Read-Translate-Table
  display $XlatShortName          NoLine
  display ' at '                  NoLine
  display &CL.FSA_Claim_Sub_Amt   $9999.99
  display ''
  !--------------------------------------------------

  let $ClaimFound = 'Y'
  do Get-FSA-Benefit-YTD
  if ($FSABenFound = 'N') Or (&BN.FSA_Acct_Status = 'C') Or
     ((&CL.FSA_Claim_Status <> 'F') And
       (&CL.FSA_Claim_Status <> 'P') And
         (&CL.FSA_Claim_Status <> 'R'))
    Exit-Select
  end-if
  do Reverse-Checks
  do Update-Reversed-Claim
  do Update-FSA-Account
  display ''

FROM  PS_FSA_CLAIM     CL,
      PS_PERSON_NAME   PD
WHERE CL.EMPLID    = $EmplID
  AND CL.PLAN_TYPE = $Plan_Type
  AND CL.CLAIMID   = $ClaimID
  AND PD.EMPLID    = CL.EMPLID
End-Select

  if ($ClaimFound = 'N')
    display '>>>>> No FSA Claim found matching these keys <<<<<'
  end-if
  if ($FSABenFound = 'N')
    display '>>>>> Active FSA Benefit for Balance Year ' NoLine
    display &BalanceYear                           9999 NoLine
    display ' was not found <<<<<'
  end-if
  if (&BN.FSA_Acct_Status = 'C')
    display '>>>>> FSA Account for Balance Year ' NoLine
    display &BalanceYear                     9999 NoLine
    display ' is Closed <<<<<'
  end-if
  if Not IsBlank(&CL.FSA_Claim_Status) And
     (&CL.FSA_Claim_Status <> 'F') And
       (&CL.FSA_Claim_Status <> 'P') And
         (&CL.FSA_Claim_Status <> 'R')
    display '>>>>> Claim status ('                 NoLine
    display &CL.FSA_Claim_Status                   NoLine
    display ') does not require reversal <<<<<'
  end-if
  display ''

End-Procedure

!************************************
Begin-Procedure Get-Balance-Year
!************************************

Begin-SELECT
MIN(B.BALANCE_YEAR)   &BalanceYear
MIN(B.BEGIN_DT)       &BeginDt
MAX(B.END_DT)         &EndDt

  let $YearBegin = &BeginDt
  let $YearEnd = &EndDt

FROM  PS_FSA_BENEF_TBL A,
      PS_BALANCE_ID_DEF B
WHERE A.PLAN_TYPE      = &CL.Plan_Type
  AND A.BENEFIT_PLAN   = &CL.Benefit_Plan
  AND A.EFFDT =
      (SELECT MAX(C.EFFDT)
       FROM   PS_FSA_BENEF_TBL C
       WHERE  C.PLAN_TYPE        = A.PLAN_TYPE
         AND  C.BENEFIT_PLAN     = A.BENEFIT_PLAN
         AND  C.EFFDT           <= &CL.Svc_From_DT)
  AND B.SETID        = A.SETID
  AND B.BALANCE_ID   = A.BALANCE_ID
  AND B.BALANCE_YEAR =
      (SELECT D.BALANCE_YEAR
       FROM   PS_BALANCE_ID_DEF D
       WHERE  D.SETID      = A.SETID
         AND  D.BALANCE_ID = A.BALANCE_ID
         AND  D.BEGIN_DT  <= &CL.Svc_From_DT
         AND  D.END_DT    >= &CL.Svc_From_DT)
End-SELECT
End-Procedure

!************************************
Begin-Procedure Get-FSA-Benefit-YTD
!************************************

  let $FSABenFound = 'N'

Begin-SELECT
BN.EFFDT
BN.FSA_ACCT_STATUS
SM.FSA_SUB_AMT_YTD
SM.FSA_APR_AMT_YTD
SM.FSA_PD_AMT_YTD

  let $FSABenFound = 'Y'

FROM  PS_FSA_BENEFIT BN,
      PS_FSA_SUMMARY SM
WHERE BN.EMPLID         = &CL.Emplid
AND   BN.EMPL_RCD      = &CL.EMPL_RCD
AND   BN.COBRA_EVENT_ID = 0
AND   BN.PLAN_TYPE      = &CL.Plan_Type
AND   BN.EFFDT =
      (SELECT MAX(BN1.EFFDT)
       FROM   PS_FSA_BENEFIT BN1
       WHERE  BN1.EMPLID         = BN.EMPLID
         AND  BN1.EMPL_RCD      = BN.EMPL_RCD
         AND  BN1.COBRA_EVENT_ID = BN.COBRA_EVENT_ID
         AND  BN1.PLAN_TYPE      = BN.PLAN_TYPE
         AND  BN1.COVERAGE_ELECT = 'E'
         AND  BN1.COVERAGE_BEGIN_DT BETWEEN $YearBegin AND $YearEnd)
AND   SM.EMPLID       = BN.EMPLID
AND   SM.PLAN_TYPE    = BN.PLAN_TYPE
AND   SM.BALANCE_YEAR = &BalanceYear
End-SELECT
End-Procedure

!**************************************
Begin-Procedure Reverse-Checks
!**************************************

Begin-Select
PY.FORM_ID
PY.PAYCHECK_NBR
PY.CHECK_DT
PY.PLAN_TYPE
PY.FSA_CHECK_AMT
PY.FSA_PAYMENT_STATUS

  !--------------- Display Check Info ---------------
  display 'Reversing Check... Form: ' NoLine
  display &PY.Form_ID                 NoLine
  display ' Nbr: '                    NoLine
  display &PY.PAYCHECK_NBR          999999999999999 NoLine
  display ' Date: '                   NoLine
  do Format-DateTime(&PY.Check_Dt, $Out, {DEFDATE}, '', '')
  display $Out                        NoLine
  display ' Amt: '                    NoLine
  display &PY.FSA_Check_Amt  $9999.99
  !--------------------------------------------------

  let #Check_Total = #Check_Total + &PY.FSA_Check_Amt
  do Adjust-Affected-Claims
  do Update-Check

FROM  PS_FSA_PAYMT_CLAIM PC,
      PS_FSA_PAYMENT PY
WHERE PC.PLAN_TYPE = &CL.Plan_Type
  AND PC.CLAIMID   = &CL.ClaimID
  AND PY.FORM_ID   = PC.FORM_ID
  AND PY.PAYCHECK_NBR    = PC.PAYCHECK_NBR
  AND PY.CHECK_DT  = PC.CHECK_DT
  AND PY.EMPLID    = &CL.EmplId
  AND PY.EMPL_RCD = &CL.EMPL_RCD
  AND PY.PLAN_TYPE = &CL.Plan_Type
  AND PY.FSA_PAYMENT_STATUS IN ('R','P')
End-Select
End-Procedure

!**************************************
Begin-Procedure Adjust-Affected-Claims
!**************************************

Begin-Select
CL2.EMPLID
CL2.EMPL_RCD
CL2.PLAN_TYPE
CL2.CLAIMID
CL2.SVC_FROM_DT
CL2.SVC_TO_DT
PC2.FSA_CLAIM_AMT_PD

  !--------------- Display Claim Info ---------------
  display '   Adjust Claim... '           NoLine
  display &CL2.ClaimId                    NoLine
  display ' Reverse: '                    NoLine
  display &PC2.FSA_Claim_Amt_Pd  $9999.99 NoLine
  display ' Payment for services: '       NoLine
  do Format-DateTime(&CL2.SVC_FROM_DT, $Out, {DEFDATE}, '', '')
  display $Out                            NoLine
  display ' to '                          NoLine
  do Format-DateTime(&CL2.SVC_To_DT, $Out, {DEFDATE}, '', '')
  display $Out
  !--------------------------------------------------

  do Update-Affected-Claim

FROM  PS_FSA_PAYMT_CLAIM PC2,
      PS_FSA_CLAIM       CL2
WHERE PC2.FORM_ID   = &PY.Form_ID
  AND PC2.PAYCHECK_NBR    = &PY.PAYCHECK_NBR
  AND PC2.CHECK_DT  = &PY.Check_Dt
  AND PC2.PLAN_TYPE = &PY.Plan_Type
  AND CL2.EMPLID    = &CL.EmplId
  AND CL2.EMPL_RCD = &CL.EMPL_RCD
  AND CL2.PLAN_TYPE = &CL.Plan_Type
  AND CL2.CLAIMID   = PC2.CLAIMID
  AND CL2.CLAIMID  <> $ClaimID
End-Select
End-Procedure

!**************************************
Begin-Procedure Update-Affected-Claim
!**************************************

let $sql-statement = 'FSA007,Update-Affected-Claim,FSA_CLAIM,Upd'
Begin-SQL on-error=SQL-Error
UPDATE PS_FSA_CLAIM
SET    FSA_CLAIM_PD_TO_DT = FSA_CLAIM_PD_TO_DT - &PC2.FSA_Claim_Amt_Pd,
       FSA_CLAIM_STATUS = 'P'
WHERE EMPLID    = &CL2.EmplId
  AND EMPL_RCD = &CL2.EMPL_RCD
  AND PLAN_TYPE = &CL2.Plan_Type
  AND CLAIMID   = &CL2.ClaimID
End-SQL
End-Procedure

!**************************************
Begin-Procedure Update-Check
!**************************************

  if (&PY.FSA_Payment_Status = 'R')
    let $NewStatus = 'V'   !Void
  else
    let $NewStatus = 'X'   !Reversed
  end-if

let $sql-statement = 'FSA007,Update-Check,FSA_PAYMENT,Upd'
Begin-SQL on-error=SQL-Error
UPDATE PS_FSA_PAYMENT
SET    FSA_PAYMENT_STATUS = $NewStatus
WHERE FORM_ID   = &PY.Form_ID
  AND PAYCHECK_NBR    = &PY.PAYCHECK_NBR
  AND CHECK_DT  = &PY.Check_Dt
  AND PLAN_TYPE = &PY.Plan_Type
End-SQL
End-Procedure

!**************************************
Begin-Procedure Update-Reversed-Claim
!**************************************

let $sql-statement = 'FSA007,Update-Reversed-Claim,FSA_CLAIM,Upd'
Begin-SQL on-error=SQL-Error
UPDATE PS_FSA_CLAIM
SET    FSA_CLAIM_PD_TO_DT = 0,
       FSA_CLAIM_STATUS = 'X'
WHERE EMPLID    = &CL.EmplId
  AND EMPL_RCD = &CL.EMPL_RCD
  AND PLAN_TYPE = &CL.Plan_Type
  AND CLAIMID   = &CL.ClaimID
End-SQL
End-Procedure

!**************************************
Begin-Procedure Update-FSA-Account
!**************************************

let $sql-statement = 'FSA007,Update-FSA-Acct,FSA_SUMMARY,Upd'
Begin-SQL on-error=SQL-Error
UPDATE PS_FSA_SUMMARY
SET FSA_PD_AMT_YTD  = FSA_PD_AMT_YTD  - #Check_Total,
    FSA_SUB_AMT_YTD = FSA_SUB_AMT_YTD - &CL.FSA_Claim_Sub_Amt,
    FSA_APR_AMT_YTD = FSA_APR_AMT_YTD - &CL.FSA_Claim_Apr_Amt
WHERE EMPLID       = &CL.Emplid
  AND PLAN_TYPE    = &CL.Plan_Type
  AND BALANCE_YEAR = &BalanceYear
End-SQL
End-Procedure

!**************************************
Begin-Procedure Display-Time
!**************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!**************************************
#Include 'readxlat.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'validdt.sqc'   !Routines for validating dates
#Include 'number.sqc'    !Routines to format numbers

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

!****************************** End Of Report *******************************

