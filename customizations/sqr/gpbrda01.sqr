!***********************************************************************
!  GPBRDA01: Documento de Arrecadação de Receitas Federais             *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2016, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2016/01/21:12:01:03                                 *
!       $Release:  HR92                                                *
!           $Bug:  21501311                                            *
!                                                                      *
!***********************************************************************
#define CA0   1
#define CAA   2
#define CAB   5
#define CC0  10
#define CC1  20
#define CD0  30
 
#define C40  40
#define C60  60
#define C110 110
#define C115 115
#define C120 120

#define G0     1
#define G1     3
#define G2     5

#define L84   84
#define L100 100
#define L110 110
#define L125 125
#define L170 170

#include 'setenv.sqc'   ! set enviroment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
       Type=HPLASERJET
       Font=15
       Point-Size=12
       Pitch=17
       Symbol-Set=0U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
!       Orientation=Landscape
       Orientation=Portrait
       Top-Margin= .4
       Left-Margin=.4
       Max-Lines=82
       Max-Columns=130
       Char-Width=4.3    ! 7.2
       Line-Height=10     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
 End-Declare

end-Setup

!**************************************
begin-report
#debug show '** begin-report **'
!**************************************   
  Let #FontStd   = 4  
  let #SizeGrd1  = 12 
  Let #SizeGrd2  = 10   
  let #SizeStd   = 6   
  let #SizeSml   = 7
  let #SizeData  = 8

  let #pos  = instr($sqr-program,'gpbrda01',0)
  let #pos  = #pos - 1
  let $path = substr($sqr-program,1,#pos)
  let $FileDir = $path || 'srf.gif'
        
  #ifdef MVS
   let #pos  = instr($sqr-program,'gpbrda01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'srf)'
  #end-if

  #ifdef OS390
   let #pos  = instr($sqr-program,'gpbrda01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'srf)'
  #end-if

  #ifdef OS400
   let #pos  = instr($sqr-program,'gpbrda01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'srf)'
  #end-if

  #ifdef UNIX
   let $FileDir = $path || 'srf.gif'
  #end-if
  
  Do Init-Report
  Do Process-Main
  Do Stdapi-Term
  Do Reset
  
end-report

!***********************************************************************
begin-procedure Init-Report
#debug show 'PROCEDURE : Init-Report'
!***********************************************************************
  move '2' to $ReportDateType   ! Set for date to format as DMY
  move '1' to $ReportYear4      ! Set for year to be formatted YYYY
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime 
  move 'GPBRDA01' to $ReportID
  move 'Documento de Arrecadação de Receitas Federais' to $ReportTitle
  move '2016-A' to $ReportVersion
  
  move '.'                To $ReportSThousand 
  move ','                To $ReportSDecimal
  
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display $AsOfToday noline
  display ' ' noline
  display &timeBegan
end-procedure Init-Report

!***********************************************************************
begin-procedure Process-Main
#debug show 'PROCEDURE : Process-Main'
!DOC********************************************************************
! Procedure     : Process-Main
! Description   : 
! Input Vars    :
! Output Vars   :
!***********************************************************************
  Let $WhereEmplStatus = ''
  Let #rows = 0
  Let #AmountIRRF    = 0
  Let #TotalIRRF     = 0 
  Let #DedAmountIRRF = 0
  Let #ErnAmountIRRF = 0
  Let $WhereEmployees = ''
  Let $WhereRslt = ''
  
  Do Select-Parameters
       
  
  Evaluate $EmployeeStatus
  when = '1'
       Let $WhereEmplStatus = 'AND J.EMPL_STATUS NOT IN (' || chr(39) || 'T' || chr(39) || ',' || chr(39) || 'V' || chr(39) || ','      
       Let $WhereEmpStRslt = 'AND PP.SEL_STAT = ' || chr(39) || 'A' || chr(39)  || ' '
       Let $WhereEmplStatus = $WhereEmplStatus || chr(39) || 'U' || chr(39) || ',' || chr(39) || 'W' || chr(39) || ','   
       Let $WhereEmplStatus = $WhereEmplStatus || chr(39) || 'X' || chr(39) || ',' || chr(39) || 'D' || chr(39) || ')'
       
       Let $WhereEmpStRslt = 'AND PP.SEL_STAT = ' || chr(39) || 'A' || chr(39)  || ' '  
       
  when = '2'
       Let $WhereEmplStatus = 'AND J.EMPL_STATUS IN (' || chr(39) || 'T' || chr(39) || ',' || chr(39) || 'V' || chr(39) || ','
       Let $WhereEmplStatus = $WhereEmplStatus || chr(39) || 'U' || chr(39) || ',' || chr(39) || 'W' || chr(39) || ','   
       Let $WhereEmplStatus = $WhereEmplStatus || chr(39) || 'X' || chr(39) || ',' || chr(39) || 'D' || chr(39) || ')'
       
       Let $WhereEmpStRslt = 'AND PP.SEL_STAT = ' || chr(39) || 'I' || chr(39)  || ' '
            
  end-evaluate    
  
  Do Process-Data
  
  Let #AmountIRRF   = abs(#ErnAmountIRRF - #DedAmountIRRF)
  Let #InterestIRRF = #AmountIRRF * #Interest
  Let #FineIRRF     = #AmountIRRF * #Fine
  Let #TotalIRRF    = #AmountIRRF + #InterestIRRF + #FineIRRF
  
  #debug show '#rows     ' #rows
  #debug show '#AmountIRRF ' #AmountIRRF
  
  If #rows > 0 and
     #AmountIRRF > 0
     Do Print-Data
  End-if
  
end-procedure Process-Main

!**************************************
begin-procedure Select-Parameters
#debug show 'PROCEDURE : Select-Parameters'
!DOC********************************************************************
! Procedure     : Select-Parameters
! Description   : 
! Input Vars    :
! Output Vars   :
!***********************************************************************
Let $CondEmplid      = ''
Let $WhereEstabID    = ''
Let $WhereEstabClass = ''
Let $VacationInd     = ''
Let $EmployeeStatus  = ''
Let #Fine            = 0
Let #Interest        = 0

begin-select
RC.ESTABID
RC.RUN_TYPE
RC.GPBR_FORMAT_ID
RC.GPBR_VACATION_IND
RC.GPBR_TERM_IND
RC.GPBR_DARF_CODE
RC.BEGIN_DT
RC.END_DT
RC.GPBR_DARF_DATE
RC.DATE_DUE
RC.GPBR_FINE_PCT
RC.GPBR_FINE_FACTOR
RC.GPBR_FINE_AMOUNT
RC.GPBR_INTEREST_PCT
RC.GPBR_INTEREST_FAC
RC.GPBR_DARF_REF_NUM

  Let $Estabid_CNPJ     = Rtrim(&RC.ESTABID , ' ')  
  Let $RunType     = Rtrim(&RC.RUN_TYPE, ' ')
  Let $FormatId    = Rtrim(&RC.GPBR_FORMAT_ID, ' ')
  Let $VacationInd = Rtrim(&RC.GPBR_VACATION_IND, ' ')
  Let $EmployeeStatus     = Rtrim(&RC.GPBR_TERM_IND, ' ')
  Let $Code        = Rtrim(&RC.GPBR_DARF_CODE, ' ')
  Let #FinePct     = &RC.GPBR_FINE_PCT
  Let #FineFac     = &RC.GPBR_FINE_FACTOR
  Let #InterPct    = &RC.GPBR_INTEREST_PCT
  Let #InterFac    = &RC.GPBR_INTEREST_FAC
  Let $RefNum      = Rtrim(&RC.GPBR_DARF_REF_NUM, ' ')
  
  If #FinePct > 0
     Let #Fine = #FinePct / 100
  else
     Let #Fine = #FineFac 
  end-if
  
  If #InterPct > 0
     Let #Interest = #InterPct  / 100
  else
     Let #Interest = #InterFac
  end-if
   
  Let $DateFrom = &RC.GPBR_DARF_DATE
  Let $DateDue = &RC.DATE_DUE
  
  Let $BeginDt = Rtrim(&RC.BEGIN_DT, ' ')
  Let $EndDt = Rtrim(&RC.END_DT, ' ')

  Do Create-Strings-Labels
  Do Declare-Rows   

  Do Exists-Establishment
  Do Exists-Employees
  Do Select-Establishment
  Do Select-FormatID
  Do Select-EmplClass 

FROM  PS_GPBR_RC_DARF RC
WHERE RC.OPRID  = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure Select-Parameters

!**************************************
begin-procedure Create-Strings-Labels
#debug show '** Create-Strings-Labels **'
!**************************************
  
  Let $LTitle01    = 'MINISTÉRIO DA FAZENDA' 
  Let $LTitle02    = 'SECRETARIA DA RECEITA FEDERAL'    
  Let $LTitle03    = 'Documento de Arrecadação de Receitas Federais'
  Let $LTitle04    = 'D A R F' 
  Let $LTitle05    = 'A T E N C Ã O'
  
  Let $LComments01 = 'Veja no verso'
  Let $LComments02 = 'instruções para preenchimento'
  
  Let $LText01     = 'É  vedado  o  recolhimento   de  tributos   e   contribuições'
  Let $LText02     = 'administrados pela Secretaria de Receita Federal cujo valor total'
  Let $LText03     = 'seja inferior a R$ 10,00. Ocorrendo  tal  situação,  adicione  esse'
  Let $LText04     = 'valor ao  tributo/contribuição de mesmo código de períodos'
  Let $LText05     = 'subsequentes, até que o total seja igual ou superior a R$ 10,00.'
  
  Let $LNumber01   = 'NOME / TELEFONE'
  Let $LNumber02   = 'PERÍODO DE APURAÇÃO'
  Let $LNumber03   = 'NÚMERO DO CPF OU CGC'
  Let $LNumber04   = 'CÓDIGO DA RECEITA'
  Let $LNumber05   = 'NÚMERO DE REFERÊNCIA'
  Let $LNumber06   = 'DATA DE VENCIMENTO'
  Let $LNumber07   = 'VALOR DO PRINCIPAL'
  Let $LNumber08   = 'VALOR DA MULTA'  
  Let $LNumber09   = 'VALOR DOS JUROS E/OU'
  let $LNumber09b  = 'ENCARGOS DL-1.025/69'
  Let $LNumber10   = 'VALOR TOTAL'
  Let $LNumber11   = 'AUTENTICAÇÃO BANCÁRIA (Somente nas 1° e 2º vias)'
  
end-procedure Create-Strings-Labels

!**************************************
begin-procedure Declare-Rows
#debug show '** Declare-Rows **'
!**************************************
!Row 3  

  Let #R1   = 3
  Let #R2  = #R1 * 2
  Let #R3  = #R1 * 3
  Let #R4  = #R1 * 4
  Let #R5  = #R1 * 5
  Let #R6  = #R1 * 6
  Let #R7  = #R1 * 7
  Let #R10 = #R1 * 10
  
end-procedure Declare-Rows

!**************************************
begin-procedure Exists-CalID
#debug show '** Exists-CalID **'
!**************************************
Begin-Select
COUNT(*) &CountCalIds

    If &CountCalIds > 0
      Let $CondCalId = ' AND PP.CAL_ID IN (SELECT CI.CAL_ID FROM PS_GPBR_RC_DARF_CI CI WHERE CI.OPRID = ' 
      Let $CondCalid = $CondCalid || '''' || $prcs_oprid  || '''' || ' AND CI.RUN_CNTL_ID =  '
      Let $CondCalid = $CondCalid || '''' || $prcs_run_cntl_id || ')'
    End-If    

FROM PS_GPBR_RC_DARF_CI EX1
WHERE EX1.OPRID       = $prcs_oprid
AND   EX1.RUN_CNTL_ID = $prcs_run_cntl_id
AND   EX1.CAL_ID      <> ' '
End-Select 
end-procedure Exists-CalID

!**************************************
begin-procedure Exists-Establishment
#debug show '** Exists-Establishment **'
!**************************************
Begin-Select
COUNT(*) &CountEstabs

    If &CountEstabs > 0
       
       Let $WhereEstabID = ' AND J.ESTABID IN (SELECT ES.ESTABID FROM PS_GPBR_RC_DARF_ES ES WHERE ES.OPRID = '               
       Let $WhereEstabID = $WhereEstabID || '''' || $prcs_oprid  || '''' || ' AND ES.RUN_CNTL_ID =  '
       Let $WhereEstabID = $WhereEstabID || '''' || $prcs_run_cntl_id || '''' || ' ) '
       
    End-If
    

FROM PS_GPBR_RC_DARF_ES EX2
WHERE EX2.OPRID       = $prcs_oprid
AND   EX2.RUN_CNTL_ID = $prcs_run_cntl_id
AND   EX2.ESTABID     <> ' '
End-Select
end-procedure Exists-Establishment


!**************************************
begin-procedure Select-EmplClass
#debug show '** Select-EmplClass     **'
!**************************************

       Let $WhereEstabClass = ' AND D.COMPANY = J.COMPANY ' 
       Let $WhereEstabClass = $WhereEstabClass ||' AND D.EMPL_CLASS = J.EMPL_CLASS AND D.COMPANY = ' 
       Let $WhereEstabClass = $WhereEstabClass || '''' || $Company  || '''' || ' AND D.GPBR_DARF_CODE =  '
       Let $WhereEstabClass = $WhereEstabClass || '''' || $Code || '''' || ' '
       Let $WhereEstabClass = $WhereEstabClass ||' AND D.EFFDT = (SELECT MAX(DE.EFFDT) FROM PS_GPBR_PAR_DARF_E DE '
       Let $WhereEstabClass = $WhereEstabClass ||' WHERE DE.COMPANY = D.COMPANY AND DE.GPBR_DARF_CODE = D.GPBR_DARF_CODE AND DE.EFFDT <= S.SEG_END_DT ) '     
       Let $WhereEstabClass = $WhereEstabClass ||' AND D.GPBR_FORMAT_ID = G.GPBR_FORMAT_ID ' 
       #debug show '$WhereEstabClass ' $WhereEstabClass
end-procedure Select-EmplClass


!**************************************
begin-procedure Exists-Employees
#debug show '** Exists-Employees **'
!**************************************
Begin-Select
COUNT(*) &CountEmpls

   Let #CountEmpls = &CountEmpls
   If  #CountEmpls > 0
   
       Let $CondEmplid = ' AND JJ.EMPLID IN (SELECT EE.EMPLID FROM PS_GPBR_RC_DARF_EE EE WHERE EE.OPRID = ' 
       Let $CondEmplid = $CondEmplid || '''' || $prcs_oprid  || '''' || ' AND EE.RUN_CNTL_ID =  '
       Let $CondEmplid = $CondEmplid || '''' || $prcs_run_cntl_id || '''' || ' ) '
     
       Let $WhereEmployees = ' AND J.EMPLID IN (SELECT EMPLID FROM PS_GPBR_RC_DARF_EE WHERE OPRID = '      
       Let $WhereEmployees = $WhereEmployees || '''' || $prcs_oprid  || '''' || ' AND RUN_CNTL_ID =  '
       Let $WhereEmployees = $WhereEmployees || '''' || $prcs_run_cntl_id || '''' || ' ) '
     
   End-If

FROM PS_GPBR_RC_DARF_EE EX3
WHERE EX3.OPRID       = $prcs_oprid
AND   EX3.RUN_CNTL_ID = $prcs_run_cntl_id
AND   EX3.EMPLID      <> ' '
End-Select
end-procedure Exists-Employees

!**************************************
begin-procedure Select-Establishment
#debug show '** Select-Establishment **'
#debug show '$Estabid_CNPJ ' $Estabid_CNPJ
#debug show '$EndDt   ' $EndDt
#debug show '$curr_language_cd ' $curr_language_cd
!**************************************
 
Begin-Select
E.DESCR
E.COMPANY 
E1.LEGAL_ENT_TYPE_BRA
E.EFFDT

  Let $LegType = rtrim(&E1.LEGAL_ENT_TYPE_BRA, ' ')
  Let $EstabidNm   = Ltrim(Rtrim(&E.DESCR, ' '), ' ')
  Let $Company     = Rtrim(&E.COMPANY, ' ')
  Let $Estab_effdt = &E.EFFDT
  
  If $LegType = 'COM'
     Do Get-Company-Descr
  else
     Do Select-Establishment-Lang
  end-if
  
  Do Select-Estab-Id
  Do Select-Estab-Phone

FROM PS_ESTAB_TBL E
    ,PS_ESTAB_TBL_BRA E1
WHERE E.ESTABID = $Estabid_CNPJ
AND   E.ESTABID = E1.ESTABID
AND   E.EFFDT = E1.EFFDT
AND   E.EFFDT = (SELECT MAX(X.EFFDT)
                 FROM PS_ESTAB_TBL X
                 WHERE X.ESTABID = E.ESTABID
                 AND   X.EFFDT <= $EndDt)
End-Select
  
End-Procedure Select-Establishment

!**************************************
begin-procedure Select-Establishment-Lang
#debug show '** Select-Establishment-Lang **'
#debug show '$Estabid_CNPJ ' $Estabid_CNPJ
#debug show '$EndDt   ' $EndDt
#debug show '$curr_language_cd ' $curr_language_cd
!**************************************

BEGIN-Select
EE.DESCR     

  Let $EstabidNm   = Ltrim(Rtrim(&EE.DESCR, ' '), ' ')

FROM PS_ESTAB_TBL_LANG EE
WHERE EE.ESTABID = $Estabid_CNPJ
AND   EE.LANGUAGE_CD = $curr_language_cd
AND   EE.EFFDT = $Estab_effdt
End-Select

End-Procedure Select-Establishment-Lang

!**************************************
begin-procedure  Get-Company-Descr
#debug show '** Get-Company-Descr **'
#debug show '$Company ' $Company
#debug show '$EndDt   ' $EndDt
#debug show '$curr_language_cd ' $curr_language_cd
!**************************************
Let $CompanyNm = ''
 
begin-select
CO.DESCR
  
  Let $EstabidNm  = Rtrim(&CO.DESCR, ' ')
 
from PS_COMPANY_TBL CO
WHERE CO.COMPANY = $Company
AND   CO.EFFDT = (SELECT MAX(C.EFFDT) 
                  FROM PS_COMPANY_TBL C
                  WHERE C.COMPANY = CO.COMPANY
                  AND C.EFFDT <= $EndDt)
end-select

Begin-Select
CL.DESCR

  Let $EstabidNm   = Rtrim(&CL.DESCR, ' ')
    
FROM PS_COMPNY_TBL_LANG CL
WHERE CL.COMPANY = $Company
AND CL.LANGUAGE_CD = $Curr_language_Cd
AND CL.EFFDT = (SELECT MAX(EFFDT) 
               FROM PS_COMPNY_TBL_LANG
               WHERE COMPANY = CL.COMPANY
               AND   LANGUAGE_CD = CL.LANGUAGE_CD
               AND   EFFDT <=  $EndDt)
End-Select
end-procedure   Get-Company-Descr


!**************************************
begin-procedure Select-Estab-Id
#debug show '** Select-Estab-Id **'
#debug show '$Estabid_CNPJ ' $Estabid_CNPJ
!**************************************
Let $CNPJ = ''

Begin-Select
A.ESTAB_ID_TYPE_BRA
A.ESTAB_ID_BRA

  Let $EstabIdType = rtrim(&A.ESTAB_ID_TYPE_BRA, ' ')
 
  Evaluate $EstabIdType
  when = 'CNPJ'
       Let $CNPJ = Rtrim(&A.ESTAB_ID_BRA, ' ' )
  End-Evaluate
  
FROM  PS_ESTAB_ID_BRA A
     ,PS_ESTAB_TBL_BRA A2
WHERE A.ESTABID = $Estabid_CNPJ
AND   A.ESTABID = A2.ESTABID
AND   A.COUNTRY = 'BRA'
AND   A.COUNTY_CD_BRA  = A2.COUNTY_CD_BRA
AND   A.EFFDT   = A2.EFFDT
End-Select
End-Procedure Select-Estab-Id

!**************************************
begin-procedure Select-Estab-Phone
#debug show '** Select-Estab-Phone **'
#debug show '$Estabid_CNPJ ' $Estabid_CNPJ
!**************************************
Let $Phone = ''
Let $Ext   = '00000'

Begin-Select
A.PHONE_TYPE
A.PHONE
A.COUNTRY_CODE

  Let $PhoneType = Rtrim(&A.PHONE_TYPE,' ')
  
  Evaluate $PhoneType
  when = 'MAIN'
  when = 'BUSN'
    Let $Phone = Rtrim(&A.PHONE, ' ')
  when = 'OTR'
    Let $Ext   = Rtrim(&A.PHONE, ' ')
    Let #Ext   = $Ext
    Let $Ext   = Edit(#Ext, '00000')
  End-Evaluate
  
FROM  PS_ESTAB_PHONE A
WHERE A.ESTABID = $Estabid_CNPJ
AND   A.EFFDT = (SELECT MAX(AA.EFFDT) 
                 FROM PS_ESTAB_PHONE AA
                 WHERE AA.ESTABID = A.ESTABID)
End-Select
End-Procedure Select-Estab-Phone

!**************************************
begin-procedure Select-FormatId
#debug show '** Select-FormatId **'
#debug show '$FormatId ' $FormatId
#debug show '$EndDt    ' $EndDt
!**************************************
Begin-Select
FO.GPBR_PIN_PSLP1_NUM
FO.GPBR_PIN_PSLP2_NUM
FO.GPBR_PIN_PSLP3_NUM
FO.GPBR_EARN_IE
FO.GPBR_DED_IE
FO.EFFDT

  Let #EarnTotal  = &FO.GPBR_PIN_PSLP1_NUM    
  Let #DedTotal   = &FO.GPBR_PIN_PSLP2_NUM  
  Let #NetPay     = &FO.GPBR_PIN_PSLP3_NUM 
  Let $ErnInclude = Rtrim(&FO.GPBR_EARN_IE, ' ' )
  Let $DedInclude = Rtrim(&FO.GPBR_DED_IE, ' ' )
  Let $Format_effdt = &FO.EFFDT
  
FROM PS_GPBR_PAYSL_FORM FO
WHERE FO.GPBR_FORMAT_ID = $FormatId
AND   FO.EFF_STATUS = 'A'
AND   FO.EFFDT = (SELECT MAX(FO1.EFFDT) FROM PS_GPBR_PAYSL_FORM FO1
                  WHERE  FO1.GPBR_FORMAT_ID  =  FO.GPBR_FORMAT_ID
                  and   FO1.EFF_STATUS      =  FO.EFF_STATUS
                  and   FO1.EFFDT           <= $EndDt)
End-Select
End-Procedure Select-FormatId

!**************************************
begin-procedure Process-Data
#debug show 'PROCEDURE : Process-Data'
#debug show '$BeginDt     ' $BeginDt
#debug show '$EndDt       ' $EndDt
#debug show '$WhereEstabID    ' $WhereEstabID
#debug show '$WhereEmployees  ' $WhereEmployees
#debug show '$WhereEmplStatus ' $WhereEmplStatus
#debug show '$WhereEstabClass ' $WhereEstabClass
!DOC********************************************************************
! Procedure     : Process-Main
! Description   : 
! Input Vars    : 
!                 $WhereEmplStatus Employee Status validation.
! Output Vars   :
!***********************************************************************

  if $ErnInclude = '10'
     Do Get-ErnsI 
  else
     Do Get-ErnsE 
  end-if

  if $DedInclude = '10'
     DO Get-DedI 
  else
     DO Get-DedE 
  end-if      

end-procedure Process-Data

!**************************************
begin-procedure Get-ErnsI
#debug show '** Get-ErnsI **'
#debug show '$WhereEmployees ' $WhereEmployees
!**************************************
#debug show '#ErnAmountIRRF ' #ErnAmountIRRF
Let #amount_val  = 0
begin-select
!RSLT1.PIN_NUM
SUM(RSLT1.CALC_RSLT_VAL + RSLT1.CALC_ADJ_VAL) &RSLT1.CAL_RSLT_VAL

  Let #amount_val  = &RSLT1.CAL_RSLT_VAL  
   
  If #amount_val <> 0
     Add 1 TO #rows
     Let #ErnAmountIRRF  = #ErnAmountIRRF + #amount_val
  end-if
 

FROM PS_GP_RSLT_ERN_DED RSLT1
    ,PS_GPBR_PAYSL_F_ER G
    ,PS_GP_PYE_SEG_STAT S 
    ,PS_GP_PYE_PRC_STAT P
    ,PS_JOB J
    ,PS_GPBR_PAR_DARF_E D
WHERE G.GPBR_FORMAT_ID  = $FormatId
AND   G.EFFDT           = $Format_effdt
AND   G.EFF_STATUS      = 'A'
AND   G.PIN_ERN_NUM     = RSLT1.PIN_NUM
AND   S.CAL_RUN_ID      = P.CAL_RUN_ID
AND   S.EMPLID          = P.EMPLID
AND   S.EMPL_RCD        = P.EMPL_RCD
AND   S.GP_PAYGROUP     = P.GP_PAYGROUP
AND   S.CAL_ID          = P.CAL_ID
AND   S.ORIG_CAL_RUN_ID = P.ORIG_CAL_RUN_ID
AND   S.RSLT_VER_NUM    = P.RSLT_VER_NUM
AND   S.RSLT_REV_NUM    = P.RSLT_REV_NUM
AND   S.CALC_ACTION     = 'C'
AND   S.RSLT_REV_NUM        = 1
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
!RLM AND   (( S.PYE_CALC_STAT IN ('50', '70') AND P.SEL_STAT = 'A') OR ( S.PYE_CALC_STAT ='00' AND P.SEL_STAT = 'S'))
AND   P.PYMT_DT         BETWEEN $BeginDt AND $EndDt
AND   P.PYE_PRC_IND         = 'N'
AND   P.SEL_ACTION          = 'C'
AND   P.CALC_TYPE           = 'P'
AND   P.RSLT_VER_NUM        = (SELECT MAX (X.RSLT_VER_NUM) 
                              FROM PS_GP_PYE_PRC_STAT X
                              WHERE P.EMPLID       = X.EMPLID
                    !         AND P.CAL_RUN_ID     = X.CAL_RUN_ID         --> Non selected to get the last calc.
                              AND P.EMPL_RCD       = X.EMPL_RCD
                              AND P.CAL_ID         = X.CAL_ID
                              AND P.GP_PAYGROUP    = X.GP_PAYGROUP
                              AND P.CALC_TYPE      = X.CALC_TYPE)
AND   RSLT1.EMPLID          = S.EMPLID
AND   RSLT1.EMPL_RCD        = S.EMPL_RCD 
AND   RSLT1.CAL_RUN_ID      = S.CAL_RUN_ID 
AND   RSLT1.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID 
AND   RSLT1.CAL_ID          = S.CAL_ID 
AND   RSLT1.GP_PAYGROUP     = S.GP_PAYGROUP 
AND   RSLT1.RSLT_SEG_NUM    = S.RSLT_SEG_NUM 
AND   RSLT1.EMPLID          = J.EMPLID
AND   RSLT1.EMPL_RCD        = J.EMPL_RCD
AND   RSLT1.GP_PAYGROUP     = J.GP_PAYGROUP
AND   J.EFFDT               = (SELECT MAX(JJ.EFFDT) 
                              FROM PS_JOB JJ 
                              WHERE JJ.EMPLID = J.EMPLID 
                              AND JJ.EMPL_RCD = J.EMPL_RCD 
                              AND JJ.ESTABID  = J.ESTABID
                              AND JJ.EFFDT <= S.SEG_END_DT )                         
AND   J.EFFSEQ              = (SELECT MAX(JJJ.EFFSEQ) 
                              FROM PS_JOB JJJ
                              WHERE JJJ.EMPLID   = J.EMPLID
                              AND   JJJ.EMPL_RCD = J.EMPL_RCD
                              AND   JJJ.ESTABID  = J.ESTABID
                              AND   JJJ.EFFDT    = J.EFFDT )      
[$WhereEmplStatus]
[$WhereEmployees]
[$WhereEstabID]
[$WhereEstabClass]
!GROUP BY RSLT1.PIN_NUM 
!ORDER BY RSLT1.PIN_NUM 

end-select

#debug show '#ErnAmountIRRF ' #ErnAmountIRRF
end-procedure Get-ErnsI 

!**************************************
begin-procedure Get-ErnsE
#debug show '** Get-ErnsE **'
#debug show '$WhereEmployees ' $WhereEmployees
!**************************************
#debug show '#ErnAmountIRRF ' #ErnAmountIRRF
Begin-Select
!RSLT2.PIN_NUM
SUM(RSLT2.CALC_RSLT_VAL + RSLT2.CALC_ADJ_VAL) &RSLT2.CAL_RSLT_VAL
!SUM(RSLT2.UNIT_RSLT_VAL + RSLT2.UNIT_ADJ_VAL) &RSLT2.UNI_RSLT_VAL 

  !Let #pin_num     = &RSLT2.PIN_NUM 
  Let #amount_val  = &RSLT2.CAL_RSLT_VAL
  
  if #amount_val <> 0
     Add 1 TO #rows
     Let #ErnAmountIRRF  = #ErnAmountIRRF + #amount_val
  end-if

FROM PS_GP_RSLT_ERN_DED RSLT2
    ,PS_GP_PYE_SEG_STAT S 
    ,PS_JOB J
    ,PS_GP_PIN GP
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GPBR_PAR_DARF_E D
WHERE RSLT2.PIN_NUM  NOT IN (SELECT G.PIN_ERN_NUM
                          FROM PS_GPBR_PAYSL_F_ER G
                          WHERE G.GPBR_FORMAT_ID = $FormatId
                          AND G.EFFDT = $Format_effdt)
AND   RSLT2.PIN_NUM     = GP.PIN_NUM
AND   GP.PIN_TYPE       = 'ER'                          
AND   S.CAL_RUN_ID      = P.CAL_RUN_ID
AND   S.EMPLID          = P.EMPLID
AND   S.EMPL_RCD        = P.EMPL_RCD
AND   S.GP_PAYGROUP     = P.GP_PAYGROUP
AND   S.CAL_ID          = P.CAL_ID
AND   S.ORIG_CAL_RUN_ID = P.ORIG_CAL_RUN_ID
AND   S.RSLT_VER_NUM    = P.RSLT_VER_NUM
AND   S.RSLT_REV_NUM    = P.RSLT_REV_NUM
AND   S.CALC_ACTION     = 'C'
AND   S.RSLT_REV_NUM        = 1
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
!RLM AND   (( S.PYE_CALC_STAT IN ('50', '70') AND P.SEL_STAT = 'A') OR ( S.PYE_CALC_STAT ='00' AND P.SEL_STAT = 'S'))
AND   P.PYMT_DT         BETWEEN $BeginDt AND $EndDt
AND   P.PYE_PRC_IND         = 'N'
AND   P.SEL_ACTION          = 'C'
AND   P.CALC_TYPE           = 'P'
AND   P.RSLT_VER_NUM        = (SELECT MAX (X.RSLT_VER_NUM) 
                              FROM PS_GP_PYE_PRC_STAT X
                              WHERE P.EMPLID       = X.EMPLID
                              AND P.EMPL_RCD       = X.EMPL_RCD
                              AND P.CAL_ID         = X.CAL_ID
                              AND P.GP_PAYGROUP    = X.GP_PAYGROUP
                              AND P.CALC_TYPE      = X.CALC_TYPE)
AND   RSLT2.EMPLID          = S.EMPLID
AND   RSLT2.EMPL_RCD        = S.EMPL_RCD 
AND   RSLT2.CAL_RUN_ID      = S.CAL_RUN_ID 
AND   RSLT2.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID 
AND   RSLT2.CAL_ID          = S.CAL_ID 
AND   RSLT2.GP_PAYGROUP     = S.GP_PAYGROUP 
AND   RSLT2.RSLT_SEG_NUM    = S.RSLT_SEG_NUM 
AND   RSLT2.EMPLID          = J.EMPLID
AND   RSLT2.EMPL_RCD        = J.EMPL_RCD
AND   RSLT2.GP_PAYGROUP     = J.GP_PAYGROUP
AND   J.EFFDT               = (SELECT MAX(JJ.EFFDT) 
                              FROM PS_JOB JJ 
                              WHERE JJ.EMPLID = J.EMPLID 
                              AND JJ.EMPL_RCD = J.EMPL_RCD
                              AND JJ.ESTABID  = J.ESTABID 
                              AND JJ.EFFDT <= S.SEG_END_DT )                         
AND   J.EFFSEQ              = (SELECT MAX(JJJ.EFFSEQ) 
                              FROM PS_JOB JJJ
                              WHERE JJJ.EMPLID   = J.EMPLID
                              AND   JJJ.EMPL_RCD = J.EMPL_RCD
                              AND   JJJ.ESTABID  = J.ESTABID 
                              AND   JJJ.EFFDT    = J.EFFDT )        
[$WhereEmplStatus]
[$WhereEmployees]
[$WhereEstabID]
[$WhereEstabClass]
!GROUP BY RSLT2.PIN_NUM 
!ORDER BY RSLT2.PIN_NUM 
end-select
#debug show '#ErnAmountIRRF ' #ErnAmountIRRF
end-procedure Get-ErnsE

!**************************************
begin-procedure Get-DedI
#debug show '** Get-DedI **'
!**************************************
#debug show '#DedAmountIRRF ' #DedAmountIRRF
#debug show '$FormatId ' $FormatId
#debug show '$Format_effdt ' $Format_effdt
#debug show '$BeginDt ' $BeginDt 
#debug show '$EndDt ' $EndDt
#debug show '$WhereEmplStatus ' $WhereEmplStatus
#debug show '[$WhereEmployees] '  $WhereEmployees
#debug show '[$WhereEstabID] ' $WhereEstabID
#debug show '[$WhereEstabClass] ' $WhereEstabClass

Let #amount_val = 0

begin-select
!H.PIN_NUM  &H.PIN_NUM
SUM(H.CALC_RSLT_VAL + H.CALC_ADJ_VAL) &CAL_RSLT_VAL


  Let #amount_val      = &CAL_RSLT_VAL
  !Let $PIN_NUM        = &H.PIN_NUM
  #debug show '&CAL_RSLT_VAL ' &CAL_RSLT_VAL
  #debug show '#amount_val '  #amount_val  
  !#debug show 'pin_num '   $PIN_NUM 
  if #amount_val <> 0
     Add 1 TO #rows
     Let #DedAmountIRRF  = #DedAmountIRRF + #amount_val
  end-if

FROM PS_GP_RSLT_ERN_DED H
    ,PS_GPBR_PAYSL_F_DE G
    ,PS_GP_PYE_SEG_STAT S 
    ,PS_JOB J
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GPBR_PAR_DARF_E D
WHERE G.GPBR_FORMAT_ID  = $FormatId
AND   G.EFFDT           = $Format_effdt
AND   G.EFF_STATUS      = 'A'
AND   G.PIN_DED_NUM     = H.PIN_NUM
AND   S.CAL_RUN_ID      = P.CAL_RUN_ID
AND   S.EMPLID          = P.EMPLID
AND   S.EMPL_RCD        = P.EMPL_RCD
AND   S.GP_PAYGROUP     = P.GP_PAYGROUP
AND   S.CAL_ID          = P.CAL_ID
AND   S.ORIG_CAL_RUN_ID = P.ORIG_CAL_RUN_ID
AND   S.RSLT_VER_NUM    = P.RSLT_VER_NUM
AND   S.RSLT_REV_NUM    = P.RSLT_REV_NUM
AND   S.CALC_ACTION     = 'C'
AND   S.RSLT_REV_NUM        = 1
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
!RLM AND   (( S.PYE_CALC_STAT IN ('50', '70') AND P.SEL_STAT = 'A') OR ( S.PYE_CALC_STAT ='00' AND P.SEL_STAT = 'S'))
AND   P.PYMT_DT         BETWEEN $BeginDt AND $EndDt
AND   P.PYE_PRC_IND         = 'N'
AND   P.SEL_ACTION          = 'C'
AND   P.CALC_TYPE           = 'P'
AND   P.RSLT_VER_NUM        = (SELECT MAX (X.RSLT_VER_NUM) 
                              FROM PS_GP_PYE_PRC_STAT X
                              WHERE P.EMPLID       = X.EMPLID
                              AND P.EMPL_RCD       = X.EMPL_RCD
                              AND P.CAL_ID         = X.CAL_ID
                              AND P.GP_PAYGROUP    = X.GP_PAYGROUP
                              AND P.CALC_TYPE      = X.CALC_TYPE)
AND   H.EMPLID          = S.EMPLID
AND   H.EMPL_RCD        = S.EMPL_RCD 
AND   H.CAL_RUN_ID      = S.CAL_RUN_ID 
AND   H.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID 
AND   H.CAL_ID          = S.CAL_ID 
AND   H.GP_PAYGROUP     = S.GP_PAYGROUP 
AND   H.RSLT_SEG_NUM    = S.RSLT_SEG_NUM 
AND   H.EMPLID          = J.EMPLID
AND   H.EMPL_RCD        = J.EMPL_RCD
AND   H.GP_PAYGROUP     = J.GP_PAYGROUP
AND   J.EFFDT               = (SELECT MAX(JJ.EFFDT) 
                              FROM PS_JOB JJ 
                              WHERE JJ.EMPLID = J.EMPLID 
                              AND JJ.EMPL_RCD = J.EMPL_RCD 
!RLM                          AND JJ.ESTABID  = J.ESTABID 
                              AND JJ.EFFDT <= S.SEG_END_DT )                         
AND   J.EFFSEQ              = (SELECT MAX(JJJ.EFFSEQ) 
                              FROM PS_JOB JJJ
                              WHERE JJJ.EMPLID   = J.EMPLID
                              AND   JJJ.EMPL_RCD = J.EMPL_RCD
!RLM                          AND   JJJ.ESTABID  = J.ESTABID 
                              AND   JJJ.EFFDT    = J.EFFDT )           
[$WhereEmplStatus]
[$WhereEmployees]
[$WhereEstabID]
[$WhereEstabClass]
!GROUP BY H.PIN_NUM 
!ORDER BY H.PIN_NUM 
end-select
#debug show '#DedAmountIRRF ' #DedAmountIRRF
end-procedure Get-DedI 

!**************************************
begin-procedure Get-DedE
#debug show '** Get-DedE **'
#debug show '$Estabid     ' $Estabid
#debug show '$WhereEmployees ' $WhereEmployees
!**************************************
#debug show '#DedAmountIRRF ' #DedAmountIRRF
Let #amount_val  = 0

Begin-Select
!RSLT4.CAL_RUN_ID
SUM(RSLT4.CALC_RSLT_VAL+ RSLT4.CALC_ADJ_VAL) &RSLT4.CAL_RSLT_VAL

  Let #amount_val  = &RSLT4.CAL_RSLT_VAL
  
  if #amount_val <> 0
     Add 1 TO #rows
     Let #DedAmountIRRF  = #DedAmountIRRF + #amount_val
  end-if

FROM PS_GP_RSLT_ERN_DED RSLT4
    ,PS_GP_PYE_SEG_STAT S 
    ,PS_JOB J
    ,PS_GP_PIN GP
    ,PS_GP_PYE_PRC_STAT P
    ,PS_GPBR_PAR_DARF_E D
WHERE RSLT4.PIN_NUM  NOT IN (SELECT G.PIN_DED_NUM
                          FROM PS_GPBR_PAYSL_F_DE G
                          WHERE G.GPBR_FORMAT_ID = $FormatId
                          AND G.EFFDT = $Format_effdt)
AND   RSLT4.PIN_NUM         = GP.PIN_NUM
AND   GP.PIN_TYPE           = 'DD'
AND   S.CAL_RUN_ID      = P.CAL_RUN_ID
AND   S.EMPLID          = P.EMPLID
AND   S.EMPL_RCD        = P.EMPL_RCD
AND   S.GP_PAYGROUP     = P.GP_PAYGROUP
AND   S.CAL_ID          = P.CAL_ID
AND   S.ORIG_CAL_RUN_ID = P.ORIG_CAL_RUN_ID
AND   S.RSLT_VER_NUM    = P.RSLT_VER_NUM
AND   S.RSLT_REV_NUM    = P.RSLT_REV_NUM
AND   S.CALC_ACTION     = 'C'
AND   S.RSLT_REV_NUM        = 1
AND   S.PYE_CALC_STAT IN ('50', '70', '75')
!RLM AND   (( S.PYE_CALC_STAT IN ('50', '70') AND P.SEL_STAT = 'A') OR ( S.PYE_CALC_STAT ='00' AND P.SEL_STAT = 'S'))
AND   P.PYMT_DT         BETWEEN $BeginDt AND $EndDt
AND   P.PYE_PRC_IND         = 'N'
AND   P.SEL_ACTION          = 'C'
AND   P.CALC_TYPE           = 'P'
AND   P.RSLT_VER_NUM        = (SELECT MAX (X.RSLT_VER_NUM) 
                              FROM PS_GP_PYE_PRC_STAT X
                              WHERE P.EMPLID       = X.EMPLID
                              AND P.EMPL_RCD       = X.EMPL_RCD
                              AND P.CAL_ID         = X.CAL_ID
                              AND P.GP_PAYGROUP    = X.GP_PAYGROUP
                              AND P.CALC_TYPE      = X.CALC_TYPE)
AND   RSLT4.EMPLID          = S.EMPLID
AND   RSLT4.EMPL_RCD        = S.EMPL_RCD 
AND   RSLT4.CAL_RUN_ID      = S.CAL_RUN_ID 
AND   RSLT4.ORIG_CAL_RUN_ID = S.ORIG_CAL_RUN_ID 
AND   RSLT4.CAL_ID          = S.CAL_ID 
AND   RSLT4.GP_PAYGROUP     = S.GP_PAYGROUP 
AND   RSLT4.RSLT_SEG_NUM    = S.RSLT_SEG_NUM 
AND   RSLT4.EMPLID          = J.EMPLID
AND   RSLT4.EMPL_RCD        = J.EMPL_RCD
AND   RSLT4.GP_PAYGROUP     = J.GP_PAYGROUP
AND   J.EFFDT               = (SELECT MAX(JJ.EFFDT) 
                              FROM PS_JOB JJ 
                              WHERE JJ.EMPLID = J.EMPLID 
                              AND JJ.EMPL_RCD = J.EMPL_RCD 
                              AND JJ.ESTABID  = J.ESTABID 
                              AND JJ.EFFDT <= S.SEG_END_DT )                         
AND   J.EFFSEQ              = (SELECT MAX(JJJ.EFFSEQ) 
                              FROM PS_JOB JJJ
                              WHERE JJJ.EMPLID   = J.EMPLID
                              AND   JJJ.EMPL_RCD = J.EMPL_RCD
                              AND   JJJ.ESTABID  = J.ESTABID 
                              AND   JJJ.EFFDT    = J.EFFDT )     
[$WhereEmplStatus]
[$WhereEmployees]
[$WhereEstabID]
[$WhereEstabClass]
!GROUP BY RSLT4.CAL_RUN_ID 
!ORDER BY RSLT4.CAL_RUN_ID
end-select
#debug show '#DedAmountIRRF ' #DedAmountIRRF
end-procedure Get-DedE

!**************************************
begin-procedure Print-Data
#debug show '** Print-Data **'
!**************************************

  Graphic (#R2 ,1  ,130) box 32  {G2}
  Graphic (#R2 ,1  ,65) box 10  {G0}
  Graphic (#R2 ,1  ,65) box 15  {G0}
  Graphic (#R2 ,1  ,65) box 21  {G0}
  
  Graphic (#R2 ,66 ,30 ) box  3  {G0}
  Graphic (#R2 ,66 ,30 ) box  6  {G0}
  Graphic (#R2 ,66 ,30 ) box  9  {G0}
  Graphic (#R2 ,66 ,30 ) box 12  {G0}
  Graphic (#R2 ,66 ,30 ) box 15  {G0}
  Graphic (#R2 ,66 ,30 ) box 18  {G0}
  Graphic (#R2 ,66 ,30 ) box 21  {G0}
  Graphic (#R2 ,66 ,30 ) box 24  {G0}
  Graphic (#R2 ,66 ,30 ) box 27  {G0}
  
  Graphic (#R2 ,66 ,65 ) box  3  {G0}
  Graphic (#R2 ,66 ,65 ) box  6  {G0}
  Graphic (#R2 ,66 ,65 ) box  9  {G0}
  Graphic (#R2 ,66 ,65 ) box 12  {G0}
  Graphic (#R2 ,66 ,65 ) box 15  {G0}
  Graphic (#R2 ,66 ,65 ) box 18  {G0}
  Graphic (#R2 ,66 ,65 ) box 21  {G0}
  Graphic (#R2 ,66 ,65 ) box 24  {G0}
  Graphic (#R2 ,66 ,65 ) box 27  {G0}
  Graphic (#R2 ,66 ,65 ) box 32  {G0}
  
  Let #row = #R2 + 1
  
  !COLUMN 1
  Alter-Printer Point-size = #SizeGrd1  Font-Type = Proportional Font = #FontStd
  Print $LTitle01                      (+1,{CC1} ) Bold 
  print-image (,5)
  type         = GIF-FILE
  image-size   = (14,6)
  source       = $FileDir
  Alter-Printer Point-size = #SizeGrd2  Font-Type = Proportional Font = #FontStd
  Print $LTitle02                      (+2  ,{CC1} )  
  Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Print $LTitle03                      (+2  ,{CC1} ) bold 
  Alter-Printer Point-size = #SizeGrd1  Font-Type = Proportional Font = #FontStd
  Print $LTitle04                      (+3  ,{CC1} ) Bold   
  Alter-Printer Point-size = #SizeGrd2  Font-Type = Proportional Font = #FontStd
  Print '01'                           (+2  ,{CAA})  Bold
  Alter-Printer Point-size = #SizeStd  Font-Type = Proportional Font = #FontStd
  Print $LNumber01                     (,    {CAB})  
  Alter-Printer Point-size = #SizeGrd2  Font-Type = Proportional Font = #FontStd
  Print $LComments01                   (+7  ,{CC1}) Bold
  Print $LComments02                   (+1  ,{CC0}) Bold
  Print $LTitle05                      (+5  ,30)  Bold
  Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Print $LText01                       (+1  ,{CAA})
  Print $LText02                       (+1  ,{CAA})   
  Print $LText03                       (+1  ,{CAA})  
  Print $LText04                       (+1  ,{CAA})   
  Print $LText05                       (+1  ,{CAA})

  !COLUMN 2
  Alter-Printer Point-size = #SizeGrd2  Font-Type = Proportional Font = #FontStd
  Print '02'                     (6,67) bold
  Print '03'                     (+3,67) bold
  Print '04'                     (+3,67) bold
  Print '05'                     (+3,67) bold
  Print '06'                     (+3,67) bold
  Print '07'                     (+3,67) bold
  Print '08'                     (+3,67) bold
  Print '09'                     (+3,67) bold
  Print '10'                     (+3,67) bold
  Print '11'                     (+3,67) bold
  Alter-Printer Point-size = #SizeStd  Font-Type = Proportional Font = #FontStd
  Print $LNumber02                     (6,70) 
  Print $LNumber03                     (+3,70)
  Print $LNumber04                     (+3,70)
  Print $LNumber05                     (+3,70)
  Print $LNumber06                     (+3,70)
  Print $LNumber07                     (+3,70)
  Print $LNumber08                     (+3,70)
  Print $LNumber09                     (+3,70)
  Print $LNumber09b                    (+1,70)
  Print $LNumber10                     (+2,70)
  Print $LNumber11                     (+3,70)

  !COLUMN 3
  Alter-Printer Point-size = #SizeData  Font-Type = Proportional Font = #FontStd
  Do Format-DateTime($DateFrom, $DateOut ,{DEFDMY}, '','')
  Print $DateOut                       (7,105)    Bold
  Print $CNPJ                          (+3,105)    Edit 'XX.XXX.XXX/XXXX-XX' Bold
  Print $Code                          (+3,105)    Bold
  Print $RefNum                        (+3,105)    Bold  
  Do Format-DateTime($DateDue, $DateOut ,{DEFDMY}, '','')  
  Print $DateOut                       (+3,105)    Bold 
  Print #AmountIRRF                    (+3,100)    Bold edit 999,999,999,999.99c
  Print #FineIRRF                      (+3,100)    Bold edit 999,999,999,999.99c
  Print #InterestIRRF                  (+3,100)    Bold edit 999,999,999,999.99c 
  Print #TotalIRRF                     (+3,100)    Bold edit 999,999,999,999.99c
  
  Print $EstabidNm                     (17,{CAA})  Bold 
  Print $phone                         (+1,{CAA})  Bold
  
end-procedure Print-Data 

!**************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports