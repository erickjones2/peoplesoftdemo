!***********************************************************************
!  GPMXIM05 :  Instituto Mexicano Del Seguro Social,                   *
!             AVISO DE BAJA DEL ASEGURADO                              *
!             Modificacion IMSS97                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  31781263                                            !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup07.sqc'
#Include 'setup02.sqc'  !Printer and page-size initialization

begin-report
  do Init-Report
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'GPMXIM05' to $ReportID
  display $ReportID 
  !display ' con Cejilla'
  move 'Instituto Mexicano Del Seguro Social' to $ReportTitle
  display $ReportTitle
  show 'Ver.2020 PUM37.01'
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  
  Let #EmployeeCount = 0
  Let $openXMLFile = 'N'

  let $FileName = 'gpmxim05.xml'
  let $FileName = Rtrim(LTRIM($FileName, ' '), ' ') 
  let $FileName = '{IMPORTPREFIX}' || $FileName || '{IMPORTSUFFIX}'
  
  Let $TemplateID = 'GPMX_IMSTERM'
  Let $ReportDefn = 'GPMX_IMSTERM' 

  Do Delete-RunControl
       
  Do Insert-XML-RunControl

  let #FNum  = 1
  let #FStat = 0
  let $xml_cntrl_begin = '<'
  let $xml_cntrl_end   = '>'
  let $xml_text_delim  = '"'
  let $xml_tag_end     = '/'
  let $xml_tag         = ''
  let $xml_content     = ''
  let $xml_output_line = ''
  
  do Select-Parameters-IMSS
  
  if rtrim($Estabid,' ') = ''
     do Company-Report
  else
     move $Estabid to $Reg_Patronal
     Let $Job_Tbl = 'A'
     Let $Reg_Patronal_RC = $Reg_Patronal
     
     Do Get-Establishment-Optn

     do Get-IMSS-Location
  end-if
  
    
  if #EmployeeCount = 0 and $openXMLFile = 'N'
     Do Open-XML-File($FileName, #FNum, #FStat, $openXMLFile) 
     
     let $xml_tag = 'EMPLOYEE_DATA'      
     Do Process-XML-Tag-Beg
     let $xml_tag = 'EMPLID'
     let $xml_content = 'REPORTE SIN EMPLEADOS'
     do Process-XML-Tag-Content
     let $xml_tag = 'EMPLOYEE_DATA'      
     Do Process-XML-Tag-End
     
     show 'No hay empleados procesados'
  End-if
  
  Do Close-File
  
end-procedure

!********************************************************
! Obtiene todos los registros patronales de la compañia*
!********************************************************
begin-procedure Company-Report
begin-select DISTINCT
LT.ESTABID
  move &LT.ESTABID to $Reg_Patronal
  
  Let $Job_Tbl = 'A'
  Let $Reg_Patronal_RC = $Reg_Patronal
     
  Do Get-Establishment-Optn
     
  do Get-IMSS-Location

FROM PS_ESTAB_TBL LT
WHERE LT.COMPANY = $Company
AND LT.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
                WHERE ESTABID = LT.ESTABID
                  AND COMPANY = $Company
                  AND EFFDT <= $EndDt)
AND LT.EFF_STATUS = 'A'
end-select
end-procedure Company-Report


!****************************************************************
begin-procedure Report
!****************************************************************
move 0 to #EECount
let $v_select = ''
let $v_espacio = ''
do Advice-Flag
do WhereForPrint

 if (rtrim($empini, ' ') <> '') and (rtrim($empfin,' ') = '')
  let $empini = rtrim($empini, ' ')
  move ' AND A.EMPLID = ''' to $v_select
  concat $EmpIni with $v_select
  concat ''''  with $v_select
 end-if

 if (rtrim($empini, ' ') <> '') and (rtrim($empfin,' ') <> '')
  let $empini = rtrim($empini, ' ')
  move ' AND A.EMPLID between ''' to $v_select
  concat $EmpIni with $v_select
  concat ''' AND ''' with $v_select
  concat $EmpFin  with $v_select
  concat ''''  with $v_select
 end-if

 if ($BegDt <> '') and ($EndDt <> '')
  concat ' AND T.EFFDT BETWEEN ' WITH $v_select
  concat ''''  with $v_select
  concat $BegDt with $v_select
  concat ''''  with $v_select
  concat ' AND ' with $v_select
  concat ''''  with $v_select
  concat $EndDt  with $v_select
  concat ''''  with $v_select
 else
   if ($fecini <> '') and ($fecfin <> '')
      let $EndDt = $FecFin
      concat ' AND A.ACTION_DT between ' with $v_select
      concat '''' with $v_select
      concat $FecIni with $v_select
      concat '''' with $v_select
      concat ' AND ' with $v_select
      concat '''' with $v_select
      concat $FecFin  with $v_select
      concat ''''  with $v_select
   end-if
 end-if
 if $TipSal <> '0040'
  concat ' AND JBJR.SALARY_TYPE_MEX = ''' with $v_select
  concat $TipSal with $v_select
  concat '''' with $v_select
 end-if

begin-SELECT DISTINCT
A.EMPLID
A.EMPL_RCD
JBJR.WORKER_TYPE_MEX
T.EFFDT
A.COMPANY
A.EFFDT
A.ACTION_DT
A.ACTION
A.ACTION_REASON
A.ESTABID
A.LOCATION
JBJR.IMS_TERM_DT_MEX
T.ACTION
T.ACTION_REASON
S.IMS_PRN_FORM_MEX
S.IMS_TER_REASON_MEX
NAM.FIRST_NAME
NAM.LAST_NAME
NAM.SECOND_LAST_NAME
PER.SEX
  
  move ' ' to $Action
  move ' ' to $Action_Reason
  Let $Male = ''
  Let $Female = ''
  Let $RFC = ''
  Let $CURP= ''
  let $IMSS_ID = ''
  Let $Name         = ''
  Let $PaternalName = ''
  Let $MaternalName = ''
  let $Occupation = ''
  Let $Company_State = ''
  
  move &A.EMPLID to $Emplid
  Move &JBJR.WORKER_TYPE_MEX to $Worker_Type
  move &A.ACTION        to $Action
  move &A.ACTION_REASON to $Action_Reason
  move &NAM.FIRST_NAME to $Name
  move &NAM.LAST_NAME  to $PaternalName
  move &NAM.SECOND_LAST_NAME  to $MaternalName
  move &A.COMPANY to $Company
  
  Do GetNationalID
    
  do to_upper($Name)
  do to_upper($PaternalName)
  do to_upper($MaternalName)
  

  do to_upper($Company)
  do Get-Company-Data-Mex
 
  Let $CompanyName = upper($CompanyName)
  
  do Obtain_Number($IMSSStreet1, $CompnyNum_Ext, $CompnyNum_Int)
  do to_upper($IMSSStreet1)
  do to_upper($IMSSStreet2)
  do to_upper($IMSSStreet3)
  do to_upper($IMSSStreet4)
  do to_upper($IMSSState)
 

  do  convert-to-dtu-date (&JBJR.IMS_TERM_DT_MEX,$TermDt-dtu)
  let $TermDt   = translate ($TermDt-dtu,'-','')
  do  dtu-parse-date($TermDt-dtu,#dtu-yr,#dtu-mo,#dtu-da)
  move #dtu-yr to $Term-yr 9999
  let $Term-yy = substr ($Term-yr,1,4)
  move  #dtu-da to $Term-da 09
  move  #dtu-mo to $Term-mo 09
    
  do convert-to-dtu-date ($Current-Date,$CurrentDt-dtu)
  do dtu-parse-date($CurrentDt-dtu,#dtu-yr,#dtu-mo,#dtu-da)
  
  move #dtu-yr to $dtu-yr 9999
  let $dtu-yy = substr ($dtu-yr,1,4)
  move  #dtu-da to $dtu-da 09
  move  #dtu-mo to $dtu-mo 09
  
  Let $Currt_Dy = $dtu-da
  Let $Currt_Mn = $dtu-mo
  Let $Currt_Yr = $dtu-yr
  
  do Get-Action-Reason
  Let $Action_Reason_Descr = Upper($Action_Reason_Descr)
  Do to_upper($Job_LegalRep)
    
  
  If Rtrim(&PER.SEX, ' ') = 'M'
     Let $Male = 'X'
  else
     Let $Female = 'X'
  end-if
  
  Do SEARCH
  
  If #EmployeeCount = 0
      Do Open-XML-File($FileName, #FNum, #FStat, $openXMLFile)
  end-if
  
  #debug show '------------------------------------------------------------------'
   show 'Emplid       : ' $Emplid
  show 'Reg Ptronal  : ' $Reg_Patronal
  #debug show '$Paternalname: ' $Paternalname
  #debug show '$Maternalname: ' $Maternalname
  #debug show '$Name        : ' $Name        
  #debug show '$IMSS_ID     : ' $IMSS_ID ' - $tipfor ' $tipfor '$IMSSer  ' $IMSSer !numero de SS
  #debug show '$RFC         : ' $RFC
  #debug show 'CURP         : ' $CURP
  #debug Show 'IMSS         : ' $IMSS_ID
   show 'Term Date    : ' $Term-da ' - ' $Term-mo ' - ' $Term-yy
  #debug Show 'Current Date : ' $Currt_Dy ' - ' $Currt_Mn ' - ' $Currt_Yr 
  #debug show '$Sex         : ' &PER.SEX ' - ' $Male ' - ' $Female
  #debug show 'Term cause   : ' $Action_Reason_Descr 
  #debug Show '$NameMother  : ' $NameMother
  #debug Show '$NameFather  : ' $NameFather
  #debug show '$CompanyName : ' $CompanyName      
  #debug show '$CompNameAbb : ' $CompanyNameAbbrv 
  #debug show '$Basedate    : ' $Basedate         
  #debug show '$IMSSStreet1 : ' $IMSSStreet1
  #debug show '$IMSSStreet2 : ' $IMSSStreet2
  #debug show '$IMSSStreet3 : ' $IMSSStreet3
  #debug show '$IMSSStreet4 : ' $IMSSStreet4
  #debug show '$IMSSCity    : ' $IMSSCity             
  #debug show '$IMSSState   : ' $IMSSState            
  #debug show '$IMSSZip     : ' $IMSSZip                   
  #debug show 'CompnyNum_Ext: ' $CompnyNum_Ext    
  #debug show 'CompnyNum_Int: ' $CompnyNum_Int
  #debug show '$Company_RFC : ' $Company_RFC
  
  Let #i = 1
  
  While #i <=3
    Let $xml_tag = 'EMPLOYEE_DATA'      
    Do Process-XML-Tag-Beg  
    Do Create-Employee-XML
    Let $xml_tag = 'EMPLOYEE_DATA'      
    Do Process-XML-Tag-End  
   
   Add 1 to #i
   
  End-while
  
  Add 1 to #EmployeeCount

FROM    PS_JOB             A,
        PS_NAMES         NAM,
        PS_GPMX_SDI_WA     T,
        PS_JOB_JR       JBJR,
        PS_ACT_RSN_TBL_MEX  S,
        PS_PERS_DATA_EFFDT  PER

WHERE
        NAM.EMPLID     = A.EMPLID
AND     A.EMPLID       = T.EMPLID
AND     A.EMPLID       = JBJR.EMPLID
AND     A.EMPLID       = JBJR.EMPLID
AND     A.EFFDT        = JBJR.EFFDT
AND     A.EFFSEQ       = JBJR.EFFSEQ
AND     A.EMPL_RCD     = JBJR.EMPL_RCD
AND     A.COMPANY      = $Company
AND     A.EMPLID       = JBJR.EMPLID
AND     S.SUA_REASON_MEX = T.SUA_REASON_MEX
AND     S.IMS_PRN_FORM_MEX = T.IMS_PRN_FORM_MEX
AND     S.IMS_PRN_FORM_MEX = '0020'
AND     S.ACTION = A.ACTION
!AND     A.EFFDT >= T.EFFDT   !ICE 1222593000
and     S.ACTION_REASON = A.ACTION_REASON
AND     NAM.EFFDT   = (SELECT MAX(NAM_ED.EFFDT) FROM PS_NAMES NAM_ED 
                        WHERE NAM.EMPLID    = NAM_ED.EMPLID 
                          AND NAM.NAME_TYPE = NAM_ED.NAME_TYPE 
                          AND NAM_ED.EFFDT <= A.EFFDT)
AND   PER.EMPLID  = A.EMPLID
AND   PER.EFFDT   = (SELECT MAX(P.EFFDT) FROM PS_PERS_DATA_EFFDT P
                      WHERE P.EMPLID = PER.EMPLID)   
[$WhereForPrinting]
[$v_flag]
[$v_select]
Order by [$OrderEstablishment] A.EFFDT DESC,
         A.EMPLID,
         A.EMPL_RCD
end-SELECT
end-procedure

!****************************************************************************
Begin-Procedure WhereForPrint
!  If rtrim($EndDt,' ') <> ''
!    let $WhereForPrinting =' AND A.LOCATION IN (SELECT LOC.LOCATION FROM PS_LOCATION_TBL LOC
!                       WHERE LOC.ESTABID = ''' || $Reg_Patronal || '''
!                       AND   LOC.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
!                                          WHERE LOCATION = LOC.LOCATION
!                                           AND   EFFDT <= ''' || $EndDt || '''))
!    AND T.SEQNUM = (SELECT MAX(SEQNUM) FROM PS_GPMX_SDI_WA
!                          WHERE EMPLID = T.EMPLID
!                         AND EFFDT    = T.EFFDT)'
!  else
!    let $WhereForPrinting =' AND A.LOCATION IN (SELECT LOC.LOCATION FROM PS_LOCATION_TBL LOC
!                       WHERE LOC.ESTABID = ''' || $Reg_Patronal || '''
!                       AND   LOC.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
!                                          WHERE LOCATION = LOC.LOCATION))
!       AND T.SEQNUM = (SELECT MAX(SEQNUM) FROM PS_GPMX_SDI_WA
!                          WHERE EMPLID = T.EMPLID
!                         AND EFFDT    = T.EFFDT)'
!   end-if
 
 let $WhereForPrinting = ' AND T.SEQNUM = (SELECT MAX(SEQNUM) FROM PS_GPMX_SDI_WA
                          WHERE EMPLID = T.EMPLID
                         AND EFFDT    = T.EFFDT)'  
                         || $WhereForEstablishment
end-procedure

!****************************************************************
begin-procedure Advice-Flag
!****************************************************************
 let $YesFlag = 'Y'
 if $Reimp_Av = 'N' or rtrim($Reimp_Av,' ') = ''
    let $v_flag = ' AND (A.EMPLID NOT IN (SELECT FLG.EMPLID FROM PS_GPMX_IMS_CONTR FLG '
    let $v_flag = $v_flag || 'WHERE FLG.EMPLID = A.EMPLID '
    let $v_flag = $v_flag || 'AND   FLG.EFFDT  = T.EFFDT '
    let $v_flag = $v_flag || 'AND (FLG.GPMX_IMS_TER_ADV = ''' || $YesFlag || ''''
    let $v_flag = $v_flag || ' OR FLG.GPMX_IMS_TER_DEV = ''' || $YesFlag || ''''
    let $v_flag = $v_flag || ' OR FLG.GPMX_IMS_TER_EDI = ''' || $YesFlag || ''''
    let $v_flag = $v_flag || ')))'

 else
    let $v_flag = ''
 end-if

end-procedure

!****************************************************************
begin-procedure GetNationalID
!****************************************************************
let $RFC = ''
let $CURP = ''
let $IMSS_ID = ''

begin-select
RFC.NATIONAL_ID_TYPE
RFC.NATIONAL_ID
    Evaluate &RFC.NATIONAL_ID_TYPE 
      When = 'RFC'
        let $RFC = &RFC.NATIONAL_ID
        Break
      
      When = 'CURP'
        let $CURP = &RFC.NATIONAL_ID
        Break
        
      When ='IMSS'  
        let $IMSS_ID = &RFC.NATIONAL_ID
        Break
    End-Evaluate  
    
FROM PS_PERS_NID RFC WHERE RFC.NATIONAL_ID_TYPE IN ('RFC', 'CURP', 'IMSS') AND RFC.EMPLID=$Emplid AND RFC.COUNTRY='MEX'
end-select
end-procedure

!****************************************************************
begin-procedure SEARCH
!****************************************************************
begin-select
COUNT(*) &TOTAL
FROM PS_GPMX_IMS_CONTR  P4
WHERE P4.EMPLID  = &A.EMPLID
  AND P4.EFFDT   = &T.EFFDT
end-select
if &TOTAL = 0
   do INSERT_1
  else
   do UPDATE_1
end-if
end-procedure

!****************************************************************
begin-procedure INSERT_1
!****************************************************************
begin-sql
INSERT INTO PS_GPMX_IMS_CONTR
       (EMPLID,
        EFFDT,
        GPMX_IMS_HIRE_ADV,
        GPMX_IMS_MOD_ADV,
        GPMX_IMS_TER_ADV,
        GPMX_IMS_HIRE_DEV,
        GPMX_IMS_MOD_DEV,
        GPMX_IMS_TER_DEV,
        GPMX_IMS_HIRE_EDI,
        GPMX_IMS_MOD_EDI,
        GPMX_IMS_TER_EDI)
VALUES (&A.EMPLID,
        &T.EFFDT,
        'N',
        'N',
        'Y',
        'N',
        'N',
        'N',
        'N',
        'N',
        'N')
end-sql
end-procedure

!****************************************************************
begin-procedure UPDATE_1
!****************************************************************
begin-sql
UPDATE PS_GPMX_IMS_CONTR
SET  GPMX_IMS_TER_ADV = 'Y'
WHERE EMPLID  = &A.EMPLID
  AND EFFDT   = &T.EFFDT
end-sql
end-procedure

!***************************************************************
begin-procedure Reset
  move 'Y' to $End_of_Report
  if #MsgFlagW
    ! print $MsgTextW (+0,1)
  end-if
end-procedure


!***************************************************
!  Get-IMSS-Location                              !*
!***************************************************
begin-procedure Get-IMSS-Location
begin-SELECT
IMSS.DESCR,
IMSS.DESCR_AC,
IMSS.ADDRESS1,
IMSS.ADDRESS2,
IMSS.ADDRESS3,
IMSS.ADDRESS4,
IMSS.CITY,
IMSS.COUNTY,
IMSS.STATE,
IMSS.POSTAL,
IMSS.COUNTRY,
IMSS.ESTABID,

  let $IMSSName     = rtrim(&IMSS.DESCR,' ')
  let $IMSSAbbrv    = rtrim(&IMSS.DESCR_AC,' ')
  let $IMSSStreet1  = rtrim(&IMSS.ADDRESS1,' ')
  let $IMSSStreet2  = rtrim(&IMSS.ADDRESS2,' ')
  let $IMSSStreet3  = rtrim(&IMSS.ADDRESS3,' ')
  let $IMSSStreet4  = rtrim(&IMSS.ADDRESS4,' ')
  let $IMSSCity     = rtrim(&IMSS.CITY,' ')
  let $IMSSCounty   = rtrim(&IMSS.COUNTY,' ')

  Let $state1    = &IMSS.STATE
  do get-Statename
  
  move &STDESCRIP        to $IMSSState
  move &IMSS.POSTAL      to $IMSSZip
  move &IMSS.COUNTRY     to $IMSSCountry
  let $IMSSer           = &IMSS.ESTABID
  
  
  do Report

FROM  PS_ESTAB_TBL IMSS

WHERE IMSS.ESTABID = $Reg_Patronal
  AND IMSS.EFFDT = (SELECT MAX(EFFDT)
                   FROM   PS_ESTAB_TBL
                   WHERE  ESTABID = IMSS.ESTABID)
end-SELECT
end-procedure


!***************************************************
begin-procedure Get-Statename                       
!***************************************************
begin-Select
ST.DESCR  &STDESCRIP
FROM PS_STATE_NAMES_TBL   ST
WHERE ST.COUNTRY = 'MEX'
AND   ST.STATE   = $state1
end-Select
end-Procedure

!***************************************************
begin-procedure TO_UPPER(:$in)
!***************************************************
  let $in = rtrim($in,' ')
  let #c = 1
  let $cad = ''
  
  Let $Name_In = $in  
  
  while #c <= length($in)

    let $Found = 'N'
    let $Test_Char = Substr($Name_In, #c, 1)
    let #Test_Code = ascii(Upper($Test_Char))
    if (#Test_Code > 64
    and #Test_Code < 91)
      let $cad  = $cad  || Upper($Test_Char)
      let $Found = 'Y'
    end-if
     
   if ($Found = 'N')  
     let $char_aux = substr($in,#c,1)
     let $char = lower($char_aux)     
     evaluate $char
        when = 'á'
        when = 'â'
        when = 'ä'
        when = 'à'
        when = 'å'
           let $let = 'A'
           let $cad = $cad || $let             
           break
        when = 'é'
        when = 'ê'
        when = 'ë'
        when = 'è'
           let $let = 'E'
           let $cad = $cad || $let             
           break
        when = 'í'
        when = 'ï'
        when = 'î'
        when = 'ì'
           let $let = 'I'
           let $cad = $cad || $let             
           break
        when = 'ô'
        when = 'ö'
        when = 'ò'
        when = 'ó'
           let $let = 'O'
           let $cad = $cad || $let             
           break
        when = 'ü'
        when = 'û'
        when = 'ù'
        when = 'ú'
           let $let = 'U'
           let $cad = $cad || $let             
           break
        when = 'ñ'
           let $let = 'N'
           let $cad = $cad || $let             
           break
        when = ' '                         
           let $let = ' '
           let $cad = $cad || $let  
        when-other
           break
     end-evaluate
    end-if
     let #c = #c + 1
  end-while
  let $in = $cad
  let $cad = ''

end-procedure


!*********************************************************
Begin-Procedure Obtain_Number($in, :$Ext, :$Int)
!*********************************************************
  let $in = rtrim($in,' ')
  let #c = 1
  let $cad = ''
  Let $Ext = ''
  Let $Int = ''
  
  Let $Name_In = $in  
  #debug show 'Obtain_Number ' $in 
  while #c <= length($in)
  
    let $Found = 'N'
    let $Test_Char = Substr($Name_In, #c, 1)
    let #Test_Code = ascii(Upper($Test_Char))
    
    If #Test_Code = 32  and $cad <> ''
      Let $Ext = $cad
      Let $cad = ''
    End-If  
      
    If (#Test_Code > 47 and #Test_Code < 58) 
      Let $cad  = $cad  || $Test_Char
    End-if 
    
    let #c = #c + 1
  end-while
  
  If $Ext <> '' 
   let $Int = $cad
  Else
   Let $Ext = $cad
  End-if 
  
  let $cad = ''
End-procedure

!**************************************
begin-procedure Process-XML-Tag-Content
!**************************************

   let $xml_content   = replace($xml_content, '&',  '&amp;')
   let $xml_content   = replace($xml_content, '"',  '&quot;')
   let $xml_content   = replace($xml_content, '<',  '&lt;')
   let $xml_content   = replace($xml_content, '>',  '&gt;')
   let $xml_content   = replace($xml_content, '''', '&apos;')


   let $xml_content   = ltrim($xml_content, ' ')
   let $xml_content   = rtrim($xml_content, ' ')

   let $xml_output_line = ''
   let $xml_output_line = $xml_cntrl_begin || $xml_tag || $xml_cntrl_end  || $xml_content
                || $xml_cntrl_begin || $xml_tag_end || $xml_tag || $xml_cntrl_end
                
                            
   #debug show '[$xml_tag:]            ' $xml_tag
   #debug show '[$xml_output_line:]    ' $xml_output_line
   
   write #FNum from $xml_output_line

end-procedure

!**********************************************************
begin-procedure Process-XML-Tag-Beg
#debug show 'Procedure: Process-XML-Tag-Beg'
!**********************************************************
   let $xml_output_line = ''
   let $xml_output_line = $xml_cntrl_begin || $xml_tag|| $xml_cntrl_end
   
   #debug show '[$xml_output_line:]    ' $xml_output_line
   write #FNum from $xml_output_line
   
   #debug show '[$xml_output_line:]    ' $xml_output_line

end-procedure

!****************************************************************
begin-procedure Process-XML-Tag-End
#debug show 'Procedure: Process-XML-Tag-End'
!****************************************************************
  let $xml_output_line = ''
  let $xml_output_line = $xml_cntrl_begin || $xml_tag_end || $xml_tag|| $xml_cntrl_end
  write #FNum from $xml_output_line
  
  #debug show '[$xml_output_line:]    ' $xml_output_line

end-procedure


!**************************************
begin-procedure Open-XML-File($FileName, #FNum, :#FStat, :$openXMLFile)
#debug show 'Procedure: Open-XML-File'
!**************************************
 
   if $openXMLFile = 'N'
   
     open $FileName as #FNum for-writing
         record=200:vary status = #FStat
    
     if #FStat = 0    
      
        let $xml_output_line = '<?xml version="1.0" encoding="iso-8859-1"?>'       
        write #FNum from $xml_output_line
        write #FNum from '<start>'
     End-if      
     
     Let $openXMLFile = 'Y'
   
   end-if
   

end-procedure

!**************************************
begin-procedure Insert-XML-RunControl
#debug show 'Procedure: Insert-XML-RunControl'
#debug show '[$FileName:]              ' $FileName
#debug show '[$Prcs_OprID], [$Prcs_Run_Cntl_ID], [#prcs_process_instance]'    
#debug show '[$ReportID]               ' $ReportID             
#debug show '[#prcs_job_instance]      ' #prcs_job_instance    
#debug show '[$TemplateID:]            ' $TemplateID
#debug show '[$FileName]               ' $FileName             
#debug show '[$ReportDefn]             ' $ReportDefn
#debug show '[#Copies:]                ' #Copies
#debug show '-'
!**************************************

let $err-statement1 = 'Procedure: Insert-XML-RunControl'
let $err-statement2 = 'INSERT'

begin-SQL on-error=Error-Display
INSERT INTO PS_GPMX_XML_RCTL
(OPRID
,RUN_CNTL_ID
,PROCESS_INSTANCE
,PRCSNAME
,JOBINSTANCE
,TMPLDEFN_ID
,GPMX_FILE_NAME
,REPORT_DEFN_ID
,GPMX_COPIES)
Values
($Prcs_OprID
,$Prcs_Run_Cntl_ID
,#prcs_process_instance
,$ReportID
,#prcs_job_instance
,$TemplateID
,$FileName
,$ReportDefn
,1)
end-SQL
end-procedure Insert-XML-RunControl

!**************************************
begin-procedure Delete-XML-RunControl
#debug show 'Procedure: Delete-XML-RunControl'
!**************************************

let $err-statement1 = 'Procedure: Delete-XML-RunControl'
let $err-statement2 = 'DELETE '


begin-SQL on-error=Error-Display
DELETE FROM PS_GPMX_XML_RCTL
WHERE OPRID = $Prcs_OprID
AND   RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SQL

do Commit-Transaction


end-procedure Delete-XML-RunControl

!**************************************
begin-procedure Delete-RunControl
#debug show 'Procedure: Delete-RunControl'
!**************************************

let $err-statement1 = 'Procedure: Delete-RunControl'
let $err-statement2 = 'DELETE '

IF #count_TRCT = 0 
  begin-SQL on-error=Error-Display
    DELETE FROM PS_GPMX_XML_RCTL
    WHERE OPRID = $Prcs_OprID
    AND   RUN_CNTL_ID = $Prcs_Run_Cntl_ID
    AND   TMPLDEFN_ID = $TemplateID
  end-SQL
  
end-if

end-procedure Delete-RunControl

begin-procedure Close-File
if $openXMLFile = 'Y'
   let $xml_tag = 'start'    
   Do Process-XML-Tag-End
   Do Close-XML-File(#Fnum)
 end-if

end-procedure

begin-procedure Close-XML-File(#Fnum)

   close #Fnum

end-procedure Close-XML-File

!**************************************
Begin-Procedure Create-Employee-XML
#debug show 'Procedure: Create-Employee-XML **'
!**************************************
   let $xml_tag = 'EMPLID'
   let $xml_content = $Emplid || ' ' || edit(to_char(#emplRcd), '99')
   do Process-XML-Tag-Content

   let #TagCount = 1
   let #TagField = 0
 
   let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
   let $xml_content = $Currt_Dy
   do Process-XML-Tag-Content

   
   let #TagCount = #TagCount + 1

   let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
   let $xml_content = $Currt_Mn
   do Process-XML-Tag-Content
   
   let #TagCount = #TagCount + 1
  
   let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
   let $xml_content = $Currt_Yr
   do Process-XML-Tag-Content
   
   let #TagCount = #TagCount + 1
   
   let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
   let $xml_content = ltrim($IMSS_ID ,' ')
   do Process-XML-Tag-Content
   
   let #TagCount = #TagCount + 1
   
 if rtrim($CURP , ' ') <> ''  
   let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
   let $xml_content = ltrim($CURP  ,' ')
   do Process-XML-Tag-Content
 End-if
    
   let #TagCount = #TagCount + 1
 
   let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
   let $xml_content = ltrim($RFC ,' ')
   do Process-XML-Tag-Content

   
   let #TagCount = #TagCount + 1
 
 if rtrim($Name , ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
     let $xml_content = ltrim($Name  ,' ')
     do Process-XML-Tag-Content
 end-if  
   
  let #TagCount = #TagCount + 1
 
  if rtrim($Paternalname, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Paternalname,' ')
      do Process-XML-Tag-Content
  end-if
   
  let #TagCount = #TagCount + 1
    
  if rtrim($Maternalname, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Maternalname,' ')
      do Process-XML-Tag-Content
  end-if  
 
 let #TagCount = #TagCount + 1
    
  if rtrim($Term-da, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Term-da,' ')
      do Process-XML-Tag-Content
  end-if 
  
  let #TagCount = #TagCount + 1
    
  if rtrim($Term-mo, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Term-mo,' ')
      do Process-XML-Tag-Content
  end-if 
  
  let #TagCount = #TagCount + 1
    
  if rtrim($Term-yy, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Term-yy,' ')
      do Process-XML-Tag-Content
  end-if 
  
  let #TagCount = #TagCount + 1
    
  if rtrim($Action_Reason_Descr, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Action_Reason_Descr,' ')
      do Process-XML-Tag-Content
  end-if 
  
    
  !********* Company info*****************
  let #TagCount = #TagCount + 1
    
  if rtrim($Reg_Patronal, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Reg_Patronal,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagCount = #TagCount + 1 !CURP just for person
  
  let #TagCount = #TagCount + 1
    
  if rtrim($Company_RFC, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($Company_RFC,' ')
      do Process-XML-Tag-Content
  end-if 
  
  let #TagCount = #TagCount + 1
    
  if rtrim($CompanyName, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($CompanyName,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagCount = #TagCount + 1
    
  if rtrim($IMSSZip, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($IMSSZip,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagCount = #TagCount + 1
    
  if rtrim($IMSSStreet1, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($IMSSStreet1,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagCount = #TagCount + 1
    
  if rtrim($CompnyNum_Ext, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($CompnyNum_Ext,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagCount = #TagCount + 1
    
  if rtrim($CompnyNum_Int, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($CompnyNum_Int,' ')
      do Process-XML-Tag-Content
  end-if 
  
  let #TagCount = #TagCount + 1
    
  if rtrim($IMSSStreet3, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($IMSSStreet3,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagCount = #TagCount + 1 !Localidad Cia
  
  let #TagCount = #TagCount + 1
    
  if rtrim($IMSSStreet4 , ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($IMSSStreet4 ,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagCount = #TagCount + 1
    
  if rtrim($IMSSState, ' ') <> ''  
      let $xml_tag = 'Field' || ltrim(edit(#TagCount,'b999'), ' ')
      let $xml_content = ltrim($IMSSState,' ')
      do Process-XML-Tag-Content
  end-if 
    
  
  let #TagField = #TagField + 1
    
  if rtrim($Male, ' ') <> ''  
      let $xml_tag = 'Fd' || ltrim(edit(#TagField,'b999'), ' ')
      let $xml_content = ltrim($Male,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  let #TagField = #TagField + 1
    
  if rtrim($Female, ' ') <> ''  
      let $xml_tag = 'Fd' || ltrim(edit(#TagField,'b999'), ' ')
      let $xml_content = ltrim($Female,' ')
      do Process-XML-Tag-Content
  end-if 
  
  
  
    
End-Procedure Create-Employee-XML


!***********************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'
#include 'number.sqc'
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'prcsapi.sqc'   !Process API
#include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Routines for date
#include 'prcslng.sqc'   !Process Language 
#include 'gpmxacrs.sqc'  !Get-Action-Reason
#include 'gpmxnotf.sqc'  !Select Parameters
#include 'getcomex.sqc'
#include 'gpmxrtn1.sqc'
#include 'sqrtrans.sqc'  !Translate SQR strings
#include 'stderror.sqc' 
