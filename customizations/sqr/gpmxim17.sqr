!***********************************************************************
!  GPMXIM17:  FIX SDI Report                                           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:51:55                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

!MTM  657355000

#define c01      1
#define c14      14
#define c18      20
#define c46      46
#define c61      61
#define c157     157
#define c171     166

#include 'setenv.sqc'   !Set environment

begin-setup
  #include 'setupdb.sqc'               ! Database specific setup  
  Declare-Printer   THIS_REPORT
    type          = HPLASERJET
    symbol-set    = 19U
    font          = 3
    point-size    = 3.5
  End-Declare

  Declare-Layout THIS_REPORT
    Orientation= landscape
    Top-Margin= .2
    Left-Margin=.2
    Line-Height = 6.4
    Char-Width  = 4.2   ! precise print positioning
  End-Declare

  Declare-Report THIS_REPORT
    Printer-Type=HPLASERJET
    LayOut=THIS_REPORT
  End-Declare
  
end-setup

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
  do Reset
end-report

begin-procedure Init-Report  
  do Init-DateTime 
  do Init-Number
  do Stdapi-Init
  move '1' to $ReportDateType
  move '1' to $ReportYear4
  move 'GPMXIM17' to $ReportID
  move 'SDI FIJO' to $ReportTitle  
  display $ReportID
  display $ReportTitle
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
end-procedure Init-Report

begin-procedure Process-Main
  do Select-Parameters
  do Report
end-procedure Process-Main

begin-heading 12
  Alter-Printer Point-size = 8 Font-Type = Proportional Font = 3
  print 'PeopleSoft'                   (1,)      center
  print $ReportTitle                   (2,)      center
  print 'Reporte:    '                 (2,{c01})
  print $ReportID                      (2,{c18})
  page-number                          (2,{c157})  'Página: '
  print 'Fecha:'                       (3,{c157})
  do Format-DateTime($AsOfToday, $out, {DEFDMY},'','')  
  print $out                           (,{c171}) 
  
  If $GpPaygroupRC <> ''
     print 'Grupo de Pago: '           (3,{c01})
     print $GPPaygroup                 (,{c18})
     print $GPPayName                  (,+5)
     print ' '                         (+1,)
  else
     print ' '                         (3,{c01})
  End-if  
  
  If $EstabidRC <> ''
     print 'Establecimiento: '         (,{c01})
     print $Estabid                    (,{c18})
     print $EstabidName                (,+5)
  else
    print ' '                         (-1,{c01})
  end-if
  
  print 'Periodo: '                    (+1,{c01})
  print 'De'                           (,{c18})
  do Format-DateTime($BeginDt, $out, {DEFDMY},'','')
  print $Out                           (,+1)
  print ' al'                          (,+1)
  do Format-DateTime($EndDt, $out, {DEFDMY},'','')
  print $Out                           (,+1)
  
  print 'Hora:'                        (4,{c157})
  print $ReportTime                    (4,{c171})
  
  print '-'                            (+1,{c01},160) fill
  print 'Empleado'                     (+1,{c01})
  print 'Nombre del Empleado'          (,{c14})
  print 'Fecha'                        (,{c46})
  print 'Salario'                      (,{c61})  
  print 'Factor'                       (,73)
  print 'Subtotal'                     (,90)  
  print 'SDI Fijo'                     (,104)
  print '=================='           (,118)
  print 'CONCEPTOS'                    (,145)
  print '=================='           (,163)
  print 'Efectiva'                     (+1,{c46})
  print 'Diario'                       (,{c61})
  print 'Integración'                  (,73)
  print 'Código'                       (,118)
  print 'Integrable '                  (,140)
  print 'No Integrable'                (,154)
  print 'Total Base'                   (,172)
  print '-'                            (+1,001,160) fill
end-heading

!**************************************
Begin-procedure Select-Parameters
!**************************************

Alter-Printer Point-size = 8 Font-Type = Proportional Font = 3
Let $Where = ''

BEGIN-SELECT
RC.ESTABID
RC.GP_PAYGROUP
RC.BEGIN_DT
RC.END_DT

  Let $Estabid    = Rtrim(&RC.ESTABID, ' ') 
  Let $GPPaygroup = Rtrim(&RC.GP_PAYGROUP, ' ')
  Let $EstabidRC    = Rtrim(&RC.ESTABID, ' ') 
  Let $GPPaygroupRC = Rtrim(&RC.GP_PAYGROUP, ' ')
  Let $BeginDt    = &RC.BEGIN_DT
  Let $EndDt      = &RC.END_DT
  
  If $Estabid <> ''
     Do Get-Establishment
     Let $Where = $Where || ' AND J.LOCATION IN (SELECT LOC.LOCATION FROM PS_LOCATION_TBL LOC '
     Let $Where = $Where || ' WHERE LOC.ESTABID = ''' || $Estabid || '''' || ' AND   LOC.EFFDT'
     Let $Where = $Where || ' = (SELECT MAX(L.EFFDT) FROM PS_LOCATION_TBL L WHERE L.LOCATION = '
     Let $Where = $Where || ' LOC.LOCATION AND L.EFFDT <= ''' || $EndDt || '''))'
  end-if
  
  If $GPPaygroup <> ''
     Do Get-GPPaygroup
     Let $Where = $Where || ' AND J.GP_PAYGROUP = ''' || $gpPaygroup || '''' 
  end-if 
  
FROM PS_GPMX_RC_FIX_SDI RC
WHERE RC.OPRID = $prcs_oprid
AND RC.RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT

End-procedure Select-Parameters

!**************************************
begin-procedure Report
!**************************************

begin-SELECT
J.EMPLID
J.LOCATION
J.COMPANY
J.EMPL_RCD
J.GP_PAYGROUP
J.DAILY_RT
B.EFFDT
B.GPMX_SDI_FIX
B.GPMX_SDI_TOT
B.GPMX_SDI_FACTOR
B.CAL_RUN_ID
B.ORIG_CAL_RUN_ID
B.CAL_ID

  Let $Emplid       = Rtrim(&J.EMPLID, ' ')
  Let $Effdt        = &B.EFFDT
  Let #Factor       = &B.GPMX_SDI_FACTOR
  Let $Company      = Rtrim(&J.COMPANY, ' ')
  Let $CalRunID     = Rtrim(&B.CAL_RUN_ID, ' ')
  Let $OrigCalRunID = Rtrim(&B.ORIG_CAL_RUN_ID, ' ')
  Let #EmplRcd      = &J.EMPL_RCD
  Let $GPPaygroup   = Rtrim(&J.GP_PAYGROUP, ' ')
  Let #SalaryFix    = &B.GPMX_SDI_FIX
  Let $CalID        = Rtrim(&B.CAL_ID, ' ')
  Let #Salary       = &J.DAILY_RT
  
  If #Factor <> 0
 !    If #SalaryFix <> 0
        Let #SubFix  = #Salary * #Factor 
   
        Do Get-Name
        Do Get-Integ-Base
  
        print $Emplid                (+1,{c01})
        print $Name                  (,13,27)
    
        do Format-DateTime($Effdt, $out, {DEFDMY},'','')
        print $Out                   (,{c46})  
        print #Salary                (,58)  edit 999,999.99 
        print #Factor                (,73)  edit 9.99999
        print #SubFix                (,88)  edit 999,999.99
   
        Let #TotalInt = #TotalInt + #SalaryFix
        print #SalaryFix                (,102)  edit 999,999.99 
      
        Do SDI
 !     end-if
   else
     show 'Error:  El SDI Factor es igual a 0'
   end-if

FROM PS_JOB J
    ,PS_GPMX_SDI_WA B
WHERE J.EMPLID = B.EMPLID
AND   B.EFFDT = (SELECT MAX(BB.EFFDT) 
                 FROM PS_GPMX_SDI_WA BB
                 WHERE BB.EMPLID = B.EMPLID
                 AND BB.EFFDT <= $EndDt)
AND   B.SEQNUM = (SELECT MAX(B1.SEQNUM) FROM PS_GPMX_SDI_WA B1
                 WHERE B1.EMPLID = B.EMPLID
                 AND   B1.EFFDT    = B.EFFDT)
AND   J.EFFDT = (SELECT MAX(JJ.EFFDT) 
                 FROM PS_JOB JJ
                 WHERE JJ.EMPLID = J.EMPLID 
                 AND   JJ.EMPL_RCD = J.EMPL_RCD
                 AND   JJ .EFFDT <= B.EFFDT)
AND   J.EFFSEQ = (SELECT MAX(J1.EFFSEQ) 
                 FROM PS_JOB J1
                 WHERE J1.EMPLID = J.EMPLID 
                 AND   J1.EMPL_RCD = J.EMPL_RCD
                 AND   J1.EFFDT = J.EFFDT)                 
AND   B.EFFDT BETWEEN $BeginDT AND $EndDT                                 
[$Where]                 
ORDER BY J.EMPLID,B.EFFDT
end-SELECT

end-procedure Report

!***************************************************
! Procedure Get-Name                               *
!***************************************************
begin-procedure Get-Name
begin-select
B.FIRST_NAME,
B.LAST_NAME,
B.SECOND_LAST_NAME

  Let $Name        = &B.FIRST_NAME
  Let $EmpPat      = &B.LAST_NAME
  Let $EmpMat      = &B.SECOND_LAST_NAME
  Let $Name = rtrim ($Name,' ') || ' ' || rtrim ($EmpPat,' ') || ' ' || rtrim ($EmpMat,' ')
  uppercase $Name
 
FROM PS_NAMES B
WHERE B.EMPLID    = $Emplid
AND   B.NAME_TYPE = 'PRI'
AND   B.EFFDT     = (SELECT MAX(EFFDT) FROM  PS_NAMES B2
                     WHERE B2.EMPLID = B.EMPLID
                     AND B2.NAME_TYPE = B.NAME_TYPE
                     AND B2.EFFDT <= $EndDt)
end-select
end-procedure Get-Name

!**********************************
begin-procedure Get-Establishment
!**********************************
  
begin-SELECT
ES.DESCR
   
   Let $EstabidName = Rtrim(&ES.DESCR, ' ')
   
FROM  PS_ESTAB_TBL ES
WHERE ES.ESTABID = $Estabid
AND   ES.EFFDT = (SELECT MAX(E.EFFDT)
                  FROM PS_ESTAB_TBL E
                  WHERE E.ESTABID = ES.ESTABID
                  AND E.EFFDT <= $EndDt)
end-SELECT
end-procedure Get-Establishment

!*********************************
begin-procedure Get-GPPaygroup
!*********************************
begin-select
P.DESCR

 Let $GPPayName= Rtrim(&P.DESCR, ' ')

From PS_GP_PYGRP P
WHERE P.GP_PAYGROUP=$GpPaygroup
end-select
end-procedure Get-GPPaygroup

!**************************************
begin-procedure Get-Integ-Base
!*********************************
Let #TotalBase       = 0
Let #TotalIntegrable = 0 
Let #TotalIntBase    = 0
Let #FixSDITotal = 0
 
begin-SELECT
SUM(A1.GPMX_INTEG_BASE) &A1.GPMX_INTEG_BASE

 Let #TotalInt           = &A1.GPMX_INTEG_BASE
 
FROM PS_GPMX_FIXSDI_WA A1 
WHERE A1.EMPLID = $Emplid
AND   A1.EMPL_RCD = #EmplRcd
AND   A1.GP_PAYGROUP = $GPPaygroup
AND   A1.EFFDT = (SELECT MAX(AA.EFFDT)
                  FROM PS_GPMX_FIXSDI_WA AA
                  WHERE A1.EMPLID = AA.EMPLID
                  AND   A1.EMPL_RCD = AA.EMPL_RCD
                  AND   AA.EFFDT <= $Effdt) 
AND   A1.SEQNUM = (SELECT MAX(A.SEQNUM)
                  FROM PS_GPMX_FIXSDI_WA A
                  WHERE A1.EMPLID   = A.EMPLID
                  AND   A1.EMPL_RCD = A.EMPL_RCD
                  AND   A1.EFFDT    = A.EFFDT)                       
end-SELECT

end-procedure Get-Integ-Base

!**************************************
begin-procedure SDI
!*********************************
Let #TotalBase       = 0
Let #TotalIntegrable = 0 
Let #TotalIntBase    = 0
Let #FixSDITotal     = 0
 
begin-SELECT
A.PIN_NUM
A.GPMX_BASE
A.GPMX_INTEG_BASE

 Let #Base            = &A.GPMX_BASE
 Let #Integrable      = &A.GPMX_INTEG_BASE
 Let #NoIntegrable    = #Base - #Integrable 
 
 Let #PinNum          = &A.PIN_NUM

 do get_pin_num
 
 print $PinName        (+1,118,20)  

 print #Integrable     (,140)     edit 999,999.99
 print #NoIntegrable   (,156)     edit 999,999.99 
 print #Base           (,172)     edit 999,999.99
 
FROM PS_GPMX_FIXSDI_WA A 
WHERE A.EMPLID = $Emplid
AND   A.EMPL_RCD = #EmplRcd
AND   A.GP_PAYGROUP = $GPPaygroup
AND   A.EFFDT = (SELECT MAX(AA.EFFDT)
                  FROM PS_GPMX_FIXSDI_WA AA
                  WHERE A.EMPLID = AA.EMPLID
                  AND   A.EMPL_RCD = AA.EMPL_RCD
                  AND   AA.EFFDT <= $Effdt) 
AND   A.SEQNUM = (SELECT MAX(A2.SEQNUM)
                  FROM PS_GPMX_FIXSDI_WA A2
                  WHERE A2.EMPLID   = A.EMPLID
                  AND   A2.EMPL_RCD = A.EMPL_RCD
                  AND   A2.EFFDT    = A.EFFDT)   
                   
end-SELECT
end-procedure SDI

!*********************************
begin-procedure get_pin_num
!*********************************
BEGIN-select
O.PIN_NM
 LET $PinName=&O.PIN_NM
FROM PS_GP_PIN O
WHERE PIN_NUM=#PinNum
END-SELECT
end-procedure get_pin_num

!*********************************
#Include 'reset.sqc'    !Reset printer procedure
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'datetime.sqc' !Routines for date and time formatting
#Include 'number.sqc'   !Routines to format numbers
#Include 'stdapi.sqc'   !Update Process API
#Include 'datemath.sqc' !Routines for date math


