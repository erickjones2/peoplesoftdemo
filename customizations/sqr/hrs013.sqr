!*************************************************
!  HRS013:  Job Requisition for Works Council   *
!*************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:12:49:22                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'     !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

#define HRS_STS_TBL
#Include 'rellang.sqc'    ! Translations File

begin-Report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
last2:
end-report

begin-Heading 3
  #Include 'stdhdg01.sqc'
end-Heading

!********************************************
begin-procedure Init-Report

  move 'HRS013' to $ReportID
  do Stdapi-Init
   if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
     goto last1
  end-if

  if $prcs_process_instance <> ''
    do Select-Parameters1
  end-if
do Init_Printer
do Init_Report_translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
last1:
end-procedure

!********************************************
begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   let $Ctl_Company = &HRS_RUN_JOB.COMPANY
   let $Ctl_Wrks_Cncl = &HRS_RUN_JOB.WC_COUNCIL_ID
end-procedure

!************************************************
begin-procedure Init-Layout

   #define col0 1               !Label
   #define col1 35              !Felder
   #define col2 50              !Description
   #define col3 90              !Erforderlich...
   #define col4 75              !
   #define col5 80              !

end-procedure

!********************************************
begin-procedure Process-Main

do Get-Labels

!-------A.GRADE_TYPE
BEGIN-SELECT
A.HRS_JOB_OPENING_ID          () on-break print=never procedure=Print-New-Page
A.BUSINESS_UNIT
A.STATUS_CODE
A.STATUS_DT
A.COMPANY
A.HRS_PRM_LOCATION
A.DEPTID
A.WC_COUNCIL_ID
A.HRS_PRM_JOBCODE
C.BEGIN_DT
A.OPENINGS_CNT
C.SHIFT
C.STD_HOURS
C.STD_HRS_FREQUENCY
C.SAL_ADMIN_PLAN
C.GRADE_FROM
C.STEP_FROM
C.GRADE_TO
C.STEP_TO
B.HIGHEST_EDUC_LVL
B.YEARS_OF_EXP


 let $BU = &A.BUSINESS_UNIT
 do Get-Location-Setid
 do Print-Requisition
 do Print-Skill
 do Print-Test

FROM PS_HRS_JOB_OPENING A, PS_HRS_JO_EDUC_EXP B, PS_HRS_JO_RQMT C
WHERE    A.COMPANY = $Ctl_Company
AND A.WC_COUNCIL_ID = $Ctl_Wrks_Cncl
AND A.HRS_JOB_OPENING_ID = B.HRS_JOB_OPENING_ID
AND A.HRS_JOB_OPENING_ID = C.HRS_JOB_OPENING_ID
AND B.HRS_JO_RQMT_SEQ = C.HRS_JO_RQMT_SEQ


END-SELECT

end-procedure

!********************************************
begin-procedure Print-Requisition

  print $WRK_CNL                  (4,{col0},33)
  print &A.WC_COUNCIL_ID          (0,{col1},14)
  let $Wks_Cnl_Company = rtrim (&A.COMPANY, ' ')
  let $Wks_Cnl_Wrks_Cncl_Id = rtrim (&A.WC_COUNCIL_ID, ' ')
  if $Wks_Cnl_Wrks_Cncl_Id <> ''
    do Get-Works-Cncl-Data
    
    if $Curr_Language_Cd <> $PSOptions_Language_Cd
       do GetWorksCnclDataLng
    end-if   
    
    print $Wks_Cnl_Descr                 (0,{col2})
  end-if

  print '_'                              (+2,{col0},123) FILL

  print $JOB_POSTING_ID        (+2,{col0},33)
  print &A.HRS_JOB_OPENING_ID              (0,{col1},14)
  print $STATUS                      (0,{col2})

  do Get-Status-Description

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
     do GetJOSTSLng
  end-if

  print $StatusCodeDescr                  (0,+2)

  print $DATE                        (0,{col4})
  do Format-DateTime(&A.STATUS_DT, $out, {DEFDATE}, '', '')
  print $out                             (0,+1)

  print '_'                              (+2,{col0},123) FILL

  print $xCOMPANY                  (+2,{col0},33)
  print &A.COMPANY                       (0,{col1},14)
  let $Company = rtrim(&A.COMPANY, ' ')
  if $Company <> ''
    do Get-Company-Data
    print $CompanyName                   (0,{col2})
  end-if

  print $xLOCATION                     (+1,{col0},33)
  print &A.HRS_PRM_LOCATION             (0,{col1},14)
  let $Location = rtrim(&A.HRS_PRM_LOCATION, ' ')
  if $Location <> ''
     do Get-Location-Name
     print $LocationName                 (0,{col2})
  end-if

  print $xDEPTID                    (+1,{col0},33)
  print &A.DEPTID                        (0,{col1},14)
  let $DeptID = rtrim(&A.DEPTID, ' ')
  if $DeptID <> ''
    do Get-Department-Name
    print $DeptName                      (0,{col2})
  end-if


  print $JOB                     (+1,{col0},33)
  print &A.HRS_PRM_JOBCODE                      (0,{col1},14)
  let $JobCode = rtrim(&A.HRS_PRM_JOBCODE, ' ')
  if $JobCode <> ''
    move ' ' to $SETID
    do Get-Job-Setid
    move &SCG.SETID to $SETID
   do Get-Job-Title
    print $JobTitle                      (0,{col2})
  end-if

  print $START_DATE                       (+3,{col0},33)
  do Format-DateTime(&C.BEGIN_DT, $out, {DEFDATE}, '', '')
  print $out                             (0,{col1})

  print $OPEN_POS        (+1,{col0},33)
  print &A.OPENINGS_CNT                  (0,{col1})

  print $JOB_DESCR          (+2,{col0},33)
  do Get-Job-Description
  print $JobDescriptionDuties            (0,{col1}) WRAP 50 10

  print $SHIFT                      (+2,{col0},33)
  print &C.SHIFT                         (0,{col1})

  print $STD_HOURS     (+1,{col0},33)
  print &C.STD_HOURS                     (0,{col1})

  print $WORK_PERIOD     (+1,{col0},33)
  let $std_hrs_freq = rtrim(&C.STD_HRS_FREQUENCY, ' ')
  !print $std_hrs_freq                    (0,{col1},14)
  ! Determine descrshort of $std_hrs_freq

  do Det-Annual-Factor($std_hrs_freq,&A.STATUS_DT,$freq_descrshort,$dummy1,#dummy2,$dummy3)
  print $freq_descrshort                 (0,{col1})


  print $COMP_CATEG                (+1,{col0},33)
  print $FROM                           (0,{col1})
  print &C.SAL_ADMIN_PLAN                (0,+1)
  if rtrim (&C.GRADE_FROM, ' ') <> ''
    print '/'                            (0,+1)
    print &C.GRADE_FROM                  (0,+1)
  end-if
  if &C.STEP_FROM <> 0
    print '/'                            (0,+1)
    print &C.STEP_FROM                   (0,+1)
  end-if

  print $TO                           (0,{col4})
  print &C.SAL_ADMIN_PLAN                (0,+1)
  if rtrim (&C.GRADE_TO, ' ') <> ''
    print '/'                            (0,+1)
    print &C.GRADE_TO                    (0,+1)
  end-if
  if &C.STEP_TO <> 0
    print '/'                            (0,+1)
    print &C.STEP_TO                     (0,+1)
  end-if

 ! print $RECRUITER_NAME                  (+2,{col0},33)
 ! print &A.RECRUITER_NAME                (0,{col1})

  print '_'                              (+2,{col0},123) FILL

  print $JOB_OPENING                       (+2,{col0})

  print $PRI_WRK_EXP                     (+2,{col0},33)
  do Format-Number (&B.YEARS_OF_EXP, $YOE, '9.9')
  print $YOE                             (0,{col1})
  print $YEARS_OF_EDUCATN                (0,+1)

  print $SCH_EDUC                        (+2,{col0},33)
  if &B.HIGHEST_EDUC_LVL <> 'A'
    move 'HIGHEST_EDUC_LVL'   to $FieldName
    move &B.HIGHEST_EDUC_LVL  to $FieldValue
    do Read-Translate-Table
    print $XlatLongName                    (0,{col1},54)
  end-if

 ! if (&C.EDUC_EXP_MAND = 'Y')
 !   print $NEEDED                        (0,{col3})
 ! end-if

  print $PROF_EDUC                       (+2,{col0},88)
  !if (&B.REQUIRED = 'Y')
  !  print $NEEDED                        (0,{col3})
  !end-if
end-procedure


!********************************************
begin-procedure Print-New-Page
  new-page
end-procedure

!********************************************
begin-procedure Print-Skill

print $SKILLS                            (+2,{col0})

begin-SELECT

SKT.COMPETENCY                           (+1,{COL1},14)
SKT.DESCR                                (0,{COL2})
!SKL.REQUIRED

! if (&SKL.REQUIRED = 'Y')
!    print $NEEDED                        (0,{col3},39)
!  end-if

FROM PS_HRS_JO_ITEMS SKL,  PS_COMPETENCY_TBL SKT
WHERE SKL.JPM_CAT_TYPE ='COMPETENCY' AND SKL.JPM_CAT_ITEM_ID =  SKT.COMPETENCY
AND SKL.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
AND SKT.CM_CATEGORY = 'S'

end-SELECT


end-procedure

!********************************************
begin-procedure Print-Test

print $TESTS                             (+2,{col0})

begin-SELECT

TBL.ACCOMPLISHMENT                       (+1,{COL1},14)
TBL.DESCR                                (0,{COL2},39)
!TST.REQUIRED

! if (&SKL.REQUIRED = 'Y')
!    print $NEEDED                        (0,{col3})
! end-if

FROM PS_HRS_JO_ITEMS TST, PS_ACCOMP_TBL TBL
WHERE TST.JPM_CAT_TYPE ='TST' AND TST.JPM_CAT_ITEM_ID =  TBL.ACCOMPLISHMENT
AND   TST.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
AND   TBL.ACCOMP_CATEGORY = 'TST'

end-SELECT

end-procedure

!********************************************
begin-procedure Get-Job-Description
 let $JobDescriptionDuties = ' '
begin-SELECT
D.DESCRLONG
 let $JobDescriptionDuties = &D.DESCRLONG
FROM  PS_HRS_JO_PST_DSCR D
WHERE D.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
AND   D.HRS_JO_DESCR_TYP  = 'D'
end-SELECT
end-procedure

!********************************************
begin-procedure Get-Location-Setid
begin-SELECT
SET_CNTRL_REC.SETID
 let $Setid = &SET_CNTRL_REC.SETID
FROM PS_SET_CNTRL_REC SET_CNTRL_REC
WHERE SET_CNTRL_REC.SETCNTRLVALUE = $BU
AND SET_CNTRL_REC.RECNAME = 'LOCATION_TBL'
end-SELECT
end-procedure

!***********************************************************************
!  PROC Get-Job-Setid
!***********************************************************************

BEGIN-PROCEDURE Get-Job-Setid
BEGIN-SELECT
SCG.SETID
FROM PS_SET_CNTRL_GROUP SCG
WHERE SETCNTRLVALUE = $BU
  AND REC_GROUP_ID = 'HR_02'
END-Select
END-PROCEDURE

!********************************************
begin-procedure Get-Status-Description
 let $StatusCodeDescr = ' '

begin-SELECT
ERS.STATUS_AREA
ERS.STATUS_CODE
ERS.DESCR

   let $ER_STATUS_TBL-DESCR = rtrim(&ERS.DESCR, ' ')
  ! do Get_Related_ER_STATUS_TBL(&ERS.STATUS_AREA, &ERS.STATUS_CODE)
   let $StatusCodeDescr = $ER_STATUS_TBL-DESCR

FROM  PS_HRS_STS_TBL ERS
WHERE ERS.STATUS_AREA = '1'
AND   ERS.STATUS_CODE = &A.STATUS_CODE
end-SELECT
end-procedure

!********************************************
begin-procedure Get-Labels
do Get_Field_Information ('HRS013', 'REPORT_TITLE', $REPORTTITLE, #DW)
do Get_Field_Information ('HRS013', 'COMPANY', $xCOMPANY, #DW)
do Get_Field_Information ('HRS013', 'COMP_CATEG', $COMP_CATEG, #DW)
do Get_Field_Information ('HRS013', 'DATE', $DATE, #DW)
do Get_Field_Information ('HRS013', 'DEPTID', $xDEPTID, #DW)
do Get_Field_Information ('HRS013', 'FROM', $FROM, #DW)
do Get_Field_Information ('HRS013', 'HOURLY', $HOURLY, #DW)
do Get_Field_Information ('HRS013', 'JOB', $JOB, #DW)
do Get_Field_Information ('HRS013', 'JOB_DESCR', $JOB_DESCR, #DW)
do Get_Field_Information ('HRS013', 'JOB_POSTING_ID', $JOB_POSTING_ID, #DW)
do Get_Field_Information ('HRS013', 'JOB_REQ', $JOB_REQ, #DW)
do Get_Field_Information ('HRS013', 'LOCATION', $xLOCATION, #DW)
do Get_Field_Information ('HRS013', 'MONTHLY', $MONTHLY, #DW)
do Get_Field_Information ('HRS013', 'NEEDED', $NEEDED, #DW)
do Get_Field_Information ('HRS013', 'OPEN_POS', $OPEN_POS, #DW)
do Get_Field_Information ('HRS013', 'PRI_WRK_EXP', $PRI_WRK_EXP, #DW)
do Get_Field_Information ('HRS013', 'PROF_EDUC', $PROF_EDUC, #DW)
do Get_Field_Information ('HRS013', 'RECRUITER_NAME', $RECRUITER_NAME, #DW)
do Get_Field_Information ('HRS013', 'SCH_EDUC', $SCH_EDUC, #DW)
do Get_Field_Information ('HRS013', 'SHIFT', $SHIFT, #DW)
do Get_Field_Information ('HRS013', 'SKILLS', $SKILLS, #DW)
do Get_Field_Information ('HRS013', 'START_DATE', $START_DATE, #DW)
do Get_Field_Information ('HRS013', 'STATUS', $STATUS, #DW)
do Get_Field_Information ('HRS013', 'STD_HOURS', $STD_HOURS, #DW)
do Get_Field_Information ('HRS013', 'STD_HRS_FREQUENCY', $WORK_PERIOD, #DW)
do Get_Field_Information ('HRS013', 'TESTS', $TESTS, #DW)
do Get_Field_Information ('HRS013', 'TO', $TO, #DW)
do Get_Field_Information ('HRS013', 'WRK_CNL', $WRK_CNL, #DW)
do Get_Field_Information ('HRS013', 'YEARS_OF_EDUCATN', $YEARS_OF_EDUCATN, #DW)
end-procedure
!
!***********************************************************************
!  PROC GetJOSTSLng
!***********************************************************************

BEGIN-PROCEDURE GetJOSTSLng

BEGIN-SELECT

C.DESCRSHORT   
  move &C.DESCRSHORT to $StatusCodeDescr

FROM PS_HRS_STS_JO_LVW C
WHERE C.STATUS_CODE = &A.STATUS_CODE

END-SELECT

END-PROCEDURE
!
!***********************************************************************
!  PROC GetWorksCnclDataLng
!***********************************************************************

BEGIN-PROCEDURE GetWorksCnclDataLng

BEGIN-SELECT
  
CNSL.DESCR50
CNSL.DESCRSHORT
  move &CNSL.DESCR50 to $Wks_Cnl_Descr
  move &CNSL.DESCRSHORT to $Wks_Cnl_Descrshort
    
FROM  PS_WC_COUNCIL_LNG CNSL
WHERE CNSL.SETID = $SETID
  AND CNSL.WC_COUNCIL_ID = $Wks_Cnl_Wrks_Cncl_Id
  AND CNSL.LANGUAGE_CD  = $Curr_Language_Cd
  AND CNSL.EFFDT =
        (SELECT MAX(EFFDT)
         FROM   PS_WC_COUNCIL_LNG CNS3
         WHERE CNSL.SETID = $SETID
           AND CNS3.WC_COUNCIL_ID = CNSL.WC_COUNCIL_ID
           AND CNS3.LANGUAGE_CD  = $Curr_Language_Cd
           AND CNS3.EFFDT <= $AsOfDate)
END-SELECT

END-PROCEDURE

!****************************************************************
BEGIN-PROCEDURE Det-Annual-Factor($frequency_id,$freq_effdt,:$freq_descrshort,:$frequency_type,
                                  :#freq_annual_factor,:$use_std_hours_sw)
!
! This procedure determines the Short Description, Frequency Type, Frequency Annualization Factor,
! and Use_Std_Hours_SW from the Frequency Table for the given Frequency ID.
!
! Input parameters: $FREQ_EFFDT - Effective Date
!                   $FREQUENCY_ID - Frequency ID
! Output parameters: $FREQ_DESCRSHORT - Short Description
!                    $FREQUENCY_TYPE - Frequency Type
!                    #FREQ_ANNUAL_FACTOR - Frequency Annualization Factor
!                    $USE_STD_HOURS_SW - Use_Std_Hours_SW
!**********************************************************************************************
#ifdef debugx
  display 'Entering FRQUENCY.SQC: Det-Annual-Factor'
  #ifdef debugy
     display ' Input $frequency_id: ' noline
     display $frequency_id
     display ' Input $freq_effdt: ' noline
     display $freq_effdt
  #end-if
#end-if

begin-SELECT
FF.FREQUENCY_ID
FF.EFFDT
FF.DESCRSHORT
 Let $freq_descrshort = &FF.DESCRSHORT
FF.FREQUENCY_TYPE
 Let $frequency_type = &FF.FREQUENCY_TYPE
FF.FREQ_ANNUAL_FACTOR
 Let #freq_annual_factor = &FF.FREQ_ANNUAL_FACTOR
FF.USE_STD_HOURS_SW
 Let $use_std_hours_sw = &FF.USE_STD_HOURS_SW

FROM PS_FREQUENCY_TBL FF
WHERE FF.FREQUENCY_ID = $frequency_id
  AND FF.EFFDT        = (SELECT MAX(EFFDT) FROM PS_FREQUENCY_TBL
                         WHERE FF.FREQUENCY_ID = FREQUENCY_ID
                           AND EFFDT <= $freq_effdt)
  AND FF.EFF_STATUS   = 'A'
end-SELECT

   do Det-Annual-Factor-Lang($frequency_id, $freq_effdt, $freq_descrshort_lang)

   let $Chk_Frequency_Source = substr($Frequency_ID,1,2)
   if $Chk_Frequency_Source = '@@'
      let $Frequency_Type = 'D'
      let #Freq_Annual_Factor = to_number(substr($Frequency_ID,3,3))
      let $Use_Std_Hours_Sw = 'N'
      let $freq_descrshort = 'Cnt. Daily'
      do Det-Annual-Factor-Lang('D', $freq_effdt, $freq_descrshort_lang)
   end-if

   if $freq_descrshort_lang <> ''
      let $freq_descrshort = $freq_descrshort_lang
   end-if

#ifdef debugx
  #ifdef debugy
     display ' Output $freq_descrshort: ' noline
     display $freq_descrshort
     display ' Output $frequency_type: ' noline
     display $frequency_type
     display ' Output #freq_annual_factor: ' noline
     display #freq_annual_factor
     display ' Output $use_std_hours_sw: ' noline
     display $use_std_hours_sw
  #end-if
  display 'Exiting FRQUENCY.SQC: Det-Annual-Factor'
#end-if

END-PROCEDURE Det-Annual-Factor


!**********************************************************************************************
BEGIN-PROCEDURE Det-Annual-Factor-Lang($freq_id_lang,$freq_effdt_lang,:$freq_descrshort_lang)
!
! This procedure determines the Short Description from the Related Language Table
! of the Frequency Table for the given Frequency ID.
!
! Input parameters: $FREQ_EFFDT_LANG - Effective Date
!                   $FREQ_ID_LANG - Frequency ID
! Output parameters: $FREQ_DESCRSHORT_LANG - Short Description
!**********************************************************************************************
#ifdef debugx
  display 'Entering FRQUENCY.SQC: Det-Annual-Factor-Lang'
  #ifdef debugy
     display ' Input $freq_id_lang: ' noline
     display $freq_id_lang
     display ' Input $freq_effdt_lang: ' noline
     display $freq_effdt_lang
         display '/// $_Curr_Language_Cd=' noline
         display $_Curr_Language_Cd

  #end-if
#end-if

  let $freq_descshort_lang = ''

  if $_Curr_Language_Cd = $_PSOptions_Language_Cd
    goto DetAnnFacLngExit
  end-if

  if Rtrim($freq_id_lang,' ') = '' or Rtrim ($freq_effdt_lang,' ') = ''
    goto DetAnnFacLngExit
  end-if

begin-SELECT
FFL.DESCR50
FFL.DESCRSHORT
  if rtrim(&FFL.DESCRSHORT,' ') <> ''
    let $freq_descrshort_lang = rtrim(&FFL.DESCRSHORT,' ')
  end-if

FROM PS_FREQ_TBL_LANG FFL
WHERE FFL.FREQUENCY_ID = $freq_id_lang
  AND FFL.LANGUAGE_CD  = $_Curr_Language_Cd
  AND FFL.EFFDT        = (SELECT MAX(EFFDT)
                            FROM PS_FREQ_TBL_LANG
                           WHERE FREQUENCY_ID = $freq_id_lang
                             AND LANGUAGE_CD = $_Curr_Language_Cd
                             AND EFFDT <= $freq_effdt_lang)
end-SELECT

DetAnnFacLngExit:

#ifdef debugx
  #ifdef debugy
     display ' ooo Output $freq_descrshort_lang: ' noline
     display $freq_descrshort_lang
  #end-if
  display 'Exiting FRQUENCY.SQC: Det-Annual-Factor-Lang'
#end-if

END-PROCEDURE Det-Annual-Factor-Lang


#include 'hrsrnctl.sqc'  !Get run control parameter values
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'getcodta.sqc'  !Get-Company-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getlocnm.sqc'  !Get-Location-Name procedure
#Include 'getwrkcn.sqc'  !Get-Works-Cncl-Data procedure
!#Include 'frquency.sqc'  !Det-Annual-Factor procedure
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
