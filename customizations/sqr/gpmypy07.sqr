!***********************************************************************
!  GPMYPY07:  SOCSO Summary Report.                                  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                                                                                *
!                                                                                                                                *
!          $Date:  2013/01/18:03:54:54                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                                                                                *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#Include 'setup02.sqc'   !Printer and page-size initialization

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Report-Parm-Clean
  do Stdapi-Term
end-report


begin-heading 6

  #Include 'stdhdg01.sqc'

  print $Date_Lbl (3,1)
  print $TODATE   (3,10) edit 'MM/DD/YYYY'

#define BU_pos                      1
#define COMPANY_Pos                 10
#define GRP_NBR_Pos                 20
#define PAYGROUP_Pos                34
#define EMPLID_Pos                  45
#define EMPL_RCD_Pos                49
#define NAME_Pos                    56
#define DED_CLASS_Pos               100
#define PAY_END_DT_Pos              115
#define DED_CUR_Pos                 129
#define MEMBERSHIP#_Pos             147
#define NK_Pos                      164

  IF &RC.GPMY_ORG_LINK_OPTN = 'CO'
    print $Company_Lbl                     (+2,{COMPANY_Pos})
  END-IF


  IF &RC.GPMY_ORG_LINK_OPTN = 'ET'
    print $Est_Lbl                     (+2,{COMPANY_Pos})
  END-IF


  IF &RC.GPMY_ORG_LINK_OPTN = 'DE'
    print $BU_Lbl                         (+2,{BU_Pos})
    print $BU_Dep_Lbl                     (0,{COMPANY_Pos})
  END-IF


  IF &RC.GPMY_ORG_LINK_OPTN = 'PG'
    print $PayGrp_Lbl                     (+2,{COMPANY_Pos})
  END-IF


  IF &RC.GPMY_ORG_LINK_OPTN = 'LO'
    print $BU_Lbl                         (+2,{BU_Pos})
    print $BU_Loc_Lbl                     (0,{COMPANY_Pos})
  END-IF


  print $Group_Number_Lbl                (0,{GRP_NBR_Pos})
  print $Pay_group_Lbl                   (0,{PAYGROUP_Pos})
  print $ID/Rcd_Lbl                      (0,{EMPLID_Pos})
  print $Name_Lbl                        (0,{NAME_Pos})
  print $Pay_end_dt_Lbl                  (0,{PAY_END_DT_Pos})
  print $Deduction_Lbl                   (0,{DED_CLASS_Pos})
  Print $Ded_amount_Lbl                  (0,{DED_CUR_Pos})
  print $Memb_number_Lbl                 (0,{MEMBERSHIP#_Pos})


  IF (&RC.GPMY_ORG_LINK_OPTN = 'LO') OR (&RC.GPMY_ORG_LINK_OPTN = 'DE')
     print '-'     (+1,{BU_Pos},8)               FILL
     print '-'     (0,{COMPANY_Pos},7)           FILL
     print '-'     (0,{GRP_NBR_Pos},12)          FILL
     print '-'     (0,{PAYGROUP_Pos},9)          FILL
     print '-'     (0,{EMPLID_Pos},7)            FILL
     print '-'     (0,{NAME_Pos},40)             FILL
     print '-'     (0,{DED_CLASS_Pos},13)        FILL
     print '-'     (0,{PAY_END_DT_Pos},12)       FILL
     Print '-'     (0,{DED_CUR_Pos},16)          FILL
     print '-'     (0,{MEMBERSHIP#_Pos},18)      FILL
  ELSE
     print '-'     (+1,{COMPANY_Pos},7)           FILL
     print '-'     (0,{GRP_NBR_Pos},12)          FILL
     print '-'     (0,{PAYGROUP_Pos},9)          FILL
     print '-'     (0,{EMPLID_Pos},7)            FILL
     print '-'     (0,{NAME_Pos},40)             FILL
     print '-'     (0,{DED_CLASS_Pos},10)        FILL
     print '-'     (0,{PAY_END_DT_Pos},12)       FILL
     Print '-'     (0,{DED_CUR_Pos},16)          FILL
     print '-'     (0,{MEMBERSHIP#_Pos},18)      FILL

  END-IF



end-heading



begin-procedure Init-Report

  do Stdapi-Init

  move 'GPMYPY07' to $ReportID
  do Get-Language-Codes ! get the current language in which user wants to print the report
  do Init_Report_Translation($ReportID, $curr_language_cd)
  do Append_Report_Translation($ReportID)
  !Gets the strings printed in this report
  do Get_Translat_Info


  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
    move $RC.ORG_LINK_UNIT to $Company
    move $RC.YearCd to $YEARCD
    move $RC.MonthCd to $MONTHCD

    if RTRIM($Company,' ') = ''
       let $Company = '%'
    end-if


    if RTRIM($ORG_LINK_UNIT,' ') = ''
       let $WHERE1 = '1=1'

    ELSE
       LET $WHERE1 = 'B.ORG_LINK_UNIT =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
       if  (&RC.GPMY_ORG_LINK_OPTN = 'LO') or (&RC.GPMY_ORG_LINK_OPTN = 'DE')
            let $WHERE1 = $WHERE1 || ' AND ' || 'B.BUSINESS_UNIT =' || '''' || &RC.BUSINESS_UNIT || ''''
       END-IF
    end-if

  end-if



end-procedure


begin-procedure Get-Values

!No Prompt

end-procedure



!****************************
!Procedure :Select-Parameters
!****************************



begin-procedure Select-Parameters


begin-select

RC.GPMY_ORG_LINK_OPTN
RC.BUSINESS_UNIT
RC.ORG_LINK_UNIT
RC.MONTHCD
RC1.END_DT

FROM  PS_GPMY_RPT_RC RC, PS_GPMY_PR_RC RC1
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
AND   RC1.OPRID         = $Prcs_OprID
AND   RC1.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID

end-select
  let $ORG_LINK_OPTN     = &RC.GPMY_ORG_LINK_OPTN
  LET $BUSINESS_UNIT     = &RC.BUSINESS_UNIT
  let $ORG_LINK_UNIT     = &RC.ORG_LINK_UNIT
  let $TODATE            = &RC1.END_DT



end-procedure

!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT)
                 FROM PS_NAMES NAMES1
                 WHERE NAMES1.EMPLID = NAMES.EMPLID
                 AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                 AND NAMES1.EFFDT <= $TODATE)
AND NAMES.NAME_TYPE = 'LEG'
end-SELECT

end-procedure

!****************************
!Procedure :Process-main
!****************************


begin-procedure Process-Main


let #Emplr_Total = 0
let #Empl_Total = 0
begin-SELECT
DISTINCT(B.BUSINESS_UNIT)       (+1,{BU_Pos}) ON-BREAK LEVEL=1  After=unit-Total
B.ORG_LINK_UNIT                 (+1,{COMPANY_Pos}) ON-BREAK LEVEL=2 After=Company-Total
B.GPMY_SOCSO_NBR                  (0,{GRP_NBR_Pos}) ON-BREAK LEVEL=3
J.GP_PAYGROUP                   (0,{PAYGROUP_Pos}) ON-BREAK LEVEL=4
J.EMPLID                        (0,{EMPLID_Pos}) ON-BREAK LEVEL=5
F.NAME
E.GPMY_MMBRSHIP_NBR            ! (0,{MEMBERSHIP#_Pos}) ON-BREAK LEVEL=5

        move &J.EMPLID to $EmplId
        let $EELegalName = ''
        do Get-Legal-Name

        LET $EELegalName = LTRIM(RTRIM($EELegalName, ' '), ' ')

        IF RTRIM($EELegalName,' ') = ''
              let $Name = &F.NAME
        ELSE
            let $Name = $EELegalName

        END-IF

      !  do get-empl-details

   let $Name1 = ''
   let $Name2 = ''

    IF LENGTH($Name) > 30
       let $Name1 = SUBSTR($Name,1,30)
       let $Name2 = SUBSTR($Name,31,30)
        END-IF

    IF RTRIM($Name1,' ') <> '' AND RTRIM($Name2,' ') <> ''
        PRINT $Name1 (0,{NAME_Pos}) ON-BREAK LEVEL=5
        print &E.GPMY_MMBRSHIP_NBR   (,{MEMBERSHIP#_Pos}) ON-BREAK LEVEL=5
        PRINT $Name2 (+1,{NAME_Pos}) ON-BREAK LEVEL=5
    ELSE
        PRINT $Name  (0,{NAME_Pos}) ON-BREAK LEVEL=5
        print &E.GPMY_MMBRSHIP_NBR   (,{MEMBERSHIP#_Pos}) ON-BREAK LEVEL=5
    END-IF


        do get-empl-details

FROM PS_GPMY_SOC_ORG B,
     PS_GPMY_SOC_ORG_DT C,
     PS_JOB J,
     PS_GPMY_SOC_PYE E,
     PS_NAMES F,
     PS_GPMY_PY_TMP MP

WHERE B.EFFDT=C.EFFDT
        AND C.GPMY_ORG_LINK_OPTN= &RC.GPMY_ORG_LINK_OPTN
        AND [$WHERE1]
        AND J.EMPLID=E.EMPLID
        AND J.EMPLID=F.EMPLID
        AND J.EMPLID=MP.EMPLID
        AND J.EMPL_RCD=MP.EMPL_RCD
    AND E.GPMY_SOCSO_NBR=B.GPMY_SOCSO_NBR
    AND F.NAME_TYPE = 'PRI'
    AND E.EFFDT = (SELECT MAX(E1.EFFDT)
                   FROM PS_GPMY_SOC_PYE E1
                   WHERE E1.EMPLID = E.EMPLID
                   AND E1.EMPL_RCD = E.EMPL_RCD
                   AND E1.EFFDT <= $TODATE)

    AND F.EFFDT = (SELECT MAX(F1.EFFDT)
                   FROM PS_NAMES F1
                   WHERE F1.EMPLID = F.EMPLID
                   AND F1.NAME_TYPE = F.NAME_TYPE
                   AND F1.EFFDT <= $TODATE)
    AND J.EFFDT =
            (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.EMPLID = J.EMPLID
                    AND   J1.EMPL_RCD = J.EMPL_RCD
                    AND J1.EFFDT <= $TODATE)
        AND J.EFFSEQ =
            (SELECT MAX(J2.EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = J.EMPLID
                    AND J2.EMPL_RCD = J.EMPL_RCD
                    AND J2.EFFDT = J.EFFDT)
         AND PROCESS_INSTANCE=(#prcs_process_instance - 1)
END-SELECT

    print $Total_Lbl (+3,1)
    print $Employer_amount_Lbl (0 ,30)
    print $Payee_amount_Lbl (0 ,60)

    do Format-Number(#Emplr_Total_G,$out,'9999999999999.99')
    print $out      (+1,30)

    do Format-Number(#Empl_Total_G,$out,'9999999999999.99')
    print $out      (0,60)

end-procedure


!****************************
!Procedure :get-empl-details
!****************************



begin-procedure get-empl-details

begin-select
DISTINCT(MP3.GPMY_FLD_NAME)    &MP3.GPMY_FLD_NAME                (0,{DED_CLASS_Pos})
MP3.CALC_RSLT_VAL   &CALC_RSLT_VAL  (0,{DED_CUR_Pos})
MP.PRD_END_DT                        (0,{PAY_END_DT_Pos}) ON-BREAK LEVEL=5 EDIT MM/DD/YYYY

        move &MP3.GPMY_FLD_NAME to $Report_Fld_name

        if rtrim($Report_Fld_name,' ')='SOC_DED_EE_MTD'
                let #Empl_Total= #Empl_Total + &CALC_RSLT_VAL

        end-if

        if rtrim($Report_Fld_name,' ')='SOC_DED_ER_MTD'
                let #Emplr_Total= #Emplr_Total + &CALC_RSLT_VAL

        end-if

        position (+1)  ! Advance to the next line


FROM PS_GPMY_PY_TMP3 MP3,
     PS_GPMY_PY_TMP MP,
     PS_GP_PYE_SEG_STAT T2

WHERE MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP3.EMPLID = $EmplId
AND MP3.EMPLID = MP.EMPLID
AND MP.EMPLID = T2.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP.CAL_RUN_ID =  T2.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = T2.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP.GP_PAYGROUP = T2.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP.CAL_ID = T2.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP.ORIG_CAL_RUN_ID =  T2.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP.RSLT_SEG_NUM = T2.RSLT_SEG_NUM
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = T2.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = T2.RSLT_REV_NUM
AND MP.PRC_ORD_TS=(
SELECT MAX(PRC_ORD_TS)
FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
AND EMPLID=MP.EMPLID )
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND CAL_ID =  MP3.CAL_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)
!AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PY_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
!        AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!        AND X1.USER_KEY1=MP3.USER_KEY1
!)
AND USER_KEY1=&B.GPMY_SOCSO_NBR

end-select


end-procedure


!****************************
!Procedure :Class_Break
!****************************


begin-procedure Class_Break

    Print ' ' (+1,1)

end-procedure


!****************************
!Procedure :Company-Total
!****************************


begin-procedure Company-Total



    print $Company_total_Lbl (+2 ,10)
    print $Employer_amount_Lbl (0 ,30)
    print $Payee_amount_Lbl (0 ,60)
    do Format-Number(#Emplr_Total,$out,'9999999999999.99')
    print $out      (+1,30)

    do Format-Number(#Empl_Total,$out,'9999999999999.99')
    print $out      (0,60)

    let #Emplr_Total_G = #Emplr_Total_G + #Emplr_Total
    let #Empl_Total_G = #Empl_Total_G + #Empl_Total
    let #Emplr_Total_B = #Emplr_Total_B + #Emplr_Total
    let #Empl_Total_B = #Empl_Total_B + #Empl_Total

    let #Emplr_Total = 0
    let #Empl_Total = 0

end-procedure


begin-procedure unit-Total



    print $Company_total_Lbl (+2 ,1)
    print $Employer_amount_Lbl (0 ,30)
    print $Payee_amount_Lbl (0 ,60)
    do Format-Number(#Emplr_Total_B ,$out,'9999999999999.99')
    print $out      (+1,30)

    do Format-Number(#Empl_Total_B,$out,'9999999999999.99')
    print $out      (0,60)

    let #Emplr_Total_G = #Emplr_Total_B + #Emplr_Total
    let #Empl_Total_G = #Empl_Total_B+ #Empl_Total

    let #Emplr_Total = 0
    let #Empl_Total = 0

end-procedure




!***********************************************************************
! Function:    Get_Translat_Info                                       *
!                                                                      *
! Description: Gets the strings printed in this report                 *
!                                                                      *
!***********************************************************************

begin-procedure Get_Translat_Info

   do Add_Report_Translation($ReportID, $rpt_language_cd)
   do Get_Field_Information ('GPMYPY07', 'GPMYPY07_TITLE',     $ReportTitle,       #DW)
   do Get_Field_Information ('GPMYPY07', 'COMPANY',            $Company_Lbl,       #DW)
   do Get_Field_Information ('GPMYPY07', 'BU',                 $BU_Lbl,             #DW)
   do Get_Field_Information ('GPMYPY07', 'BU_LOCATION',        $BU_Loc_Lbl,       #DW)
   do Get_Field_Information ('GPMYPY07', 'BU_DEPARTMENT',      $BU_Dep_Lbl,       #DW)
   do Get_Field_Information ('GPMYPY07', 'ESTABLISHMENT',      $Est_Lbl,       #DW)
   do Get_Field_Information ('GPMYPY07', 'PAYGROUP',           $PayGrp_Lbl,       #DW)
   do Get_Field_Information ('GPMYPY07', 'GROUP_NUMBER',       $Group_Number_Lbl,  #DW)
   do Get_Field_Information ('GPMYPY07', 'PAY_GROUP',          $Pay_group_Lbl,     #DW)
   do Get_Field_Information ('GPMYPY07', 'ID_RCD',             $ID/Rcd_Lbl,        #DW)
   do Get_Field_Information ('GPMYPY07', 'NAME',               $Name_Lbl,          #DW)
   do Get_Field_Information ('GPMYPY07', 'DED_AMOUNT',         $Ded_amount_Lbl,    #DW)
   do Get_Field_Information ('GPMYPY07', 'COMPANY_TOTAL',      $Company_total_Lbl, #DW)
   do Get_Field_Information ('GPMYPY07', 'MEMB_NUMBER',        $Memb_number_Lbl,   #DW)
   do Get_Field_Information ('GPMYPY07', 'PAY_END_DT',         $Pay_end_dt_Lbl,    #DW)
   do Get_Field_Information ('GPMYPY07', 'EMPLOYER_AMOUNT',    $Employer_amount_Lbl,#DW)
   do Get_Field_Information ('GPMYPY07', 'PAYEE_AMOUNT',       $Payee_amount_Lbl,  #DW)
   do Get_Field_Information ('GPMYPY07', 'DEDUCTION',          $Deduction_Lbl ,    #DW)
   do Get_Field_Information ('GPMYPY07', 'DATE',               $Date_Lbl ,         #DW)
   do Get_Field_Information ('GPMYPY07', 'TOTAL',              $Total_Lbl ,         #DW)


end-procedure



#include 'stdapi.sqc'    !Routines to update run status
#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getcodta.sqc'  !Routine Get-Company-Data
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcslng.sqc'
#Include 'number.sqc'    !Routines to format numbers
#Include 'ldnumlit.sqc'  !Load-NumberLits-Array procedure
#Include 'rotname1.sqc'  !Rotate-Name Procedure



begin-Procedure Report-Parm-Clean
begin-sql
DELETE FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP2
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP3
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_RPT_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_PR_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_EMPL_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

end-Procedure
