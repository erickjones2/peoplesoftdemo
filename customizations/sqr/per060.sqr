!******************************************
!  PER060:  Disability                    *
!******************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:13:56:46                                 
!       $Release:  HR92                                                
!      $Revision:  102                                                 
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
    Move 1 to $Year4
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 7


!do Get_Field_Information ('PER060',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'

!do Get_Field_Information ('PER060',     'DISABILITY',         $Disability_ITA,       #DW)

!do Get_Field_Information ('PER060',     'YRS_SERVICE1',         $YRS_SERVICE1,  #DW)
!do Get_Field_Information ('PER003',     'MONTHCD',              $MONTH,         #DW)
!do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,          #DW)
!do Get_Field_Information ('HR',         'HIRE_DT',              $HIRE,          #DW)
!do Get_Field_Information ('HR',         'DEPARTMENT',           $DEPT,          #DW)
!do Get_Field_Information ('HR',         'JOBTITLE',             $JOBTITLE,      #DW)

!  let $title = $REPORTTITLE || ':'

!  print $TITLE                                          (3,1)

!  PRINT $NAME                                           (+2,53)
!  PRINT $Dysability_ITA                                 (+1,1)
!  PRINT $HIRE                                           (0,42)
!  PRINT $YRS_SERVICE1                                   (0,53)
!  PRINT $MONTH                                          (0,58)
!  PRINT $DEPT                                           (0,64)
!  PRINT $JOBTITLE                                       (0,95)

if $TypeOfReport = 'A'
  LET $colon = ':'
  LET $colon_space = ': '
   LET $companyheader = $COMPANY_LBL || $colon || $company
   LET $asofdateheader = $ASOFDATE_YEAR_LBL || $colon 
   LET $ANNUAL_HDG = $DISRPT_HDG_LBL || $colon_space || $ANNUAL_LBL
  PRINT $asofdateheader (0,1) BOLD
  PRINT &R.AS_OF_DATE  (0,6) edit 'YYYY' BOLD 
  PRINT $companyheader  (0,17) BOLD
  PRINT $ANNUAL_HDG  () BOLD CENTER
  PRINT $STATE_LBL     (+3,1) 
  PRINT $DISTYPE       (0,31)
  PRINT $SEX_LBL           (0,61)
  PRINT $TOTAL_LBL         (0,72) 

end-if


if $TypeOfReport = 'S'
 LET $colon = ':'
 LET $colon_space = ': '
  LET $companyheader = $COMPANY_LBL || $colon || $company
  LET $asofdateheader = $ASOFDATE_LBL || $colon ||  $AsOfDate_YMD 
  LET $STATISTICS_HDG = $DISRPT_HDG_LBL || $colon_space || $STATISTICS_LBL
  
  PRINT $asofdateheader (0,1) BOLD
  PRINT $companyheader  (0,25) BOLD
  PRINT $STATISTICS_HDG  () BOLD CENTER
  print $STATE_LBL               (+3,1)
  print $DISTYPE               (0,11)
  print $MALE_LBL               (0,40)
  print $FEMALE_LBL             (0,51)
  print $FULL_TIME_LBL          (0,63)
  print $PART_TIME_LBL          (0,76)
  print $REGULAR_LBL            (0,91)
  print $TEMPORARY_LBL          (0,103)
  print $TOTAL                  (0,118) BOLD
  print $EMPLOYEES_LBL          (+1,40)
  print $EMPLOYEES_LBL          (0,51)
  print $EMPLOYEES_LBL          (0,63)
  print $EMPLOYEES_LBL          (0,76)
  print $EMPLOYEES_LBL          (0,91)
  print $EMPLOYEES_LBL          (0,103)
  print $EMPLOYEES_LBL          (0,118) BOLD
end-if

   

if $TypeOfReport = 'N'
 LET $colon = ':'
 LET $colon_space = ': '
  LET $companyheader = $COMPANY_LBL || $colon || $company
  LET $asofdateheader = $ASOFDATE_LBL || $colon ||  $AsOfDate_YMD 
  LET $NAMELIST_HDG = $DISRPT_HDG_LBL || $colon_space || $NAMELIST_LBL
  
  PRINT $asofdateheader (0,1) BOLD
  PRINT $companyheader  (0,25) BOLD
  PRINT $NAMELIST_HDG  () BOLD CENTER
 let #column_length = 73
 graphic (+3,1,132) horz-line
 graphic (0,1,#column_length) vert-line
 graphic (0,32,#column_length) vert-line
 graphic (0,42,#column_length) vert-line
 graphic (0,59,#column_length) vert-line
 graphic (0,89,#column_length) vert-line
 graphic (0,109,#column_length) vert-line
 graphic (0,121,#column_length) vert-line
 graphic (0,133,#column_length) vert-line
  print $NAME_LBL                   (+1,3) 
  print $SEX_LBL                   (,33)
  print $BIRTHDATE_LBL             (,43)
  print $BIRTHPLACE_LBL        (,60)
  print $NATIONAL_ID_LBL        (,90)
 
  print $JOBCODE_LBL            (+1,3)
  print $REG_TEMP_LBL          (,33)
  print $HIRE_DT_LBL            (,43)
  print $CONTRACTS_LBL         (,60)
  print $FULLPART_LBL              (,90)
  print $STD_HOURS_LBL          (,110)
  print $FTE_LBL            (,122)
 
  print $DISTYPE            (+1,3)
  print $DISPERCENT         (,33)
  print $STARTDATETIME_LBL (,43)
  print $ENDDATETIME_LBL   (,60)
  graphic (+1,1,132) horz-line
  graphic (80,1,132) horz-line
 
end-if

if $TypeOfReport <> 'N'and $TypeOfReport <>'S' and $TypeOfReport <> 'A' 

  print $FEMALE                (4,40)
  print $MALE                  (0,60)
  print $LOCDESCR              (+2,1)
  print $FULL                  (0,30)
  print $PART                  (0,40)
  print $TOTAL                 (0,50)
  print $FULL                  (0,60)
  print $PART                  (0,70)
  print $TOTAL                 (0,80)

 end-if

end-heading

!************************************
!Init Report
!************************************

begin-procedure Init-Report

  move 'PER060' to $ReportID
  

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
  end-if
let $RepID = 'PER05960'
  do Init_Printer
  do Init_Report_Translation ($RepID, $language_cd)
  !do Append_Report_Translation ('HR')
  do Append_Report_Translation ($RepID)
last1:

!do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,          #DW)
do Get_Field_Information ($RepID,         'DISTYPE',            $DISTYPE,          #DW)
do Get_Field_Information ($RepID,         'STATE',            $STATE_LBL,          #DW)
do Get_Field_Information ($RepID,         'COMPANY',            $COMPANY_LBL,          #DW)
do Get_Field_Information ($RepID,         'TOTAL',            $TOTAL_LBL,          #DW)
do Get_Field_Information ($RepID,         'DISABLED',            $TOTALDISABLED_LBL,          #DW)
do Get_Field_Information ($RepID,         'LOCDESCR',          $LOCDESCR,            #DW)
do Get_Field_Information ($RepID,         'NAME',            $NAME_LBL,          #DW)
do Get_Field_Information ($RepID,         'SEX',            $SEX_LBL,          #DW)
do Get_Field_Information ($RepID,         'CATEGDESCR',            $CATEGDESCR,          #DW)
do Get_Field_Information ($RepID,         'FULL/PART',            $FULLPART_LBL,          #DW)
do Get_Field_Information ($RepID,         'BIRTHDATE',            $BIRTHDATE_LBL,          #DW)
do Get_Field_Information ($RepID,         'DIS/PERCENT',          $DISPERCENT,            #DW)
do Get_Field_Information ($RepID,         'TOTAL',            $TOTAL,          #DW)
do Get_Field_Information ($RepID,         'PART',            $PART,          #DW)
do Get_Field_Information ($RepID,         'FULL',            $FULL,          #DW)
do Get_Field_Information ($RepID,         'MALE',            $MALE,          #DW)
do Get_Field_Information ($RepID,         'FEMALE',            $FEMALE,          #DW)

do Get_Field_Information ($RepID,         'REG_TEMP',            $REG_TEMP_LBL,          #DW)
do Get_Field_Information ($RepID,         'STD_HOURS',            $STD_HOURS_LBL,          #DW)
do Get_Field_Information ($RepID,         'WEEKDAY_NAME',         $WEEKLY_HOURS_LBL,          #DW)
do Get_Field_Information ($RepID,         'FTE',            $FTE_LBL,          #DW)
do Get_Field_Information ($RepID,         'FTE_CAP',            $ACTLWRKHRS_LBL,          #DW)


do Get_Field_Information ($RepID,         'HIRE_DT',            $HIRE_DT_LBL,          #DW)
do Get_Field_Information ($RepID,         'CONTRACTS',            $CONTRACTS_LBL,          #DW)
do Get_Field_Information ($RepID,         'BIRTHPLACE',            $BIRTHPLACE_LBL,          #DW)
do Get_Field_Information ($RepID,         'NATIONAL_ID',            $NATIONAL_ID_LBL,          #DW)
do Get_Field_Information ($RepID,         'JOBCODE',            $JOBCODE_LBL,          #DW)
do Get_Field_Information ($RepID,         'FTE',            $FTE_LBL,          #DW)
do Get_Field_Information ($RepID,         'DISABL_STARTDT_ITA',            $DISABL_STARTDT_LBL,          #DW)
do Get_Field_Information ($RepID,         'STARTDATETIME',            $STARTDATETIME_LBL,          #DW)
do Get_Field_Information ($RepID,         'ENDDATETIME',            $ENDDATETIME_LBL,          #DW)

do Get_Field_Information ($RepID,         'NUMBER_OF_EMPL',   $EMPLOYEES_LBL,          #DW)
do Get_Field_Information ($RepID,         'SEX_ALL',          $MALE_LBL,          #DW)
do Get_Field_Information ($RepID,         'SEX_AP',           $FEMALE_LBL,          #DW)
do Get_Field_Information ($RepID,         'FULL_TIME_LBL',            $FULL_TIME_LBL,          #DW)
do Get_Field_Information ($RepID,         'PART_TIME_LBL',            $PART_TIME_LBL,          #DW)
do Get_Field_Information ($RepID,         'REGULAR_LBL',            $REGULAR_LBL,          #DW)
do Get_Field_Information ($RepID,         'TEMPORARY',            $TEMPORARY_LBL,          #DW)
do Get_Field_Information ($RepID,         'ASOFDATE',            $ASOFDATE_LBL,          #DW)
do Get_Field_Information ($RepID,         'YEAR',            $ASOFDATE_YEAR_LBL,          #DW)

do Get_Field_Information ($RepID,         'DISABILITY_REPORT', $DISRPT_HDG_LBL,          #DW)
do Get_Field_Information ($RepID,         'ANNUAL',            $ANNUAL_LBL,          #DW)
do Get_Field_Information ($RepID,         'NAMELIST',          $NAMELIST_LBL,          #DW)
do Get_Field_Information ($RepID,         'STATISTICS',        $STATISTICS_LBL,          #DW)

end-procedure

!************************************
!Get Values
!************************************
begin-procedure Get-Values

   let $language_cd = $PRCS_LANGUAGE_CD

   display $prcs_oprid
   display $prcs_run_cntl_id

begin-SELECT

R.AS_OF_DATE
R.DISABILITY_REPORT
R.COMPANY

 let $TypeOfReport = &R.DISABILITY_REPORT
 let $AsOfDate = &R.AS_OF_DATE
   do Format-DateTime($AsOfDate, $AsOfDate_YMD, {DEFDMY}, '', '')
  
 let $company = &R.COMPANY

from PS_RUN_CNTL_PER060 R
where R.OPRID = $prcs_oprid
and   R.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

let #reccount = 0
begin-SELECT
COUNT(*) &STATE_COUNT
  LET #reccount = &STATE_COUNT
from PS_RUN_CNTL_LOCTN L
where L.OPRID = $prcs_oprid
and   L.RUN_CNTL_ID = $prcs_run_cntl_id
AND L.STATE <> ' '
end-SELECT

begin-SELECT
CMP.DESCR
  LET $CompanyDescr = &CMP.DESCR
from PS_COMPANY_TBL CMP
where CMP.COMPANY = $company
AND CMP.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL WHERE COMPANY = CMP.COMPANY AND EFFDT <= $AsOfDate)
end-SELECT

display $AsOfDate
display $TypeOfReport

end-procedure



!************************************
!Get-Jobcode-Descr
!************************************
begin-procedure Get-Jobcode-Descr

begin-SELECT
A.DESCR
  let $Jobcode_descr = &A.DESCR
 FROM PS_JOBCODE_TBL A 
 WHERE A.SETID = $SETID_JOBCODE
 AND A.JOBCODE = $JOBCODE
 AND A.EFF_STATUS = 'A'
   AND A.EFFDT = ( 
 SELECT MAX(B.EFFDT) 
  FROM PS_JOBCODE_TBL B 
 WHERE B.JOBCODE = A.JOBCODE 
   AND B.EFFDT <= $AsOfDate 
   AND A.SETID = B.SETID)

end-SELECT
end-procedure


!************************************
!Get Country Descr
!************************************
begin-procedure Get-Country-Descr

begin-SELECT

CTRY.DESCR   
  let $Country_Descr = &CTRY.DESCR
FROM PS_COUNTRY_TBL CTRY 
WHERE CTRY.COUNTRY = $Birthcountry

end-SELECT
end-procedure


!************************************
!Get Province / State Descr
!************************************
begin-procedure Get-State-Descr

begin-SELECT

ST.DESCR   
  let $State_Descr = &ST.DESCR
FROM PS_STATE_TBL ST 
WHERE ST.COUNTRY = 'ITA'
AND   ST.STATE = $state

end-SELECT
end-procedure


!************************************
!Get Location Descr
!************************************

begin-procedure Get-Location-Descr

begin-SELECT

LOC.DESCR   

  let $Location_Descr = &LOC.DESCR

FROM PS_LOCATION_TBL LOC 
WHERE LOC.SETID = $Setid
AND   LOC.LOCATION = $Location 
AND   LOC.EFFDT = (SELECT MAX(LCTN.EFFDT)
                 FROM PS_LOCATION_TBL LCTN 
                 WHERE LCTN.SETID = LOC.SETID
                 AND LCTN.LOCATION = LOC.LOCATION
                 AND LCTN.EFFDT <= $AsOfDate)
end-SELECT
end-procedure

!************************************
!Get Employee Categorization Descr
!************************************

begin-procedure Get-Empl-Ctg-Descr

begin-SELECT

CTG.DESCR   

  let $Category_Descr = &CTG.DESCR

FROM PS_EMPL_CTG_L1 CTG 
WHERE CTG.LABOR_AGREEMENT = $Agreement
AND  CTG.EMPL_CTG = $Category 
AND CTG.SETID = $SETID_LBR_AGRMNT
AND CTG.EFFDT =
          (SELECT MAX(CTG_L1.EFFDT)
           FROM PS_EMPL_CTG_L1 CTG_L1
           WHERE CTG_L1.SETID = CTG.SETID
           AND CTG_L1.LABOR_AGREEMENT = CTG.LABOR_AGREEMENT
           AND CTG_L1.EMPL_CTG = CTG.EMPL_CTG
           AND CTG_L1.EFFDT <= $AsOfDate)
AND CTG.EFF_STATUS = 'A'

end-SELECT
end-procedure


!************************************
!Get Contract information
!************************************

begin-procedure Get-Contract_Data

begin-SELECT

CNTR.CONTRCT_EXP_END_DT   

FROM PS_CONTRACT_DATA CNTR
WHERE CNTR.EMPLID = &N.EMPLID
AND CNTR.CONTRACT_NUM = &N.CONTRACT_NUM

end-SELECT
end-procedure

!************************************
!
!************************************
begin-procedure Process-Main

  do Format-DateTime($AsOfDate, $AsOf_YMD, {DEFDMY}, '', '')
  do Get-Values
  
let $sql-statement = 'PER060.SQR,Delete-Worktable,Delete,PS_R_PER060'
begin-SQL On-Error=SQL-Error
DELETE FROM PS_R_PER060 WHERE RUN_CNTL_ID = $prcs_run_cntl_id AND COMPANY = $COMPANY;
end-SQL

  do Data-Selection

  if $TypeOfReport = 'A'
      do Create-Report-A
  else
     if $TypeOfReport = 'N'
        do Create-Report-N
     else
        do Create-Report-S
     end-if
  end-if

end-procedure

!************************************
! Data Selection
!************************************
begin-procedure Data-Selection
LET $BLANK =' '

begin-SQL On-Error=SQL-Error
 
INSERT INTO PS_R_PER060
  (RUN_CNTL_ID, 
  COMPANY,EMPLID, 
  NAME,SEX,
  DISABILITY_ITA,
  DISABL_STARTDT_ITA, 
  DISABL_ENDDT_ITA, 
  STATE,REG_TEMP,
  FULL_PART_TIME,
  SETID_JOBCODE, 
  JOBCODE, 
  STD_HOURS, 
  FTE, 
  HIRE_DT,
  CONTRACT_NUM,
  CONTRACT_END_DT,
  CONTRCT_EXP_END_DT, 
  LABOR_AGREEMENT,
  EMPL_CTG,
  LOCATION,
  SETID,
  DISABILITY_PERCTG,
  BIRTHDATE,
  BIRTHPLACE,
  BIRTHCOUNTRY,
  NATIONAL_ID, 
  SETID_LBR_AGRMNT)
  SELECT
  $prcs_run_cntl_id,
  $COMPANY,
  B.EMPLID,
  A.NAME,
  A.SEX,
  B.DISABILITY_ITA,
  B.DISABL_STARTDT_ITA,
  B.DISABL_ENDDT_ITA,
  E.STATE,
  C.REG_TEMP,
  C.FULL_PART_TIME,
  C.SETID_JOBCODE,
  C.JOBCODE, 
  C.STD_HOURS,
  C.FTE,
  C.HIRE_DT,
  C.CONTRACT_NUM,
  C.EFFDT,
  C.EFFDT,
  C.LABOR_AGREEMENT,
  C.EMPL_CTG,
  C.LOCATION,
  $BLANK,
  B.DISABILITY_PERCTG,
  A.BIRTHDATE,
  A.BIRTHPLACE,
  A.BIRTHCOUNTRY,
  F.NATIONAL_ID,
  C.SETID_LBR_AGRMNT
  FROM  PS_PERSONAL_DT_FST A, PS_DISABILITY B, PS_JOB C,  PS_LOCATION_TBL E, PS_PERS_NID F
  WHERE C.HR_STATUS = 'A'
  AND A.EMPLID = B.EMPLID
  AND B.EMPLID = C.EMPLID
  AND B.DISABL_STARTDT_ITA <= $AsOfDate
  AND (B.DISABL_ENDDT_ITA >= $AsOfDate 
  OR  B.DISABL_ENDDT_ITA IS NULL)
  AND E.SETID = C.SETID_LOCATION 
  AND E.LOCATION = C.LOCATION  
  AND E.EFF_STATUS ='A' 
  AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL WHERE SETID = E.SETID AND LOCATION = E.LOCATION AND EFF_STATUS ='A' AND EFFDT <= $AsOfDate)
  AND (E.STATE IN (SELECT STATE FROM PS_RUN_CNTL_LOCTN WHERE  OPRID = $prcs_oprid AND RUN_CNTL_ID = $prcs_run_cntl_id)
  OR #reccount = 0)
  AND C.COMPANY = $COMPANY
  AND B.DISABILITY_ITA <> ' '   
  AND A.EMPLID = F.EMPLID
  AND F.COUNTRY = 'ITA'
  AND F.NATIONAL_ID_TYPE = 'CF'
  AND C.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = C.EMPLID
         AND H.EMPL_RCD = C.EMPL_RCD
         AND H.EFFDT <= $AsOfDate)
  AND C.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = C.EMPLID
         AND I.EMPL_RCD = C.EMPL_RCD
         AND I.EFFDT = C.EFFDT)

end-SQL

end-procedure


!************************
! Create Report Annual
!************************
 
begin-procedure Create-Report-A
let #row_total = 0
let #state_total = 0
let #company_total = 0
let $state = ' '
position (+1,1)

begin-SELECT
STATE
  move &STATE to $State
  do Get-State-Descr
  let $stateupper_annual = upper ($State_Descr)
  print $stateupper_annual   (0,1) on-break Level=1 after=state_tot BOLD
  
  IF $state <> $state_old
    let $state_old = $state
    end-if
    
DISABILITY_ITA
  move &DISABILITY_ITA to $Disability
  move 'DISABILITY_ITA'  to $FieldName
  move &DISABILITY_ITA to $FieldValue
  do Read-Translate-Table
  display $XlatShortName
  print $XlatLongName                   (0,31) on-break Level=2 after=disabl_rowcheck
SEX
  move &SEX to $Sex
  move 'SEX'  to $FieldName
  move &SEX to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                   (0,61)   on-break Level=3 after=row_tot 

  let #row_total = #row_total + 1
 
FROM PS_R_PER060 
WHERE RUN_CNTL_ID = $prcs_run_cntl_id
AND COMPANY = $COMPANY
ORDER BY STATE DESC, DISABILITY_ITA, SEX
end-SELECT
 
if #company_total > 0
   LET $colon = ':'
   let $companytotal = $TOTALDISABLED_LBL || ' ' || $COMPANY_LBL || ' ' || $CompanyDescr || $colon
  print $companytotal (+3,1) BOLD
  print #company_total () edit 999,999 BOLD
end-if

end-procedure


begin-procedure disabl_rowcheck
 if #current-line > 73 
  if $state = $state_old 
    new-page
    position (+3,0)
  end-if
 end-if
end-procedure


begin-procedure row_tot  
  print #row_total (0,72) edit 999,999
  position (+1,1)     ! Leave 1 blank lines.
   Let #state_total = #state_total + #row_total
  let #row_total = 0
end-procedure ! row_tot


begin-procedure state_tot 
let $statetotal = $TOTALDISABLED_LBL || ' ' || $STATE_LBL || ' '
  print $statetotal (+2,1)
  print #state_total () edit 999,999  
  position (+3,1)     ! Leave 3 blank lines.
  let #company_total = #company_total + #state_total
  let #state_total = 0
   
  if #current-line > 70
    new-page
    position (+3,0)
  end-if
end-procedure ! state_tot



!************************
! Create Report Name List
!************************

begin-procedure Create-Report-N

 position (+4,1)
begin-SELECT
N.STATE
N.EMPLID
N.NAME
N.SEX
N.NATIONAL_ID
N.BIRTHDATE
N.BIRTHPLACE
N.BIRTHCOUNTRY
N.FULL_PART_TIME
N.REG_TEMP
N.SETID_JOBCODE
N.JOBCODE
N.STD_HOURS
N.FTE
N.HIRE_DT
N.CONTRACT_NUM
N.LABOR_AGREEMENT
N.EMPL_CTG
N.DISABILITY_ITA
N.DISABILITY_PERCTG
N.SETID
N.DISABL_STARTDT_ITA
N.DISABL_ENDDT_ITA
N.SETID_LBR_AGRMNT
  
 if #current-line > 70
  new-page
  position (+3,0)
 end-if
  move &N.STATE to $State
  do Get-State-Descr
  let $stateupper = upper ($State_Descr)
  print $stateupper   (+2,1) on-break Level=1 after=Statebreak BOLD 
  
  move &N.NAME to $Name
  print $Name                                  (+1,3) BOLD
  
  move &N.SEX to $Sex
  move 'SEX'  to $FieldName
  move &N.SEX to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                          (0,33)  
  
    
  move &N.BIRTHDATE to $Birthdate
  do Format-DateTime($Birthdate, $Birth_YMD, {DEFDMY}, '', '')
  print $Birth_YMD                             (0,43)
  
  let $birthcountry = &N.BIRTHCOUNTRY
  if $birthcountry = 'ITA'
    print &N.BIRTHPLACE (0,60)
  else
    do Get-Country-Descr
    print $Country_Descr (0,60)
  end-if
  
  print &N.NATIONAL_ID   (0,90)
  
  
  
  move &N.SETID_JOBCODE to $SETID_JOBCODE
   move &N.JOBCODE to $JOBCODE
   do Get-Jobcode-Descr
   print $Jobcode_descr   (+1,3)
  
  
   move &N.REG_TEMP to $REG_TEMP
        move 'REG_TEMP'  to $FieldName
        move &N.REG_TEMP to $FieldValue
        do Read-Translate-Table
  print $XlatLongName                          (0,33)
  
  
   move &N.HIRE_DT to $Hiredate
     do Format-DateTime($Hiredate, $Hire_YMD, {DEFDMY}, '', '')
  print $Hire_YMD                             (0,43)
  
  if $REG_TEMP = 'T'
   do Get-Contract_Data
   move &CNTR.CONTRCT_EXP_END_DT to $Contractexpctdenddate
    do Format-DateTime($Contractexpctdenddate, $Contractexpctdenddate_YMD, {DEFDMY}, '', '')
    print $Contractexpctdenddate_YMD                     (0,60)
  end-if
  
  
   move &N.FULL_PART_TIME to $Time
      move 'FULL_PART_TIME'  to $FieldName
      move &N.FULL_PART_TIME to $FieldValue
      do Read-Translate-Table
    print $XlatLongName                          (0,90)
  
  
  move &N.STD_HOURS to #std_hours
  print #std_hours  (0,110) 
  
  move &N.FTE to #fte
    if $Time = 'P'
    let #act_wrkhrs = #std_hours * #fte
    print #act_wrkhrs        (0,122) 
  end-if
 
  
    move 'DISABILITY_ITA'  to $FieldName
    move &N.DISABILITY_ITA to $FieldValue
    do Read-Translate-Table
    display $XlatShortName
  print $XlatLongName                   (+1,3)
  
  
  move &N.DISABILITY_PERCTG to $Percentage
  print $Percentage                            (0,33)
  
    move &N.DISABL_STARTDT_ITA to $Disablestartdate
    do Format-DateTime($Disablestartdate, $Disablestartdate_YMD, {DEFDMY}, '', '')
  print $Disablestartdate_YMD                             (0,43)
  
     move &N.DISABL_ENDDT_ITA to $Disableenddate
       do Format-DateTime($Disableenddate, $Disableenddate_YMD, {DEFDMY}, '', '')
  print $Disableenddate_YMD                             (0,60)
    
FROM PS_R_PER060 N
WHERE RUN_CNTL_ID = $prcs_run_cntl_id
AND COMPANY = $COMPANY
!GROUP BY N.LOCATION,N.NAME,N.DISABILITY_ITA
ORDER BY N.STATE,N.NAME
end-SELECT

end-procedure


begin-procedure Statebreak 

if #current-line > 13
 graphic (+1,1,132) horz-line
 end-if
 
 
end-procedure
 
 
!************************
! Create Report Statistics
!************************

begin-procedure Create-Report-S
let #malecount = 0
let #femalecount = 0
let #FULL_count = 0
let #PART_count = 0
let #REG_count = 0
let #TEMP_count = 0

let #malecount_statetotal = 0
let #femalecount_statetotal = 0
let #FULL_count_statetotal = 0
let #PART_count_statetotal = 0
let #REG_count_statetotal = 0
let #TEMP_count_statetotal = 0
     
  let #malecount_total =0
  let #femalecount_total = 0
  let #FULL_count_total = 0
  let #PART_count_total = 0
  let #REG_count_total = 0
  let #TEMP_count_total = 0
  
  let #disabletype_rowcount = 0
  
 position (+2,1)
 LET $state_old = ' '
 
begin-SELECT
S.STATE
S.DISABILITY_ITA
S.NAME
S.SEX
S.FULL_PART_TIME
S.REG_TEMP

  move &S.SEX to $Sex
  move &S.FULL_PART_TIME to $Time
  move &S.REG_TEMP to $Reg_temp
  
     
    move &S.STATE to $State
    do Get-State-Descr
    let $stateupper_stat = upper ($State_Descr)
    print $stateupper_stat   (0,1) on-break Level=1  after=statisticsstate_tot BOLD
     
    IF $state <> $state_old
       let $state_old = $state
       position (+1,11)
    end-if
  
    move &S.DISABILITY_ITA to $Disability
    move 'DISABILITY_ITA'  to $FieldName
    move &S.DISABILITY_ITA to $FieldValue
    do Read-Translate-Table
    display $XlatShortName
     
    print $XlatLongName        (0,11) on-break Level=2  after=statisticsrow_tot 
  
  
  if $Sex = 'M' 
     let #malecount = #malecount + 1
 else
     let #femalecount = #femalecount + 1
  end-if
  
  
  if $Time = 'F'    
      let #FULL_count = #FULL_count + 1
  else
      let #PART_count = #PART_count + 1
  end-if
  
  
  if $Reg_temp = 'R'    
      let #REG_count = #REG_count + 1
  else
      let #TEMP_count = #TEMP_count + 1
  end-if
   
   let #disabletype_rowcount = #disabletype_rowcount + 1
   
from PS_R_PER060 S
WHERE RUN_CNTL_ID = $prcs_run_cntl_id
AND COMPANY = $COMPANY
ORDER BY S.STATE, S.DISABILITY_ITA 
end-SELECT

 print $TOTAL                 (+3,1) BOLD
 print #malecount_total      (,38) edit 999,999  BOLD
   print #femalecount_total  (0,49) edit 999,999 BOLD
   print #FULL_count_total   (0,61) edit 999,999 BOLD
   print #PART_count_total   (0,74)  edit 999,999 BOLD
   print #REG_count_total    (0,89)  edit 999,999 BOLD
  print #TEMP_count_total    (0,101) edit 999,999 BOLD
  
  let #grand_emptotal = #malecount_total + #femalecount_total
 print #grand_emptotal  (0,116) edit 999,999 BOLD
end-procedure


begin-procedure statisticsrow_tot

  print #malecount    (0,38) edit 999,999
   print #femalecount (0,49) edit 999,999
   print #FULL_count   (0,61) edit 999,999
   print #PART_count    (0,74)  edit 999,999
   print #REG_count   (0,89)  edit 999,999
   print #TEMP_count   (0,101) edit 999,999
   
   print #disabletype_rowcount (0,116) edit 999,999
   
  position (+1,1)     ! Leave 1 blank lines.
  
   let #malecount_statetotal = #malecount + #malecount_statetotal
   let #femalecount_statetotal = #femalecount + #femalecount_statetotal
   let #FULL_count_statetotal = #FULL_count + #FULL_count_statetotal
   let #PART_count_statetotal = #PART_count + #PART_count_statetotal
   let #REG_count_statetotal = #REG_count + #REG_count_statetotal
   let #TEMP_count_statetotal = #TEMP_count + #TEMP_count_statetotal
      
   let #malecount_total = #malecount_total + #malecount
    let #femalecount_total = #femalecount_total + #femalecount
    let #FULL_count_total = #FULL_count_total + #FULL_count
    let #PART_count_total = #PART_count_total + #PART_count
    let #REG_count_total = #REG_count_total + #REG_count
  let #TEMP_count_total = #TEMP_count_total + #TEMP_count
  
      
  let #malecount = 0
  let #femalecount = 0
  let #FULL_count = 0
  let #PART_count = 0
  let #REG_count = 0
  let #TEMP_count = 0
  
  let #disabletype_rowcount = 0
 
end-procedure ! statisticsrow_tot


begin-procedure statisticsstate_tot  
    
  print $total (+1,1) BOLD
  print #malecount_statetotal    (0,38) edit 999,999 BOLD
  print #femalecount_statetotal (0,49) edit 999,999 BOLD
  print #FULL_count_statetotal   (0,61) edit 999,999 BOLD
  print #PART_count_statetotal    (0,74)  edit 999,999 BOLD
  print #REG_count_statetotal   (0,89)  edit 999,999 BOLD
  print #TEMP_count_statetotal   (0,101) edit 999,999 BOLD
   
   let #staterow_total = 0
   let #staterow_total = #malecount_statetotal + #femalecount_statetotal
  print #staterow_total (0,116) edit 999,999 BOLD
  
     let #malecount_statetotal = 0
     let #femalecount_statetotal = 0
     let #FULL_count_statetotal = 0
     let #PART_count_statetotal = 0
     let #REG_count_statetotal = 0
     let #TEMP_count_statetotal = 0
     
  position (+3,1)     ! Leave 3 blank lines.
        
 if #current-line > 63
      new-page
      position (+3,0)
    end-if
    
end-procedure ! statisticsstate_tot


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'asksrvyr.sqc'  !Years Of Service input
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
!#include 'rellang.sqc'

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
