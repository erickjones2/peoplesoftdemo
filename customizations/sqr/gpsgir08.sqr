!***********************************************************************
!  GPSGIR08: APPENDIX 8B Forms Print (Laser Print)                     *
!            This program prints the APPENDIX 8B forms for Singapore.  *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2015/12/03:22:43:24                                 !
!       $Release:  HR92                                                !
!           $Bug:  22238105                                            !
!***********************************************************************
! Modification History                                                 *
! Dated      Author  ICE           Changes                             *
! 10/09/2007 Shilpa  1685277000    The SQR object GPSGIR08.SQR has been*
!                                  modified such that values of the    *
!                                  changed fields are printed correctly*
!***********************************************************************
!
! If Balance Group Number is not entered. Set balance Grp Number to 000
! for where clause.
#define widthofpage 175
#define NumberColumn 175
#define emptyColumn 175

#define center 87

#Include 'setenv.sqc'  !Set environment

begin-setup
#Include 'setupdb.sqc'  !is required for access to DB2/OS390.

  Declare-Printer This_Report
       Type         = HPLASERJET
       Font         = 5
       Point-Size   = 7
       
  End-Declare

  Declare-Layout This_Report
       PAPER-SIZE   = (11.5 , 10)
       Orientation  = Landscape
       Top-Margin   = .2
       Left-Margin  = .3  ! .1  !Changes made for centralizing form
       Max-Lines    = 88
       Max-Columns  = 195
       Line-Height  = 11
       Char-Width   = 4.5
  End-Declare

  Declare-Report This_Report
       Printer-Type=HPLASERJET
       LayOut=This_Report
  End-Declare

  declare-color-map
  white=(255,255,255)
  black = (0,0,0)
  gray=(128,128,128)
  end-declare

end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Stdapi-Term
end-Report

!***********************************************************************
!  Procedure: Init-Report                                              *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Init-Report

  do Stdapi-Init
  do Select-Parameters

  Let $WrkTaxYear    = edit(#TAX_YEAR,'9999')

  move 'APPENDIX 8B Form Print' to $ReportTitle
  display $ReportTitle

  let $Space = '               '

  do Get-Tax-Year-Start-End


  do Format-DateTime ($Tax_Yr_End, $Prn_Tax_Yr_End, {DEFDMY}, '', '')

  Let $YrEndSrch_Dt = '31/' || '12/' || $WrkTaxYear

  do Format-DateTime ($YrEndSrch_Dt, $YrEndSrch_Dt, {DEFDMY}, '', 'native')

  do Format-DateTime('01/01/2003', $Year2003_Start, {DEFDMY}, '', 'native')

  do Initialise-Variables
  do Get-Company-Details

  do Build-Order-By
  do Build-Where
end-procedure

!***********************************************************************
!  Procedure: Initialise-Variables                                     *
!             Initialise variables for use within the program.         *
!***********************************************************************
begin-procedure Initialise-Variables

  let #StdFont     = 5                  !Times Roman proportional
  let #StdFont1     = 32                 !Times Roman proportional
  let #StmtPntSize = 9                  !statement point-size
  let #ChkPntSize  = 9                 !check point-size
  let $Prev_Emplid  =  ' '

  let   #Grand_Tot_Gain =  0

end-procedure

!***********************************************************************
! Procedure: Get-Company-Details                                       *
!            Gets the Company Details that are printed on the form.    *
!***********************************************************************
begin-procedure Get-Company-Details

begin-SELECT
CO.GPSG_REGISTERED_NM
CO.GPSG_CPY_DESCR
CO.GPSG_ADDRESS1
CO.GPSG_ADDRESS2
CO.GPSG_ADDRESS3
CO.POSTAL
CO.GPSG_TAX_CONT_ID
CO.PHONE
CO.GPSG_ROB_ROC_TYPE
CO.GPSG_ROB_ROC_NO
CO.GPSG_CPY_TAX_REF
CO.GPSG_8B_INCORP_DT

FROM PS_GPSG_IRAS_CPY CO

WHERE CO.GPSG_CPY_TAX_REF = $Company_Tax_Ref
AND CO.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_GPSG_IRAS_CPY
                WHERE GPSG_CPY_TAX_REF = CO.GPSG_CPY_TAX_REF
                 AND EFFDT <= $Asoftoday)

end-SELECT

  let $Co_Phone = rtrim(&CO.PHONE, ' ')
  let $Co_Tax_Ref = rtrim(&CO.GPSG_CPY_TAX_REF, ' ')
  let $Co_Tax_Contact_Id = rtrim(&CO.GPSG_TAX_CONT_ID, ' ')
  let $Co_Name = rtrim(&CO.GPSG_REGISTERED_NM, ' ')
  do Format-DateTime (&CO.GPSG_8B_INCORP_DT, $Date_Incorporation, {DEFDMY}, '', '')
  if $Co_Name = ''
     let $Co_Name = rtrim(&CO.GPSG_CPY_DESCR, ' ')
  end-if
  uppercase $Co_Name

  let $Co_Address = rtrim(&CO.GPSG_ADDRESS1,' ')
  if $Co_Address = ''
    if rtrim(&CO.GPSG_ADDRESS2,' ') <> ''
       let $Co_Address = rtrim(&CO.GPSG_ADDRESS2,' ')
    end-if
  else
    if rtrim(&CO.GPSG_ADDRESS2,' ') <> ''
       let $Co_Address = $Co_Address || ', ' || rtrim(&CO.GPSG_ADDRESS2,' ')
    end-if
  end-if
  if $Co_Address = ''
    if rtrim(&CO.GPSG_ADDRESS3,' ') <> ''
      let $Co_Address = rtrim(&CO.GPSG_ADDRESS3,' ')
    end-if
  else
    if rtrim(&CO.GPSG_ADDRESS3,' ') <> ''
      let $Co_Address = $Co_Address || ',  ' || rtrim(&CO.GPSG_ADDRESS3,' ')
    end-if
  end-if
  if rtrim($Co_Address, ' ') = ''
    if rtrim(&CO.POSTAL,' ') <> ''
      let $Co_Address = rtrim(&CO.POSTAL,' ')
    end-if
  else
    if rtrim(&CO.POSTAL,' ') <> ''
      let $Co_Address = $Co_Address || ',  ' || rtrim(&CO.POSTAL,' ')
    end-if
  end-if
  uppercase $Co_Address

  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = '7'
     Let $ROB_ROC_Type = 'UEN-B'
     Let $ROB_ROC_No   = &CO.GPSG_ROB_ROC_NO
  end-if
  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = '8'
     Let $ROB_ROC_Type = 'UEN-LC'
     Let $ROB_ROC_No   = &CO.GPSG_ROB_ROC_NO
  end-if
  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = 'U'
     Let $ROB_ROC_Type = 'UEN-Other'
     Let $ROB_ROC_No   = &CO.GPSG_ROB_ROC_NO
  end-if
  If rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = 'N' or rtrim(&CO.GPSG_ROB_ROC_TYPE,' ') = 'O'
     Let $ROB_ROC_Type = 'Other'
     Let $ROB_ROC_No   = $Company_Tax_Ref
  end-if



begin-select
P.NAME
JC.DESCR

FROM PS_JOB J, PS_PERSON_NAME P, PS_JOBCODE_TBL JC
WHERE P.EMPLID = J.EMPLID
AND P.EMPLID = $Co_Tax_Contact_Id
AND J.JOBCODE = JC.JOBCODE
AND J.SETID_JOBCODE = JC.SETID
AND J.EFFDT = (SELECT MAX(J1.EFFDT)
                FROM PS_JOB J1
                WHERE J1.EMPLID = J.EMPLID
                AND J1.EFFDT <= $Tax_Yr_End)
AND JC.EFFDT = (SELECT MAX(JC1.EFFDT)
                FROM PS_JOBCODE_TBL JC1
                WHERE JC1.JOBCODE = J.JOBCODE
                AND JC1.SETID = JC.SETID
                AND JC1.EFFDT <= $Tax_Yr_End)
end-select

  let $Co_Tax_Contact = rtrim(&P.NAME, ' ')
  uppercase $Co_Tax_Contact
  let $Co_Designation = rtrim(&JC.DESCR, ' ')
  uppercase $Co_Designation

end-procedure



!***********************************************************************
! Procedure: Get-Personal-Data                                         *
!            Get the employee's personal data                          *
!***********************************************************************
begin-Procedure Get-Personal-Data

begin-select
PE.SEX
PN.NAME
T.BIRTHDATE
TI.NATIONAL_ID_TYPE
TI.NATIONAL_ID

  let $Nid = &TI.NATIONAL_ID
  let $Nid_Type = &TI.NATIONAL_ID_TYPE
  Do Format_NationalID($Nid, $Nid_Type)
  let $Empname = rtrim(&PN.NAME, ' ')
  let $Sex = rtrim(&PE.SEX, ' ')

  let $NATIONAL_ID_TYPE = rtrim(&TI.NATIONAL_ID_TYPE, ' ')
  let $NATIONAL_ID = rtrim($Nid, ' ')

!Determine Nationality

  evaluate $NATIONAL_ID_TYPE

  when = 'IC'   ! Nat. Registration ID Card
      let $NationalityCode = '301'! Singapore Citizen
      let $Nationality     = 'Singapore Citizen '

  when = 'PR'   ! Permanent Residency Number
  when = 'MI'   ! Malaysian NRIC

      let $NationalityCode = '300'! Permanent Resident
      let $Nationality     = 'Permanent Resident'

  when-other
      do get-citizenship-country
  end-evaluate

  let $Tax_Ref_Type = rtrim(&TI.NATIONAL_ID_TYPE, ' ')
  if $Tax_Ref_Type = 'IC' or $Tax_Ref_Type = 'PR'
     let $Tax_Ref_Type = 'NRIC'
  else
     if $Tax_Ref_Type = 'EP' or $Tax_Ref_Type = 'FI'
        let $Tax_Ref_Type = 'FIN'
     else
        let $Tax_Ref_Type = 'Other'
     end-if
  end-if



 FROM PS_PERSON T
    , PS_PERSON_NAME PN
    , PS_PERS_NID TI
    , PS_PERS_DATA_EFFDT PE
WHERE T.EMPLID = $EMPLID
  AND PN.EMPLID = T.EMPLID
  AND TI.EMPLID = T.EMPLID
  AND TI.TAX_REF_ID_SGP = 'Y'
  AND PE.EMPLID = T.EMPLID
  AND PE.EFFDT = (SELECT MAX(PE1.EFFDT)
                    FROM PS_PERS_DATA_EFFDT PE1
                   WHERE PE1.EMPLID = PE.EMPLID
                     AND PE1.EFFDT <= $YrEndSrch_Dt)
end-select

end-procedure


!***********************************************************************
! Procedure: Build-Order-By                                            *
!            Dynamically build the order by clause according to flags. *
!***********************************************************************
begin-Procedure Build-Order-By

  move ' ' to $OrderClause

  if ($Pay_group = 'Y')
       let $OrderClause = 'ORDER BY J.GP_PAYGROUP'
  end-if

  if ($Pay_group = 'Y' and $Department = 'Y')
       let $OrderClause = $OrderClause || ',' || ' J.DEPTID'
  end-if

  if ($Department = 'Y'and $Pay_group = 'N')
      let $OrderClause =  'ORDER BY J.DEPTID'
  end-if

  if $OrderClause = ' '
     let $OrderClause = 'ORDER BY '
  else
     let $OrderClause = $OrderClause || ','
  end-if

  evaluate $Empl_Sort
    when = 'E'
      let $OrderClause =  $OrderClause || ' I.EMPLID, I.BALANCE_GRP_NUM, '
                          || 'I.GPSG_TAX_YEAR, I.GPSG_8B_STOCK_IND, I.GPSG_8B_GRANT_DT, '
                          || 'I.SEQNUM'
      break
    when = 'T'
      let $OrderClause =  $OrderClause || ' K.NATIONAL_ID'
      break
    when = 'N'
      let $OrderClause =  $OrderClause || ' N.NAME'
      break
    when-other
      break
  end-evaluate

end-Procedure

!***********************************************************************
! Procedure: Build-Where                                               *
!            Dynamically build the WHERE clause according to flags.    *
!***********************************************************************
begin-procedure Build-Where

  let $SlctCompany = 'I.GPSG_CPY_TAX_REF = ''' || $Company_Tax_Ref
  concat '''' with $SlctCompany

  let $Empls_Exist = 'N'

  if $Reprint = 'N'
     let $SlctStatus = ' AND H.GPSG_8A_STATUS = ''W'''
  else
     let $SlctStatus = ' AND H.GPSG_8A_STATUS IN (''W'',''Y'')'
  end-if
  if isnull($Paygroup)
    do Select-Spec-Empls
  else
    let $SlctCriteria = $SlctCompany || ' AND J.GP_PAYGROUP = ''' || $Paygroup
    concat '''' with $SlctCriteria
    let $SlctCriteria = $SlctCriteria||$SlctStatus
    do Main
  end-if


end-procedure

!***********************************************************************
! Procedure: Select-Spec-Empls                                         *
!            Select Specific employees listed in the child run control.*
!***********************************************************************
begin-procedure Select-Spec-Empls

let #EmpCount = 0

begin-SELECT
EMPLID
BALANCE_GRP_NUM
  move &EMPLID to $Emplid
  move &BALANCE_GRP_NUM to $Bal_Grp

  let $Empls_Exist = 'Y'

  let $SlctEmpls = ' AND I.EMPLID = '''
  let $Emplid = rtrim($Emplid,' ')
  concat $Emplid with $SlctEmpls
  concat '''' with $SlctEmpls
  concat ' AND I.BALANCE_GRP_NUM = ' with $SlctEmpls
  concat '''' with $SlctEmpls
  concat $Bal_Grp with $SlctEmpls
  concat '''' with $SlctEmpls

  do Main

FROM PS_GPSG_RC_IRASEMP
WHERE OPRID       =  $Prcs_OprID
AND   RUN_CNTL_ID =  $Prcs_Run_Cntl_ID
end-SELECT

  if $Empls_Exist = 'N'
     let $SlctCriteria = $SlctCompany || $SlctStatus
     do Main
  end-if

end-procedure


!***********************************************************************
!  Procedure: Main                                                     *
!             The main procedure that selects the employees to print.  *
!***********************************************************************
begin-procedure Main

  if $Empls_Exist = 'Y'
     move ' ' to $SlctCriteria
     let $SlctCriteria = $SlctCompany || $SlctEmpls || $SlctStatus
  end-if

  do Process-Allsop

  If #ESop_Cnt  > 0
     or #EESop_Cnt > 0
        or #CSOP_Cnt > 0

      do Totals-Print
  else
      show ' >> No Records Processed >> '
  end-if

end-procedure


!***********************************************************************
!  Procedure: Totals-Print                                             *
!             The main procedure to print the section totals.          *
!***********************************************************************
begin-procedure Totals-Print

  !do Print-Total-Esop
  !do Print-Total-Eesop
  !do Print-Total-Csop
  !do Print-Total-Nsop

  do Update-Employee-Rec

  let $Prev_Emplid  =  &H.EMPLID
  let $DeptId = &J.DEPTID
  let $Paygroup = &J.GP_PAYGROUP
  let $Prev_Bal_Grp =  &H.BALANCE_GRP_NUM

  let   #Tot_Esop_Nex   =  0
  let   #Tot_Esop_Gain  =  0

  let   #Tot_Eesop_Ex   =  0
  let   #Tot_Eesop_Nex  =  0
  let   #Tot_Eesop_Gain =  0

  let   #Tot_Csop_Ex    =  0
  let   #Tot_Csop_Nex   =  0
  let   #Tot_Csop_Gain  =  0

  let   #Tot_Nsop_Ex    =  0
  let   #Tot_Nsop_Nex   =  0
  let   #Tot_Nsop_Gain  =  0

  let   #Esop_Cnt  =  0
  let   #Eesop_Cnt =  0
  let   #Csop_Cnt  =  0
  let   #Nsop_Cnt  =  0



end-procedure


!***********************************************************************
!  Procedure: Process-Allsop                                           *
!             The main procedure that selects the employees to print.  *
!***********************************************************************
begin-procedure Process-Allsop
  Let #Line_Esop  = 0
  Let #Line_Eesop = 0
  Let #Line_Csop  = 0
  Let #Line_Nsop  = 0
begin-SELECT
H.EMPLID
H.BALANCE_GRP_NUM
H.GPSG_8A_STATUS
H.GPSG_8B_REMARKS
I.EMPLID
I.BALANCE_GRP_NUM
I.GPSG_CPY_TAX_REF
I.GPSG_TAX_YEAR
I.SEQNUM
I.GPSG_8B_GRANT_DT
I.GPSG_8B_MKT_VAL
I.GPSG_8B_EXER_DT
I.GPSG_8B_EXER_VAL
I.GPSG_8B_EXER_PRICE
I.GPSG_8B_SHARES_ACQ
I.GPSG_8B_GROSS_GAIN
I.GPSG_8B_EXEMPT_GN
I.GPSG_8B_NONEXEMPT
I.GPSG_8B_RCB_NUM
I.GPSG_8B_STOCK_CPY
I.GPSG_8B_STOCK_IND
I.GPSG_8B_PLAN_IND
J.DEPTID
J.SETID_DEPT
J.GP_PAYGROUP
K.NATIONAL_ID_TYPE
N.NAME


  let $EmplId = &H.EMPLID
  let $Bal_Grp_Num = &H.BALANCE_GRP_NUM
  LET $cpf_tax_ref_no = &I.GPSG_CPY_TAX_REF
  let #seq_no = &I.SEQNUM
  let $Remarks = rtrim(&H.GPSG_8B_REMARKS,' ')

  let $GPSG_8B_STOCK_IND  =  &I.GPSG_8B_STOCK_IND
  let $GPSG_8B_PLAN_IND  =  &I.GPSG_8B_PLAN_IND
  let $Grant-date =  &I.GPSG_8B_GRANT_DT

  do Prepare-Data

  let #Print-Header = 0

  if $Prev_Emplid <> &H.EMPLID
     let #Print-Header = 1

     if $Prev_Emplid  =  ' '
        let $Prev_Emplid  = &H.EMPLID
        let $Prev_Bal_Grp =  &H.BALANCE_GRP_NUM
        do Update-Employee-Rec
     else
        do Totals-Print
        let $Prev_Emplid  = &H.EMPLID
        let $Prev_Bal_Grp =  &H.BALANCE_GRP_NUM
        new-page
     end-if
     do sum_gross_gain
     do Update-Share-Value
  else
     if $Prev_Bal_Grp <> $Bal_Grp_Num
        do Totals-Print
        let $Prev_Emplid  = &H.EMPLID
        let $Prev_Bal_Grp =  &H.BALANCE_GRP_NUM
        let #Print-Header = 1
        new-page
        do sum_gross_gain
        do Update-Share-Value
     else
        let #Print-Header = 0
     end-if
  end-if
  if #Print-Header
     do Print-Form
  end-if

  if  $GPSG_8B_PLAN_IND = '1'
        let $GPSG_8B_PLAN_TYPE = 'ESOP'

  else
    let $GPSG_8B_PLAN_TYPE = 'ESOW'

    end-if

  !if  $GPSG_8B_STOCK_IND = '1'
  !       !let $GPSG_8B_STOCK_TYPE = 'ESOP'
  !    do Print-Eebr
  !else
  !   if $GPSG_8B_STOCK_IND = '2'
  !         !let $GPSG_8B_STOCK_TYPE = 'ESOW'
  !        do Print-Eeebr
  !   else
  !      if $GPSG_8B_STOCK_IND = '3'
  !        do Print-Ceebr
  !      else
  !        do Print-Eris
  !      end-if
  !  end-if
  !End-If

!    do sum_gross_gain

!    do Update-Share-Value

FROM PS_GPSG_APP_8B H,
     PS_GPSG_APP_8B_DTL I,
     PS_GPSG_IR8A_FORM J,
     PS_PERS_NID K,
     PS_PERSON_NAME N

WHERE [$SlctCriteria]

AND H.GPSG_TAX_YEAR = #Tax_Year
AND H.EMPLID = J.EMPLID
AND H.BALANCE_GRP_NUM = J.BALANCE_GRP_NUM
AND H.GPSG_CPY_TAX_REF = J.GPSG_CPY_TAX_REF
AND H.GPSG_TAX_YEAR = J.GPSG_TAX_YEAR
AND K.EMPLID = H.EMPLID
AND K.TAX_REF_ID_SGP = 'Y'
AND I.GPSG_TAX_YEAR = H.GPSG_TAX_YEAR
AND I.EMPLID = H.EMPLID
AND I.BALANCE_GRP_NUM = H.BALANCE_GRP_NUM
AND I.GPSG_CPY_TAX_REF = H.GPSG_CPY_TAX_REF
AND N.EMPLID = J.EMPLID

[$OrderClause]

end-SELECT

end-procedure

!***********************************************************************
!  Procedure: Update-Share-Value
!             Update share gain values on GPSG_IR8A_FORM
!***********************************************************************
begin-procedure Update-Share-Value

   let $sql-statement = 'GPSGIR08.SQR,Update-Record,PS_GPSG_IR8A_FORM'

begin-SQL on-error=SQL-Error
UPDATE PS_GPSG_IR8A_FORM
SET GPSG_8A_SHARE_GAIN = #IR8A_shares_gain, 
    GPSG_8A_GAIN_BFR   = #IR8A_gain_bfr,
    GPSG_8A_INCOME_TOT = GPSG_8A_INCOME_TOT - (GPSG_8A_SHARE_GAIN + GPSG_8A_GAIN_BFR)
                         + #IR8A_shares_gain + #IR8A_gain_bfr

WHERE EMPLID = $EmplId
AND BALANCE_GRP_NUM = $Bal_Grp_Num
AND GPSG_CPY_TAX_REF = $cpf_tax_ref_no
AND GPSG_TAX_YEAR = #TAX_YEAR

end-SQL

end-Procedure

!***********************************************************************
!  Procedure: sum_gross_gain
!             Sum up the share gain values for GPSG_IR8A_FORM
!***********************************************************************
begin-procedure sum_gross_gain

begin-SELECT
sum(APP.GPSG_8B_GROSS_GAIN)  &APP.GPSG_8B_GROSS_GAIN

    let #IR8A_shares_gain = &APP.GPSG_8B_GROSS_GAIN

from PS_GPSG_APP_8B_DTL APP
where
APP.EMPLID = $EmplId
AND APP.BALANCE_GRP_NUM = $Bal_Grp_Num
AND APP.GPSG_CPY_TAX_REF = $cpf_tax_ref_no
AND APP.GPSG_TAX_YEAR = #TAX_YEAR
AND APP.GPSG_8B_GRANT_DT >= $Year2003_Start

end-SELECT

begin-SELECT
sum(APP2.GPSG_8B_GROSS_GAIN)  &APP2.GPSG_8B_GROSS_GAIN

    let #IR8A_gain_bfr = &APP2.GPSG_8B_GROSS_GAIN

from PS_GPSG_APP_8B_DTL APP2
where
APP2.EMPLID = $EmplId
AND APP2.BALANCE_GRP_NUM = $Bal_Grp_Num
AND APP2.GPSG_CPY_TAX_REF = $cpf_tax_ref_no
AND APP2.GPSG_TAX_YEAR = #TAX_YEAR
AND APP2.GPSG_8B_GRANT_DT < $Year2003_Start

end-SELECT

end-procedure

!***********************************************************************
!  Procedure: Print-Data
!***********************************************************************
Begin-Procedure Print-Data

Begin-SELECT DISTINCT
I1.EMPLID
I1.BALANCE_GRP_NUM
I1.GPSG_CPY_TAX_REF
I1.GPSG_TAX_YEAR
I1.SEQNUM
I1.GPSG_8B_GRANT_DT
I1.GPSG_8B_MKT_VAL
I1.GPSG_8B_EXER_DT
I1.GPSG_8B_EXER_VAL
I1.GPSG_8B_EXER_PRICE
I1.GPSG_8B_SHARES_ACQ
I1.GPSG_8B_GROSS_GAIN
I1.GPSG_8B_EXEMPT_GN
I1.GPSG_8B_NONEXEMPT
I1.GPSG_8B_RCB_NUM
I1.GPSG_8B_STOCK_CPY
I1.GPSG_8B_STOCK_IND
I1.GPSG_8B_PLAN_IND

    Let $GPSG_8B_PLAN_IND = &I1.GPSG_8B_PLAN_IND

    if  $GPSG_8B_PLAN_IND = '1'
        let $GPSG_8B_PLAN_TYPE = 'ESOP'

   else
    let $GPSG_8B_PLAN_TYPE = 'ESOW'
    end-if

   do Prepare-Data
   !let $GPSG_8B_STOCK_IND  =  &I1.GPSG_8B_STOCK_IND
  if &I1.GPSG_8B_STOCK_IND = '1' and $stock_ind = '1'
         !let $GPSG_8B_STOCK_TYPE = 'ESOP'
      do Print-Eebr
  else
     if &I1.GPSG_8B_STOCK_IND = '2' and $stock_ind = '2'
           !let $GPSG_8B_STOCK_TYPE = 'ESOW'
          do Print-Eeebr
     else
        if &I1.GPSG_8B_STOCK_IND = '3' and $stock_ind = '3'
          do Print-Ceebr
        else
          if &I1.GPSG_8B_STOCK_IND = '4' and $stock_ind = '4'
            do Print-Eris
          end-if
        end-if
     End-If
  End-If


 FROM PS_GPSG_APP_8B H1,
     PS_GPSG_APP_8B_DTL I1


WHERE H1.GPSG_TAX_YEAR = #Tax_Year
AND H1.GPSG_CPY_TAX_REF = $cpf_tax_ref_no
AND H1.EMPLID = $EmplId
AND H1.BALANCE_GRP_NUM = $Bal_Grp_Num
AND H1.GPSG_CPY_TAX_REF = $cpf_tax_ref_no
AND I1.GPSG_TAX_YEAR = H1.GPSG_TAX_YEAR
AND I1.EMPLID = H1.EMPLID
AND I1.GPSG_CPY_TAX_REF = H1.GPSG_CPY_TAX_REF
AND I1.BALANCE_GRP_NUM = H1.BALANCE_GRP_NUM

End-SELECT

End-Procedure

!***********************************************************************
!  Procedure: Prepare-Data                                             *
!             Prepares the data before printing the IR8B form.         *
!***********************************************************************
begin-procedure Prepare-Data

  let #Appendix8B = 0

  let $Shadow_Text1 = 'Details of Gains or Profits from  Employee Stock Option (ESOP) / Other Forms of  Employee Share Ownership (ESOW) Plans For The Year Ended 31 DEC ' || to_char(#Tax_Year)||''
  let $Shadow_Text3 = 'Fill in this form and give it to your employee / submit to IRAS '
  let $Shadow_Text4 = ' by 1 Mar '||to_char(#Tax_Year + 1)||''
  let $Shadow_Text5 = '. Please read the explanatory notes when completing this form.'

  do Get-Personal-Data

  let $FieldName = 'SEX'
  let $FieldValue = rtrim(&PE.SEX, ' ')

  do Read-Translate-Table

  let $Sex = rtrim($XlatLongName,' ')
  uppercase $Sex

  If $Sex <> 'MALE' and $Sex <> 'FEMALE'
     let $Sex = ''
  end-if

  let $BirthDate = rtrim(&T.BIRTHDATE, ' ')
  do Format-DateTime ($BirthDate, $BirthDate, {DEFDMY}, '', '')

  let $GPSG_8B_GRANT_DT = rtrim(&I1.GPSG_8B_GRANT_DT, ' ')
  if $GPSG_8B_GRANT_DT <> ''
    do Format-DateTime ($GPSG_8B_GRANT_DT, $GPSG_8B_GRANT_DT, {DEFDMY}, '', '')
  end-if

  let $GPSG_8B_EXER_DT = rtrim(&I1.GPSG_8B_EXER_DT, ' ')
  if $GPSG_8B_EXER_DT = ''
    let $GPSG_8B_EXER_DT = 'NA'
  else
    do Format-DateTime ($GPSG_8B_EXER_DT, $GPSG_8B_EXER_DT, {DEFDMY}, '', '')
  end-if

  let #GPSG_8B_MKT_VAL       = &I1.GPSG_8B_MKT_VAL
  let #Exercise_Mkt_Val      = &I1.GPSG_8B_EXER_VAL
  let #GPSG_8B_EXER_PRICE    = &I1.GPSG_8B_EXER_PRICE
  let #GPSG_8B_SHARES_ACQ    = &I1.GPSG_8B_SHARES_ACQ
  let #GPSG_8B_GROSS_GAIN    = &I1.GPSG_8B_GROSS_GAIN
  let #GPSG_8B_EXEMPT_GN     = &I1.GPSG_8B_EXEMPT_GN
  let #GPSG_8B_NONEXEMPT     = &I1.GPSG_8B_NONEXEMPT

  do Format-DateTime ($AsOfToday, $Doc_Date, {DEFDMY}, '', '')
  do Format-DateTime ($Date_Created, $Date_Created_Formatted, {DEFDMY}, '', '')

  let $GPSG_8B_RCB_NUM       = &I1.GPSG_8B_RCB_NUM
  let $GPSG_8B_STOCK_CPY     = &I1.GPSG_8B_STOCK_CPY

  let $Remarks  =  rtrim(&H.GPSG_8B_REMARKS, ' ')

end-procedure


!***********************************************************************
!  Procedure: Print-Form                                               *
!             Prints the IR8B form for each employee.                  *
!***********************************************************************
begin-procedure Print-Form

  let #row = 1

  alter-printer
     Font       = #StdFont
     Point-Size = 20  

! Tax year printed should be Year + 1 since the tax is always submitted in the following year.

  Let #PrtTaxYear = #Tax_Year + 1
  print #PrtTaxYear        (#row,1) edit 9999 bold

  alter-printer
     Font       = #StdFont
     Point-Size = 14

  print 'APPENDIX 8B'      (#row,82) bold

  alter-printer
     Font       = #StdFont
     Point-Size = #ChkPntSize

  add 2 to #row
  graphic                                        (#row,1,177) box 2
  print  $Shadow_Text1                           (#row,2) bold

  add 1 to #row
  alter-printer
     Font       = #StdFont
     Point-Size = 8

  print  $Shadow_Text3                           (#row,22)
  print  $Shadow_Text4                           (#row,67) bold  ! (#row,98) bold
  print  $Shadow_Text5                            (#row,79) !  (#row,109)

  add 2 to #row
  alter-printer
     Font       = #StdFont
     Point-Size = #ChkPntSize

  print 'Tax Ref.(NRIC/FIN):'                    (#row,2) bold
  print $Tax_Ref_Type                            (#row,23)
  print $NATIONAL_ID                             (#row,30)
      Let #row = #row+1
  graphic                                        (#row,23,45) horz-line 12
          Let #row = #row - 1
  print 'Full Name of Employee as per NRIC / FIN:                 '     (#row,72) bold
  print $Empname                                 (#row,112) wrap 30 2
      add 1 to #row 

  graphic                                        (#row,111,50) horz-line 12

  alter-printer
     Font       = #StdFont
     Point-Size = 7

  add 1 to #row

  graphic                                        (#row,11,9)  vert-line
  graphic                                        (#row,35,9)  vert-line
  graphic                                        (#row,43,9)  vert-line
  graphic                                        (#row,53,9)  vert-line
  graphic                                        (#row,75,9)  vert-line
  graphic                                        (#row,85,9)  vert-line
  graphic                                        (#row,96,9)  vert-line
  graphic                                        (#row,109,9) vert-line
  graphic                                        (#row,119,9) vert-line 17

  add 1 to #row
  graphic                                        (#row,1,174) box 26 17

  alter-printer
     Font       = #StdFont
     Point-Size = 8

  print 'Company'                                (#row,2)
  print 'Name of Company'                        (#row,12)
  print 'Indicate'                               (#row,36) underline
  print 'Date of'                                (#row,44)
  print 'Date of exercise of ESOP or'            (#row,54)
  print 'Exercise'                               (#row,76)
  print 'Open Market'                            (#row,86)
  print 'Open Market'                            (#row,97)
  print 'Number'                                 (#row,110)
  print 'Gains from ESOP/ESOW Plans '            (#row,130)
  graphic                                        (#row,119,56) horz-line 15
  graphic                                        (#row,151,8)  vert-line 17
  graphic                                        (#row,163,8)  vert-line 17

  add 1  to #row
  print 'Registration'                           (#row,2)
  print 'Type of'                                (#row,36) underline
  print 'grant'                                  (#row,44)
  print 'date of vesting of ESOW'                (#row,54)
  print 'Price of'                               (#row,76)
  print 'Value Per'                              (#row,86)
  print 'Value Per'                              (#row,97)

  print 'of Shares'                              (#row,110)
  print 'Gross Amount Qualifying for'            (#row,120)
  print '**** Gross'                              (#row,152)
  print 'Gross'                                  (#row,164)


  add  1  to #row
  print 'Number /'                               (#row,2)
  print 'Plan'                                   (#row,36) underline
  print 'Plan(if applicable).If'                 (#row,54)
  print 'ESOP/or'                                (#row,76)
  print 'Share as at'                            (#row,86)
  print 'Share as at the'                        (#row,97)
  print 'Acquired'                               (#row,110)

  print 'Income Tax Exemption'                   (#row,120)
  print 'Amount not'                             (#row,152)
  print 'Amount'                                 (#row,164)

  add  1  to #row
  print 'UEN'                                    (#row,2)
  print 'Granted:'                               (#row,36) underline
  print 'moratorium(i.e.selling'                 (#row,54)
  print 'Price Paid/'                            (#row,76)
  print 'the Date of'                            (#row,86)
  print 'Date Reflected'                         (#row,97)
  print 'under:-'                                (#row,120)
  print 'Qualifying'                             (#row,152)
  print 'of gains'                               (#row,164)

  graphic                                        (#row,119,31) horz-line
  graphic                                        (#row,129,5) vert-line 15
  graphic                                        (#row,141,5) vert-line 15

  add  1  to #row
  print '1)ESOP'                                 (#row,36)
  print 'restriction)is imposed, state'          (#row,54)
  print 'Payable per'                            (#row,76)
  print 'Grant of'                               (#row,86)
  print 'at Column(d) of'                        (#row,97)
  print '* ERIS'                                 (#row,120)
  print '** ERIS'                                (#row,130)
  print '***ERIS'                                (#row,142)
  print 'for Tax'                                (#row,152)
  print 'from ESOP/'                             (#row,164)

  add  1  to #row
  print 'or'                                     (#row,36)
  print 'the date the moratorium is'             (#row,54)
  print 'Share under'                            (#row,76)
  print 'ESOP/ESOW'                              (#row,86)
  print 'this form ($)'                          (#row,97)
  print '(SMEs)'                                 (#row,120)
  print '(All'                                   (#row,130)
  print '(Start-ups)'                            (#row,142)
  print 'Exemption'                              (#row,152)
  print 'ESOW'                                   (#row,164)

  add  1  to #row
  print '2)ESOW'                                 (#row,36)
  print 'lifted for the ESOP/ESOW'               (#row,54)
  print 'ESOW'                                   (#row,76)
  print 'Plan($)'                                (#row,86)
  print 'Corporations)'                          (#row,130)
  print '($)'                                    (#row,154)
  print 'Plans($)'                               (#row,164)

  add  1  to #row

  print 'Plans'                                  (#row,54)
  print 'Plan($)'                                (#row,76)
  graphic                                        (#row,1,174) horz-line

  add  1  to #row
  print '(a)'                                    (#row,5)
  print '(b)'                                    (#row,21)
  print '(c1)'                                   (#row,38)
  print '(c2)'                                   (#row,46)
  print '(d)'                                    (#row,60)
  print '(e)'                                    (#row,77)
  print '(f)'                                    (#row,88)
  print '(g)'                                    (#row,99)
  print '(h)'                                    (#row,112)
  print '(i)'                                    (#row,122)
  print '(j)'                                    (#row,134)
  print '(k)'                                    (#row,146)
  print '(l)'                                    (#row,155)
  print '(m)'                                    (#row,167)

  graphic                                        (#row,119,1) vert-line 15
  graphic                                        (#row,151,1) vert-line 15
  graphic                                        (#row,163,1) vert-line 15

  add  1  to #row
  graphic                                        (#row,1,118) box 1 22 100
  graphic                                        (#row,1,174) box 1

  let #row = #row - 1
  graphic                                        (#row,1,174) horz-line 15

  add  1  to #row

      alter-color-map name = 'white' value = (255, 255, 255)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('white') 

  print ' SECTION A:EMPLOYEE EQUITY-BASED REMUNERATION (EEBR) SCHEME' (#row,2) bold

     alter-color-map name = 'black' value = (0, 0, 0)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('black') 

  print '(l)=(g-e) x h'                          (#row,152,13)
  print '(m)=(l)'                                (#row,166,7)

  graphic                                        (#row,119,32) box 17 15 37
  graphic                                        (#row,151,12) box 16 15 0
  graphic                                        (#row,151,24) horz-line 15
  graphic                                        (#row,1,118) horz-line 15

  add  1  to #row
  graphic                                        (#row,85,11)  box 15 15 37
  let #row = #row - 1

  graphic                                        (#row,11,15) vert-line
  graphic                                        (#row,35,15) vert-line
  graphic                                        (#row,43,15) vert-line
  graphic                                        (#row,53,15) vert-line
  graphic                                        (#row,75,15) vert-line
  graphic                                        (#row,85,15) vert-line
  graphic                                        (#row,96,15) vert-line
  graphic                                        (#row,109,15) vert-line
  graphic                                        (#row,119,16) vert-line 15
  graphic                                        (#row,163,17) vert-line 15

  let #Esop_Row  =  #row
  let #lineno   =  1

  while #lineno < 17
       graphic                                     (#row,1,84) horz-line
       graphic                                     (#row,96,23) horz-line
       graphic                                     (#row,151,24) horz-line

       let #lineno = #lineno + 1
       add 1  to #row
  end-while

  graphic                                                     (#row,1,174) box 1 15

  print ' (I)'                                                (#row,2,4) bold
  print '        TOTAL OF GROSS ESOP/ESOW GAINS IN SECTION A' (#row,15) bold

  let  #Total_A_Row  =  #row

    Let $stock_ind = '1'
    do Print-Data
    Do Print-Total-Esop


!**********************
! Start of Section B  *
!**********************
 add  1 to #row

 graphic                                        (#row,119,1) vert-line 15
 graphic                                        (#row,129,1) vert-line 15
 graphic                                        (#row,141,1) vert-line 15
 graphic                                        (#row,151,1) vert-line 15
 graphic                                        (#row,163,1) vert-line 15

 add  1 to #row

 graphic                                        (#row,1,174) box 1          !1st box
 graphic                                        (#row,1,118) box 1 15 100    !shading
 graphic                                        (#row,1,174) box 17 15       !section B box

 graphic                                        (#row,119,13) horz-line 15
 graphic                                        (#row,151,24) horz-line 15

     alter-color-map name = 'white' value = (255, 255, 255)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('white') 

 print 'SECTION B: EQUITY REMUNERATION INCENTIVE SCHEME (ERIS) SMEs' (#row,2) bold

       alter-color-map name = 'black' value = (0, 0, 0)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('black') 

 print '(i)=(g-f)x h'                           (#row,120,12)
 print '(l)=(f-e)x h'                           (#row,152,12)
 print '(m)=(i)+(l)'                            (#row,164,11)

 graphic                                        (#row,11,15)  vert-line
 graphic                                        (#row,35,15)  vert-line
 graphic                                        (#row,43,15)  vert-line
 graphic                                        (#row,53,15)  vert-line
 graphic                                        (#row,75,15)  vert-line
 graphic                                        (#row,85,15)  vert-line
 graphic                                        (#row,96,15)  vert-line
 graphic                                        (#row,109,15) vert-line
 graphic                                        (#row,119,16) vert-line 15
 graphic                                        (#row,129,15) vert-line 15
 graphic                                        (#row,141,16) vert-line 15
 graphic                                        (#row,151,16) vert-line 15
 graphic                                        (#row,163,16) vert-line 15

 graphic                                        (#row,129,22) box 17 15 37    !dark shade 1st row
 graphic                                        (#row,119,10) box 16 15 0
 graphic                                        (#row,151,12) box 16 15 0
 graphic                                        (#row,119,32) horz-line 15

 add  1  to #row
 let #row = #row - 1
 let #Eesop_Row =  #row

 let #lineno   =  1
 while #lineno < 17
      graphic                                      (#row,1,128) horz-line
      graphic                                      (#row,151,24) horz-line
      let #lineno = #lineno + 1
      add 1  to #row
 end-while

 let #row = #row - 1
 graphic                                        (#row,1,174) horz-line 15
 let #row = #row + 1
 graphic                                        (#row,1,174) horz-line 13

 print ' (II)'                                              (#row,2) bold
 print '       TOTAL OF GROSS ESOP/ESOW GAINS IN SECTION B' (#row,7) bold

 let  #Total_B_Row  =  #row
  Let $stock_ind = '2'
  do Print-Data
  do Print-Total-Eesop
  new-page
!**********************
! Start of Section C  *
!**********************

  Let #row = 1

     graphic                                        (#row,1,174) horz-line 15
     graphic                                        (#row,119,1) vert-line 15
     graphic                                        (#row,129,1) vert-line 15
     graphic                                        (#row,141,1) vert-line 15
     graphic                                        (#row,151,1) vert-line 15
     graphic                                        (#row,163,1) vert-line 15

  add  1  to #row


  graphic                                        (#row,1,118) box 1 15 100
  graphic                                        (#row,1,174) box 17 15

        alter-color-map name = 'white' value = (255, 255, 255)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('white') 

  print ' SECTION C: EQUITY REMUNERATION INCENTIVE SCHEME (ERIS) ALL CORPORATIONS' (#row,2) bold
   
        alter-color-map name = 'black' value = (0, 0, 0)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('black') 


  print '(j)=(g-f)x h'                           (#row,131,12)
  print '(l)=(f-e)x h'                           (#row,152,12)
  print '(m)=(j)+(l)'                            (#row,164,12)

  graphic                                        (#row,11,15)  vert-line
  graphic                                        (#row,35,15)  vert-line
  graphic                                        (#row,43,15)  vert-line
  graphic                                        (#row,53,15)  vert-line
  graphic                                        (#row,75,15)  vert-line
  graphic                                        (#row,85,15)  vert-line
  graphic                                        (#row,96,15)  vert-line
  graphic                                        (#row,109,15) vert-line
  graphic                                        (#row,119,16) vert-line 15
  graphic                                        (#row,129,15) vert-line 15
  graphic                                        (#row,141,15) vert-line 15
  graphic                                        (#row,151,16) vert-line 15
  graphic                                        (#row,163,16) vert-line 15
  graphic                                        (#row,119,10) box 17 15 37
  graphic                                        (#row,141,10) box 17 15 37
  graphic                                        (#row,129,12) box 17 15 0
  graphic                                        (#row,151,12) box 17 13 0
  graphic                                        (#row,119,56) horz-line 15
  add  1  to #row
  let #row = #row - 1


  let #Csop_Row  =  #row

  let #lineno   =  1
    while #lineno < 17
       graphic                                   (#row,1,118)  horz-line
       graphic                                   (#row,129,12) horz-line
       graphic                                   (#row,151,24) horz-line

       let #lineno = #lineno + 1
       add 1  to #row
    end-while

    let #row = #row - 1
    graphic                                      (#row,1,174) horz-line 15
    let #row = #row + 1
    graphic                                      (#row,1,174) horz-line 15


  print ' (III)'                                            (#row,2,6) bold
  print '      TOTAL OF GROSS ESOP/ESOW GAINS IN SECTION C' (#row,7) bold

  let  #Total_C_Row  =  #row
  Let $stock_ind = '3'
  do Print-Data
  do Print-Total-Csop
!**********************
! Start of Section D  *
!**********************

  add  1  to #row

     graphic                                        (#row,1,174) horz-line 15
     graphic                                        (#row,119,1) vert-line 15
     graphic                                        (#row,129,1) vert-line 15
     graphic                                        (#row,141,1) vert-line 15
     graphic                                        (#row,151,1) vert-line 15
     graphic                                        (#row,163,1) vert-line 15

   add  1  to #row

  graphic                                           (#row,1,118) box 1 15 100
  graphic                                           (#row,1,174) box 17 17
  !graphic                                           (#row,129,40) horz-line 17

     alter-color-map name = 'white' value = (255, 255, 255)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('white') 

  print ' SECTION D: EQUITY REMUNERATION INCENTIVE SCHEME (ERIS) START-UPs' (#row,2) bold

     alter-color-map name = 'black' value = (0, 0, 0)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('black') 

  print '(k)=(g-f)x h'                           (#row,142,12)
  print '(l)=(f-e)x h'                           (#row,152,12)
  print '(m)=(k)+(l)'                            (#row,164,12)

  graphic                                        (#row,11,15)  vert-line
  graphic                                        (#row,35,15)  vert-line
  graphic                                        (#row,43,15)  vert-line
  graphic                                        (#row,53,15)  vert-line
  graphic                                        (#row,75,15)  vert-line
  graphic                                        (#row,85,15)  vert-line
  graphic                                        (#row,96,15)  vert-line
  graphic                                        (#row,109,15) vert-line
  graphic                                        (#row,119,16) vert-line 15
  graphic                                        (#row,129,15) vert-line 15
  graphic                                        (#row,141,15) vert-line 15
  graphic                                        (#row,151,16) vert-line 15
  graphic                                        (#row,163,16) vert-line 15
  graphic                                        (#row,119,22) box 17 15 37
  graphic                                        (#row,129,12) box 17 15 0
  graphic                                        (#row,151,12) box 17 13 0
  graphic                                        (#row,119,56) horz-line 15

  add  1  to #row
  let #row = #row - 1


  let #Nsop_Row  =  #row

  let #lineno   =  1
    while #lineno < 17
       graphic                                   (#row,1,118)  horz-line
       graphic                                   (#row,141,34) horz-line
       let #lineno = #lineno + 1
       add 1  to #row
    end-while

    let #row = #row - 1
    graphic                                      (#row,1,174) horz-line 15
    let #row = #row + 1
    graphic                                      (#row,1,174) horz-line 15


  print ' (IV)'                                 (#row,2,6) bold
  print '      TOTAL OF GROSS ESOP/ESOW GAINS IN SECTION D' (#row,7) bold

  let  #Total_D_Row  =  #row
  Let $stock_ind = '4'
  do Print-Data
  do Print-Total-Nsop
!*********************
  add  2  to #row

  graphic                                        (#row,1,162) box 1 15 100
  graphic                                        (#row,1,174) box 1 17  !box for Section D

     alter-color-map name = 'white' value = (255, 255, 255)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('white') 

  print ' SECTION E : TOTAL GROSS AMOUNT OF ESOP/ESOW GAINS (I+II+III+IV)' (#row,2) bold
  print '(THIS AMOUNT IS TO BE REFLECTED IN ITEM d8 OF FORM IR8A)' (#row,69) bold

     alter-color-map name = 'black' value = (0, 0, 0)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('black') 


  do Print-Comments

  add 2 to #row
  alter-printer
     Font       = #StdFont
     Point-Size = 8

  subtract 1 from #row

  print 'DECLARATION'                            (#row,1) bold
    add 1 to #row
  Let $Txt =  'We certify that on the date of grant of ESOP/ESOW plan, all the conditions ' ||
              ' (with reference to each respective scheme) stated in Explanatory Notes 4 & 5 were met.'

  print $Txt                                     (#row,1) bold

  add 1 to #row

  print 'Company Registration No.:'    (#row,2) bold
  print $ROB_ROC_Type                            (#row,32)
  print $ROB_ROC_No                              (#row,42)
  graphic                                        (#row,31,22) horz-line 12

  print 'Name of Employer:'                      (#row,54) bold
  print $Co_Name                                 (#row,70)
  graphic                                        (#row,69,60) horz-line 12

  print 'Date of incorporation [For ERIS (Start-ups only)]: ' (#row,131) bold
  print $Date_Incorporation                                  (#row,171)
  graphic                                                    (#row,170,11) horz-line 12

  add 1 to #row

  print 'Name of authorised person making the declaration:'  (#row, 2) bold
  print $Co_Tax_Contact                                      (#row, 42)
  graphic                                                    (#row,42,30) horz-line 12

  print 'Signature:'                             (#row, 75) bold
  graphic                                        (#row,84,21) horz-line 12

  print 'Designation:'                           (#row, 106) bold
  print $Co_Designation                          (#row, 117)
  graphic                                        (#row,117,24) horz-line 12

  print 'Tel:'                                   (#row, 142) bold
  print $Co_Phone                                (#row, 147)
  graphic                                        (#row,146,17) horz-line 12

  print 'Date:'                                  (#row, 165) bold
  print $Date_Created_Formatted                  (#row, 171)
  graphic                                        (#row,170,11) horz-line 12

  add 2 to #row

      alter-color-map name = 'gray' value = (128, 128, 128)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('gray') 


  print 'There are penalties for failing to give a return or furnishing an incorrect or late return.' (#row,55) bold point-size = 8

     alter-color-map name = 'black' value = (0, 0, 0)
     get-color print-text-foreground = ($print-foreground)
     set-color print-text-foreground = ('black') 

  alter-printer
     Font       = #StdFont
     Point-Size =  7 
  let $txt2 = 'App8B(1/' || to_char(#Tax_Year + 1) || ')'
  print $txt2                                     (#row, 2)


end-procedure


!***********************************************************************
!  Procedure: Update-Employee-Rec                                      *
!             Update the Issue Status field for the employee.          *
!***********************************************************************
begin-procedure Update-Employee-Rec

   let $sql-statement = 'GPSGIR08.SQR,Update-Record,PS_GPSG_APP_8B'

begin-SQL on-error=SQL-Error
UPDATE PS_GPSG_APP_8B
SET GPSG_8A_STATUS = 'Y'
WHERE EMPLID = $EmplId
AND BALANCE_GRP_NUM = $Bal_Grp_Num
AND GPSG_CPY_TAX_REF = $Company_Tax_Ref
AND GPSG_TAX_YEAR = #Tax_Year

end-SQL
end-Procedure


!***********************************************************************
!  Procedure: Print-Eebr                                               *
!             Print the detail records                                 *
!                                                                      *
!***********************************************************************
begin-procedure Print-Eebr

  If  #ESop_Cnt  < 15
      let #Esop_Row = #Esop_Row + 1
      print $GPSG_8B_RCB_NUM              (#Esop_Row,2,10)   edit 'XXXXXXXXXX'
      print $GPSG_8B_STOCK_CPY            (#Esop_Row,12,25)
      print $GPSG_8B_PLAN_TYPE            (#Esop_Row,37,5)
      print $GPSG_8B_GRANT_DT             (#Esop_Row,44,10)
      print $GPSG_8B_EXER_DT              (#Esop_Row,54,10)
      print #GPSG_8B_EXER_PRICE           (#Esop_Row,73,14) edit '9999999.99999'
      print #Exercise_Mkt_Val             (#Esop_Row,95,14) edit '9999999.99999'

      print #GPSG_8B_SHARES_ACQ           (#Esop_Row,107,14) edit '9999999.99999'
      print #GPSG_8B_NONEXEMPT            (#Esop_Row,152,11) edit '9999999.99'
      print #GPSG_8B_GROSS_GAIN           (#Esop_Row,166,11) edit '9999999.99'

      let   #Tot_Esop_Nex  =  #Tot_Esop_Nex  + #GPSG_8B_NONEXEMPT
      let   #Tot_Esop_Gain =  #Tot_Esop_Gain + #GPSG_8B_GROSS_GAIN

      let #ESop_Cnt  =  #ESop_Cnt + 1

  end-if

end-Procedure

!***********************************************************************
!  Procedure: Print-Eeebr                                                *
!             Print the detail records                                 *
!                                                                      *
!***********************************************************************
begin-procedure Print-Eeebr


  If  #EeSop_Cnt  < 15

      let #Eesop_Row = #Eesop_Row + 1
      print $GPSG_8B_RCB_NUM              (#Eesop_Row,2,10)
      print $GPSG_8B_STOCK_CPY            (#Eesop_Row,12,25)
      print $GPSG_8B_PLAN_TYPE            (#Eesop_Row,37,5)
      print $GPSG_8B_GRANT_DT             (#Eesop_Row,44,10)
      print $GPSG_8B_EXER_DT              (#Eesop_Row,54,10)
      print #GPSG_8B_EXER_PRICE           (#Eesop_Row,73,14) edit '9999999.99999'
      print #GPSG_8B_MKT_VAL              (#Eesop_Row,84,14) edit '9999999.99999'
      print #Exercise_Mkt_Val             (#Eesop_Row,95,14) edit '9999999.99999'
      print #GPSG_8B_SHARES_ACQ           (#Eesop_Row,107,14) edit '9999999.99999'
      print #GPSG_8B_EXEMPT_GN            (#Eesop_Row,119,11) edit '9999999.99'
      print #GPSG_8B_NONEXEMPT            (#Eesop_Row,152,11) edit '9999999.99'
      print #GPSG_8B_GROSS_GAIN           (#Eesop_Row,166,11) edit '9999999.99'

      let   #Tot_Eesop_Ex   =  #Tot_Eesop_Ex   + #GPSG_8B_EXEMPT_GN
      let   #Tot_Eesop_Nex  =  #Tot_Eesop_Nex  + #GPSG_8B_NONEXEMPT
      let   #Tot_Eesop_Gain =  #Tot_Eesop_Gain + #GPSG_8B_GROSS_GAIN

      let #EEsop_Cnt  =  #EEsop_Cnt + 1
  end-if
end-Procedure

!***********************************************************************
!  Procedure: Print-Ceebr                                               *
!             Print the detail records                                 *
!                                                                      *
!***********************************************************************
begin-procedure Print-Ceebr


  If  #CSop_Cnt  < 15
      let #Csop_Row = #Csop_Row + 1

      print $GPSG_8B_RCB_NUM              (#Csop_Row,2,10)
      print $GPSG_8B_STOCK_CPY            (#Csop_Row,12,25)
      print $GPSG_8B_PLAN_TYPE            (#Csop_Row,37,5)
      print $GPSG_8B_GRANT_DT             (#Csop_Row,44,10)
      print $GPSG_8B_EXER_DT              (#Csop_Row,54,10)

      print #GPSG_8B_EXER_PRICE           (#Csop_Row,73,14) edit '9999999.99999'
      print #GPSG_8B_MKT_VAL              (#Csop_Row,84,14) edit '9999999.99999'
      print #Exercise_Mkt_Val             (#Csop_Row,95,14) edit '9999999.99999'

      print #GPSG_8B_SHARES_ACQ           (#Csop_Row,107,14) edit '9999999.99999'
      print #GPSG_8B_EXEMPT_GN            (#Csop_Row,132,11) edit '9999999.99'
      print #GPSG_8B_NONEXEMPT            (#Csop_Row,152,11) edit '9999999.99'
      print #GPSG_8B_GROSS_GAIN           (#Csop_Row,166,11) edit '9999999.99'

      let   #Tot_Csop_Ex   =  #Tot_Csop_Ex   + #GPSG_8B_EXEMPT_GN
      let   #Tot_Csop_Nex  =  #Tot_Csop_Nex  + #GPSG_8B_NONEXEMPT
      let   #Tot_Csop_Gain =  #Tot_Csop_Gain + #GPSG_8B_GROSS_GAIN

      let #Csop_Cnt  =  #Csop_Cnt + 1

  end-if
end-Procedure

!***********************************************************************
!  Procedure: Print-Eris                                               *
!             Print the detail records                                 *
!                                                                      *
!***********************************************************************
begin-procedure Print-Eris


  If  #NSop_Cnt  < 15
      let #Nsop_Row = #Nsop_Row + 1

      print $GPSG_8B_RCB_NUM              (#Nsop_Row,2,10)
      print $GPSG_8B_STOCK_CPY            (#Nsop_Row,12,25)
      print $GPSG_8B_PLAN_TYPE            (#Nsop_Row,37,5)
      print $GPSG_8B_GRANT_DT             (#Nsop_Row,44,10)
      print $GPSG_8B_EXER_DT              (#Nsop_Row,54,10)

      print #GPSG_8B_EXER_PRICE           (#Nsop_Row,73,14) edit '9999999.99999'
      print #GPSG_8B_MKT_VAL              (#Nsop_Row,84,14) edit '9999999.99999'
      print #Exercise_Mkt_Val             (#Nsop_Row,95,14) edit '9999999.99999'

      print #GPSG_8B_SHARES_ACQ           (#Nsop_Row,107,14) edit '9999999.99999'
      print #GPSG_8B_EXEMPT_GN            (#Nsop_Row,142,11) edit '9999999.99'
      print #GPSG_8B_NONEXEMPT            (#Nsop_Row,152,11) edit '9999999.99'
      print #GPSG_8B_GROSS_GAIN           (#Nsop_Row,166,11) edit '9999999.99'

      let   #Tot_Nsop_Ex   =  #Tot_Nsop_Ex   + #GPSG_8B_EXEMPT_GN
      let   #Tot_Nsop_Nex  =  #Tot_Nsop_Nex  + #GPSG_8B_NONEXEMPT
      let   #Tot_Nsop_Gain =  #Tot_Nsop_Gain + #GPSG_8B_GROSS_GAIN

      let #Nsop_Cnt  =  #Nsop_Cnt + 1

  end-if
end-Procedure


!***********************************************************************
!  Procedure: Print-Total-Esop                                         *
!             Print the Total of Esop                                  *
!                                                                      *
!***********************************************************************
begin-procedure Print-Total-Esop

  print #Tot_Esop_Nex            (#Total_A_Row,152,11)  edit '9999999.99'
  print #Tot_Esop_Gain           (#Total_A_Row,166,11)  edit '9999999.99'

end-Procedure

!***********************************************************************
!  Procedure: Print-Total-Eesop                                        *
!             Print the Total of Eesop                                 *
!                                                                      *
!***********************************************************************
begin-procedure Print-Total-Eesop

  print #Tot_Eesop_Ex            (#Total_B_Row,119,11) edit '9999999.99'
  print #Tot_Eesop_Nex           (#Total_B_Row,152,11) edit '9999999.99'
  print #Tot_Eesop_Gain          (#Total_B_Row,166,11) edit '9999999.99'

end-Procedure

!***********************************************************************
!  Procedure: Print-Total-Csop                                         *
!             Print the Total of Esop                                  *
!                                                                      *
!***********************************************************************
begin-procedure Print-Total-Csop


  print #Tot_Csop_Ex             (#Total_C_Row,132,11) edit '9999999.99'
  print #Tot_Csop_Nex            (#Total_C_Row,152,11) edit '9999999.99'
  print #Tot_Csop_Gain           (#Total_C_Row,166,11) edit '9999999.99'

  !let #Grand_Tot_Gain  =  #Tot_Esop_Gain + #Tot_Eesop_Gain + #Tot_Csop_Gain
  !let #Total_C_Row = #Total_C_Row + 2
  !
  !print #Grand_tot_Gain         (#Total_C_Row,166,11) edit '9999999.99'

end-Procedure

!***********************************************************************
!  Procedure: Print-Total-Nsop                                         *
!             Print the Total of Nsop                                  *
!                                                                      *
!***********************************************************************
begin-procedure Print-Total-Nsop


  print #Tot_Nsop_Ex             (#Total_D_Row,142,11) edit '9999999.99'
  print #Tot_Nsop_Nex            (#Total_D_Row,152,11) edit '9999999.99'
  print #Tot_Nsop_Gain           (#Total_D_Row,166,11) edit '9999999.99'

  let #Grand_Tot_Gain  =  #Tot_Esop_Gain + #Tot_Eesop_Gain + #Tot_Csop_Gain + #Tot_Nsop_Gain
  let #Total_D_Row = #Total_D_Row + 2

  print #Grand_tot_Gain         (#Total_D_Row,166,11) edit '9999999.99'

end-Procedure

!***********************************************************************
!  Procedure: Print-Comments                                           *
!             Print Explanatory Notes for completion of Appendix 8B    *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-Comments

  alter-printer
     Font       = #StdFont
     Point-Size = 6

  Let #Row = #Row + 1

 ! graphic                                        (#row,138,4) vert-line  
 ! graphic                                        (#row,136,2) horz-line 12  

  Let #Row = #Row + 1

  let $Txt = '*ERIS (SMEs) - This is only applicable to gains derived from the exercise of ESOP granted' ||
             ' on or after 1 June 2000 and on or before 31 Dec 2013 / restricted ESOW granted on or after' ||
             ' 1 Jan 2002 and on or before 31 Dec 2013 by a qualifing company under the ERIS (SMEs)'
  print $Txt            (#row,1)

    alter-printer
     pitch       = 2
      Point-Size =  5
   print '#'  (#row,148)   

alter-printer point-size = 6
  add 1 to #row

  let $Txt ='**ERIS (All CORPORATIONs) - This is only applicable to gains derived from the exercise of ESOP granted' ||
            ' on or after 1 April 2001 and on or before 31 Dec 2013 / restricted ESOW granted on or after' ||
            ' 1 Jan 2002 and on or before 31 Dec 2013 by a qualifing company under the ERIS (ALL CORPORATIONS)'
  print $Txt            (#row,1)
 
    alter-printer
     pitch       = 2
     Point-Size =  5
   print ' #'  (#row,167)   

!    alter-printer
!     Font       = #StdFont1
!     Point-Size = 6
!
!  print ' Please read paragraph 7 of the Explanatory Notes of Appendix 8B ' (#row, 138)
!
    alter-printer
     Font       = #StdFont
     Point-Size = 6

  add 1 to #row
  let $Txt = '***ERIS (START-UPs) - This is only applicable to gains derived from the exercise of ESOP/'||
             'restricted ESOW granted on or after 16 Feb 2008 and on or before 15 Feb 2013 and within 3 years'' of the '||
             'qualifying company''s incorporation.'
  print $Txt             (#row, 1)

   alter-printer
     pitch       = 2
     Point-Size =  5
   print '#'  (#row,127) 

    add 1 to #row

 !   print ' to Appendix 8B.' (#row, 138)

      alter-printer
     Font       = #StdFont
     Point-Size = 6

  let $Txt ='**** Including any amount of discount' ||
            ' enjoyed by an employee on ESOP/ESOW Plan'
  print $Txt            (#row,1)

   alter-printer
     pitch       = 2
     Point-Size =  5

   print '#'  (#row,48)   

 print '#' (#row, 128)
    alter-printer
     !Font       = #StdFont1
     Point-Size = 6

  print 'See paragraph 4 of the Explanatory Notes of Appendix 8B ' (#row, 129)

!  graphic                                        (#row,136,2) horz-line 12 

End-Procedure


!***********************************************************************
! Procedure: get-citizenship-country                                   !
!            select citizenship country for emplid and translate
!            to nationality code
!***********************************************************************
begin-procedure get-citizenship-country

  let $Cntry = ''

  begin-SELECT
CZN.CITIZENSHIP_STATUS
     if &CZN.CITIZENSHIP_STATUS = '1' or &CZN.CITIZENSHIP_STATUS = '2' or &CZN.CITIZENSHIP_STATUS = '5'
        let $Cntry = 'SGP'
     else
        if &CZN.CITIZENSHIP_STATUS = '7'
           let $Cntry = 'P'
        end-if
     end-if

   FROM PS_CITIZENSHIP CZN
  WHERE CZN.EMPLID = $Emplid
    AND CZN.DEPENDENT_ID = ' '
    AND CZN.COUNTRY = 'SGP'
  end-SELECT

  if $Cntry = ''
     begin-SELECT
CZP.COUNTRY_PASSPORT
CZP.DT_ISSUED
        let $Cntry = &CZP.COUNTRY_PASSPORT

  FROM PS_CITIZEN_PSSPRT CZP
 WHERE CZP.EMPLID = $Emplid
   AND CZP.DEPENDENT_ID = ' '
 ORDER BY CZP.DT_ISSUED
     end-SELECT
  end-if

  if $Cntry = ''
     begin-SELECT
CZN1.COUNTRY
        let $Cntry = &CZN1.COUNTRY

      FROM PS_CITIZENSHIP CZN1
     WHERE CZN1.EMPLID       = $Emplid
       AND CZN1.DEPENDENT_ID = ' '
       AND CZN1.COUNTRY     <> 'SGP'
     end-SELECT
  end-if


  evaluate $Cntry
  when = 'P'   ! Permanent Resident
    let $NationalityCode    = '300'
    let $Nationality        = 'Permanent Resident'
  when = 'SGP' ! Singapore
    let $NationalityCode    = '301'
    let $Nationality        = 'Singapore Citizen'
  when = 'IDN' ! Indonesia
    let $NationalityCode    = '303'
    let $Nationality        = 'Indonesian       '
  when = 'MYS' ! Malaysia
    let $NationalityCode    = '304'
    let $Nationality        = 'Malaysian        '

  when = 'PHL' ! Phillipines
    let $NationalityCode    = '305'
    let $Nationality        = 'Filipino         '
  when = 'THA' ! Thailand
    let $NationalityCode    = '306'
    let $Nationality        = 'Thai             '

  when = 'JPN' ! Japan
    let $NationalityCode    = '331'
    let $Nationality        = 'Japanese         '
  when = 'TWN' ! Taiwan
    let $NationalityCode    = '334'
    let $Nationality        = 'Taiwanese        '
  when = 'CHN' ! China
  when = 'HKG' ! Hong Kong
    let $NationalityCode    = '336'
    let $Nationality        = 'Chinese (China)  '
  when = 'GBR' ! UK
    let $NationalityCode    = '110'
    let $Nationality        = 'British          '
  when = 'USA' ! USA
    let $NationalityCode    = '503'
    let $Nationality        = 'American         '
  when = 'AUS' ! Australia
    let $NationalityCode    = '701'
    let $Nationality        = 'Australian       '
  when = 'NZL' ! New Zealand
    let $NationalityCode    = '705'
    let $Nationality        = 'New Zealander    '
  when-other
    let $NationalityCode    = '999'
    let $Nationality        = 'Others           '
end-evaluate


end-procedure



#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'readxlat.sqc'  !Read-Translate-Table procedure

#Include 'gpsgirrc.sqc'  !Select-Parameters procedure
#Include 'gpsgirty.sqc'  !Get-Tax-Year-Start-End procedure


