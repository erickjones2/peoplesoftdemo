!***********************************************************************
! GPMXBA01:  Banking                                                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2019, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  30312100                                            !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'       !Set environment
#include 'setup02.sqc'      !Printer and page-size initialization

#define c1 1

#define c2 15
#define c3 65
#define c4 95
#define c5 120
#define c6 150
#define c7 150
#define c8 85
#define c98 155
#define c99 164

BEGIN-REPORT
  MOVE '1' to $ReportDateType
  MOVE '1' to $ReportYear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Init-Report
  do Select-Parameters
  do validateOffCycle
  
  If $BankProcess = 'Y' 
     do Open-File
     show 'Write-Header'
     do Write-Header
     do Read-Detail
     do Write-Total
     Let #ProcessNum  = 1
     do CLOSE-FILE
     do GlobalResume
  End-If
  do Stdapi-Term
  do Reset
END-REPORT


Begin-Procedure Init-Report
  MOVE 'GPMXBA01' to $ReportID
  MOVE 'Pago Electrónico a Bancos' to $ReportTitle
  display $ReportID
  display $ReportTitle
  display 'ver. PUM33.01'
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
End-Procedure


begin-heading 9
  !#include 'stdhdg01.sqc'
 
  print 'PeopleSoft'             (1,) center
  print 'PAGO ELECTRÓNICO A BANCOS'  (2,) center    
  print 'Reporte:'       (3,1)
  print $ReportID                (,19)
  print 'Página:'            (3,{c98})
  page-number            (,{c99})
  print 'Hora:'          (4,{c98})
  print $ReportTime      (,{c99})
  
  print 'Entidad de Pago:'       (,1)
  do READ-PAY-ENTITY
  
  If $OffCycle = 'N'
       do PAYMENT-DATE
    else
       do PAYMENT-DATE-off
  end-if
  
  print $payEntity                 (,19)
  print $payEntityDescr        (,+5)
  print 'Del'                    (,{c3})
  print $PAYMENT_BEGIN           (,+5)
  print 'Al'                     (,+5)
  print $PAYMENT_END             (,+5)
  
  print 'Fecha:'         (5,{c98})
  print $ReportDate      (,{c99})
  
  print $GPMX_FORMAT_BANK_DESC   (+1,{c8})

  print '-'                      (+2,1,176) fill
  print 'Cód. Empl'              (+1,{c1})
  print 'Nombre del Empleado'    (0,{c2})
  print 'Tipo de Depósito'       (0,{c3})
  print 'Sucursal'               (0,{c4})
  print 'Cta. Depósito'          (0,{c5})
  print 'Importe a pagar'        (0,{c6})
  print '-'                      (+1,1,176) fill
end-heading


Begin-Procedure heading_PG
  print '-'                      (+1,1,176) fill
  print 'Grupo de Pago:   '      (+1,{c1})
  print &DDD.GP_PAYGROUP         (0,+2)
  print 'Cta. de Fondos:  '      (+1,{c1})
  print &DDD.GPMX_ACCOUNT_EC_ID  (0,+2)
  print '-'                      (+1,1,176) fill
  print ''                       (+1)
End-Procedure heading_PG


Begin-Procedure footing_PG
  print 'Total de Movimientos por Grupo de Pago:       '      (+2,1)
  print #TOTAL_EMPLID_GP                                      () edit 9,999,999,999.99
  print 'Total de Importe a Pagar por Grupo de Pago:  '       (+2,1)
  print #TOTAL_DEPOSIT_GP                                     () edit 9,999,999,999.99
  move 0 to #TOTAL_EMPLID_GP
  move 0 to #TOTAL_DEPOSIT_GP
End-Procedure

Begin-Procedure footing_CIA
  if #ProcessNum = 1
     do TOTAL-PAYMENT
     print 'Total de Movimientos por Entidad de Pago     '      (+2,1)
     print #TOTAL_EMPLID_PE                                     () edit 9,999,999,999.99
     print 'Total de Importe a Pagar por Entidad de Pago '      (+2,1)
     print #TOTAL_DEPOSIT_PE                                    () edit 9,999,999,999.99
     move 0 to #TOTAL_EMPLID_PE
     move 0 to #TOTAL_DEPOSIT_PE
  end-if
End-Procedure

Begin-Procedure GlobalResume
  print '-'                                                 (+2,1,176) fill
  print 'RESUMEN GLOBAL POR ENTIDAD DE PAGO: '              (+1,1)
  print '-'                                                 (+1,1,176) fill
  Let #ProcessNum = 1
  do footing_CIA
  print '-'                                                 (+2,1,176) fill
End-Procedure


!**************************************
Begin-Procedure Select-Parameters
  Let $BankProcess        = 'N'
  Let #BANORTECount       = 0
  Let #MX_CUST_ID_BANK    = 0
  Let #MX_REF_NUM_C       = 0
  Let $offCycle           = 'N'
  Let $BANK_CD_MX         = ''
  Let $PROC_BANK          = ''
  Let $MX_Batch_Ref_Pay   = ''
  Let $MX_Batch_Ref_Int   = ''
  Let $MX_Benf_Ref_Pay    = ''
  Let $MX_Benf_Ref_Int    = ''
  
  
BEGIN-SELECT
RUNCTL.CAL_RUN_ID
RUNCTL.PAY_ENTITY
RUNCTL.GPMX_FILE_NAME
RUNCTL.GPMX_FORMAT_BANK
RUNCTL.GPMX_SECOND_REF
RUNCTL.REFERENCE_NUM
RUNCTL.GPMX_BANAMEX_VER
RUNCTL.GPMX_BANK_CUST_ID
RUNCTL.GPMX_REF_NUM_A
RUNCTL.GPMX_REF_NUM_C
RUNCTL.GPMX_REF_NUM_D
RUNCTL.GPMX_REF_NUM_E
RUNCTL.GPMX_BANAMEX_TYPE
RUNCTL.GPMX_MESSAGE
RUNCTL.GPMX_TRANS_TYPE   
RUNCTL.GPMX_PLAZO
RUNCTL.GPMX_BANK_CD
RUNCTL.GPMX_REF_CHAR_01
RUNCTL.GPMX_REF_CHAR_02
RUNCTL.GPMX_REF_CHAR_03
RUNCTL.GPMX_REF_CHAR_04
RUNCTL.GPMX_DATE



  Let $Cal_Run_ID                  = RTRIM(&RUNCTL.CAL_RUN_ID,' ')
  Let $payEntity                   = RTRIM(&RUNCTL.PAY_ENTITY,' ')
  Let $FileName                    = RTRIM(&RUNCTL.GPMX_FILE_NAME,' ')
  Let $BankFormat                 = RTRIM(&RUNCTL.GPMX_FORMAT_BANK,' ')
  Let $TransacDescr                = RTRIM(&RUNCTL.GPMX_MESSAGE,' ') 
  Let $SECONDARY_REF               = &RUNCTL.GPMX_SECOND_REF
  MOVE &RUNCTL.REFERENCE_NUM       TO  $REF_NUM
  MOVE &RUNCTL.GPMX_BANAMEX_VER    TO  $VERSION
  MOVE &RUNCTL.GPMX_BANK_CUST_ID   TO  #MX_CUST_ID_BANK
  MOVE &RUNCTL.GPMX_REF_NUM_A      TO  $MX_REF_NUM_A
  MOVE &RUNCTL.GPMX_REF_NUM_C      TO  #MX_REF_NUM_C
  MOVE &RUNCTL.GPMX_REF_NUM_D      TO  #MX_REF_NUM_D
  MOVE &RUNCTL.GPMX_REF_NUM_E      TO  #MX_REF_NUM_E
  MOVE &RUNCTL.GPMX_BANAMEX_TYPE   TO  $GPMX_BANAMEX_TYPE
  MOVE &RUNCTL.GPMX_FORMAT_BANK    TO  $GPMX_FORMAT_BANK_D
  MOVE &RUNCTL.GPMX_TRANS_TYPE     TO  $TRANS_TYPE
  MOVE &RUNCTL.GPMX_PLAZO          TO  $PLAZO
  MOVE &RUNCTL.GPMX_BANK_CD        TO  $BANK_CD_MX
  MOVE &RUNCTL.GPMX_REF_CHAR_01    TO  $MX_Batch_Ref_Pay
  MOVE &RUNCTL.GPMX_REF_CHAR_02    TO  $MX_Benf_Ref_Pay
  MOVE &RUNCTL.GPMX_REF_CHAR_03    TO  $MX_Batch_Ref_Int
  MOVE &RUNCTL.GPMX_REF_CHAR_04    TO  $MX_Benf_Ref_Int
  MOVE &RUNCTL.GPMX_DATE           TO  $Operation_Dt
  
  Let $PROC_BANK = $BANK_CD_MX
  Let $GPMX_FORMAT_BANK_DESC = $BANK_CD_MX
  
  Let $BankProcess        = 'Y'
  
  #Debug show '   $Cal_Run_ID           :' $Cal_Run_ID        
  #Debug show '   $payEntity            :' $payEntity         
  #Debug show '   $FileName             :' $FileName          
  #Debug show '   $BankFormat          :' $BankFormat       
  #Debug show '   $TransacDescr         :' $TransacDescr      
  #Debug show '   $SECONDARY_REF        :' $SECONDARY_REF     
  #Debug show '   $REF_NUM              :' $REF_NUM           
  #Debug show '   $VERSION              :' $VERSION           
  #Debug show '   #MX_CUST_ID_BANK      :' #MX_CUST_ID_BANK   
  #Debug show '   $MX_REF_NUM_A         :' $MX_REF_NUM_A      
  #Debug show '   #MX_REF_NUM_C         :' #MX_REF_NUM_C      
  #Debug show '   #MX_REF_NUM_D         :' #MX_REF_NUM_D      
  #Debug show '   #MX_REF_NUM_E         :' #MX_REF_NUM_E      
  #Debug show '   $GPMX_BANAMEX_TYPE    :' $GPMX_BANAMEX_TYPE 
  #Debug show '   $GPMX_FORMAT_BANK_D   :' $GPMX_FORMAT_BANK_D
  #Debug show '   $BANK_CD_MX           :' $BANK_CD_MX 
  
  
  Let $MX_CUST_ID_BANK = EDIT(#MX_CUST_ID_BANK,'000000000000')

FROM  PS_GPMX_RC_EFT  RUNCTL
WHERE RUNCTL.OPRID = $Prcs_OprID
AND RUNCTL.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SELECT
End-Procedure Select-Parameters

!**************************************
Begin-Procedure validateOffCycle
#debug show 'validateOffCycle'

BEGIN-SELECT
OFF_CYCLE  

     if &OFF_CYCLE  = 'Y'
        Let $offCycle = 'Y'
     end-if

FROM  PS_GP_CAL_RUN 
WHERE CAL_RUN_ID = $Cal_Run_ID
END-SELECT
#debug show $offCycle

End-Procedure validateOffCycle

!**************************************
Begin-Procedure Open-File
#Debug show 'PROCEDURE: Open-File'


Let $FileName = LTRIM(RTRIM($FileName,' '),' ')
Let $FileName ='{FILEPREFIX}' || $FileName || '{FILESUFFIX}'
show 'Nombre del Archivo: ' $FileName

Let #option = 1
Let $Where_Payment = ' '


EVALUATE $BankFormat
  WHEN = '30'   !----- BANAMEX
      !move 'BANAMEX' TO $PROC_BANK
      OPEN $FileName AS 1 FOR-WRITING RECORD=500
      Let #option = 0
  BREAK    
    
  WHEN = '40'                          ! ---- BANORTE
    !move 'BANORTE' TO $PROC_BANK
    OPEN $FileName AS 1 FOR-WRITING RECORD=165  !62
    BREAK
  WHEN = '10'   !----- BANCOMER
    !move 'BANCOMER' TO $PROC_BANK
    OPEN $FileName AS 1 FOR-WRITING RECORD=232
    BREAK
  WHEN = '50'   !----- HSBC
    !move 'HSBC' TO $PROC_BANK
    
    IF $TRANS_TYPE = '01'
        OPEN $FileName AS 1 FOR-WRITING RECORD=93
    Else
        OPEN $FileName AS 1 FOR-WRITING RECORD=259
        Let #option = 0
        Let #num_line = 0
    End-If
    BREAK
  WHEN = '60'   !----- SCOTIABANK
    !move 'SCOTIABANK' TO $PROC_BANK
    OPEN $FileName AS 1 FOR-WRITING RECORD=370
    BREAK
  WHEN = '20'   !----- BANCRECER
    !move 'BANCRECER' TO $PROC_BANK
    OPEN $FileName AS 1 FOR-WRITING RECORD=70
    BREAK
  WHEN = '70'   !----- BBVA CASH
    !move 'BANCOMER' TO $PROC_BANK
    OPEN $FileName AS 1 FOR-WRITING RECORD=62
    BREAK
  WHEN = '80'   !----- SANTANDER
    !move 'SANTANDER' TO $PROC_BANK
    
    IF $TRANS_TYPE = '01'
        OPEN $FileName AS 1 FOR-WRITING RECORD=500
    Else
        OPEN $FileName AS 1 FOR-WRITING RECORD=500
        Let #option = 0
    End-If
    
    Let #num_line = 0   
    Let #records  = 0 
    Let #total_Amount = 0
    Break
END-EVALUATE

if #Option = 1 
    Let $signal = ' = '
Else
    Let $signal = ' <> '
End-If

If $BankFormat <> '10' and $BankFormat <> '30'
  Let $Where_Net = ' AND A.BANK_CD ' || $signal || Chr(39) ||  $PROC_BANK || Chr(39) || '  '
  Let $Where_Payment = ' AND A.BANK_CD = ' || Chr(39) || $GPMX_FORMAT_BANK_DESC || Chr(39) || '  '
End-if  

#Debug Show '$Where_Net = '$Where_Net 

End-Procedure Open-File


!***************************** CLOSE-FILE ***************************************
Begin-Procedure CLOSE-FILE
  CLOSE 1
End-Procedure CLOSE-FILE


!****************************** Write-Header ********************
Begin-Procedure Write-Header
#Debug show 'PROCEDURE: Write-Header'

  EVALUATE $BankFormat
     WHEN = '10'  !----- BBVA
         If $OffCycle = 'N'
              do PAYMENT-DATE
         else
              do PAYMENT-DATE-off
         end-if
         
         do READ-PAY-ENTITY

         Let $CurrentDate = edit($AsofToday, 'YYYYMMDD')
         
         DO TOTAL-PAYMENT
         
         MOVE #TOTAL_DEPOSIT TO $tmp_totalAmount '0000000000000.00'
         Let $tmp_Amount1 = substr($tmp_totalAmount,  1, 13)
         Let $tmp_Amount2 = substr($tmp_totalAmount, 15,  2)
         Let $TotalAmount = $tmp_Amount1 || $tmp_Amount2
         Let $Bank_id_code = Substr(to_char(#MX_CUST_ID_BANK), 1, 10)
         Let $Total_abonos = Edit(#TOTAL_EMPLID,'0000000') 
         Let $Operation_Dt = Edit($Operation_Dt, 'YYYYMMDD')
                  
         WRITE 1 FROM '1':1                -
                      $Total_abonos:7      -      
                      $TotalAmount:15      -
                      '0000000':7          -
                      '000000000000000':15 -
                      '000000000000':12    -
                      $Bank_id_code:10     -
                      'R05':3              - 
                      '101':3              -
                      '1':1                -
                      $CurrentDate:8       -
                      $Operation_Dt:8      -
                      ' ':142
                      
     BREAK
     
     WHEN = '30'  !----- BANAMEX
     
         If $OffCycle = 'N'
              do PAYMENT-DATE
         else
              do PAYMENT-DATE-off
         end-if
         
         DO TOTAL-PAYMENT
         do READ-PAY-ENTITY
         
         WRITE 1 FROM '1':1             -                    !Tipo de Registro
                 $MX_CUST_ID_BANK:12    -                    !Número de identificación del cliente
                 $PAYMENT_DATE1:6       -                    !Fecha de pago
                 '0001':4               -                    !Secuencial del archivo
                 $payEntityDescr:36     -                    !Nombre del la empresa
                 $TransacDescr:20       -                    !Descripción del archivo
                 '15':2                 -                    !Naturaleza del archivo 
                 'D':1                  -                    !Versión del layout     
                 '01':2                                      !Tipo de cargo          

                 Let #paymentAmt_INT = TRUNC(#TOTAL_DEPOSIT,0)
                 Let $DepositInteger = EDIT(#paymentAmt_INT,'0000000000000000')

                 Let #paymentAmt_DEC = #TOTAL_DEPOSIT - #paymentAmt_INT
                 Let #paymentAmt_DEC = #paymentAmt_DEC * 100
                 Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
                 Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)

                 
                 Let #Length   = 20                         !Longitud Final del Campo
                 Let $FieldIn  = $AccountEcID               !Campo para rellenar
                 do FILL_LEADING
                 Let $AccountEcID = $FieldOut
                 Let $Total_abonos = Edit(#TOTAL_EMPLID,'000000') 
           
                  WRITE 1 FROM '2':1                    -  !Tipo de Registro              
                               '1':1                    -  !Tipo de Operación             
                               '001':3                  -  !Clave de la Moneda            
                               $DepositInteger:16       -  !Importe a cargar              
                               $DEPOSIT_DEC:2           -  !DECIMALES DEL IMPORTE A CARGAR
                               '01':2                   -  !TIPO DE CUENTA                
                               $AccountEcID:20          -  !NUMERO DE CUENTA (SUCURSAL)   
                               $Total_abonos:6             !TOTAL                         
                  
     BREAK     
     
    WHEN = '40'                        ! ********> ENCAB BANORTE
        do Read-Heading
        do READ-PAY-ENTITY
        If $OffCycle = 'N'
             do PAYMENT-DATE
        Else
             do PAYMENT-DATE-off
        End-If
        Let $AccountEcID = edit(To_number($AccountEcID), '0000000000')
        
        #debug show '*** BANORTE HEADER ***'
        Let $BnteH_RegType   = 'H'
        Let $BnteH_Banorte   = 'NE'
        Move #MX_CUST_ID_BANK TO $BnteH_IssuerNbr '00000'
        Let $BnteH_Date      = $PaymentDate
        Let $BnteH_Seq       = '01'

        do TOTAL-PAYMENT
        #debug show '#TOTAL_EMPLID     :' #TOTAL_EMPLID
        #debug show '#TOTAL_DEPOSIT    :' #TOTAL_DEPOSIT
        MOVE #TOTAL_EMPLID TO $BnteH_Total '000000'
        MOVE #TOTAL_DEPOSIT TO $tmp_totalAmount '0000000000000.00'
        Let $tmp_Amount1 = substr($tmp_totalAmount,  1, 13)
        Let $tmp_Amount2 = substr($tmp_totalAmount, 15,  2)
        Let $BnteH_TotalAmount = $tmp_Amount1 || $tmp_Amount2

        Let $BnteH_Zeros6  = '000000'
        Let $BnteH_Zeros15 = '000000000000000'
        Let $BnteH_Zeros1  = '0'

        #debug show ''
        #debug show '$BnteH_RegType     :' $BnteH_RegType
        #debug show '$BnteH_Banorte     :' $BnteH_Banorte
        #debug show '$BnteH_IssuerNbr   :' $BnteH_IssuerNbr
        #debug show '$BnteH_Date        :' $BnteH_Date
        #debug show '$BnteH_Seq         :' $BnteH_Seq
        #debug show '$BnteH_Total       :' $BnteH_Total
        #debug show '$BnteH_TotalAmount :' $BnteH_TotalAmount
        #debug show '$BnteH_Zeros6      :' $BnteH_Zeros6
        #debug show '$BnteH_Zeros15     :' $BnteH_Zeros15
        #debug show '$BnteH_Zeros6      :' $BnteH_Zeros6
        #debug show '$BnteH_Zeros15     :' $BnteH_Zeros15
        #debug show '$BnteH_Zeros6      :' $BnteH_Zeros6
        #debug show '$BnteH_Zeros1      :' $BnteH_Zeros1
        #debug show '$BnteH_filler      :' $BnteH_filler

        WRITE 1 FROM $BnteH_RegType:1              -
                                                         $BnteH_Banorte:2
                                                         $BnteH_IssuerNbr:5
                                                         $BnteH_Date:8
                                                         $BnteH_Seq:2
                                                         $BnteH_Total:6
                                                         $BnteH_TotalAmount:15
                                                         $BnteH_Zeros6:6
                                                         $BnteH_Zeros15:15
                                                         $BnteH_Zeros6:6
                                                         $BnteH_Zeros15:15
                                                         $BnteH_Zeros6:6
                                                         $BnteH_Zeros1:1
                                                         $BnteH_filler:77




    BREAK
    
    WHEN = '20'
        !------------- ENCAB BANCRECER
        !------ Special Format Date for Bancrecer

        do Read-Heading
        
        If $OffCycle = 'N'
             do PAYMENT-DATE
        else
             do PAYMENT-DATE-off
        end-if
        
        do TOTAL-PAYMENT

        Let #TOT_DEPOSIT_INT = TRUNC(#TOTAL_DEPOSIT,0)

        Let $TOT_DEPOSIT_INT = EDIT(#TOT_DEPOSIT_INT,'0000000000')

        Let #TOT_DEPOSIT_DEC = #TOTAL_DEPOSIT - #TOT_DEPOSIT_INT
        Let #TOT_DEPOSIT_DEC = #TOT_DEPOSIT_DEC * 10
        Let $TOT_DEPOSIT_DEC = EDIT(#TOT_DEPOSIT_DEC,'00')

!        Let $TOTAL_EMPLID = EDIT(#TOTAL_EMPLID,'00000')

        Let $GPMX_BRA =  Substr($GPMX_BRANCH, 1, 4)
        Let $GPMX_BRA =  RTRIM($GPMX_BRA,' ')
        Let $GPMX_BRA =  LPAD($GPMX_BRA,4,'0')

        Let $REF_NUM2 =  Substr($REF_NUM, 1, 9)
        Let $REF_NUM2 =  RTRIM($REF_NUM2,' ')

        Let $MX_REF_NUM_A =Substr($MX_REF_NUM_A,1,5)
        Let $MX_REF_NUM_A =  RTRIM($MX_REF_NUM_A,' ')

        WRITE 1 FROM 'H':1                  -
                     'NE':2                 -
!                     $GPMX_BRA:4            -
                     $REF_NUM:9             -
                     $MX_REF_NUM_A:5        -
                     '01':2                 -
                     $PAYMENT_DATE1:6       -
                     $TOT_DEPOSIT_INT:10    -
                     $TOT_DEPOSIT_DEC:2     -
                     $TOTAL_EMPLID:6        -
                     ' ':23
    BREAK

    WHEN = '60'  ! SCOTIABANK INVERLAT HEADER-FILE
    
         do Read-Heading
         
         Let #Length = 5
         Let $FieldIn = to_char(#MX_CUST_ID_BANK)
         do FILL_LEADING
         Let $MX_CUST_ID_BANK = $FieldOut
    
         Let #Length = 10
         Let $FieldIn = to_char(#MX_REF_NUM_C)
         do FILL_LEADING
         Let $MX_REF_NUM_C = $FieldOut
    
         Let #Length = 11
         Let $FieldIn = $AccountEcID
         do FILL_LEADING
         Let $AccountEcID = $FieldOut
                  
         WRITE 1 FROM 'EE':2                 -
                      'HA':2                 -
                      $MX_CUST_ID_BANK:5     -
                      '01':2                 -
                      '00000000':8           -
                      '00000000':8           -
                      '00000000':8           -
                      '000':3                -
                      ' ':332                
                      
         WRITE 1 FROM 'EE':2                 -
                      'HB':2                 -
                      '00':2                 -
                      '0000':4               -
                      $AccountEcID:11        -
                      $MX_REF_NUM_C:10       -
                      '000':3                -
                      ' ':336

    BREAK    

    WHEN = '80'  ! SANTANDER HEADER-FILE
    
         do Read-Heading

        If $OffCycle = 'N'
             do PAYMENT-DATE
        else
             do PAYMENT-DATE-off
        end-if     
     
        Let  $Account = EDIT ($AccountEcID,'0000000000000000')

        Let #line_number = #line_number + 1
        Let $line_number = edit(#line_number,'00000')
        Let $Current_date = edit($AsofToday, 'MMDDYYYYY')
       

        Write 1 FROM '1':1
                         $line_number:5
                            'E':1
                            $Current_date:8
                            $Account:16
                            $Payment_Dt:8
    BREAK
    
    WHEN = '50'  ! HSBC HEADER-FILE
      Do TOTAL-PAYMENT
      If $OffCycle = 'N'
           do PAYMENT-DATE
      else
           do PAYMENT-DATE-off
      end-if 
          
      IF $TRANS_TYPE = '01'
         Do Read-Heading
      
         Let  $Account = EDIT ($AccountEcID,'0000000000')
         #debug show '#TOTAL_EMPLID     :' #TOTAL_EMPLID
         #debug show '#TOTAL_DEPOSIT    :' #TOTAL_DEPOSIT
         Let #TOTAL_DEPOSIT = #TOTAL_DEPOSIT * 100
         MOVE #TOTAL_EMPLID TO $Operation_Total '0000000'
         MOVE #TOTAL_DEPOSIT TO $TotalAmount '00000000000000'
         
         Let $Hours = EDIT($current-date, 'HH')

         IF to_number($Hours) < 6 
           Let $Hours = '06'
         END-IF
         
         IF to_number($Hours) > 20 
           Let $Hours = '20'
         END-IF  
         Let $Hours = $Hours || ':00'
         
         Write 1 FROM 'MXPRLF':6             !Formato
                      'F':1                  !Autorizacion
                      $Account:10            !Cuenta
                      $TotalAmount:14        !Monto
                      $Operation_Total:7     !Operaciones
                      $Payment_Dt2:8         !Fecha
                      $Hours:5               !Horario
                      $MX_Batch_Ref_Pay:34   !Referencia
                      
                      
      ELSE
         DO Read-Heading-Comp
         
         Let $Account = EDIT ($AccountEcID,'0000000000')

         Write 1 FROM $Account:10      !Cuenta
                      $Payment_Dt2:8   !Fecha
                      $RFC_Company:18  !RFC
                      'MXN':3          !Moneda
                      $MX_Batch_Ref_Int:40 !Ref Num
                       
      END-IF
    BREAK   


    
END-EVALUATE
End-Procedure Write-Header


!***************************** READ HEADING *************************************
Begin-Procedure Read-Heading
  Let $DATE_DEPOSIT = ' '
  Let $AccountEcID = ' '
  Let $GPMX_BRANCH = ' '
BEGIN-SELECT DISTINCT
RRR.DEBIT_DT             !FECHA DE DEBITO
RRR.GPMX_ACCOUNT_EC_ID   !CUENTA DE CARGO
RRR.GPMX_BRANCH_EC_CD    !SUCURSAL DE BANCO (PARA BANCRECER)
    MOVE &RRR.DEBIT_DT              TO   $DATE_DEPOSIT  YYYYMMDD
    MOVE &RRR.DEBIT_DT              TO   $DATE_DEPOSIT2  DD/MM/YYYY
    MOVE &RRR.DEBIT_DT              TO   $DATE_DEPOSIT3  DDMMYYYY
    MOVE &RRR.GPMX_ACCOUNT_EC_ID    TO   $AccountEcID
    MOVE &RRR.GPMX_BRANCH_EC_CD     TO   $GPMX_BRANCH
FROM  PS_GPMX_PAYMENT RRR

WHERE RRR.CAL_RUN_ID = $Cal_Run_ID
AND   RRR.PAY_ENTITY = $payEntity
AND   RRR.GPMX_BANK_CD = $PROC_BANK
AND   RRR.PMT_TYPE = '01'
END-SELECT

End-Procedure Read-Heading


!***************************** READ PAY ENTITY *************************************
Begin-Procedure READ-PAY-ENTITY
  Let $payEntityDescr  = ' '
BEGIN-SELECT
PPP.DESCR           !NOMBRE DE PAY ENTITY
    MOVE &PPP.DESCR   TO   $payEntityDescr

FROM  PS_GP_PYENT PPP
WHERE PPP.PAY_ENTITY = $payEntity
END-SELECT
End-Procedure READ-PAY-ENTITY


!***************************** Read-Detail *************************************
Begin-Procedure Read-Detail
#Debug show 'PROCEDURE: Read-Detail'
  Let $emplID  = ' '
  Let $Account = ' '
  Let #paymentAmt = 0
  Let $NAME    = ' '
  Let $DATE_DEPOSIT1 = ' '
  Let $AccountType  = ' '
  Let $EmployeeBranch = ' '
  Let $BRANCH_SOURCE = ' '
  Let $Account_SOURCE = ' '
  Let $payGroup = ' '
  Let $CALID = ' '
  Let $Account_S = ' '
  Let $RFC  = ' '
  Let $CLABE_Account = ' '  
  Let $Target_Bank  = ' '
  Let $Transfer_ID  = ' '
  Let $Account_Clabe = ' '

  #Debug show '$Cal_Run_ID : ' $Cal_Run_ID
  #Debug show '$payEntity  : ' $payEntity
  #Debug show '$BANK_CD_MX : ' $BANK_CD_MX
  
BEGIN-SELECT
DDD.GP_PAYGROUP          () ON-BREAK level=1 print=never before=heading_PG after=footing_PG
DDD.EMPLID               !NUMERO DE EMPLEADO
AE.NAME                  !NOMBRE DEL EMPLEADO apellidos,nombre
AE.FIRST_NAME
AE.MIDDLE_NAME
AE.LAST_NAME
AE.SECOND_LAST_NAME
DDD.ACCOUNT_EC_ID        !NUMERO DE CUENTA DEL EMPLEADO
DDD.NAME                 !NOMBRE DEL LA CUENTA DEL EMPLEADO
DDD.DEBIT_DT             !FECHA DE DEBITO
DDD.GPMX_ACCOUNT_EC_ID   !CUENTA DE CARGO
DDD.ACCOUNT_TYPE_PYE     !ACCOUNT TYPE
DDD.BRANCH_EC_CD         !BRANCH EMPLOYEE
DDD.GPMX_BRANCH_EC_CD    !BRANCH SOURCE
DDD.CAL_ID               !CAL_ID
DDD.BANK_CD              !BANK OF EMPLOYEE
DDD.INSTANCE
DDD.GP_PMT_AMT           !DEPOSITO PARA EMPLEADO
NID.NATIONAL_ID
RSL.RUN_TYPE

    MOVE &RSL.RUN_TYPE             TO   $runType
    MOVE &DDD.EMPLID               TO   $emplID
    MOVE &DDD.ACCOUNT_EC_ID        TO   $Account
    MOVE &DDD.ACCOUNT_EC_ID        TO   $Account_F
    MOVE &DDD.GP_PMT_AMT           TO   #paymentAmt
    MOVE &DDD.NAME                 TO   $NAME
    MOVE &AE.FIRST_NAME            TO   $NAMEF
    MOVE &AE.MIDDLE_NAME           TO   $NAMEM
    MOVE &AE.LAST_NAME             TO   $NAMEL
    MOVE &AE.SECOND_LAST_NAME      TO   $NAMES
    MOVE &DDD.DEBIT_DT             TO   $DATE_DEPOSIT1
    MOVE &DDD.ACCOUNT_TYPE_PYE     TO   $AccountType
    MOVE &DDD.BRANCH_EC_CD         TO   $EmployeeBranch
    MOVE &DDD.GPMX_BRANCH_EC_CD    TO   $BRANCH_SOURCE
    MOVE &DDD.GPMX_ACCOUNT_EC_ID   TO   $Account_SOURCE
    MOVE &DDD.GPMX_ACCOUNT_EC_ID   TO   $Account_S
    MOVE &DDD.GP_PAYGROUP          TO   $payGroup
    MOVE &DDD.CAL_ID               TO   $CALID
    MOVE &DDD.BANK_CD              TO   $BANK_EMP
    MOVE &AE.NAME                  TO   $E_NAME
    MOVE &DDD.INSTANCE             TO   #Instance
    MOVE &NID.NATIONAL_ID          TO   $RFC

    #Debug show ' ---------------------------------------------------------------------------'
    #Debug show '     $runType         :'$runType
    #Debug show '     $emplID          :'$emplID
    #Debug show '     $Account         :'$Account
    #Debug show '     $Account_F       :'$Account_F
    #Debug show '     #paymentAmt      :'#paymentAmt
    #Debug show '     $NAME            :'$NAME
    #Debug show '     $NAMEF           :'$NAMEF
    #Debug show '     $NAMEM           :'$NAMEM
    #Debug show '     $NAMEL           :'$NAMEL
    #Debug show '     $NAMES           :'$NAMES
    #Debug show '     $DATE_DEPOSIT1   :'$DATE_DEPOSIT1
    #Debug show '     $AccountType     :'$AccountType
    #Debug show '     $EmployeeBranch      :'$EmployeeBranch
    #Debug show '     $BRANCH_SOURCE   :'$BRANCH_SOURCE
    #Debug show '     $Account_SOURCE  :'$Account_SOURCE
    #Debug show '     $Account_S       :'$Account_S
    #Debug show '     $payGroup        :'$payGroup
    #Debug show '     $CALID           :'$CALID
    #Debug show '     $BANK_EMP        :'$BANK_EMP
    #Debug show '     $E_NAME          :'$E_NAME
    #Debug show '     #Instance        :'#Instance
    #Debug show '     $RFC             :'$RFC
    
    
    Let $NAMEBNMX = RTRIM($NAMEF,' ') || ' '
    if RTRIM($NAMEM,' ') <> ''
      Let $NAMEBNMX = $NAMEBNMX || ' ' || RTRIM($NAMEM,' ')
    end-IF
    Let $NAMEBNMX = $NAMEBNMX || RTRIM($NAMEL,' ') || ' ' || RTRIM($NAMES,' ')
    
    If $BankFormat = '10' Or $BankFormat = '30'
       Let $Where_Net = ' AND A.BANK_CD = ' || Chr(39) ||  $BANK_EMP || Chr(39) || '  '
    End-if
    
    do Validate-Bank-Dist
    
    do Format-FieldC($NAME, $Name)
    
    
    
FROM  PS_GPMX_PAYMENT DDD, 
      PS_PERSON_NAME AE, 
      PS_PERS_NID NID,
      PS_GP_RSLT_SEG_VW RSL
WHERE DDD.EMPLID           = AE.EMPLID
AND   DDD.EMPLID           = NID.EMPLID
AND   DDD.CAL_RUN_ID       = $Cal_Run_ID
AND   DDD.PAY_ENTITY       = $payEntity
AND   DDD.GPMX_BANK_CD     = $BANK_CD_MX
AND   NID.NATIONAL_ID_TYPE = 'RFC'
AND   DDD.PMT_TYPE         = '01'
AND   RSL.EMPLID           = DDD.EMPLID
AND   RSL.EMPL_RCD         = DDD.EMPL_RCD
AND   RSL.CAL_RUN_ID       = DDD.CAL_RUN_ID
AND   RSL.CAL_ID           = DDD.CAL_ID
AND   RSL.ORIG_CAL_RUN_ID  = DDD.ORIG_CAL_RUN_ID
AND   RSL.RSLT_SEG_NUM     = DDD.RSLT_SEG_NUM
ORDER BY DDD.GP_PAYGROUP, DDD.EMPLID, AE.NAME
END-SELECT
End-Procedure Read-Detail



!**************************************
Begin-Procedure Validate-Bank-Dist
#debug show 'Procedure Validate-Bank-Dist'
#debug show '    $emplID       :' $emplID
#debug show '    #Instance     :' #Instance
#debug show '    $PROC_BANK    :' $PROC_BANK
#debug show '    $AsofToday    :' $AsofToday
#debug show '    $runType      :' $runType
#debug show '    $Where_Net    :' $Where_Net
Let $CLABE_Account = ' '
BEGIN-SELECT DISTINCT 
!'X'
A.BANK_CD

    ADD 1 TO #TOTAL_EMPLID_GP
    ADD 1 TO #TOTAL_EMPLID_PE
    ADD 1 TO #TOTAL_EMPLID
    ADD #paymentAmt  TO #TOTAL_DEPOSIT_GP
    ADD #paymentAmt  TO #TOTAL_DEPOSIT_PE
    
    do Get-Account-Name
    do DESCR-BRANCH
    
    If &A.BANK_CD <> $BANK_CD_MX
      Do Get-CLABE-Account 
    End-if
    
    do Write-Detail
    print $emplID                (+1,{c1})   ON-BREAK
    print &AE.NAME               (0,{c2},49)    ON-BREAK
    IF $AccountType  = 'C'
       print 'Depósito Bancario' (0,{c3})
    else
       print 'Cuenta de Ahorro'  (0,{c3})
    end-if
    print $EmployeeBranch            (0,{c4})
    print $Account_F             (0,{c5})
    print #paymentAmt               (0,{c6})  edit 9,999,999,999.99
   
FROM PS_PYE_BANKACCT A,
     PS_GP_NET_DIST_DTL B
WHERE A.EFF_STATUS = 'A'
AND A.COUNTRY_CD   = 'MEX'
AND A.EMPLID       = B.EMPLID
and A.EMPLID       = $emplID
and A.ACCOUNT_ID   = B.ACCOUNT_ID
and B.INSTANCE     = #Instance
!and A.BANK_CD      = $BANK_EMP
[$Where_Net] 
and B.EFFDT = (SELECT MAX(EFFDT) FROM PS_GP_NET_DIST_DTL
               WHERE EMPLID = B.EMPLID
               AND EMPL_RCD = B.EMPL_RCD
               AND RUN_TYPE = B.RUN_TYPE
               AND INSTANCE = B.INSTANCE
               AND EFFDT   <= $AsofToday)
AND B.PAYMENT_MTHD = 'T'
AND (B.RUN_TYPE = $runType
     OR A.ACCOUNT_ID = (SELECT MAX(NETD.ACCOUNT_ID)
                        FROM PS_GP_NET_DIST_DTL NETD,
                             PS_GP_NET_DIST NET,
                             PS_PYE_BANKACCT BNK
                        WHERE NETD.EMPLID = NET.EMPLID
                        AND NETD.EMPL_RCD = NET.EMPL_RCD
                        AND NET.DEFAULT_IND = 'Y'
                        AND NETD.EMPLID = A.EMPLID
                        AND BNK.EMPLID = NETD.EMPLID
                        AND BNK.ACCOUNT_ID = NETD.ACCOUNT_ID
                        AND BNK.BANK_CD = A.BANK_CD))
end-select
End-Procedure Validate-Bank-Dist

!***************************** DESCR-BRANCH *************************************
Begin-Procedure DESCR-BRANCH
!  Let $E_NAME = ' '
BEGIN-SELECT
DB.DESCR

FROM  PS_BANK_BRANCH_TBL DB
WHERE COUNTRY_CD = 'MEX'
AND BANK_CD = $BANK_EMP
AND BRANCH_EC_CD = $EmployeeBranch
END-SELECT
  MOVE &DB.DESCR  TO  $BRANCH_DESCR
End-Procedure DESCR-BRANCH


!**************************************
Begin-Procedure Get-Account-Name
#debug show 'Get-Account-Name'
Let $AccountName = ' '

BEGIN-SELECT
NNN.ACCOUNT_NAME
NNN.ACCOUNT_ID

  Let $AccountName = &NNN.ACCOUNT_NAME 
  Let #AccountID   = &NNN.ACCOUNT_ID 
  
FROM PS_PYE_BANKACCT  NNN
WHERE NNN.EMPLID = $emplID
END-SELECT
  
End-Procedure Get-Account-Name


!**************************************
Begin-Procedure Write-Detail
#debug show 'Procedure Write-Detail'
#debug show '$BankFormat  :' $BankFormat


EVALUATE $BankFormat
WHEN = '30'

!------ BANAMEX detail

    Let #paymentAmt_INT = TRUNC(#paymentAmt,0)
    Let $DepositInteger = EDIT(#paymentAmt_INT,'0000000000000000')

    Let #paymentAmt_DEC = #paymentAmt - #paymentAmt_INT
    Let #paymentAmt_DEC = #paymentAmt_DEC * 100
    Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
    Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)
    
    Let $REF_NUM_BNX = RPad(Rtrim($REF_NUM, ' '), 16, ' ')
    Do to_upper($NAMEF)
    Do to_upper($NAMEL)
    Do to_upper($NAMES)
   
    Let $NAMEBNMX = $NAMEF || ',' || $NAMEL || '/' || $NAMES
    Let $Payment_Method = '001'
    Let $Bank_code = '0000'
    
    IF  $AccountType = 'C'      !--- CUENTA DE CHEQUES
        Let $BNMX_TYPE_ACC = '01'
        Let $account = substr($account, 1,7)
        Let #Length =  7                            !Longitud Final del Campo
        Let $FieldIn = $Account                     !Campo para rellenar        
        do FILL_LEADING
        Let $Account = $FieldOut
           
        Let #Length =  4                            !Longitud Final del Campo
        Let $FieldIn = $EmployeeBranch              !Campo para rellenar        
        do FILL_LEADING
        Let $Branch  = $FieldOut
        
        Let $Account = edit($Branch || $Account,'00000000000000000000')
        Let $PLAZO_BNMX = '00'
    ELSE
        Let $BNMX_TYPE_ACC = '03' !---CUENTA DE PLASTICO
        Let #Length = 16              !Longitud Final del Campo
        Let $FieldIn = $Account   !Campo para rellenar
        do FILL_LEADING
        Let $Account = edit($FieldOut,'00000000000000000000')
        Let $PLAZO_BNMX = '00'
    END-IF
    
    IF $CLABE_Account <> ' '
       Let $BNMX_TYPE_ACC = '40' !Interbancarios
       Let $Payment_Method = '002'
       Let $Bank_code     = substr($CLABE_Account,1,3)
       Let $Bank_code     = Edit($Bank_code,'0000')
       Let $Account       = Edit($CLABE_Account,'00000000000000000000')
       Let $MX_REF_NUM_E  = to_char(#MX_REF_NUM_E)
       Let $REF_NUM_BNX   = Rpad($MX_REF_NUM_E, 16, ' ')
       Let $PLAZO_BNMX    = $PLAZO
    END-IF
   

        WRITE 1 FROM '3':1                - !Tipo de registro   
                     '0':1                - !Tipo de operación  
                     $Payment_Method:3    - !Metodo de Pago     
                     '01':2               - !Tipo de Pago       
                     '001':3              - !Clave de la moneda 
                     $DepositInteger:16   - !Importe Entero     
                     $DEPOSIT_DEC:2       - !importe Decimal    
                     $BNMX_TYPE_ACC:2     - !Tipo de cuenta     
                     $Account:20          - !Número de cuenta   
                     $REF_NUM_BNX:16      - !Referencia Numerica
                     $NAMEBNMX:55         - !Beneficiario       
                     ' ':35               - !Referencia 1
                     ' ':35               - !Referencia 2
                     ' ':35               - !Referencia 3
                     ' ':35               - !Referencia 4
                     $Bank_code:4         - !Clave banco
                     $PLAZO_BNMX:2        - !plazo
                     $RFC:14              - !RFC
                     ' ':8                - !IVA
                     ' ':80               - !Para Uso Futuro
                     ' ':50                 !Para Uso Futuro
    

        ADD 1   TO  #BNMX_LINES
        ADD #paymentAmt TO #BNMX_TOTAL
    BREAK
    

WHEN = '10'

!------------- DETAIL BANCOMER
    Let #paymentAmt_INT = TRUNC(#paymentAmt,0)
    Let $DepositInteger = EDIT(#paymentAmt_INT,'00000000')

    Let #paymentAmt_DEC = #paymentAmt - #paymentAmt_INT
    Let #paymentAmt_DEC = #paymentAmt_DEC * 100
    Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
    Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)

!------- Fill_Leading $TRANSIT
    Let $Account = '0011' || LTRIM($Account,' ')
    Let #Length = 16              !Longitud Final del Campo
    Let $FieldIn = $Account   !Campo para rellenar
    do FILL_LEADING
    Let $Account = $FieldOut
    Let $SECUNDARY_REF = LTRIM($SECUNDARY_REF,' ')
        
    If  $OffCycle = 'N'
        do PAYMENT-DATE
    else
        do PAYMENT-DATE-off
    end-if
        
    Let $PAYMENT_DATE = EDIT($PAYMENT_DATE,'DDMMYY')
    
    Let $CURP_RFC = RPad($RFC,18, ' ')
    Let $MX_REF_NUM  = '0000000'
    Let $Bank_Target = '012'
    Let $ID_Transfer  = '000'
    Let $Reference   = 'R23'
    
    IF  $AccountType = 'C'      !--- CUENTA DE CHEQUES
      Let $BBVA_TYPE_ACC = '01'
    ELSE
      Let $BBVA_TYPE_ACC = '03' !---CUENTA DE PLASTICO
    END-IF
    
    IF $CLABE_Account <> ' ' 
      Let $MX_REF_NUM  = to_char(#MX_REF_NUM_E)
      Let $BBVA_TYPE_ACC = '40' !clabe
      
      Let $Bank_Target = substr($CLABE_Account,1,3)
      Let $ID_Transfer = substr($CLABE_Account,4,3)
      Let $Account     = substr($CLABE_Account,7,18)
      Let $Reference   = $SECONDARY_REF
    END-IF
    
    Let $Account   = LPad($Account, 16,'0')
    Let $Deposit   = LPad($DepositInteger || $DEPOSIT_DEC, 15, '0')
    Let $NAME_E    = Rpad($E_NAME, 40, ' ')
    Let $Reference = RPad($Reference, 40, ' ')

        WRITE 1 FROM  '3':1             -
                      $MX_REF_NUM:7   -
                      $CURP_RFC:18      -
                      $BBVA_TYPE_ACC:2  -
                      $Bank_Target:3    -
                      $ID_Transfer:3    -
                      $Account:16       -
                      $Deposit:15       -
                      '0000000':7       -
                      ' ':80            -
                      $NAME_E:40        -
                      $Reference:40  
                      
    BREAK
    
    WHEN = '40'  ! ----- DETAIL BANORTE -----------------------------------

        do BANORTE-Detail    

    BREAK
    WHEN = '60' ! ----- FORMATO SCOTIABANK -----------------------------------

        Let #Length = 10
        Let $FieldIn = $emplID
        Let $FieldOut = ''
        
        Let #Length = 20
        Let $FieldIn = $Account
        do FILL_LEADING
        Let $Account = $FieldOut
        
        If $OffCycle = 'N'
             do PAYMENT-DATE
        else
             do PAYMENT-DATE-off
        end-if

        Let #paymentAmt_INT = TRUNC(#paymentAmt,0)
        Let $DepositInteger = EDIT(#paymentAmt_INT,'0000000000000')

        Let #paymentAmt_DEC = #paymentAmt - #paymentAmt_INT
        Let #paymentAmt_DEC = #paymentAmt_DEC * 100
        Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
        Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)


        IF $AccountType = 'C'        !--- CUENTA DE AHORRO
            Let $INVL_TYPE_ACC = '1'
        ELSE

            Let $INVL_TYPE_ACC = '6' !---CUENTA DE CHEQUE

        END-IF
        
        Let $emplID = RTRIM($emplID,' ')

        !DETAIL SCOTIABANK INVERLAT
        do Format-FieldC($NAME, $Name)
        
        Let #Length = 16
        Let $FieldIn = to_char(#MX_REF_NUM_D)
        do FILL_LEADING
        Let $MX_REF_NUM_D = $FieldOut
        
        WRITE 1 FROM 'EE':2             -
                     'DA':2             -
                     '04':2             -
                     '00':2             -
                     $DepositInteger:13    -
                     $DEPOSIT_DEC:2     -
                     $PaymentDate:8     -
                     '01':2             -
                     $emplID:20         -
                     $RFC:13            -
                     $Name:40           -
                     $MX_REF_NUM_D:16   -
                     '00000':5          -
                     '00000':5          -
                     $Account:20        -
                     '00000':5          -
                     ' ':40             -
                     '1':1              -
                     ' ':1              -
                     '00000':5          -
                     '044':3            -
                     '044':3            -
                     '001':3            -
                     $TransacDescr:50   -
                     ' ':60             -
                     '000':3            -
                     '0':1              -
                     '000':3            -
                     '00000000':8       -
                     '00000':5          -
                     '00000':5          -
                     ' ':22

        ADD 1 TO #INVL_LINES
        ADD #paymentAmt TO #INVL_TOTAL

    BREAK
    WHEN = '50' ! ----- FORMATO HSBC -----------------------------------

     Let #paymentAmt_INT = TRUNC(#paymentAmt,0)
     Let #paymentAmt_DEC = #paymentAmt - #paymentAmt_INT
     Let #paymentAmt_DEC = #paymentAmt_DEC * 100
     Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
     Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)

     
  If $TRANS_TYPE = '01'  
      
     Let $DepositInteger = EDIT(#paymentAmt_INT,'00000000000')


     
     #Debug show '#paymentAmt_INT ' $DepositInteger 
     #Debug show '#paymentAmt_DEC ' $DEPOSIT_DEC  
   
     Let $DEPOSIT = $DepositInteger || $DEPOSIT_DEC  
     Let $DEPOSIT = EDIT($DEPOSIT, '00000000000000')
     Let #Length = 10           !Longitud Final del Campo
     Let $FieldIn = $Account    !Campo para rellenar
     Let $FieldOut = ''         !Campo ya Formateado
     do FILL_LEADING
     Let $Account = $FieldOut
     
     If $MX_Benf_Ref_Pay = ' ' 
      Let $Benf_Ref = 'NETNM ABONO PAGO DE NOMINA HSBCNET'
     Else
      Let $Benf_Ref = $MX_Benf_Ref_Pay
     End-if
      
     Let $Employee_Name = UPPER(&AE.NAME)
     
     WRITE 1 FROM $Account:10       -
                  $DEPOSIT:14       -
                  $Benf_Ref:34      -
                  $Employee_Name:35 
                  
                  
  Else  

   Do Get-CLABE-Account  
   
   #Debug SHOW 'EMPLOYEE NAME. ' &AE.NAME  
      
   Let $DepositInteger = EDIT(#paymentAmt_INT,'000000000000')
   Let $DEPOSIT = $DepositInteger || $DEPOSIT_DEC  
   
   Let $TIP_CTA = 'CLA'
   Let $Banck_code = Edit(substr($CLABE_Account,1,3),'000')
   Let $CLABE_Account =  Edit($CLABE_Account,'00000000000000000000')
   Let $Employee_Name = UPPER(&AE.NAME)
   Let $Reference     = Edit(#MX_REF_NUM_E,'0000000')
   Let #num_line = #num_line + 1
   Let $num_line = edit(#num_line,'00000')
   Let $IVA = '00000000000000'

     WRITE 1 FROM $TIP_CTA:3            -
                  $Banck_code:3         -
                  $CLABE_Account:20     -
                  $Employee_Name:40     -
                  $DEPOSIT:14           -
                  $Reference:7          -
                  $MX_Benf_Ref_Int:40   -
                  $RFC:18               -
                  $IVA:14            
                  
  End-If
    BREAK
    WHEN = '20' ! ----- FORMATO BANCRECER -------------------------------

    !------- Fill_Leading $Account
    Let #Length = 16              !Longitud Final del Campo
    Let $FieldIn = $Account   !Campo para rellenar
    do FILL_LEADING
    Let $Account = $FieldOut

    Let #paymentAmt_INT = TRUNC(#paymentAmt,0)
    Let $DepositInteger = EDIT(#paymentAmt_INT,'00000000')

    Let #paymentAmt_DEC = #paymentAmt - #paymentAmt_INT
    Let #paymentAmt_DEC = #paymentAmt_DEC * 100
    Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
    Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)

    Let $emplID =  RTRIM($emplID,' ')
    Let $emplID  =  LPAD($emplID,8,'0')

    WRITE 1 FROM 'D':1              -
                 $emplID:8          -
                 $Account:16        -
                 $DepositInteger:8     -
                 $DEPOSIT_DEC:2     -
                 '161':3            -
                 '0':1              -
                 '000000000':9      -
                 ' ':13
    BREAK
    
    WHEN = '70' ! ----- BBVA CASH -----------------------------------
               
    Let #Length = 10
    Let $FieldIn = $Account
    do FILL_LEADING
    Let $Account = $FieldOut

    If $OffCycle = 'N'
         do PAYMENT-DATE
    else
         do PAYMENT-DATE-off
    end-if

    Let #paymentAmt_INT = TRUNC(#paymentAmt,0)
    Let $DepositInteger = EDIT(#paymentAmt_INT,'000000')

    Let #paymentAmt_DEC = #paymentAmt - #paymentAmt_INT
    Let #paymentAmt_DEC = #paymentAmt_DEC * 100
    Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
    Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)
    
    Let #Length = 4
    Let $FieldIn = to_char(#TOTAL_EMPLID)
    do FILL_LEADING
    Let $TotalEmpl = $FieldOut

    do Format-FieldC($NAME, $Name)

    WRITE 1 FROM $TotalEmpl:4    -
                 $Account:10 -
                 $Name:40    -
                 $DepositInteger:6  -
                 $DEPOSIT_DEC:2
    BREAK

    WHEN = '80' ! SANTANDER DETAILS
    
      Let #line_number = #line_number + 1
      Let $line_number = edit(#line_number,'00000')
      
      Let #records = #records + 1
      
      Let $Account  =  LTRIM($Account,'0')      
      Let $Account  =  RPAD($Account,16,' ')

      Let $emplid = substr($emplid,1,7)

      Let #total_Amount = #total_Amount + #paymentAmt

      Let #paymentAmt_INT = TRUNC(#paymentAmt,0)
      Let $DepositInteger = EDIT(#paymentAmt_INT,'0000000000000000')
                  
      Let #paymentAmt_DEC = #paymentAmt - #paymentAmt_INT
      Let #paymentAmt_DEC = #paymentAmt_DEC * 100
      Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
      Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)

      
        If $TRANS_TYPE = '01'
                                    
         Write 1 From '2':1 -
                      $line_number:5
                      $emplid:7
                      $NAMEL:30
                      $NAMES:20
                      $NAMEF:30
                      $Account:16
                      $DepositInteger:16
                      $DEPOSIT_DEC:2                                     
            
        Else

        Do Get-CLABE-Account
 
  LET $BANK_Recept = ' '
  
  Let $Account_Bank = substr($CLABE_Account,1,3)
  Let $Employee_Name = UPPER(&AE.NAME)
  
 Evaluate $Account_Bank
 When = '002'
     LET $BANK_Recept = 'BANAM'
 When = '012'
     LET $BANK_Recept = 'BACOM'
 When = '021'
     LET $BANK_Recept = 'HSCB'
 When = '032'
     LET $BANK_Recept = 'BAIXE'
 When = '036'
     LET $BANK_Recept = 'BINBU'
 When = '044'
     LET $BANK_Recept = 'COMER'  
 When = '062'
     LET $BANK_Recept = 'BAFIR' 
 When = '072'
     LET $BANK_Recept = 'BBANO' 
 End-Evaluate       
                       
         Write 1 From '2':1            -
                      $line_number:5
                      $Employee_Name:50
                      '40':5
                      $CLABE_Account:20
                      $DepositInteger:16
                      $DEPOSIT_DEC:2   
                      $BANK_Recept:5
                      '01001':5                                                                
        End-If
    BREAK
      
END-EVALUATE
End-Procedure Write-Detail


!***************************** Write-Total *************************************
Begin-Procedure Write-Total
  EVALUATE $BankFormat
  WHEN = '30'
      Let $BNMX_LINES = EDIT(#BNMX_LINES,'000000')
      Let #BNMX_TOTAL_INT = TRUNC(#BNMX_TOTAL,0)
      Let $BNMX_TOTAL_INT = EDIT(#BNMX_TOTAL_INT,'0000000000000000')

      Let #BNMX_TOTAL_DEC = #BNMX_TOTAL - #BNMX_TOTAL_INT
      Let #BNMX_TOTAL_DEC = #BNMX_TOTAL_DEC * 100
      Let $BNMX_TOTAL_DEC = EDIT(#BNMX_TOTAL_DEC,'00')
      Let $BNMX_TOTAL_DEC = SUBSTR($BNMX_TOTAL_DEC,1,2)

     WRITE 1 FROM '4':1              -
                  '001':3            -
                  $BNMX_LINES:6      -
                  $BNMX_TOTAL_INT:16 -
                  $BNMX_TOTAL_DEC:2  -
                  '000001':6         -
                  $BNMX_TOTAL_INT:16 -
                  $BNMX_TOTAL_DEC:2
 BREAK

  WHEN = '60'
      Let $INVL_LINES = EDIT(#INVL_LINES,'0000000')
      !----- Enteros y Decimales $deposit

      Let #INVL_TOTAL_INT = TRUNC(#INVL_TOTAL,0)
      Let $INVL_TOTAL_INT = EDIT(#INVL_TOTAL_INT,'000000000000000')

      Let #INVL_TOTAL_DEC = #INVL_TOTAL - #INVL_TOTAL_INT
      Let #INVL_TOTAL_DEC = #INVL_TOTAL_DEC * 100
      Let $INVL_TOTAL_DEC = EDIT(#INVL_TOTAL_DEC,'00')
      Let $INVL_TOTAL_DEC = SUBSTR($INVL_TOTAL_DEC,1,2)

      WRITE 1 FROM 'EE':2                 -
                   'TB':2                 -
                   $INVL_LINES:7          -
                   $INVL_TOTAL_INT:15     -
                   $INVL_TOTAL_DEC:2      -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '000':3                -
                   ' ':123
                   
      WRITE 1 FROM 'EE':2                 -
                   'TA':2                 -
                   $INVL_LINES:7          -
                   $INVL_TOTAL_INT:15     -
                   $INVL_TOTAL_DEC:2      -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '0000000':7            -
                   '00000000000000000':17 -
                   '000':3                -
                   '000':3                -
                   ' ':120
  BREAK
  
  When = '80' !SANTANDER TOTAL
  
      Let #line_number = #line_number + 1
      Let $line_number = edit(#line_number,'00000')
      Let $records  = Edit(#records,'00000')
      
      
       Let #paymentAmt_INT = TRUNC(#total_Amount,0)
      Let $DepositInteger = EDIT(#paymentAmt_INT,'0000000000000000')
                  
      Let #paymentAmt_DEC = #total_Amount - #paymentAmt_INT
      Let #paymentAmt_DEC = #paymentAmt_DEC * 100
      Let $DEPOSIT_DEC = EDIT(#paymentAmt_DEC,'00')
      Let $DEPOSIT_DEC = SUBSTR($DEPOSIT_DEC,1,2)
      
      
  Write 1 FROM '3':1
               $line_number:5
               $records:5
               $DepositInteger:16
               $DEPOSIT_DEC:2
    BREAK
               
  
  END-EVALUATE
End-Procedure Write-Total

!**************************************
Begin-Procedure FILL_LEADING
!show '* FILL_LEADING *'
!*************************************
  Let $FieldIn  = RTRIM($FieldIn,' ')
  Let $FieldIn  = LTRIM($FieldIn,' ')
  Let $FieldOut = ''
  
  Let #FieldLength = LENGTH($FieldIn) 

  Let #SPACES = #Length - #FieldLength
  
  Let #CONT = 1
  WHILE #CONT <= #SPACES
      Let $FieldOut = LTRIM($FieldOut,' ') || '0'
      ADD 1 TO #CONT
  END-WHILE

  Let $FieldOut = $FieldOut || $FieldIn
  Let $FieldIn = ''
End-Procedure FILL_LEADING

!**************************************
Begin-Procedure Format-Field
!show '* Format-Field *'
!*************************************
  Let $FieldIn  = RTRIM($FieldIn,' ')
  Let $FieldIn  = LTRIM($FieldIn,' ')
  Let $FieldOut = ''
  Let $FieldOut2 = ''
  Let $FieldChar = ''
  Let  #FieldLength = LENGTH($FieldIn) 

  Let #CONT = 1
  WHILE #CONT <= #FieldLength
      Let $FieldChar = substr($FieldIn,#CONT, 1) 
      
      If $FieldChar <> '-' 
         Let $FieldOut2 = $FieldOut2 || $FieldChar       
      end-if
      ADD 1 TO #CONT
  END-WHILE

  Let $FieldOut = $FieldOut2
  Let $FieldIn = ''
End-Procedure Format-Field

begin-procedure Format-FieldC($f1, :$f2)
  Let $in = ltrim(rtrim($f1,' '), ' ')
  Let #c = 1
  Let $f2 = ''
  while #c <= length($in)
     Let $char = substr($in,#c,1)
     evaluate $char
        when = 'á'
        when = 'Á'
           Let $let = 'A'
           break
        when = 'é'
        when = 'É'
           Let $let = 'E'
           break
        when = 'í'
        when = 'Í'
           Let $let = 'I'
           break
        when = 'ó'
        when = 'Ó'
           Let $let = 'O'
           break
        when = 'ú'
        when = 'Ú'
           Let $let = 'U'
           break
        when = 'ñ'
        when = 'Ñ'
           Let $let = 'N'
           break
        when = ','
        when = '.'
        when = '.'
        when = ''''
        when = '&'
        when = '%'
        when = '-'
           Let $let = ' '
           break
        when-other
           Let $let = upper($char)
           break
     end-evaluate
     Let $f2 = $f2 || $let
     Let #c = #c + 1
  end-while
end-procedure Format-FieldC



Begin-Procedure PAYMENT-DATE
#Debug show 'PROCEDURE : PAYMENT-DATE'
#Debug show '  $Cal_Run_ID   :' $Cal_Run_ID
#Debug show '  $payEntity    :' $payEntity
  Let $PAYMENT_DATE1 = ' '
  Let $PaymentDate = ' ' 
  Let $PAYMENT_BEGIN = ' '
  Let $PAYMENT_END   = ' '
  Let $Payment_Dt2   = ' '
  Let $Payment_Dt3   = ' '
BEGIN-SELECT
FFF.PYMT_DT     !CUENTA DE CARGO
FFF.PRD_BGN_DT  !FECHA DE INICIO
FFF.PRD_END_DT  !FECHA FINAL

    MOVE &FFF.PYMT_DT     TO    $PAYMENT_DATE1   YYMMDD
    MOVE &FFF.PYMT_DT     TO    $PaymentDate     YYYYMMDD
    MOVE &FFF.PYMT_DT     TO    $Payment_Dt      MMDDYYYY
    MOVE &FFF.PYMT_DT     TO    $Payment_Dt2     DDMMYYYY
    MOVE &FFF.PYMT_DT     TO    $Payment_Dt3     DD/MM/YYYY
    
    MOVE &FFF.PRD_BGN_DT  TO    $PAYMENT_BEGIN   DD/MM/YYYY
    MOVE &FFF.PRD_END_DT  TO    $PAYMENT_END     DD/MM/YYYY
    
    #Debug show '      $PAYMENT_DATE1 :' $PAYMENT_DATE1
    #Debug show '      $PaymentDate   :' $PaymentDate
    #Debug show '      $PAYMENT_BEGIN :' $PAYMENT_BEGIN
    #Debug show '      $PAYMENT_END   :' $PAYMENT_END
    

FROM  PS_GP_CAL_RUN_DTL FFF

WHERE FFF.CAL_RUN_ID = $Cal_Run_ID
AND   FFF.PAY_ENTITY = $payEntity
END-SELECT
  Let  $TOTAL_EMPLEADO = #TOTAL_EMPLEADO
  Let  $PAYMENT_DATE = dateadd(&FFF.PYMT_DT, 'day', -1)
End-Procedure PAYMENT-DATE

Begin-Procedure PAYMENT-DATE-off
#Debug show 'PROCEDURE : PAYMENT-DATE-off'
#Debug show '  $Cal_Run_ID   :' $Cal_Run_ID
  Let $PAYMENT_DATE1 = ' '
  Let $PaymentDate = ' ' 
  Let $PAYMENT_BEGIN = ' '
  Let $PAYMENT_END   = ' '
  Let $Payment_Dt2   = ' '
  Let $Payment_Dt3   = ' '

BEGIN-SELECT
FF1.PYMT_DT     !CUENTA DE CARGO
FF1.CAL_PRD_ID  

    MOVE &FF1.PYMT_DT     TO    $PAYMENT_DATE1   YYMMDD
    MOVE &FF1.PYMT_DT     TO    $PaymentDate     YYYYMMDD
    MOVE &FF1.PYMT_DT     TO    $Payment_Dt      MMDDYYYY
    MOVE &FF1.PYMT_DT     TO    $Payment_Dt2     DDMMYYYY
    MOVE &FF1.PYMT_DT     TO    $Payment_Dt3     DD/MM/YYYY

    
    Let $calPrdID = &FF1.CAL_PRD_ID
    
    #Debug show '      $PAYMENT_DATE1 :' $PAYMENT_DATE1
    #Debug show '      $PaymentDate   :' $PaymentDate
    #Debug show '      $calPrdID      :' $calPrdID

FROM  PS_GP_OFFCYCLE FF1
WHERE FF1.CAL_RUN_ID = $Cal_Run_ID
END-SELECT

BEGIN-SELECT
FF2.PRD_BGN_DT   
FF2.PRD_END_DT   
 
    MOVE &FF2.PRD_BGN_DT  TO    $PAYMENT_BEGIN   DD/MM/YYYY
    MOVE &FF2.PRD_END_DT  TO    $PAYMENT_END     DD/MM/YYYY
    
    #Debug show '      $PAYMENT_BEGIN    :' $PAYMENT_BEGIN
    #Debug show '      $PAYMENT_END      :' $PAYMENT_BEGIN
    

FROM  PS_GP_CAL_PRD FF2

WHERE FF2.CAL_PRD_ID = $calPrdID
END-SELECT



  Let  $TOTAL_EMPLEADO = #TOTAL_EMPLEADO
  Let  $PAYMENT_DATE = dateadd(&FF1.PYMT_DT, 'day', -1)
End-Procedure PAYMENT-DATE-off

!***************************** TOTAL PAYMENT *************************************
Begin-Procedure TOTAL-PAYMENT
#Debug show 'PROCEDURE : TOTAL-PAYMENT'
#debug show '  $Cal_Run_ID            :' $Cal_Run_ID
#debug show '  $payEntity             :' $payEntity
#debug show '  $GPMX_FORMAT_BANK_DESC :' $GPMX_FORMAT_BANK_DESC ' - ' $BANK_CD_MX 
#debug show '  $Where_Payment         :' $Where_Payment

  Let #TOTAL_EMPLID = 0
  Let #TOTAL_DEPOSIT = 0
  Let $GPMX_BRANCH_EC_CD = ' '
  Let $AccountEcID = ' '
  Let $payEntityDescr  = ' '
  Let $Bank_id_code = ' '
  
BEGIN-SELECT
TTT.EMPLID
TTT.GPMX_BRANCH_EC_CD
TTT.GPMX_ACCOUNT_EC_ID
SUM(TTT.GP_PMT_AMT)  &TTT.GP_PMT_AM
TTT.BRANCH_EC_CD

    ADD 1 TO #TOTAL_EMPLID
    ADD &TTT.GP_PMT_AM  TO #TOTAL_DEPOSIT  
    
    MOVE &TTT.GPMX_BRANCH_EC_CD  TO $GPMX_BRANCH_EC_CD
    MOVE &TTT.GPMX_ACCOUNT_EC_ID TO $AccountEcID
    
    if (rtrim($GPMX_BRANCH_EC_CD, ' ') = '')
      Let $GPMX_BRA = RTRIM(&TTT.BRANCH_EC_CD,' ')
    else
      Let $GPMX_BRA = $GPMX_BRANCH_EC_CD
    end-if
    
      
FROM  PS_GPMX_PAYMENT  TTT
WHERE TTT.CAL_RUN_ID   = $Cal_Run_ID
AND   TTT.PAY_ENTITY   = $payEntity
AND   TTT.GPMX_BANK_CD = $GPMX_FORMAT_BANK_DESC
AND   TTT.PMT_TYPE     = '01'
AND EXISTS (SELECT 'X'
            FROM PS_PYE_BANKACCT A,
            PS_GP_NET_DIST_DTL B
            WHERE A.EFF_STATUS = 'A'
            AND A.COUNTRY_CD   = 'MEX'
            AND A.EMPLID       = B.EMPLID
            AND A.EMPLID       = TTT.EMPLID
            AND A.ACCOUNT_ID   = B.ACCOUNT_ID
            !AND A.BANK_CD      = $GPMX_FORMAT_BANK_DESC
            [$Where_Payment]
            AND B.EFFDT = (SELECT MAX(EFFDT) FROM PS_GP_NET_DIST_DTL
                     WHERE EMPLID = B.EMPLID
                     AND EMPL_RCD = B.EMPL_RCD
                     AND RUN_TYPE = B.RUN_TYPE
                     AND EFFDT   <= $AsofToday)
            AND B.PAYMENT_MTHD = 'T'
            AND (B.RUN_TYPE = (SELECT MAX(RT.RUN_TYPE) 
                               FROM PS_GP_CAL_RUN_DTL RT 
                               WHERE CAL_RUN_ID = TTT.CAL_RUN_ID 
                               AND CALC_TYPE = 'P')
                 OR A.ACCOUNT_ID = (SELECT MAX(NETD.ACCOUNT_ID)
                                    FROM PS_GP_NET_DIST_DTL NETD,
                                    PS_GP_NET_DIST NET,
                                    PS_PYE_BANKACCT BNK
                                    WHERE NETD.EMPLID = NET.EMPLID
                                    AND NETD.EMPL_RCD = NET.EMPL_RCD
                                    AND NET.DEFAULT_IND = 'Y'
                                    AND NETD.EMPLID = A.EMPLID
                                    AND BNK.EMPLID = NETD.EMPLID
                                    AND BNK.ACCOUNT_ID = NETD.ACCOUNT_ID
                                    AND BNK.BANK_CD = A.BANK_CD)))
GROUP BY TTT.EMPLID
,TTT.GPMX_BRANCH_EC_CD
,TTT.GPMX_ACCOUNT_EC_ID
,TTT.BRANCH_EC_CD
END-SELECT
End-Procedure TOTAL-PAYMENT


!**************************************
Begin-Procedure BANORTE-Detail
#debug show 'Procedure BANORTE-Detail'
!**************************************
Let $BnteD_RegType      = 'D'
Let $BnteD_Date         = $PaymentDate
Let $BnteD_EmplID       = $emplID
Let $BnteD_Spaces       = ''
Let $BnteD_Amount       = 0
Let $BnteD_BankRecep    = '072'
Let $BnteD_AccType      = $AccountType
Let $BnteD_AccNumber    = ''
Let $BnteD_1Zero        = '0'
Let $BnteD_8Zeros       = '00000000'
Let $BnteD_Filler       = ''

!------- Get Account Type C = Checking(01) anything else is used as Debit(03)
if rtrim($BnteD_AccType, ' ') = 'C'
  Let $BnteD_AccType = '01'
else
  Let $BnteD_AccType = '03'
end-if

!------- Get Payment Amount 13 positions for integers and 2 for decimals don't use period 
!------- Example $12.45 -> 000000000001245
Move #paymentAmt to $tmp_Amount '0000000000000.00'
Let $tmp_Amount1 = substr($tmp_Amount,  1, 13)
Let $tmp_Amount2 = substr($tmp_Amount, 15,  2)
Let $BnteD_Amount = $tmp_Amount1 || $tmp_Amount2

!------ Get Account adjust to 18 positions fill left with zeros
Let $Account = substr($Account,1,18)
Move $Account to $BnteD_AccNumber '000000000000000000'

!------ Align Employee ID to right fill letfside with zeros.
Let $BnteD_EmplID = Lpad($BnteD_EmplID,10,'0')

#debug show '          $BnteD_RegType   :' $BnteD_RegType
#debug show '          $BnteD_Date      :' $BnteD_Date
#debug show '          $BnteD_EmplID    :' $BnteD_EmplID
#debug show '          $BnteD_Amount    :' $BnteD_Amount
#debug show '          $BnteD_AccType   :' $BnteD_AccType
#debug show '          $BnteD_AccNumber :' $BnteD_AccNumber

        !------------- DETAIL BANORTE
        
        WRITE 1 FROM $BnteD_RegType:1    -
                     $BnteD_Date:8       -
                     $BnteD_EmplID:10    -
                     $BnteD_Spaces:40    -
                     $BnteD_Spaces:40    -
                     $BnteD_Amount:15    -
                     $BnteD_BankRecep:3  -
                     $BnteD_AccType:2    -
                     $BnteD_AccNumber:18 -
                     $BnteD_1Zero:1      -
                     $BnteD_Spaces:1     -
                     $BnteD_8Zeros:8     -
                     $BnteD_Filler:18   
END-PROCEDURE BANORTE-Detail

!**************************************
Begin-Procedure FILL_LEADING2
!show '* FILL_LEADING2 *'
!**************************************
  Let $FieldIn = RTRIM($FieldIn,' ')
  Let $FieldIn = LTRIM($FieldIn,' ')
  Let $FieldInv = ''

  Let #CAMPO_LEN = LENGTH($FieldIn) 

  Let #SPACES = #Length - #CAMPO_LEN

  Let #CONT = 1
  WHILE #CONT <= #SPACES
      Let $FieldZero = $FieldZero || '0'
      ADD 1 TO #CONT
  END-WHILE

  Let $FieldOut = $FieldIn || $FieldZero
End-Procedure FILL_LEADING2

!**************************************
Begin-Procedure Get-CLABE-Account
#Debug show '* Interbank account data *'
!**************************************
Let $CLABE_Account  = ' '

begin-select

CCC.GPMX_CLABE           !CLABE

    MOVE &CCC.GPMX_CLABE   TO   $CLABE_Account
    #Debug show 'CLABE Account Employee ' $CLABE_Account
 
FROM  PS_GPMX_PYE_BANKAC CCC
WHERE CCC.EMPLID = $emplID
  AND CCC.ACCOUNT_ID = #AccountID
END-SELECT
End-Procedure Get-CLABE-Account


!**************************************
Begin-Procedure Get-Email-Account
#Debug show '* Email Account *'
!**************************************

Let $mail_bene = ' '

Begin-Select

EMAIL_ADDR 

  Move &EMAIL_ADDR to $mail_bene

From PS_EMAIL_ADDRESSES EMA 
Where EMA.EMPLID = $emplID
And   EMA.PREF_EMAIL_FLAG = 'Y'
End-Select

End-Procedure Get-Email-Account


!***************************** TOTAL PAYMENT *************************************

Begin-Procedure TOTAL-PAYMENT2
#Debug show 'PROCEDURE : TOTAL-PAYMENT'
#debug show '  $Cal_Run_ID            :' $Cal_Run_ID
#debug show '  $payEntity             :' $payEntity
#debug show '  $GPMX_FORMAT_BANK_DESC :' $GPMX_FORMAT_BANK_DESC ' - ' $BANK_CD_MX 

  Let #TOTAL_EMPLID = 0
  Let #TOTAL_DEPOSIT = 0
  Let $GPMX_BRANCH_EC_CD = ' '
  Let $AccountEcID = ' '

BEGIN-SELECT
TTT1.EMPLID
TTT1.GPMX_BRANCH_EC_CD
TTT1.GPMX_ACCOUNT_EC_ID
SUM(TTT1.GP_PMT_AMT)  &TTT1.GP_PMT_AM
TTT1.BRANCH_EC_CD

    ADD 1 TO #TOTAL_EMPLID
    ADD &TTT1.GP_PMT_AM  TO #TOTAL_DEPOSIT  
    
    MOVE &TTT1.GPMX_BRANCH_EC_CD  TO $GPMX_BRANCH_EC_CD
    MOVE &TTT1.GPMX_ACCOUNT_EC_ID TO $AccountEcID
    
    if (rtrim($GPMX_BRANCH_EC_CD, ' ') = '')
      Let $GPMX_BRA = RTRIM(&TTT1.BRANCH_EC_CD,' ')
    else
      Let $GPMX_BRA = $GPMX_BRANCH_EC_CD
    end-if

FROM  PS_GPMX_PAYMENT  TTT1
WHERE TTT1.CAL_RUN_ID   = $Cal_Run_ID
AND   TTT1.PAY_ENTITY   = $payEntity
AND   TTT1.GPMX_BANK_CD = $GPMX_FORMAT_BANK_DESC
AND   TTT1.PMT_TYPE     = '01'
AND EXISTS (SELECT 'X'
            FROM PS_PYE_BANKACCT A1,
            PS_GP_NET_DIST_DTL B1
            WHERE A1.EFF_STATUS = 'A'
            AND A1.COUNTRY_CD   = 'MEX'
            AND A1.EMPLID       = B1.EMPLID
            AND A1.EMPLID       = TTT1.EMPLID
            AND A1.ACCOUNT_ID   = B1.ACCOUNT_ID
            AND A1.BANK_CD      <> $GPMX_FORMAT_BANK_DESC
            AND B1.EFFDT = (SELECT MAX(EFFDT) FROM PS_GP_NET_DIST_DTL
                     WHERE EMPLID = B1.EMPLID
                     AND EMPL_RCD = B1.EMPL_RCD
                     AND RUN_TYPE = B1.RUN_TYPE
                     AND EFFDT   <= $AsofToday)
            AND B1.PAYMENT_MTHD = 'T'
            AND (B1.RUN_TYPE = (SELECT MAX(RT.RUN_TYPE) 
                               FROM PS_GP_CAL_RUN_DTL RT 
                               WHERE CAL_RUN_ID = TTT1.CAL_RUN_ID 
                               AND CALC_TYPE = 'P')
                 OR A1.ACCOUNT_ID = (SELECT MAX(NETD.ACCOUNT_ID)
                                    FROM PS_GP_NET_DIST_DTL NETD,
                                    PS_GP_NET_DIST NET,
                                    PS_PYE_BANKACCT BNK
                                    WHERE NETD.EMPLID = NET.EMPLID
                                    AND NETD.EMPL_RCD = NET.EMPL_RCD
                                    AND NET.DEFAULT_IND = 'Y'
                                    AND NETD.EMPLID = A1.EMPLID
                                    AND BNK.EMPLID = NETD.EMPLID
                                    AND BNK.ACCOUNT_ID = NETD.ACCOUNT_ID
                                    AND BNK.BANK_CD = A1.BANK_CD)))
GROUP BY TTT1.EMPLID
,TTT1.GPMX_BRANCH_EC_CD
,TTT1.GPMX_ACCOUNT_EC_ID
,TTT1.BRANCH_EC_CD
END-SELECT
End-Procedure TOTAL-PAYMENT2

begin-procedure TO_UPPER(:$in)

  let $in = rtrim($in,' ')
  let #c = 1
  let $cad = ''
  
  Let $Name_In = $in  
  
  while #c <= length($in)
  
    let $Found = 'N'
    let $Test_Char = Substr($Name_In, #c, 1)
    let #Test_Code = ascii(Upper($Test_Char))
    if (#Test_Code > 64
    and #Test_Code < 91)
      let $cad  = $cad  || Upper($Test_Char)
      let $Found = 'Y'
    end-if  
      
   if ($Found = 'N')  
     let $char_aux = substr($in,#c,1)
     let $char = lower($char_aux)
     evaluate $char
        when = 'á'
        when = 'â'
        when = 'ä'
        when = 'à'
        when = 'å'
           let $let = 'A'
           let $cad = $cad || $let           
           break
        when = 'é'
        when = 'ê'
        when = 'ë'
        when = 'è'
           let $let = 'E'
           let $cad = $cad || $let           
           break
        when = 'í'
        when = 'ï'
        when = 'î'
        when = 'ì'
           let $let = 'I'
           let $cad = $cad || $let           
           break
        when = 'ô'
        when = 'ö'
        when = 'ò'
        when = 'ó'
           let $let = 'O'
           let $cad = $cad || $let           
           break
        when = 'ü'
        when = 'û'
        when = 'ù'
        when = 'ú'
           let $let = 'U'
           let $cad = $cad || $let           
           break
        when = 'ñ'
           let $let = '@'
           let $cad = $cad || $let           
           break
        when = ' '                         
           let $let = ' '
           let $cad = $cad || $let  
        when-other
           break
     end-evaluate
    end-if
     let #c = #c + 1
  end-while
  let $in = $cad
  let $cad = ''
end-procedure

!************************************************************
!Company RFC and Account info
!************************************************************
Begin-Procedure Read-Heading-Comp
 Let $RFC_Company = ' '
 Let $DATE_DEPOSIT = ' '
 Let $AccountEcID = ' '
 Let $GPMX_BRANCH = ' '
BEGIN-SELECT DISTINCT
MXP.DEBIT_DT             !FECHA DE DEBITO
MXP.GPMX_ACCOUNT_EC_ID   !CUENTA DE CARGO
MXP.GPMX_BRANCH_EC_CD    !SUCURSAL DE BANCO (PARA BANCRECER)
MXC.RFC_ER_ID_MEX 
    MOVE &MXP.DEBIT_DT              TO   $DATE_DEPOSIT  YYYYMMDD
    MOVE &MXP.DEBIT_DT              TO   $DATE_DEPOSIT2  DD/MM/YYYY
    MOVE &MXP.DEBIT_DT              TO   $DATE_DEPOSIT3  DDMMYYYY
    MOVE &MXP.GPMX_ACCOUNT_EC_ID    TO   $AccountEcID
    MOVE &MXP.GPMX_BRANCH_EC_CD     TO   $GPMX_BRANCH
    MOVE &MXC.RFC_ER_ID_MEX         TO   $RFC_Company
        
FROM PS_GPMX_PAYMENT MXP, PS_COMPANY_TBL_MEX MXC 
  WHERE  MXP.CAL_RUN_ID   = $Cal_Run_ID 
     AND MXP.PAY_ENTITY   = $payEntity
     AND MXP.GPMX_BANK_CD = $PROC_BANK 
     AND MXP.PMT_TYPE     = '01' 
     AND MXC.EFFDT = (SELECT MAX(MXC_ED.EFFDT) FROM PS_COMPANY_TBL_MEX MXC_ED 
                       WHERE MXC.COMPANY = MXC_ED.COMPANY 
                         AND MXC_ED.EFFDT <= $AsofToday) 
     AND EXISTS (SELECT 'X' FROM PS_JOB MXJ
                 WHERE MXJ.EFFDT = (SELECT MAX(MXJ_ED.EFFDT) FROM PS_JOB MXJ_ED 
                                   WHERE MXJ.EMPLID   = MXJ_ED.EMPLID 
                                     AND MXJ.EMPL_RCD = MXJ_ED.EMPL_RCD 
                                     AND MXJ_ED.EFFDT <= $AsofToday) 
                   AND MXJ.EFFSEQ = (SELECT MAX(MXJ_ES.EFFSEQ) FROM PS_JOB MXJ_ES 
                                    WHERE MXJ.EMPLID   = MXJ_ES.EMPLID 
                                      AND MXJ.EMPL_RCD = MXJ_ES.EMPL_RCD 
                                      AND MXJ.EFFDT    = MXJ_ES.EFFDT) 
                    AND MXJ.EMPLID    = MXP.EMPLID 
                    AND MXJ.EMPL_RCD = MXP.EMPL_RCD 
                    AND MXJ.COMPANY  = MXC.COMPANY ) 

End-Select
End-Procedure


#Include 'reset.sqc'     !Reset PRINTer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'getcodta.sqc'  !Read Company Name
