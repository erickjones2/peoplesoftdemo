!************************************************************************
!  GPAUPT01:  State Payroll Tax Report                                  *
!************************************************************************
!************************************************************************
!                                                                       *
!                                                                       *
!                                                                       *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!************************************************************************
!************************************************************************
!          $Date:  2013/01/18:03:18:09                                 *
!       $Release:  HR92                                                *
!      $Revision:  101                                                 *
!                                                                       *
!  This SQR is used to format the information determined in the SPT AE  *
!  program that runs earlier in the process.                            *
!  This SQR retrieves the details stored in PS_GPAU_SPT_SUMM and        *
!  PS_GPAU_SPT_DETAIL and produces a report by State/Group/Pay Entity   *
!  and also a Summary for the entire Group.                             *
!                                                                       *
!************************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup01.sqc' !Printer and page-size initialization

#define col1 1
#define col2 8
#define col3 32
#define col4 40
#define col5 50
#define col6 60
#define col7 70

!********************************************************************
! Procedure :   Report
!********************************************************************
begin-report

  do Get-Current-DateTime
  show 'Process Starts : ' &SysDateTime
  let $Summary='Y'
  do Init-DateTime
  do Init-Number
  do Array-Init
  do Init-Report
  do Process-Main
  do Stdapi-Term

  do Get-Current-DateTime
  show 'Process Ends : ' &SysDateTime

end-report
!
!***********************************************************************
!                                                                      *
! Init-Report                                                          *
!                                                                      *
!***********************************************************************
begin-procedure Init-Report

  show 'Enter Procedure Init-report'

  move 'GPAUPT01' to $ReportID
  move 'State Payroll Tax Report' to $ReportTitle
  display $ReportTitle
  do Stdapi-Init

end-procedure
!
!***********************************************************************
!                                                                      *
! begin-heading                                                        *
!                                                                      *
!***********************************************************************
begin-heading 16

  #include 'stdhdg01.sqc'

  if $Summary = 'Y'
     print 'SUMMARY'        (+1,0) center
  else
    print 'State'            (4,{col1})
    print $State             (0,{col3})
    print $StateName         (0,{col4})
    print 'Group Entity '    (5,{col1})
    print $GroupEntity       (0,{col3})
    print $GroupEntityName   (0,{col4})
    print 'Pay Entity'       (6,{col1})
    print $PayEntity         (0,{col3})
    print $PayEntityName     (0,{col4})
    print 'Month'            (7,{col1})
    print #MM                (0,{col3}) edit 99
    print 'Year'             (8,{col1})
    print #YYYY              (0,{col3}) edit 9999

    print 'Total No. of Employees'         (10,{col1})
    print 'FT'                             (0,{col3})
    print #NumFTEmp                        (0,{col4}) edit 99999999
    print 'Other'                          (0,{col6})
    print #NumOthEmp                       (0,{col7}) edit 99999999

    print 'Gross Taxable Wages'            (12,{col1})
    print #StateGross                      (0,{COL4})  edit 99999999999.99
    print 'Deduction Entitlement'          (13,{col1})
    print #DesDed                          (0,{COL4})  edit 99999999999.99

    let #GrossTaxable = #StateGross - #DesDed
    let #GrossTaxable = round(#GrossTaxable, 2)
    print 'Amount on which tax is Payable' (14,{col1}
    print #GrossTaxable                    (0,{COL4})  edit 99999999999.99

    print 'State Payroll Tax'              (15,{col1})
    print #SPT                             (0,{col4})  edit 99999999999.99

    print 'Rebate'                         (16,{col1})
    print #Rebate                          (0,{col4})  edit 99999999999.99

    let #TaxPayable = #SPT - #Rebate
    if #TaxPayable < 0
        let #TaxPayable = 0
    end-if
    print 'Tax Payable'                    (17,{col1})
    print #TaxPayable                      (0,{col4})  edit 99999999999.99

 end-if
end-heading
!
!***********************************************************************
!                                                                      *
! begin-footing                                                        *
!                                                                      *
!***********************************************************************
begin-footing 3

  print 'Note: This report is not a complete representation of Payroll Tax liabilities.' (0,1)
  print ' Other payments and' (0,+1)
  print '      earnings that are administered outside the PeopleSoft Payroll should be' (+1,1)
  print 'included in any returns '  (0,+1)
  print '      submitted to the State Revenue Offices.' (+1,1)

end-footing
!
!***********************************************************************
!                                                                      *
! Array-Init                                                           *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Description:  Define and populate an Array to hold the headings for  *
!               the different types of Earnings/Deductions.            *
!                                                                      *
!***********************************************************************
begin-procedure Array-Init

  show 'Array-Init'

  #Define MaxReportType 6
  create-array name=HeadingAry size={MaxReportType}
            field=ReportType:Char
            field=Heading:Char

  put 'ERN'      into HeadingAry(0) ReportType
  put 'EXPN'     into HeadingAry(1) ReportType
  put 'XERN'     into HeadingAry(2) ReportType
  put 'TDED'     into HeadingAry(3) ReportType
  put 'DED'      into HeadingAry(4) ReportType
  put 'TERM'     into HeadingAry(5) ReportType

  put 'Taxable Earnings         '     into HeadingAry(0) Heading
  put 'Taxable Expenses         '     into HeadingAry(1) Heading
  put 'Exempt Earnings          '     into HeadingAry(2) Heading
  put 'Taxable Deductions       '     into HeadingAry(3) Heading
  put 'Exempt Deductions        '     into HeadingAry(4) Heading
  put 'Non-Taxable Terminations '     into HeadingAry(5) Heading

end-procedure
!
!***********************************************************************
!                                                                      *
! Process-Main                                                         *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Description:  This is the main processing procedure.  It will loop   *
!               through the Summary table and retrieve the details for *
!               each State/Group Pay Entity/Pay Entity combination and *
!               process them in turn.  From here procedure Process-Pay-*
!               Entity is called for each Pay Entity in the Group/State*
!                                                                      *
!***********************************************************************
begin-procedure Process-Main

  show 'Process-Main'

  let $Summary = 'N'
  do Process-Detail

  let $Summary = 'Y'
  do Process-Summary
end-procedure

begin-procedure Process-Detail
begin-select
SUMM.PAYROLL_STATE_AUS  () on-break print=never level=1
                        save=$State
                          show 'State=' $State
STATE.DESCR             &StateName
                          let $StateName=&StateName
SUMM.GPAU_GRP_ENT       () on-break print=never level=2
                        save=$GroupEntity
PYENT1.DESCR            &GroupEntityName
                          let $GroupEntityName=&GroupEntityName
SUMM.PAY_ENTITY         () on-break print=never level=3
                          after=Process-Pay-Entity
                          save=$PayEntity
PYENT2.DESCR            &PayEntityName
                          let $PayEntityName=&PayEntityName
SUMM.GPAU_YEAR          &YYYY
                          let #YYYY=&YYYY
SUMM.GPAU_MONTH         &MM
                          let #MM=&MM
SUMM.GPAU_NUM_FT_EMP    &NumFTEmp
                          let #NumFTEmp=&NumFTEmp
SUMM.GPAU_NUM_OTH_EMP   &NumOthEmp
                          let #NumOthEmp=&NumOthEmp
SUMM.GPAU_SPT_ST_GROSS  &StateGross
                          let #StateGross=&StateGross
SUMM.GPAU_DESGNATED_DED &DesDed
                          let #DesDed=&DesDed
SUMM.GPAU_STATE_SPT     &SPT
                          let #SPT=&SPT
SUMM.GPAU_SPT_REBATE    &Rebate
                          let #Rebate=&Rebate
FROM PS_GPAU_SPT_SUMM SUMM, PS_STATE_NAMES_TBL STATE, PS_GP_PYENT PYENT1, PS_GP_PYENT PYENT2
WHERE SUMM.PAYROLL_STATE_AUS=STATE.STATE
AND STATE.COUNTRY='AUS'
AND SUMM.GPAU_GRP_ENT=PYENT1.PAY_ENTITY
AND SUMM.PAY_ENTITY=PYENT2.PAY_ENTITY
ORDER BY SUMM.PAYROLL_STATE_AUS,SUMM.GPAU_GRP_ENT,SUMM.PAY_ENTITY
end-select
end-procedure
!
!***********************************************************************
!                                                                      *
! Process-Pay-Entity                                                   *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Retrieve and process the details for the Pay Entity.   *
!               Each report type is processed (Taxable Earnings,       *
!               Non-Taxable Deductions, etc) and printed as found on   *
!               the detail record.  The description for each retrieved *
!               from the Array as defined earlier.
!***********************************************************************
begin-procedure Process-Pay-Entity

  show 'Process-Pay-Entity'

let $PrevReportType = ' '
begin-select
DETAIL.GPAU_SPT_RPT_TYPE () on-break print=never level=4
                            after=Print-Totals
                            save=$ReportType
   let $Heading = ''
   let #i=0
   while #i < 6 and $Heading = ''
     get $CheckType from HeadingAry(#i) ReportType
       if $CheckType = rtrim($ReportType, ' ')
         get $Heading from HeadingAry(#i) Heading
       else
         let #i = #i + 1
       end-if
   end-while

   if $PrevReportType = ' '
   or $ReportType <> $PrevReportType
     let $PrevReportType=$ReportType
     print $Heading (+3,{col1})
     let #addline = 2
     let #PinCountTotal = 0
     let #PinAmountTotal = 0
   end-if
DETAIL.PIN          () on-break print=never level=5
                       after= Print-Line
                      save=$Pin
DETAIL.PIN_NM            &PinName
                            let $PinName=&PinName
DETAIL.GPAU_PIN_NUM_CNT  &PinCount
                            let #PinCount=&PinCount
DETAIL.GPAU_PIN_NUM_AMT  &PinAmount
                            let #PinAmount=&PinAmount
FROM PS_GPAU_SPT_DETAIL DETAIL
WHERE DETAIL.PAYROLL_STATE_AUS=$State
AND DETAIL.GPAU_GRP_ENT=$GroupEntity
AND DETAIL.PAY_ENTITY=$PayEntity
AND DETAIL.GPAU_YEAR=#YYYY
AND DETAIL.GPAU_MONTH=#MM
ORDER BY DETAIL.GPAU_SPT_RPT_TYPE, DETAIL.PIN
end-SELECT
new-page
end-procedure
!
!***********************************************************************
!                                                                      *
! Print-Line                                                           *
!                                                                      *
! Called By:    Process-Pay-Entity                                     *
!                                                                      *
! Description:  Prints the details (total number and total amount) for *
!               each of the different elements found in the report     *
!               type.                                                  *
!***********************************************************************
begin-procedure Print-Line
!    print $Pin             (+#addline,{col1})
    print $PinName         (+#addline,{col2})
    print #PinCount        (0,{col5}) edit 999999
    print #PinAmount       (0,{col7}) edit 99999999999.99
    add #PinCount to #PinCountTotal
    add #PinAmount to #PinAmountTotal
    let #addline = 1
end-procedure
!
!***********************************************************************
!                                                                      *
! Print-Totals                                                         *
!                                                                      *
! Called By:    Process-Pay-Entity                                     *
!                                                                      *
! Description:  Prints the totals for the Report Type.                 *
!***********************************************************************
begin-procedure Print-Totals
    print 'Total'                 (+1,{col3})
    print #PinCountTotal          (0,{col5}) edit 999999
    print #PinAmountTotal         (0,{col7}) edit 99999999999.99
end-procedure
!
!***********************************************************************
!                                                                      *
! Process-Summary                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints the report summary for the entire group, at the *
!               state level.                                           *
!***********************************************************************
begin-procedure Process-Summary

  let $Summary = 'Y'
  print ' '               (+2,20,5)
  print 'Gross Taxable'   (+0,30,15)

  print 'State'           (+1,20,5)
  print '    Wages'       (+0,30,15)
  print 'Deductions'      (+0,50,15)
  print 'Rebate'          (+0,77,15)
  print 'Tax Payable'     (+0,93,15)

  do Get-State-Summary
  do Get-Totals

  print 'Total'      (+2,20)
  print #TOTAL_GROSS (+0,30,15) edit 999999999.99
  print #TOTAL_TAX   (+0,90,15) edit 999999999.99

end-procedure
!
!***********************************************************************
!                                                                      *
! Get-State-Summary                                                    *
!                                                                      *
! Called By:    Process-Summary                                        *
!                                                                      *
! Description:  Retrieve the Summary details for the State.            *
!***********************************************************************
begin-procedure Get-State-Summary
begin-select
A.PAYROLL_STATE_AUS  () on-break Print=Never after=Print-Summary-Line save=$STATE
SUM(A.GPAU_SPT_ST_GROSS) &SUM1
SUM(A.GPAU_DESGNATED_DED) &SUM2
SUM(A.GPAU_STATE_SPT) &SUM3
SUM(A.GPAU_SPT_REBATE) &SUM4
   Let #STATE_GROSS = round(&SUM1, 2)
   Let #STATE_DED = round(&SUM2, 2)
   Let #STATE_SPT = round(&SUM3, 2)
   Let #STATE_REBATE = round(&SUM4, 2)
   Let #STATE_TAX_PAYABLE = #STATE_SPT - #STATE_REBATE
   if  #STATE_TAX_PAYABLE < 0
      let #STATE_TAX_PAYABLE = 0
   end-if
FROM PS_GPAU_SPT_SUMM A
GROUP BY A.PAYROLL_STATE_AUS
end-select
end-procedure
!
!***********************************************************************
!                                                                      *
! Get-Totals                                                           *
!                                                                      *
! Called By:    Process-Summary                                        *
!                                                                      *
! Description:  Retrieve Group Totals.                                 *
!***********************************************************************
begin-procedure Get-Totals
begin-select
SUM(A.GPAU_SPT_ST_GROSS) &SUM5
SUM(A.GPAU_STATE_SPT) &SUM6
SUM(A.GPAU_SPT_REBATE) &SUM7
   Let #TOTAL_GROSS = round(&SUM5, 2)
   Let #STATE_SPT = round(&SUM6, 2)
   Let #STATE_REBATE = round(&SUM7, 2)
   Let #TOTAL_TAX = #STATE_SPT - #STATE_REBATE
FROM PS_GPAU_SPT_SUMM A
end-select
end-procedure
!
!***********************************************************************
! Print-Summary-Line                                                   *
!                                                                      *
!                                                                      *
! Called By:    Get-State-Summary                                      *
!                                                                      *
! Description:  Print the State Summary details.                       *
!***********************************************************************
begin-procedure Print-Summary-Line

    print $State               (+2,20,5)
    print #STATE_GROSS         (+0,30,15) edit 999999999.99
    print #STATE_DED           (+0,50,15) edit 999999999.99
    print #STATE_REBATE        (+0,70,15) edit 999999999.99
    print #STATE_TAX_PAYABLE   (+0,90,15) edit 999999999.99
end-procedure


#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Routines to Update Run Status
