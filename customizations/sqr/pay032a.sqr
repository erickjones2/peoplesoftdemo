!***********************************************************************
!  PAY032A.SQR: EMPLOYEE FICA THRESHOLD LIMIT REPORT                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  31906945                                            !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set Database Environment
#include 'setup31.sqc'   !Printer and page-size initialization

#define max_gross 104000



begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY032A' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Pay032A_ReportTitle  to  $ReportTitle

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Payroll-Report-Initialization

end-procedure


begin-heading 9

  #Include 'stdhtrpi.sqc'
  #Include 'stdhtr06.sqc'

  print $Pay032A_RunID           (+1,1)
  print &A.Run_Id                (0,13)
  print $Pay032A_Empl            (+2,13)
  print $Pay032A_Wages_Subject   (0,51)
  print $Pay032A_Paycheck        (0,68)
  print $Pay032A_Sep             (0,80)
  print $Pay032A_EmpId           (+1,1)
  print $Pay032A_Rcd             (0,13)
  print $Pay032A_Name            (0,19)
  print $Pay032A_To_Threshold    (0,51)
  print $Pay032A_Page            (0,66)
  print $Pay032A_Line            (0,73)
  print $Pay032A_Chk             (0,80)
  print $Pay032A_Msg             (0,85)

end-heading


begin-procedure Report-Translation

  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('PAY032A', 'REPORT_TITLE',  $Pay032A_ReportTitle,   #dummy_width)
  do Get_Field_Information ('PAY032A', 'RUNID',         $Pay032A_RunID,         #dummy_width)
  do Get_Field_Information ('PAY032A', 'EMPID',         $Pay032A_EmpId,         #dummy_width)
  do Get_Field_Information ('PAY032A', 'EMPL',          $Pay032A_Empl,          #dummy_width)
  do Get_Field_Information ('PAY032A', 'RCD',           $Pay032A_Rcd,           #dummy_width)
  do Get_Field_Information ('PAY032A', 'NAME',          $Pay032A_Name,          #dummy_width)
  do Get_Field_Information ('PAY032A', 'WAGES_SUBJECT', $Pay032A_Wages_Subject, #dummy_width)
  do Get_Field_Information ('PAY032A', 'TO_THRESHOLD',  $Pay032A_To_Threshold,  #dummy_width)
  do Get_Field_Information ('PAY032A', 'PAYCHECK',      $Pay032A_Paycheck,      #dummy_width)
  do Get_Field_Information ('PAY032A', 'PAGE',          $Pay032A_Page,          #dummy_width)
  do Get_Field_Information ('PAY032A', 'LINE',          $Pay032A_Line,          #dummy_width)
  do Get_Field_Information ('PAY032A', 'SEP',           $Pay032A_Sep,           #dummy_width)
  do Get_Field_Information ('PAY032A', 'CHK',           $Pay032A_Chk,           #dummy_width)
  do Get_Field_Information ('PAY032A', 'MSG',           $Pay032A_Msg,           #dummy_width)
  do Get_Field_Information ('PAY032A', 'MESSAGE1',      $Pay032A_Message1,      #dummy_width)
  do Get_Field_Information ('PAY032A', 'END_REPORT',    $Pay032A_end_report,    #dummy_width)

end-procedure


begin-procedure Report

  do Process-Main

end-procedure


begin-procedure Process-Main

  move 0  to  #printlines

begin-SELECT
A.COMPANY    () on-break print=never  level=1  procedure=New-Header
A.PAY_END_DT () on-break print=never  level=2  procedure=New-Header
A.PAYGROUP   () on-break print=never  level=3  procedure=New-Header
A.RUN_ID
B.OFF_CYCLE
B.PAGE_NUM
B.LINE_NUM
B.SEPCHK
B.EMPLID
B.EMPL_RCD
B.NAME
P.PAY_FREQUENCY
FQ.FREQUENCY_TYPE

  move 'N'  to $Limit_Exceeded_EE

  let $Company    = &A.COMPANY
  let $Paygroup   = &A.PAYGROUP
  let $Pay_End_Dt = &A.PAY_END_DT
  let $PayEndDate = &A.PAY_END_DT

  do Get-FICA-Txgrs-Max-Gross

  move 'N'  to $Limit_Exceeded_EE
  do Check-FICA-EE-Txgrs

  if $Limit_Exceeded_EE = 'Y'

    move &B.OFF_CYCLE to $OffCycle
    move &B.PAGE_NUM  to #Page_Num
    move &B.LINE_NUM  to #Line_Num
    move &B.SEPCHK    to #SepChk
    move &B.EMPLID    to $Emplid
    do Format-Number(&B.EMPL_RCD, $Empl_Rcd, '999')
    let $Name = substr(&B.NAME, 1, 30)

    do Format-Number(#TxGrs_Cur, $TxGrs_Cur, 'b9,999,999.99')

    let $FieldName  = 'FREQUENCY_TYPE'
    let $FieldValue = &FQ.FREQUENCY_TYPE
    do Read-Translate-Table
    let $Prt_Pay_Frequency = substr($XlatLongName, 1, 11)

    let $Message = $Prt_Pay_Frequency || ' ' || $Pay032A_Message1

    add 1  to  #printlines
    do Print-Error-Message

  end-if


FROM  PS_PAY_CALENDAR A,
      PS_PAY_CHECK B,
      PS_PAYGROUP_TBL P,
      PS_FREQUENCY_TBL FQ
WHERE [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND B.PAYCHECK_STATUS ='C'
  AND A.COMPANY = B.COMPANY
  AND A.PAYGROUP = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND EXISTS
      (SELECT 'X'
         FROM PS_PAY_EARNINGS C
        WHERE C.COMPANY = B.COMPANY
          AND C.PAYGROUP = B.PAYGROUP
          AND C.PAY_END_DT = B.PAY_END_DT
          AND C.OFF_CYCLE = B.OFF_CYCLE
          AND C.PAGE_NUM = B.PAGE_NUM
          AND C.LINE_NUM = B.LINE_NUM
          AND C.SEPCHK = B.SEPCHK
          AND C.PAY_LINE_STATUS = 'C'
          AND C.FICA_STATUS_EE IN ('J', 'K'))
  AND A.COMPANY    = P.COMPANY
  AND A.PAYGROUP   = P.PAYGROUP
  AND P.EFFDT            =
      (SELECT MAX(EFFDT)
         FROM PS_PAYGROUP_TBL
        WHERE COMPANY    = A.COMPANY
          AND PAYGROUP   = A.PAYGROUP
          AND EFF_STATUS = 'A'
          AND EFFDT     <= A.PAY_END_DT)
  AND P.PAY_FREQUENCY    = FQ.FREQUENCY_ID
  AND FQ.EFF_STATUS       = 'A'
  AND FQ.EFFDT            =
    (SELECT MAX(FQ1.EFFDT)
       FROM PS_FREQUENCY_TBL FQ1
      WHERE FQ1.FREQUENCY_ID   = FQ.FREQUENCY_ID
        AND FQ1.EFF_STATUS     = FQ.EFF_STATUS
        AND FQ1.EFFDT         <= A.PAY_END_DT)
ORDER BY B.COMPANY,
         B.PAY_END_DT,
         B.PAYGROUP,
         B.EMPLID,
         B.SEPCHK,
         B.PAGE_NUM,
         B.LINE_NUM
end-SELECT

      print $Pay032A_end_report (+3,1) center

end-procedure


begin-procedure Get-FICA-Txgrs-Max-Gross

  let #Max_Gross = {Max_Gross}
  let $Pay_Frequency = rtrim(&P.PAY_FREQUENCY, ' ')
  evaluate $Pay_Frequency
    when = 'W'       ! Weekly
      let #Max_Gross = round(#Max_Gross / 52, 2)
    when = 'B'       ! Biweekly
      let #Max_Gross = round(#Max_Gross / 26, 2)
    when = 'S'       ! Semi-Monthly
      let #Max_Gross = round(#Max_Gross / 24, 2)
    when = 'M'       ! Monthly
      let #Max_Gross = round(#Max_Gross / 12, 2)
  end-evaluate

end-procedure


begin-procedure Check-FICA-EE-Txgrs

begin-SELECT
SUM(PT.TXGRS_CUR)   &PT_Txgrs_Cur

  let #TxGrs_Cur = &PT_Txgrs_Cur * -1

  if #Max_Gross > 0
    and #TxGrs_Cur  >=  #Max_Gross
    move 'Y'  to $Limit_Exceeded_EE
  end-if

FROM  PS_PAY_TAX PT
WHERE PT.COMPANY         = $Company
  AND PT.PAYGROUP        = $PayGroup
  AND PT.PAY_END_DT      = $Pay_End_Dt
  AND PT.OFF_CYCLE       = &B.OFF_CYCLE
  AND PT.PAGE_NUM        = &B.PAGE_NUM
  AND PT.LINE_NUM        = &B.LINE_NUM
  AND PT.SEPCHK          = &B.SEPCHK
  AND PT.STATE = '$U'
  AND PT.TAX_CLASS IN ('8A', '9A')
GROUP BY PT.COMPANY, PT.PAYGROUP, PT.PAY_END_DT, PT.OFF_CYCLE
ORDER BY PT.COMPANY, PT.PAYGROUP, PT.PAY_END_DT, PT.OFF_CYCLE
end-SELECT
end-procedure


begin-procedure New-Header

  if #printlines > 0
     new-page
  end-if

end-procedure


begin-procedure Print-Error-Message

  print $Emplid                 (+1,1)
  print $Empl_Rcd               (0,13)
  print $Name                   (0,19)
  print $TxGrs_Cur              (0,51)
  print #Page_Num               (0,66)  edit 99999
  print #Line_Num               (0,73)  edit 999
  print #SepChk                 (0,80)  edit b99
  print $Message                (0,85)

end-procedure



#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
