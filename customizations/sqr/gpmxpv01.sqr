!***********************************************************************
!GPMXPV01. Provisions Report                                           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2014, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2014/07/02:13:24:31                                 *
!       $Release:  HR92                                                *
!      $Revision:  102                                                 *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Report-Translation
  do Init-Report
  do Select-Parameters
  do Print-GTotal

  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
  do Reset
end-report


begin-procedure Init-Report
#debug show '** Init-Report **'
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'GPMXPV01' to $ReportID
  move 'Ver. 2014-PUM8.1'  to $ReportVersion 
  let $ReportTitle = $Rep_Title
  display $ReportTitle
  display $ReportVersion 
  display ' ' 
end-procedure Init-Report


begin-heading 07
  print ' '               (1,1)
  print 'PeopleSoft'      () center
  print $Report           (+1,1)
  print $ReportID         ( ,15)
  uppercase $ReportTitle
  print $Rep_Title        () center
  let #RptCol = {ColR}  - 2
  let #RptH = #RptCol + 8
  print $Page             ( ,#RptCol)
  page-number             ( ,#RptH)
  print $Date             (+1,#RptCol)
  print $ReportDate       ( ,#RptH)

  print $From             ( ,1)
  do Format-DateTime($BgnDt, $Out,{DEFDATE}, '','')
  print $out              (,15)
  print $To               ( ,+1)
  do Format-DateTime($EndDt, $out,{DEFDATE}, '', '')
  print $out              ( ,+1)

  print $Time             (+1,#RptCol)
  date-time               () HH:MM:SS  &ReportTime
  print &ReportTime       ( ,#RptH)

  Print $H_Company        (,1)
  Print $Company          (,15)
  Print $CompanyName      (,20)

  print '='               (+1,1,173) fill
  print $H_Emplid         (+1,1)
  print $H_Name           ( ,40)
  print $H_Descr          ( ,90)
  print $H_Amount         ( ,159)
  Print '='               (+1,1,173) fill
end-heading 07


begin-procedure Select-Parameters
  let $max_date = datenow()
  let $max_date  = edit($max_date,'YYYY-MM-DD')
  do Convert-From-DTU-Date($max_date,$max_date)
  let $Deptid_old = ' '
begin-SELECT
PROV.OPRID
PROV.RUN_CNTL_ID
PROV.GP_PAYGROUP
PROV.BALANCE_YEAR
PROV.MONTHCD
PROV.COMPANY
PROV.DEPTID
PROV.DETAILS_IND

  print ' ' (+1,0)

  let $Gp_paygroup = &PROV.GP_PAYGROUP
  let #Year        = &PROV.BALANCE_YEAR
  let #Month       = &PROV.MONTHCD
  let $Company     = &PROV.COMPANY
  let $Deptid      = &PROV.DEPTID
  let $Details     = &PROV.DETAILS_IND


  let $com = ''''
  if $Details = 'Y'
     let $Deptid =  rtrim($Deptid,' ')
     if $Deptid = ''
        let $Dept = ''
     else
        let $Dept = 'AND JJJ.DEPTID = '|| $com || $Deptid || $com
     end-if

     let $Gp_paygroup =  rtrim($Gp_paygroup,' ')
     if $Gp_paygroup = ''
        let $Gpaygroup = ''
     else
        let $Gpaygroup = 'AND AAA.GP_PAYGROUP = '|| $com || $Gp_paygroup || $com
     end-if
  else
     let $H_Emplid = ''
     let $Deptid =  rtrim($Deptid,' ')
     if $Deptid = ''
        let $Dept = ''
     else
        let $Dept = 'AND JJJ1.DEPTID = '|| $com || $Deptid || $com
     end-if
     let $Gp_paygroup =  rtrim($Gp_paygroup,' ')
     if $Gp_paygroup = ''
        let $Gpaygroup = ''
     else
        let $Gpaygroup = 'AND AAA1.GP_PAYGROUP = '|| $com || $Gp_paygroup || $com
     end-if
  end-if

  let #AsofYear  = #Year
  let #AsofMonth = #Month

  if mod(#AsofYear, 4) = 0
      let #bis = 1
    else
      let #bis = 0
  end-if

  let $AsofYear = edit(#AsofYear,'9999')
  let $AsofMonth = edit(#AsofMonth,'09')

  let $BgnDt = $AsofYear || '-' || $AsofMonth || '-' || '01'

  Evaluate $AsofMonth
        When = '01'
        When = '03'
        When = '05'
        When = '07'
        When = '08'
        When = '10'
        When = '12'
                Let $EndDt =  $AsofYear || '-' || $AsofMonth || '-' || '31'
                Break
        When = '02'
                if #bis = 1
                        let $EndDt = $AsofYear || '-' || $AsofMonth || '-' || '29'
                else
                        let $EndDt = $AsofYear || '-' || $AsofMonth || '-' || '28'
                end-if
                Break
        When = '04'
        When = '06'
        When = '09'
        When = '11'
                let $EndDt =  $AsofYear || '-' || $AsofMonth || '-' || '30'
                Break
  End-Evaluate

  do Convert-From-DTU-Date($BgnDt,$BgnDt)
  do Convert-From-DTU-Date($EndDt,$EndDt)
  let #ban_1 = 0

  let $AsOfDate = $max_date
  do Get-Company-Data-Mex
  do Select-Sfx
  do Select-Earning
  do Select-Deduction
  #debug show '$dept '  $Dept
  #debug show '$Gpaygroup: ' $Gpaygroup

  if $Details = 'Y'
     if $All_pin_acum <> ''
        let $Pin_num_all = ' AND AAA.PIN_NUM IN '|| '(' || $All_pin_acum  || ')'
        #debug show '$Pin_num_all: ' $Pin_num_all
        do Select-Run
     end-if
  else
     if $All_pin_acum <> ''
        let $Pin_num_all = ' AND AAA1.PIN_NUM IN '|| '(' || $All_pin_acum  || ')'
        #debug show '$Pin_num_all: ' $Pin_num_all
        do Select-Run_Tot
     end-if  
  end-if

FROM PS_GPMX_RC_PROV PROV
WHERE PROV.OPRID       = $Prcs_OprID
AND   PROV.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters


!***************************** Select-Earning ***************************************
begin-procedure Select-Earning
#debug show 'Select-Earning'
  let #Pin_num = 0
begin-select
ERN.PIN_ERN_NUM
  let #Pin_num =  &ERN.PIN_ERN_NUM
  #debug show '#Pin_num: '  #Pin_num
  
  do Select-Pin_nm

FROM PS_GPMX_PROV_ERN ERN

WHERE ERN.OPRID = $Prcs_OprID
AND ERN.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Earning


!***************************** Select-Deduction ***************************************
begin-procedure Select-Deduction
  let #Pin_num = 0
begin-select
DED.PIN_DED_NUM
  let #Pin_num =  &DED.PIN_DED_NUM
  do Select-Pin_nm

FROM PS_GPMX_PROV_DED DED

WHERE DED.OPRID = $Prcs_OprID
AND DED.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Deduction


!***************************** Select-Sfx ***************************************
begin-procedure Select-Sfx
  let $Seperator = &SSS.SUFFIX_SEPARATOR
  let $Amt_sfx   = &SSS.MTD_AMT_SFX
begin-select
SSS.SUFFIX_SEPARATOR
SSS.MTD_AMT_SFX

  let $Seperator = &SSS.SUFFIX_SEPARATOR
  let $Amt_sfx   = &SSS.MTD_AMT_SFX
  let $Seperator = LTRIM($Seperator,' ')
  let $Amt_sfx   = LTRIM($Amt_sfx,' ')

FROM PS_GP_SUFFIX  SSS
WHERE COUNTRY = 'MEX'
end-select
end-procedure Select-Sfx


!***************************** Select-Pin_nm *************************************
begin-procedure Select-Pin_nm
#debug show 'Select-Pin_nm'
#debug show '#Pin_num. ' #Pin_num
begin-select
PPP.PIN_NUM
PPP.PIN_NM
PPP.PIN_TYPE
  let $Pin_nm   =  &PPP.PIN_NM
  let $Pin_nm   =  RTRIM($Pin_nm,' ')
  let $Pin_name = $Pin_nm || $Seperator || $Amt_sfx
  
  #debug show '$Pin_name: '  $Pin_name
  
  let $Pin_Type = &PPP.PIN_TYPE

  do Select-Pin_num

FROM PS_GP_PIN PPP
WHERE PIN_NUM = #Pin_num
end-select
end-procedure Select-Pin_nm


!***************************** Select-Pin_num *************************************
begin-procedure Select-Pin_num
#debug show 'Select-Pin_num'
begin-select
PNN.PIN_NUM
  let #Pin_num_acu  = &PNN.PIN_NUM
  let $Pin_num_acu  = edit(#Pin_num_acu,'99999999')
  let $Pin_num_acu  = ltrim($Pin_num_acu,' ')

  let $All_pin_acum = $All_pin_acum || ',' || $Pin_num_acu
  let $All_pin_acum = rtrim(ltrim($All_pin_acum,','),' ')

FROM PS_GP_PIN PNN
WHERE PNN.PIN_NM = $Pin_name
end-select
end-procedure Select-Pin_num


!***************************** Select-Run ***************************************
begin-procedure Select-Run
!********************************************************************************
begin-select
JJJ.COMPANY
JJJ.DEPTID      () ON-BREAK level=1 print=never before=Print-Deptid after=Print-Total
AAA.GP_PAYGROUP () ON-BREAK level=2 print=never before=Print-Paygroup
AAA.EMPLID      () ON-BREAK level=3 print=never before=Print-Name
CCC.NAME_PSFORMAT
AAA.PIN_NUM     () ON-BREAK level=4 print=never before=Print-Pin-num after=Select-Descr
sum(AAA.CALC_RSLT_VAL) &acum_amount1

  move &JJJ.COMPANY        to  $Company
  move &JJJ.DEPTID         to  $Deptid
  move &AAA.GP_PAYGROUP    to  $Gp_paygroup
  move &AAA.EMPLID         to  $Emplid
  move &CCC.NAME_PSFORMAT  to  $Name
  move &AAA.PIN_NUM        to  #Pin_num
  move &acum_amount1       to  #Amount

  do Print-Amount

FROM PS_GP_RSLT_ACUM AAA, PS_JOB JJJ, PS_PERSON_NAME CCC
     , PS_GP_CALENDAR CAL, PS_GP_RUN_TYPE TYP 
WHERE AAA.EMPLID  = JJJ.EMPLID
AND AAA.EMPLID = CCC.EMPLID
AND JJJ.EFFDT =  (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE JJJ.EMPLID = A_ED.EMPLID
          AND JJJ.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $max_date)
AND JJJ.EFFSEQ = (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE JJJ.EMPLID = A_ES.EMPLID
          AND JJJ.EMPL_RCD = A_ES.EMPL_RCD
          AND JJJ.EFFDT = A_ES.EFFDT)
AND JJJ.COMPANY = $Company
[$Dept]
[$Gpaygroup]
[$Pin_num_all]
AND AAA.ACM_FROM_DT BETWEEN $BgnDt AND $EndDt
AND AAA.ACM_THRU_DT <= $EndDt
AND CAL.CAL_ID = AAA.CAL_ID
AND CAL.RUN_TYPE = TYP.RUN_TYPE
AND TYP.CALC_TYPE <> 'A'
AND AAA.SLICE_BGN_DT = (SELECT MAX( EEE.SLICE_BGN_DT) FROM PS_GP_RSLT_ACUM EEE
                          WHERE  EEE.EMPLID   = AAA.EMPLID
                            AND  EEE.EMPL_RCD = AAA.EMPL_RCD
                            AND  EEE.GP_PAYGROUP = AAA.GP_PAYGROUP
                            AND  EEE.SLICE_BGN_DT <= $EndDt ) 
GROUP BY JJJ.COMPANY, JJJ.DEPTID, AAA.GP_PAYGROUP, AAA.EMPLID, CCC.NAME_PSFORMAT, AAA.PIN_NUM
ORDER BY JJJ.COMPANY, JJJ.DEPTID, AAA.GP_PAYGROUP, AAA.EMPLID, AAA.PIN_NUM 
end-select
end-procedure Select-Run


!***************************** Select-Run_Tot ***************************************
begin-procedure Select-Run_Tot
#debug show '** Select-Run_Tot **'
begin-select
JJJ1.COMPANY
JJJ1.DEPTID             () ON-BREAK print=never level=1 before=Print-Deptid after=Print-Total
AAA1.GP_PAYGROUP        () ON-BREAK level=2 print=never before=Print-Paygroup
AAA1.PIN_NUM            () ON-BREAK level=3 print=never before=Print-Pin-num after=Select-Descr
sum(AAA1.CALC_RSLT_VAL) &acum_amount
  move &JJJ1.COMPANY        to  $Company
  move &JJJ1.DEPTID         to  $Deptid
  move &AAA1.GP_PAYGROUP    to  $Gp_paygroup
  move &AAA1.PIN_NUM        to  #Pin_num
  move &acum_amount         to  #Amount

  do Print-Amount

FROM PS_GP_RSLT_ACUM AAA1, PS_JOB JJJ1, PS_PERSON_NAME CCC1
     , PS_GP_CALENDAR CAL1, PS_GP_RUN_TYPE TYP1 
WHERE AAA1.EMPLID  = JJJ1.EMPLID
AND AAA1.EMPLID = CCC1.EMPLID
AND JJJ1.EFFDT =  (SELECT MAX(A_ED1.EFFDT) FROM PS_JOB A_ED1
        WHERE JJJ1.EMPLID = A_ED1.EMPLID
          AND JJJ1.EMPL_RCD = A_ED1.EMPL_RCD
          AND A_ED1.EFFDT <= $max_date)
AND JJJ1.EFFSEQ = (SELECT MAX(A_ES1.EFFSEQ) FROM PS_JOB A_ES1
        WHERE JJJ1.EMPLID = A_ES1.EMPLID
          AND JJJ1.EMPL_RCD = A_ES1.EMPL_RCD
          AND JJJ1.EFFDT = A_ES1.EFFDT)
AND JJJ1.COMPANY = $Company
[$Dept]
[$Gpaygroup]
[$Pin_num_all]
AND AAA1.ACM_FROM_DT BETWEEN $BgnDt AND $EndDt
AND AAA1.ACM_THRU_DT <= $EndDt
AND CAL1.CAL_ID = AAA1.CAL_ID
AND CAL1.RUN_TYPE = TYP1.RUN_TYPE
AND TYP1.CALC_TYPE <> 'A'
AND AAA1.SLICE_BGN_DT = (SELECT MAX( EEE1.SLICE_BGN_DT) FROM PS_GP_RSLT_ACUM EEE1
                          WHERE  EEE1.EMPLID   = AAA1.EMPLID
                            AND  EEE1.EMPL_RCD = AAA1.EMPL_RCD
                            AND  EEE1.GP_PAYGROUP = AAA1.GP_PAYGROUP
                            AND  EEE1.SLICE_BGN_DT <= $EndDt ) 
GROUP BY JJJ1.COMPANY, JJJ1.DEPTID, AAA1.GP_PAYGROUP, AAA1.PIN_NUM
ORDER BY JJJ1.DEPTID, AAA1.GP_PAYGROUP, AAA1.PIN_NUM
end-select
end-procedure Select-Run_Tot


!***************************** Print-Deptid ***************************************
begin-procedure Print-Deptid
  if $Details = 'Y'
     print $H_Department            (+1,1) bold
     print &JJJ.DEPTID              ( ,15) bold
  else
     print $H_Department            (+1,1) bold
     print &JJJ1.DEPTID             ( ,15) bold
  end-if
end-procedure Print-Deptid


!***************************** Print-Paygroup ***************************************
begin-procedure Print-Paygroup
  if $Details = 'Y'
     print $H_Paygroup              (+1,1) bold
     print &AAA.GP_PAYGROUP         ( ,15) bold
  else
     print $H_Paygroup              (+1,1) bold
     print &AAA1.GP_PAYGROUP        ( ,15) bold
  end-if
end-procedure Print-Paygroup


!***************************** Print-Pin-num ***************************************
begin-procedure Print-Pin-num
#debug show '** Print-Pin-num **'
  if $Details = 'Y'
     let #Pin_num3 = &AAA.PIN_NUM
     let $Pin_num3 = edit(#Pin_num3,'99999999')
     let $Pin_num3 = ltrim($Pin_num3,' ')
     do Select-Pin_name
     print $Pin_name_h             (+1,40)
  else
     let #Pin_num3 = &AAA1.PIN_NUM
     let $Pin_num3 = edit(#Pin_num3,'99999999')
     let $Pin_num3 = ltrim($Pin_num3,' ')
     do Select-Pin_name
     print $Pin_name_h             (+1,40)
  end-if
end-procedure Print-Pin-num


!***************************** Select-Descr ***************************************
begin-procedure Select-Descr
#debug show '** Select-Descr **'
begin-select
PDD.DESCR
  LET $descr=rtrim(&PDD.DESCR, ' ')

FROM PS_GP_PIN PDD

WHERE PDD.PIN_NUM= #Pin_num
end-select
begin-select
PDL.DESCR

  LET $descr=rtrim(&PDL.DESCR, ' ')

FROM PS_GP_PIN_LANG PDL
WHERE PDL.PIN_NUM = #Pin_num
and   PDL.LANGUAGE_CD = $curr_language_cd
end-select
PRINT $descr                       (,90)
end-procedure Select-Descr

!***************************** Print-Name ***************************************
begin-procedure Print-Name
#debug show '** Print-Name **'
  print &AAA.EMPLID                 (+2,1)
  print &CCC.NAME_PSFORMAT          (  ,+1,50)
  print ' '                         (+1,1)
end-procedure Print-Name


!***************************** Print-Amount ***************************************
begin-procedure Print-Amount
#debug show '** Print-Amount **'
  !PRINT ''   (+1,)
  if #Amount < 0
     let #Amount = 0.00
     print #Amount                  ( ,150) edit 999,999,999.99
  else
     print #Amount                  ( ,150) edit 999,999,999.99
  end-if
  let $Pin_name_type = $Pin_name_h
  do Select-Amount_d
end-procedure Print-Amount


!***************************** Select-Amount_d ********************************************
begin-procedure Select-Amount_d
#debug show '** Select-Amount_d **'
begin-select
PP2.PIN_TYPE
     let $Pin_type_amount = &PP2.PIN_TYPE
     if $Pin_type_amount = 'ER'
        ADD  #Amount to #Tot_dep_amt_ern
        ADD  #Amount to #Gran_Tot_dep_amt_ern
     else
        ADD  #Amount to #Tot_dep_amt_ded
        ADD  #Amount to #Gran_Tot_dep_amt_ded
     end-if

FROM PS_GP_PIN PP2
WHERE PP2.PIN_NM = $Pin_name_type
end-select
end-procedure Select-Amount_d


!***************************** Select-Pin_name ***************************************
begin-procedure Select-Pin_name
#debug show '** Select-Pin_name **'
begin-select
PP1.PIN_NM
     let $Pin_name_h = &PP1.PIN_NM
     let $Pin_name_h1 = rtrim($Pin_name_h,' ')
     let #length = length($Pin_name_h1)
     let #length_1 = #length - 6
     let $Pin_name_h = substr($Pin_name_h,1,#length_1)

FROM PS_GP_PIN PP1

WHERE PP1.PIN_NUM = #Pin_num3
end-select
end-procedure Select-Pin_name


!***************************** Print-GTotal ***************************************
begin-procedure Print-GTotal
#debug show '** Print-GTotal **'
       print '______________'              (+1,150) bold
       print  $H_Company_E_T               (+1,90)  bold
       print  #Gran_Tot_dep_amt_ern        (  ,150) edit 999,999,999.99
       print  $H_Company_D_T               (+1,90)  bold
       print  #Gran_Tot_dep_amt_ded        (  ,150) edit 999,999,999.99
end-procedure Print-GTotal


!***************************** Select-Dept-Data ***************************************
begin-procedure Select-Dept-Data
#debug show '** Select-Dept-Data **'
begin-select
DD.DESCR
   let $Dept_Name = rtrim(&DD.DESCR,' ')

FROM PS_DEPT_TBL DD
WHERE DD.DEPTID = $DeptId
AND   DD.EFFDT = (SELECT MAX(DD1.EFFDT)
                  FROM PS_DEPT_TBL DD1
                  WHERE DD1.DEPTID = DD.DEPTID
                    AND DD1.EFFDT <= $End_dt)
end-select
end-procedure Select-Dept-Data



!***************************** Print-Total ***************************************
begin-procedure Print-Total
#debug show '** Print-Total **'
  print '______________'               (+1,150) bold
  print  $H_Department_E_T             (+1,90) bold
  print  #Tot_dep_amt_ern              (  ,150) edit 999,999,999.99

  print  $H_Department_D_T             (+1,90) bold
  print  #Tot_dep_amt_ded              (  ,150) edit 999,999,999.99

  move 0 to #Tot_dep_amt_ern
  move 0 to #Tot_dep_amt_ded
end-procedure Print-Total


!**********************************
!Procedure Report-Translation
!**********************************
begin-Procedure Report-Translation
#debug show '** Report-Translation **'
  let $language_cd = $prcs_language_cd
  do Init_Report_Translation ('GPMXPV01', $language_cd)
  do Append_Report_Translation ('GPMXPV01')
  do Get_Field_Information ('GPMXPV01', 'HEAD1',  $Date,              #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD2',  $Page,              #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD3',  $Report,            #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD4',  $Time,              #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD5',  $Rep_Title,         #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD6',  $From,              #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD7',  $To,                #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD8',  $H_Company,         #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD9',  $H_Emplid,          #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD10', $H_Name,            #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD11', $H_Amount,          #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD12', $H_Department,      #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD13', $H_Paygroup,        #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD14', $H_Concept,         #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD15', $H_Company_E_T,     #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD16', $H_Company_D_T,     #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD17', $H_Department_E_T,  #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD18', $H_Department_D_T,  #DW)
  do Get_Field_Information ('GPMXPV01', 'HEAD19', $H_Descr,           #DW)
End-Procedure Report-Translation


#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
#include 'getpgdta.sqc'  !Get-Paygroup-Data
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields