!***********************************************************************
!  GPAUPS03: PAYG Payment Summary Voluntary Print                      *
!            A sample program only. May need modifications to suit     *
!            different laser printers.                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2018, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!       $Release:  HR92                                                !
!           $Bug:  28291577                                            !
!                                                                      *
!***********************************************************************
! Modification History                                                 *
! Dated      Author  ICE       Changes                                 *
! 02/12/02   KWH    536785000  Print blank pages between payment       *
!                              Summaries only if 'Duplex' selected.    *
!***********************************************************************

begin-procedure Payment-Summary-Vol

  Move 'Payment Summary Voluntary Laser Print' to $ReportTitle
  display $ReportTitle
  show 'For Year Ending ' $Tax_Yr_End
  display ' '

  Let $Year_Start = '1 July '
  concat $Tax_Year_Start with $Year_Start
  concat ' to' with $Year_Start
  Let $Year_End = '30 June '
  concat $Tax_Year_End with $Year_End
  Let $Tax_Year = to_char(#Tax_Year)

  Do Build-Order-ByV

  Do Build-PSM-SQLV

  Do Process-PSM-Vol-Data

end-procedure

!***********************************************************************
! Procedure: Build-Order-ByV                                           *
!            Dynamically build the order by clause according to flags. *
!***********************************************************************
begin-Procedure Build-Order-ByV


  Move ' ' to $OrderClause
  Move ' ' to $PyGrpSet
  Move ' ' to $DeptSet
  Move ' ' to $LocnSet
  Move ' ' to $PayeeSet

  if $Pyent_SW = 'Y'
     Let $OrderByClause = 'ORDER BY PSMV.PAY_ENTITY'
  else
   if $PyGrp_SW = 'Y'
      Let $OrderByClause = 'ORDER BY JOBV.GP_PAYGROUP'
      Let $PyGrpSet = 'Y'
   else
    if $Dept_SW = 'Y'
       Let $OrderByClause = 'ORDER BY JOBV.DEPTID'
       Let $DeptSet = 'Y'
    else
     if $Locn_SW = 'Y'
        Let $OrderByClause = 'ORDER BY JOBV.LOCATION'
        Let $LocnSet = 'Y'
     else
         Let $OrderByClause = 'ORDER BY PSNLNV.NAME'
         Let $PayeeSet = 'Y'
     end-if
    end-if
   end-if
  end-if

 if $PyGrp_SW = 'Y' and $PyGrpSet <> 'Y'
    Let $OrderByClause = $OrderByClause || ',' || ' JOBV.GP_PAYGROUP'
 end-if

 if $Dept_SW = 'Y' and $DeptSet <> 'Y'
    Let $OrderByClause = $OrderByClause || ',' || ' JOBV.DEPTID'
 end-if

 if $Locn_SW = 'Y' and $LocnSet <> 'Y'
    Let $OrderByClause = $OrderByClause || ',' || ' JOBV.LOCATION'
 end-if

 if $Payee_SW = 'Y' and $PayeeSet <> 'Y'
    Let $OrderByClause = $OrderByClause || ',' || ' PSNLNV.NAME'
 end-if


end-Procedure


!***********************************************************************
! Procedure: Build-PSM-SQL                                             *
!                                                                      *
!***********************************************************************
begin-procedure Build-PSM-SQLV

   if $Pop_Ind = '10'
      Let $PSM_From = 'PS_GPAU_RC_PSM_PYE PYEV'
      Let $PSM_Select = 'PYEV.OPRID = ' || '''' || $PRCS_OPRID || ''''
      Let $PSM_Select = $PSM_Select || ' AND PYEV.RUN_CNTL_ID = ' || '''' || $PRCS_RUN_CNTL_ID || ''''
      Let $PSM_Select = $PSM_Select || ' AND PSMV.PAY_ENTITY = PYEV.PAY_ENTITY'
   else
    if $Pop_Ind = '20'
       Let $PSM_From = 'PS_GPAU_RC_PSM_PYG PYGV'
       Let $PSM_Select = 'PYGV.OPRID = ' || '''' || $PRCS_OPRID || ''''
       Let $PSM_Select = $PSM_Select || ' AND PYGV.RUN_CNTL_ID = ' || '''' || $PRCS_RUN_CNTL_ID || ''''
       Let $PSM_Select = $PSM_Select || ' AND PYGV.GP_PAYGROUP = JOBV.GP_PAYGROUP'
    else
        Let $PSM_From = 'PS_GPAU_RC_PSM_EE EEV'
        Let $PSM_Select = 'EEV.OPRID = ' || '''' || $PRCS_OPRID || ''''
        Let $PSM_Select = $PSM_Select || ' AND EEV.RUN_CNTL_ID = ' || '''' || $PRCS_RUN_CNTL_ID || ''''
        Let $PSM_Select = $PSM_Select || ' AND PSMV.EMPLID = EEV.EMPLID'
        Let $PSM_Select = $PSM_Select || ' AND PSMV.PAY_ENTITY = EEV.PAY_ENTITY'
        Let $PSM_Select = $PSM_Select || ' AND PSMV.BALANCE_GRP_NUM = EEV.BALANCE_GRP_NUM'
    end-if
   end-if

end-procedure


!***********************************************************************
!                                                                      *
! This is the main driving logic to print the Non-Business Summaries   *
!                                                                      *
!***********************************************************************
begin-procedure Process-PSM-Vol-Data

  Let #Rows_Processed = 0


begin-SELECT DISTINCT
PSMV.EMPLID
PSMV.PAY_ENTITY
PSMV.BALANCE_GRP_NUM
PSMV.GPAU_TAX_YEAR
JOBV.GP_PAYGROUP
JOBV.DEPTID
JOBV.LOCATION
PSNLNV.NAME
PSNLNV.NAME_PREFIX
PSNLNV.LAST_NAME
PSNLNV.FIRST_NAME
PSNLNV.MIDDLE_NAME
PSNLV.BIRTHDATE
PSMV.GPAU_TFN
PSMV.GPAU_CNTRCTR_YN
PSMV.GPAU_ABN
PYENTV.DESCR
PYENTAUV.GPAU_ABN
PYENTAUV.GPAU_ABN_BRANCH
PYENTAUV.GPAU_SIGNATORY
PSMV.GPAU_EE_START_DT
PSMV.GPAU_EE_END_DT
PSMV.GPAU_PSM_TAX_WHELD
PSMV.GPAU_PSM_GROSS_PAY
PSMV.GPAU_PSM_WHOLD_RT
PSMV.GPAU_STATUS
ADDRV.ADDRESS1
ADDRV.ADDRESS2
ADDRV.CITY
ADDRV.STATE
ADDRV.POSTAL
ADDRV.COUNTRY
CNT.DESCR

 Let #Rows_Processed = #Rows_Processed + 1
   Do Prepare-Data-Vol

   Let #CU = 2
   Let $Heading2 = 'Payee' ||'''' || 's Tax Return Copy'
   Do Print-Tax-Return-Copy-Vol
   if &RC.GPAU_PSM_DPLX_SW = 'Y'
      new-page
   end-if

   Let #CU = 2
   new-page
   Let $Heading2 = 'Payee'||'''' || 's Personal Records Copy'
   Do Print-Tax-Return-Copy-Vol

   Do Update-Issue-Status
   if &RC.GPAU_PSM_DPLX_SW = 'Y'
      new-page
   end-if
   new-page

FROM [$PSM_From]
, PS_GPAU_EE_PSM PSMV
, PS_GP_PYENT PYENTV
, PS_GP_PYENT_SGPAU PYENTAUV
, PS_JOB JOBV
, PS_PERSON_NAME PSNLNV
, PS_PERSON PSNLV
, PS_ADDRESSES ADDRV
, PS_COUNTRY_TBL CNT
WHERE [$PSM_Select]
AND PSMV.GPAU_TAX_YEAR = #Tax_Year
AND PSMV.GPAU_PSM_TYPE = '20'
AND PSMV.GPAU_CNTRCTR_YN = 'Y'
AND PSMV.GPAU_STATUS = $PrintStatus
AND JOBV.EMPLID = PSMV.EMPLID
AND JOBV.EMPL_RCD = 0
AND JOBV.EFFDT =
(SELECT MAX(JOBV2.EFFDT)
 FROM PS_JOB JOBV2
 WHERE JOBV2.EMPLID = JOBV.EMPLID
   AND JOBV2.EMPL_RCD = JOBV.EMPL_RCD
   AND JOBV2.EFFDT <= $Tax_Yr_End)
AND JOBV.EFFSEQ =
(SELECT MAX(EFFSEQ)
FROM PS_JOB JOBV3
WHERE JOBV3.EMPLID = JOBV.EMPLID
AND JOBV3.EMPL_RCD = JOBV.EMPL_RCD
AND JOBV3.EFFDT = JOBV.EFFDT)
AND PSNLNV.EMPLID = PSMV.EMPLID
AND PSNLV.EMPLID = PSMV.EMPLID
AND PYENTAUV.PAY_ENTITY = PSMV.PAY_ENTITY
AND PYENTAUV.EFFDT = (SELECT MAX(PYENTAUV2.EFFDT)
               FROM PS_GP_PYENT_SGPAU PYENTAUV2
               WHERE PYENTAUV2.PAY_ENTITY = PYENTAUV.PAY_ENTITY
               AND PYENTAUV2.EFFDT <= $Tax_Yr_End)
AND PYENTV.PAY_ENTITY = PSMV.PAY_ENTITY
AND ADDRV.EMPLID = PSMV.EMPLID
AND (ADDRV.ADDRESS_TYPE = 'HOME'
OR (ADDRV.ADDRESS_TYPE = 'MAIL'
AND ADDRV.EMPLID NOT IN
(SELECT ADDRV1.EMPLID
FROM PS_ADDRESSES ADDRV1
WHERE ADDRV1.EMPLID = ADDRV.EMPLID
AND ADDRV1.ADDRESS_TYPE = 'HOME')))
AND ADDRV.EFFDT = (SELECT MAX(ADDRV2.EFFDT)
               FROM PS_ADDRESSES ADDRV2
               WHERE ADDRV2.EFFDT <= $AsOfToday
               AND ADDRV2.EMPLID = ADDRV.EMPLID
               AND ADDRV2.ADDRESS_TYPE = ADDRV.ADDRESS_TYPE
               AND ADDRV2.EFF_STATUS = 'A')
AND CNT.COUNTRY = ADDRV.COUNTRY
[$OrderByClause]
end-Select

end-procedure

!***********************************************************************
! Procedure: Prepare-Data-Vol                                          *
!***********************************************************************
begin-Procedure Prepare-Data-Vol

  Let #Allowance_Tot = 0

  Let $Emplid    = rtrim(&PSMV.EMPLID, ' ')
  Let $PayEntity = rtrim(&PSMV.PAY_ENTITY, ' ')
  Move &PSMV.BALANCE_GRP_NUM to $Balance_Grp_Num

  Let $Name_Prefix = rtrim(&PSNLNV.NAME_PREFIX, ' ')
  Let $Last_Name = rtrim(&PSNLNV.LAST_NAME, ' ')
  Let $First_Name = rtrim(&PSNLNV.FIRST_NAME, ' ')
  Let $Middle_Name = rtrim(&PSNLNV.MIDDLE_NAME, ' ')

  Let $Emp_Name = $Name_Prefix || ' ' || $First_Name || ' ' || $Middle_Name || ' ' || $Last_Name

  Move &PSNLV.BIRTHDATE to $Birthdate
  Do Format-Datetime($Birthdate,$Birthdate,{DEFDMY},'','')

  Let $Address1 = rtrim(&ADDRV.ADDRESS1, ' ')
  uppercase $Address1
  Let $Address2 = rtrim(&ADDRV.ADDRESS2, ' ')
  uppercase $Address2
  Let $City     = rtrim(&ADDRV.CITY, ' ')
  Let $State    = rtrim(&ADDRV.STATE, ' ')
  Let $Postal   = rtrim(&ADDRV.POSTAL, ' ')
  Let $CountryCd = rtrim(&ADDRV.COUNTRY, ' ')
  Let $Country  = rtrim(&CNT.DESCR, ' ')

  Move &PSMV.GPAU_TFN to $TFN

  Move &PSMV.GPAU_ABN to $ABN

  Move &PYENTAUV.GPAU_ABN to $Payer_ABN

  Move &PYENTAUV.GPAU_ABN_BRANCH to #ABN_Branch
  Let $ABN_Branch = to_char(#ABN_Branch)
  Let $ABN_Branch = rtrim($ABN_Branch,' ')

  Let $Signatory = rtrim(&PYENTAUV.GPAU_SIGNATORY, ' ')

  Let $Pay_Entity_Name = rtrim(&PYENTV.DESCR, ' ')

  Move &PSMV.GPAU_EE_START_DT to $EE_Start_Dt

  Do Format-DateTime($EE_Start_Dt,$EE_Start_Dt,{DEFDMY},'','')
  Move &PSMV.GPAU_EE_END_DT to $EE_End_Dt
  Do Format-Datetime($EE_End_Dt,$EE_End_Dt,{DEFDMY},'','')

  Move &PSMV.GPAU_PSM_TAX_WHELD to #Tax_Wheld
  If #Tax_Wheld < 0
    Move 0 to #Tax_Wheld
  End-if
  Let #Tax_WheldX = Trunc(#Tax_Wheld,0)
  Move #Tax_WheldX to $Tax_Wheld 99999999.99
  Do Wheld-tax-in-words

  uppercase $Million
  uppercase $Thousands
  uppercase $Hundreds
  uppercase $Tens
  uppercase $Units
  uppercase $Cents

  Move &PSMV.GPAU_PSM_GROSS_PAY to #Gross_Pay
  Let #Gross_PayX = Trunc(#Gross_Pay,0)

  Move &PSMV.GPAU_PSM_WHOLD_RT to #Whold_Rt

  Do Format-Datetime($Tax_Yr_End,$Print_Tax_Yr,{DEFDMY},'','')

  Let $Heading1 = '     Payment Summary - Voluntary Agreement'

  Move 'Payment Summary for year ending 30 June' to $Heading3

end-Procedure

!***********************************************************************
! Procedure: Print-Tax-Return-Copy-Vol                                 *
!            Prints the certificates for the employees selected.       *
!***********************************************************************
Begin-Procedure Print-Tax-Return-Copy-Vol

  graphic                              (#CU,97,28) box 2 0 11

  graphic () font 4 7
  Print $Heading2                      (#CU,98,25) bold

  graphic                              (#CU,97,28) box 2
  Let #CU = #CU + 4

  graphic () font 19 16
  Print $Heading1                      (#CU,32,46)  bold
  Let #CU = #CU + 2
  graphic () font 5 10

  Print 'What this form is for'         (#CU,1,22) bold

  Let #CU = #CU + 1
  graphic () font 5 7
  Print 'This form is used to provide details of amounts' (#CU,1,47)
  Print 'withheld from payments made under a Voluntary Agreement.' (#CU,37)
  graphic () font 5 10

  Let #CU = #CU + 2
  graphic                              (#CU,54,10) box 2    !Tax_Year_End
  Let #CU = #CU + 1
  graphic () font 5 10
  Print $Heading3                      (#CU,1,39)     bold

  Print $Tax_Year_End                  (0,57,4)   bold

  Let #CU = #CU + 2
  Print 'Payee details'                 (#CU,1,50) bold
  Let $Payee_ABNHead =  'Payee' || {QUOTE} || 's Australian Business Number'
  Print $Payee_ABNHead                  (#CU,45,35) bold

  graphic                               (#CU,95,34) box 2   !Payee ABNumber

  Let #CU = #CU + 1
  Print $ABN                            (#CU,104) edit  xxxbxxxbxxxbxx

  Let #CU = #CU + 2

  graphic () font 5 8
  Print 'Day    Month    Year'                (#CU,97)
  graphic () font 5 10

  Let #CU = #CU + 1
  Let $Birthhead  =  'Payee' ||''''|| 's date of birth (optional)'
  Print $Birthhead                      (#CU,51,32)  bold

  graphic                               (#CU,95,23) box 2  !Payee Birthdate

  Let #CU = #CU + 1
  print $Birthdate                      (#CU,98)

  Let #CU = #CU + 2
  Print $Emp_Name                       (#CU,10)

  Let #CU = #CU + 1
  Let $Emp_Address1 =   $Address1  || ',  ' || $Address2
  Print $Emp_Address1                   (#CU,10)

  Let #CU = #CU + 1
  Let $Emp_Address2 =  $City || ' ' || $State || ' ' || $Postal
  Print $Emp_Address2                   (#CU,10)


  Let #CU = #CU + 1
  If $CountryCd <> 'AUS'
     Print $Country                     (#CU,1,30)
  End-if

  Let #CU = #CU + 9

  Print '-'                             (#CU,1,148) fill bold

  Let #CU = #CU + 3
  Print 'Payer details'                 (#CU,1,14) bold

  Let $ABN_Head =  'Your Australian Business Number (ABN)'
  Let $ABN_Head2 = '           or Withholder Payer Number'

  Print $ABN_Head                       (#CU,22,37)  bold
  graphic                               (#CU,70,20) box 2   !Payers ABN
  graphic                               (0,114,15)  box 2   !Branch Number

  Let #CU = #CU + 1
  Print $ABN_Head2                      (#CU,27,37) bold
  Print 'Branch number'                 (0,95,13)  bold

  Print  $Payer_ABN                     (#CU,72)   edit  xxxbxxxbxxxbxx
  Print  $ABN_Branch                    (0,119)


  Let $Name_Head =  'Payer' || {QUOTE} || 's name'

  Let #CU = #CU + 2
  Print $Name_Head                      (#CU,1,12)

  Let #CU = #CU + 1
  graphic                               (#CU,1,128) box 2   !Payers Name 1
  Let #CU = #CU + 1
  Print $Pay_Entity_Name                (#CU,2)

  Let #CU = #CU + 2
  graphic                               (#CU,1,128) box 2   !Payers Name 2

  Let #CU = #CU + 3
  graphic                               (#CU,1,128) box 2   !Payers Name 3

  Let #CU = #CU + 4
  Print '-'                             (#CU,1,148) fill bold

  Let #CU = #CU + 2

  graphic () font 5 8
  Print 'Day    Month    Year'                (#CU,74)
  Print 'Day    Month    Year'                (#CU,107)
  graphic () font 5 10


  Let #CU = #CU + 1
  Print 'Payment details'               (#CU,1,15) bold

  Print 'Period during which payments were made' (#CU,25,38) bold

  graphic                               (#CU,74,20)    box 2  !Payment-Date-From
  graphic                               (#CU,107,20)   box 2  !Payment-Date-To

  Let #CU = #CU + 1
  Print $EE_Start_Dt                    (#CU,78,10)
  Print 'To'                            (0,98,3)
  Print $EE_End_Dt                      (0,111,10)

  Let #CU = #CU + 2
  Print 'Total tax withheld (whole dollars only in words)' (#CU,50,49) bold

  Let #CU = #CU + 1

  graphic                               (#CU,42,78)  box 3  !Tax Withheld Words

  graphic () font 5 7

  Print 'Thousands'                     (#CU,45,10)

  Print 'Hundreds'                      (0,88,10)

  Print 'Tens'                          (0,98,10)

  Print 'Units'                         (0,108)

  graphic () font 5 10
  Print 'Total tax withheld'            (#CU,3,18) bold
  Print '(whole dollars)'               (#CU,24,15)

  Let #CU = #CU + 1

  graphic                               (#CU,3,30)     box 2  !Tax Withheld Dollars

  Let #CU = #CU + 1
  Print '$'                             (#CU,1,1)

  Print #Tax_WheldX                      (#CU,22)   edit 9,999,999 !Tax Withheld Dollars
  Print '.00'                           (0,34)
  Print ' X'                            (0,34)

  Print $Million                        (0,43,1)
  Print $Thousands                      (0,45,28)
  Print $Hundreds                       (0,88,10)
  Print $Tens                           (0,98,10)
  Print $Units                          (0,108)

  Let #CU = #CU + 2
  Print 'Gross payments'                (#CU,3,14) bold
  Print '(whole dollars)'               (#CU,21,15)

  Let #CU = #CU + 1
  Print '(including the market value of non cash benefits)' (#CU,3)
  Let #CU = #CU + 2
  graphic                               (#CU,3,15)      box 2  !Gross Payments
  graphic                               (#CU,62,18)     box 2  !Withholding Rate

  Let #CU = #CU + 1
  Print '$'                             (#CU,1)

  Print 'Withholding rate'              (#CU,41,16) bold
  Print '%'                             (#CU,81,1)  bold

  Print #Gross_PayX                     (#CU,5) edit  999,999,999
  Print '.00'                           (0,19)
  Print ' X'                            (0,19)

  Let #Whold_Pct = #Whold_Rt * 100
  Print #Whold_Pct                       (#CU,68)

  Let #CU = #CU + 2
  Print '-'                             (#CU,1,148) fill bold

  Let #CU = #CU + 3
  Print 'Declaration'                   (#CU,1,11) bold

  Print '  I declare that the information given on this form is complete and correct.'

                                        (#CU,16,76)


  Let #CU = #CU + 2
  graphic                                (#CU,12,70)       box 4  !Signature

  Let #CU = #CU + 1
  graphic () font 5 7
  Print 'Day    Month    Year'           (#CU,104)
  graphic () font 5 10


  Let #CU = #CU + 1

  Print 'Signature'                      (#CU,1,9)
  Print $Signatory                       (#CU,13,35)

  graphic                                (#CU,104,19)       box 2  !Date

  Let #CU = #CU + 1
  Print 'Date'                           (#CU,98,4)
  Print $Print_Tax_Yr                    (#CU,108)


  Let #CU = #CU + 2
  graphic () font 5 7
  graphic () font 5 10


end-procedure




