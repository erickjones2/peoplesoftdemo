!***********************************************************************
!  GPBRRC01:  GRFC Report                                              *
!***********************************************************************
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  31086007                                            !
!                                                                      *
!***********************************************************************


#define CTit00  100
#define CTit001 106
#define CSub1   2
#define CTit02  2
#define CDat02  3
#define CTit04  42

#define CDat04  43
#define CTit08  87
#define CDat08  88
#define CTit11  42
#define CDat11  43
#define CTit13  20
#define CDat13  21
#define CTit14  37
#define CDat14  38
#define CTit17  35
#define CDat17  36
#define CTit18  52
#define CDat18  53
#define CTit19  59
#define CTit19b 60
#define CDat19  60
#define CTit20  83
#define CTit20a 97
#define CDat20  84
#define CMini1  97
#define CTit21  106
#define CDat21  107
#define CMini2  106
#define CTit29  107
#define CDat29  108
#define CDat25  15
#define CDat26  47
#define CDat27  69
#define CDat28  93
#define CDat29  116

#define RTit00  4
#define RSub1   8
#define RTit02  10
#define RDat02  12
#define RTit03  14
#define RDat03  16
#define RTit05  18
#define RDat05  20
#define RTit06  22
#define RDat06  24
#define RTit10  26
#define RDat10  28
#define RTit12  30
#define RDat12  32
#define RSub2   37
#define RTit15  39
#define RDat15  41
#define RTit16  43
#define RDat16  45
#define RTit22  47
#define RDat22  49
#define RSub3   53
#define RTit25  55
#define RDat25  57
#define RDescr  61
#define RDescr2 63
#define RSub4   66
#define RTit30  68
#define RDat30  70
#define RSign   77
#define RSign2  78

#define CBox04  40
#define CBox05  62
#define CBox06  125
#define CBox08  84
#define CBox09  97
#define CBox11  60
#define CBox13  19
#define CBox14  17
#define CBox17  32
#define CBox19  57
#define CBox18  48
#define CBox19a 72
#define CBox20  81
#define CBox20a  95
#define CBox21  103
#define CBox22  28

#define G2      5

#include 'setenv.sqc'   ! set enviroment

Begin-Setup
  #include 'setupdb.sqc'   ! Database specific setup
  Declare-Printer   THIS_REPORT
        Type=HPLASERJET
        Font=5
        Point-Size=12
        Pitch=17
        Symbol-Set=0U     ! ASCII symbol set
  End-Declare

  Declare-Layout THIS_REPORT
        Orientation=Portrait
        Top-Margin= .4
        Left-Margin=.60
        Max-Lines=82
        Max-Columns=130
        Char-Width=4.3    ! 7.2
        Line-Height=9    ! 72/printer_point-size
  End-Declare

  Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
  End-Declare

  declare-variable
    date $TermNotif
    date $LastTerm01
  end-declare
  
end-Setup

!**************************************
begin-report
!show '** Report **'
!**************************************
  Let #StdFont     = 5          ! Times Roman proportional
  Let #StdFont2    = 3          ! Times Roman proportional
  Let #StmtPntSize = 8          ! Statement point-size
  Let #DescrSize   = 6          ! Pin Name Size Print
  Alter-Printer Point-size = #StdFont Font-Type = Proportional Font = #StdFont
  
  let #pos  = instr($sqr-program,'gpbrrc01',0)
  let #pos  = #pos - 1
  let $path = substr($sqr-program,1,#pos)
  let $FileDir = $path || 'caixa.gif'
    
  #ifdef MVS
   let #pos  = instr($sqr-program,'gpbrrc01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'caixa)'
  #end-if
    
  #ifdef OS390
   let #pos  = instr($sqr-program,'gpbrrc01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'caixa)'
  #end-if
    
  #ifdef OS400
   let #pos  = instr($sqr-program,'gpbrrc01',0)
   let #pos  = #pos - 1
   let $path = substr($sqr-program,1,#pos)
   let $FileDir = $path || 'caixa)'
  #end-if
    
  #ifdef UNIX
   let $FileDir = $path || 'caixa.gif'
  #end-if
     
  Do Init-Report
  Do Select-Parameters
  Let $SecurityClauseWithERN = ''
  Let $_TableAlias = 'JB'
  Do Security-Param
  If $Process = 'Y'
     Do Process-Main
  end-if
  date-time () hh:mi:ss &timeBegan
  display 'Report End: ' noline
  display $AsOfToday
  display &timeBegan
  Do Stdapi-Term
  Do Reset
  
end-report

!**************************************
begin-procedure Init-Report
!**************************************
  move '2' to $ReportDateType   ! Set for date to format as DMY
  move '1' to $ReportYear4      ! Set for year to be formatted YYYY
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime 
  move 'GPBRRC01' to $ReportID
  move 'Guia de Recolhimento Rescisório do FGTS e da Contribuição Social' to $ReportTitle
  move 'Ver. 2014-D' to $ReportVersion
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display $AsOfToday
  display &timeBegan
  
end-procedure

!**************************************
begin-procedure Select-Parameters
!show '** Select-Parameters **'
!**************************************
  Let $where =''
  Let $whereEffdt = ''
  Let $Process = 'N'
begin-SELECT  
RC.GPBR_GRFC_OPTNS
RC.EMPLID
RC.GPBR_TERM_DT_FR
RC.GPBR_TERM_DT_TO
RC.GB_GROUP_ID
RC.GPBR_HR_CONTACT
RC.GPBR_COMP_REPT

  let $poption = &RC.GPBR_GRFC_OPTNS
  let $HRContact = rtrim(&RC.GPBR_HR_CONTACT,' ')
  let $pemplid = rtrim(&RC.EMPLID,' ')
  let $pfrom   = &RC.GPBR_TERM_DT_FR
  let $pto     = &RC.GPBR_TERM_DT_TO
  let $pgroup  = rtrim(&RC.GB_GROUP_ID,' ')
  let $compRpt = Rtrim(&RC.GPBR_COMP_REPT, ' ')
  
  Let $whereEffdt = ' AND JB_ED.EFFDT BETWEEN ' || '''' ||  $pfrom || '''' || ' AND ' || '''' || $pto || '''' 
  
  Evaluate $poption 
  When = '01'   !By Emplid
     let $where = ' AND   JB.EMPLID = ' || '''' || $pemplid  || ''''
  Break
  When = '02'   ! All Employees
  Break
  When = '03'   ! By Group ID
     let $table = ', PS_GB_GRP_RES_TBL GE' 
     let $where = ' AND   GE.GB_GROUP_ID  = ' || '''' || $pgroup || ''''
     let $where = $where || ' and GE.VERSIONGBQDM = (select max(GE1.VERSIONGBQDM) from PS_GB_GRP_RES_TBL GE1'
     let $where = $where || ' where GE1.GB_GROUP_ID = GE.GB_GROUP_ID)' 
     let $where = $where || ' AND JB.EMPLID = GE.EMPLID AND JB.EMPL_RCD = GE.EMPL_RCD'
     let $where = $where || ' AND GE.JOB_EFFDT  = (SELECT MAX(GE_A.JOB_EFFDT) FROM PS_GB_GRP_RES_TBL GE_A WHERE GE_A.EMPLID = GE.EMPLID AND GE_A.EMPL_RCD = GE.EMPL_RCD)'
     let $where = $where || ' AND GE.JOB_EFFSEQ = (SELECT MAX(GE_B.JOB_EFFSEQ) FROM PS_GB_GRP_RES_TBL GE_B WHERE GE_B.EMPLID = GE.EMPLID AND GE_B.EMPL_RCD = GE.EMPL_RCD AND GE_B.JOB_EFFDT = GE.JOB_EFFDT)'
  Break
  End-Evaluate
  
  Do Convert-To-Dtu-Date($pfrom, $pfromDTU)
  Do DTU-Month-Begin($pfromDTU, $pfromDTU)
  Do Convert-From-Dtu-Date($pfromDTU, $PeriodBgnDt)

  Do Convert-To-Dtu-Date($pto, $ptoDTU)
  Do DTU-Month-End($ptoDTU, $ptoDTU)
  Do Convert-From-Dtu-Date($ptoDTU, $PeriodEndDt)

  Let $Process = 'Y'

FROM  PS_GPBR_RC_GRFC RC
WHERE RC.OPRID = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure Select-Parameters


!**************************************
begin-procedure Process-Main
#debug show '** Process-Main **'
#debug show   '$SecurityClausewithERN :'   $SecurityClausewithERN
#debug show '$where:      ' $where
#debug show '$table:      ' $table
#debug show '$whereEffdt: ' $whereEffdt
!**************************************
begin-SELECT  
JB.EMPLID
JB.EMPL_RCD
JB.EFFDT
JB.COMPANY
JB.ACTION
JB.ACTION_REASON
JB.ESTABID
JB.TERMINATION_DT
EM.TERMINATION_DT

  let $Emplid       = Rtrim(&JB.EMPLID, ' ')
  let #Empl_Rcd     = &JB.EMPL_RCD
  let $Company      = Rtrim(&JB.COMPANY, ' ')
  Let $Estabid      = Rtrim(&JB.ESTABID, ' ')
  let $Action       = Rtrim(&JB.ACTION, ' ')
  let $Action_Reason = rtrim(&JB.ACTION_REASON, ' ')  
  let $estabid      = Rtrim(&JB.ESTABID, ' ')
  let $ter_dt       = Rtrim(&EM.TERMINATION_DT,' ')
  
  If $ter_dt = ''
     let $ter_dt       = Rtrim(&JB.TERMINATION_DT,' ')
  end-if
     
  let $Effdt        = Rtrim(&JB.EFFDT,' ')
  let $Year         = substr($Effdt,1,4) 
  let $MonthCD      = substr($Effdt,6,2)
  
  
  #debug show '      $Emplid       ' $Emplid      
  #debug show '      $Company      ' $Company     
  #debug show '      $Estabid      ' $Estabid     
  #debug show '      $Action       ' $Action      
  #debug show '      $ActionReason ' $ActionReason
  #debug show '      $estabid      ' $estabid     
  #debug show '      $ter_dt       ' $ter_dt      
  #debug show '      $Effdt        ' $Effdt       
  #debug show '      $Year         ' $Year        
  #debug show '      $MonthCD      ' $MonthCD     
  
  If $Estabid <> ''
    !If $ter_dt  <> '' 
    do CompanyData
    do GetCompanyParams
    do GetSerTakerData
    do GetEmployerPhone
    do GetEmployerName
    Do GetPinCode('GP_PIN', 'PIN_NUM', $pin_code)
    do GetPayeeData
    Do GetNextHireDate
    
    Let #Field25 = 0
    Let #Field26 = 0
    Let #Field27 = 0
    Let #Field28 = 0
    Let #Field30 = 0
    Let #Field31 = 0
    Let #Field32 = 0
    Let #Field33 = 0
    Let #Field29 = 0
    Let #Field34 = 0
    If $compRpt = 'Y'    
      do Calc-Compl-Data
    Else
      do CalculationData
    End-If
    do Print-Data
    !end-if
  Else
    #debug show 'There is no Establishment ID for Emplid: ' $Emplid
    show 'Não existe nenhuma Criação ID para: ' $Emplid
  End-if

FROM PS_JOB JB, 
     PS_PER_ORG_ASGN_VW EM
     [$table]
WHERE JB.EFFDT = (SELECT MAX(JB_ED.EFFDT) 
                  FROM PS_JOB JB_ED 
                  WHERE JB.EMPLID = JB_ED.EMPLID
                  AND JB.EMPL_RCD = JB_ED.EMPL_RCD 
                  [$whereEffdt]
                  )
AND JB.ACTION IN ('TER','TWB','TWP','RET','RWP','LOF')
AND JB.EFFSEQ = (SELECT MAX(JB_ES.EFFSEQ) FROM PS_JOB JB_ES WHERE JB.EMPLID = JB_ES.EMPLID
                 AND JB.EMPL_RCD = JB_ES.EMPL_RCD AND JB.EFFDT = JB_ES.EFFDT)
AND JB.EMPLID = EM.EMPLID
and JB.EMPL_RCD = EM.EMPL_RCD
and JB.ACTION || JB.ACTION_REASON in (select ACTION || ACTION_REASON  
                                           from PS_GPBR_TER_ACTRSN
                                            where GPBR_GRRF_CODE <>'N')
[$where]
[$SecurityClausewithERN]
ORDER BY JB.EMPLID, JB.EMPL_RCD
end-select
end-procedure Process-Main

!**************************************
Begin-Procedure GetNextHireDate
#debug show '*** GetNextHireDate ***'
#debug show '$Emplid    ' $Emplid
#debug show '#Empl_Rcd  ' 
#debug show #Empl_Rcd
#debug show '$Effdt     ' $Effdt
!**************************************
Let $NextHireDate = ' '

Begin-Select
NHJ.EFFDT

  Let $NextHireDate = &NHJ.EFFDT

FROM PS_JOB NHJ
WHERE NHJ.EMPLID = $Emplid
AND NHJ.EMPL_RCD = #Empl_Rcd
AND NHJ.ACTION IN ('HIR','REH')
AND NHJ.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB WHERE EMPLID = NHJ.EMPLID AND EMPL_RCD = NHJ.EMPL_RCD AND EFFDT > $Effdt)
AND NHJ.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB WHERE EMPLID = NHJ.EMPLID AND EMPL_RCD = NHJ.EMPL_RCD AND EFFDT = NHJ.EFFDT)
End-Select
End-Procedure

!**************************************
begin-procedure CompanyData
!show '* CompanyData *'
!show '  $Estabid: ' $Estabid
!**************************************
  Let $Descr = ''
  Let $Address1 = ''
  Let $AdrNum = ''
  Let $Address4= ''
  Let $Address3= ''
  Let $State= ''
  Let $Postal= ''
  
Begin-SELECT  
CO.DESCR
CD.ADDRESS1
CD.NUM1
CD.ADDRESS4
CD.CITY
CD.STATE
CD.POSTAL

  Let $Descr    = rtrim(&CO.DESCR,' ')
  Let $Address1 = rtrim(&CD.ADDRESS1,' ')
  Let $AdrNum   = rtrim(&CD.NUM1,' ')
  Let $Address4 = rtrim(&CD.ADDRESS4,' ')
  Let $Address3 = rtrim(&CD.CITY,' ')
  Let $State    = &CD.STATE
  Let $Postal   = &CD.POSTAL
  
FROM PS_ESTAB_TBL CD, PS_COMPANY_TBL CO
WHERE CD.ESTABID = $Estabid
AND CD.COMPANY = CO.COMPANY
AND CD.EFFDT = (SELECT MAX(L.EFFDT) FROM PS_ESTAB_TBL L WHERE
L.ESTABID=CD.ESTABID AND L.EFFDT <= $Effdt)
AND CO.EFFDT = (SELECT MAX(L.EFFDT) FROM PS_COMPANY_TBL L WHERE
L.COMPANY=CO.COMPANY AND L.EFFDT <= $Effdt)
end-select
end-procedure


!**************************************
begin-procedure GetCompanyParams
!show '* GetCompanyParams **'
!show '  $Estabid: ' $Estabid
!**************************************
  Let $CompanyCNPJ = ''
begin-SELECT  
CNPJ.ESTAB_ID_BRA
  Let $CompanyCNPJ =&CNPJ.ESTAB_ID_BRA
FROM PS_ESTAB_ID_BRA CNPJ
WHERE CNPJ.ESTABID = $Estabid
AND CNPJ.ESTAB_ID_TYPE_BRA = 'CNPJ'
AND CNPJ.EFFDT =(SELECT MAX(ES2.EFFDT) FROM PS_ESTAB_ID_BRA ES2 WHERE CNPJ.ESTAB_ID_BRA=ES2.ESTAB_ID_BRA
AND ES2.EFFDT <=CNPJ.EFFDT)
end-select
end-procedure


!**************************************
begin-procedure GetEmployerName
!**************************************
  Let $SupName = ''
  Let $SupervisorID = $HRContact
begin-SELECT  
SP.NAME_DISPLAY
  Let $SupName = Rtrim(&SP.NAME_DISPLAY , ' ')
FROM PS_PERSON_NAME SP 
WHERE SP.EMPLID = $SupervisorID
AND SP.NAME_TYPE = 'PRI'
end-select
end-procedure


!**************************************
begin-procedure GetEmployerPhone
!**************************************
  Let $SupPhone = ''
begin-SELECT  
PH.PHONE
  Let $SupPhone =&PH.PHONE
FROM PS_PERSONAL_PHONE PH
WHERE PH.EMPLID =$HRContact
AND PH.PHONE =(SELECT MAX(PHONE) FROM PS_PERSONAL_PHONE WHERE PHONE=PH.PHONE)
end-select
end-procedure

!**************************************
begin-procedure GetSerTakerData
#debug show 'begin-procedure GetSerTakerData'
!**************************************
  Let $STEstabid= ''
  Let $ServiceTaker = ''
begin-SELECT  
ST.ESTABID
ST.GPBR_SERVICE_TAKER

  Let $STEstabid=&ST.ESTABID
  Let $ServiceTaker =&ST.GPBR_SERVICE_TAKER
  
FROM PS_GPBR_SERV_T_DTL ST
WHERE ST.EMPLID = $Emplid
and ST.EMPL_RCD=#Empl_Rcd !Added to validate multiple jobs
AND ST.YEARCD   = $Year
AND ST.MONTHCD  = $MonthCD
AND ST.ESTABID  = $Estabid
AND ST.GPBR_SERVICE_TAKER = (SELECT MAX(SERV.GPBR_SERVICE_TAKER) 
                             FROM PS_GPBR_SERV_T_DTL SERV
                             WHERE SERV.ESTABID        = ST.ESTABID 
                             and SERV.EMPLID=$Emplid     !Added to validate multiple jobs
                             and SERV.EMPL_RCD=#Empl_Rcd !Added to validate multiple jobs
                             AND ST.GPBR_SERVICE_TAKER = SERV.GPBR_SERVICE_TAKER 
                             AND ST.YEARCD             = SERV.YEARCD
                             AND ST.MONTHCD            = SERV.MONTHCD)
end-select


  Let $ServiceTakerCNPJ = ''
begin-SELECT 
STK.ESTAB_ID_BRA
  Let $ServiceTakerCNPJ =&STK.ESTAB_ID_BRA
  FROM PS_ESTAB_ID_BRA STK
  WHERE STK.ESTABID = $STEstabid
  AND STK.ESTAB_ID_TYPE_BRA = 'CNPJ'
end-select


  Let $ServTakerName = ''
begin-SELECT On-Error=SQL-Error
STN.DESCR
  Let $ServTakerName = &STN.DESCR
  FROM PS_GPBR_SERV_TAKER STN
  WHERE STN.GPBR_SERVICE_TAKER= $ServiceTaker
end-select


  Let $FPAS = ''
begin-SELECT On-Error=SQL-Error
FP.FPAS_CD_BRA
  Let $FPAS = edit(&FP.FPAS_CD_BRA,'999')
  FROM PS_ESTAB_TBL_BRA FP
  WHERE FP.ESTABID = $Estabid
  AND FP.EFFDT=(SELECT MAX(C.EFFDT) FROM PS_ESTAB_TBL_BRA C WHERE FP.ESTABID=C.ESTABID AND C.EFFDT<=FP.EFFDT)
end-select

  Let $Simples = ''
  Let $SimplesOptn = ''
  

#debug Show '  $Company       : ' $Company  
begin-SELECT On-Error=SQL-Error
SM.SIMPLES_OPTION_BRA

  Let $Simples = rtrim(&SM.SIMPLES_OPTION_BRA, ' ')
  
  FROM PS_COMPANY_TBL_BRA SM
  WHERE SM.COMPANY = $Company
AND SM.EFFDT = (SELECT MAX(SIM.EFFDT) 
                FROM PS_COMPANY_TBL_BRA SIM 
                WHERE SIM.COMPANY = SM.COMPANY 
                AND SIM.EFFDT <= SM.EFFDT)
end-select

!                             Optante   Não Optante
!Non Option                                 X
!Option                          X   
!Option + 1.200.000,00 Annual    X   
!Non Opt. RuralPF+1.200M Annl               X 
!Non Option w/out SocCont                   X
!Option +1.200 A. w/out SocCon   X   


#debug Show '  $Simples       : ' $Simples
Evaluate $Simples
    When = '01'
    When = '04'
    When = '05'
        Let $SimplesOptn = 'Não Optante'
        Break
    When = '02'
    When = '03'
    When = '06'
        Let $SimplesOptn = 'Optante'
        Break
End-Evaluate
#debug Show '  $SimplesOptn   : ' $SimplesOptn

  Let $EstabBRA = ''
begin-SELECT  
ES.ESTAB_ID_BRA
  Let $EstabBRA =&ES.ESTAB_ID_BRA
  FROM PS_ESTAB_ID_BRA ES
  WHERE ES.ESTABID = $Estabid
  AND ES.ESTAB_ID_TYPE_BRA = 'CNAE'
  AND ES.EFFDT=(SELECT MAX(ESTAB.EFFDT) FROM PS_ESTAB_ID_BRA ESTAB 
  WHERE ES.ESTABID=ESTAB.ESTABID AND ESTAB.EFFDT<=ES.EFFDT)
end-select
end-procedure


!**************************************
begin-procedure GetPayeeData
#Debug show 'begin-procedure GetPayeeData'
#Debug show '  $Emplid          : ' $Emplid
!**************************************
!show 'Get Payee Data'
begin-SELECT On-Error=SQL-Error
EM.NAME_DISPLAY
   Let $EmplName = &EM.NAME_DISPLAY
FROM PS_PERSON_NAME EM 
WHERE EM.EMPLID = $Emplid
AND NAME_TYPE = 'PRI'
end-select

!show ' Get PIS/PASEP '
   Let $NationalID = ''
begin-SELECT On-Error=SQL-Error
NID.NATIONAL_ID
   Let $NationalID = &NID.NATIONAL_ID
   FROM PS_PERS_NID NID
   WHERE NID.NATIONAL_ID_TYPE = 'PIS'
   AND NID.EMPLID = $Emplid
end-select

! show ' Get Last Hire DT '
  Let $LastHire = ''
begin-SELECT On-Error=SQL-Error
LH.DEPT_ENTRY_DT
  Let $LastHire = &LH.DEPT_ENTRY_DT
  FROM PS_JOB LH WHERE (LH.ACTION='HIR' OR LH.ACTION='REC' OR LH.ACTION='REH')
  AND LH.EMPLID=$Emplid
  and LH.EMPL_RCD=#Empl_Rcd  !Added to validate multiple jobs 
  AND LH.EFFDT=(SELECT MAX(E.EFFDT) FROM PS_JOB E WHERE E.ACTION=LH.ACTION
  AND LH.EMPLID=E.EMPLID AND LH.EMPL_RCD=E.EMPL_RCD AND E.EFFDT<=LH.EFFDT)
  AND LH.EMPL_RCD=(SELECT MAX(F.EMPL_RCD) FROM PS_JOB F WHERE F.ACTION=LH.ACTION
  AND LH.EMPLID=F.EMPLID AND LH.EFFDT=F.EFFDT AND F.EMPL_RCD<=LH.EMPL_RCD)
end-select

!-- Get Last Term DT
  Let $LastTerm = ''
begin-SELECT On-Error=SQL-Error
TD.EFFDT &TD.EFFDT
  Let $LastTerm = &TD.EFFDT
  FROM PS_JOB TD
  WHERE (TD.ACTION='TER' OR TD.ACTION='TWB' OR TD.ACTION='TWP' OR TD.ACTION='RET' OR TD.ACTION='RWP' OR TD.ACTION='LOF')
  AND TD.EMPLID=$Emplid
  and TD.EMPL_RCD=#Empl_Rcd  !Added to validate multiple jobs 
  AND TD.EFFDT=(SELECT MAX(H.EFFDT) FROM PS_JOB H WHERE H.ACTION=TD.ACTION
  AND TD.EMPLID=H.EMPLID AND TD.EMPL_RCD=H.EMPL_RCD AND H.EFFDT<=TD.EFFDT)
  AND TD.EMPL_RCD=(SELECT MAX(TD2.EMPL_RCD) FROM PS_JOB TD2 WHERE TD2.ACTION=TD.ACTION
  AND TD.EMPLID=TD2.EMPLID AND TD.EFFDT=TD2.EFFDT AND TD2.EMPL_RCD<=TD.EMPL_RCD)
end-select
#debug show '  $LastTerm        : ' $LastTerm

!****************** Get SEFIP Category
!* changed to add multiple jobs option
IF $LastTerm <> ''
Let $Sefip = ''
begin-SELECT 
SEF.SEFIP_CATEGORY_BRA
  Let $Sefip =&SEF.SEFIP_CATEGORY_BRA
FROM PS_JOB_JR SEF 
WHERE SEF.EMPLID=$Emplid
and   SEF.EMPL_RCD=#Empl_Rcd  !Added to validate multiple jobs
AND   SEF.EFFDT  =(SELECT MAX(G.EFFDT) 
                  FROM PS_JOB_JR G 
                  WHERE SEF.EMPLID = G.EMPLID
                  AND SEF.EMPL_RCD = G.EMPL_RCD 
                  AND G.EFFDT <= $LastTerm)
AND   SEF.EFFSEQ =(SELECT MAX(GSEF.EFFSEQ) 
                  FROM PS_JOB_JR GSEF 
                  WHERE SEF.EMPLID=GSEF.EMPLID 
                  and GSEF.EMPL_RCD=#Empl_Rcd  !Added to validate multiple jobs
                  AND GSEF.EFFDT=SEF.EFFDT )
end-select



!-- Get Termination Type
Let $TerminationType = ''
begin-SELECT On-Error=SQL-Error
TR.GPBR_TERM_TYPE
TR.GPBR_GRRF_CODE
  let $TerminationType = rtrim(&TR.GPBR_TERM_TYPE, ' ')
  let $grrf_code= &TR.GPBR_GRRF_CODE
  
FROM PS_GPBR_TER_ACTRSN TR
WHERE TR.ACTION =$Action
and TR.ACTION_REASON=$Action_Reason
AND TR.GPBR_TERM_VERSION = (SELECT D.SOVR_VAL_CHAR FROM PS_GP_PYE_SOVR D 
                           WHERE D.EMPLID = $Emplid
                           and D.EMPL_RCD=#Empl_Rcd  !Added to validate multiple jobs
                           AND D.PIN_NUM  = (SELECT DD.PIN_NUM FROM PS_GP_PIN DD WHERE DD.PIN_CODE = $pin_code)
                           AND D.BGN_DT   = (SELECT MAX(BGN_DT) FROM PS_GP_PYE_SOVR
                                              WHERE EMPLID = D.EMPLID
                                              AND EMPL_RCD = D.EMPL_RCD
                                              AND PIN_NUM  = D.PIN_NUM
                                              AND BGN_DT   <= $LastTerm))
end-select
END-IF
 #debug show '  $TerminationType :' $TerminationType ':'
 #debug show '  $GRRF_CODE / $GRFC_CODE :' $grrf_code ':'
 let $GRFC_Code = $grrf_code
!-- Get PriorNoticeType
  Let $PriorNotice= '02'
  Let $TermNotif = ''
  Let $DifDate = ''
begin-SELECT On-Error=SQL-Error
TN.GPBR_TERM_NOTIF
TN.GPBR_HOM_NEW_JOB
TN.GPBR_HOM_NOTIF_ER
  let $GPBR_HOM_NEW = &TN.GPBR_HOM_NEW_JOB
  let $GPBR_HOM_NOTIF = &TN.GPBR_HOM_NOTIF_ER
  Let $TermNotif = &TN.GPBR_TERM_NOTIF
  lET $LastTerm01 = $LastTerm
  let #Days = datediff($TermNotif, $LastTerm01, 'day')
  
     if #Days>= 30
       if $GPBR_HOM_NEW ='Y' 
          let $PriorNotice = '1'
       else
          if $GPBR_HOM_NOTIF='Y'
             let $PriorNotice = '3'
          end-if
       end-if
     end-if      
     if $GPBR_RELEASE ='Y'
         let $PriorNotice = '3' 
     end-if     
     if $GPBR_HOM_NEW ='N' and $GPBR_HOM_NOTIF='N' and $GPBR_RELEASE ='N' and $TermNotif <> ''
        let $PriorNotice = '1' 
     end-if     
     if  $TermNotif = '' or $TermNotif = $LastTerm 
         let $PriorNotice= '01'
     end-if
 !Exceptions to be treated as hardcoded:
      if $TerminationType = '25'
        let $PriorNotice = '3'
      end-if
      if $TerminationType = '10' or $TerminationType = '14' or $TerminationType = '24' 
        let $PriorNotice = '1'
      end-if
     
FROM PS_GPBR_PAYEE_PARM TN WHERE TN.EMPLID = $Emplid
and TN.EMPL_RCD=#Empl_Rcd  !Added to validate multiple jobs
end-select

 let $TerminationType = $GRFC_Code

!-- Get Birthdate Data
  Let $Birthday = ''
begin-SELECT On-Error=SQL-Error
BD.BIRTHDATE
  Let $Birthday = &BD.BIRTHDATE
  FROM PS_PERSON BD WHERE BD.EMPLID = $Emplid
end-select

!-- Get Carteira do Trabalho
  Let $WorkCard = ''
begin-SELECT On-Error=SQL-Error
WK.NATIONAL_ID
  Let $WorkCard = rtrim(&WK.NATIONAL_ID,' ')
  FROM PS_PERS_NID WK
  WHERE WK.NATIONAL_ID_TYPE = 'CTPS' AND WK.EMPLID = $Emplid
end-select

begin-SELECT On-Error=SQL-Error
SERIES.CTPS_SERIES_BRA
   let $Series =  rtrim(&SERIES.CTPS_SERIES_BRA,' ')
FROM PS_PERSON_BRA SERIES WHERE SERIES.EMPLID=$Emplid
end-select

!-- Get Date for FGTS
  Let $FGTSDate = ''
begin-SELECT On-Error=SQL-Error
FGTS.GPBR_FGTS_DT
  Let $FGTSDate = &FGTS.GPBR_FGTS_DT
  FROM PS_GPBR_PAYEE_PARM FGTS where FGTS.EMPLID= $Emplid
  and FGTS.EMPL_RCD=#Empl_Rcd  !Added to validate multiple jobs 
  and FGTS.BGN_DT =(select MAX(BB.BGN_DT) from PS_GPBR_PAYEE_PARM BB where BB.EMPLID=FGTS.EMPLID)
end-select
end-procedure


!**************************************
Begin-Procedure Calc-Compl-Data
#debug show '** Calc-Compl-Data **'
#debug show '$EmplId   ' $EmplId
#debug show '#Empl_Rcd ' 
#debug show #Empl_Rcd
#debug show '$PeriodBgnDt: ' $PeriodBgnDt
#debug show '$PeriodEndDt: ' $PeriodEndDt
#debug show '$NextHireDate:' $NextHireDate
!**************************************
If $NextHireDate = ' '
   Let $LastPeriod = ''
Else
   Let $LastPeriod = 'AND   SST.SEG_END_DT    < ' || '''' || $NextHireDate || ''''
End-If
BEGIN-SELECT
COMPL.GPBR_PR_FGTS_BASE
COMPL.GPBR_TDY_FGTS_BASE
COMPL.GPBR_COMP_FGTS_BSE
COMPL.GPBR_BANKING_BLNCE
COMPL.GPBR_PR_FGTS_PCT
COMPL.GPBR_FGTS_PCT
COMPL.GPBR_PREV_NTF_AMT
COMPL.GPBR_FINE_AMOUNT

   Let #Field25 = &COMPL.GPBR_PR_FGTS_BASE
   Let #Field26 = &COMPL.GPBR_TDY_FGTS_BASE
   Let #Field27 = &COMPL.GPBR_COMP_FGTS_BSE
   Let #Field28 = &COMPL.GPBR_BANKING_BLNCE
   Let #Field30 = &COMPL.GPBR_PR_FGTS_PCT
   !Let #Field31 = &COMPL.GPBR_FGTS_PCT
   Let #Field31 = #Field26 * 0.08
   Let #Field32 = &COMPL.GPBR_PREV_NTF_AMT
   Let #Field33 = &COMPL.GPBR_FINE_AMOUNT
   Let #Field29 = #Field25+#Field26+#Field27+#Field28
   Let #Field34 = #Field30+#Field31+#Field32+#Field33

FROM PS_GPBR_GRFC_WA COMPL
   , PS_GP_RSLT_DELTA DEL
   , PS_GP_PYE_SEG_STAT SST
WHERE COMPL.EMPLID       = $EmplId
  AND COMPL.EMPL_RCD     = #Empl_Rcd  
  AND COMPL.GP_PAYGROUP  = DEL.FWD2_PAYGROUP
  AND COMPL.CAL_ID       = DEL.FWD2_CAL_ID
  AND COMPL.CAL_RUN_ID   = DEL.FWD2_CAL_RUN_ID
  AND COMPL.RSLT_SEG_NUM = DEL.RSLT_SEG_NUM
  AND COMPL.EMPLID       = DEL.EMPLID
  AND COMPL.EMPL_RCD     = DEL.EMPL_RCD    
  AND   DEL.FWD2_CAL_ID   <> ' '
  AND   DEL.GP_PAYGROUP   = SST.GP_PAYGROUP
  AND   DEL.CAL_ID        = SST.CAL_ID
  AND   DEL.CAL_RUN_ID    = SST.CAL_RUN_ID
  AND   DEL.EMPLID        = SST.EMPLID
  AND   DEL.EMPL_RCD      = SST.EMPL_RCD
  AND   SST.RSLT_SEG_NUM  =  (SELECT MAX(RSLT_SEG_NUM)  
                             FROM PS_GP_PYE_SEG_STAT 
                             WHERE EMPLID          = SST.EMPLID
                             AND   EMPL_RCD        = SST.EMPL_RCD
                             AND   GP_PAYGROUP     = SST.GP_PAYGROUP
                             AND   CAL_ID          = SST.CAL_ID
                             AND   CAL_RUN_ID      = SST.CAL_RUN_ID
                             AND   ORIG_CAL_RUN_ID = SST.ORIG_CAL_RUN_ID)
  AND   SST.RSLT_VER_NUM  = (SELECT MAX(RSLT_VER_NUM) 
                             FROM PS_GP_PYE_SEG_STAT 
                             WHERE EMPLID          = SST.EMPLID
                             AND EMPL_RCD          = SST.EMPL_RCD
                             AND RSLT_SEG_NUM      = SST.RSLT_SEG_NUM
                             AND GP_PAYGROUP       = SST.GP_PAYGROUP
                             AND CAL_ID            = SST.CAL_ID)
  AND   SST.RSLT_REV_NUM  = (SELECT MAX(RSLT_REV_NUM) 
                             FROM PS_GP_PYE_SEG_STAT 
                             WHERE EMPLID          = SST.EMPLID
                             AND EMPL_RCD          = SST.EMPL_RCD
                             AND RSLT_SEG_NUM      = SST.RSLT_SEG_NUM
                             AND RSLT_VER_NUM      = SST.RSLT_VER_NUM
                             AND GP_PAYGROUP       = SST.GP_PAYGROUP
                             AND CAL_ID            = SST.CAL_ID) 
  AND   SST.SEG_BGN_DT    >= $PeriodBgnDt
[$LastPeriod]
END-SELECT
End-Procedure Calc-Compl-Data

!**************************************
begin-Procedure CalculationData
#debug show '** CalculationData **'
#debug show '$Empl Id:     ' $EmplId
#debug show '#Empl_Rcd:    ' #Empl_Rcd
#debug show '$PeriodBgnDt: ' $PeriodBgnDt
#debug show '$PeriodEndDt: ' $PeriodEndDt
!**************************************
Begin-SELECT On-Error=SQL-Error
REMUN.GPBR_PR_FGTS_BASE
REMUN.GPBR_TDY_FGTS_BASE
REMUN.GPBR_COMP_FGTS_BSE
REMUN.GPBR_BANKING_BLNCE
REMUN.GPBR_PR_FGTS_PCT
REMUN.GPBR_FGTS_PCT
REMUN.GPBR_PREV_NTF_AMT
REMUN.GPBR_FINE_AMOUNT

   Let #Field25 =&REMUN.GPBR_PR_FGTS_BASE
   Let #Field26=&REMUN.GPBR_TDY_FGTS_BASE
   Let #Field27=&REMUN.GPBR_COMP_FGTS_BSE
   Let #Field28=&REMUN.GPBR_BANKING_BLNCE
   Let #Field30=&REMUN.GPBR_PR_FGTS_PCT
   !Let #Field31=&REMUN.GPBR_FGTS_PCT
   Let #Field31 = #Field26 * 0.08
   Let #Field32=&REMUN.GPBR_PREV_NTF_AMT
   Let #Field33=&REMUN.GPBR_FINE_AMOUNT
   Let #Field29=#Field25+#Field26+#Field27+#Field28
   Let #Field34=#Field30+#Field31+#Field32+#Field33
   
FROM PS_GPBR_GRFC_WA REMUN
   , PS_GP_PYE_SEG_STAT SEG
WHERE REMUN.EMPLID   = $Emplid
AND   REMUN.EMPL_RCD = #Empl_Rcd
and   REMUN.ORIG_CAL_RUN_ID = REMUN.CAL_RUN_ID
AND   REMUN.GP_PAYGROUP = SEG.GP_PAYGROUP
AND   REMUN.CAL_ID      = SEG.CAL_ID
AND   REMUN.CAL_RUN_ID  = SEG.CAL_RUN_ID
AND   REMUN.ORIG_CAL_RUN_ID = SEG.ORIG_CAL_RUN_ID
AND   REMUN.RSLT_SEG_NUM= SEG.RSLT_SEG_NUM
AND   REMUN.EMPLID      = SEG.EMPLID
AND   REMUN.EMPL_RCD    = SEG.EMPL_RCD
AND   SEG.RSLT_SEG_NUM  = (SELECT MAX(RSLT_SEG_NUM)  
                           FROM PS_GP_PYE_SEG_STAT
                           WHERE EMPLID          = SEG.EMPLID
                           AND   CAL_RUN_ID      = SEG.CAL_RUN_ID
                           AND   EMPL_RCD        = SEG.EMPL_RCD
                           AND   GP_PAYGROUP     = SEG.GP_PAYGROUP
                           AND   CAL_ID          = SEG.CAL_ID
                           AND   ORIG_CAL_RUN_ID = SEG.ORIG_CAL_RUN_ID) 
AND   SEG.RSLT_VER_NUM  = (SELECT MAX(RSLT_VER_NUM) 
                           FROM PS_GP_PYE_SEG_STAT
                           WHERE EMPLID          = SEG.EMPLID
                           AND EMPL_RCD          = SEG.EMPL_RCD
                           AND GP_PAYGROUP       = SEG.GP_PAYGROUP
                           AND CAL_ID            = SEG.CAL_ID)
AND   SEG.RSLT_REV_NUM  = (SELECT MIN(RSLT_REV_NUM) 
                           FROM PS_GP_PYE_SEG_STAT
                           WHERE EMPLID          = SEG.EMPLID
                           AND EMPL_RCD          = SEG.EMPL_RCD
                           AND RSLT_VER_NUM      = SEG.RSLT_VER_NUM
                           AND GP_PAYGROUP       = SEG.GP_PAYGROUP
                           AND CAL_ID            = SEG.CAL_ID) 
AND   SEG.SEG_BGN_DT    >= $PeriodBgnDt
AND   SEG.SEG_END_DT    <= $PeriodEndDt
end-select
end-procedure CalculationData

!**************************************
begin-procedure Print-Data
!show 'Print-Data'
!**************************************
#debug show '$LastHire    ' $LastHire
#debug show '$Birthday    ' $Birthday
#debug show '$FGTSDate    ' $FGTSDate
#debug show '$TermNotif   ' $TermNotif

Do Format-DateTime($LastHire,$LastHire,{DEFDMY}, '','')
Do Format-DateTime($Birthday,$Birthday ,{DEFDMY}, '','')
Do Format-DateTime($FGTSDate,$FGTSDate ,{DEFDMY}, '','')
Do Format-DateTime($TermNotif,$TermNot ,{DEFDMY}, '','')

#debug show '$LastHire    ' $LastHire
#debug show '$Birthday    ' $Birthday
#debug show '$FGTSDate    ' $FGTSDate
#debug show '$TermNotif   ' $TermNot

If $TermNot = ''
    Let $TermNot = '          '
End-If

  Alter-Printer Point-size = #StdFont Font-Type = Proportional Font = #StdFont

!-----------Employers Data
   do PrintLayout
   Alter-Printer Point-size = 7 Font-Type = Proportional Font = 7
   Print $Descr                         ({RDat02},{CDat02})
   Print $CompanyCNPJ                   ({RDat03},{CDat02}) Edit 'XX.XXX.XXX/XXXX-XX'
   Print $SupName                       ({RDat03},{CDat04})
   Print $SupPhone                      ({RDat03},+5)
   Print $Address1                      ({RDat05},{CDat02})
   Print $AdrNum                        ({RDat05},+20)
   Print $Address4                      ({RDat06},{CDat02})
   Print $Address3                      ({RDat06},{CDat04})
   Print $State                         ({RDat06},{CDat08})
   Print $Postal                        ({RDat06},{CTit00})
   Print $ServiceTakerCNPJ              ({RDat10},{CDat02})
   Print $ServTakerName                 ({RDat10},{CDat04})
   Print $FPAS                          ({RDat12},{CDat02})
   Print $SimplesOptn                   ({RDat12},{CDat13})
   Print $EstabBRA                      ({RDat12},{CDat14}) Edit 'XXXX-X/XX'
 !-----------Employee Data
   Print $EmplName                      ({RDat15},{CDat02})
   Print $NationalID                    ({RDat16},{CDat02})
   Print $LastHire                      ({RDat16},{CDat14})
   Print $Sefip                         ({RDat16},{CDat18})
   Print $TermNot                       ({RDat16},{CDat19})
   Print $TerminationType               ({RDat16},+3)
   Print $PriorNotice                   ({RDat16},{CDat20})
   Alter-Printer Point-size = 5 Font-Type = Proportional Font = 5
   Print 'Data homologaçao/publicaçao' ({RDat16},{CTit21})
   Print '2.- Indenizado'       ({RDat16},{CTit20a})
   Alter-Printer Point-size = 7 Font-Type = Proportional Font = 7


   Print $Birthday                      ({RDat22},{CDat02})
   let $CompleteWkC = $WorkCard || ' ' || $Series
   Print $CompleteWkC                      ({RDat22},{CDat14})
   Print $FGTSDate                      ({RDat22},{CDat19})

   Alter-Printer Point-size = 5 Font-Type = Proportional Font = 5
   Print 'anterior a 05/10/1988'    ({RDat22},{CTit20})
   Alter-Printer Point-size = 7 Font-Type = Proportional Font = 7

!-----------Payment Data

   Print #Field25                       ({RDat25},{CDat25}) edit 999,999.99
   Print #Field26                       ({RDat25},{CDat26}) edit 999,999.99
   Print #Field27                       ({RDat25},{CDat27}) edit 999,999.99
   Print #Field28                       ({RDat25},{CDat28}) edit 999,999.99
   Print #Field29                       ({RDat25},{CDat29}) edit 999,999.99
   Print #Field30                       ({RDat30},{CDat25}) edit 999,999.99
   Print #Field31                       ({RDat30},{CDat26}) edit 999,999.99
   Print #Field32                       ({RDat30},{CDat27}) edit 999,999.99
   Print #Field33                       ({RDat30},{CDat28}) edit 999,999.99
   Print #Field34                       ({RDat30},{CDat29}) edit 999,999.99

   new-page

end-procedure Print-Data

!**************************************
begin-procedure PrintLayout
!**************************************
   Alter-Printer Point-size = 35 Font-Type = Proportional Font = 35
   print-image (4,1)
   type         = GIF-FILE
   image-size   = (20,3)
   source       = $FileDir
 
   Alter-Printer Point-size = 8 Font-Type = Fixed Font = 8
   print 'Guia de Recolhimento Rescisório do FGTS e da Contribuição Social' (5,23) Bold
   Alter-Printer Point-size = 5 Font-Type = Proportional Font = 5
   Print '00-Para uso da CAIXA' ({RTit00},{CTit00})
   Print '01-Carimbo CEF'    ({RSub1},{CTit00})
   Alter-Printer Point-size = 8 Font-Type = Proportional Font = 8
   Print 'Dados do Empregador' ({RSub1},{CSub1}) Bold
   Alter-Printer Point-size = 5 Font-Type = Proportional Font = 5
   Print '02-Razao Social/Nome'  ({RTit02},{CTit02})
   Graphic ({RTit00},99 ,{CBox22}) box  3 {G2}
   Graphic ({RTit00},99 ,{CBox22}) box  18 {G2}
   Graphic ({RTit02},{CTit02} ,{CBox09}) box  4 {G2}
   Print '03-CNPJ/CEI' ({RTit03},{CTit02})
   Graphic ({RTit03},{CTit02} ,{CBox09}) box  4 {G2}
   Print '04-Pessoa para contato/DDD/telefone' ({RTit03},{CTit04})
   Graphic ({RTit03},{CTit02} ,{CBox04}) box  4 {G2}
   Print '05-EndereÇAo (Logradouro, #, Andar, Apartamento)'  ({RTit05},{CTit02})
   Graphic ({RTit05},{CTit02} ,{CBox09}) box  4 {G2}
   Print '06-Bairro/distrito' ({RTit06},{CTit02})
   Graphic ({RTit06},{CTit02} ,{CBox06}) box  4 {G2}
   Graphic ({RTit06},{CTit02} ,{CBox04}) box  4 {G2}
   Print '07-Municipio'  ({RTit06},{CTit04})
   Graphic ({RTit06},{CTit02} ,{CBox08}) box  4 {G2}
   Print '08-UF' ({RTit06},{CTit08})
   Graphic ({RTit06},{CTit02} ,{CBox09}) box  4 {G2}
   Print '09-CEP'  ({RTit06},{CTit00})
   Graphic ({RTit10},{CTit02} ,{CBox06}) box  4 {G2}
   Graphic ({RTit10},{CTit02} ,{CBox04}) box  4 {G2}
   Print '10-Tomador de serviço (CNPJ/CEI/CGC)'  ({RTit10},{CTit02})
   Print '11-Tomador de serviço (razão social)'  ({RTit10},{CTit11})
   Graphic ({RTit12},{CTit02} ,{CBox11}) box  4 {G2}
   Graphic ({RTit12},{CBox13} ,{CBox14}) box  4 {G2}
   Print '12-FPAS' ({RTit12},{CTit02})
   Print '13-SIMPLES' ({RTit12},{CTit13})
   Print '14-CNAE' ({RTit12},{CTit14})
   
   Alter-Printer Point-size = 8 Font-Type = Proportional Font = 8
   Print 'Dados do Trabalhador'   ({RSub2},{CSub1}) Bold
   Alter-Printer Point-size = 5 Font-Type = Proportional Font = 5
   
   Print '15-Nome do trabalhador' ({RTit15},{CTit02})
   Graphic ({RTit15},{CTit02} ,{CBox06}) box  4 {G2}
   Print '16-No. do PIS/PASEP' ({RTit16},{CTit02})
   Graphic ({RTit16},{CTit02} ,{CBox17}) box  4 {G2}
   Print '17-Data admissão'  ({RTit16},{CTit17})
   Print '18-Cat' ({RTit16},{CTit18})
   Graphic ({RTit16},{CTit02} ,{CBox18}) box  4 {G2}
   Graphic ({RTit16},{CTit02} ,{CBox19}) box  4 {G2}
   Graphic ({RTit16},{CTit02} ,{CBox20}) box  4 {G2}
   Graphic ({RTit16},{CTit02} ,{CBox20a}) box 4 {G2}
   
   Graphic ({RTit16},{CTit001} ,21) box  4 {G2}
   Print '' ({RTit16},{CTit19})
   Print '19-Data Movimentaçao    Código' ({RTit16},+1)
   Print '20-Aviso Previo' ({RTit16},{CTit20})
   Print '1.- Trabalhado'  ({RTit16},{CTit20a})
   Print '21-Recolhimento dissidio /Acordo' ({RTit16},{CTit21})
   Graphic ({RTit22},{CTit02} ,{CBox17}) box  4 {G2}
   Graphic ({RTit22},{CTit02} ,{CBox19}) box  4 {G2}
   Graphic ({RTit22},{CTit02} ,{CBox20}) box  4 {G2}
   Print '22-Data de nascimento' ({RTit22},{CTit02})
   Print '23-Carteira de Trabalho (no serie)' ({RTit22},{CTit17})
   Print '24-Data Opção'  ({RTit22},{CTit19})
   Print 'Campo obligatorio para admissao' ({RTit22},{CTit20})
   Alter-Printer Point-size = 8 Font-Type = Proportional Font = 8
   Print 'Informaçao de remuneração/saldo fins rescisòrios'   ({RSub3},{CSub1}) Bold
   Alter-Printer Point-size = 5 Font-Type = Proportional Font = 5
   Print '25-Mes anterior à rescisão'  ({RTit25},{CTit02})
   Graphic ({RTit25},{CTit02} ,{CBox06}) box  4 {G2}
   Graphic ({RTit25},{CTit02} ,{CBox17}) box  4 {G2}
   Graphic ({RTit25},{CTit02} ,{CBox19}) box  4 {G2}
   Graphic ({RTit25},{CTit02} ,{CBox20}) box  4 {G2}
   Graphic ({RTit25},{CTit02} ,{CBox21}) box  4 {G2}
   Print '26-Mes de rescisão'  ({RTit25},{CTit17})
   Print '27-Aviso Prévio Indenizado'  ({RTit25},{CTit19})
   Print '28-Saldo para fins rescisórios'  ({RTit25},{CTit20})
   Print '29-Somatório (campos 25 a 28)'  ({RTit25},{CTit21})
   Alter-Printer Point-size = 6 Font-Type = Proportional Font = 5
   Print 'Os valores lançados nos campo abaixo devem contemplar, além daqueles ao trabalhador, a Contribução Social de que trata a Lei Complementar 110/2001, bem como todos os'  (+6,{CTit02})
   Alter-Printer Point-size = 2 Font-Type = Proportional Font = 2
   Print ''   (+1,)
   Alter-Printer Point-size = 6 Font-Type = Proportional Font = 5
   Print 'encargos legais por recolhimento em atraso, quando for o caso.' (,{CTit02})
   Alter-Printer Point-size = 8 Font-Type = Proportional Font = 8
   Print 'Valores a recolher' ({RSub4},{CTit02}) Bold
   Alter-Printer Point-size = 5 Font-Type = Proportional Font = 5
   Print '30-Mes anterior à rescisão'  ({RTit30},{CTit02})
   Graphic ({RTit30},{CTit02} ,{CBox06}) box  4 {G2}
   Graphic ({RTit30},{CTit02} ,{CBox17}) box  4 {G2}
   Graphic ({RTit30},{CTit02} ,{CBox19}) box  4 {G2}
   Graphic ({RTit30},{CTit02} ,{CBox20}) box  4 {G2}
   Graphic ({RTit30},{CTit02} ,{CBox21}) box  4 {G2}
   Print '31-Mes de rescisão'  ({RTit30},{CTit17})
   Print '32-Aviso Prévio Indenizado'  ({RTit30},{CTit19})
   Print '33-Multa Recisória'  ({RTit30},{CTit20})
   Print '34-Total a recolher'  ({RTit30},{CTit21})
   Print '_______________________________________________' ({RSign},{CTit02}) Bold
   Print 'Local e data' (+1,{CTit02}) Bold
   Print $Emplid        ( , {CBox21})
   Print #Empl_Rcd      ( , {CDat29})
end-procedure

!**************************************

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'gpbrmape.sqc'  !Get Pin Code
