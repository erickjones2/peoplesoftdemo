!***********************************************************************
!  GPAUPY22 :  Payment Summary Reconciliation                          *
!            The purpose of this report is for the organisation to     *
! check if the values to be sent to the ATO via magnetic media are     *
! correct.                                                             *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2015/11/30:03:31:46                                 !
!       $Release:  HR92                                                !
!           $Bug:  22273461                                            !
!                                                                      *
!***********************************************************************
!                                                                      *
!  Date      Modified By  Description                                  *
! =========  ===========  ============================================ *
!                                                                      *
! 06-Jul-01  R. De Asis   Change BAL_GRP_ID to BALANCE_GRP_NUM         *
!                                                                      *
! 13-oct-03  SN           Changes made for the following issues        *
!                         1- Lump Sum C and C Tax not handled correctly*
!                         2- Total Tax withheld incorrect              *
!                         3- print position not sufficient             *
!                         4- Lump C and C Tax not in summary           *
!                         5- Primary Name retrieved incorrectly        *
!18-Jun-04 ICE726252000 SQR modified so as to Select Payees Recieving  *
!                        ETP only along with the other payees in       *
!                        PS_GPAU_EE_PSM record.                        *
!21-Jun-04 ICE730521000 SQR modified to reset Pay Entity totals after  *
!                        change in Pay Entity.                         *
!***********************************************************************
#include 'setenv.sqc'   !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization

begin-report

  do Init-Processing
  do Main-Process
  do Reset                        ! called from reset.sqc
  do Stdapi-Term
end-report

begin-setup

   declare-variable
   date $Start_Dt
   date $End_Dt

end-declare
end-setup


begin-procedure Init-Processing

  do Init-Datetime
  do Get-Current-Datetime
  do Init-Number
  do Init-Report
  do Define-Prcs-Vars
  do Stdapi-Init
  do Get-Language-Codes
  do Select-Parameters

  if &RC.GPAU_PSM_PAYEE_SW = 'Y'
     let $Order_By = 'ORDER BY A.PAY_ENTITY , C.NAME, A.BALANCE_GRP_NUM'
  else
     let $Order_By = 'ORDER BY A.PAY_ENTITY , A.EMPLID, A.BALANCE_GRP_NUM'
  end-if

  DISPLAY $ORDER_BY
end-procedure !Init-Processing

!***********************************************************************
! Init-Report                                                          *
! Called By:    Init-Processing                                        *
!***********************************************************************

begin-procedure Init-Report

#define Emplid_Pos              1
#define Bal_Id_Pos             10
#define Name_Pos               17
#define From_Pos               47
#define To_Pos                 59
#define Create_Pos             71
#define Total_1_Pos            90
#define Total_2_Pos           109
#define Total_3_Pos           128
#define Union_Pos             148
#define Workplace_Pos         144
#define Tax_Wheld_Pos         163

#define Pay_Entity_Totals_Pos   1
#define Summary_Totals_lbl_Pos 21
#define Summary_Totals_Pos     65


!*** Translations procedures & Strings Table retrievals.

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Append_Report_Translation ('GPAUPY22')

    do Get_Field_Information ('GPAUPY22', 'GPAUPY22_TITLE',     $GPAUPY22_Title,        #DW)
    do Get_Field_Information ('GPAUPY22', 'PAY_ENTITY',         $Pay_Entity_lbl,        #DW)
    do Get_Field_Information ('GPAUPY22', 'TAX_YEAR',           $Tax_Year_lbl,          #DW)
    do Get_Field_Information ('GPAUPY22', 'EMPLID',             $Emplid_lbl,            #DW)
    do Get_Field_Information ('GPAUPY22', 'BAL_ID',             $Bal_ID_lbl,            #DW)
    do Get_Field_Information ('GPAUPY22', 'EMPLOYEE_NAME',      $Employee_Name_lbl,     #DW)
    do Get_Field_Information ('GPAUPY22', 'FROM_DT',            $From_Dt_lbl,           #DW)
    do Get_Field_Information ('GPAUPY22', 'TO_DT',              $To_Dt_lbl,             #DW)
    do Get_Field_Information ('GPAUPY22', 'CREATE_DT',          $Create_Dt_lbl,         #DW)
    do Get_Field_Information ('GPAUPY22', 'GROSS_PAY',          $Gross_Pay_lbl,         #DW)
    do Get_Field_Information ('GPAUPY22', 'CDEP_PAY',           $CDEP_Pay_lbl,          #DW)
    do Get_Field_Information ('GPAUPY22', 'OTHER_PAY',          $Other_Pay_lbl,         #DW)
    do Get_Field_Information ('GPAUPY22', 'ER_SUP_CONT',        $Super_Contrib_lbl,     #DW)
    do Get_Field_Information ('GPAUPY22', 'LUMP_SUM_A',         $Lump_Sum_A_lbl,        #DW)
    do Get_Field_Information ('GPAUPY22', 'FBT_EARN',           $FBT_Earn_lbl,          #DW)
    do Get_Field_Information ('GPAUPY22', 'ALLOWANCE_1',        $Allowance_1_lbl,       #DW)
    do Get_Field_Information ('GPAUPY22', 'ALLOWANCE_2',        $Allowance_2_lbl,       #DW)
    do Get_Field_Information ('GPAUPY22', 'ALLOWANCE_3',        $Allowance_3_lbl,       #DW)
    do Get_Field_Information ('GPAUPY22', 'ALLOWANCE_4',        $Allowance_4_lbl,       #DW)
    do Get_Field_Information ('GPAUPY22', 'LUMP_SUM_B',         $Lump_Sum_B_lbl,        #DW)
    do Get_Field_Information ('GPAUPY22', 'LUMP_SUM_C',         $Lump_Sum_C_lbl,        #DW)
    do Get_Field_Information ('GPAUPY22', 'LUMP_SUM_C_TR',      $Lump_Sum_C_TR_lbl,     #DW)
    do Get_Field_Information ('GPAUPY22', 'LUMP_SUM_D',         $Lump_Sum_D_lbl,        #DW)
    do Get_Field_Information ('GPAUPY22', 'LUMP_SUM_E',         $Lump_Sum_E_lbl,        #DW)
    do Get_Field_Information ('GPAUPY22', 'UNION_FEES',         $Union_Fees_lbl,        #DW)
    do Get_Field_Information ('GPAUPY22', 'WORKPLACE_GIVING',   $Workplace_Giving_lbl,  #DW)
    do Get_Field_Information ('GPAUPY22', 'TAX_WITHHELD',       $Tax_Withheld_lbl,      #DW)
    do Get_Field_Information ('GPAUPY22', 'PAY_ENTITY_TOTALS',  $Pay_Entity_Totals_lbl, #DW)
    do Get_Field_Information ('GPAUPY22', 'ACTIVE_COUNT',       $Active_Count_lbl,      #DW)
    do Get_Field_Information ('GPAUPY22', 'TOTAL_TAX_WITHHELD', $Total_Tax_lbl,         #DW)
    do Get_Field_Information ('GPAUPY22', 'CDEP_PAYMENTS',      $CDEP_Payments_lbl,     #DW)
    do Get_Field_Information ('GPAUPY22', 'OTHER_INCOME',       $Other_Income_lbl,      #DW)
    do Get_Field_Information ('GPAUPY22', 'REP_SUP_CONTRIB',    $Rep_SUP_Contrib_lbl,   #DW)
    do Get_Field_Information ('GPAUPY22', 'TOTAL_ALLOWANCE',    $Total_Allowance_lbl,   #DW)
    do Get_Field_Information ('GPAUPY22', 'FBT_REPORTABLE',     $FBT_Reportable_lbl,    #DW)

!*** Report variables.

    let $ReportID              = 'GPAUPY22'          ! Printed in header
    let $ReportTitle           = $GPAUPY22_Title     ! Printed in header
    let $ReportDate            = $AsOfToday          ! Printed in header
    let $ReportTime            = $AsOfNow            ! Printed in header
    let $Report_Language       = $curr_language_cd   ! curr_language_cd resolved in prcslng.sqc
    let #Maxlines              = 55                  ! # rows on a page, used for page breaking
end-procedure !Init-Report


begin-heading 16
#Include 'stdhdg01.sqc'

  print $Pay_Entity_lbl   (+1,1)
  print $Pay_Entity       (0,16)
  print $Pay_Entity_Nm    (0,26) wrap 60 4
  print $Tax_Year_lbl     (+1,1)
  print #Tax_Year         (0,16)  edit 9999

  if $Report_Type = '10'
    print '-'                 (+1,1,176)       fill
    print $Emplid_lbl         (+2,{Emplid_Pos}
    print $Bal_ID_lbl         (0,{Bal_Id_Pos})
    print $Employee_Name_lbl  (0,{Name_Pos})
    print $From_Dt_lbl        (0,{From_Pos})
    print $To_Dt_lbl          (0,{To_Pos})
    print $Create_Dt_lbl      (0,{Create_Pos})

    do Pad-Left($Gross_Pay_lbl, $Left_Gross_Pay_lbl)
    print $Left_Gross_Pay_lbl (0,{Total_1_Pos})

    do Pad-Left($Allowance_1_lbl, $Left_Allowance_1_lbl)
    print $Left_Allowance_1_lbl (0,{Total_2_Pos})

    do Pad-Left($Lump_Sum_A_lbl,$Left_Lump_Sum_A_lbl)
    print $Left_Lump_Sum_A_lbl     (0,{Total_3_Pos})

    print $Union_Fees_lbl     (0,150)

    do Pad-Left($Tax_Withheld_lbl,$Left_Tax_Withheld_lbl)
    print $Left_Tax_Withheld_lbl   (0,{Tax_Wheld_Pos})


    do Pad-Left($CDEP_Pay_lbl,$Left_CDEP_Pay_lbl)
    print $Left_CDEP_Pay_lbl       (+1,{Total_1_Pos})

    do Pad-Left($Allowance_2_lbl,$Left_Allowance_2_lbl)
    print $Left_Allowance_2_lbl    (0,{Total_2_Pos})

    do Pad-Left($Lump_Sum_B_lbl,$Left_Lump_Sum_B_lbl)
    print $Left_Lump_Sum_B_lbl     (0,{Total_3_Pos})

    print $Workplace_Giving_lbl     (0,{Workplace_Pos})

    do Pad-Left($Other_Pay_lbl,$Left_Other_Pay_lbl)
    print $Left_Other_Pay_lbl      (+1,85)

    do Pad-Left($Allowance_3_lbl,$Left_Allowance_3_lbl)
    print $Left_Allowance_3_lbl    (0,{Total_2_Pos})

    do Pad-Left($Lump_Sum_D_lbl,$Left_Lump_Sum_D_lbl)
    print $Left_Lump_Sum_D_lbl     (0,{Total_3_Pos})

    do Pad-Left($Super_Contrib_lbl,$Left_$Super_Contrib_lbl)
    print $Left_$Super_Contrib_lbl      (+1,87)


    do Pad-Left($Allowance_4_lbl,$Left_Allowance_4_lbl)
    print $Left_Allowance_4_lbl    (0,{Total_2_Pos})

    do Pad-Left($Lump_Sum_E_lbl,$Left_Lump_Sum_E_lbl)
    print $Left_Lump_Sum_E_lbl     (0,{Total_3_Pos})

    do Pad-Left($FBT_Earn_lbl,$Left_FBT_Earn_lbl)
    print $Left_FBT_Earn_lbl       (+1,{Total_1_Pos})


    do Pad-Left($Lump_Sum_C_lbl,$Left_Lump_Sum_C_lbl)
    print $Left_Lump_Sum_C_lbl     (0,{Total_3_Pos})

    do Pad-Left($Tax_Withheld_lbl,$Left_Tax_Withheld_lbl)
    print $Left_Tax_Withheld_lbl   (0,{Tax_Wheld_Pos})

    do Pad-Left($Lump_Sum_C_TR_lbl,$Left_Lump_Sum_C_TR_lbl)
    print $Left_Lump_Sum_C_TR_lbl  (+1,{Total_3_Pos})

    do Pad-Left($Tax_Withheld_lbl,$Left_Tax_Withheld_lbl)
    print $Left_Tax_Withheld_lbl   (0,{Tax_Wheld_Pos})



    print '-'                 (+1,1,176)       fill
  end-if

end-heading

!***********************************************************************
! Procedure: Pad-Left                                                  *
!            Used to pad the headings with spaces
!***********************************************************************
begin-procedure Pad-Left($In_Lbl, :$Out_lbl)

    let #Col_Width = 13   ! The width of $$,$$$,$$$.99

    let #Lenth = length($In_lbl)
    let #Spaces = #Col_Width - #Length
    let $Out_lbl = lpad($In_lbl,#Spaces, ' ')

end-procedure
!***********************************************************************
! Procedure: Main-Process                                              *
!            The main procedure in the report.                         *
!            Process records from GPAU_EE_PSM and GPAU_EE_ETP          *
!***********************************************************************
begin-procedure Main-Process

  let $Old_Emplid     = ' '
  let $Old_Bal_Grp_Num = ' '
  let $Old_Pay_Entity = ' '
  let #Empl_Count     = 0
  Let $First = 'Y'
begin-SELECT
A.PAY_ENTITY   () On-Break Level=1 After=Process-Summary print=never before=Before-PayEntity
A.EMPLID
C.NAME
C.LAST_NAME
C.MIDDLE_NAME
C.FIRST_NAME
A.BALANCE_GRP_NUM

   LET $Name = ltrim(rtrim(&C.NAME,' '),' ')
   LET $Last_Name = ltrim(rtrim(&C.LAST_NAME,' '),' ')
   LET $Middle_Name = ltrim(rtrim(&C.MIDDLE_NAME,' '),' ')
   LET $First_Name = ltrim(rtrim(&C.FIRST_NAME,' '),' ')
   LET $BALANCE_GRP_NUM = &A.BALANCE_GRP_NUM

   let $Pay_Entity    = &A.PAY_ENTITY
   let $Pay_Entity_Nm = &D.GPAU_REGISTERED_NM
   let $Emplid        = &A.EMPLID
   move &A.BALANCE_GRP_NUM to $Bal_Grp_Num

   Do Get_ETP_Record

! Resolution ID: 141359 - Lump C Tax incorrectly not reported. Reporting Tax Withheld with Lump Sum C and without Lump Sum C

   !let #Total_Tax_Wheld = #Total_Tax_Wheld + #LumpC_Tax + &A.GPAU_PSM_TAX_WHELD
   let #Total_Tax_Wheld = #Total_Tax_Wheld + #LumpC_Tax + &A.GPAU_PSM_TAX_WHELD + #LumpC_Tax_TR

   let #Total_Tax_Wheld_NoC = #Total_Tax_Wheld_NoC + &A.GPAU_PSM_TAX_WHELD

   let #Total_Gross_Pay = #Total_Gross_Pay + &A.GPAU_PSM_GROSS_PAY
   let #Total_CDEP_Pay  = #Total_CDEP_Pay  + &A.GPAU_PSM_CDEP_Pay
   let #Total_Other_Pay = #Total_Other_Pay + &A.GPAU_PSM_Other_Pay
   Let #Total_Super_Pay = #Total_Super_Pay + &A.GPAU_PSM_ER_SC
   let #Total_LumpA     = #Total_LumpA     + &A.GPAU_PSM_LUMPA
   let #Total_LumpB     = #Total_LumpB     + &A.GPAU_PSM_LUMPB
   let #Total_LumpD     = #Total_LumpD     + &A.GPAU_PSM_LUMPD
   let #Total_LumpE     = #Total_LumpE     + &A.GPAU_PSM_LUMPE
   let #Total_Allowance = #Total_Allowance + &A.GPAU_PSM_TOTALLOW

   let #Total_Union     = #Total_Union     + &A.GPAU_PSM_TOTUNION
   if &A.GPAU_PSS_WRK_PLC <> 0
      if &A.GPAU_PSS_WRK_PLC1 <> 0
         let #Total_Workplace = #Total_Workplace + &A.GPAU_PSS_WRK_PLC1
      else
         let #Total_Workplace = #Total_Workplace + &A.GPAU_PSS_WRK_PLC
      end-if
   else
      let #Total_Workplace = #Total_Workplace + &A.GPAU_PSS_WRK_PLC
   end-if
   
   let #Total_FBT       = #Total_FBT       + &A.GPAU_PSM_FBT_EARNS


   if ($Old_Emplid = ' ' AND $Report_Type = '10')
    OR ($Report_Type = '10' AND
    (&A.EMPLID  <> $Old_Emplid OR
    &A.BALANCE_GRP_NUM  <> $Old_Bal_Grp_Num))

    let $From_Dt = &A.GPAU_EE_START_DT
    do Format-DateTime($From_Dt,$From_Dt,{DEFDMY},'','')

    let $To_Dt = &A.GPAU_EE_END_DT
    do Format-DateTime($To_Dt,$To_Dt,{DEFDMY},'','')

    let $Create_Dt = &A.DATETIME_STAMP
    do Format-DateTime($Create_Dt,$Create_Dt,{DEFDMY},'','')

   LET #GPAU_PSM_GROSS_PAY    = &A.GPAU_PSM_GROSS_PAY
   !LET #GPAU_PSM_ALLOW1       = &A.GPAU_PSM_ALLOW1
   LET #GPAU_PSM_LUMPA        = &A.GPAU_PSM_LUMPA
   LET #GPAU_PSM_UNION        = &A.GPAU_PSM_TOTUNION
   
   if &A.GPAU_PSM_ALLOW1_NM = 'VARIOUS'
   LET #GPAU_PSM_ALLOW1       = &A.GPAU_PSM_TOTALLOW
   else
   LET #GPAU_PSM_ALLOW1       = &A.GPAU_PSM_ALLOW1
   end-if
   
   if &A.GPAU_PSS_WRK_PLC <> 0
      if &A.GPAU_PSS_WRK_PLC1 <> 0
         LET #GPAU_PSM_Workplace =  &A.GPAU_PSS_WRK_PLC1
      else
         LET #GPAU_PSM_Workplace =  &A.GPAU_PSS_WRK_PLC
      end-if
   else
      LET #GPAU_PSM_Workplace =  &A.GPAU_PSS_WRK_PLC
   end-if
   
   LET #GPAU_PSM_TAX_WHELD    = &A.GPAU_PSM_TAX_WHELD
   LET #GPAU_PSM_CDEP_PAY     = &A.GPAU_PSM_CDEP_PAY
   LET #GPAU_PSM_ALLOW2       = &A.GPAU_PSM_ALLOW2
   LET #GPAU_PSM_LUMPB        = &A.GPAU_PSM_LUMPB
   LET #GPAU_PSM_OTHER_PAY    = &A.GPAU_PSM_OTHER_PAY
   LET #GPAU_PSM_Super_PAY    = &A.GPAU_PSM_ER_SC
   LET #GPAU_PSM_ALLOW3       = &A.GPAU_PSM_ALLOW3
   LET #GPAU_PSM_LUMPD        = &A.GPAU_PSM_LUMPD
   LET #GPAU_PSM_FBT_EARNS    = &A.GPAU_PSM_FBT_EARNS
   LET #GPAU_PSM_ALLOW4       = &A.GPAU_PSM_ALLOW4
   LET #GPAU_PSM_LUMPE        = &A.GPAU_PSM_LUMPE


      Do Process-Detail
   end-if

   let $Old_Emplid = &A.EMPLID
   let $Old_Pay_Entity = &A.PAY_ENTITY
   let #Old_Bal_Grp_Num = &A.BALANCE_GRP_NUM
   let #Empl_Count = #Empl_Count + 1




A.GPAU_TAX_YEAR
A.GPAU_EE_START_DT
A.GPAU_EE_END_DT
A.GPAU_PSM_TAX_WHELD
A.GPAU_PSM_GROSS_PAY
A.GPAU_PSM_CDEP_PAY
A.GPAU_PSM_OTHER_PAY
A.GPAU_PSM_ER_SC
A.GPAU_PSM_LUMPA
A.GPAU_PSM_LUMPB
A.GPAU_PSM_LUMPD
A.GPAU_PSM_LUMPE
A.GPAU_PSM_FBT_EARNS
A.GPAU_PSM_ALLOW1
A.GPAU_PSM_ALLOW1_NM
A.GPAU_PSM_ALLOW2
A.GPAU_PSM_ALLOW3
A.GPAU_PSM_ALLOW4
A.GPAU_PSM_TOTALLOW
A.GPAU_PSM_UNION
A.GPAU_PSM_TOTUNION
A.GPAU_PSS_WRK_PLC
A.GPAU_PSS_WRK_PLC1
A.DATETIME_STAMP
D.GPAU_REGISTERED_NM
FROM  PS_GPAU_EE_PSM A,
      PS_NAMES C,
      PS_GP_PYENT_SGPAU D
WHERE  A.PAY_ENTITY  IN
   (SELECT B.PAY_ENTITY FROM PS_GPAU_RC_PSM_PYE B
     WHERE B.OPRID = $PRCS_OPRID
       AND B.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID)
AND A.GPAU_TAX_YEAR = #TAX_YEAR
AND C.EMPLID = A.EMPLID
AND C.NAME_TYPE = 'PRI'
AND C.EFFDT = (SELECT MAX(C1.EFFDT)
        FROM PS_NAMES C1
        WHERE C1.EMPLID = C.EMPLID  ! Retrieve the correct effective date for name type - PRI.
        AND C1.NAME_TYPE = 'PRI')   ! The c.name_type clause must be outside and in the sub select.
AND D.PAY_ENTITY = A.PAY_ENTITY
AND D.EFFDT = (SELECT MAX(D1.EFFDT) FROM PS_GP_PYENT_SGPAU D1  
               where D1.PAY_ENTITY = D.PAY_ENTITY   
                and D1.EFFDT <= A.GPAU_EE_END_DT)   
[$Order_By]
end-SELECT

begin-SELECT
A1.PAY_ENTITY   () On-Break Level=1 After=Process-Summary print=never
A1.EMPLID
C11.NAME
A1.BALANCE_GRP_NUM

     LET $taxyear = to_char(#TAX_YEAR)
     LET $Name = &C11.NAME
     LET $BALANCE_GRP_NUM = &A1.BALANCE_GRP_NUM

   let $str_start_dt =  $taxyear || '-' || '07' || '-01'
   LET $Start_Dt = strtodate($str_start_dt,'YYYY-MM-DD')
   LET $Start_Dt = dateadd($Start_Dt,'year',-1)
   LET $End_Dt = dateadd($Start_Dt,'year',1)
   LET $End_Dt = dateadd($End_Dt ,'day',-1)


   let $Pay_Entity    = &A1.PAY_ENTITY
   let $Pay_Entity_Nm = &D1.GPAU_REGISTERED_NM
   let $Emplid        = &A1.EMPLID
   move &A1.BALANCE_GRP_NUM to $Bal_Grp_Num

   Do Get_ETP_Record

! Resolution ID: 141359 - Lump C Tax incorrectly not reported. Reporting Tax Withheld with Lump Sum C and without Lump Sum C

   let #Total_Tax_Wheld = #Total_Tax_Wheld + #LumpC_Tax + 0

   let #Total_Tax_Wheld_NoC = #Total_Tax_Wheld_NoC + 0

   let #Total_Gross_Pay = #Total_Gross_Pay
   let #Total_CDEP_Pay  = #Total_CDEP_Pay
   let #Total_Other_Pay = #Total_Other_Pay
   let #Total_Super_Pay = #Total_Super_Pay
   let #Total_LumpA     = #Total_LumpA
   let #Total_LumpB     = #Total_LumpB
   let #Total_LumpD     = #Total_LumpD
   let #Total_LumpE     = #Total_LumpE
   let #Total_Allowance = #Total_Allowance
   let #Total_Union     = #Total_Union
   let #Total_Workplace = #Total_Workplace
   let #Total_FBT       = #Total_FBT


   if ($Old_Emplid = ' ' AND $Report_Type = '10')
    OR ($Report_Type = '10' AND
    (&A1.EMPLID  <> $Old_Emplid OR
    &A1.BALANCE_GRP_NUM  <> $Old_Bal_Grp_Num))

    let $From_Dt=$Start_Dt
     do Format-DateTime($From_Dt,$From_Dt,{DEFDMY},'','')

    let $To_Dt = $End_Dt
    do Format-DateTime($To_Dt,$To_Dt,{DEFDMY},'','')

    let $Create_Dt = &A1.DATETIME_STAMP
    do Format-DateTime($Create_Dt,$Create_Dt,{DEFDMY},'','')

   LET #GPAU_PSM_GROSS_PAY    = 0
   LET #GPAU_PSM_ALLOW1       = 0
   LET #GPAU_PSM_LUMPA        = 0
   LET #GPAU_PSM_UNION        = 0
   LET #GPAU_PSM_Workplace    = 0
   LET #GPAU_PSM_TAX_WHELD    = 0
   LET #GPAU_PSM_CDEP_PAY     = 0
   LET #GPAU_PSM_ALLOW2       = 0
   LET #GPAU_PSM_LUMPB        = 0
   LET #GPAU_PSM_OTHER_PAY    = 0
   LET #GPAU_PSM_Super_PAY    = 0
   LET #GPAU_PSM_ALLOW3       = 0
   LET #GPAU_PSM_LUMPD        = 0
   LET #GPAU_PSM_FBT_EARNS    = 0
   LET #GPAU_PSM_ALLOW4       = 0
   LET #GPAU_PSM_LUMPE        = 0

   LET $GPAU_PSM_GROSS_PAY    = 0
   LET $GPAU_PSM_ALLOW1       = 0
   LET $GPAU_PSM_LUMPA        = 0
   LET $GPAU_PSM_UNION        = 0
   LET $GPAU_PSM_Workplace    = 0
   LET $GPAU_PSM_TAX_WHELD    = 0
   LET $GPAU_PSM_CDEP_PAY     = 0
   LET $GPAU_PSM_ALLOW2       = 0
   LET $GPAU_PSM_LUMPB        = 0
   LET $GPAU_PSM_OTHER_PAY    = 0
   LET $GPAU_PSM_Super_PAY    = 0
   LET $GPAU_PSM_ALLOW3       = 0
   LET $GPAU_PSM_LUMPD        = 0
   LET $GPAU_PSM_FBT_EARNS    = 0
   LET $GPAU_PSM_ALLOW4       = 0
   LET $GPAU_PSM_LUMPE        = 0

      Do Process-Detail
   end-if

   let $Old_Emplid = &A1.EMPLID
   let $Old_Pay_Entity = &A1.PAY_ENTITY
   let #Old_Bal_Grp_Num = &A1.BALANCE_GRP_NUM
   let #Empl_Count = #Empl_Count + 1

A1.GPAU_TAX_YEAR
A1.DATETIME_STAMP
D1.GPAU_REGISTERED_NM
FROM   PS_GPAU_EE_ETP A1,
      PS_NAMES C11,
      PS_GP_PYENT_SGPAU D1
WHERE  A1.PAY_ENTITY  IN
   (SELECT B1.PAY_ENTITY FROM PS_GPAU_RC_PSM_PYE B1
     WHERE B1.OPRID = $PRCS_OPRID
       AND B1.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID)
AND A1.EMPLID NOT IN ( SELECT Z1.EMPLID FROM PS_GPAU_EE_PSM Z1
                                        WHERE Z1.GPAU_TAX_YEAR = A1.GPAU_TAX_YEAR
                                          AND Z1.PAY_ENTITY = A1.PAY_ENTITY
                                          AND Z1.BALANCE_GRP_NUM = A1.BALANCE_GRP_NUM)
AND A1.GPAU_TAX_YEAR = #TAX_YEAR
AND C11.EMPLID = A1.EMPLID
AND C11.NAME_TYPE = 'PRI'
AND C11.EFFDT = (SELECT MAX(C1.EFFDT)
        FROM PS_NAMES C1
        WHERE C1.EMPLID = C11.EMPLID  ! Retrieve the correct effective date for name type - PRI.
        AND C1.NAME_TYPE = 'PRI')   ! The c.name_type clause must be outside and in the sub select.
AND D1.PAY_ENTITY = A1.PAY_ENTITY
AND D1.EFFDT = (SELECT MAX(D2.EFFDT) FROM PS_GP_PYENT_SGPAU D2  
               where D2.PAY_ENTITY = D1.PAY_ENTITY   
                and D2.EFFDT <= A1.GPAU_ETP_PAY_DT)
end-SELECT

   LET #MsgFlagW = 1   ! Ensure End of report is written out.

end-procedure


!***********************************************************************
! Procedure: Process-Summary                                           *
!            Prints all the Pay Entity totals.                         *
!***********************************************************************
begin-procedure Process-Summary

   print $Pay_Entity_Totals_lbl (+2,{Pay_Entity_Totals_Pos})
   print $Active_Count_lbl      (+1,{Summary_Totals_lbl_Pos})
   print #Empl_Count            (0, {Summary_Totals_Pos})
   print $Gross_Pay_lbl         (+1,{Summary_Totals_lbl_Pos})
   let $Total_Gross_Pay = edit(#Total_Gross_Pay, '9,999,999,999.99')
   let $Total_Gross_Pay = substr($Total_Gross_Pay, 1, (length($Total_Gross_Pay) - length(ltrim($Total_Gross_Pay,' ')))-1)|| '$' || ltrim($Total_Gross_Pay,' ')
   print $Total_Gross_Pay (0, {Summary_Totals_Pos})
   print 'Tot Tax WH (No C)'    (+1,{Summary_Totals_lbl_Pos})
   let $Total_Tax_Wheld_NoC = edit(#Total_Tax_Wheld_NoC, '9,999,999,999.99')
   let $Total_Tax_Wheld_NoC = substr($Total_Tax_Wheld_NoC, 1, (length($Total_Tax_Wheld_NoC) - length(ltrim($Total_Tax_Wheld_NoC,' ')))-1)|| '$' || ltrim($Total_Tax_Wheld_NoC,' ')
   print $Total_Tax_Wheld_NoC (0, {Summary_Totals_Pos})
   print 'Tot Tax WH (inc C + ETP Wic Tax)'   (+1,{Summary_Totals_lbl_Pos}) 
   let $Total_Tax_Wheld = edit(#Total_Tax_Wheld, '9,999,999,999.99')
   let $Total_Tax_Wheld = substr($Total_Tax_Wheld, 1, (length($Total_Tax_Wheld) - length(ltrim($Total_Tax_Wheld,' ')))-1)|| '$' || ltrim($Total_Tax_Wheld,' ')
   print $Total_Tax_Wheld (0, {Summary_Totals_Pos})
   print $CDEP_Payments_lbl     (+1,{Summary_Totals_lbl_Pos})
   let $Total_CDEP_Pay = edit(#Total_CDEP_Pay, '9,999,999,999.99')
   let $Total_CDEP_Pay = substr($Total_CDEP_Pay, 1, (length($Total_CDEP_Pay) - length(ltrim($Total_CDEP_Pay,' ')))-1)|| '$' || ltrim($Total_CDEP_Pay,' ')
   print $Total_CDEP_Pay (0, {Summary_Totals_Pos})         
   print $Other_Income_lbl      (+1,{Summary_Totals_lbl_Pos})
   let $Total_Other_Pay = edit(#Total_Other_Pay, '9,999,999,999.99')
   let $Total_Other_Pay = substr($Total_Other_Pay, 1, (length($Total_Other_Pay) - length(ltrim($Total_Other_Pay,' ')))-1)|| '$' || ltrim($Total_Other_Pay,' ')
   print $Total_Other_Pay (0, {Summary_Totals_Pos})       
   print $Rep_SUP_Contrib_lbl   (+1,{Summary_Totals_lbl_Pos})
   let $Total_Super_Pay = edit(#Total_Super_Pay, '9,999,999,999.99')
   let $Total_Super_Pay = substr($Total_Super_Pay, 1, (length($Total_Super_Pay) - length(ltrim($Total_Super_Pay,' ')))-1)|| '$' || ltrim($Total_Super_Pay,' ')                  
   print $Total_Super_Pay (0, {Summary_Totals_Pos})          
   print $Total_Allowance_lbl   (+1,{Summary_Totals_lbl_Pos})
   let $Total_Allowance = edit(#Total_Allowance, '9,999,999,999.99')
   let $Total_Allowance = substr($Total_Allowance, 1, (length($Total_Allowance) - length(ltrim($Total_Allowance,' ')))-1)|| '$' || ltrim($Total_Allowance,' ')                     
   print $Total_Allowance (0, {Summary_Totals_Pos})          
   print $Lump_Sum_A_lbl        (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpA = edit(#Total_LumpA, '9,999,999,999.99')
   let $Total_LumpA = substr($Total_LumpA, 1, (length($Total_LumpA) - length(ltrim($Total_LumpA,' ')))-1)|| '$' || ltrim($Total_LumpA,' ')                     
   print $Total_LumpA (0, {Summary_Totals_Pos})         
   print $Lump_Sum_B_lbl        (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpB = edit(#Total_LumpB, '9,999,999,999.99')
   let $Total_LumpB = substr($Total_LumpB, 1, (length($Total_LumpB) - length(ltrim($Total_LumpB,' ')))-1)|| '$' || ltrim($Total_LumpB,' ')                        
   print $Total_LumpB (0, {Summary_Totals_Pos})       
   print 'Lump Sum C(LBP)'           (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpC = edit(#Total_LumpC, '9,999,999,999.99')
   let $Total_LumpC = substr($Total_LumpC, 1, (length($Total_LumpC) - length(ltrim($Total_LumpC,' ')))-1)|| '$' || ltrim($Total_LumpC,' ')                        
   print $Total_LumpC (0, {Summary_Totals_Pos})         
   
   print 'Lump Sum C Tax(LBP)'       (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpC_Tax = edit(#Total_LumpC_Tax, '9,999,999,999.99')
   let $Total_LumpC_Tax = substr($Total_LumpC_Tax, 1, (length($Total_LumpC_Tax) - length(ltrim($Total_LumpC_Tax,' ')))-1)|| '$' || ltrim($Total_LumpC_Tax,' ')                           
   print $Total_LumpC_Tax (0, {Summary_Totals_Pos})         
   print 'ETP Tax WIC'        (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpC_TR = edit(#Total_LumpC_TR, '9,999,999,999.99')
   let $Total_LumpC_TR = substr($Total_LumpC_TR, 1, (length($Total_LumpC_TR) - length(ltrim($Total_LumpC_TR,' ')))-1)|| '$' || ltrim($Total_LumpC_TR,' ')                           
   print $Total_LumpC_TR (0, {Summary_Totals_Pos})         
   print 'ETP WIC Tax'    (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpC_Tax_TR = edit(#Total_LumpC_Tax_TR, '9,999,999,999.99')
   let $Total_LumpC_Tax_TR = substr($Total_LumpC_Tax_TR, 1, (length($Total_LumpC_Tax_TR) - length(ltrim($Total_LumpC_Tax_TR,' ')))-1)|| '$' || ltrim($Total_LumpC_Tax_TR,' ')                           
   print $Total_LumpC_Tax_TR (0, {Summary_Totals_Pos})       
   print $Lump_Sum_D_lbl        (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpD = edit(#Total_LumpD, '9,999,999,999.99')
   let $Total_LumpD = substr($Total_LumpD, 1, (length($Total_LumpD) - length(ltrim($Total_LumpD,' ')))-1)|| '$' || ltrim($Total_LumpD,' ')                           
   print $Total_LumpD (0, {Summary_Totals_Pos})        
   print $Lump_Sum_E_lbl        (+1,{Summary_Totals_lbl_Pos})
   let $Total_LumpE = edit(#Total_LumpE, '9,999,999,999.99')
   let $Total_LumpE = substr($Total_LumpE, 1, (length($Total_LumpE) - length(ltrim($Total_LumpE,' ')))-1)|| '$' || ltrim($Total_LumpE,' ')                           
   print $Total_LumpE (0, {Summary_Totals_Pos})          
   print $FBT_Reportable_lbl    (+1,{Summary_Totals_lbl_Pos})
   let $Total_FBT = edit(#Total_FBT, '9,999,999,999.99')
   let $Total_FBT = substr($Total_FBT, 1, (length($Total_FBT) - length(ltrim($Total_FBT,' ')))-1)|| '$' || ltrim($Total_FBT,' ')                            
   print $Total_FBT (0, {Summary_Totals_Pos})          
   print $Union_Fees_lbl        (+1,{Summary_Totals_lbl_Pos})
   let $Total_Union = edit(#Total_Union, '9,999,999,999.99')
   let $Total_Union = substr($Total_Union, 1, (length($Total_Union) - length(ltrim($Total_Union,' ')))-1)|| '$' || ltrim($Total_Union,' ')                 
   print $Total_Union (0, {Summary_Totals_Pos})         
   print $Workplace_Giving_lbl (+1,{Summary_Totals_lbl_Pos})
   let $Total_Workplace = edit(#Total_Workplace, '9,999,999,999.99')
   let $Total_Workplace = substr($Total_Workplace, 1, (length($Total_Workplace) - length(ltrim($Total_Workplace,' ')))-1)|| '$' || ltrim($Total_Workplace,' ')                           
   print $Total_Workplace (0, {Summary_Totals_Pos})          



    let #Empl_Count=0
    let #Total_Gross_Pay=0
    let #Total_Tax_Wheld_NoC=0
    let #Total_Tax_Wheld=0
    let #Total_CDEP_Pay=0
    let #Total_Other_Pay=0
    let #Total_Super_Pay=0
    let #Total_Allowance=0
    let #Total_LumpA=0
    let #Total_LumpB=0
    let #Total_LumpC=0
    let #Total_LumpC_Tax=0
    let #Total_LumpD=0
    let #Total_LumpE=0
    let #Total_FBT=0
    let #Total_Union=0
    let #Total_Workplace=0
    let #Total_LumpC_TR= 0          
    let #Total_LumpC_Tax_TR  = 0 

    let $Total_Gross_Pay=0
    let $Total_Tax_Wheld_NoC=0
    let $Total_Tax_Wheld=0
    let $Total_CDEP_Pay=0
    let $Total_Other_Pay=0
    let $Total_Super_Pay=0
    let $Total_Allowance=0
    let $Total_LumpA=0
    let $Total_LumpB=0
    let $Total_LumpC=0
    let $Total_LumpC_Tax=0
    let $Total_LumpD=0
    let $Total_LumpE=0
    let $Total_FBT=0
    let $Total_Union=0
    let $Total_Workplace=0
    let $Total_LumpC_TR= 0          
    let $Total_LumpC_Tax_TR  = 0 


end-procedure

!***********************************************************************
! Procedure: Get_ETP_Record                                            *
!            Retrieve ETP information if it exists.                    *
!***********************************************************************
begin-procedure Get_ETP_Record

   let #LumpC_Tax = 0
   let #LumpC = 0
   let #LumpC_Tax_TR = 0
   let #LumpC_TR = 0

   LET $LumpC_Tax = 0
   LET $LumpC = 0
   LET $LumpC_Tax_TR = 0
   LET $LumpC_TR = 0



begin-SELECT
ETP.GPAU_ETP_PY_TYPE
ETP.GPAU_ETP_PRE83
ETP.GPAU_ETP_PST83_NTX
ETP.GPAU_ETP_PST83_TAX
ETP.GPAU_ETP_PST94_INV
ETP.GPAU_ETP_GROSS
ETP.GPAU_ETP_TAX

! Resolution ID 141359. Calculating Lump Sum C.

  Let $ETP_TYPE = rtrim(ltrim(&ETP.GPAU_ETP_PY_TYPE, ' '), ' ')

  if $ETP_TYPE = 'O' or $ETP_TYPE = 'T'

    move &ETP.GPAU_ETP_TAX to #LumpC_Tax_TR
    let #LumpC_TR = &ETP.GPAU_ETP_PRE83
                         + &ETP.GPAU_ETP_PST83_NTX
                         + &ETP.GPAU_ETP_PST83_TAX

    let #Total_LumpC_TR = #Total_LumpC_TR + #LumpC_TR
    let #Total_LumpC_Tax_TR = #Total_LumpC_Tax_TR + #LumpC_Tax_TR

  Else

    move &ETP.GPAU_ETP_TAX to #LumpC_Tax

    let #LumpC = &ETP.GPAU_ETP_PRE83
                         + &ETP.GPAU_ETP_PST83_NTX
                         + &ETP.GPAU_ETP_PST83_TAX
                         + &ETP.GPAU_ETP_PST94_INV

    let #Total_LumpC = #Total_LumpC + #LumpC
    let #Total_LumpC_Tax = #Total_LumpC_Tax + #LumpC_Tax
  End-if



FROM  PS_GPAU_EE_ETP ETP
WHERE ETP.EMPLID        = $Emplid
AND   ETP.PAY_ENTITY    = $Pay_Entity
AND   ETP.BALANCE_GRP_NUM   = $Bal_Grp_Num
AND   ETP.GPAU_TAX_YEAR = #Tax_Year
end-SELECT

end-procedure

!***********************************************************************
! Procedure: Process-Detail                                            *
!            Prints the Emplid/Bal_Id detail if a Detail/Summary       *
!            report is required.                                       *
!***********************************************************************
begin-procedure Process-Detail

   if #current-line + 10 > #Maxlines
        new-page
   end-if


   print $Emplid             (+2,{Emplid_Pos})
   print $BALANCE_GRP_NUM    (0, {Bal_Id_Pos})

   let #NLength = length($First_Name) + length($Last_Name) + length($Middle_Name)

   if #NLength < 30
      print $Name            (0, {Name_Pos})
   else
      Let $Last_Name = $Last_Name || ','
      print $Last_Name       (0, {Name_Pos})
      if $Middle_Name <> ''
         print $Middle_Name      (+1, {Name_Pos})
      end-if
      print $First_Name      (+1, {Name_Pos})

   end-if


   print $From_Dt             (0, {From_Pos})

   print $To_Dt               (0, {To_Pos})

   print $Create_Dt            (0, {Create_Pos})

   let $GPAU_PSM_GROSS_PAY = edit(#GPAU_PSM_GROSS_PAY, '99,999,999.99')
   let $GPAU_PSM_ALLOW1 = edit(#GPAU_PSM_ALLOW1, '99,999,999.99')
   let $GPAU_PSM_LUMPA = edit(#GPAU_PSM_LUMPA, '99,999,999.99')
   let $GPAU_PSM_UNION = edit(#GPAU_PSM_UNION, '99,999.99')
   let $GPAU_PSM_TAX_WHELD = edit(#GPAU_PSM_TAX_WHELD, '99,999,999.99')
   let $GPAU_PSM_CDEP_PAY = edit(#GPAU_PSM_CDEP_PAY, '99,999,999.99')  
   let $GPAU_PSM_ALLOW2 = edit(#GPAU_PSM_ALLOW2, '99,999,999.99')
   let $GPAU_PSM_LUMPB = edit(#GPAU_PSM_LUMPB, '99,999,999.99')
   let $GPAU_PSM_Workplace = edit(#GPAU_PSM_Workplace, '99,999,999.99')
   let $GPAU_PSM_OTHER_PAY = edit(#GPAU_PSM_OTHER_PAY, '99,999,999.99')
   let $GPAU_PSM_ALLOW3 = edit(#GPAU_PSM_ALLOW3, '99,999,999.99')
   let $GPAU_PSM_LUMPD = edit(#GPAU_PSM_LUMPD, '99,999,999.99')
   let $GPAU_PSM_Super_PAY = edit(#GPAU_PSM_Super_PAY, '99,999,999.99')
   let $GPAU_PSM_ALLOW4 = edit(#GPAU_PSM_ALLOW4, '99,999,999.99')
   let $GPAU_PSM_LUMPE = edit(#GPAU_PSM_LUMPE, '99,999,999.99')
   let $GPAU_PSM_FBT_EARNS = edit(#GPAU_PSM_FBT_EARNS, '99,999,999.99')
   let $LumpC = edit(#LumpC, '99,999,999.99')
   let $LumpC_Tax = edit(#LumpC_Tax, '99,999,999.99')
   let $LumpC_TR = edit(#LumpC_TR, '99,999,999.99')
   let $LumpC_Tax_TR = edit(#LumpC_Tax_TR, '99,999,999.99')

   let $GPAU_PSM_GROSS_PAY = substr($GPAU_PSM_GROSS_PAY, 1, (length($GPAU_PSM_GROSS_PAY) - length(ltrim($GPAU_PSM_GROSS_PAY,' ')))-1)|| '$' || ltrim($GPAU_PSM_GROSS_PAY,' ')
   let $GPAU_PSM_ALLOW1 = substr($GPAU_PSM_ALLOW1, 1, (length($GPAU_PSM_ALLOW1) - length(ltrim($GPAU_PSM_ALLOW1,' ')))-1)|| '$' || ltrim($GPAU_PSM_ALLOW1,' ')
   let $GPAU_PSM_LUMPA = substr($GPAU_PSM_LUMPA, 1, (length($GPAU_PSM_LUMPA) - length(ltrim($GPAU_PSM_LUMPA,' ')))-1)|| '$' || ltrim($GPAU_PSM_LUMPA,' ')
   let $GPAU_PSM_UNION = substr($GPAU_PSM_UNION, 1, (length($GPAU_PSM_UNION) - length(ltrim($GPAU_PSM_UNION,' ')))-1)|| '$' || ltrim($GPAU_PSM_UNION,' ')
   let $GPAU_PSM_TAX_WHELD = substr($GPAU_PSM_TAX_WHELD, 1, (length($GPAU_PSM_TAX_WHELD) - length(ltrim($GPAU_PSM_TAX_WHELD,' ')))-1)|| '$' || ltrim($GPAU_PSM_TAX_WHELD,' ')
   let $GPAU_PSM_CDEP_PAY = substr($GPAU_PSM_CDEP_PAY, 1, (length($GPAU_PSM_CDEP_PAY) - length(ltrim($GPAU_PSM_CDEP_PAY,' ')))-1)|| '$' || ltrim($GPAU_PSM_CDEP_PAY,' ')
   let $GPAU_PSM_ALLOW2 = substr($GPAU_PSM_ALLOW2, 1, (length($GPAU_PSM_ALLOW2) - length(ltrim($GPAU_PSM_ALLOW2,' ')))-1)|| '$' || ltrim($GPAU_PSM_ALLOW2,' ')
   let $GPAU_PSM_LUMPB = substr($GPAU_PSM_LUMPB, 1, (length($GPAU_PSM_LUMPB) - length(ltrim($GPAU_PSM_LUMPB,' ')))-1)|| '$' || ltrim($GPAU_PSM_LUMPB,' ')
   let $GPAU_PSM_Workplace = substr($GPAU_PSM_Workplace, 1, (length($GPAU_PSM_Workplace) - length(ltrim($GPAU_PSM_Workplace,' ')))-1)|| '$' || ltrim($GPAU_PSM_Workplace,' ')
   let $GPAU_PSM_OTHER_PAY = substr($GPAU_PSM_OTHER_PAY, 1, (length($GPAU_PSM_OTHER_PAY) - length(ltrim($GPAU_PSM_OTHER_PAY,' ')))-1)|| '$' || ltrim($GPAU_PSM_OTHER_PAY,' ')
   let $GPAU_PSM_ALLOW3 = substr($GPAU_PSM_ALLOW3, 1, (length($GPAU_PSM_ALLOW3) - length(ltrim($GPAU_PSM_ALLOW3,' ')))-1)|| '$' || ltrim($GPAU_PSM_ALLOW3,' ')
   let $GPAU_PSM_LUMPD = substr($GPAU_PSM_LUMPD, 1, (length($GPAU_PSM_LUMPD) - length(ltrim($GPAU_PSM_LUMPD,' ')))-1)|| '$' || ltrim($GPAU_PSM_LUMPD,' ')
   let $GPAU_PSM_Super_PAY = substr($GPAU_PSM_Super_PAY, 1, (length($GPAU_PSM_Super_PAY) - length(ltrim($GPAU_PSM_Super_PAY,' ')))-1)|| '$' || ltrim($GPAU_PSM_Super_PAY,' ')
   let $GPAU_PSM_ALLOW4 = substr($GPAU_PSM_ALLOW4, 1, (length($GPAU_PSM_ALLOW4) - length(ltrim($GPAU_PSM_ALLOW4,' ')))-1)|| '$' || ltrim($GPAU_PSM_ALLOW4,' ')
   let $GPAU_PSM_LUMPE = substr($GPAU_PSM_LUMPE, 1, (length($GPAU_PSM_LUMPE) - length(ltrim($GPAU_PSM_LUMPE,' ')))-1)|| '$' || ltrim($GPAU_PSM_LUMPE,' ')
   let $GPAU_PSM_FBT_EARNS = substr($GPAU_PSM_FBT_EARNS, 1, (length($GPAU_PSM_FBT_EARNS) - length(ltrim($GPAU_PSM_FBT_EARNS,' ')))-1)|| '$' || ltrim($GPAU_PSM_FBT_EARNS,' ')
   let $LumpC = substr($LumpC, 1, (length($LumpC) - length(ltrim($LumpC,' ')))-1)|| '$' || ltrim($LumpC,' ')
   let $LumpC_Tax = substr($LumpC_Tax, 1, (length($LumpC_Tax) - length(ltrim($LumpC_Tax,' ')))-1)|| '$' || ltrim($LumpC_Tax,' ')
   let $LumpC_TR = substr($LumpC_TR, 1, (length($LumpC_TR) - length(ltrim($LumpC_TR,' ')))-1)|| '$' || ltrim($LumpC_TR,' ')
   let $LumpC_Tax_TR = substr($LumpC_Tax_TR, 1, (length($LumpC_Tax_TR) - length(ltrim($LumpC_Tax_TR,' ')))-1)|| '$' || ltrim($LumpC_Tax_TR,' ')

   print $GPAU_PSM_GROSS_PAY (0, {Total_1_Pos})
   print $GPAU_PSM_ALLOW1 (0, {Total_2_Pos})
   print $GPAU_PSM_LUMPA (0, {Total_3_Pos})
   print $GPAU_PSM_UNION (0, {Union_Pos})
   print $GPAU_PSM_TAX_WHELD (0, {Tax_Wheld_Pos})
   print $GPAU_PSM_CDEP_PAY (+1,{Total_1_Pos})
   print $GPAU_PSM_ALLOW2 (0, {Total_2_Pos})
   print $GPAU_PSM_LUMPB (0, {Total_3_Pos})
   print $GPAU_PSM_Workplace (0, {Workplace_Pos})
   print $GPAU_PSM_OTHER_PAY (+1,{Total_1_Pos})
   print $GPAU_PSM_ALLOW3 (0, {Total_2_Pos})
   print $GPAU_PSM_LUMPD (0, {Total_3_Pos})
   print $GPAU_PSM_Super_PAY (+1,{Total_1_Pos})
   print $GPAU_PSM_ALLOW4 (0, {Total_2_Pos})
   print $GPAU_PSM_LUMPE (0, {Total_3_Pos})
   print $GPAU_PSM_FBT_EARNS (+1,{Total_1_Pos})
   print $LumpC (0,{Total_3_Pos})
   print $LumpC_Tax (0, {Tax_Wheld_Pos})
   print $LumpC_TR (+1,{Total_3_Pos})
   print $LumpC_Tax_TR (0, {Tax_Wheld_Pos})




end-procedure
!***********************************************************************
! Before-PayEntity                                                     *
! Called By:    Main-process                                           *
! Calls:        none                                                   *
! Description:  Handles page breaks when change occurs in PayEntity    *
!                                                                      *
!***********************************************************************
Begin-procedure Before-PayEntity

IF $First = 'Y'
  Let $First = 'N'
  else
  New-Page
End-IF

End-Procedure
!
#Include 'gpaups00.sqc' ! Select-Parameters procedure
#include 'sqrtrans.sqc' ! Translate SQR strings to given language
#include 'number.sqc'   !Routines to format numbers
#Include 'curdttim.sqc' ! Get-Current-DateTime procedure
#include 'reset.sqc'    ! Reset printer procedure
#include 'stdapi.sqc'
#include 'datetime.sqc' !Routines for date and time formatting


