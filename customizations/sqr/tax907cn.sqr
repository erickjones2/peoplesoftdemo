!***********************************************************************
!  TAX907CN:  B.C. Annual Remuneration Report for Employer Health Tax  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!                                                                      *
!   Copyright (C) 1988, 2019, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  29726681                                            !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization
#include 'canrpt.sqc'  !Get Canadian-specific variables

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Stdapi-Init
  move 'TAX907CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $TAX907CN_Title_BC_Rem_Rpt to $ReportTitle

  let $Title =  $TAX907CN_Title_BC_Rem_Rpt || $TAX907CN_Title_ER_HTH_Tax
  display $Title

  do Init-DateTime
  do Init-Number
  do Initialize

  do Select-Run-Parameters
  do Convert-Parameters

  display ''
  display $TAX907CN_Calendar_Year noline
  display $Calendar_Year

  do Check-YE-Data-Exist

  if $YE_Run = 'N'
    display ''
    display ''
    display '***************************************************************************'
    display   $TAX907CN_YE_Data_Not_Avail
    display '***************************************************************************'
    stop
  end-if

  do Array-Create
  do Init-Totals

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from TAX907CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('TAX907CN', 'TITLE_BC_REM_RPT'   , $TAX907CN_Title_BC_Rem_Rpt, #dummy_width)
   do Get_Field_Information ('TAX907CN', 'TITLE_ER_HTH_TAX'   , $TAX907CN_Title_ER_HTH_Tax, #dummy_width)
   do Get_Field_Information ('TAX907CN', 'CALENDAR_YEAR'      , $TAX907CN_Calendar_Year   , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'COMPANY'            , $TAX907CN_Company         , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'DESCRIPTION'        , $TAX907CN_Description     , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'PAYROLL'            , $TAX907CN_Payroll         , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'ACCT_NUM'           , $TAX907CN_Acct_Num        , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'TOTAL'              , $TAX907CN_Total           , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4_SLIPS'           , $TAX907CN_T4_Slips        , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'BOX_14_TOTAL'       , $TAX907CN_Box_14_Total    , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_SLIPS'          , $TAX907CN_T4A_Slips       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_TOTAL'          , $TAX907CN_T4A_Total       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'TAXABLE_BENEFITS'   , $TAX907CN_Taxable_Benefits , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'REMUNERATION'       , $TAX907CN_Remuneration    , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'COMPANY_TOTAL'      , $TAX907CN_Company_Total   , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'REPORT_NOTE'        , $TAX907CN_Report_Note     , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'YE_DATA_NOT_AVAIL'  , $TAX907CN_YE_Data_Not_Avail, #dummy_width)
   do Get_Field_Information ('TAX907CN', 'NO_BC_EE_FOUND'     , $TAX907CN_No_BC_EE_Found  , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'END_OF_REPORT'      , $TAX907CN_End_Of_Report   , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_MSG_TEXT1'      , $TAX907CN_Msg_Text1       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_MSG_TEXT2'      , $TAX907CN_Msg_Text2       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_MSG_TEXT3'      , $TAX907CN_Msg_Text3       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_MSG_TEXT4'      , $TAX907CN_Msg_Text4       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_MSG_TEXT5'      , $TAX907CN_Msg_Text5       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'T4A_MSG_TEXT6'      , $TAX907CN_Msg_Text6       , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'COMPANY_MSG'        , $TAX907CN_Company_Msg     , #dummy_width)
   do Get_Field_Information ('TAX907CN', 'PAY_ACCT_NUM_MSG'   , $TAX907CN_Pay_Acct_Num_Msg, #dummy_width)
   do Get_Field_Information ('TAX907CN', 'EMPLID_MSG'         , $TAX907CN_Emplid_Msg      , #dummy_width)

end-procedure


begin-heading 7
  #Include 'stdhdgtr.sqc'

  print $TAX907CN_Title_ER_HTH_Tax   (3,,)      center
  print $Calendar_Year               (4,,)      center

  print $TAX907CN_Payroll            (+2,48,18)
  print $TAX907CN_Total              (0,82,18)
  print $TAX907CN_Box_14_Total       (0,102,18)
  print $TAX907CN_Total              (0,132,18)
  print $TAX907CN_T4A_Total          (0,158,18)

  print $TAX907CN_Company            (+1,1,10)
  print $TAX907CN_Description        (0,13,30)
  print $TAX907CN_Acct_Num           (0,48,18)
  print $TAX907CN_T4_Slips           (0,79,18)
  print $TAX907CN_Remuneration       (0,105,18)
  print $TAX907CN_T4A_Slips          (0,128,18)
  print $TAX907CN_Taxable_Benefits   (0,151,20)

end-heading


begin-procedure Initialize

  do Get-Current-DateTime

  move '1' to $MMLZero
  move '0' to $Year4         !YY
  do Format-DateTime($AsOfToday, $FootNote_Date, {DEFMDY},'','')

end-procedure


begin-procedure Array-Create

  create-array name=Remuneration_Totals size=500 -
    field=T4_Company:char                    -
    field=T4_ReportingID:char                -
    field=T4_Count_Total:number              -
    field=T4_Box14_Amt_Total:number          -
    field=T4A_Count_Total:number             -
    field=T4A_TaxBen_Total:number

end-procedure


begin-procedure Process-Main

  do Process-T4-Original

  do Find-T4A-Multi-Prov
  do Process-T4A-Original

  if $EmployeeFound = 'N'
    display ''
    display ''
    display '******************************'
    display   $TAX907CN_No_BC_EE_Found
    display '******************************'

  else

    do Process-T4-AmendCancel

    do Find-T4A-Except-Amend
    do Process-T4A-AmendCancel

    do Print-Report
  end-if

  if $Display_Exception = 'Y'
    do Display-Exception-EE
    do Delete-Exception-Table
  end-if

end-procedure


begin-procedure Process-T4-Original

  move 'N' to $EmployeeFound

begin-SELECT
YE.COMPANY                () on-break level=1 print=never before=Before-Company
                               PRINT=NEVER AFTER=After-Company
YS.REPORTING_ID           () on-break level=2 print=never before=Before-ReportingID
                               PRINT=NEVER AFTER=After-ReportingID
YS.EMPLID
YS.CALENDAR_YEAR
YS.SEQUENCE_NUMBER
YS.TAXFORM_ID
YS.WAGE_LOSS_PLAN
YS.PROVINCE
YS.CAN_YE_SLIP_SEQ


  do Get-T4-Box14-Original

  move 'Y' to $EmployeeFound


FROM PS_CAN_YE_EMPL      YE,
     PS_CAN_YE_SLIP      YS

WHERE YE.COMPANY          = YS.COMPANY

#ifdef MVS
  \$CO.SELECTEDCOMPANIES\
#else
  [$CO.SELECTEDCOMPANIES]
#endif

  AND YE.EMPLID           = YS.EMPLID
  AND YE.CALENDAR_YEAR    = YS.CALENDAR_YEAR
  AND YE.CALENDAR_YEAR    = #Calendar_Year
  AND YE.SEQUENCE_NUMBER  = YS.SEQUENCE_NUMBER
  AND YE.SEQUENCE_NUMBER  = 0
  AND YE.DELETE_RECORD    = 'N'
  AND YS.TAXFORM_ID       = 'T'
  AND YS.PROVINCE         = 'BC'
  AND YS.PROCESS_FLAG     = 'C'
  AND YS.YE_SLIP_PROCESS  = 'O'

ORDER BY YE.COMPANY, YS.REPORTING_ID, YS.EMPLID
end-SELECT

end-procedure


begin-procedure Get-T4-Box14-Original

begin-SELECT
YD.CAN_YE_BOX_AMT

  add &YD.CAN_YE_BOX_AMT   to #ActNum_Box14_Total
  add 1                    to #ActNum_T4_Count_Total


FROM PS_CAN_YE_DETAIL   YD
WHERE YD.COMPANY          = &YE.COMPANY
  AND YD.EMPLID           = &YS.EMPLID
  AND YD.CALENDAR_YEAR    = &YS.CALENDAR_YEAR
  AND YD.SEQUENCE_NUMBER  = &YS.SEQUENCE_NUMBER
  AND YD.TAXFORM_ID       = &YS.TAXFORM_ID
  AND YD.WAGE_LOSS_PLAN   = &YS.WAGE_LOSS_PLAN
  AND YD.PROVINCE         = &YS.PROVINCE
  AND YD.CAN_YE_SLIP_SEQ  = &YS.CAN_YE_SLIP_SEQ
  AND YD.BOX              = '14'

end-SELECT

end-procedure


begin-procedure Before-Company

  move &YE.COMPANY               to $YE.Company

end-procedure


begin-procedure Before-ReportingID

  move &YS.REPORTING_ID          to $YS.Reporting_ID

end-procedure


begin-procedure After-ReportingID

  do Add-to-Box14-Totals

  move 0 to #ActNum_T4_Count_Total
  move 0 to #ActNum_Box14_Total

end-procedure


begin-procedure After-Company

  move 0 to #ActNum_T4_Count_Total
  move 0 to #ActNum_Box14_Total

end-procedure


begin-procedure Add-to-Box14-Totals

  move 0 to #j
  move 500 to #max_j
  while #j < #max_j
    get $T4_Company $T4_ReportingID from Remuneration_Totals(#j) T4_Company T4_ReportingID

    let $T4_Company     = rtrim($T4_Company,' ')
    let $T4_ReportingID = rtrim($T4_ReportingID,' ')

    if $T4_Company = '' and $T4_ReportingID = ''            !if array entry is empty
      put $YE.Company $YS.Reporting_ID #ActNum_T4_Count_Total #ActNum_Box14_Total
        into Remuneration_Totals(#j) T4_Company T4_ReportingID T4_Count_Total T4_Box14_Amt_Total
      break
    else
      if $T4_Company = rtrim($AE.Company, ' ') and $T4_ReportingID = rtrim($TS.Reporting_ID, ' ')
        array-subtract #Upd_T4_Count_Total from Remuneration_Totals(#j) T4_Count_Total
        array-add #Upd_Box14_Total to Remuneration_Totals(#j) T4_Box14_Amt_Total
        break
      end-if

    end-if

    add 1 to #j
  end-while

end-procedure


begin-procedure Process-T4-AmendCancel

  move ' ' to $YE_Slip_Process

begin-SELECT
AE.COMPANY             () on-break level=1 print=never before=Before-Amend-CO
                                   PRINT=NEVER AFTER=After-Amend-CO
TS.REPORTING_ID        () on-break level=2 print=never before=Before-Amend-RptID
                                   PRINT=NEVER AFTER=After-Amend-RptID
TS.EMPLID
TS.CALENDAR_YEAR
TS.SEQUENCE_NUMBER
TS.TAXFORM_ID
TS.WAGE_LOSS_PLAN
TS.PROVINCE
TS.CAN_YE_SLIP_SEQ
TS.YE_PROC_TYPE


  move &TS.YE_PROC_TYPE to $YE_Slip_Process

  if rtrim(&TS.YE_PROC_TYPE, ' ') = 'A'
    do Get-T4-Box14-Amend
  else
    if rtrim(&TS.YE_PROC_TYPE, ' ') = 'C'
      do Get-T4-Box14-Cancel
    end-if
  end-if


FROM PS_CAN_YE_AMEND_E      AE,
     PS_CAN_AMEND_T4_S      TS

WHERE AE.COMPANY          = TS.COMPANY

#ifdef MVS
  \$CO.AMENDCANCEL\
#else
  [$CO.AMENDCANCEL]
#endif

  AND AE.EMPLID           = TS.EMPLID
  AND AE.CALENDAR_YEAR    = #Calendar_Year
  AND AE.CALENDAR_YEAR    = TS.CALENDAR_YEAR
  AND AE.SEQUENCE_NUMBER  = TS.SEQUENCE_NUMBER
  AND AE.DELETE_RECORD    = 'N'
  AND TS.TAXFORM_ID       = 'T'
  AND TS.PROVINCE         = 'BC'
  AND TS.YE_PROC_TYPE     IN ('A','C')
  AND TS.AMEND_STATUS     = 'C'

ORDER BY AE.COMPANY, TS.REPORTING_ID, TS.EMPLID, TS.SEQUENCE_NUMBER
end-SELECT

end-procedure


begin-procedure Get-T4-Box14-Amend

  move 0 to #Adj_Amt

begin-SELECT
AD.PRV_AMOUNT
AD.CORRECTED_AMOUNT


  let #Adj_Amt            = &AD.Corrected_Amount  -  &AD.Prv_Amount
  let #Upd_Box14_Total    = #Upd_Box14_Total +  #Adj_Amt


FROM PS_CAN_AMEND_T4_D    AD
WHERE AD.COMPANY          = &AE.COMPANY
  AND AD.EMPLID           = &TS.EMPLID
  AND AD.CALENDAR_YEAR    = &TS.CALENDAR_YEAR
  AND AD.SEQUENCE_NUMBER  = &TS.SEQUENCE_NUMBER
  AND AD.TAXFORM_ID       = &TS.TAXFORM_ID
  AND AD.WAGE_LOSS_PLAN   = &TS.WAGE_LOSS_PLAN
  AND AD.PROVINCE         = &TS.PROVINCE
  AND AD.CAN_YE_SLIP_SEQ  = &TS.CAN_YE_SLIP_SEQ
  AND AD.BOX              = '14'

end-SELECT

end-procedure


begin-procedure Get-T4-Box14-Cancel

  move 0 to #Cancel_Amt

begin-SELECT
CD.CAN_YE_BOX_AMT

  let #Cancel_Amt         = &CD.Can_YE_Box_Amt
  let #Upd_Box14_Total    = #Upd_Box14_Total - #Cancel_Amt

  add 1 to #Upd_T4_Count_Total


FROM  PS_CAN_YE_SLIP      CS,
      PS_CAN_YE_DETAIL    CD
WHERE CS.COMPANY          = &AE.COMPANY
  AND CS.EMPLID           = &TS.EMPLID
  AND CS.CALENDAR_YEAR    = &TS.CALENDAR_YEAR
  AND CS.SEQUENCE_NUMBER  = &TS.SEQUENCE_NUMBER
  AND CS.TAXFORM_ID       = &TS.TAXFORM_ID
  AND CS.WAGE_LOSS_PLAN   = &TS.WAGE_LOSS_PLAN
  AND CS.PROVINCE         = &TS.PROVINCE
  AND CS.CAN_YE_SLIP_SEQ  = &TS.CAN_YE_SLIP_SEQ
  AND CS.YE_SLIP_PROCESS  = $YE_Slip_Process
  AND CS.COMPANY          = CD.COMPANY
  AND CS.EMPLID           = CD.EMPLID
  AND CS.CALENDAR_YEAR    = CD.CALENDAR_YEAR
  AND CS.SEQUENCE_NUMBER  = CD.SEQUENCE_NUMBER
  AND CS.TAXFORM_ID       = CD.TAXFORM_ID
  AND CS.WAGE_LOSS_PLAN   = CD.WAGE_LOSS_PLAN
  AND CS.PROVINCE         = CD.PROVINCE
  AND CS.CAN_YE_SLIP_SEQ  = CD.CAN_YE_SLIP_SEQ
  AND CD.BOX              = '14'

end-SELECT

end-procedure


begin-procedure Before-Amend-CO

  move &AE.COMPANY               to $AE.Company

end-procedure


begin-procedure Before-Amend-RptID

  move &TS.REPORTING_ID          to $TS.Reporting_ID

end-procedure


begin-procedure After-Amend-RptID

  if #Upd_Box14_Total <> 0 or #Upd_T4_Count_Total <> 0
    do Add-to-Box14-Totals
  end-if

  move 0 to #Upd_T4_Count_Total
  move 0 to #Upd_Box14_Total

end-procedure


begin-procedure After-Amend-CO

  move 0 to #Upd_T4_Count_Total
  move 0 to #Upd_Box14_Total

end-procedure


begin-procedure Process-T4A-Original

begin-SELECT
YEA.COMPANY                () on-break level=1 print=never before=Before-T4A-Co
                               PRINT=NEVER AFTER=After-T4A-Co
YSA.REPORTING_ID           () on-break level=2 print=never before=Before-T4A-RptID
                               PRINT=NEVER AFTER=After-T4A-RptID
YSA.EMPLID
YSA.CALENDAR_YEAR
YSA.SEQUENCE_NUMBER
YSA.TAXFORM_ID
YSA.WAGE_LOSS_PLAN
YSA.PROVINCE
YSA.CAN_YE_SLIP_SEQ


  do Get-T4A-Original

  move 'Y' to $EmployeeFound


FROM PS_CAN_YE_EMPL      YEA,
     PS_CAN_YE_SLIP      YSA

WHERE YEA.COMPANY          = YSA.COMPANY

#ifdef MVS
  \$CO.T4ACOMPANIES\
#else
  [$CO.T4ACOMPANIES]
#endif

  AND YEA.EMPLID           = YSA.EMPLID
  AND YEA.CALENDAR_YEAR    = YSA.CALENDAR_YEAR
  AND YEA.CALENDAR_YEAR    = #Calendar_Year
  AND YEA.SEQUENCE_NUMBER  = YSA.SEQUENCE_NUMBER
  AND YEA.SEQUENCE_NUMBER  = 0
  AND YEA.DELETE_RECORD    = 'N'
  AND YSA.TAXFORM_ID       = 'A'
  AND YSA.PROVINCE         = 'BC'
  AND YSA.PROCESS_FLAG     = 'C'
  AND YSA.YE_SLIP_PROCESS  = 'O'
  AND NOT EXISTS (SELECT 'X'
                     FROM PS_R_TAX907CN_TMP T
                    WHERE T.PROCESS_INSTANCE = #prcs_process_instance
                      AND T.COMPANY        = YEA.COMPANY
                      AND T.TAXFORM_ID     = YSA.TAXFORM_ID
                      AND T.EMPLID         = YSA.EMPLID
                      AND T.WAGE_LOSS_PLAN = YSA.WAGE_LOSS_PLAN)

ORDER BY YEA.COMPANY, YSA.REPORTING_ID, YSA.EMPLID
end-SELECT

end-procedure


begin-procedure Get-T4A-Original

  let $Prev_T4A_Emplid = ' '

begin-SELECT
YDA.EMPLID
YDA.CAN_YE_BOX_AMT

  add &YDA.CAN_YE_BOX_AMT   to #ActNum_T4A_TaxBen_Total

  if rtrim(&YDA.Emplid, ' ') <> rtrim($Prev_T4A_Emplid, ' ')
    add 1                   to #ActNum_T4A_Count_Total
    move &YDA.Emplid        to $Prev_T4A_Emplid
  end-if


FROM PS_CAN_YE_DETAIL   YDA
WHERE YDA.COMPANY          = &YEA.COMPANY
  AND YDA.EMPLID           = &YSA.EMPLID
  AND YDA.CALENDAR_YEAR    = &YSA.CALENDAR_YEAR
  AND YDA.SEQUENCE_NUMBER  = &YSA.SEQUENCE_NUMBER
  AND YDA.TAXFORM_ID       = &YSA.TAXFORM_ID
  AND YDA.WAGE_LOSS_PLAN   = &YSA.WAGE_LOSS_PLAN
  AND YDA.PROVINCE         = &YSA.PROVINCE
  AND YDA.CAN_YE_SLIP_SEQ  = &YSA.CAN_YE_SLIP_SEQ
  AND YDA.BOX              IN ('118' , '119')

end-SELECT

end-procedure


begin-procedure Before-T4A-Co

  move &YEA.COMPANY               to $T4A_Company

end-procedure


begin-procedure Before-T4A-RptID

  move &YSA.REPORTING_ID          to $T4A_Reporting_ID

end-procedure


begin-procedure After-T4A-RptID

  if #ActNum_T4A_Count_Total > 0 and #ActNum_T4A_TaxBen_Total > 0
    do Add-to-T4A-TaxBen-Totals
  end-if

  move 0 to #ActNum_T4A_Count_Total
  move 0 to #ActNum_T4A_TaxBen_Total

end-procedure


begin-procedure After-T4A-Co

  move 0 to #ActNum_T4A_Count_Total
  move 0 to #ActNum_T4A_TaxBen_Total

end-procedure


begin-procedure Add-to-T4A-TaxBen-Totals

  move 0 to #Zero

  move 0 to #j
  move 500 to #max_j
  while #j < #max_j
    get $T4_Company $T4_ReportingID from Remuneration_Totals(#j) T4_Company T4_ReportingID

    let $T4_Company     = rtrim($T4_Company,' ')
    let $T4_ReportingID = rtrim($T4_ReportingID,' ')

    if $T4_Company = '' and $T4_ReportingID = ''            !if array entry is empty
      put $T4A_Company $T4A_Reporting_ID #Zero #Zero #ActNum_T4A_Count_Total #ActNum_T4A_TaxBen_Total
        into Remuneration_Totals(#j) T4_Company T4_ReportingID T4_Count_Total T4_Box14_Amt_Total
                                     T4A_Count_Total T4A_TaxBen_Total
      break
    else
      if $T4_Company = rtrim($T4A_Company, ' ') and $T4_ReportingID = rtrim($T4A_Reporting_ID, ' ')
        if $Amend_T4A_Ind = 'Y'
          array-add #Upd_T4A_Count_Total  to Remuneration_Totals(#j) T4A_Count_Total
          array-add #Upd_T4A_TaxBen_Total to Remuneration_Totals(#j) T4A_TaxBen_Total
          break

        else
          array-add #ActNum_T4A_Count_Total  to Remuneration_Totals(#j) T4A_Count_Total
          array-add #ActNum_T4A_TaxBen_Total to Remuneration_Totals(#j) T4A_TaxBen_Total
          break
        end-if

      end-if

    end-if

    add 1 to #j
  end-while

end-procedure


begin-procedure Process-T4A-AmendCancel

  move ' ' to $YE_Slip_Process

begin-SELECT
AEA.COMPANY             () on-break level=1 print=never before=Before-Amend-T4ACO
                                   PRINT=NEVER AFTER=After-Amend-T4ACO
TSA.REPORTING_ID        () on-break level=2 print=never before=Before-Amend-T4ARptID
                                   PRINT=NEVER AFTER=After-Amend-T4ARptID
TSA.EMPLID
TSA.CALENDAR_YEAR
TSA.SEQUENCE_NUMBER
TSA.TAXFORM_ID
TSA.WAGE_LOSS_PLAN
TSA.PROVINCE
TSA.CAN_YE_SLIP_SEQ
TSA.YE_PROC_TYPE


  move &TSA.YE_PROC_TYPE to $YE_Slip_Process

  if rtrim(&TSA.YE_PROC_TYPE, ' ') = 'A'
    do Get-T4A-Amend

    if $T4A_Amend_Exists = 'Y' and #Prv_T4A_Amt_Total = 0
      add 1 to #Upd_T4A_Count_Total
    end-if

  else
    if rtrim(&TSA.YE_PROC_TYPE, ' ') = 'C'
      do Get-T4A-Cancel
    end-if
  end-if


FROM PS_CAN_YE_AMEND_E      AEA,
     PS_CAN_AMEND_T4A_S     TSA

WHERE AEA.COMPANY          = TSA.COMPANY

#ifdef MVS
  \$CO.T4AAMENDCANCEL\
#else
  [$CO.T4AAMENDCANCEL]
#endif

  AND AEA.EMPLID           = TSA.EMPLID
  AND AEA.CALENDAR_YEAR    = #Calendar_Year
  AND AEA.CALENDAR_YEAR    = TSA.CALENDAR_YEAR
  AND AEA.SEQUENCE_NUMBER  = TSA.SEQUENCE_NUMBER
  AND AEA.DELETE_RECORD    = 'N'
  AND TSA.TAXFORM_ID       = 'A'
  AND TSA.PROVINCE         = 'BC'
  AND TSA.YE_PROC_TYPE     IN ('A','C')
  AND TSA.AMEND_STATUS     = 'C'
  AND NOT EXISTS (SELECT 'X'
                     FROM PS_R_TAX907CN_TMP TA
                    WHERE TA.PROCESS_INSTANCE = #prcs_process_instance
                      AND TA.COMPANY         = AEA.COMPANY
                      AND TA.TAXFORM_ID      = TSA.TAXFORM_ID
                      AND TA.EMPLID          = TSA.EMPLID
                      AND TA.WAGE_LOSS_PLAN  = TSA.WAGE_LOSS_PLAN)

ORDER BY AEA.COMPANY, TSA.REPORTING_ID, TSA.EMPLID, TSA.SEQUENCE_NUMBER
end-SELECT

end-procedure


begin-procedure Get-T4A-Amend

  move 0   to #Adj_Amt
  move 0   to #Prv_T4A_Amt_Total
  move 'N' to $T4A_Amend_Exists


begin-SELECT
ADA.PRV_AMOUNT
ADA.CORRECTED_AMOUNT


  let #Adj_Amt               = &ADA.Corrected_Amount -  &ADA.Prv_Amount
  let #Upd_T4A_TaxBen_Total  = #Upd_T4A_TaxBen_Total +  #Adj_Amt

  let #Prv_T4A_Amt_Total     = &ADA.Prv_Amount + #Prv_T4A_Amt_Total
  let $T4A_Amend_Exists      = 'Y'

FROM PS_CAN_AMEND_T4A_D    ADA
WHERE ADA.COMPANY          = &AEA.COMPANY
  AND ADA.EMPLID           = &TSA.EMPLID
  AND ADA.CALENDAR_YEAR    = &TSA.CALENDAR_YEAR
  AND ADA.SEQUENCE_NUMBER  = &TSA.SEQUENCE_NUMBER
  AND ADA.TAXFORM_ID       = &TSA.TAXFORM_ID
  AND ADA.WAGE_LOSS_PLAN   = &TSA.WAGE_LOSS_PLAN
  AND ADA.PROVINCE         = &TSA.PROVINCE
  AND ADA.CAN_YE_SLIP_SEQ  = &TSA.CAN_YE_SLIP_SEQ
  AND ADA.BOX              IN ('118' , '119')

end-SELECT

end-procedure


begin-procedure Get-T4A-Cancel

  move 0 to #Cancel_Amt

  let $Prev_T4A_Emplid = ' '

begin-SELECT
CDA.EMPLID
CDA.CAN_YE_BOX_AMT

  let #Cancel_Amt            = &CDA.Can_YE_Box_Amt
  let #Upd_T4A_TaxBen_Total  = #Upd_T4A_TaxBen_Total - #Cancel_Amt

  if rtrim(&CDA.Emplid, ' ') <> rtrim($Prev_T4A_Emplid, ' ')
    add -1                  to #Upd_T4A_Count_Total
    move &CDA.Emplid        to $Prev_T4A_Emplid
  end-if


FROM  PS_CAN_YE_SLIP      CSA,
      PS_CAN_YE_DETAIL    CDA
WHERE CSA.COMPANY          = &AEA.COMPANY
  AND CSA.EMPLID           = &TSA.EMPLID
  AND CSA.CALENDAR_YEAR    = &TSA.CALENDAR_YEAR
  AND CSA.SEQUENCE_NUMBER  = &TSA.SEQUENCE_NUMBER
  AND CSA.TAXFORM_ID       = &TSA.TAXFORM_ID
  AND CSA.WAGE_LOSS_PLAN   = &TSA.WAGE_LOSS_PLAN
  AND CSA.PROVINCE         = &TSA.PROVINCE
  AND CSA.CAN_YE_SLIP_SEQ  = &TSA.CAN_YE_SLIP_SEQ
  AND CSA.YE_SLIP_PROCESS  = $YE_Slip_Process
  AND CSA.COMPANY          = CDA.COMPANY
  AND CSA.EMPLID           = CDA.EMPLID
  AND CSA.CALENDAR_YEAR    = CDA.CALENDAR_YEAR
  AND CSA.SEQUENCE_NUMBER  = CDA.SEQUENCE_NUMBER
  AND CSA.TAXFORM_ID       = CDA.TAXFORM_ID
  AND CSA.WAGE_LOSS_PLAN   = CDA.WAGE_LOSS_PLAN
  AND CSA.PROVINCE         = CDA.PROVINCE
  AND CSA.CAN_YE_SLIP_SEQ  = CDA.CAN_YE_SLIP_SEQ
  AND CDA.BOX              IN ('118' , '119')

end-SELECT

end-procedure


begin-procedure Before-Amend-T4ACO

  move &AEA.COMPANY               to $T4A_Company

end-procedure


begin-procedure Before-Amend-T4ARptID

  move &TSA.REPORTING_ID          to $T4A_Reporting_ID

end-procedure


begin-procedure After-Amend-T4ARptID

  if #Upd_T4A_TaxBen_Total <> 0 or #Upd_T4A_Count_Total <> 0

    let $Amend_T4A_Ind = 'Y'
    do Add-to-T4A-TaxBen-Totals
  end-if

  move 0    to #Upd_T4A_Count_Total
  move 0    to #Upd_T4A_TaxBen_Total
  move ' '  to $Amend_T4A_Ind

end-procedure


begin-procedure After-Amend-T4ACO

  move 0    to #Upd_T4A_Count_Total
  move 0    to #Upd_T4A_TaxBen_Total
  move ' '  to $Amend_T4A_Ind

end-procedure


begin-procedure Print-Report

  let $T4_Company_Prev = ' '

  move 0 to #j
  move 500 to #max_j
  while #j < #max_j
    get $T4_Company $T4_ReportingID #T4_Count_Total #T4_Box14_Amt_Total
        #T4A_Count_Total #T4A_TaxBen_Total
        from Remuneration_Totals(#j) T4_Company T4_ReportingID T4_Count_Total T4_Box14_Amt_Total
             T4A_Count_Total T4A_TaxBen_Total


    let $T4_Company       = RTRIM($T4_Company,' ')
    let $T4_ReportingID   = RTRIM($T4_ReportingID,' ')

    if $T4_Company = '' and $T4_ReportingID = ''
      break
    else

      if $T4_Company <> $T4_Company_Prev

         let $Company          = $T4_Company
         do Get-Company-Data

         if #j > 0                                 ! Not first row
           print $TAX907CN_Company_Total    (+2,1)
           do Format-Number(#CO_T4_Count_Total, $out,  '9,999,999,999')
           print $out                       (0,74,13)
           do Format-Number(#CO_Box14_Amt_Total, $out, '9,999,999,999,999.99')
           print $out                       (0,97,20)
           do Format-Number(#CO_T4A_Count_Total, $out,  '9,999,999,999')
           print $out                       (0,124,13)
           do Format-Number(#CO_T4A_TaxBen_Total, $out, '9,999,999,999,999.99')
           print $out                       (0,147,20)

           move 0 to  #CO_T4_Count_Total
           move 0 to  #CO_Box14_Amt_Total
           move 0 to  #CO_T4A_Count_Total
           move 0 to  #CO_T4A_TaxBen_Total

           print $T4_Company        (+3,1,3)

         else
           print $T4_Company        (+1,1,3)
         end-if

         print $CompanyName         (0,13,30)

      else
        print ' '                   (+1,1,3)
      end-if


      print $T4_ReportingID        (0,48,16)
      do Format-Number(#T4_Count_Total, $out,  '999,999,999')
      print $out                   (0,76,11)
      do Format-Number(#T4_Box14_Amt_Total, $out, '999,999,999,999.99')
      print $out                   (0,99,18)
      do Format-Number(#T4A_Count_Total, $out,  '999,999,999')
      print $out                   (0,126,11)
      do Format-Number(#T4A_TaxBen_Total, $out, '999,999,999,999.99')
      print $out                   (0,149,18)

      add #T4_Count_Total     to #CO_T4_Count_Total
      add #T4_Box14_Amt_Total to #CO_Box14_Amt_Total
      add #T4A_Count_Total    to #CO_T4A_Count_Total
      add #T4A_TaxBen_Total   to #CO_T4A_TaxBen_Total

      let $T4_Company_Prev  = $T4_Company

      add 1 to #j
    end-if

  end-while


  print $TAX907CN_Company_Total    (+2,1)
  do Format-Number(#CO_T4_Count_Total, $out,  '9,999,999,999')
  print $out                       (0,74,13)
  do Format-Number(#CO_Box14_Amt_Total, $out, '9,999,999,999,999.99')
  print $out                       (0,97,20)
  do Format-Number(#CO_T4A_Count_Total, $out,  '9,999,999,999')
  print $out                       (0,124,13)
  do Format-Number(#CO_T4A_TaxBen_Total, $out, '9,999,999,999,999.99')
  print $out                       (0,147,20)

  move 0 to  #CO_T4_Count_Total
  move 0 to  #CO_Box14_Amt_Total
  move 0 to  #CO_T4A_Count_Total
  move 0 to  #CO_T4A_TaxBen_Total

end-procedure


begin-procedure Delete-Exception-Table

begin-SQL on-error=Ignore
  DELETE FROM PS_R_TAX907CN_TMP
  WHERE PROCESS_INSTANCE = #prcs_process_instance
end-SQL

end-procedure


begin-procedure Find-T4A-Multi-Prov

  let $Display_Exception = 'N'

begin-SELECT
MS.COMPANY
MS.TAXFORM_ID
MS.REPORTING_ID
MS.SEQUENCE_NUMBER
MS.WAGE_LOSS_PLAN
MS.EMPLID
ME.SLIP_SURNAME
ME.SLIP_FIRST_NAME
ME.SLIP_INITIAL

  do Check-T4ATaxBen-Original

  if $Multi_Prov_Fnd  = 'Y'

    if rtrim(&ME.SLIP_SURNAME, ' ')   = ''
      let $Slip_Surname_Multi         = ' '
    else
      let $Slip_Surname_Multi         = rtrim(&ME.SLIP_SURNAME, ' ')
    end-if

    if rtrim(&ME.SLIP_FIRST_NAME, ' ') = ''
      let $Slip_FirstName_Multi       = ' '
    else
      let $Slip_FirstName_Multi       = rtrim(&ME.SLIP_FIRST_NAME, ' ')
    end-if

    if rtrim(&ME.SLIP_INITIAL, ' ')   = ''
      let $Slip_MI_Multi              = ' '
    else
      let $Slip_MI_Multi              = rtrim(&ME.SLIP_INITIAL, ' ')
    end-if

    let $Slip_Company                 = &MS.COMPANY
    let $Slip_Taxform_ID              = &MS.TAXFORM_ID
    let $Slip_Emplid                  = &MS.EMPLID
    let $Slip_WLP                     = &MS.WAGE_LOSS_PLAN
    let $Slip_Reporting_ID            = &MS.REPORTING_ID

    do Check-Exception-Rec
    if $Emplid_Except_Exists = 'N'
      do Create-Exception-Rec
      let $Display_Exception = 'Y'
    end-if

  end-if


FROM PS_CAN_YE_EMPL      ME,
     PS_CAN_YE_SLIP      MS

WHERE MS.CALENDAR_YEAR    = #Calendar_Year
  AND MS.SEQUENCE_NUMBER  = 0
  AND MS.TAXFORM_ID       = 'A'
  AND MS.PROVINCE         = 'BC'
  AND MS.PROCESS_FLAG     = 'C'
  AND MS.YE_SLIP_PROCESS  = 'O'

#ifdef MVS
  \$CO.MULTIPROV\
#else
  [$CO.MULTIPROV]
#endif

  AND ME.COMPANY          = MS.COMPANY
  AND ME.EMPLID           = MS.EMPLID
  AND ME.CALENDAR_YEAR    = MS.CALENDAR_YEAR
  AND ME.SEQUENCE_NUMBER  = MS.SEQUENCE_NUMBER
  AND ME.DELETE_RECORD    = 'N'
  AND EXISTS
   (SELECT 'X'
     FROM PS_CAN_YE_SLIP      MS1
      WHERE MS1.COMPANY         = MS.COMPANY
        AND MS1.EMPLID          = MS.EMPLID
        AND MS1.CALENDAR_YEAR   = MS.CALENDAR_YEAR
        AND MS1.SEQUENCE_NUMBER = MS.SEQUENCE_NUMBER
        AND MS1.TAXFORM_ID      = MS.TAXFORM_ID
        AND MS1.WAGE_LOSS_PLAN  = MS.WAGE_LOSS_PLAN
        AND MS1.PROVINCE       <> MS.PROVINCE
        AND MS1.PROCESS_FLAG    = MS.PROCESS_FLAG
        AND MS1.YE_SLIP_PROCESS = MS.YE_SLIP_PROCESS)
ORDER BY MS.COMPANY, MS.REPORTING_ID, MS.EMPLID

end-SELECT

end-procedure


begin-procedure Check-T4ATaxBen-Original

  let $Multi_Prov_Fnd  = 'N'

begin-SELECT
MD.EMPLID


  let $Multi_Prov_Fnd  = 'Y'


FROM PS_CAN_YE_DETAIL MD
WHERE MD.COMPANY           = &MS.COMPANY
  AND MD.EMPLID            = &MS.EMPLID
  AND MD.CALENDAR_YEAR     = #Calendar_Year
  AND MD.SEQUENCE_NUMBER   = &MS.SEQUENCE_NUMBER
  AND MD.TAXFORM_ID        = &MS.TAXFORM_ID
  AND MD.WAGE_LOSS_PLAN    = &MS.WAGE_LOSS_PLAN
  AND MD.BOX              IN ('118' , '119')

end-SELECT
end-procedure


begin-procedure Check-Exception-Rec

  let $Emplid_Except_Exists = 'N'

begin-SELECT
ER.EMPLID


  let $Emplid_Except_Exists = 'Y'

FROM PS_R_TAX907CN_TMP ER
WHERE ER.PROCESS_INSTANCE = #prcs_process_instance
  AND ER.COMPANY        = $Slip_Company
  AND ER.TAXFORM_ID     = $Slip_Taxform_ID
  AND ER.EMPLID         = $Slip_Emplid
  AND ER.WAGE_LOSS_PLAN = $Slip_WLP

end-SELECT
end-procedure


begin-procedure Create-Exception-Rec

begin-SQL ON-ERROR = SQL-Error

INSERT INTO PS_R_TAX907CN_TMP(
PROCESS_INSTANCE
,COMPANY
,TAXFORM_ID
,EMPLID
,WAGE_LOSS_PLAN
,SLIP_SURNAME
,SLIP_FIRST_NAME
,SLIP_INITIAL
,REPORTING_ID)
VALUES
(#prcs_process_instance
,$Slip_Company
,$Slip_Taxform_ID
,$Slip_Emplid
,$Slip_WLP
,$Slip_Surname_Multi
,$Slip_FirstName_Multi
,$Slip_MI_Multi
,$Slip_Reporting_ID)

end-SQL

end-procedure


begin-procedure Find-T4A-Except-Amend

begin-SELECT
ACE.COMPANY
ACS.REPORTING_ID
ACS.EMPLID
ACS.CALENDAR_YEAR
ACS.SEQUENCE_NUMBER
ACS.TAXFORM_ID
ACS.WAGE_LOSS_PLAN
ACS.PROVINCE
ACS.CAN_YE_SLIP_SEQ
ACE.SLIP_SURNAME
ACE.SLIP_FIRST_NAME
ACE.SLIP_INITIAL


  do Check-T4A-Boxes-Amend

  if $Amend_Box_Fnd = 'Y'

    do Check-T4A-Original

    if $Create_Except = 'Y'

      if rtrim(&ACE.SLIP_SURNAME, ' ')   = ''
        let $Slip_Surname_Multi         = ' '
      else
        let $Slip_Surname_Multi         = rtrim(&ACE.SLIP_SURNAME, ' ')
      end-if

      if rtrim(&ACE.SLIP_FIRST_NAME, ' ') = ''
        let $Slip_FirstName_Multi       = ' '
      else
        let $Slip_FirstName_Multi       = rtrim(&ACE.SLIP_FIRST_NAME, ' ')
      end-if

      if rtrim(&ACE.SLIP_INITIAL, ' ')   = ''
        let $Slip_MI_Multi              = ' '
      else
        let $Slip_MI_Multi              = rtrim(&ACE.SLIP_INITIAL, ' ')
      end-if

      let $Slip_Company                 = &ACE.COMPANY
      let $Slip_Taxform_ID              = &ACS.TAXFORM_ID
      let $Slip_Emplid                  = &ACS.EMPLID
      let $Slip_WLP                     = &ACS.WAGE_LOSS_PLAN
      let $Slip_Reporting_ID            = &ACS.REPORTING_ID

      do Check-Exception-Rec
      if $Emplid_Except_Exists = 'N'
        do Create-Exception-Rec
        let $Display_Exception = 'Y'
      end-if

    end-if

  end-if


FROM PS_CAN_YE_AMEND_E      ACE,
     PS_CAN_AMEND_T4A_S     ACS

WHERE ACE.COMPANY          = ACS.COMPANY

#ifdef MVS
  \$CO.T4AMULTIPROV\
#else
  [$CO.T4AMULTIPROV]
#endif

  AND ACE.EMPLID           = ACS.EMPLID
  AND ACE.CALENDAR_YEAR    = #Calendar_Year
  AND ACE.CALENDAR_YEAR    = ACS.CALENDAR_YEAR
  AND ACE.SEQUENCE_NUMBER  = ACS.SEQUENCE_NUMBER
  AND ACE.DELETE_RECORD    = 'N'
  AND ACS.TAXFORM_ID       = 'A'
  AND ACS.PROVINCE         = 'BC'
  AND ACS.YE_PROC_TYPE     = 'A'
  AND ACS.AMEND_STATUS     = 'C'
  AND NOT EXISTS (SELECT 'X'
                   FROM PS_R_TAX907CN_TMP TMP
                    WHERE TMP.PROCESS_INSTANCE = #prcs_process_instance
                      AND TMP.COMPANY         = ACE.COMPANY
                      AND TMP.TAXFORM_ID      = ACS.TAXFORM_ID
                      AND TMP.EMPLID          = ACS.EMPLID
                      AND TMP.WAGE_LOSS_PLAN  = ACS.WAGE_LOSS_PLAN)

ORDER BY ACE.COMPANY, ACS.REPORTING_ID, ACS.EMPLID, ACS.SEQUENCE_NUMBER
end-SELECT

end-procedure


begin-procedure Check-T4A-Boxes-Amend

  let $Amend_Box_Fnd = 'N'

begin-SELECT
ACD.COMPANY
ACD.EMPLID
ACD.CALENDAR_YEAR
ACD.SEQUENCE_NUMBER
ACD.TAXFORM_ID
ACD.WAGE_LOSS_PLAN
ACD.PROVINCE


  let $Amend_Box_Fnd = 'Y'


FROM PS_CAN_AMEND_T4A_D    ACD
WHERE ACD.COMPANY          = &ACE.COMPANY
  AND ACD.EMPLID           = &ACS.EMPLID
  AND ACD.CALENDAR_YEAR    = &ACS.CALENDAR_YEAR
  AND ACD.SEQUENCE_NUMBER  = &ACS.SEQUENCE_NUMBER
  AND ACD.TAXFORM_ID       = &ACS.TAXFORM_ID
  AND ACD.WAGE_LOSS_PLAN   = &ACS.WAGE_LOSS_PLAN
  AND ACD.PROVINCE         = &ACS.PROVINCE
  AND ACD.CAN_YE_SLIP_SEQ  = &ACS.CAN_YE_SLIP_SEQ
  AND ACD.BOX              IN ('118' , '119')

end-SELECT

end-procedure


begin-procedure Check-T4A-Original

  let $Original_Box_Fnd = 'N'
  let $Create_Except    = 'N'
  let #Province_Count   = 0


  do Verify-T4A-Original

  if $Original_Box_Fnd = 'N'
    do Check-Multi-Prov

    if #Province_Count > 1
      let $Create_Except = 'Y'
    end-if

  end-if

end-procedure


begin-procedure Verify-T4A-Original

begin-SELECT
CSO.EMPLID


  let $Original_Box_Fnd = 'Y'


FROM  PS_CAN_YE_SLIP      CSO,
      PS_CAN_YE_DETAIL    CDO
WHERE CSO.COMPANY          = &ACE.COMPANY
  AND CSO.EMPLID           = &ACS.EMPLID
  AND CSO.CALENDAR_YEAR    = &ACS.CALENDAR_YEAR
  AND CSO.SEQUENCE_NUMBER  = 0
  AND CSO.TAXFORM_ID       = &ACS.TAXFORM_ID
  AND CSO.WAGE_LOSS_PLAN   = &ACS.WAGE_LOSS_PLAN
  AND CSO.PROCESS_FLAG     = 'C'
  AND CSO.YE_SLIP_PROCESS  = 'O'
  AND CSO.COMPANY          = CDO.COMPANY
  AND CSO.EMPLID           = CDO.EMPLID
  AND CSO.CALENDAR_YEAR    = CDO.CALENDAR_YEAR
  AND CSO.SEQUENCE_NUMBER  = CDO.SEQUENCE_NUMBER
  AND CSO.TAXFORM_ID       = CDO.TAXFORM_ID
  AND CSO.WAGE_LOSS_PLAN   = CDO.WAGE_LOSS_PLAN
  AND CSO.PROVINCE         = CDO.PROVINCE
  AND CSO.CAN_YE_SLIP_SEQ  = CDO.CAN_YE_SLIP_SEQ
  AND CDO.BOX              IN ('118' , '119')

end-SELECT

end-procedure


begin-procedure Check-Multi-Prov

begin-SELECT DISTINCT
MPS.PROVINCE


  add 1 to #Province_Count


FROM  PS_CAN_YE_SLIP      MPS
WHERE MPS.COMPANY          = &ACE.COMPANY
  AND MPS.EMPLID           = &ACS.EMPLID
  AND MPS.CALENDAR_YEAR    = &ACS.CALENDAR_YEAR
  AND MPS.SEQUENCE_NUMBER  = 0
  AND MPS.TAXFORM_ID       = &ACS.TAXFORM_ID
  AND MPS.WAGE_LOSS_PLAN   = &ACS.WAGE_LOSS_PLAN
  AND MPS.PROCESS_FLAG     = 'C'
  AND MPS.YE_SLIP_PROCESS  = 'O'

end-SELECT

end-procedure


begin-procedure Display-Exception-EE

  let $Display_Msg = 'N'

begin-SELECT

EE.COMPANY
EE.TAXFORM_ID
EE.EMPLID
EE.SLIP_SURNAME
EE.SLIP_FIRST_NAME
EE.SLIP_INITIAL
EE.REPORTING_ID


  if &EE.taxform_Id = 'A' and $Display_Msg = 'N'
    display ''
    display ''

    let $Except_Msg_Line1 =  $TAX907CN_Msg_Text1 || $TAX907CN_Msg_Text2
    let $Except_Msg_Line2 =  $TAX907CN_Msg_Text3 || $TAX907CN_Msg_Text4
    let $Except_Msg_Line3 =  $TAX907CN_Msg_Text5 || $TAX907CN_Msg_Text6

    display '*****************************************************************************************************************************************'
    display $Except_Msg_Line1
    display $Except_Msg_Line2
    display $Except_Msg_Line3
    display '*****************************************************************************************************************************************'

    display ''
    let $Display_Msg = 'Y'
  end-if


  let $Company_Except   = rtrim(&EE.COMPANY, ' ')
  let $Emplid_Except    = rtrim(&EE.EMPLID, ' ')
  let $Surname_Except   = rtrim(&EE.SLIP_SURNAME, ' ')
  let $Firstname_Except = rtrim(&EE.SLIP_FIRST_NAME, ' ')
  let $MI_Except        = rtrim(&EE.SLIP_INITIAL, ' ')
  let $Payroll_Act_Num  = rtrim(&EE.REPORTING_ID, ' ')

  let $Except_Info = '  ' ||$TAX907CN_Company_Msg || $Company_Except || ', ' || $TAX907CN_Pay_Acct_Num_Msg || $Payroll_Act_Num || ', ' ||
                     $TAX907CN_Emplid_Msg  || $Emplid_Except || ' ' || $Surname_Except || ',' || $Firstname_Except || ' ' || $MI_Except

  display $Except_Info
  display ''


FROM PS_R_TAX907CN_TMP  EE
WHERE EE.PROCESS_INSTANCE = #prcs_process_instance
   ORDER BY EE.COMPANY, EE.REPORTING_ID, EE.EMPLID, EE.SLIP_SURNAME, EE.SLIP_FIRST_NAME

end-SELECT
end-procedure


begin-procedure Select-Run-Parameters

begin-SELECT
RC.CALENDAR_YEAR
RC.ER_HTX_CO_OPT


  move &RC.CALENDAR_YEAR   to #Calendar_Year
  move #Calendar_Year      to $Calendar_Year 9999
  move &RC.ER_HTX_CO_OPT   to $Process_Option

FROM  PS_RC_TAX907CN  RC
WHERE RC.OPRID              = $Prcs_OprID
  AND RC.RUN_CNTL_ID        = $Prcs_Run_Cntl_ID
end-SELECT

end-procedure


begin-procedure Convert-Parameters

  move ' ' to $ANDEXISTS
  move ' ' to $CO.SELECTEDCOMPANIES
  move ' ' to $CO.AMENDCANCEL
  move ' ' to $CO.T4ACOMPANIES
  move ' ' to $CO.T4AAMENDCANCEL
  move ' ' to $CO.MULTIPROV
  move ' ' to $CO.T4AMULTIPROV


  if $Process_Option = 'S'

    let $ANDEXISTS = 'AND EXISTS (SELECT C.COMPANY FROM PS_PY_ER_HTX_CO C WHERE '
    let $ANDEXISTS = $ANDEXISTS  || ' C.OPRID = ''' || $Prcs_OprID ||'''  '
    let $ANDEXISTS = $ANDEXISTS  || ' AND C.RUN_CNTL_ID = ''' || $Prcs_Run_Cntl_ID ||'''  '
    let $ANDEXISTS = $ANDEXISTS  || ' AND C.COMPANY = S.COMPANY)'

    do Read-Companies

  end-if

end-procedure


begin-procedure Check-YE-Data-Exist

  move 'N' to $YE_Run

begin-SELECT
S.EMPLID

  move 'Y' to $YE_Run

FROM PS_CAN_YE_SLIP S
WHERE S.CALENDAR_YEAR   = #Calendar_Year
  AND S.SEQUENCE_NUMBER = 0
  AND S.TAXFORM_ID      IN ('T','A')
  AND S.PROCESS_FLAG    = 'C'
  AND S.YE_SLIP_PROCESS = 'O'

#ifdef MVS
  \$ANDEXISTS\
#else
  [$ANDEXISTS]
#endif

end-SELECT

end-procedure


begin-procedure Read-Companies

  move 'AND YE.COMPANY IN (''' to $CO.SELECTEDCOMPANIES
  move 'AND AE.COMPANY IN (''' to $CO.AMENDCANCEL
  move 'AND YEA.COMPANY IN (''' to $CO.T4ACOMPANIES
  move 'AND AEA.COMPANY IN (''' to $CO.T4AAMENDCANCEL
  move 'AND MS.COMPANY IN (''' to $CO.MULTIPROV
  move 'AND ACE.COMPANY IN (''' to $CO.T4AMULTIPROV

  move ' ' to $SelectedCompany

begin-SELECT
CO.COMPANY


  move &CO.COMPANY    to $SelectedCompany

  let $CO.SELECTEDCOMPANIES = $CO.SELECTEDCOMPANIES || $SelectedCompany || ''','''
  let $CO.AMENDCANCEL       = $CO.AMENDCANCEL  || $SelectedCompany || ''','''

  let $CO.T4ACOMPANIES      = $CO.T4ACOMPANIES || $SelectedCompany || ''','''
  let $CO.T4AAMENDCANCEL    = $CO.T4AAMENDCANCEL  || $SelectedCompany || ''','''

  let $CO.MULTIPROV         = $CO.MULTIPROV || $SelectedCompany || ''','''
  let $CO.T4AMULTIPROV      = $CO.T4AMULTIPROV || $SelectedCompany || ''','''


  move 'Y' to $Company_Selected

FROM  PS_PY_ER_HTX_CO  CO
WHERE CO.OPRID         = $Prcs_OprID
  AND CO.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

  if $Company_Selected = 'Y'
      let $CO.SELECTEDCOMPANIES  = SUBSTR($CO.SELECTEDCOMPANIES,1,LENGTH($CO.SELECTEDCOMPANIES) - 2)
      let $CO.AMENDCANCEL        = SUBSTR($CO.AMENDCANCEL,1,LENGTH($CO.AMENDCANCEL) - 2)

      let $CO.T4ACOMPANIES       = SUBSTR($CO.T4ACOMPANIES,1,LENGTH($CO.T4ACOMPANIES) - 2)
      let $CO.T4AAMENDCANCEL     = SUBSTR($CO.T4AAMENDCANCEL,1,LENGTH($CO.T4AAMENDCANCEL) - 2)

      let $CO.MULTIPROV          = SUBSTR($CO.MULTIPROV,1,LENGTH($CO.MULTIPROV) - 2)
      let $CO.T4AMULTIPROV       = SUBSTR($CO.T4AMULTIPROV,1,LENGTH($CO.T4AMULTIPROV) - 2)

  else
      let $CO.SELECTEDCOMPANIES  = $CO.SELECTEDCOMPANIES || ''''
      let $CO.AMENDCANCEL        = $CO.AMENDCANCEL  || ''''

      let $CO.T4ACOMPANIES       = $CO.T4ACOMPANIES || ''''
      let $CO.T4AAMENDCANCEL     = $CO.T4AAMENDCANCEL  || ''''

      let $CO.MULTIPROV          = $CO.MULTIPROV  || ''''
      let $CO.T4AMULTIPROV       = $CO.T4AMULTIPROV || ''''

  end-if

  let $CO.SELECTEDCOMPANIES = $CO.SELECTEDCOMPANIES  || ')'
  let $CO.AMENDCANCEL       = $CO.AMENDCANCEL  || ')'

  let $CO.T4ACOMPANIES      = $CO.T4ACOMPANIES  || ')'
  let $CO.T4AAMENDCANCEL    = $CO.T4AAMENDCANCEL  || ')'

  let $CO.MULTIPROV         = $CO.MULTIPROV || ')'
  let $CO.T4AMULTIPROV      = $CO.T4AMULTIPROV || ')'

end-procedure


begin-procedure Init-Totals

  move ' ' to $Space
  move 0   to #Zero

  move 0 to #i
  move 500 to #max_i
  while #i < #max_i
     put $Space $Space #Zero #Zero #Zero #Zero
         into Remuneration_Totals (#i) T4_Company T4_ReportingID T4_Count_Total T4_Box14_Amt_Total
              T4A_Count_Total T4A_TaxBen_Total
     add 1 to #i
  end-while

  move 0 to #ActNum_T4_Count_Total
  move 0 to #ActNum_Box14_Total

  move 0 to #CO_T4_Count_Total
  move 0 to #CO_Box14_Amt_Total

  move 0 to #Upd_T4_Count_Total
  move 0 to #Upd_Box14_Total

  move 0 to #ActNum_T4A_Count_Total
  move 0 to #ActNum_T4A_TaxBen_Total

  move 0 to #CO_T4A_Count_Total
  move 0 to #CO_T4A_TaxBen_Total

  move 0 to #Upd_T4A_Count_Total
  move 0 to #Upd_T4A_TaxBen_Total

end-procedure


begin-procedure Reset
  move 'Y' to $End_of_Report
  if #MsgFlagW
     print $MsgTextW (+2,1)
  end-if
end-procedure


begin-footing 8

  let $Footer_Note = $TAX907CN_Report_Note || $FootNote_Date
  print $Footer_Note (5,1)

  if $End_of_Report = 'Y'
    print $TAX907CN_End_Of_Report (+2,1) center
 !  encode '<27>E' into $Reset
    print $Reset (+0,+1)
  end-if
end-footing


begin-procedure Ignore
  !Dummy procedure to avoid error if no records to delete
end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
