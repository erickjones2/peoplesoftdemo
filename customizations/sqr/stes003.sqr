!----------------------------------------------------------------------
! Report Name: STES003.SQR - Stock Purchase Currency Conversion Summary
!----------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:50:00                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!----------------------------------------------------------
! Program Descr: Sum and Total currency amount by PayGroup
!                for a given Purchase ID.
!----------------------------------------------------------
! Prompts:       Purchase ID, Process Group, Emplid
! Options:       Sort by Process Group or Company/PayGroup
! Tables:        RUN_CNTL_ST, ST_STES003_VW
! Sorts:         By Process Group, Paygroup and Name
!----------------------------------------------------------

#include 'setenv.sqc'

!--------------------------------------------------------------------
Begin-Setup
!--------------------------------------------------------------------

  #include 'ptset02.sqc'   !Printer and page-size initialization

End-Setup

!--------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     Main Report procedure.
!--------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Get-Purchase-ID
  do Print-Report
  do Reset
  do Successful-EOJ

End-Program

!----------------------------------------------------------
! Section: Heading Procedures
! Descr:   This sections contains all procedures for
!          printing the optional heading.
!----------------------------------------------------------
Begin-Heading 13

#Include 'stdhdg01.sqc'

  print $StockId                                           (-1,001,009)
  print $PUR_StockId                                       (  ,017,010)
  print $PURCHASEID                                        (  ,080,011)
  print $RC_PURCHASE_ID                                    (  ,095,010)
  print $StockPlan                                         (+1,001,011)
  print $PUR_StPlan                                        (  ,017,010)
  print $OfferId                                           (+1,001,012)
  print $PUR_Offering                                      (  ,017,010)
  print $PurchaseDate                                      (+1,001,014)
  do Format-DateTime ($PUR_PurchDt, $Dt, {DEFDATE}, '', '')
  print $Dt                                                (  ,017,010)
  print $ProcessGrp                                        (+2,001,014)
  print $ProcessGroup                                      (  ,017,010)
  print $SrcCurr                                           (  ,060,020)
  print $PCurrCd                                           (  , +2,003)
  print $StkCurr                                           (  ,145,020)
  print $StockCurr                                         (  , +2,003)

  if $RC_SORT = 'C'
    print $HCompany                                        (+1,001,008)
    print $Company                                         (  ,017,003)
    print $HPayGroup                                       (+1,001,009)
    print $PayGroup                                        (  ,017,003)
  end-if

  print '-'                                                (11,028,067) fill
  print '-'                                                (  ,113,067) fill
  print $EmplName                                          (12,001,022)
  print $NewContrib                                        (  ,065,007)
  print $HTotal                                            (  ,090,005)
  print $Conversion                                        (  ,103,008)
  print $NewContrib                                        (  ,150,007)
  print $HTotal                                            (  ,175,005)

  print $Emplid                                            (13,001,011)
  print $CarryFwd                                          (  ,036,013)
  print $Contributions                                     (  ,059,013)
  print $Contributions                                     (  ,082,013)
  print $Ratio                                             (  ,107,004)
  print $CarryFwd                                          (  ,121,013)
  print $Contributions                                     (  ,144,013)
  print $Contributions                                     (  ,167,013)
  print '-'                                                (14,001,179) fill

End-Heading

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!
Begin-Procedure Report-Translation

  do Init_Report_Translation ('STOCK',$language_cd)
  do Append_Report_Translation ('STES003')

  do Get_Field_Information ('STOCK',   'PURCHASE_ID',    $PURCHASEID,   #DW)
  do Get_Field_Information ('STOCK',   'STOCK_ID',       $StockId,      #DW)
  do Get_Field_Information ('STOCK',   'STOCK_PLAN_DESC',$StockPlan,    #DW)
  do Get_Field_Information ('STOCK',   'OFFERING_ID',    $OfferId,      #DW)
  do Get_Field_Information ('STOCK',   'PURCHASE_DT',    $PurchaseDate, #DW)
  do Get_Field_Information ('STOCK',   'PROCESS_GRP',    $ProcessGrp,   #DW)
  do Get_Field_Information ('STOCK',   'COMPANY',        $HCompany,     #DW)
  do Get_Field_Information ('STOCK',   'PAYGROUP',       $HPayGroup,    #DW)
  do Get_Field_Information ('STOCK',   'NAME',           $EmplName,     #DW)
  do Get_Field_Information ('STOCK',   'EMPLID',         $Emplid,       #DW)
  do Get_Field_Information ('STOCK',   'CARRYFWD',       $CarryFwd,     #DW)
  do Get_Field_Information ('STOCK',   'EXCHANGE',       $Conversion,   #DW)
  do Get_Field_Information ('STOCK',   'NEW_CONTRIB',    $NewContrib,   #DW)
  do Get_Field_Information ('STOCK',   'TOTAL',          $HTotal,       #DW)
  do Get_Field_Information ('STOCK',   'GRAND_TOTAL',    $GrandTotal,   #DW)
  do Get_Field_Information ('STOCK',   'DATE',           $Date,         #DW)

  do Get_Field_Information ('STES003', 'REPORT_TITLE',   $ReportTitle,  #DW)
  do Get_Field_Information ('STES003', 'AMT',            $Amt,          #DW)
  do Get_Field_Information ('STES003', 'RATE',           $Ratio,        #DW)
  do Get_Field_Information ('STES003', 'CODE',           $Code,         #DW)
  do Get_Field_Information ('STES003', 'CONTRIBUTIONS',  $Contributions,#DW)
  do Get_Field_Information ('STES003', 'SOURCE_CURR',    $SrcCurr,      #DW)
  do Get_Field_Information ('STES003', 'STOCK_CURR',     $StkCurr,      #DW)

End-Procedure

!--------------------------------------------------------------------
! Procedure: Init-Report
! Descr:     Report initialization procedure.  Set titles, parameters.
!            This is called from the Begin-Program procedure.
!--------------------------------------------------------------------
Begin-Procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  let $ReportId = 'STES003'
  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.

  if $prcs_process_instance = ''
    input $RC_PURCHASE_ID MAXLEN=10 'Purchase ID: ' Type=Char
    uppercase $RC_Purchase_ID
    input $RC_PrcsGrp MAXLEN=10 'Process Group: ' Type=Char
    uppercase $RC_PrcsGrp
    input $RC_EMPLID MAXLEN=11 'Emplid: ' Type=Char
    uppercase $RC_EMPLID
  else
    do Get-SQR-Parms                            ! Get Run Control Values
  end-if

  do Build-Where-Clause

  if $RC_SORT = 'P'
    let $ReportID = 'STES003A'
    let #STRT = 2
  else
    let $ReportID = 'STES003B'
    let #STRT = 0
  end-if

End-Procedure

!----------------------------------------------------------
! Section: Print-Report
! Descr:   Main report
!----------------------------------------------------------
Begin-Procedure Print-Report

  let $WhereCurr1 = 'AND SCA.RATE_DIV <> 0 '
  let $WhereCurr2 = 'AND SCA.ESPP_CONTRIB_AMT <> 0 '

  do Populate-Contrib-Temp-Table

  if $RC_SORT = 'P'
     do Print-Process-Group-Report
  else
     do Print-Co-PayGroup-Report
  end-if

  do Print-Grand-Totals

End-Procedure

!----------------------------------------------------------
! Section: Print-Process-Group-Report
! Descr:   
!----------------------------------------------------------
Begin-Procedure Print-Process-Group-Report

Begin-Select
V1.PROCESS_GROUP                                           () On-break Print=never Level=1 Save=$ProcessGroup
                                                              After=Print-Process-Group-Totals
P1.CURRENCY_CD                                             () On-Break Print=never Level=1 Save=$PCurrCd
V1.NAME                                                    (+1,001,026)
SUM(V1.CARRYOVER_AMT)                                 &a   (  ,028,021) edit 99,999,999,999.999999
SUM(V1.ESPP_CONTRIB_AMT)                              &b   (  ,051,021) edit 99,999,999,999.999999
SUM(V1.CARRYOVER_AMT)+SUM(ESPP_CONTRIB_AMT)           &c   (  ,074,021) edit 99,999,999,999.999999
V1.CUR_EXCHNG_RT                                           (  ,097,014) edit 99999.99999999
SUM(V1.CNVRTED_CARRY_FRWD)                            &d   (  ,113,021) edit 99,999,999,999.999999
SUM(V1.ESPP_STOCK_CONTRIB)                            &e   (  ,136,021) edit 99,999,999,999.999999
SUM(V1.CNVRTED_CARRY_FRWD)+SUM(V1.ESPP_STOCK_CONTRIB) &f   (  ,159,021) edit 99,999,999,999.999999
V1.EMPLID                                                  (+1,001,011)
V1.TO_CUR

  print ''                                                 (+1,001,001)
  let #A = #A + &a
  let #B = #B + &b
  let #C = #C + &c
  let #D = #D + &d
  let #E = #E + &e
  let #F = #F + &f
  let #A2 = #A2 + &a
  let #B2 = #B2 + &b
  let #C2 = #C2 + &c
  let #D2 = #D2 + &d
  let #E2 = #E2 + &e
  let #F2 = #F2 + &f
  let $StockCurr = &V1.TO_CUR

FROM  PS_R_CONTRIB_PART V1,
      PS_ST_PROCESS_GRP P1
WHERE V1.REPORT_ID       = $ReportID
  AND V1.STOCK_ID        = $PUR_StockId
  AND V1.STOCK_PLAN_TYPE = $PUR_StPlanType
  AND V1.STOCK_PLAN      = $PUR_StPlan
  AND V1.OFFERING_ID     = $PUR_Offering
  AND V1.PERIOD_END_DT   = $PUR_PurchDt
  AND P1.PROCESS_GROUP = V1.PROCESS_GROUP
  AND P1.EFFDT = (SELECT MAX(P2.EFFDT)
                  FROM PS_ST_PROCESS_GRP P2
                  WHERE P2.PROCESS_GROUP = P1.PROCESS_GROUP
                    AND P2.EFFDT <= $PUR_PurchDt)
  [$WhereEmplid]
  [$WherePrcsGrp]
GROUP BY V1.PROCESS_GROUP, P1.CURRENCY_CD, V1.NAME, V1.EMPLID, V1.FROM_CUR, V1.CUR_EXCHNG_RT, V1.TO_CUR
ORDER BY V1.PROCESS_GROUP, V1.NAME
End-Select

End-Procedure

!----------------------------------------------------------
! Section: Print-Process-Group-Totals
! Descr:   Force a new page.
!----------------------------------------------------------
Begin-Procedure Print-Process-Group-Totals

  let $TotalString = $ProcessGrp || ' ' || $ProcessGroup
  print '-'                                                (  ,001,179) fill
  print $TotalString                                       (+1,001,024)
  print #A                                                 (  ,028,021) edit 99,999,999,999.999999
  print #B                                                 (  ,051,021) edit 99,999,999,999.999999
  print #C                                                 (  ,074,021) edit 99,999,999,999.999999
  print #D                                                 (  ,113,021) edit 99,999,999,999.999999
  print #E                                                 (  ,136,021) edit 99,999,999,999.999999
  print #F                                                 (  ,159,021) edit 99,999,999,999.999999
  print '-'                                                (+1,001,179) fill
  let #T1 = #T1 + #D
  let #T2 = #T2 + #E
  let #T3 = #T3 + #F
  let #A = 0
  let #B = 0
  let #C = 0
  let #D = 0
  let #E = 0
  let #F = 0
  new-page

End-Procedure

!----------------------------------------------------------
! Section: Print-Grand-Totals
! Descr:
!----------------------------------------------------------
Begin-Procedure Print-Grand-Totals

  let $ProcessGroup = ' '
  let $Company      = ' '
  let $PayGroup     = ' '
  let $GrandTotal   = $GrandTotal
  print '-'                                                (+2,001,179) fill
  print $GrandTotal                                        (+1,001,020)
  print #T1                                                (  ,113,021) edit 99,999,999,999.999999
  print #T2                                                (  ,136,021) edit 99,999,999,999.999999
  print #T3                                                (  ,159,021) edit 99,999,999,999.999999
  print '-'                                                (+1,001,179) fill

End-Procedure

!----------------------------------------------------------
! Section: Print-Co-PayGroup-Report
! Descr:
!----------------------------------------------------------
Begin-Procedure Print-Co-PayGroup-Report

Begin-Select
V2.PROCESS_GROUP                                           () On-break Print=never Level=1 Save=$ProcessGroup
                                                              After=Print-Process-Group-Totals
P3.CURRENCY_CD                                             () On-Break Print=never Level=1 Save=$PCurrCd
V2.COMPANY                                                 () On-break Print=never Level=2 Save=$Company
V2.PAYGROUP                                                () On-break Print=never Level=2 Save=$PayGroup
                                                              After=Print-PayGroup-Totals
V2.NAME                                                    (+1,001,026)
SUM(V2.CARRYOVER_AMT)                                 &g   (  ,028,021) edit 99,999,999,999.999999
SUM(V2.ESPP_CONTRIB_AMT)                              &h   (  ,051,021) edit 99,999,999,999.999999
SUM(V2.CARRYOVER_AMT)+SUM(V2.ESPP_CONTRIB_AMT)        &i   (  ,074,021) edit 99,999,999,999.999999
V2.CUR_EXCHNG_RT                                           (  ,097,014) edit 99999.99999999
SUM(V2.CNVRTED_CARRY_FRWD)                            &j   (  ,113,021) edit 99,999,999,999.999999
SUM(V2.ESPP_STOCK_CONTRIB)                            &k   (  ,136,021) edit 99,999,999,999.999999
SUM(V2.CNVRTED_CARRY_FRWD)+SUM(V2.ESPP_STOCK_CONTRIB) &l   (  ,159,021) edit 99,999,999,999.999999
V2.EMPLID                                                  (+1,001,011)
V2.TO_CUR

  print ''                                                 (+1,001,001)
  let #A = #A + &g
  let #B = #B + &h
  let #C = #C + &i
  let #D = #D + &j
  let #E = #E + &k
  let #F = #F + &l
  let #A2 = #A2 + &g
  let #B2 = #B2 + &h
  let #C2 = #C2 + &i
  let #D2 = #D2 + &j
  let #E2 = #E2 + &k
  let #F2 = #F2 + &l
  let $StockCurr = &V2.TO_CUR

FROM  PS_R_CONTRIB_PART V2,
      PS_PAYGROUP_TBL P3
WHERE V2.REPORT_ID       = $ReportID
  AND V2.STOCK_ID        = $PUR_StockId
  AND V2.STOCK_PLAN_TYPE = $PUR_StPlanType
  AND V2.STOCK_PLAN      = $PUR_StPlan
  AND V2.OFFERING_ID     = $PUR_Offering
  AND V2.PERIOD_END_DT   = $PUR_PurchDt
  AND P3.COMPANY         = V2.COMPANY
  AND P3.PAYGROUP        = V2.PAYGROUP
  AND P3.EFFDT = (SELECT MAX(P4.EFFDT)
                  FROM PS_PAYGROUP_TBL P4
                  WHERE P4.COMPANY = P3.COMPANY
                    AND P4.PAYGROUP = P3.PAYGROUP
                    AND P4.EFFDT <= $PUR_PurchDt)
  [$WhereEmplid]
  [$WherePrcsGrp]
GROUP BY V2.PROCESS_GROUP, P3.CURRENCY_CD, V2.COMPANY, V2.PAYGROUP, V2.NAME, V2.EMPLID, V2.FROM_CUR, V2.CUR_EXCHNG_RT,
         V2.EXCHANGE_DT, V2.TO_CUR
ORDER BY V2.PROCESS_GROUP, V2.COMPANY, V2.PAYGROUP, V2.NAME
End-Select

End-Procedure

!----------------------------------------------------------
! Section: Print-PayGroup-Totals
! Descr:   Force a new page.
!----------------------------------------------------------
Begin-Procedure Print-PayGroup-Totals

  let $TotalString = $HPayGroup || ' ' || $PayGroup
  print '-'                                                (  ,001,179) fill
  print $TotalString                                       (+1,001,024)
  print #A2                                                (  ,028,021) edit 99,999,999,999.999999
  print #B2                                                (  ,051,021) edit 99,999,999,999.999999
  print #C2                                                (  ,074,021) edit 99,999,999,999.999999
  print #D2                                                (  ,113,021) edit 99,999,999,999.999999
  print #E2                                                (  ,136,021) edit 99,999,999,999.999999
  print #F2                                                (  ,159,021) edit 99,999,999,999.999999
  let #A2 = 0
  let #B2 = 0
  let #C2 = 0
  let #D2 = 0
  let #E2 = 0
  let #F2 = 0
  new-page

End-Procedure

!-----------------------------------------------------------------------
! SQC Includes
!-----------------------------------------------------------------------
#include 'strunctl.sqc'    !Stock Admin's Run Control Record
#include 'sqlerr.sqc'      !SQL error processing
#include 'stdapi.sqc'
#include 'curdttim.sqc'    !Get-Current-Date-Time
#include 'datetime.sqc'    !Get-Date-Time
#include 'datemath.sqc'    !Date Math Routines
#include 'reset.sqc'       !Reset printer procedure
#include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Translate SQR strings to given language
#include 'askftd.sqc'      
#include 'stgetfmv.sqc'    !Retrieves FMV for a particular date
#include 'getrplng.sqc'    !Gets the report language
#include 'stescomn.sqc'   ! Procedures: Get-Purchase-ID
                          !             Build-Where-Clause
