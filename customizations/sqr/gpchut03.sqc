!***********************************************************************
! GPCHUT03.SQC:  Input parameter of various reports and sorting order  *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!
!       $Release:  HR92                                                !
!           $Bug:  26794604                                            !
!                                                                      *
!***********************************************************************

begin-procedure Ask-Report-Parameters
#DEBUG show '-> Ask-Report-Parameters'

  if $ReportID = 'GPCHSI06'
     input $Start_Date     'Begin Date       : '  type = date
     input $Last_Date      'End Date         : '  type = date
     input $Ctl_Company    'Company          : '  type = char   maxlen=3
  end-if

!----------------------------------------------

  if $ReportID = 'GPCHAL10'
     input $Ctl_Curr_Pay_End_Dt 'Current Pay End Date    : '  type = date
     input $Ctl_Print           'Print Class             : '  type = char
     input $Rpt_Cur             'Currency Code           : '  type = char  maxlen=3

     input $Rpt_Period 'Retro & Curr (Y), Retro (N) , Current (O) ' type = char maxlen=1

     input $Ctl_PayEntity       'Pay Entity              : '  type = char
     input $Ctl_PayGroup        'Pay Group               : '  type = char
     input $Ctl_Deptid          'Department              : '  type = char
     input $Ctl_Location        'Location                : '  type = char
     input $Ctl_Emplid          'Emplid                  : '  type = char

     input $Pay_Adv_Sort1       'Sort Order 1            : '  type = char  maxlen=1
     input $Pay_Adv_Sort2       'Sort Order 2            : '  type = char  maxlen=1
     input $Pay_Adv_Sort3       'Sort Order 3            : '  type = char  maxlen=1

     let $PR_Pay_Entity =  $Ctl_PayEntity
     do Create-Report-Variables
     do Get-Sort-Order
     do Get-Month-Dates

  end-if

!----------------------------------------------

  if $ReportID = 'GPCHTX06'

     input $Ctl_Year            'Pay Year                     : '  type = char
     input $Ctl_Print           'Print Class                  : '  type = char
     input $Ctl_PayEntity       'Pay Entity                   : '  type = char
     input $Ctl_PayGroup        'Pay Group                    : '  type = char
     input $Ctl_Deptid          'Department                   : '  type = char
     input $Ctl_Location        'Location                     : '  type = char
     input $Ctl_Emplid          'Emplid                       : '  type = char
     input $Ctl_Comp_Report     'Print Pay Entity Report(Y/N) : '  type = char maxlen=1
     input $Detailed            'Print Detail Report(J/K)     : '  type = char maxlen=1

     let $PR_Pay_Entity =  $Ctl_PayEntity
     do Create-Report-Variables
     do Get-Year-Dates

  end-if

!----------------------------------------------

  if $ReportID = 'GPCHTX04'

     input $Ctl_Year            'Pay Year                     : '  type = char
     input $Ctl_PayEntity       'Pay Entity                   : '  type = char
     input $Ctl_PayGroup        'Pay Group                    : '  type = char
     input $Ctl_Deptid          'Department                   : '  type = char
     input $Ctl_Location        'Location                     : '  type = char
     input $Ctl_Emplid          'Emplid                       : '  type = char

  end-if
!----------------------------------------------
   if $ReportID = 'GPCHTX06'

     input $Ctl_Print           'Print Class                  : '  type = char
     input $Ctl_Curr_Pay_End_Dt 'Current Pay End Date         : '  type = date
     input $Ctl_PayEntity       'Pay Entity                   : '  type = char

     let $PR_Pay_Entity =  $Ctl_PayEntity
     do Create-Report-Variables

   end-if

#DEBUG show '<- Ask-Report-Parameters'
End-procedure Ask-Report-Parameters
!*********************************************************************************************
 Begin-Procedure Create-Report-Variables
 #DEBUG show '-> Create-Report-Variables'

  if $Ctl_Emplid <> ''
    let $Emplid_Crit     = ' AND PBD.EMPLID = ''' || $Ctl_Emplid ||  ''' '
    let $Emplid_Crit_PS  = ' AND PS.EMPLID  = ''' || $Ctl_Emplid ||  ''' '
    let $Emplid_Crit_FA  = ' AND FA.EMPLID  = ''' || $Ctl_Emplid ||  ''' '
  else
    let $Emplid_Crit     = ' '
    let $Emplid_Crit_PS  = ' '
    let $Emplid_Crit_FA  = ' '
  end-if

  !---------------

  if $Ctl_PayEntity <> ''
    let $PayEntity_Crit     = ' AND PBD.PAY_ENTITY  = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_PS  = ' AND PS.PAY_ENTITY   = ''' || $Ctl_PayEntity || ''' '
    let $PayEntity_Crit_FA  = ' AND FA.PAY_ENTITY   = ''' || $Ctl_PayEntity || ''' '
  else
    let $PayEntity_Crit     = ' '
    let $PayEntity_Crit_PS  = ' '
    let $PayEntity_Crit_FA  = ' '
  end-if

  !---------------

  if $Ctl_PayGroup <> ''
    let $PayGroup_Crit     = ' AND PBD.GP_PAYGROUP  = ''' || $Ctl_PayGroup || ''' '
    let $PayGroup_Crit_PS  = ' AND PS.GP_PAYGROUP   = ''' || $Ctl_PayGroup || ''' '
    let $PayGroup_Crit_FA  = ' AND  FA.GP_PAYGROUP  = ''' || $Ctl_PayGroup || ''' '
  else
    let $PayGroup_Crit     = ' '
    let $PayGroup_Crit_PS  = ' '
    let $PayGroup_Crit_FA  = ' '
  end-if

  !---------------

  if $Ctl_Location <> ''
    let $Location_Crit     = ' AND PBD.LOCATION  = ''' || $Ctl_Location || ''' '
    let $Location_Crit_PS  = ' AND PS.LOCATION   = ''' || $Ctl_Location || ''' '
    let $Location_Crit_FA  = ' AND FA.LOCATION   = ''' || $Ctl_Location || ''' '
  else
    let $Location_Crit     = ' '
    let $Location_Crit_PS  = ' '
    let $Location_Crit_FA  = ' '
  end-if

  !---------------

  if $Ctl_Deptid <> ''
    let $Dept_Crit     = ' AND PBD.DEPTID  = ''' || $Ctl_Deptid || ''' '
    let $Dept_Crit_PS  = ' AND PS.DEPTID   = ''' || $Ctl_Deptid || ''' '
    let $Dept_Crit_FA  = ' AND FA.DEPTID   = ''' || $Ctl_Deptid || ''' '
  else
    let $Dept_Crit     = ' '
    let $Dept_Crit_PS  = ' '
    let $Dept_Crit_FA  = ' '
  end-if

 !---------------
 
  if $Ctl_BusinessUnit <> ''
    let $BusinessUnit_Crit     = ' AND PBD.BUSINESS_UNIT  = ''' || $Ctl_BusinessUnit || ''' '
    let $BusinessUnit_Crit_PS  = ' AND PS.BUSINESS_UNIT   = ''' || $Ctl_BusinessUnit || ''' '
    let $BusinessUnit_Crit_FA  = ' AND FA.BUSINESS_UNIT   = ''' || $Ctl_BusinessUnit || ''' '
  else
    let $BusinessUnit_Crit     = ' '
    let $BusinessUnit_Crit_PS  = ' '
    let $BusinessUnit_Crit_FA  = ' '
  end-if
  
#DEBUG show '<- Create-Report-Variables'
End-Procedure Create-Report-Variables

!*********************************************************************************************

begin-procedure Get-Month-Dates
#DEBUG show '-> Get-Month-Dates'

     #debug show ' Current Pay End Dt  : ' $Ctl_Curr_Pay_End_Dt

     do Convert-to-DTU-DATE($Ctl_Curr_Pay_End_Dt,$DTU_end_dt)
     do Dtu-Month-Begin($DTU_end_dt,$DTU_monthbegin)
     do Convert-From-DTU-DATE($DTU_monthbegin,$ReportBeginDate)

     do Convert-to-DTU-DATE($Ctl_Curr_Pay_End_Dt,$DTU_end_dt)
     do dtu-month-end($DTU_end_dt,$DTU_monthend)
     do Convert-From-DTU-DATE($DTU_monthend,$ReportEndDate)

     #debug show ' From Month: '   $ReportBeginDate  ' To : '  $ReportEndDate

#DEBUG show '<- Get-Month-Dates'
End-procedure Get-Month-Dates

!*********************************************************************************************
begin-procedure Get-Year-Dates
#DEBUG show '-> Get-Year-Dates'

     #debug show ' Current Year         : ' $Ctl_Year

     let $CMP_Start_Dt = $Ctl_Year || '01' || '01' || '0000'
     let $CMP_End_Dt   = $Ctl_Year || '12' || '31' || '0000'
     do Format-DateTime($CMP_start_Dt, $out, {DEFCMP},'','native')
     do Format-DateTime($CMP_end_Dt , $out2, {DEFCMP},'','native')
     let $Ctl_Start_Dt = rtrim($out, ' ')
     let $Ctl_End_Dt   = rtrim($out2, ' ')

     #debug show ' From Year : '   $Ctl_Start_Dt  ' To : '  $Ctl_End_Dt

#DEBUG show '<- Get-Year-Dates'
End-procedure Get-Year-Dates
!***************************************************************************
Begin-Procedure Get-Sort-Order
#Debug show '-> Get-Sort-Order '


evaluate $Pay_Adv_Sort1
  when = 'E'
    let $Sort1 = 'PBD.EMPLID'
    break
  when = 'P'
    let $Sort1 = 'PBD.PAY_ENTITY'
    break
  when = 'L'
    let $Sort1 = 'PBD.LOCATION'
    break
  when = 'D'
    let $Sort1 = 'PBD.DEPTID'
    break
  when = 'G'
    let $Sort1 = 'PBD.GP_PAYGROUP'
    break
  when-other
    let $Sort1 = ' '
    break
  end-evaluate

  evaluate $Pay_Adv_Sort2
  when = 'E'
    let $Sort2 = ' PBD.EMPLID'
    break
  when = 'P'
    let $Sort2 = ' PBD.PAY_ENTITY'
    break
  when = 'L'
    let $Sort2 = ' PBD.LOCATION'
    break
  when = 'D'
    let $Sort2 = ' PBD.DEPTID'
    break
  when = 'G'
    let $Sort2 = ' PBD.GP_PAYGROUP'
    break
  when-other
    let $Sort2 = ' '
    break
  end-evaluate

  evaluate $Pay_Adv_Sort3
  when = 'E'
    let $Sort3 = ' PBD.EMPLID'
    break
  when = 'P'
    let $Sort3 = ' PBD.PAY_ENTITY'
    break
  when = 'L'
    let $Sort3 = ' PBD.LOCATION'
    break
  when = 'D'
    let $Sort3 = ' PBD.DEPTID'
    break
  when = 'G'
    let $Sort3 = ' PBD.GP_PAYGROUP'
    break
 when-other
    let $Sort3 = ' '
    break
  end-evaluate


  display ''
  display 'Sort Criteria : '             noline
  move 'PAY_ADV_SORT1'   to $FieldName
  move $Pay_Adv_Sort1  to $FieldValue
  do Read-Translate-Table
  display $XlatLongName                 noline
  display ' - '                         noline

  move 'PAY_ADV_SORT2'   to $FieldName
  move $Pay_Adv_Sort2  to $FieldValue
  do Read-Translate-Table
  display $XlatLongName                 noline
  display ' - '                         noline

  move 'PAY_ADV_SORT3'   to $FieldName
  move $Pay_Adv_Sort3  to $FieldValue
  do Read-Translate-Table
  display $XlatLongName

#Debug show '<- Get-Sort-Order '
End-Procedure Get-Sort-Order
!*********************************************************************************************







