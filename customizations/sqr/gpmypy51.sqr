!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:54:59                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! Global Payroll       Release 8.8                                     *
!***********************************************************************

!***********************************************************************
!                                                                      *
!  This SQR generates the MYS Net Payments Report                      *
!                                                                      *
!  The user has several the option of generating a summary or detail   *
!  report.                                                             *
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !page layout and printer definition
#include 'number.sqc'   !Routines to format numbers
#include 'datetime.sqc' !Routines for date and time formatting
#include 'prcsapi.sqc'  !Replaces stdapi.sqc
!#include 'setupdb.sqc'
#define ColR   155
begin-report

#IFDEF DEBUGA
 lET $PRCS_OPRID = 'PS'
 LET $PRCS_RUN_CNTL_ID = '1'
#ENDIF
        do Init-Processing
        Do Stdapi-Init
        do Get-Parameters
        do Process-PE
        do Reset                        ! called from reset.sqc
        do Delete-RunControl
        Do Stdapi-Term
end-report
!
!***********************************************************************
! Init-Processing                                                      *
!***********************************************************************
begin-procedure Init-Processing
        do Init-Datetime
        do Get-Current-Datetime
        do Init-Report
        do Define-Prcs-Vars
!        do Get-Language-Codes
end-procedure ! Init-Processing
!
!***********************************************************************
! Init-Report                                                          *
!***********************************************************************
begin-procedure Init-Report

#define Col1   1
#define Col2   14
#define Col3   27
#define Col4   38
#define Col4A 70
#define Col5   88
#define Col6   102
#define Col7   117

    Let $ReportID = 'GPMYPY51'

    Let $Curr_Language_Cd = 'ENG'

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Get_Field_Information ($ReportID, 'PAY_ENTITY'   , $Pay_Entity_Title, #DW)
    do Get_Field_Information ($ReportID, 'DEBIT_DT'     , $Debit_Dt_Title,   #DW)
    do Get_Field_Information ($ReportID, 'CAL_RUN_ID'   , $Cal_Run_Title,    #DW)
    do Get_Field_Information ($ReportID, 'EMPLID'       , $EMPLID_Title,     #DW)
    do Get_Field_Information ($ReportID, 'EMPL_RCD'     , $ERCD_Title,       #DW)
    do Get_Field_Information ($ReportID, 'NAME'         , $NAME_Title,       #DW)
    do Get_Field_Information ($ReportID, 'GP_AMT'       , $AMT_Title,        #DW)
    do Get_Field_Information ($ReportID, 'PAYMENT_MTHD' , $Mode_Title,       #DW)
    do Get_Field_Information ($ReportID, 'TOTAL_AMOUNT' , $Total_Amt_Title,  #DW)
    do Get_Field_Information ($ReportID, 'TOTAL_RECORDS', $Total_Recs_Title, #DW)
    do Get_Field_Information ($ReportID, 'NET_PAY_DTL'  , $Net_Pay_Dtl_Title,#DW)
    do Get_Field_Information ($ReportID, 'NET_PAY_SUM'  , $Net_Pay_Sum_Title,#DW)
    do Get_Field_Information ($ReportID, 'ACCOUNT_NUM'  , $ACCOUNT_NUM_Title,#DW)


end-procedure ! Init-Report


!***************************
Begin-Procedure Print-Heading

#Include 'stdhdg01.sqc'

  Let #DL = {Colr} +25
  print  '-'                   (+1,1,#DL)  fill
  print $Cal_Run_Title         (+1,1)
  print ':'                    (0,20)
  print $Cal_Run_ID            (0,23)
  print $Cal_Run_Descr         (0,42)
  print $Debit_Dt_Title        (+1,1)
  print ':'                    (0,20)

  let $Debit_Dt= edit ($Debit_Dt,'DD/MM/YYYY')
  print $DebitDt            (0,23)
  print $Pay_Entity_Title      (+1,1)
  print ':'                    (0,20)
  Print $PayEntity             (0,23)
  print $Pay_Entity_Descr      (0,42)
  print  '-'                   (+1,1,#DL)  fill

  Let #LC = 13

     If $ReportLvl = '1' or $ReportLvl = '3'
        if $ReportTitle = $Net_Pay_Dtl_Title ! Detail Report
           print $EMPLID_Title (+1,{Col2})
           print $ERCD_Title   (0,{Col3})
           print $NAME_Title   (0,{Col4})
           print  $ACCOUNT_NUM_Title (0,{Col4A})
           Let #AmtTitle = {Col5} + 5
           print $AMT_Title    (0,#AmtTitle)
           print $Mode_Title   (0,{Col6})
           print 'Payment Status' (0,{Col7})

           print  '-'          (+1,1,#DL)  fill
         end-if
     end-if

End-Procedure

!
!***********************************************************************
! Get-Parameters                                                    *
!***********************************************************************
begin-procedure Get-Parameters
Begin-SELECT
RC.CAL_RUN_ID
RC.GPMY_REPORT_LVL
     Let $Cal_Run_ID = &RC.CAL_RUN_ID
     let $ReportLvl  = &RC.GPMY_REPORT_LVL

  FROM PS_GPMY_NET_PAY_RC RC
    WHERE RC.OPRID         = $PRCS_OPRID
        AND RC.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT

end-procedure ! Get-Parameters
!
!***********************************************************************
! Process-PE                                                           *
!***********************************************************************
begin-procedure Process-PE
   Let #PageNo = 1
BEGIN-SELECT DISTINCT
A.PAY_ENTITY
CR.DESCR
PE.DESCR
  Let $Cal_Run_Descr = &CR.DESCR
   Let $Pay_Entity_Descr = &PE.DESCR
   Let $PayEntity = &A.PAY_ENTITY

    IF $ReportLvl = '3'

              Let $ReportTitle = $Net_Pay_Dtl_Title
                    Let $Print = 'Y'
                    Do Detail-Report

                    Let $Print = 'N'
                    Let $ReportTitle = $Net_Pay_Sum_Title
                    Do Detail-Report
                    if #PageNo > 1
                       new-page
                    end-if
                    Do Print-Heading
      Add 1 to #PageNo
     else

     IF $ReportLvl = '1' ! Detail Report
      Let $ReportTitle = $Net_Pay_Dtl_Title
      Let $Print = 'Y'
      Do Detail-Report
   Else
      Let $Print = 'N'
      Let $ReportTitle = $Net_Pay_Sum_Title
      Do Detail-Report
      if #PageNo > 1
         new-page
      end-if
      Do Print-Heading
      Add 1 to #PageNo
   End-if
   end-if

   Let #LC = #LC + 4
   Print $Total_Amt_Title   (+2,61)
   Print #PAmount           (0,{Col5})     edit '99999999.99'
   Print $Total_Recs_Title  (+2,61)
   Print #TotRows           (0,{Col5})     edit '99999999'

   FROM PS_GP_CAL_RUN_DTL A,
        PS_GP_PAYMENT B,
        PS_GP_CAL_RUN CR,
        PS_GP_PYENT PE
 WHERE A.CAL_RUN_ID = B.CAL_RUN_ID
  AND A.PAY_ENTITY = B.PAY_ENTITY
  AND A.GP_PAYGROUP = B.GP_PAYGROUP
  AND A.CAL_ID = B.CAL_ID
  AND A.CAL_RUN_ID = $Cal_Run_ID
  AND A.CALC_TYPE  = 'P'
  AND A.CAL_RUN_ID = CR.CAL_RUN_ID
  AND A.PAY_ENTITY = PE.PAY_ENTITY
UNION

SELECT
PE.PAY_ENTITY
,RU.DESCR

,PE.DESCR


   FROM PS_GP_CAL_RUN_OFF A,
        PS_GP_PAYMENT B,
        PS_GP_OFFCYCLE CR,
        PS_GP_PYENT PE,
        PS_GP_CAL_RUN RU
 WHERE A.CAL_RUN_ID = B.CAL_RUN_ID
  AND A.GP_PAYGROUP = B.GP_PAYGROUP
  AND A.CAL_RUN_ID = $Cal_Run_ID
  AND A.CAL_RUN_ID = CR.CAL_RUN_ID
  AND A.GP_PAYGROUP = CR.GP_PAYGROUP
  AND B.PAY_ENTITY = PE.PAY_ENTITY

  AND RU.CAL_RUN_ID = A.CAL_RUN_ID
End-SELECT
End-Procedure ! Process-PE
!
!***********************************************************************
! Detail-Report                                                        *
!***********************************************************************
begin-procedure Detail-Report
   Let #TotRows = 0
   Let #PAmount = 0
   Let #LC = 65

Begin-Select
A.EMPLID
A.EMPL_RCD
A.INSTANCE
A.DEBIT_DT
A.PAYMENT_MTHD
A.SRC_BANK_ID
PBA.BANK_CD
PBA.BRANCH_EC_CD
PBA.ACCOUNT_EC_ID
PBA.ACCOUNT_NAME
SUM(A.GP_PMT_AMT)     &Amount
NID.NATIONAL_ID
NM.NAME
BANK.GPMY_BNK_USRNO
BANK.GPMY_BNK_USR_NAME
A.PMT_STATUS

    Let $Emplid  = &A.EMPLID
    Let $EmplRcd = &A.EMPL_RCD
    Let $PayMthd = &A.PAYMENT_MTHD
    Let #Amount  = &Amount
    Let #A.INSTANCE =  &A.INSTANCE
    Let $Account_Num = &PBA.ACCOUNT_EC_ID
    Let $PmtStatus = &A.PMT_STATUS

    Do Format-DateTime(&A.DEBIT_DT, $DebitDt, {DEFDMY},'','')

     if $Print =  'Y'
! The value of $EarlierPayMethod is null the 1st time. after that it will be the same as the paymthd of previous row.
! Thus Fieldvalue will now have the same value as the earlier row after this assignment.

       Let $FieldValue = $EarlierPayMethod
       if $FieldValue <> $PayMthd
          let $FieldName = 'PAYMENT_MTHD'
          let $FieldValue = $PayMthd
          do Read-Translate-Table
          Let $PayMethodDescr = $XlatLongName

       end-if

! We need to take a copy of PayMthd,because the fieldvalue will get modified to get PMTSTatus value.

       Let $EarlierPayMethod = $PayMthd

       Let $FieldValue = $EarlierPmtStatus
       if $FieldValue <> $PmtStatus
          let $FieldName = 'PMT_STATUS'
          let $FieldValue = $PmtStatus
          do Read-Translate-Table
          Let $PmtStatusDescr = $XlatLongName

       end-if

       Let $EarlierPmtStatus = $PmtStatus

       Do Get-Name
       Do Print-Values
    end-if

    Add 1 to #TotRows
    Add #Amount to #PAmount

    FROM PS_GP_PAYMENT A
    , PS_SRC_BANK B
    , PS_GP_CAL_RUN_DTL D
    , PS_GP_NET_DIST_DTL PND
    , PS_PYE_BANKACCT PBA
    ,PS_NAMES NM
    ,PS_PERS_NID NID
    ,PS_GPMY_PYENT_SBNK BANK
    WHERE
    A.PMT_TYPE = '01'
    AND A.PAYMENT_MTHD = 'T'
    AND A.PMT_STATUS = 'F'
    AND A.CAL_RUN_ID = $Cal_Run_ID
    AND A.SRC_BANK_ID = B.SRC_BANK_ID
    AND D.CAL_RUN_ID = A.CAL_RUN_ID
    AND D.GP_PAYGROUP = A.GP_PAYGROUP

    AND D.CAL_ID = A.CAL_ID
    AND D.CALC_TYPE = 'P'
    AND PND.EMPLID = A.EMPLID
    AND PND.EMPL_RCD = A.EMPL_RCD
    AND PND.RUN_TYPE = D.RUN_TYPE
    AND PND.INSTANCE = A.INSTANCE

    AND A.GP_PAYGROUP in (select PYG.GP_PAYGROUP
                            from  PS_GP_PYGRP PYG
                            where
                            PYG.PAY_ENTITY =BANK.PAY_ENTITY
                            )

    AND PND.EFFDT = (
    SELECT MAX(PNDA.EFFDT)
    FROM PS_GP_NET_DIST_DTL PNDA
    WHERE PNDA.EMPLID = PND.EMPLID
    AND PNDA.EMPL_RCD = PND.EMPL_RCD
    AND PNDA.RUN_TYPE = PND.RUN_TYPE
    AND PNDA.EFFDT <= A.DEBIT_DT)
    AND PBA.EMPLID = PND.EMPLID
    AND PBA.ACCOUNT_ID = PND.ACCOUNT_ID
    AND NM.EMPLID=A.EMPLID
    AND NM.NAME_TYPE='PRI'
    AND NM.EFFDT=( SELECT MAX(EFFDT)
    FROM PS_NAMES
    WHERE EMPLID=NM.EMPLID
    AND NAME_TYPE='PRI'
    AND EFFDT<=   A.DEBIT_DT)
    AND NID.EMPLID=A.EMPLID
    AND NID.NATIONAL_ID_TYPE='NEWIC'
    AND BANK.PAY_ENTITY= $PayEntity
    GROUP BY A.PAY_ENTITY, A.SRC_BANK_ID,
    A.EMPLID, A.EMPL_RCD, A.INSTANCE,
    A.PAYMENT_MTHD
   ,A.DEBIT_DT,
    PBA.BANK_CD, PBA.BRANCH_EC_CD,
    PBA.ACCOUNT_EC_ID, PBA.ACCOUNT_NAME,
    NID.NATIONAL_ID ,NM.NAME,BANK.GPMY_BNK_USRNO ,
    BANK.GPMY_BNK_USR_NAME, A.PMT_STATUS
END-SELECT
end-procedure ! Process-Main


!***********************************************************************
! Get-Name
!***********************************************************************
Begin-Procedure Get-Name
Begin-SELECT
A.NAME
     Let $Name = &A.NAME
   FROM PS_NAMES A
  WHERE A.EMPLID = $Emplid
    AND A.NAME_TYPE = 'PRI'
End-SELECt
End-Procedure
!
!***********************************************************************
! Print-Values
!***********************************************************************
Begin-procedure Print-Values
   if #LC > 50
      if #PageNo > 1
         new-page
      end-if
      Do Print-Heading
      Add 1 to #PageNo
   End-if

   Print $Emplid   (#LC,{Col2})
   Print $EmplRcd  (#LC,{Col3})     edit '99999'
   Print $Name     (#LC,{Col4})
   Print $Account_Num (#LC,{Col4A})
   if  #Amount < 0
       let #Amount = 0
   end-if

   Print #Amount   (#LC,{Col5})     edit '99999999.99'
   Print $PayMethodDescr (#LC,{Col6})
   Print $PmtStatusDescr (#LC,{Col7})

   Let #LC = #LC + 1
End-Procedure
!
!***********************************************************************
! Delete-RunControl                                                    *
!***********************************************************************
begin-procedure Delete-RunControl
begin-SQL
DELETE FROM PS_GPMY_NET_PAY_RC
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID;
end-SQL

end-procedure ! Delete-RunControl
!
#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        ! Reset printer procedure
#include 'stdapi.sqc'       ! routines for process scheduler manipulation.
#Include 'datetime.sqc'  !Routines for date and time formatting

