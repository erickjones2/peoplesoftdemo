!****************************************************
!  FGASKCO:  Get Agency from User
!****************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2013/01/17:13:26:45                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

begin-procedure Ask-Agency

  input $Agency 'Enter Agency Code (Company)'
  let $Agency = (Rtrim($Agency, ' '))
  if isnull($Agency)
    stop
  else
    let $InAgency = Upper($Agency)
  end-if

  display ''
  display 'You may restrict this report to a specified range of dates, choose'
  display 'the value from the options below or press enter to accept the default:'
  display ''
  display '   A = All Dates (default)'
  display '   S = Specify a date range'
  display ''

  input $Answer maxlen=1 'Enter your From/Thru date range selection (A/S)'
  uppercase $Answer

  do Get-Date-Values

end-procedure

!----------------------------------------------------------------------!
! Procedure:    Get-Date-Values                                        !
! Description:  Loops until user enters a valid From-Thru set of dates !
!----------------------------------------------------------------------!

begin-procedure Get-Date-Values

  do Get-Century-Begin-Date

  if $Answer = 'A' or $Answer = ''
     move $Century_Begin_Dt to $FromDate
     move $AsOfToday to $ThruDate
     goto Finish
  end-if

  do Get-Dates

  while $DateOK <> 'Y'
    do Get-Dates
  end-while

  Finish:

  do Format-DateTime($FromDate, $out1, {DEFDATE}, '', '')
  do Format-DateTime($ThruDate, $out2, {DEFDATE}, '', '')

  display 'Report Value:  ' noline
  display $out1 noline
  display ' thru ' noline
  display $out2

end-procedure

!----------------------------------------------------------------------!
! Procedure:    Get-Dates                                              !
! Description:  Controls prompting for user entered From-Thru dates    !
!----------------------------------------------------------------------!

begin-procedure Get-Dates

  move 'Y' to $DateOK

  if $FromDateOK <> 'Y'
     display ''
     display 'Enter the ''From'' Date ({Prompt-Date}) for this report or press'

     input $FromDate 'enter to default the ''From'' date to 01/01/00'

     if $FromDate = ''
        move $Century_Begin_Dt to $FromDate
     else
        move {PDelimiter} to $DDelimiter
        do Format-DateTime($FromDate,$FromDate,{Prompt-Mask},'','native')
     end-if

     do Validate-Native-Date($FromDate,$DateOK)

     if $DateOK = 'N'
         display '**** This is an invalid date, please reenter ****'
     end-if
  end-if

  if $DateOK = 'Y'
     move 'Y' to $FromDateOK
     display ''
     display 'Enter the ''Thru'' Date ({Prompt-Date}) for this report or press'

     input $ThruDate 'enter to default the ''Thru'' Date to today''s date'

     if $ThruDate = ''
        move $AsOfToday to $ThruDate
     else
        move {PDelimiter} to $DDelimiter
        do Format-DateTime($ThruDate,$ThruDate,{Prompt-Mask},'','native')
     end-if

     do Validate-Native-Date($ThruDate,$DateOK)

     if $DateOK = 'N'
         display '**** This is an invalid date, please reenter ****'
     end-if

     if $DateOK = 'Y'
        do Check-Dates
     end-if
  end-if
end-procedure

!----------------------------------------------------------------------!
! Procedure:    Check-Dates                                            !
! Description:  Validates that the thru date is > than the from date   !
!----------------------------------------------------------------------!

begin-procedure Check-Dates

  do Format-DateTime($FromDate,$out1,{DEFCMP},'','')
  do Format-DateTime($ThruDate,$out2,{DEFCMP},'','')
  if $out1 > $out2
    display ''
    display 'From Date can not be greater than Thru Date'
    move 'N' to $DateOK
    move 'N' to $FromDateOK
  end-if
end-procedure

!----------------------------------------------------------------------!
! Procedure:    Get-Century-Begin-Date                                 !
! Description:  Retrieves the century begin date from the installation !
!               table.                                                 !
!----------------------------------------------------------------------!

begin-procedure Get-Century-Begin-Date

  do Format-DateTime('19000101',$Century_Begin_Dt,{DEFCMP},'','native')

end-procedure

#include 'validdt.sqc'          ! Validate date routine
