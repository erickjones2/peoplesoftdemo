!***********************************************************************
!  gpmytx06: Form E - Annual return by employers.                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  25866109                                            *
!                                                                      *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment
#Include 'setup01.sqc'

begin-setup

page-size 80 125
declare printer

      type          = HPLASERJET
      orientation   = portrait
      top-margin    = 0.30
      left-margin   = 0.2
      font          = 5
      point-size    = 8
      line-size     = 10

     
   create-array name=Employees size=100000
   field =Serial_No:number
   field =Name:char
   field =ItFileNbr:char
   field =Identity_Nbr:char
   field =Earns_YTD:number
   field=TAX_EXEMPT:number
   field=Tax_Bal:number
   field=CP38_YTD:number


end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Init-Report
  do Main
  do Report-Parm-Clean

  do Stdapi-Term
end-Report

begin-heading 8

   let #Row_Nbr = 3
       IF $curr_language_cd = 'ENG'
          graphic () font :#StdFont :#PntSize95
          print $ReportEmployerName_lbl  (#Row_Nbr,6) bold
          PRINT $Registered_Name (#Row_Nbr,15) bold
          graphic            (#Row_Nbr,15,55) horz-line
          graphic () font :#StdFont :#PntSize95
          Print $ReportRefNo_lbl (#Row_Nbr,93,15) bold
          Print $E_File_Nbr  (#Row_Nbr,110,15) box bold
          add 1 to #Row_Nbr
          PRINT $Registered_Name2 (#Row_Nbr,15) bold
          graphic            (#Row_Nbr,15,55) horz-line

          add 2 to #Row_Nbr
          print $ReportTitle1 (#Row_Nbr,6)
          add 1 to #Row_Nbr
          graphic (#Row_Nbr,6,119) box 3 0 25
          graphic () font 4 :#HdrPntSize
          print $ReportTitle2        (#Row_Nbr,7) bold
          print 'AND' (#Row_Nbr,118) bold
          add 1 to #Row_Nbr
          print $ReportTitle3 (#Row_Nbr,21) bold
          add 1 to #Row_Nbr
          PRINT $ReportTitle4 (#Row_Nbr,37) bold
        Else
          graphic () font :#StdFont :#PntSize95
          print 'Nama'  (#Row_Nbr,6) bold
          PRINT $Registered_Name (#Row_Nbr,15) bold
          graphic            (#Row_Nbr,15,55) horz-line
          Print 'No. Rujukan E :' (#Row_Nbr,93,15) bold
          Print $E_File_Nbr  (#Row_Nbr,110,15) box bold
          add 1 to #Row_Nbr
          graphic            (#Row_Nbr,15,55) horz-line
          PRINT $Registered_Name2 (#Row_Nbr,15) bold

          add 2 to #Row_Nbr
          print $ReportTitle1 (#Row_Nbr,6)
          add 1 to #Row_Nbr
          graphic (#Row_Nbr,6,119) box 3 0 25
          graphic () font 4 :#HdrPntSize
          let $Tax_Year = rtrim(ltrim($Tax_Year, ' '), ' ')
          let $ReportTitleHeader1 = 'PENYATA SARAAN DARIPADA PENGGAJIAN BAGI TAHUN BERAKHIR 31 DISEMBER'
          let $ReportTitleHeader = $ReportTitleHeader1 || ' ' || $Tax_Year || ' ' || 'DAN'
          print $ReportTitleHeader        (#Row_Nbr,11) bold
          add 1 to #Row_Nbr
          print 'MAKLUMAT MENGENAI POTONGAN CUKAI DI BAWAH KAEDAH-KAEDAH CUKAI PENDAPATAN ' (#Row_Nbr,10) bold
          add 1 to #Row_Nbr
          PRINT '(POTONGAN DARIPADA SARAAN) 1994 ' (#Row_Nbr,38) bold

       end-if
       
end-heading

begin-footing 4
  if #page-count = 1
  IF $curr_language_cd = 'ENG'
  graphic () font 3 :#HdrPntSize

  print $ReportNote1  (1,6) bold
  print $ReportNote2  (+1,15) bold
  print $ReportNote3  (+1,15) bold
  print $ReportNote4  (+1,15) bold
  else
  graphic () font 3 :#HdrPntSize
  print 'NOTA: MAJIKAN BOLEH MENYEDIAKAN SALINAN MENGIKUT FORMAT SEPERTI BAHAGIAN INI SEKIRANYA  '  (1,6) bold
  print 'RUANG YANG DISEDIAKAN DALAM BORANG INI TIDAK MENCUKUPI.'  (+1,14) bold
  print 'MAJIKAN DIGALAKKAN MENGHANTAR C.P. 8D DALAM BENTUK  DISKET/PITA/CAKERA PADAT '  (+1,14) bold
  print 'MENGIKUT FORMAT YANG DITETAPKAN OLEH LHDNM.'  (+1,14) bold
  end-if
  end-if
end-footing

!***********************************************************************
!  Procedure: Init-Report                                              *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Init-Report
  Let $numerics = '0123456789'
  do Stdapi-Init
  do Select-Parameters

  move 'GPMYTX06' to $ReportID
  do Get-Language-Codes ! get the current language in which user wants to print the report
  do Init_Report_Translation($ReportID, $curr_language_cd)
  do Append_Report_Translation($ReportID)
  !Gets the strings printed in this report
  do Get_Translat_Info
  do Get-TxYr-End
  let $ReportTitle2 = $ReportTitle2||' '||$Tax_Year
  let $ReportType3_Lbl = $ReportType3_Lbl||' '||$Tax_Year||';'
  let #Row_Nbr = 5
  let #Col_len = 55

  !***********************************************************************
  !  Setup printer and font size                                         *
  !***********************************************************************

    let #StdFont     = 5
    let #StdPntSize  = 8                  !standard text point-size
    let #HdrPntSize  = 10                 !large text point-size
    let #ShdrPntSize = 7                  !Small header point size
    let #LawPntSize  = 6                  !Law text point-size

    let #PntSize12   = 12
    let #PntSize11   = 11
    let #PntSize95   = 9.5
    let #PntSize10   = 10
    let #PntSize9    = 9
    let #PntSize8    = 8

  do Get-Company-Details
  do Get-Reg-Nbr
  do Initialise-Variables
end-procedure

!***********************************************************************
! Procedure: Select-Parameters                                         *
!            Retrieves Run Control data for report parameters needed   *
!            for Malaysian Inland Revenue Reporting.                   *
!***********************************************************************
begin-procedure Select-Parameters

begin-SELECT
MYS.GPMY_ORG_LINK_OPTN
MYS.ORG_LINK_UNIT
MYS.GPMY_TAX_NBR
MYS.GPMY_CONTRIB_YEAR

FROM PS_GPMY_RPT_RC MYS
WHERE MYS.OPRID = $Prcs_OprID
AND MYS.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SELECT

  let $ORG_LINK_OPTN         =  rtrim(&MYS.GPMY_ORG_LINK_OPTN, ' ')
  let $ORG_LINK_UNIT         =  &MYS.ORG_LINK_UNIT
  let $Org_Clause = ' '

  if rtrim($ORG_LINK_UNIT,' ') = ''
           let $ORG_LINK_UNIT ='%'
           let $Org_Clause ='AND TAX1.ORG_LINK_UNIT LIKE ''' ||$ORG_LINK_UNIT||''''
  else
           let $Org_Clause ='AND TAX1.ORG_LINK_UNIT = '''||$ORG_LINK_UNIT||''''
  end-if
  let $GPMY_TAX_NBR  =  &MYS.GPMY_TAX_NBR
  let $Tax_Clause = ' '
    if rtrim($GPMY_TAX_NBR,' ') = ''
           let $GPMY_TAX_NBR = '%'
           let $Tax_Clause = 'AND TAX1.GPMY_TAX_NBR LIKE ''' ||$GPMY_TAX_NBR||''''
    else
           let $Tax_Clause = 'AND TAX1.GPMY_TAX_NBR = '''||$GPMY_TAX_NBR||''''
  end-if

    let $Company = rtrim(&MYS.ORG_LINK_UNIT,' ')
  move &MYS.GPMY_CONTRIB_YEAR   to #Tax_Year


end-procedure

!***********************************************************************
! Procedure: Get-TxYr-End                                              *
!            Get the tax year end                                      *
!                                                                      *
!***********************************************************************
begin-procedure Get-TxYr-End


  do Format-Number(#Tax_Year,$Tax_Year,'9999')

  let $Tax_Yr_End   = '31/12/'|| $Tax_Year
  do Format-DateTime($Tax_Yr_End,$Tax_Yr_End,{DEFDMY},'','native')

  let $Tax_Yr_Start = '01/01/'|| $Tax_Year
  do Format-DateTime($Tax_Yr_Start,$Tax_Yr_Start,{DEFDMY},'','native')

end-procedure

!***********************************************************************
! Procedure: Main                                                      *
!            The main driving procedure                                *
!                                                                      *
!***********************************************************************
begin-Procedure Main

begin-SELECT DISTINCT

TAX1.GPMY_TAX_NBR

    let   $E_File_Nbr =  &TAX1.GPMY_TAX_NBR
    do ProcessTaxNumber

FROM PS_GPMY_TAX_ORG_VW TAX1
WHERE TAX1.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
  !AND TAX1.ORG_LINK_UNIT LIKE $ORG_LINK_UNIT
  !AND TAX1.GPMY_TAX_NBR LIKE $GPMY_TAX_NBR
  [$Org_Clause]
  [$Tax_Clause]
  AND TAX1.EFFDT <= $Tax_Yr_End

end-SELECT

end-procedure
!***********************************************************************
! Procedure: ProcessTaxNumber                                          *
!            Process for each tax number                               *
!                                                                      *
!***********************************************************************
begin-Procedure ProcessTaxNumber

  do Get-Company-Details
  do Get-Reg-Nbr
  do Initialise-Variables
  do Employer_EFilling
  do Get-FirstTime-Empls
  do print-Values-from-array

end-procedure

!***********************************************************************
! Procedure: Get-Company-Details                                       *
!            Gets the Company Details that are reported on the form.   *
!***********************************************************************
begin-procedure Get-Company-Details

begin-SELECT
C.GPMY_REGISTERED_NM
C.COUNTRY
C.ADDRESS1
C.ADDRESS2
C.ADDRESS3
C.ADDRESS4
C.CITY
C.NUM1
C.NUM2
C.HOUSE_TYPE
C.ADDR_FIELD1
C.ADDR_FIELD2
C.ADDR_FIELD3
C.COUNTY
C.STATE
C.POSTAL
C.GEO_CODE
C.IN_CITY_LIMIT


FROM PS_GPMY_TAX_TBL C
WHERE C.GPMY_TAX_NBR = $E_File_Nbr
AND C.EFF_STATUS = 'A'
AND C.EFFDT = (SELECT MAX(C1.EFFDT)
               FROM PS_GPMY_TAX_TBL C1
               WHERE C1.GPMY_TAX_NBR = C.GPMY_TAX_NBR
               AND C1.EFFDT <= $Tax_Yr_End)
end-SELECT


      let $COUNTRY  = &C.COUNTRY
      let $ADDRESS1 = &C.ADDRESS1
      let $ADDRESS2 = &C.ADDRESS2
      let $ADDRESS3 = &C.ADDRESS3
      let $ADDRESS4 = &C.ADDRESS4
      let $HOUSE_TYPE = &C.HOUSE_TYPE
      let $ADDR_FIELD1 = &C.ADDR_FIELD1
      let $ADDR_FIELD2 = &C.ADDR_FIELD2
      let $ADDR_FIELD3 = &C.ADDR_FIELD3
      let $NUM1 = &C.NUM1
      let $NUM2 = &C.NUM1
      let $CITY = &C.CITY
      let $STATE =&C.STATE
      let $POSTAL = &C.POSTAL
      let $COUNTY = &C.COUNTY
      let $GEO_CODE = &C.GEO_CODE
      let $IN_CITY_LIMIT = &C.IN_CITY_LIMIT

      do ADFORMAT                ! Formats the address based on Country

      let $Address1 = $ADDLINE2
      let $Address2 = $ADDLINE3
      let $Address3 = $ADDLINE31
      let $Address4 = $ADDLINE4
      let $Address5 = $ADDLINE5


      let $Registered_Name = rtrim(&C.GPMY_REGISTERED_NM,' ')
          IF LENGTH($Registered_Name) > 40
           let $Registered_Name2 = SUBSTR($Registered_Name,41,100)
          END-IF


end-procedure

!***********************************************************************
! Procedure: Get-Reg-Nbr                                               *
!            Gets the Refernce Number and Registration Number          *
!             of the  company                                          *
!***********************************************************************

begin-procedure Get-Reg-Nbr

begin-SELECT
CO.CFILE_NBR_MYS
CO.COMPANY_REGNBR_MYS
      
     let $Ref_No = ltrim(rtrim(&CO.CFILE_NBR_MYS, ' '), ' ')
     let $Reg_No = &CO.COMPANY_REGNBR_MYS

FROM PS_COMPANY_TBL_MYS CO, PS_COMPANY_TBL C
WHERE CO.COMPANY = $Company
AND CO.COMPANY = C.COMPANY
AND C.EFF_STATUS = 'A'
AND C.EFFDT = (SELECT MAX(EFFDT)
               FROM PS_COMPANY_TBL C1
               WHERE C1.COMPANY = C.COMPANY)

AND CO.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_COMPANY_TBL_MYS CO1
                WHERE CO1.COMPANY = CO.COMPANY)

end-SELECT

   ! let $ref_temp = $Ref_No
   ! let $Ref_No = substr($Ref_No,0,9)
   ! let $Ref_No = ltrim(rtrim($Ref_No,' '),' ')
   ! let $Ref_No = $Ref_No || '-'
   ! let $Ref_No = ltrim(rtrim($Ref_No,' '),' ')
   ! let $ref_temp2 = substr($ref_temp,10,2)
   ! let $Ref_No = $Ref_No || $ref_temp2
   ! let $Ref_No = ltrim(rtrim($Ref_No,' '),' ')
   ! let $Ref_No = ltrim(rtrim($Ref_No,'-'),'-')


end-procedure

!***********************************************************************
!  Procedure: Initialise-Variables                                     *
!             Initialise variables for use within the program.         *
!***********************************************************************
begin-procedure Initialise-Variables

  let #Serial_No = 0
  let #Unreported_Cnt = 0
  let #Reported_Cnt = 0
  let #Total_Rptd_Earns = 0
  let #Total_UnRptd_Earns = 0
  let #Total_Tax = 0

   let #emp_count = 0
   let #geti = 0

   let #TOTAL_Earns_Bal = 0
   let #TOTAL_TAX_EXEMPT = 0
   let #TOTAL_Tax_Bal = 0
   let #TOTAL_CP38_YTD = 0
   
   let #len_ENo = 10
   let #len_Emplr = 80
   let #len_taxyear = 4
   let #len_emply = 60
   let #len_incmtxno = 11
   let #len_iCard = 12
   let #len_gross = 11
   let #len_exemp = 11
   let #len_MTD = 11
   let #len_CP38 = 11
   let #len_empcat = 1
   let #len_erTaxB = 1
   let #len_chcnt = 2
   let #len_chRelf = 7
   let #len_bik = 11
   let #len_livacm = 11
   let #len_ESOS = 11
   let #len_TP1Relf = 11
   let #len_TP1Zakat = 11
   let #len_EEPF = 6
   let #len_zakat = 11
   
   let $err_notdigit = ' The value expected is a number'
   let $err_exceed1 = ' The value exceeds '
   let $err_exceed2 = ' digits'
   let $err_amount = ' or the value has sen'
end-procedure



!***********************************************************************
!  Procedure: Get-FirstTime-Empls                                      *
!             Select the employees who are being reported for the first*
!             time on the E-Form.                                      *
!***********************************************************************
begin-procedure Get-FirstTime-Empls
Let $check = 'P'
do OpenFilePath   !***Process to open file for Text file generation

let #row =3 
begin-SELECT DISTINCT
JOB2.EMPLID
E.NAME

   move &JOB2.EMPLID to $Emplid
      
   !Employee Share Option Scheme details are not maintained in system and hence the vaariable is set to 0
   Let #ESOS_Benf  = 0
   
   !Total Claim on Payment of Zakat by Employee via TP1 is not maintained in system and hence the variable is set to 0
   Let #Tot_ZakatRelief = 0 
   
   Let #Maximum_Deps1 = 100  !TAX VR MAX DEP
   Let #Maximum_Deps2 = 20   ! MAXIMUM no of chidlren if payscale is defined 
   Let $Tax_VR_Method = 'F'  ! TAX VR METHOD VARIABLE

   let $EELegalName = ''
   do Get-Legal-Name

   IF $EELegalName = '' or $EELegalName = ' '
     move &E.NAME to $Name
   ELSE
     move $EELegalName to $Name
   END-IF

    do Get-Nid-No

    if $Identity_Nbr = ''
        do get-Passport-Nbr
    end-if
    
    do Get-Child-Count

    do Get-FormE-Value
    do CHECK-YTD
    
    do Get_Addl_Dtls
    do Get_Addl_Dtls_NoUsrKey
    do Get_Tax_Category
    
    Let #Total_child_relief = #dep_no_flat * 2000
    
    If (#Tot_Chld_Relf = 0)
    Let #ChildCnt = 0
    Else
       If  #Total_child_relief <> #Tot_Chld_Relf
        !show 'Mismatch in no of children for Tax Releif for employee = ' $Emplid #Tot_Chld_Relf
        !show 'Total_child_relief=' #Total_child_relief
        !show 'Total no of children=' #ChildCnt
       End-If
    End-If   
    
        

         if $GRS_YTD_FLAG = 'FALSE'
         do Get-Earns-Balance-MTD
         end-if
        if ($GRS_YTD_FLAG = 'TRUE') or
         ($GRS_MTD_FLAG = 'TRUE')
          do Get-Earns-Balance
          do populate-array
        end-if  
         
       
        
FROM PS_GPMY_TAX_PYE D,
     PS_NAMES E,
     PS_JOB JOB2
WHERE  JOB2.EMPLID = D.EMPLID
AND JOB2.EMPL_RCD = (SELECT MAX(JOB20.EMPL_RCD) FROM PS_JOB JOB20
                     WHERE JOB2.EMPLID = JOB20.EMPLID )
AND JOB2.EFFDT = (SELECT MAX(JOB21.EFFDT)
               FROM PS_JOB JOB21
               WHERE JOB2.EMPLID = JOB21.EMPLID
               AND JOB21.EMPL_RCD = JOB2.EMPL_RCD
               AND JOB21.EFFDT <= $Tax_Yr_End)
AND D.EFFDT = (SELECT MAX(D1.EFFDT)
                 FROM PS_GPMY_TAX_PYE D1
                 WHERE D1.EMPLID = D.EMPLID
                 AND D1.EMPL_RCD = D.EMPL_RCD
                 AND D1.GPMY_TAX_NBR = $E_File_Nbr
                 AND D1.EFFDT <= $Tax_Yr_End)
AND D.GPMY_TAX_NBR = $E_File_Nbr
AND E.EMPLID = D.EMPLID
AND E.NAME_TYPE = 'PRI'
AND E.EFFDT=(SELECT MAX(P13.EFFDT) FROM PS_NAMES P13
                                    WHERE P13.EMPLID=E.EMPLID
                                    AND P13.NAME_TYPE = E.NAME_TYPE
                                    AND P13.EFFDT <= $Tax_Yr_End)

ORDER BY E.NAME, JOB2.EMPLID
end-SELECT
close 1
close 3
close 2
end-procedure


!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT) FROM PS_NAMES NAMES1
                                          WHERE NAMES1.EMPLID=NAMES.EMPLID
                                          AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                                          AND NAMES1.EFFDT <= $Tax_Yr_End)
AND NAMES.NAME_TYPE = 'LEG'
end-SELECT

end-procedure




!***********************************************************************
!  Procedure: Get-Nid-No                                               *
!             Select the IC No of the employee employee                *
!***********************************************************************

begin-procedure Get-Nid-No
let $National_Id_Type = ''
let $PrevNID = ''
let $New_Ic_Nbr = ''
let $Old_IC_Nbr = ''
let $Identity_Nbr = ''
begin-SELECT
PER.EMPLID
PER.NATIONAL_ID  &ICNbr
PER.NATIONAL_ID_TYPE &National_Id_Type

     move &National_Id_Type to $National_Id_Type
     let $National_Id_Type = rtrim($National_Id_Type,' ')
     let $National_Id_Type = ltrim($National_Id_Type,' ')
     let $ICNbr = ltrim(rtrim(&ICNbr,' '),' ')
     if $National_Id_Type = 'NEWIC'
        let $New_Ic_Nbr = $ICNbr
        let $PrevNID = $National_Id_Type
     end-if
     if $National_Id_Type= 'OLDIC' and $PrevNID <> 'NEWIC'
        let $Old_IC_Nbr = $ICNbr
     end-if

FROM PS_PERS_NID PER
WHERE PER.EMPLID= $Emplid

end-SELECT

if $New_Ic_Nbr <> ''
   let $Identity_Nbr = $New_Ic_Nbr
else
  if $Old_IC_Nbr <> ''
     let $Identity_Nbr = $Old_IC_Nbr
  end-if
end-if

end-procedure


!***********************************************************************
!  Procedure: Get-FormE-Value                                          *
!             Select the form E value to determine whether the employee*
!             has been previously reported or not.                     *
!***********************************************************************
begin-procedure Get-FormE-Value


   let #FormE = 0
   let $ItFileNbr = ''
begin-SELECT
PYE.GPMY_TAX_FORME_YR
PYE.GPMY_EMPL_TAX_NBR
   move &PYE.GPMY_TAX_FORME_YR to #FormE
   move &PYE.GPMY_EMPL_TAX_NBR to $ItFileNbr

FROM PS_GPMY_TAX_PYE PYE
WHERE PYE.EMPLID = $Emplid
AND PYE.GPMY_TAX_NBR = $E_File_Nbr
AND PYE.EFFDT = (SELECT MAX(PYE1.EFFDT)
                FROM PS_GPMY_TAX_PYE PYE1
                WHERE PYE1.EMPLID = PYE.EMPLID
                AND PYE1.GPMY_TAX_NBR = $E_File_Nbr
                AND PYE1.EFFDT <= $Tax_Yr_End)
end-SELECT

end-procedure

!***********************************************************************
!  Procedure: Check-Start-Date                                         *
!             Checks for the existance of at least one unterminated job*
!             for the employee within the same company.                *
!***********************************************************************
begin-procedure Check-Start-Date

   let $Empl_Active = 'N'

begin-SELECT
'X'
   let $Empl_Active = 'Y'

FROM PS_EMPLOYMENT
WHERE EMPLID = $Emplid
AND EMPL_RCD = #Occurrence
AND HIRE_DT <= $Tax_Yr_End
AND TERMINATION_DT IS NULL
end-SELECT

end-procedure

!***********************************************************************
!  Procedure: Check-End-Date                                           *
!             Checks to make sure all jobs are terminated for the empl *
!             within the same company.                                 *
!***********************************************************************
begin-procedure Check-End-Date
   let $Empl_Termd = 'N'

begin-SELECT
'Y'
 let $Empl_Termd = 'Y'

FROM PS_EMPLOYMENT
WHERE EMPLID = $Emplid
AND EMPL_RCD = #Occurrence
AND HIRE_DT <= $Tax_Yr_End
AND TERMINATION_DT BETWEEN $Tax_Yr_Start AND $Tax_Yr_End
end-SELECT
end-procedure

!***********************************************************************
!  Procedure: Get-Earns-Balance                                        *
!             Gets the employees earnings balances for the tax year    *
!             being reported.                                          *
!***********************************************************************
begin-procedure Get-Earns-Balance
    let #Earns_Bal = 0
    let #Tax_Bal = 0
    let #TAX_TRANS = 0
    let #TRAVEL_TOLL = 0
    let #PARKING_FEES = 0
    let #MEAL_ALLOWANCE = 0
    let #CHILDCARE_ALLOW = 0
    let #MEDICAL_BIK = 0
    let  #GOODS_BIK = 0
    let #SERV_DIS_BIK = 0
    let #MOBILE_BIK = 0
    let #NEW_PC_BIK = 0
    let #BROADBAND_BIK = 0
    let #PERQUISITES = 0
    let #LVE_PSG_BENEFIT = 0
    let #INSUR_FOREIGN = 0
    let #INSURANCE_BIK = 0
    let #SUBSIDIES_BIK = 0
    let #CP38_YTD = 0


begin-SELECT
MP3.GPMY_FLD_NAME
MP3.CALC_RSLT_VAL &Grs_YTD


   move &MP3.GPMY_FLD_NAME to $Report_Fld_name

   if rtrim($Report_Fld_name,' ') = 'GRS_YTD'
          if $Emplid <> $PrevEmplE
             let #Earns_Bal = 0
             move &Grs_YTD to #Earns_Bal
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #Earns_Bal
          end-if


   end-if

   if rtrim($Report_Fld_name,' ') = 'TX_8D_YTD'

          If $Emplid <> $PrevEmplT
             let #Tax_Bal = 0
             move &Grs_YTD to #Tax_Bal
             move $Emplid to $PrevEmplT
          else
             add &Grs_YTD to #Tax_Bal
          end-if


   end-if
!************************************
      if rtrim($Report_Fld_name,' ') = 'TRANSPORT_ALLOW'
          if $Emplid <> $PrevEmplE
             let #TAX_TRANS = 0
             move &Grs_YTD to #TAX_TRANS
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #TAX_TRANS
          end-if


      end-if
   !************************************
     if rtrim($Report_Fld_name,' ') = 'TRAVEL_TOLL'
          if $Emplid <> $PrevEmplE
             let #TRAVEL_TOLL = 0
             move &Grs_YTD to #TRAVEL_TOLL
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #TRAVEL_TOLL
          end-if


      end-if
    !**************************************************

     if rtrim($Report_Fld_name,' ') = 'PARKING_FEES'
          if $Emplid <> $PrevEmplE
             let #PARKING_FEES = 0
             move &Grs_YTD to #PARKING_FEES
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #PARKING_FEES
          end-if


      end-if
    !**************************************************
     if rtrim($Report_Fld_name,' ') = 'MEAL_ALLOWANCE'
          if $Emplid <> $PrevEmplE
             let #MEAL_ALLOWANCE = 0
             move &Grs_YTD to #MEAL_ALLOWANCE
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #MEAL_ALLOWANCE
          end-if


      end-if

    !**************************************************
    if rtrim($Report_Fld_name,' ') = 'CHILDCARE_ALLOW'
          if $Emplid <> $PrevEmplE
             let #CHILDCARE_ALLOW = 0
             move &Grs_YTD to #CHILDCARE_ALLOW
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #CHILDCARE_ALLOW
          end-if


      end-if
    !**************************************************
     if rtrim($Report_Fld_name,' ') = 'MEDICAL_BIK'
          if $Emplid <> $PrevEmplE
             let #MEDICAL_BIK = 0
             move &Grs_YTD to #MEDICAL_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #MEDICAL_BIK
          end-if


      end-if
    !**************************************************
     if rtrim($Report_Fld_name,' ') = 'GOODS_BIK'
          if $Emplid <> $PrevEmplE
             let #GOODS_BIK = 0
             move &Grs_YTD to #GOODS_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #GOODS_BIK
          end-if


      end-if
    !**************************************************
       if rtrim($Report_Fld_name,' ') = 'SERV_DIS_BIK'
          if $Emplid <> $PrevEmplE
             let #SERV_DIS_BIK = 0
             move &Grs_YTD to #SERV_DIS_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #SERV_DIS_BIK
          end-if


      end-if
    !**************************************************
      if rtrim($Report_Fld_name,' ') = 'MOBILE_BIK'
          if $Emplid <> $PrevEmplE
             let #MOBILE_BIK = 0
             move &Grs_YTD to #MOBILE_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #MOBILE_BIK
          end-if


      end-if
    !**************************************************
       if rtrim($Report_Fld_name,' ') = 'NEW_PC_BIK'
          if $Emplid <> $PrevEmplE
             let #NEW_PC_BIK = 0
             move &Grs_YTD to #NEW_PC_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #NEW_PC_BIK
          end-if


      end-if
    !**************************************************
       if rtrim($Report_Fld_name,' ') = 'BROADBAND_BIK'
          if $Emplid <> $PrevEmplE
             let #BROADBAND_BIK = 0
             move &Grs_YTD to #BROADBAND_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #BROADBAND_BIK
          end-if


      end-if
    !**************************************************
       if rtrim($Report_Fld_name,' ') = 'PERQUISITES'
          if $Emplid <> $PrevEmplE
             let #PERQUISITES = 0
             move &Grs_YTD to #PERQUISITES
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #PERQUISITES
          end-if

      end-if
    !**************************************************
    if rtrim($Report_Fld_name,' ') = 'LVE_PSG_BENEFIT'
          if $Emplid <> $PrevEmplE
             let #LVE_PSG_BENEFIT = 0
             move &Grs_YTD to #LVE_PSG_BENEFIT
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #LVE_PSG_BENEFIT
          end-if


      end-if
    !**************************************************
     if rtrim($Report_Fld_name,' ') = 'INSUR_FOREIGN'
          if $Emplid <> $PrevEmplE
             let #INSUR_FOREIGN = 0
             move &Grs_YTD to #INSUR_FOREIGN
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #INSUR_FOREIGN
          end-if


      end-if
    !**************************************************
     if rtrim($Report_Fld_name,' ') = 'INSURANCE_BIK'
          if $Emplid <> $PrevEmplE
             let #INSURANCE_BIK = 0
             move &Grs_YTD to #INSURANCE_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #INSURANCE_BIK
          end-if


      end-if
    !**************************************************
      if rtrim($Report_Fld_name,' ') =  'SUBSIDIES_BIK'
          if $Emplid <> $PrevEmplE
             let #SUBSIDIES_BIK = 0
             move &Grs_YTD to #SUBSIDIES_BIK
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #SUBSIDIES_BIK
          end-if


      end-if
    !**************************************************
  let #TAX_EXEMPT  = #TAX_TRANS + #TRAVEL_TOLL + #PARKING_FEES +
                     #MEAL_ALLOWANCE + #CHILDCARE_ALLOW + #MEDICAL_BIK + #GOODS_BIK +
                     #SERV_DIS_BIK + #MOBILE_BIK + #NEW_PC_BIK + #BROADBAND_BIK +
                     #PERQUISITES + #LVE_PSG_BENEFIT + #INSUR_FOREIGN + #INSURANCE_BIK + #SUBSIDIES_BIK

     if rtrim($Report_Fld_name,' ') =  'CP38_YTD'
          if $Emplid <> $PrevEmplE
             let #CP38_YTD = 0
             move &Grs_YTD to #CP38_YTD
             move $Emplid to $PrevEmplE
          else
             add &Grs_YTD to #CP38_YTD
          end-if


      end-if


FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP
WHERE  MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP3.EMPLID = MP.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP3.EMPLID = $Emplid

AND MP.PRC_ORD_TS=(SELECT MAX(TMP1.PRC_ORD_TS)
                        FROM PS_GPMY_PY_TMP TMP1
                        WHERE TMP1.PROCESS_INSTANCE=MP.PROCESS_INSTANCE
                        AND TMP1.EMPLID=MP.EMPLID
                        AND TMP1.EMPL_RCD = MP.EMPL_RCD
                        AND TMP1.GP_GENRPT_BREAK1 =$E_File_Nbr  )

 AND MP.RSLT_SEG_NUM = (SELECT MAX(MP6.RSLT_SEG_NUM)
                        FROM PS_GPMY_PY_TMP MP6
                        WHERE MP6.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
                        AND MP6.EMPLID = MP.EMPLID
                        AND MP6.CAL_RUN_ID = MP.CAL_RUN_ID
                        AND MP6.EMPL_RCD = MP.EMPL_RCD
                        AND MP6.CAL_ID = MP.CAL_ID
                        AND MP6.GP_GENRPT_BREAK1 = $E_File_Nbr
                      )
AND MP.SLICE_END_DT = (Select Max(TMP3.SLICE_END_DT) FROM PS_GPMY_PY_TMP TMP3
                        where
                        TMP3. PROCESS_INSTANCE = MP.PROCESS_INSTANCE
                        AND TMP3.EMPLID = MP.EMPLID
                        AND TMP3.EMPL_RCD = MP.EMPL_RCD
                        AND TMP3.GP_PAYGROUP = MP.GP_PAYGROUP
                        AND TMP3.CAL_RUN_ID = MP.CAL_RUN_ID
                        AND TMP3.CAL_ID = MP.CAL_ID
                        AND TMP3.GP_GENRPT_BREAK1 =$E_File_Nbr
                        )
AND MP3.USER_KEY1 = $E_File_Nbr
AND MP.GP_GENRPT_BREAK1 = $E_File_Nbr

GROUP BY MP3.GPMY_FLD_NAME, MP3.CALC_RSLT_VAL
end-SELECT

end-procedure



!***********************************************************************
!  Procedure: Get-Passport-Nbr                                         *
!             Gets the passport number for those employees without an  *
!             IC number.                                               *
!***********************************************************************
begin-procedure Get-Passport-Nbr
let $Identity_Nbr = ''
begin-SELECT
CP.EMPLID
CP.PASSPORT_NBR
     if &CP.EMPLID <> $PrevEmpl
        move &CP.PASSPORT_NBR to $Identity_Nbr
     end-if

FROM PS_CITIZEN_PSSPRT CP
WHERE CP.EMPLID = $Emplid
AND CP.DEPENDENT_ID = ' '
AND CP.DT_ISSUED <= $Tax_Yr_End
AND CP.EXPIRATN_DT >= $Tax_Yr_End
end-SELECT
end-procedure

!***********************************************************************
!  Procedure: Get-Child-Count                                          *
!             Mimic  TAX FM DEPENDENT logic and gather the data        *
!             required to determine the number of children eligible    *
!             for tax relief                                           *
!***********************************************************************
begin-procedure Get-Child-Count
  let #Adopt_chld_cnt = 0
  let #dis_dep = 0
  let #ChildCnt = 0
  let #Adopt_chld_cnt_flat = 0
  let #dis_dep_flat = 0
  let #dep_no_flat = 0
  

begin-SELECT
D1.BIRTHDATE
D1.DEPENDENT_BENEF
D1.RELATIONSHIP
D1.FULLTM_STUDENT_MYS
D1.DISABLED
D1.MAR_STATUS
D1.FULLTM_STU_OUT_MYS
D1.FULLTM_STDNT_MRT

  move &D1.BIRTHDATE to $BirthDate
  do Convert-to-DTU-Date($BirthDate,$BirthDate)
  do Convert-to-DTU-Date($Tax_Yr_End, $Tax_Yr_Endage)

  do DTU-Diff-Years($BirthDate,$Tax_Yr_Endage,#Age)
    If (&D1.RELATIONSHIP = 'C' OR &D1.RELATIONSHIP = 'RC' OR &D1.RELATIONSHIP = 'FC' OR &D1.RELATIONSHIP = 'SC')
        If  &D1.RELATIONSHIP = 'FC'
          let #Adopt_chld_cnt = #Adopt_chld_cnt + 1
        End-If
        If  &D1.DISABLED = 'Y'
          let #dis_dep = #dis_dep +1
          If (&D1.FULLTM_STUDENT_MYS ='Y' OR  &D1.FULLTM_STU_OUT_MYS = 'Y')
            let #dis_dep_flat = #dis_dep_flat + 7
          ELSE
            let #dis_dep_flat = #dis_dep_flat + 3
          End-If
        Else 
            If &D1.MAR_STATUS = 'S'
                If #Age < 18
                 let #ChildCnt = #ChildCnt +1
                 let #dep_no_flat = #dep_no_flat + 1
                Else
                    If (&D1.FULLTM_STUDENT_MYS ='Y' OR  &D1.FULLTM_STU_OUT_MYS = 'Y') AND #Age > 18
                       let #ChildCnt = #ChildCnt + 1
                       let #dep_no_flat = #dep_no_flat + 4
                    End-If
                    If &D1.FULLTM_STDNT_MRT ='Y' AND #Age > 18
                       let #ChildCnt = #ChildCnt + 1
                       let #dep_no_flat = #dep_no_flat + 1
                    End-If
                    
                End-If    
            End-If 
        End-If  
    End-If
  
  
FROM PS_GPMY_DEP_PYE_VW D1
WHERE D1.EMPLID = $emplid
AND D1.BIRTHDATE <= $Tax_Yr_End

end-SELECT

end-procedure

!***********************************************************************
!  Procedure: Update-FormE                                             *
!             Updates the FORM E field on the EPL_TAX_DTLS_MYS record  *
!             to set it to the current tax year.                       *
!***********************************************************************
begin-procedure Update-FormE

let $sql-statement = 'GPMYTX06.SQR,Update-Record,PS_GPMY_TAX_PYE'


begin-SQL on-error=SQL-Error
UPDATE PS_GPMY_TAX_PYE
SET GPMY_TAX_FORME_YR =  $Tax_Year
WHERE EMPLID = $Emplid
AND GPMY_TAX_NBR = $E_File_Nbr
AND EFFDT   =(SELECT MAX(PYE1.EFFDT)
                FROM PS_GPMY_TAX_PYE PYE1
               WHERE PYE1.EMPLID = $Emplid
              AND PYE1.EFFDT <= $Tax_Yr_End)

end-SQL

end-procedure




!*************************************************************************************
!  Procedure: Get-Earns-Balance                                                      *
!             Gets the employees Month-To-Date earnings balances for the tax year    *
!             being reported.                                                        *
!*************************************************************************************

begin-procedure Get-Earns-Balance-MTD

 let $GRS_MTD_FLAG = 'FALSE'

begin-SELECT
MP4.GPMY_FLD_NAME
MP4.CALC_RSLT_VAL
      let $GRS_MTD_FLAG = 'TRUE'

FROM PS_GPMY_PY_TMP3  MP4,PS_GPMY_PY_TMP MP
WHERE  MP4.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP4.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP4.EMPLID = MP.EMPLID
AND MP4.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP4.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP4.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP4.CAL_ID = MP.CAL_ID
AND MP4.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP4.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP4.EMPLID = $Emplid
AND MP4.USER_KEY1 = $E_File_Nbr
AND MP4.GPMY_FLD_NAME = 'GRS_MTD'
AND MP4.CALC_RSLT_VAL >= 2500
AND MP4.RSLT_SEG_NUM = (SELECT MAX(MP33.RSLT_SEG_NUM) FROM PS_GPMY_PY_TMP3 MP33
                              WHERE MP33.EMPLID = MP4.EMPLID
                                    AND MP33.PROCESS_INSTANCE = (#prcs_process_instance - 1)
                                    AND MP33.GP_PAYGROUP = MP4.GP_PAYGROUP
                                    AND MP33.CAL_RUN_ID=MP4.CAL_RUN_ID
                                    AND MP33.CAL_ID = MP4.CAL_ID )


GROUP BY MP4.GPMY_FLD_NAME, MP4.CALC_RSLT_VAL
end-SELECT

end-procedure

!*************************************************************************************
!  Procedure: CHECK-YTD                                                              *
!             Check if employees Year-To-Date earnings balances for the tax year is  *
!             greater than  RM30,000.                                                *
!*************************************************************************************


Begin-procedure CHECK-YTD

 let $GRS_YTD_FLAG = 'FALSE'

begin-SELECT
MP5.GPMY_FLD_NAME
MP5.CALC_RSLT_VAL
      let $GRS_YTD_FLAG = 'TRUE'

FROM PS_GPMY_PY_TMP3 MP5,PS_GPMY_PY_TMP MP
WHERE  MP5.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP5.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP5.EMPLID = MP.EMPLID
AND MP5.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP5.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP5.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP5.CAL_ID = MP.CAL_ID
AND MP5.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP5.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP5.EMPLID = $Emplid
AND MP5.USER_KEY1 = $E_File_Nbr
AND MP5.GPMY_FLD_NAME = 'GRS_YTD'
AND MP5.CALC_RSLT_VAL >= 30000
AND MP5.RSLT_SEG_NUM = (SELECT MAX(MP33.RSLT_SEG_NUM) FROM PS_GPMY_PY_TMP3 MP33
                              WHERE MP33.EMPLID = MP5.EMPLID
                                    AND MP33.PROCESS_INSTANCE = (#prcs_process_instance - 1)
                                    AND MP33.GP_PAYGROUP = MP5.GP_PAYGROUP
                                    AND MP33.CAL_RUN_ID=MP5.CAL_RUN_ID
                                    AND MP33.CAL_ID = MP5.CAL_ID )
AND MP.PRC_ORD_TS= (SELECT MAX(PRC_ORD_TS)
                        FROM PS_GPMY_PY_TMP
                        WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
                        AND EMPLID=MP.EMPLID )



GROUP BY MP5.GPMY_FLD_NAME, MP5.CALC_RSLT_VAL
end-SELECT
end-procedure

!*************************************************************************************
!  Procedure: Get_Addl_Dtls                                                *
!             Get additional details required as part of legislative changes 2016
!             Additional details are fetched in similar manner as that of Form 8A
!*************************************************************************************
begin-procedure Get_Addl_Dtls
Let #Liv_Accom = 0
Let #Tot_TP1Relief = 0
Let #BIK = 0
Let #ER_TaxBorne  = 2 


let $ADDL_DTLS_FLAG = 'FALSE'

begin-SELECT
MP6.GPMY_FLD_NAME
MP6.CALC_RSLT_VAL

   let $ADDL_DTLS_FLAG = 'TRUE'
   
   if rtrim(&MP6.GPMY_FLD_NAME,' ')='ER_PAID_TAX_YTD'
      Let #ER_TaxBorne  = 1
   else
        
      
  end-if 

   if rtrim(&MP6.GPMY_FLD_NAME,' ')='ACCOM_YTD'
      Let #Liv_Accom  = &MP6.CALC_RSLT_VAL
  end-if 
  
  
   if rtrim(&MP6.GPMY_FLD_NAME,' ')='ACUM_RELIEF'
      Let #Tot_TP1Relief  = &MP6.CALC_RSLT_VAL
  end-if 

   if rtrim(&MP6.GPMY_FLD_NAME,' ')='CAR_BIK_CP8A'
      Let #BIK =#BIK + &MP6.CALC_RSLT_VAL
    end-if 
  
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='DRIVER_YTD'
      Let #BIK =#BIK + &MP6.CALC_RSLT_VAL
    end-if 

    if rtrim(&MP6.GPMY_FLD_NAME,' ')='FULLY_FURN_YTD'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if  
    
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='GARDENER_BIK'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if 
    
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='SEMI_FURN_YTD'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if 
    
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='SERV_UTIL_BIK'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if 
    
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='FURN_FACILITY'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if 
    
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='KITCHENWARE'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if 
     
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='RECREAT_BIK'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if   
      
      
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='HOLIDAY_BIK'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if   
      
    if rtrim(&MP6.GPMY_FLD_NAME,' ')='OTHER_BIK_CP8A'
      Let #BIK =#BIK+ &MP6.CALC_RSLT_VAL
    end-if
    

      
FROM PS_GPMY_PY_TMP3  MP6,PS_GPMY_PY_TMP MP
WHERE  MP6.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP6.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP6.EMPLID = MP.EMPLID
AND MP6.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP6.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP6.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP6.CAL_ID = MP.CAL_ID
AND MP6.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP6.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP6.EMPLID = $Emplid
AND MP6.USER_KEY1 = $E_File_Nbr
AND MP6.RSLT_SEG_NUM = (SELECT MAX(MP33.RSLT_SEG_NUM) FROM PS_GPMY_PY_TMP3 MP33
                              WHERE MP33.EMPLID = MP6.EMPLID
                                    AND MP33.PROCESS_INSTANCE = (#prcs_process_instance - 1)
                                    AND MP33.GP_PAYGROUP = MP6.GP_PAYGROUP
                                    AND MP33.CAL_RUN_ID=MP6.CAL_RUN_ID
                                    AND MP33.CAL_ID = MP6.CAL_ID )
AND MP.PRC_ORD_TS= (SELECT MAX(PRC_ORD_TS)
                        FROM PS_GPMY_PY_TMP
                        WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
                        AND EMPLID=MP.EMPLID )                                  


GROUP BY MP6.GPMY_FLD_NAME, MP6.CALC_RSLT_VAL
end-SELECT
end-procedure

!*************************************************************************************
!  Procedure: Get_Addl_Dtls_NoUsrKey                                              *
!             Get additional details required as part of legislative changes 2016
!             Additional details are fetched in similar manner as that of Form 8A
!             This procedure fetches the values for elements which doesn't have any USER_KEY
!             ZAKAT_YTD, CLM_TX_DED_CHLD
!*************************************************************************************
begin-procedure Get_Addl_Dtls_NoUsrKey

Let #Tot_Chld_Relf = 0 
Let #Zakat_paid = 0
Let #Prov_Fund  = 0
Let $ADDL_DTLS_NKey = 'FALSE'


begin-SELECT
MP8.GPMY_FLD_NAME
MP8.CALC_RSLT_VAL

   Let $ADDL_DTLS_NKey = 'TRUE'

   if rtrim(&MP8.GPMY_FLD_NAME,' ')='CLM_TX_DED_CHLD'
     Let #Tot_Chld_Relf  = &MP8.CALC_RSLT_VAL
  end-if 
  
  
   if rtrim(&MP8.GPMY_FLD_NAME,' ')='ZAKAT_YTD'
       Let #Zakat_paid  = &MP8.CALC_RSLT_VAL
  end-if 
  
  
   if rtrim(&MP8.GPMY_FLD_NAME,' ')='EPF_COMP_YTD'
      Let #Prov_Fund  = &MP8.CALC_RSLT_VAL
   end-if 
      
FROM PS_GPMY_PY_TMP3  MP8,PS_GPMY_PY_TMP MP
WHERE  MP8.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP8.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP8.EMPLID = MP.EMPLID
AND MP8.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP8.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP8.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP8.CAL_ID = MP.CAL_ID
AND MP8.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP8.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP8.EMPLID = $Emplid
AND MP8.GPMY_FLD_NAME IN ('CLM_TX_DED_CHLD','ZAKAT_YTD','EPF_COMP_YTD')
AND MP8.RSLT_SEG_NUM = (SELECT MAX(MP33.RSLT_SEG_NUM) FROM PS_GPMY_PY_TMP3 MP33
                              WHERE MP33.EMPLID = MP8.EMPLID
                                    AND MP33.PROCESS_INSTANCE = (#prcs_process_instance - 1)
                                    AND MP33.GP_PAYGROUP = MP8.GP_PAYGROUP
                                    AND MP33.CAL_RUN_ID=MP8.CAL_RUN_ID
                                    AND MP33.CAL_ID = MP8.CAL_ID )
AND MP.PRC_ORD_TS= (SELECT MAX(PRC_ORD_TS)
                        FROM PS_GPMY_PY_TMP
                        WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
                        
                      AND EMPLID=MP.EMPLID )
GROUP BY MP8.GPMY_FLD_NAME, MP8.CALC_RSLT_VAL                       
end-SELECT
end-procedure

!*************************************************************************************
!  Procedure: Get_Tax_Category                                                       *
!             1. Get Tax Category for employee                                       *
!             2. Calculate final count of number of children eligible for tax relief * 
!             The procedure  mimics TAX FM CATEGORY formula                          *
!             The procedure also determines the total number of children eligible    *
!             for tax relief using inputs from Get_Child_Count method
!*************************************************************************************
Begin-procedure Get_Tax_Category
Let $MAR_STAT = '' 
Let $RELATIONSHIP = ''
Let #Emp_Category = 0
begin-SELECT
PYE12.GPMY_FM_CATEGORY &xyz
PYE12.GPMY_TAX_WIFE_EMPL &wempl
PYE12.GPMY_NO_DEPENDENTS &deps1
PYE12.GPMY_TAX_SCALE &tscale
PERS1.MAR_STATUS 
PERS1.SEX

    
    Let $MAR_STAT = rtrim(&PERS1.MAR_STATUS,' ')
    !do Get_Relationship_Status
    
    If rtrim(&xyz,' ') <> ''
       Let #Emp_Category = to_number(rtrim(&xyz,' '))
    Else
    If $MAR_STAT <> ''
     evaluate $MAR_STAT
      when = 'S'
        Let #Emp_Category = 1
        If #Adopt_chld_cnt >= 1
          Let #Emp_Category = 3
        End-if
      Break

      When = 'D'
      When = 'W'
         Let #Emp_Category = 3
      Break

      when-other
        If &wempl = 'Y'
          Let #Emp_Category = 3
        Else
           Let #Emp_Category = 2
        End-If  
      Break
      End-evaluate    
    End-If 
    End-If
    
FROM PS_GPMY_TAX_PYE PYE12, PS_PERS_DATA_EFFDT PERS1
WHERE PYE12.EMPLID = $Emplid
AND PYE12.GPMY_TAX_NBR = $E_File_Nbr
AND PYE12.EMPL_RCD = (SELECT MAX(PYE7.EMPL_RCD)
                    FROM  PS_GPMY_TAX_PYE PYE7
                    WHERE PYE7.EMPLID = PYE12.EMPLID    
                    AND PYE7.GPMY_TAX_NBR = PYE12.GPMY_TAX_NBR )
AND PYE12.EFFDT = (SELECT MAX(PYE2.EFFDT)
                FROM PS_GPMY_TAX_PYE PYE2
                WHERE PYE2.EMPLID = PYE12.EMPLID
                AND PYE2.GPMY_TAX_NBR = PYE12.GPMY_TAX_NBR
                AND PYE2.EFFDT <= $Tax_Yr_End
                AND PYE2.EMPL_RCD = PYE12.EMPL_RCD)
AND PERS1.EMPLID = PYE12.EMPLID             
AND PERS1.EFFDT = (SELECT MAX(PERS2.EFFDT)
                FROM PS_PERS_DATA_EFFDT PERS2
                WHERE PERS2.EMPLID = PERS1.EMPLID
                AND  PERS2.EFFDT <= $Tax_Yr_End)

                
end-SELECT

! Determine number of children eligible for tax relief 

    If ( $Tax_VR_Method = 'F' )
      If #Emp_Category != 1
        If ( rtrim(&xyz,' ') <> '1' and  rtrim(&xyz,' ') <> '')
            Let #ChildCnt = &deps1
               Let #dep_no_flat = &deps1
        Else
            Let #ChildCnt = #dis_dep + #ChildCnt
            Let #dep_no_flat = #dis_dep_flat + #dep_no_flat
            If (#dep_no_flat > #Maximum_Deps1)
               Let #dep_no_flat = #Maximum_Deps1
            End-If              
        End-If
      End-If    
    Else
        If ( rtrim(&tscale,' ')) = ''
            Let #ChildCnt = #dis_dep + #ChildCnt
            Let #dep_no_flat = #dis_dep_flat + #dep_no_flat
            If (#dep_no_flat > #Maximum_Deps2)
               Let #dep_no_flat = #Maximum_Deps2
            End-If
        End-If  
    End-If
end-procedure

!*************************************************************************************
!  Procedure: Get_Relationship_status                                               *
!             This is alternative method to find out tax category for employee 
!             if its already not se on TAx Data Page
!*************************************************************************************
Begin-procedure Get_Relationship_Status

Let $RELATIONSHIP = ''
begin-SELECT
DPV1.RELATIONSHIP

   Let $RELATIONSHIP = &DPV1.RELATIONSHIP

FROM PS_GPMY_DEP_PYE_VW DPV1
     WHERE DPV1.EMPLID = $Emplid
     AND DPV1.BIRTHDATE <= $Tax_Yr_End
     AND DPV1.RELATIONSHIP ='FC'

end-SELECT

end-procedure



!*************************************************************************************
!  Procedure: populate-array                                                         *
!             Populating values into the array                                       *
!*************************************************************************************


Begin-procedure populate-array

     let #Serial_No = #Serial_No + 1

    put #Serial_No
        $name
        $ItFileNbr
        $Identity_Nbr
        #Earns_Bal
        #TAX_EXEMPT
        #Tax_Bal
        #CP38_YTD
        into EMPLOYEES (#emp_count) Serial_No Name ItFileNbr Identity_Nbr Earns_YTD TAX_EXEMPT Tax_Bal CP38_YTD
        
        

       add 1 to #emp_count
          
          do EFilePrinting_Employee
end-procedure !populate-array


!*************************************************************************************
!  Procedure: print-Values-from-array                                                *
!             printing values from the array                                         *
!*************************************************************************************


begin-procedure print-Values-from-array
let #getj = 23
let $emp_count_flag = 'TRUE'

    let #Row_Nbr = 1
   IF $curr_language_cd = 'ENG'
     graphic () font :#StdFont :#PntSize10
     add 1 to #Row_Nbr
     print 'An employer is required to fill in this section if there is any employee whose annual gross remuneration is'  (#Row_Nbr,7)
     print  $ReportTitle5  (#Row_Nbr,106,)  bold
     add 1 to #Row_Nbr
     print $ReportTitle6 (#Row_Nbr,7)  bold
     print 'OR  any employee whose annual gross remuneration is less than  RM30,000  but the monthly gross remuneration is '   (#Row_Nbr,14)
     add 1 to #Row_Nbr
     print $ReportTitle7      (#Row_Nbr,7) bold
     print $ReportTitle8      (#Row_Nbr,29)
     print $ReportTitle8_1    (#Row_Nbr,47) bold
     print $ReportTitle8_2    (#Row_Nbr,61)
     print $ReportTitle9      (#Row_Nbr,111)
     add 1 to #Row_Nbr
     print $ReportTitle10     (#Row_Nbr,7)
        let $Tax_Year = rtrim(ltrim($Tax_Year, ' '), ' ')
        print $Tax_Year          (#Row_Nbr,24)
        print  '.'          (#Row_Nbr,29) bold
    else

     graphic () font :#StdFont :#PntSize10
     add 1 to #Row_Nbr
     print 'Majikan dikehendaki mengisi Bahagian ini jika terdapat pekerja yang jumlah saraan kasar tahunan sebanyak '  (#Row_Nbr,6)
     print 'RM30,000 dan ke '  (#Row_Nbr,107) bold
     add 1 to #Row_Nbr
     print 'atas' (#Row_Nbr,6) bold
     print 'ATAU bagi pekerja yang jumlah saraan kasar tahunan kurang daripada RM30,000 tetapi  saraan kasar bulanan adalah' (#Row_Nbr,11)
     add 1 to #Row_Nbr
     print 'RM 2,500 dan ke atas '   (#Row_Nbr,6) bold
     print '(termasuk bonus tetapi ' (#Row_Nbr,29)
     print 'tidak termasuk ' (#Row_Nbr,51) bold
     print 'tunggakan saraan kasar tahun-tahun terdahulu) bagi ' (#Row_Nbr,67)
     add 1 to #Row_Nbr
     print 'mana-mana bulan dalam tahun' (#Row_Nbr,6)
     let $Tax_Year = rtrim(ltrim($Tax_Year, ' '), ' ')
     print $Tax_Year          (#Row_Nbr,35)
     print  '.'          (#Row_Nbr,40) bold

    End-if
     !*****************************************************
       do First-Page-Header

     !****************************************************

while #geti <= #emp_count

GET #Serial_No
    $name
    $ItFileNbr
    from EMPLOYEES (#geti)

     graphic () font :#StdFont :#StdPntSize

    if #Serial_No <> 0
      print #Serial_No            (#Row_Nbr,8)  edit 9999
    end-if
      print $name  (,20)
      print $ItFileNbr  (, 100)


    if #geti = #emp_count
     do  Onetime-employees-other-details
    end-if

       !greater than 23
     if #geti = #getj  and  $emp_count_flag = 'TRUE'
      do employees-other-details
       let #geti = #geti - 1
       let #Row_Nbr = #Row_Nbr - 2
     end-if

    if $emp_count_flag = 'FALSE' !or #geti = #emp_count
     graphic                     (67, 6, 119) horz-line
     graphic (68,6,24) box 1 0 25
     IF $curr_language_cd = 'ENG'
     Print $Total_Lbl  (68,13) BOLD
     Else
     Print 'JUMLAH'  (68,13) BOLD
     end-if
     print #TOTAL_Earns_Bal (,35)
     print #TOTAL_TAX_EXEMPT (,60)
     print #TOTAL_Tax_Bal (,88)
     print #TOTAL_CP38_YTD (,110)

    end-if

     add 2 to #Row_Nbr
     add 1 to #geti

end-while

end-procedure


!*******************************************************************************************
!  Procedure: employees-other-details                                                      *
!             printing employees details in different page in case of emp counting  > 23   *
!*******************************************************************************************

begin-procedure employees-other-details

let #Row_Nbr = 5
let #geti = #getj - 23

new-page
!*****************************
 do Second-Page-Header
!*****************************

while #geti <= #getj

GET #Serial_No
    $name
    $ItFileNbr
    $Identity_Nbr
    #Earns_Bal
    #TAX_EXEMPT
    #Tax_Bal
    #CP38_YTD
    from EMPLOYEES (#geti)

    print $Identity_Nbr (#Row_Nbr,7)
     if  #Earns_Bal <> 0
    print #Earns_Bal  (,35) edit 9,999,999.99
    print #TAX_EXEMPT (,55) edit 9,999,999.99
    print #Tax_Bal (,85) edit 9,999,999.99
    print #CP38_YTD (,100) edit 9,999,999.99
     end-if
   add 2 to #Row_Nbr
   add 1 to #geti

   let #TOTAL_Earns_Bal = #TOTAL_Earns_Bal + #Earns_Bal
   let #TOTAL_TAX_EXEMPT = #TOTAL_TAX_EXEMPT + #TAX_EXEMPT
   let #TOTAL_Tax_Bal = #TOTAL_Tax_Bal + #Tax_Bal
   let #TOTAL_CP38_YTD = #TOTAL_CP38_YTD + #CP38_YTD

end-while

 let #getj = #getj + 24

 if #emp_count <> #geti
    new-page
   do First-Page-Header
 end-if

end-procedure

!*******************************************************************************************
!  Procedure: Onetime-employees-other-details                                              *
!             printing employees details in different page in case of emp counting  < 23   *
!*******************************************************************************************


begin-procedure Onetime-employees-other-details

let #geti = #getj - 23
let #Row_Nbr = 5
new-page

!*****************************
 do Second-Page-Header
!*****************************

while #geti <= #emp_count

GET #Serial_No
    $name
    $ItFileNbr
    $Identity_Nbr
    #Earns_Bal
    #TAX_EXEMPT
    #Tax_Bal
    #CP38_YTD
   from EMPLOYEES (#geti)

   print $Identity_Nbr (#Row_Nbr,7)
   if #Earns_Bal <> 0
    print #Earns_Bal  (,35) edit 9,999,999.99
    print #TAX_EXEMPT (,55) edit 9,999,999.99
    print #Tax_Bal (,85) edit 9,999,999.99
    print #CP38_YTD (,100) edit 9,999,999.99
     end-if

   let #TOTAL_Earns_Bal = #TOTAL_Earns_Bal + #Earns_Bal
   let #TOTAL_TAX_EXEMPT = #TOTAL_TAX_EXEMPT + #TAX_EXEMPT
   let #TOTAL_Tax_Bal = #TOTAL_Tax_Bal + #Tax_Bal
   let #TOTAL_CP38_YTD = #TOTAL_CP38_YTD + #CP38_YTD

   add 2 to #Row_Nbr
   add 1 to #geti

end-while


let $emp_count_flag = 'FALSE'

end-procedure

!*******************************************************************************************
!  Procedure: First-Page-Header                                                            *
!             printing employees details in First page                                     *
!*******************************************************************************************

Begin-Procedure First-Page-Header


            let #Row_Nbr = 5
            let #Col_len = 63
          graphic                     (#Row_Nbr, 6,119) horz-line
          graphic                     (#Row_Nbr, 6,#Col_len) vert-line
          graphic                     (, 15, #Col_len) vert-line
          graphic                     (, 97, #Col_len) vert-line
          graphic                     (, 125, #Col_len) vert-line
          add 2 to #Row_Nbr
           graphic () font 4 :#HdrPntSize
             print 'A'   (#Row_Nbr,10) bold
             print 'B'   (#Row_Nbr, 60) bold
             print 'C'   (#Row_Nbr, 110) bold
             add 2 to #Row_Nbr
          graphic                     (#Row_Nbr, 6,119) horz-line

          add 4 to #Row_Nbr
          graphic () font :#StdFont :#StdPntSize

         IF $curr_language_cd = 'ENG'

          print $ReportNo (#Row_Nbr,10)
          print $ReportNameEmp   (#Row_Nbr, 50)
          print $ReportTaxRefNo (#Row_Nbr, 103)
         else
         graphic () font :#StdFont :#PntSize95
          print 'Bil.' (#Row_Nbr,10)
          print 'Nama Pekerja' (#Row_Nbr, 50)
          print 'No. Rujukan' (#Row_Nbr, 103)
         end-if

          add 4 to #Row_Nbr
          graphic                     (#Row_Nbr, 6,119) horz-line
          graphic                     (68, 6, 119) horz-line


     let #Row_Nbr = 19

end-Procedure

!*******************************************************************************************
!  Procedure: Second-Page-Header                                                           *
!             printing employees details in second page                                    *
!*******************************************************************************************
Begin-Procedure Second-Page-Header

!*****************************
               let #Row_Nbr =  5
               let #Col_len = 63
          graphic                     (#Row_Nbr, 6,119) horz-line
          graphic                    (#Row_Nbr, 6,#Col_len) vert-line
          graphic                     (#Row_Nbr, 30,#Col_len) vert-line
          graphic                     (, 54, #Col_len) vert-line
          graphic                     (, 78, #Col_len) vert-line
          graphic                     (, 102, 4) vert-line
          graphic                     (, 125, #Col_len) vert-line
             add 2 to #Row_Nbr
             graphic () font 4 :#HdrPntSize
             print 'D'   (#Row_Nbr,15) bold
             print 'E'   (#Row_Nbr, 38) bold
             print 'F'   (#Row_Nbr, 63) bold
             print 'G'   (#Row_Nbr,84) bold
             print 'H'   (#Row_Nbr, 108) bold
           add 2 to #Row_Nbr
           graphic                     (#Row_Nbr, 6,119) horz-line
           graphic () font :#StdFont :#StdPntSize

           add 1 to #Row_Nbr

           IF $curr_language_cd = 'ENG'
              print  $Tot_Gross_Rem_Lbl  (#Row_Nbr,31)
           else
            graphic () font :#StdFont :#PntSize95
             print 'Jumlah Saraan Kasar'       (#Row_Nbr,31)
           end-if

           add 1 to #Row_Nbr

           IF $curr_language_cd = 'ENG'
            print $Include_Ben_Lbl   (#Row_Nbr,31)
            print $Tot_Tax_Deduction_Lbl (#Row_Nbr,95)
           else
             graphic () font :#StdFont :#PntSize95
            print 'No. Kad  '  (#Row_Nbr,7)
            graphic () font :#StdFont :#StdPntSize
            print '(termasuk manfaat berupa '  (#Row_Nbr,31)
             graphic () font :#StdFont :#PntSize95
            print 'Elaun / Perkuisit /  '  (#Row_Nbr,55)
            print 'Jumlah Potongan Cukai' (#Row_Nbr,95)
           end-if

           add 1 to #Row_Nbr

            IF $curr_language_cd = 'ENG'
             print $Identity_Card_No_Lbl   (#Row_Nbr,7)
             print $And_Value_Living_Lbl  (#Row_Nbr,31)
             print $Tax_Exmpt_Allowances_Lbl  (#Row_Nbr,55)

             graphic                     (#Row_Nbr, 78,47) horz-line
             graphic                     (, 102,56) vert-line
            else
             graphic () font :#StdFont :#PntSize95
              print 'Pengenalan /'   (#Row_Nbr,7)
              graphic () font :#StdFont :#StdPntSize
              print 'barangan dan manfaat nilai '  (#Row_Nbr,31 )
             graphic () font :#StdFont :#PntSize95
              print 'Pemberian / Manfaat'          (#Row_Nbr,55)
             graphic                     (#Row_Nbr, 78,47) horz-line
             graphic                     (, 102,56) vert-line
            End-if

           add 1 to #Row_Nbr

           IF $curr_language_cd = 'ENG'

            print $Passport_No_Police_Lbl   (#Row_Nbr, 7)
            print $Accomodation_Benefits_Lbl  (#Row_Nbr,31)
            Print $Perquisites_Gifts_Lbl   (#Row_Nbr,55)
           Else
            graphic () font :#StdFont :#PntSize95
             print 'No. Pasport / No.'   (#Row_Nbr, 7)
            graphic () font :#StdFont :#StdPntSize
             print 'tempat kediaman tetapi tidak '  (#Row_Nbr,31 )
            graphic () font :#StdFont :#PntSize95
             print 'Yang Dikecualikan'          (#Row_Nbr,55)
           End-if

           add 1 to #Row_Nbr

           IF $curr_language_cd = 'ENG'

             print $Army_No_Lbl   (#Row_Nbr, 7)
             print $Provided_Excluding_Lbl  (#Row_Nbr,31)
             Print $Benefits   (#Row_Nbr,55)
             Print $STD_Lbl (#Row_Nbr,86)
             Print $CP38_Lbl (#Row_Nbr,107)
           Else
             graphic () font :#StdFont :#PntSize95
             print 'Polis / No. Tentera'   (#Row_Nbr, 7)
             graphic () font :#StdFont :#StdPntSize
             print 'termasuk tunggakan saraan'  (#Row_Nbr,31)
             graphic () font :#StdFont :#PntSize95
             Print 'Cukai'   (#Row_Nbr,55)
             Print 'PCB' (#Row_Nbr,86)
             Print 'CP 38' (#Row_Nbr,107)
           End-if

           add 1 to #Row_Nbr

           IF $curr_language_cd = 'ENG'
             print $Rem_Arrears_Lbl  (#Row_Nbr,31)
            else
             graphic () font :#StdFont :#StdPntSize
             print 'kasar tahun-tahun terdahulu)'  (#Row_Nbr,31)
           End-if
           add 1 to #Row_Nbr
           IF $curr_language_cd = 'ENG'
              print  $Preceding_Years_Lbl (#Row_Nbr,31)
            !else
             !graphic () font :#StdFont :#StdPntSize
             !print '*Potong yang mana tidak'  (#Row_Nbr,7)
           end-if

           add 1 to #Row_Nbr

           IF $curr_language_cd = 'ENG'

              Print $RM_Lbl  (#Row_Nbr,37)
              Print $RM_Lbl  (#Row_Nbr,62)
              Print $RM_Lbl  (#Row_Nbr,88)
              Print $RM_Lbl  (#Row_Nbr,109)
             graphic                     ( #Row_Nbr, 6,119) horz-line
             graphic                     (68, 6, 119) horz-line
           else
            !graphic () font :#StdFont :#StdPntSize
              !Print 'berkenaan' (#Row_Nbr,8)
            graphic () font :#StdFont :#PntSize95
              Print 'RM' (#Row_Nbr,37) bold
              Print 'RM' (#Row_Nbr,62) bold
              Print 'RM' (#Row_Nbr,88) bold
              Print 'RM' (#Row_Nbr,109) bold
             graphic                     ( #Row_Nbr, 6,119) horz-line
             graphic                     (68, 6, 119) horz-line
           End-if

         let #Row_Nbr = 19

end-Procedure



!***********************************************************************
! Function:    Get_Translat_Info                                       *
!                                                                      *
! Description: Gets the strings printed in this report                 *
!                                                                      *
!***********************************************************************

begin-procedure Get_Translat_Info


     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_NAME',     $ReportEmployerName_lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_REF_NO',     $ReportRefNo_lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE1',     $ReportTitle1,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE2',     $ReportTitle2,     #DW)
   !**********************************
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE3',     $ReportTitle3,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE4',     $ReportTitle4,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE5',     $ReportTitle5,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE6',     $ReportTitle6,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE7',     $ReportTitle7,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE8',     $ReportTitle8,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE8_1',   $ReportTitle8_1,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE8_2',   $ReportTitle8_2,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE9',     $ReportTitle9,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TITLE10',    $ReportTitle10,     #DW)
    !footer
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_NOTE1',     $ReportNote1,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_NOTE2',     $ReportNote2,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_NOTE3',     $ReportNote3,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_NOTE4',     $ReportNote4,     #DW)
    !*********************************************
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_NO',     $ReportNo,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_NM_EMP',     $ReportNameEmp,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TAXREFNO',     $ReportTaxRefNo,     #DW)

     !*****************************************
     do Get_Field_Information ('GPMYTX06', 'TOT_GROSS_REM',     $Tot_Gross_Rem_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_INCL_BEN',     $Include_Ben_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_IDEN_CRD',     $Identity_Card_No_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_AND_VALUE',     $And_Value_Living_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TAX_EMPT',     $Tax_Exmpt_Allowances_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_PAASPORT',     $Passport_No_Police_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TOT_TAX_D',     $Tot_Tax_Deduction_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_ACC_BEN',     $Accomodation_Benefits_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_PER_GIFTS',     $Perquisites_Gifts_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_ARMY_NO',     $Army_No_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_PROVID_EX',     $Provided_Excluding_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_BENEFITS',     $Benefits,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_STD',     $STD_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_CP38',     $CP38_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_REM_ARREA',     $Rem_Arrears_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_PRECED_YR',     $Preceding_Years_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'RM',     $RM_Lbl,     #DW)
     do Get_Field_Information ('GPMYTX06', 'GPMYTX06_TOTAL',     $Total_Lbl,     #DW)

     !*************************

end-procedure

#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'number.sqc'
#include 'sqrtrans.sqc'  ! Translate SQR strings to given language
#include 'adformat.sqc'




begin-Procedure Report-Parm-Clean

begin-sql
DELETE FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP2
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP3
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_RPT_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_PR_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_EMPL_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

end-Procedure


begin-Procedure EFilePrinting_Employee
Let $REPORT_TEXT = ''
Let $REPORT_TEXT2 = ''
Let $REPORT_TEXT3 = ''

!*******Name field creation for E-file******!
Let $E_Name = $name
Let #i = 1
Let $FirstMidname = ''
Let $Lastname = ''
While(substr($E_Name,#i,1) <> ',')
Let $Lastname = $Lastname || substr($E_Name,#i,1)       !****Getting Last Name***!
Let #i = #i + 1
End-While
Let #i = #i + 1
While(substr($E_Name,#i,1) <> '')
Let $FirstMidname = $FirstMidname || substr($E_Name,#i,1)   !****Getting middle and First name***!
Let #i = #i + 1
End-While
Let $E_Name = $FirstMidname ||' '||$Lastname  !*****Putting back the names together***!
Let $E_Name =  rtrim(ltrim($E_Name,' '), ' ')


Let $REPORT_TEXT = $REPORT_TEXT || $E_Name ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Name||','
Let $REPORT_TEXT5 = ''
WRITE 3 FROM $REPORT_TEXT5
do errorChecking (4)
!*******************************************!

!****IT FIle number creation for E-File*****!
Let $E_ItFileNbr = $ItFileNbr
Let $E_ItFileNbr =  rtrim(ltrim($ItFileNbr,' '), ' ')
Let $E_ItFileNbr = substr($E_ItFileNbr, 3, 11)
Let $REPORT_TEXT = $REPORT_TEXT || $E_ItFileNbr ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_ItFileNbr||','
do errorChecking (5)       
!*******************************************!
              
!****Identity Number creation for E-File****!

Let $E_Identity_Nbr = $Identity_Nbr
Let $E_Identity_Nbr =  rtrim(ltrim($Identity_Nbr,' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Identity_Nbr ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Identity_Nbr||','
do errorChecking (6)

!****Employee Category  E-File****!

Let $E_CEmp_Category = edit(#Emp_Category,'9')
Let $E_CEmp_Category = rtrim(ltrim($E_CEmp_Category,' '), ' ')
If #Emp_Category <> 0 and length($E_CEmp_Category) = 1
Let $E_Emp_Category = edit(#Emp_Category,'9')
else
Let $E_Emp_Category = ' '
end-if
Let $E_Emp_Category = rtrim(ltrim($E_Emp_Category,' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT ||  $E_Emp_Category ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Emp_Category||','
do errorChecking (7)

!****Tax Borne By Employer  E-File****!

Let $E_CER_TaxBorne = to_char(#ER_TaxBorne)
Let $E_CER_TaxBorne = rtrim(ltrim($E_CER_TaxBorne,' '), ' ')
if #ER_TaxBorne <> 0 and length($E_CER_TaxBorne) = 1
Let $E_ER_TaxBorne = edit(#ER_TaxBorne,'9')
else
Let $E_ER_TaxBorne = ' '
end-if
Let $E_ER_TaxBorne = rtrim(ltrim($E_ER_TaxBorne,' '), ' ')

Let $REPORT_TEXT = $REPORT_TEXT || $E_ER_TaxBorne ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_ER_TaxBorne||','
do errorChecking (8)

!****No Of Children Qualified for tax relief for E-File****!

Let $E_CChild_Cnt = to_char(#ChildCnt)
Let $E_CChild_Cnt = rtrim(ltrim($E_CChild_Cnt,' '), ' ')
if #ChildCnt <> 0 and length($E_CChild_Cnt) <=2
Let $E_Child_Cnt = edit(#ChildCnt,'99')
else
Let $E_Child_Cnt =' '
end-if

Let $E_Child_Cnt =  rtrim(ltrim($E_Child_Cnt,' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Child_Cnt ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Child_Cnt||','
do errorChecking (9)

!****Total qualifying child Relief E-File****!

Let $E_CTot_Chld_Relf1 = to_char(#Tot_Chld_Relf)
unstring $E_CTot_Chld_Relf1 by '.' into $E_CTot_Chld_Relf
Let $E_CTot_Chld_Relf = rtrim(ltrim($E_CTot_Chld_Relf,' '), ' ')

if #Tot_Chld_Relf <> 0
Let $E_Tot_Chld_Relf = edit(#Tot_Chld_Relf,'9999999')
else
Let $E_Tot_Chld_Relf = ' '
end-if
Let $E_Tot_Chld_Relf =  rtrim(ltrim($E_Tot_Chld_Relf, ' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Tot_Chld_Relf ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Tot_Chld_Relf||','
do errorChecking (10)

!*********Various amounts*******************!

if #Earns_Bal  <> 0
Let $E_Earns_Bal = edit(#Earns_Bal,'99999999999')
else
Let $E_Earns_Bal =' '
end-if
Let $E_Earns_Bal = rtrim(ltrim($E_Earns_Bal, ' '), ' ')
!Let $E_Earns_Bal = lpad($E_Earns_Bal,11,'0')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Earns_Bal ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Earns_Bal||','
do errorChecking (11)       

!****BIK E-File****!

Let $E_CBIK1 = to_char(#BIK)
unstring $E_CBIK1 by '.' into $E_CBIK
Let $E_CBIK= rtrim(ltrim($E_CBIK,' '), ' ')
if #BIK <> 0
Let $E_BIK = edit(#BIK,'99999999999')
else
Let $E_BIK = ' '
end-if
Let $E_BIK =  rtrim(ltrim($E_BIK,' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_BIK||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_BIK||','
do errorChecking (12)   

!****Living Accomodation E-File****!

Let $E_CLiv_Accom1 = to_char(#Liv_Accom)
unstring $E_CLiv_Accom by '.' into $E_CLiv_Accom
Let $E_CLiv_Accom = rtrim(ltrim($E_CLiv_Accom,' '), ' ')
if #Liv_Accom <> 0
Let $E_Liv_Accom = edit(#Liv_Accom,'99999999999')
else
Let $E_Liv_Accom =' '
end-if
Let $E_Liv_Accom =  rtrim(ltrim($E_Liv_Accom, ' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Liv_Accom||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Liv_Accom||','
do errorChecking (13)   

!****ESOS Benefit E-File****!

Let $E_CESOS_Benf1 = to_char(#ESOS_Benf)
unstring $E_CESOS_Benf1 by '.' into $E_CESOS_Benf
Let $E_CESOS_Benf = rtrim(ltrim($E_CESOS_Benf,' '), ' ')
if #ESOS_Benf <> 0
Let $E_ESOS_Benf = edit(#ESOS_Benf,'99999999999')
else
Let $E_ESOS_Benf = ' '
end-if
Let $E_ESOS_Benf =  rtrim(ltrim($E_ESOS_Benf, ' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_ESOS_Benf||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_ESOS_Benf||','
do errorChecking (14)   

!****Tax Exempt Allowance/Perquisite/Gifts/Benefits E-File****!
if #TAX_EXEMPT <> 0
Let $E_TAX_EXEMPT = edit(#TAX_EXEMPT,'999999999')
else
Let $E_TAX_EXEMPT = ' '
end-if
Let $E_TAX_EXEMPT = rtrim(ltrim($E_TAX_EXEMPT, ' '), ' ')
!Let $E_TAX_EXEMPT = lpad($E_TAX_EXEMPT,11,'0')
Let $REPORT_TEXT = $REPORT_TEXT ||$E_TAX_EXEMPT ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 ||$E_TAX_EXEMPT||',' 
do errorChecking (15)
       
!****Total TP1 Relief E-File****!

Let $E_CTot_TP1Relief1 = to_char(#Tot_TP1Relief)
unstring $E_CTot_TP1Relief1 by '.' into $E_CTot_TP1Relief
Let $E_CTot_TP1Relief = rtrim(ltrim($E_CTot_TP1Relief,' '), ' ')
if #Tot_TP1Relief <>0
Let $E_Tot_TP1Relief = edit(#Tot_TP1Relief,'99999999999')
else
Let $E_Tot_TP1Relief = ' '
end-if
Let $E_Tot_TP1Relief =  rtrim(ltrim($E_Tot_TP1Relief, ' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Tot_TP1Relief ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Tot_TP1Relief||','
!do errorChecking (16)  

!****Total Zakat Relief-File****!

Let $E_CTot_ZakatRelief1 = to_char(#Tot_ZakatRelief)
unstring $E_CTot_ZakatRelief1 by '.' into $E_CTot_ZakatRelief
Let $E_CTot_ZakatRelief = rtrim(ltrim($E_CTot_ZakatRelief,' '), ' ')
if #Tot_ZakatRelief <> 0
Let $E_Tot_ZakatRelief = edit(#Tot_ZakatRelief,'99999999999')
else
Let $E_Tot_ZakatRelief = ' '
end-if
Let $E_Tot_ZakatRelief =  rtrim(ltrim($E_Tot_ZakatRelief, ' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Tot_ZakatRelief ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Tot_ZakatRelief||','
!do errorChecking (17)  

!***Employee provident fund contribution -File****!

Let $E_CProv_Fund1 = to_char(#Prov_Fund)
unstring $E_CProv_Fund1 by '.' into $E_CProv_Fund
Let $E_CProv_Fund = rtrim(ltrim($E_CProv_Fund,' '), ' ')
if #Prov_Fund <>0
Let $E_Prov_Fund = edit(#Prov_Fund,'999999')
else
Let $E_Prov_Fund =' '
end-if
Let $E_Prov_Fund =  rtrim(ltrim($E_Prov_Fund, ' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Prov_Fund ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Prov_Fund||','
do errorChecking (18)   

!****Total zakat paid by employee -File****!

Let $E_CZakat_paid = to_char(#Zakat_paid)
Let $E_CZakat_paid = rtrim(ltrim($E_CZakat_paid,' '), ' ')
if #Zakat_paid <> 0
Let $E_Zakat_paid = edit(#Zakat_paid,'99999999.99')
else
Let $E_Zakat_paid = ' '
end-if
Let $E_Zakat_paid =  rtrim(ltrim($E_Zakat_paid, ' '), ' ')
Let $REPORT_TEXT = $REPORT_TEXT || $E_Zakat_paid ||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 || $E_Zakat_paid||','
do errorChecking (19)   

!****MTD -File****!
if #Tax_Bal <> 0    
Let $E_Tax_Bal = edit(#Tax_Bal,'99999999.99')
else
Let $E_Tax_Bal = ' '
end-if
Let $E_Tax_Bal = rtrim(ltrim($E_Tax_Bal , ' '), ' ')
!Let $E_Tax_Bal  = lpad($E_Tax_Bal ,11,'0') 
Let $REPORT_TEXT = $REPORT_TEXT ||$E_Tax_Bal||'|'
Let $REPORT_TEXT2 = $REPORT_TEXT2 ||$E_Tax_Bal||','
do errorChecking (20)

!****CP38 -File****!     
if  #CP38_YTD <> 0
Let $E_CP38_YTD = edit(#CP38_YTD,'99999999.99')
else
Let $E_CP38_YTD = ' '
end-if
Let $E_CP38_YTD = rtrim(ltrim($E_CP38_YTD , ' '), ' ')
!Let $E_CP38_YTD  = lpad($E_CP38_YTD ,11,'0')
Let $REPORT_TEXT = $REPORT_TEXT ||$E_CP38_YTD 
Let $REPORT_TEXT2 = $REPORT_TEXT2 ||$E_CP38_YTD 
do errorChecking (21)
       
WRITE 2 FROM $REPORT_TEXT2
WRITE 1 FROM $REPORT_TEXT

!*******************************************!


end-Procedure


!************Open File at Path for employee************
begin-procedure OpenFilePath
#ifdef UNIX
    let $slash = '/'
  #else
    let $slash = '\'
  #endif

  if $slash <> ''   !If Slash has a value then...
    let #start = 1
    let #location = 0
    while #location <> -1
       let #start = #location + 1
       Find $slash In $SQR-Report #start #location
    end-while
    let $path     = substr($SQR-Report,          1, #start)
    let $filename = substr($SQR-Report, #start + 1, length($SQR-Report)-#start)
  end-if
    let $Filename1  = $check||$Ref_No||'_'||$Tax_Year||'.TXT'
    let $Filename1  = $path || $Filename1

    let $Filename2  = 'MP'||$Ref_No||'_'||$Tax_Year||'.CSV'
    let $Filename2  = $path || $Filename2
       
       let $Filename3  = 'MP'||$Ref_No||'_'||$Tax_Year||'_error'||'.CSV'
    let $Filename3  = $path || $Filename3
       
    if ($flag = 'Y')
    open $Filename2  as 2   for-writing record=999
       open $Filename3  as 3   for-writing record=999
       end-if
       
    open $Filename1  as 1   for-writing record=999
   
   status = #filestat
  ! if #filestat != 0
    !  display $Filename1 noline
    !  display ' not found '
    !else
    !  display 'Processing ' noline
   !end-if
end-procedure
!********************End**********************



!*************Header for E-filing**********************!
begin-procedure Employer_EFilling

Let $check = 'M'
Let $flag = 'Y'
Let $REPORT_TEXT5 = ' '
do OpenFilePath
Let $REPORT_TEXT3 = $Ref_No||'|'|| $Registered_Name||'|'||$Tax_Year
WRITE 1 FROM $REPORT_TEXT3
Let $REPORT_TEXT4 = $Ref_No||','|| $Registered_Name||','||$Tax_Year
WRITE 2 FROM $REPORT_TEXT4
close 1
Let $flag = 'N'
do errorChecking (1)
do errorChecking (2)
do errorChecking (3)
!WRITE 3 FROM $REPORT_TEXT5
End-procedure
!*******************End- Header for E-FILE*************!

!*******************Function to Check numbers only*****!
!**This will return a non-zero value if any character**!
!***********is present in the string*******************!
begin-procedure numberOnly ($numerics, $inputString, :$flag)
Let #count = 1
Let $flag = '0'
Let #test = 1
Let #len = length($inputString)
Let $char = ''
while #count <= #len
  Let $char = substr($inputString,#count,1)
  Let #test = instr($numerics,$char,1)
       if (#test = 0)
          Let $flag = '1'
          break
     end-if
        Let #count = #count + 1
end-while
end-procedure
!*********End - Function to Check numbers only*********!


!**************** Function to check maximum length*****!
begin-procedure maxLimitLength ($inputString, #maxAllowed, :$max)
Let $max = '0'
Let #leng = length($inputString)
   If #leng > #maxAllowed
     Let $max = '1'
   End-If

end-procedure
!*******This will return a 1 if the input string is***!
!*******greater than the size specified by IRD********!



!*********Error checking for various data-points******!
begin-procedure errorChecking (#data_num)

evaluate #data_num
when = 1   !**For ENo of the employer
       Let $test = '0'
       do numberOnly($_numerics, $_Ref_No, $test)
       if($test = '1')
         
              Let $_REPORT_TEXT5 = 'Employer Number: '||$_Ref_No||','||$_err_notdigit
              WRITE 3 FROM $_REPORT_TEXT5                 
       end-if
          Let $test = '0'
          do maxLimitLength($_Ref_No, #_len_ENo,$test )  
          if($test = '1')
              Let $_REPORT_TEXT5 = 'Employer Number: '||$_Ref_No||','||$_err_exceed1||edit(#_len_ENo,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
                 
          end-if
break
when = 2   !** For Name of Employer
          Let $test = '0'
          do maxLimitLength($_Registered_Name, #_len_Emplr,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = 'Employer Name: '||$_Registered_Name||','||$_err_exceed1||edit(#_len_Emplr,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
               
          end-if


break
when = 3   !** For Renumeration Year
       Let $test = '0'
       do numberOnly($_numerics, $_Tax_Year, $test)
       if($test = '1')
              Let $_REPORT_TEXT5 = 'Tax Year: '||$_Tax_Year||','||$_err_notdigit
              WRITE 3 FROM $_REPORT_TEXT5
                
       end-if
          Let $test = '0'
          do maxLimitLength($_Tax_Year,#_len_taxyear,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = 'Tax Year: '||$_Tax_Year||','||$_err_exceed1||edit(#_len_taxyear,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break
when = 4   !** For Name of Employee
       Let $test = '0'
          do maxLimitLength($_E_Name,#_len_emply,$test ) 
          if($test = '1')
              Let $REPORT_TEXT5 = $_Emplid||','||'Employee Name: '||$_E_Name||','||$_err_exceed1||edit(#_len_emply,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
               
          end-if
break
when = 5   !** For Income Tax Number
       Let $test = '0'
       do numberOnly($_numerics, $_E_ItFileNbr, $test)
       if($test = '1')
              Let $REPORT_TEXT5 =  $_Emplid||','||'Income Tax Number: '||$_E_ItFileNbr||','||$_err_notdigit
              WRITE 3 FROM $_REPORT_TEXT5
                
       end-if
          Let $test = '0'
          do maxLimitLength($_E_ItFileNbr,#_len_incmtxno,$test ) 
          if($test = '1')
              Let $REPORT_TEXT5 = $_Emplid||','||'Income Tax Number: '||$_E_ItFileNbr||','||$_err_exceed1||edit(#_len_incmtxno, '00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break
when = 6   !** For ICard
       Let $test = '0'
          do maxLimitLength($_E_Identity_Nbr,#_len_iCard,$test ) 
          if($test = '1')
              Let $REPORT_TEXT5 = $_Emplid||','||'Iden: '||$_E_Identity_Nbr||','||$_err_exceed1||edit(#_len_iCard,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
                 
          end-if
break

when = 7   !** For Category Of Employee
       Let $test = '0'
       do numberOnly($_numerics, $_E_CEmp_Category, $test)
       if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Category Of Employee: '||$_E_CEmp_Category||','||$_err_notdigit
              WRITE 3 FROM $_REPORT_TEXT5
                
       end-if

          Let $test = '0'
          do maxLimitLength($_E_CEmp_Category,#_len_empcat,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Category Of Employee: '||$_E_CEmp_Category||','||$_err_exceed1||edit(#_len_empcat,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
             
          end-if
break


when = 8   !** For Tax Borne By Employer
       Let $test = '0'
       do numberOnly($_numerics, $_E_CER_TaxBorne, $test)
       if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Tax Borne By Employer: '||$_E_CER_TaxBorne||','||$_err_notdigit
              WRITE 3 FROM $_REPORT_TEXT5
                
       end-if

          Let $test = '0'
          do maxLimitLength($_E_CER_TaxBorne,#_len_erTaxB,$test ) 
          if($test = '1')
                 Let $_REPORT_TEXT5 = $_Emplid||','||'Tax Borne By Employer: '||$_E_CER_TaxBorne||','||$_err_exceed1||edit(#_len_erTaxB,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
             
          end-if
break


when = 9   !** Number of children qualified fro tax Relief
       Let $test = '0'
       do numberOnly($_numerics, $_E_CChild_Cnt, $test)
       if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'No. of chidren qualifying for Tax Relief: '||$_E_CChild_Cnt||','||$_err_notdigit
              WRITE 3 FROM $_REPORT_TEXT5
                
       end-if

          Let $test = '0'
          do maxLimitLength($_E_CChild_Cnt,#_len_chcnt,$test ) 
          if($test = '1')
                 Let $_REPORT_TEXT5 = $_Emplid||','||'No. of chidren qualifying for Tax Relief: '||$_E_CChild_Cnt||','||$_err_exceed1||edit(#_len_chcnt,'00')||$_err_exceed2
                 WRITE 3 FROM $_REPORT_TEXT5
             
          end-if
break

when = 10   !** Total qualifying child Relief
       Let #test = '0'
        do maxLimitLength($_E_CTot_Chld_Relf,#_len_chRelf,$test ) 
          if($test = '1')
          Let $_REPORT_TEXT5 = $_Emplid||','||'Total qualifying child Relief'||','||$_err_exceed1||edit(#_len_chRelf,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                       
          end-if
break

when = 11   !** For Total Gross Renumeration
       Let #test = '0'
          do maxLimitLength($_E_Earns_Bal,#_len_gross,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Total Gross Renumeration amount'||','||$_err_exceed1||edit(#_len_gross,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break


when = 12   !** For Benefit In Kind
       Let #test = '0'
          do maxLimitLength($_E_CBIK,#_len_bik,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Benefit In Kind'||','||$_err_exceed1||edit(#_len_bik,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break


when = 13   !** For Value Of Living Accomodation
       Let #test = '0'
          do maxLimitLength($_E_CLiv_Accom,#_len_livacm,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Value Of Living Accomodation'||','||$_err_exceed1||edit(#_len_livacm,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break

when = 14   !** ESOS Benefit
       Let #test = '0'
          do maxLimitLength($_E_CESOS_Benf,#_len_livacm,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'ESOS Benefit'||','||$_err_exceed1||edit(#_len_ESOS,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break

when = 15   !** For Tax Exemption
      Let $test = '0'
          do maxLimitLength($_E_TAX_EXEMPT,#_len_exemp,$test ) 
          if($test = '1')
              Let $REPORT_TEXT5 =$_Emplid||','||'Tax Exempt Allowance/Perquisite/Gifts/Benefits' ||','||$_err_exceed1||edit(#_len_exemp, '00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $REPORT_TEXT5
                
          end-if
break

when = 16   !** Total Claim for Relief by Employee Via Form TP1
       Let #test = '0'
          do maxLimitLength($_E_CTot_TP1Relief,#_len_TP1Relf,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Total Claim for Relief by Employee Via Form TP1'||','||$_err_exceed1||edit(#_len_TP1Relf,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break

when = 17   !** Total Claim on payment of Zakat By Employee Via Form TP1
       Let #test = '0'
          do maxLimitLength($_E_CTot_ZakatRelief,#_len_TP1Zakat,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Total Claim on payment of Zakat By Employee Via Form TP1'||','||$_err_exceed1||edit(#_len_TP1Zakat,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break


when = 18   !** Contribution Employee Provident Fund
       Let #test = '0'
          do maxLimitLength($_E_CProv_Fund,#_len_EEPF,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Contribution Employee Provident Fund'||','||$_err_exceed1||edit(#_len_len_EEPF,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break

when = 19   !** Zakat paid Via Salary Deduction
       Let #test = '0'
          do maxLimitLength($_E_CProv_Fund,#_len_EEPF,$test ) 
          if($test = '1')
              Let $_REPORT_TEXT5 = $_Emplid||','||'Zakat paid Via Salary Deduction'||','||$_err_exceed1||edit(#_len_len_EEPF,'00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break

when = 20   !** For MTD values
       Let $test = '0'
          do maxLimitLength($_E_Tax_Bal,#_len_MTD,$test ) 
          if($test = '1')
              Let $REPORT_TEXT5 = $_Emplid||','||'MTD'||','||$_err_exceed1||edit(#_len_MTD, '00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                 
          end-if
break
when = 21  !** For CP38 values
       Let $test = '0'
          do maxLimitLength($_E_CP38_YTD,#_len_CP38,$_test ) 
          if($test = '1')
              Let $REPORT_TEXT5 = $_Emplid||','||'CP38'||','||$_err_exceed1||edit(#_len_CP38, '00')||$_err_exceed2||$_err_amount
                 WRITE 3 FROM $_REPORT_TEXT5
                
          end-if
break

end-evaluate
end-procedure