!***********************************************************************
!  DDP005:  Direct Deposit Prenotification Report                      *
!           Note: This SQR must be run before DDP001 or the result     *
!                 will be empty                                        *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2020, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  31752593                                            !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup31.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'DDP005' to $ReportID
  move 'Direct Deposit Prenotification Report' to $ReportTitle

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Select-Parameters

  if $RC_PAYINIT.Run_ID = ''
    move $RC_PAYINIT.Pay_End_Dt to $PayEndDate
  else
    do Get-PayEndDate
  end-if

  move 'N' to $CyclePrompts     !Don't prompt for On/Off cycle in PAYINIT
  do Payroll-Report-Initialization
end-procedure

begin-HEADING 7
  #Include 'stdhdg04.sqc'

  print ' '                             (+2,2,30)
  print ' '                             (0,+2,11)
  print ' '                             (0,+2,8)
  print 'Account'                       (0,+2,7)
  print ' '                             (0,+2,9)
  print ' '                             (0,+2,17)

  print 'Employee Name'                 (+1,2,40)
  print 'Employee ID'                   (0,+2,11)
  print 'Priority'                      (0,+2,8)
  print '  Type'                        (0,+2,7)
  print 'Bank Code'                     (0,+2,9)
  print 'Account Number'                (0,+2,17)

end-HEADING


begin-PROCEDURE Report
  move 'Y' to $First_Time
  move 'N' to $Found_Calendar

if $SlctRunID <> '*'
    move  'AA.RUN_ID = '''                to $DdovbankID
    concat $SlctRunID                   with $DdovbankID
    concat ''''                         with $DdovbankID
  else
    move  'AA.COMPANY = '''               to $DdovbankID
    concat $SlctCompany                 with $DdovbankID
    concat ''' AND AA.PAYGROUP = '''    with $DdovbankID
    concat $SlctPayGroup                with $DdovbankID
    concat ''' AND AA.PAY_END_DT = '''  with $DdovbankID
    concat $SlctPayEndDt                with $DdovbankID
    concat ''''                         with $DdovbankID
end-if

  let $OffCycleDD = 'N'
  let $OffCycleProcess = 'N'
  do Check-Field-Exist ('INSTALLATION_PY', 'PY_OFF_CYCLE_DD', $OffCycleDD)
  if $OffCycleDD = 'Y'
      do Read-CheckBox-Value ('INSTALLATION_PY', 'PY_OFF_CYCLE_DD', $OffCycleProcess)
  end-if

  if $OffCycleProcess = 'N' or $RC_PAYINIT.Cycle_Select = 'B'
      let $SrchConfirmedCal1 = 'AND AA.PAY_CONFIRM_RUN  = ''' || 'Y' || ''''
      let $SrchConfirmedCal2 = 'AND A.PAY_CONFIRM_RUN  = ''' || 'Y' || ''''
  else
      let $SrchConfirmedCal1 = ''
      let $SrchConfirmedCal2 = ''
  end-if

begin-SELECT
AA.COMPANY
AA.PAYGROUP
AA.PAY_END_DT
AA.CHECK_DT
BB.SRC_BANK_ID
BB.DD_SRC_BANK_ID

  move 'Y' to $Found_Calendar

  if isblank(&BB.DD_Src_bank_id)
    move &BB.Src_bank_id      to $Bank_ID
    move 'B.SRC_BANK_ID'      to $Bank_ID_to_Use_B
    move 'PT.SRC_BANK_ID'     to $Bank_ID_to_Use_PT
  else
    move &BB.DD_Src_bank_id   to $Bank_ID
    move 'B.DD_SRC_BANK_ID'   to $Bank_ID_to_Use_B
    move 'PT.DD_SRC_BANK_ID'     to $Bank_ID_to_Use_PT
  end-if

FROM PS_PAY_CALENDAR AA,
      PS_PAYGROUP_TBL BB
WHERE [$DdovbankID]
  AND AA.PAYGROUP         = BB.PAYGROUP
  AND AA.COMPANY          = BB.COMPANY
  AND BB.EFFDT            =
      (SELECT MAX(EFFDT)
         FROM PS_PAYGROUP_TBL
        WHERE COMPANY    = AA.COMPANY
          AND PAYGROUP   = AA.PAYGROUP
          AND EFF_STATUS = 'A'
          AND EFFDT     <= AA.PAY_END_DT)
  [$SrchConfirmedCal1]
  AND AA.PAY_CHECKS_RUN   = 'N'
ORDER BY AA.COMPANY,
         AA.PAYGROUP,
         AA.PAY_END_DT
end-SELECT

  if $Found_Calendar = 'Y'
     do Find-Bank
  end-if

end-PROCEDURE

begin-PROCEDURE Find-Bank
begin-SELECT
A.COMPANY    () on-break print=never  level=1 procedure=Company-Change
A.PAYGROUP
A.PAY_END_DT
S.SRC_BANK_ID
S.PRENOTE_WAIT_DAYS

  move &S.PRENOTE_WAIT_DAYS to #WaitDays

  if $Company <> &A.Company
        or $Paygroup <> &A.Paygroup
        or &S.SRC_BANK_ID <> $priorTransit#
     if $First_Time <> 'Y'
        move &A.Company to $Company
        move &A.Paygroup to $Paygroup
        move &S.SRC_BANK_ID to $priorTransit#

        if #WaitDays <> 0
           do Write-Prenotes
        end-if
     else
        move &A.Company to $Company
        move &A.Paygroup to $Paygroup
        move &S.SRC_BANK_ID to $priorTransit#
        move 'N' to $First_Time

        if #WaitDays <> 0
           do Write-Prenotes
        end-if
     end-if
  end-if

FROM PS_PAY_CALENDAR A,
     PS_PAYGROUP_TBL B,
     PS_SRC_BANK     S
WHERE [$SlctCalendar]
  AND A.PAYGROUP         = B.PAYGROUP
  AND A.COMPANY          = B.COMPANY
  AND B.EFFDT            =
      (SELECT MAX(EFFDT)
         FROM PS_PAYGROUP_TBL
        WHERE COMPANY    = A.COMPANY
          AND PAYGROUP   = A.PAYGROUP
          AND EFF_STATUS = 'A')
  [$SrchConfirmedCal2]
  AND A.PAY_CHECKS_RUN   = 'N'
  AND [$Bank_ID_to_Use_B] = S.SRC_BANK_ID
ORDER BY A.COMPANY,
         S.SRC_BANK_ID
end-SELECT

end-PROCEDURE


begin-procedure Write-Prenotes

  move ' ' to $Prev_Name
  move ' ' to $Prev_Emplid
  move ' ' to $Prev_Priority

begin-SELECT
PD.NAME
DD.EMPLID
DD.EFFDT
DD.PRIORITY
DD.ACCOUNT_TYPE
DD.BANK_CD
DD.ACCOUNT_NUM

  let $Priority = edit(&DD.PRIORITY, '8888')

  if $Prev_Name <> &PD.NAME
        or $Prev_Emplid   <> &DD.EMPLID
        or $Prev_Priority <> $Priority

     move $Priority     to $Prev_Priority

     if $Prev_Emplid <> &DD.EMPLID
        move &PD.NAME   to $Prev_Name
        move &DD.EMPLID to $Prev_Emplid
        move &PD.NAME   to $Name
        do Rotate-Name
        print $Name              (+1,2,40)
        print $Prev_Emplid       (0,+2,11)
        print $Prev_Priority     (0,+6,4)
     else
        print $Prev_Priority     (+1,61,4)
     end-if

     print &DD.ACCOUNT_TYPE      (0,+6,3)
     print &DD.BANK_CD           (0,+2,9)
     print &DD.ACCOUNT_NUM       (0,+2,17)
  end-if

FROM PS_DIR_DEP_DISTRIB DD,
     PS_NAMES           PD,
     PS_PAYGROUP_TBL    PT,
     PS_JOB              J,
     PS_DIRECT_DEPOSIT  PS
WHERE DD.EMPLID           = PD.EMPLID
  AND PS.EMPLID           = PD.EMPLID
  AND DD.PRENOTE_STATUS   = 'N'           !Not Submitted
  AND DD.PRENOTE_REQD     = 'Y'
  AND DD.ACCOUNT_TYPE    <> '$'           !not ISSUE CHECK
  AND DD.EFFDT =
      (SELECT MAX(DD1.EFFDT)
         FROM PS_DIR_DEP_DISTRIB DD1
        WHERE DD.EMPLID    = DD1.EMPLID
          AND DD1.EFFDT   <= &A.Pay_End_Dt)
  AND PD.NAME_TYPE = 'PRI'
  AND PD.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = PD.EMPLID
         AND  PX.NAME_TYPE = PD.NAME_TYPE
         AND  PX.EFFDT    <= $PayEndDate)
  AND  J.EMPLID           = PS.EMPLID
  AND  J.EMPLID           = DD.EMPLID
  AND  J.EFFDT =
        (SELECT MAX(EFFDT)
          FROM  PS_JOB
         WHERE  EMPLID    = J.EMPLID
           AND  EMPL_RCD  = J.EMPL_RCD
           AND  EFFDT    <= &A.Pay_End_Dt)
   AND J.EFFSEQ =
        (SELECT MAX(EFFSEQ)
         FROM   PS_JOB
         WHERE  EMPLID    = J.EMPLID
           AND  EMPL_RCD  = J.EMPL_RCD
           AND  EFFDT     = J.EFFDT)
  AND PS.EFF_STATUS       = 'A'
  AND PS.EFFDT            = DD.EFFDT
  AND PT.COMPANY          = J.COMPANY
  AND PT.PAYGROUP         = J.PAYGROUP
  AND PT.EFFDT =
        (SELECT MAX(EFFDT)
          FROM  PS_PAYGROUP_TBL
         WHERE  COMPANY   = PT.COMPANY
           AND  PAYGROUP  = PT.PAYGROUP
           AND  EFFDT    <= &A.Pay_End_Dt)
  AND PT.COMPANY          = $Company
  AND PT.PAYGROUP         = $Paygroup
  AND [$Bank_ID_to_Use_PT] = $priorTransit#
ORDER BY DD.EMPLID, DD.PRIORITY
end-SELECT

end-PROCEDURE


begin-procedure Company-Change
  new-page
end-procedure




begin-PROCEDURE Get-PayEndDate
begin-SELECT DISTINCT

X.PAY_END_DT

    move &X.PAY_END_DT to $PayEndDate

 FROM  PS_PAY_CALENDAR X
WHERE  RUN_ID = $RC_PAYINIT.Run_ID

end-SELECT
end-PROCEDURE


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'pychkfld.sqc'  !Check-Field-Exist procedure
