!***********************************************************************
!  GPNZTX01:  Invalid IRD Number Report                                *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!          $Date:  2013/01/18:03:59:19                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!***********************************************************************
! Program Description                                                  *
! -------------------                                                  *
!                                                                      *
! This report prints the Invalid IRD Numbers report by                 *
! pay_entity ordered by name                                           *
!                                                                      *
! Sorted by:                                                           *
! Name                                                                 *
!                                                                      *
! Modification History                                                 *
!                                                                      *
!    Date    Incident                                                  *
! ~~~~~~~~~~ ~~~~~~~~                                                  *
!  05/03/02  Initial version                                           *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup02.sqc'   !Printer and page-size initialization

!************************************************************************
!  Define Variables                                                     *
!************************************************************************
#define BLANK                       ' '
#define PRINT_NO_TAX                1
#define PRINT_IRD_NOT_SUPPLIED      2
#define PRINT_NO_INVALID_IRD        3


!************************************************************************
!  Report Structure                                                     * 
!************************************************************************
begin-Program

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stamp-End-Time
  do Stdapi-Term

end-Program


!************************************
!PrintHeading                       *
!************************************
begin-heading 9
  print '            '    (1,1)
  print 'Report ID:  '    (+1,1)
  print $ReportID         ()
  uppercase $GPNZTX01_Title
  print $GPNZTX01_Title   ()          center
  let #RptCol = {ColR} - 2
  page-number             (0,#RptCol)  'Page No.  '
  uppercase $ReportTitle2
  print $ReportTitle2     (+1)        center
  let #RptCol = {ColR} - 2
  print $Run_Date_lbl     (0,#RptCol)
  print $ReportDate       ()
  print $Run_Time_lbl     (+1,#RptCol)
  print $ReportTime       ()
  print $Equal_lbl        (+2,1,176) fill
  print $EmployeeID_lbl   (+1,1)
  print $Name_lbl         (0,15)
  print $Empl_lbl         (0,50)
  print $Balance_lbl      (0,55)
  print $Tax_Code_lbl     (0,65)
  print $Comments_lbl     (0,78)
  print $Rcd_lbl          (+1,50)
  print $Group_lbl        (0,55)
  print $Equal_lbl        (+1,1,176) fill
end-heading


!************************************
!Init-Report                        *
!************************************
begin-procedure Init-Report

!*** Translations procedures & Strings Table retrievals.

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Append_Report_Translation ('GPNZTX01')

    do Get_Field_Information ('GPNZTX01', 'GPNZTX01_TITLE', $GPNZTX01_Title,     #DW)
    do Get_Field_Information ('GPNZTX01', 'BALANCE',        $Balance_lbl,        #DW)
    do Get_Field_Information ('GPNZTX01', 'COMMENTS',       $Comments_lbl,       #DW)
    do Get_Field_Information ('GPNZTX01', 'EMPL',           $Empl_lbl,           #DW)
    do Get_Field_Information ('GPNZTX01', 'EMPLOYEE_ID',    $EmployeeID_lbl,     #DW)
    do Get_Field_Information ('GPNZTX01', 'GROUP',          $Group_lbl,          #DW)
    do Get_Field_Information ('GPNZTX01', 'NAME',           $Name_lbl,           #DW)
    do Get_Field_Information ('GPNZTX01', 'EQ_CHAR',        $Equal_lbl,          #DW)
    do Get_Field_Information ('GPNZTX01', 'RCD',            $Rcd_lbl,            #DW)
    do Get_Field_Information ('GPNZTX01', 'RUN_DATE',       $Run_Date_lbl,       #DW)
    do Get_Field_Information ('GPNZTX01', 'RUN_TIME',       $Run_Time_lbl,       #DW)
    do Get_Field_Information ('GPNZTX01', 'TAX_CODE',       $Tax_Code_lbl,       #DW)
!*** Report variables.

  let $ReportID               =  'GPNZTX01'
  display $GPNZTX01_Title

  do Stdapi-Init

  if $prcs_process_instance = ''
!
  else
    do Select-Parameters
    do Get_Pay_Entity_Desc
    move $Pay_Entity_Desc to $ReportTitle2
    display $ReportTitle2
  end-if

  do Stamp-Begin-Time

end-procedure


!************************************
!Get_Pay_Entity_Desc                *
!************************************
begin-Procedure Get_Pay_Entity_Desc

#debugk show '$Run_Pay_Entity ' $Run_Pay_Entity 

begin-SELECT On-Error=SQL-Error-Handler
PYENT.DESCR
   let $Pay_Entity_Desc = $Run_Pay_Entity || ' - ' || rtrim(&PYENT.DESCR, ' ')

FROM PS_GP_PYENT PYENT
WHERE PYENT.PAY_ENTITY = $Run_Pay_Entity
end-SELECT

end-Procedure ! Get_Pay_Entity_Desc


!***********************************************************************
Begin-Procedure Stamp-Begin-Time

  display ''
  display 'Report Began: ' noline
  display $AsOfToday noline
  display ':' noline
  display $AsOfNow
  display ''

end-procedure Stamp-Begin-Time


!************************************
!Process-Main                       *
!************************************
begin-procedure Process-Main

#debugk do Get-Current-DateTime
#debugk show 'Enter Process-Main ' $SysDateTime

let $Error-Message = 'GPNZTX01.SQR, Process-Main, PS_JOB, Select'
let #print_msg = 0
let #found = 0

begin-SELECT On-Error=SQL-Error-Handler
JOB.EMPLID,
PERS.NAME, 
JOB.EMPL_RCD, 
DET.BALANCE_GRP_NUM, 
DET.GPNZ_TAX_SCALE

 let $EmplID = rtrim(&JOB.EMPLID, ' ')
 let $Name = rtrim(&PERS.NAME, ' ')
 let #Empl_rcd = &JOB.EMPL_RCD
 let $Balance_Group_Num = rtrim(&DET.BALANCE_GRP_NUM, ' ')
 let $Gpnz_Tax_Scale = rtrim(&DET.GPNZ_TAX_SCALE, ' ')

! Flag = 1 for tax details in PS_GPNZ_EE_IRD_NUM if NO record is found.
 do Get-Employee-IRD-Number
#debugk show '$Gpnz_IRD_Number ' $Gpnz_IRD_Number 

  If #Error_Flg = 1
      let #print_msg = {PRINT_NO_TAX}
      do Print-Employee-Line
      add 1 to #found 
  else
! Flag = 1 for IRD number = 0.
    do Zeros-IRD-Number
    if #Error_Flg = 1
      let #print_msg = {PRINT_IRD_NOT_SUPPLIED}
      do Print-Employee-Line
      add 1 to #found 
    end-if
  end-if


FROM PS_JOB JOB  
, PS_GPNZ_EE_IRD_DET DET
, PS_PERSON_NAME PERS

WHERE JOB.EMPLID = DET.EMPLID
AND JOB.EMPLID = PERS.EMPLID
AND JOB.EMPL_STATUS = 'A'
AND JOB.EMPLID = DET.EMPLID
AND DET.PAY_ENTITY = $Run_Pay_Entity

AND ( JOB.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE JOB.EMPLID = A_ED.EMPLID
          AND JOB.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX})

AND JOB.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE JOB.EMPLID = A_ES.EMPLID
          AND JOB.EMPL_RCD = A_ES.EMPL_RCD
          AND JOB.EFFDT = A_ES.EFFDT)

AND DET.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_GPNZ_EE_IRD_DET B_ED
        WHERE DET.EMPLID = B_ED.EMPLID
          AND B_ED.EFFDT <= JOB.EFFDT)


          )

ORDER BY PERS.NAME

end-SELECT

if #found = 0
      let $Stmt = '     NO Invalid IRD Number'
      print $Stmt (+1,1)
end-if


end-procedure ! Process-Main

!************************************
!Get-Employee-IRD-Number            *
!************************************
begin-procedure Get-Employee-IRD-Number

let $Error-Message = 'GPNZTX01.SQR, Get-Employee-IRD-Number, PS_GPNZ_EE_IRD_NUM, Select'
let #Error_Flg  = 1


begin-SELECT On-Error=SQL-Error-Handler
GPNUM.GPNZ_IRD_NUMBER

 let $Gpnz_Ird_Number = rtrim(&GPNUM.GPNZ_IRD_NUMBER, ' ')
 let #Error_Flg  = 0

FROM PS_GPNZ_EE_IRD_NUM GPNUM
WHERE GPNUM.EMPLID = $EmplID
AND GPNUM.EFFDT =
    (SELECT MAX(C_ED.EFFDT) FROM PS_GPNZ_EE_IRD_NUM C_ED
     WHERE GPNUM.EMPLID = C_ED.EMPLID
     AND C_ED.EFFDT <= {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX})

end-SELECT

#debugk show '$EmplID ' $EmplID 
#debugk show '#Error_Flg ' #Error_Flg 

end-procedure ! Get-Employee-IRD-Number


!************************************
!Zeros-IRD-Number                   *
!************************************
begin-procedure Zeros-IRD-Number

   let #Error_Flg  = 0
   let $IRD_Number = RTrim($Gpnz_IRD_Number,' ')
   let $IRD_Number = LTrim($Gpnz_IRD_Number,' ')
   If Length($IRD_Number) <> 9
      let #Error_Flg = 1
   Else
      let #IRD_Base = to_number(Substr($IRD_Number, 1, 9))
      If #IRD_Base = 0
         let #Error_Flg = 1
      End-if
   End-if

#debugk show '#IRD_Base ' #IRD_Base 

end-procedure ! Zeros-IRD-Number

!************************************
!Print-Employee-Line                *
!************************************
begin-Procedure Print-Employee-Line

 do Format-Number(#Empl_rcd, $Empl_rcd, '9')

 print $EmplID  (+1,1)
 print $Name    (0,15)
 print $Empl_Rcd               (0,50)
 print $Balance_Group_Num      (0,55)
 print $Gpnz_Tax_Scale         (0,65)
 if #print_msg = {PRINT_NO_TAX}
    print 'Employee has no tax details' (0,78)
 else 
   if #print_msg = {PRINT_IRD_NOT_SUPPLIED}
      print 'Employee has not supplied an IRD Number' (0,78)
   end-if
 end-if
  
 print '' (+1,1)

end-Procedure ! Print-Employee-Line


!***********************************************************************
Begin-Procedure Stamp-End-Time

  display ''
  display 'Report Ended: ' noline
  display $AsOfNow

end-procedure Stamp-End-Time

#include 'gpnzrc01.sqc'  !Routines for runcontrol, printing and error checking
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'tranctrl.sqc'  !Routines to COMMIT and ROLLBACK transactions
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
