!***********************************************************************
!  GPCHUT11: String Manipulation                                       *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.       !
! All Rights Reserved.                                          !
!          $Date:  2013/01/18:03:28:53                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************
!This SQC contains procedures                                          *
!which handles to Tax related common procedures                        *
!***********************************************************************
Begin-Procedure Get_Fak_Tax_Data($Ctl_Canton,$Ctl_PayEntity,$ReportEndDate,
                                 :$Fak_Language,:$Employer_Fak_Nbr,:#Employer_Fak_Pct,
                                 :$Tax_Language,:$Employer_Tax_Nbr,:#Employer_Tax_Pct,
                                 :#Employer_SI_Pct,:$SI_AHV_MBR_ID,:$SI_AHV_PROVCD,
                                 :$SI_KTG_MBR_ID,:#SI_AHV_ADM_PC,:#SI_TOT_AHV_PC,
                                 :#SI_TOT_ALV1PC,:#SI_TOT_ALV2PC)

#Debug Show '-> Get_Fak_Tax_Data '


    let $Default_Percent    = ''
    let $SI_AHV_MBR_ID      = ''
    let $SI_AHV_PROVCD      = ''
    let $SI_KTG_MBR_ID      = ''
    let #SI_AHV_ADM_PC      = 0
    let #SI_TOT_AHV_PC      = 0
    let #SI_TOT_ALV1PC      = 0
    let #SI_TOT_ALV2PC      = 0

    let $Fak_Language       = ''
    let $Tax_Language       = ''
    let $Employer_Tax_Nbr   = ''
    let $Employer_Fak_Nbr   = ''
    let #Employer_Fak_Pct_N = 0
    let #Employer_SI_Pct_N  = 0

    let #Employer_Tax_Pct   = 0
    let #Employer_Fak_Pct_Y = 0
    let #Employer_SI_Pct_Y  = 0

    let #Employer_Fak_Pct   = 0
    let #Employer_SI_Pct    = 0





Begin-select
SIC.GPCH_FK_DFLTPCT
SIC.GPCH_SI_AHV_MBR_ID
SIC.GPCH_SI_AHV_PROVCD
SIC.GPCH_SI_KTG_MBR_ID
SIC.GPCH_SI_AHV_ADM_PC
SIC.GPCH_SI_TOT_AHV_PC
SIC.GPCH_SI_TOT_ALV1PC
SIC.GPCH_SI_TOT_ALV2PC

           let $Default_Percent = rtrim(&SIC.GPCH_FK_DFLTPCT,' ')
           let $SI_AHV_MBR_ID   = rtrim(&SIC.GPCH_SI_AHV_MBR_ID,' ')
           let $SI_AHV_PROVCD   = rtrim(&SIC.GPCH_SI_AHV_PROVCD, ' ')
           let $SI_KTG_MBR_ID   = rtrim(&SIC.GPCH_SI_KTG_MBR_ID, ' ')
           let #SI_AHV_ADM_PC   = &SIC.GPCH_SI_AHV_ADM_PC
           let #SI_TOT_AHV_PC   = &SIC.GPCH_SI_TOT_AHV_PC
           let #SI_TOT_ALV1PC   = &SIC.GPCH_SI_TOT_ALV1PC
           let #SI_TOT_ALV2PC   = &SIC.GPCH_SI_TOT_ALV2PC

FROM PS_GPCH_SI_COMPANY SIC
WHERE SIC.COMPANY = $Ctl_PayEntity
AND   SIC.EFFDT   = (SELECT MAX(EFFDT) FROM PS_GPCH_SI_COMPANY SIC1
                     WHERE SIC1.COMPANY = SIC.COMPANY
                     AND   SIC1.EFFDT  <= $ReportEndDate)
End-Select


Begin-Select
FAK_STAX.GPCH_TX_STAX_NBR
FAK_STAX.GPCH_TX_FAK_NBR
FAK_STAX.GPCH_SI_PCT
FAK_STAX.GPCH_TX_FAK_PCT
FAK_STAX.GPCH_FK_LANGUAGE
FAK_STAX.GPCH_TX_LANGUAGE

  let $Fak_Language       = rtrim(&FAK_STAX.GPCH_FK_LANGUAGE, ' ')
  let $Tax_Language       = rtrim(&FAK_STAX.GPCH_TX_LANGUAGE, ' ')
  let $Employer_Tax_Nbr   = rtrim(&FAK_STAX.GPCH_TX_STAX_NBR, ' ')
  let $Employer_Fak_Nbr   = rtrim(&FAK_STAX.GPCH_TX_FAK_NBR , ' ')
  let #Employer_Fak_Pct_N = &FAK_STAX.GPCH_TX_FAK_PCT
  let #Employer_SI_Pct_N  = &FAK_STAX.GPCH_SI_PCT

FROM PS_GPCH_TX_FAK_STX FAK_STAX
WHERE FAK_STAX.COMPANY        = $Ctl_PayEntity
AND   FAK_STAX.GPCH_TX_CANTON = $Ctl_Canton
AND   FAK_STAX.EFFDT          = (SELECT max(FAK_STAX1.EFFDT) FROM PS_GPCH_TX_FAK_STX FAK_STAX1
                                 WHERE FAK_STAX1.COMPANY        = $Ctl_PayEntity
                                 AND   FAK_STAX1.GPCH_TX_CANTON = FAK_STAX.GPCH_TX_CANTON
                                 AND   FAK_STAX1.EFFDT         <= $ReportEndDate)
End-Select

!------------------------------------------------------------------

Begin-Select
FAK_STX.GPCH_TX_STAXB_PCT
FAK_STX.GPCH_RP_AMOUNT1
FAK_STX.GPCH_RP_AMOUNT2

  let #Employer_Tax_Pct   = &FAK_STX.GPCH_TX_STAXB_PCT
  let #Employer_Fak_Pct_Y = &FAK_STX.GPCH_RP_AMOUNT2
  let #Employer_SI_Pct_Y  = &FAK_STX.GPCH_RP_AMOUNT1

FROM PS_GPCH_TX_FAK_PCT FAK_STX
WHERE FAK_STX.COUNTRY        = 'CHE'
AND   FAK_STX.GPCH_TX_CANTON = $Ctl_Canton
AND   FAK_STX.EFFDT          = (SELECT max(FAK_STX1.EFFDT) from PS_GPCH_TX_FAK_PCT FAK_STX1
                                 WHERE FAK_STX1.COUNTRY        = FAK_STX.COUNTRY
                                 AND   FAK_STX1.GPCH_TX_CANTON = FAK_STX.GPCH_TX_CANTON
                                 AND   FAK_STX1.EFFDT         <= $ReportEndDate)
End-Select


!------------------------------------------------------------------

if $Default_Percent = 'Y'
   let #Employer_Fak_Pct = #Employer_Fak_Pct_Y
   let #Employer_SI_Pct  = #Employer_SI_Pct_Y
else
   let #Employer_Fak_Pct = #Employer_Fak_Pct_N
   let #Employer_SI_Pct  = #Employer_SI_Pct_N
end-if


Evaluate $Fak_Language
  when = '1'
       let $Fak_Language    = 'GER'  ! FMB changed from 'ENG' to 'GER'
       break
  when = '2'
       let $Fak_Language    = 'FRA'
       break
  when = '3'
       let $Fak_Language    = 'ITA'
       break
End-Evaluate

Evaluate $Tax_Language
  when = '1'
       let $Tax_Language    = 'GER'  ! FMB changed from 'ENG' to 'GER'
       break
  when = '2'
       let $Tax_Language    = 'FRA'
       break
  when = '3'
       let $Tax_Language    = 'ITA'
       break
End-Evaluate

#Debug Show '<- Get_Fak_Tax_Data '
End-Procedure Get_Fak_Tax_Data
!*************************************************************************************
Begin-Procedure Load_Supervisor_Details($Ctl_PayEntity,$Ctl_Date,$Emplid_Criteria,$Ctl_language_cd,
                                        :$Address_Type,:$Signature_Type,:$Signature1,:$Signature2,
                                        :$foot_text,:$SI_PHONE,:$Other_Py)
#Debug Show '-> Load_Supervisor_Details '
#Debug Show $Ctl_PayEntity ',' $Ctl_Date ',' $Emplid_Criteria ',' $Ctl_language_cd

   let $Signature_Type = '1'

Begin-select
SG.ADDRESS_TYPE
SG.GPCH_RP_SIGNATURE
SG.GPCH_RP_FROM_PYENT
SG.GPCH_RC_DESCR1
SG.GPCH_RC_DESCR2
SG.GPCH_RC_DESCR3
SG.PHONE

           let $Address_Type    = &SG.ADDRESS_TYPE
           let $Signature_Type  = &SG.GPCH_RP_SIGNATURE
           let $Signature1      =  rtrim(&SG.GPCH_RC_DESCR1,' ')
           let $Signature2      =  rtrim(&SG.GPCH_RC_DESCR2,' ')
           let $foot_text       =  rtrim(&SG.GPCH_RC_DESCR3,' ')
           let $Other_Py        =  rtrim(&SG.GPCH_RP_FROM_PYENT,' ')
           let $SI_PHONE        =  &SG.PHONE



FROM PS_GPCH_SI_COMPANY SG
WHERE SG.COMPANY = $Ctl_PayEntity
AND   SG.EFFDT   =  (SELECT MAX(EFFDT) FROM PS_GPCH_SI_COMPANY SG1
                     WHERE SG1.COMPANY = SG.COMPANY
                     AND   SG1.EFFDT  <= $Ctl_Date)
End-Select

!--------------------------------------------------------------------------

Begin-Select
SRL.GPCH_RC_DESCR3

  let $foot_text = rtrim(&SRL.GPCH_RC_DESCR3,' ')

FROM PS_GPCH_SI_COM_LNG SRL
WHERE SRL.COMPANY     = $Ctl_PayEntity
AND   SRL.LANGUAGE_CD = $Ctl_language_cd
AND   SRL.EFFDT       = (SELECT MAX(EFFDT) FROM PS_GPCH_SI_COM_LNG SR1L
                                           WHERE SR1L.COMPANY     = SRL.COMPANY
                                           AND   SR1L.LANGUAGE_CD = SRL.LANGUAGE_CD
                                           AND   SR1L.EFFDT      <= $Ctl_Date)
End-Select

#debug show $Address_Type ',' $Signature_Type ',' $Signature1 ',' $Signature2 ',' $foot_text ',' $SI_PHONE ',' $Other_Py
#Debug Show '<- Load_Supervisor_Details '
End-Procedure Load_Supervisor_Details
!*************************************************************************************
Begin-Procedure Get_Signature($Emplid,$Ctl_Curr_Pay_End_Dt,$language_cd,$Signature_Type,$Cpdescr,$HD_FOR,
                              $Other_Py,$Signature1,$Signature2,$SI_PHONE,:$PAYENT_DESCR,
                              :$JobSuper_name,:$JobPhone_num)
#Debug Show '-> Get_Signature ' $Emplid ' , ' $Ctl_Curr_Pay_End_Dt ' , ' $Signature_Type ' , ' $Cpdescr ' , ' $HD_FOR,
#Debug Show '-> Get_Signature ' $Other_Py ' , ' $Signature1 ' , ' $Signature2 ' , ' $SI_PHONE,

if $Signature_Type = '1'

   let $Where_Jobcode1 =  ' AJ.COMPANY    = '||''''|| $Ctl_PayEntity ||''''

   let $Where_Jobcode2 =  ' AND AJ.REG_REGION = ' || '''CHE'''

   let $Where_Jobcode3 =  ' AND AJ.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB AJS'
                                || ' WHERE AJS.EMPLID     = AJ.EMPLID   '
                                || ' AND   AJS.EMPL_RCD   = AJ.EMPL_RCD '
                                || ' AND   AJS.COMPANY    = AJ.COMPANY '
                                || ' AND   AJS.REG_REGION = ''CHE'''
                                || ' AND   AJS.EFFDT     <= '
                                ||'CAST(' ||''''||$Ctl_Curr_Pay_End_Dt||''''||' AS DATE))'

   let $Where_Jobcode4 =  ' AND  AJ.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB AJ2'
                                || ' WHERE AJ2.EMPLID     = AJ.EMPLID   '
                                || ' AND   AJ2.EMPL_RCD   = AJ.EMPL_RCD '
                                || ' AND   AJ2.COMPANY    = AJ.COMPANY '
                                || ' AND   AJ2.REG_REGION = ''CHE'''
                                || ' AND   AJ2.EFFDT      = AJ.EFFDT )'


   let $Where_Job = $Where_Jobcode1 || $Where_Jobcode2 || $Where_Jobcode3 || $Where_Jobcode4 || $Emplid_Criteria

   #Debug show $Where_Job

   #ifdef MICROSOFT
   Load-Lookup name = Supervisor_Details
   Table            = 'PS_JOB AJ'
   Key              = 'AJ.EMPLID'
   Return_Value     = 'AJ.JOBCODE + '';'' + AJ.SUPERVISOR_ID'
   Where            = $Where_Job
   #else
   Load-Lookup name = Supervisor_Details
   Table            = 'PS_JOB AJ'
   Key              = 'AJ.EMPLID'
   Return_Value     = 'AJ.JOBCODE||'';''||AJ.SUPERVISOR_ID'
   Where            = $Where_Job
   #end-if

end-if

!-------------------------------------------------------------------

evaluate $Signature_Type
when = '1'

         Lookup Supervisor_Details $Emplid $Return_Val
         if Not Isnull ($Return_Val)
            Unstring $Return_Val by ';' into $Super_Jobcode $Super_Emplid
            let $Super_Jobcode       =  rtrim($Super_Jobcode,' ')
            let $Super_Emplid        =  rtrim($Super_Emplid,' ')
         end-if

         #Debug Show  $Super_Jobcode ' , '  $Super_Emplid

         do Get_Super_Sex($Super_Emplid,$Super_Anrede)
         do Get-Emp-Address($Super_Emplid,$Ctl_Curr_Pay_End_Dt,'HOME',$Super_ADDLINE1,$Super_ADDLINE2,$Super_ADDLINE3,
                   $Super_ADDLINE31,$Super_ADDLINE4,$Super_ADDLINE5,$Super_ADDLINE6,$Super_Full_Name,
                   $Super_FirstName,$Super_LastName,$Super_NAME_PREFIX,$Super_NAME_TITLE,
                   $Super_NAME_ROYAL_PREFIX,$Super_NAME_ROYAL_SUFFIX,$Super_Phone,$Super_Email,
                   $Super_CITY,$Super_STATE,$Super_POSTAL)
         let $JobSuper_name =  $Super_Anrede || ' ' || $Super_FirstName  || ' ' || $Super_LastName
         let $JobPhone_num  =  rtrim($Super_Phone,' ')

break
when = '2'

         if $Other_Py <> ''
            do Get-Company-Address($Other_Py,$Ctl_Curr_Pay_End_Dt,$language_cd,$Cpoline1,$Cpoline2,$Cpoline3,$Cpoline31,
                                   $Cpoline4,$Cpoline5,$Cpoline6,$Cpodescr,$Cpodescrshrt,$Cpocity,$Cpostate,$Cpopostal,$CpBusn_Phone,$CpFax_Phone,$CpOtr_Phone)
            let $PAYENT_DESCR  =  rtrim($Cpdescr,' ') || ' ' || $HD_FOR || ' ' || rtrim($Cpodescr,' ')
         else
            let $PAYENT_DESCR  =  rtrim($Cpdescr,' ')
         end-if

         let $JobSuper_name =  $Signature1 || ' ' || $Signature2
         let $JobPhone_num  =  $SI_PHONE

break
when-other
         let $PAYENT_DESCR  =  ' '
         let $JobSuper_name =  ' '
         let $JobPhone_num  =  ' '
break
end-evaluate

#Debug Show '<- Get_Signature ' $PAYENT_DESCR ' , ' $JobSuper_name ' , ' $JobPhone_num
End-Procedure Get_Signature

!*******************************************************************************
Begin-Procedure Get_Super_Sex($JB_SUPERID,:$Super_Anrede)
let $Super_Sex     =  ''
let $Super_Anrede  =  ''

Begin-Select
PR1.SEX
FROM {Record_PersDataEffDt} PR1
WHERE PR1.EMPLID = $JB_SUPERID
{Where_PersDataEffDt_UT11}
End-Select

   let $Super_Sex      = rtrim(&PR1.SEX,' ')

    evaluate $Super_Sex
        when = 'M'
           let $Super_Anrede = $_HD_MR
        break
        when = 'F'
           let $Super_Anrede = $_HD_MRS
        break
        when-other
           let $Super_Anrede = ''
        break
    end-evaluate

End-Procedure Get_Super_Sex
!*******************************************************************************

