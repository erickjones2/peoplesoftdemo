!***********************************************************************
! GPJPSC03.sqr:  Monthly Standard Remuneration Calculation Report      *
!                (Summary)                                             *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:47:45                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !page layout and printer definition


begin-report


        do Init-Processing

        do Calc-Period

        do Build-select

        do Process-Main

        do Reset

        do Update-Prcs-Run-Status

end-report


!***********************************************************************
!                                                                      *
! Init-Processing                                                      *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Get-Language-Codes      - prcslng.sqc                  *
!               Get-GPJPSC03-runctl                                    *
!               Init-Report                                            *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!                                                                      *
!***********************************************************************
begin-procedure Init-Processing


        do Init-Datetime

        do Get-Current-Datetime

        do Define-Prcs-Vars

        do Get-Run-Control-Parms

        do Get-Language-Codes

        do Get-GPJPSC03-runctl

        do Delete-Wrk-Table

        do Init-Report


end-procedure ! Init-Processing


!***********************************************************************
!                                                                      *
! Get-GPJPSC03-runctl                                                  *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Description:  Get data from GPJP_RC_SI03 runcontrol record.          *
!                                                                      *
!***********************************************************************
begin-procedure Get-GPJPSC03-runctl


begin-select

RC.DATE_YEAR_VAL
RC.GPJP_TAX_ESTAB
RC.GPJP_RD_SELECT
RC.GPJP_PAYEE_ID_TYPE

FROM  PS_GPJP_RC_SC03 RC
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select

        let #Rc_date_year_val  = &RC.Date_year_val
        let $Rc_Gpjp_tax_estab = RTRIM(&RC.Gpjp_tax_estab, ' ')
        let $Rc_Gpjp_rd_select = RTRIM(&RC.Gpjp_rd_select, ' ')
        let $Rc_payee_id_type = RTRIM(&RC.Gpjp_payee_id_type, ' ')


end-procedure !Get-GPJPSC03-runctl


!***********************************************************************
!                                                                      *
! Delete-Wrk-Table                                                      *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Description:  Delete all records from Work Table GPJP_WRK_SC03 for   *
!               the process instance                                   *
!                                                                      *
!***********************************************************************
begin-procedure Delete-Wrk-Table


begin-SQL  on-error=Ignore
  DELETE FROM PS_GPJP_WRK_SC03
  WHERE PROCESS_INSTANCE = #prcs_process_instance
end-SQL


end-procedure !Delete-Wrk-Table


begin-procedure Ignore
  !Dummy procedure to avoid error if there are no records to delete
end-procedure


!***********************************************************************
!                                                                      *
! Init-Report                                                          *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Calls:        Init_Report_Translation    - sqrtrans.sqc              *
!               Append_Report_Translation  - sqrtrans.sqc              *
!               Get_Field_Information                                  *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header & throughout report.  Performs   *
!               Strings Table translation.  #Defines variables for     *
!               use throughout report in printing columns.             *
!                                                                      *
!***********************************************************************
begin-procedure Init-Report


!***********************************************************************
!                                                                      *
! Translations procedures & Strings Table retrievals.                  *
!                                                                      *
!***********************************************************************

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Append_Report_Translation ('GPJPSC03')

    do Get_Field_Information ('GPJPSC03','TITLE',             $GPJPSC03_Title,                  #dummy_width)
    do Get_Field_Information ('GPJPSC03','COMPANY',           $GPJPSC03_Company,                #dummy_width)
    do Get_Field_Information ('GPJPSC03','ESTAB',             $GPJPSC03_Estab,                  #dummy_width)
    do Get_Field_Information ('GPJPSC03','TOT_INS_JUN_JUL',   $GPJPSC03_Tot_ins_jun_jul,        #dummy_width)
    do Get_Field_Information ('GPJPSC03','TOT_SUB_STD_RMN',   $GPJPSC03_Tot_sub_std_rmn,        #dummy_width)
    do Get_Field_Information ('GPJPSC03','TOT_SUBJ_OCC_REV',  $GPJPSC03_Tot_subj_occ_rev,       #dummy_width)
    do Get_Field_Information ('GPJPSC03','TOT_SUB_MAT_REV',   $GPJPSC03_Tot_sub_mat_rev,        #dummy_width)
    do Get_Field_Information ('GPJPSC03','HLTH_CARD_NUM',     $GPJPSC03_Hlth_card_num,          #dummy_width)
    do Get_Field_Information ('GPJPSC03','PENS_CODE',         $GPJPSC03_Pens_code,              #dummy_width)
    do Get_Field_Information ('GPJPSC03','EMPLID',            $GPJPSC03_Emplid,                 #dummy_width)
    do Get_Field_Information ('GPJPSC03','NAME',              $GPJPSC03_Name,                   #dummy_width)
    do Get_Field_Information ('GPJPSC03','TOT_EMPL',          $GPJPSC03_Tot_empl,               #dummy_width)
    do Get_Field_Information ('GPJPSC03','AUGUST',            $GPJPSC03_August,                 #dummy_width)
    do Get_Field_Information ('GPJPSC03','SEPTEMBER',         $GPJPSC03_September,              #dummy_width)
    do Get_Field_Information ('GPJPSC03','TOT_INSURED',       $GPJPSC03_Tot_Insured,            #dummy_width)
    do Get_Field_Information ('GPJPSC03','AUGUST1',           $GPJPSC03_August1,                #dummy_width)
    do Get_Field_Information ('GPJPSC03','SEPTEMBER1',        $GPJPSC03_September1,             #dummy_width)

!***********************************************************************
!                                                                      *
! Report variables.                                                    *
!                                                                      *
!***********************************************************************

    let $ReportID              = 'GPJPSC03'          ! Printed in header
    let $ReportTitle           = $GPJPSC03_Title     ! Printed in header
    let $ReportDate            = $AsOfToday          ! Printed in header
    let $ReportTime            = $AsOfNow            ! Printed in header
    let $Report_Language       = $curr_language_cd   ! curr_language_cd resolved in prcslng.sqc


    !do Security-Param                   ! SQR Security

end-procedure ! Init-Report


!***********************************************************************
!                                                                      *
! Calc-Period                                                          *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Calculate date variables for June 1st and July 1st     *
!                                                                      *
!***********************************************************************
begin-procedure Calc-Period

     move #Rc_date_year_val to $year  9999
     let $year_june =  $year  || '0601'
     let $year_july =  $year  || '0701'
     let $SC_date   =  $year  || '0731'
     do Format-DateTime($year_june, $June1st, {DEFCMP},'','native')
     do Format-DateTime($year_july, $July1st, {DEFCMP},'','native')
     do Format-DateTime($SC_date, $July31st, {DEFCMP},'','native')

end-procedure !Calc-Period


!***********************************************************************
!                                                                      *
! Build-select                                                         *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Build dynamic select statement for main procedure      *
!                                                                      *
!***********************************************************************
begin-procedure Build-select

     move '' to $SlctSC_Estblm

     if $Rc_Gpjp_tax_estab <> ''
        concat 'AND F.GPJP_TAX_ESTAB = ' with  $SlctSC_Estblm
        concat   '''' with $SlctSC_Estblm
        concat  $Rc_Gpjp_tax_estab with  $SlctSC_Estblm
        concat   ''' ' with $SlctSC_Estblm
     end-if

end-procedure !Build-select


!***************************
begin-heading 7
!***************************

#include 'stdhdgtr.sqc'

end-heading


!***********************************************************************
!                                                                      *
! Process-Main                                                         *
!                                                                      *
!                                                                      *
! Called By:    Begin-Report                                           *
!                                                                      *
! Description:  Main processing                                        *
!                                                                      *
!***********************************************************************
begin-procedure Process-Main

let $Tax_estab_save = ' '
let #Counter4  = 0
let #Counter6  = 0
let #Counter7  = 0
let #Counter11 = 0
let #Counter15 = 0
let #Maternity_Counter  = 0
let #Maternity_Counter1 = 0
let #Maternity_Counter2 = 0
let #month     = 0
let $No_records = 'Y'



begin-select DISTINCT
F.EMPLID
F.GPJP_TAX_ESTAB
F.GPJP_HLTH_CARD_NUM
F.GPJP_PENS_CODE
F.GPJP_SUBJECT_IND
F.GPJP_ORC_IND_N
F.GPJP_ORC_IND_N1
F.GPJP_ORC_IND_N2

  let $Mat_leave_flg = 'N'
  if $Tax_estab_save = ' '
     move &F.Gpjp_tax_estab  to $Tax_estab_save
     let $Estab  = &F.Gpjp_tax_estab
     let $EstabType = 'SC'
     do Get-Estab-Name
  end-if

  if &F.Gpjp_tax_estab <>  $Tax_estab_save
     let $Estab = $Tax_estab_save
     do TaxEstab-Change
     move &F.Gpjp_tax_estab  to $Tax_estab_save
  end-if


  let $Estab  = &F.Gpjp_tax_estab
  let $EstabType = 'SC'
  let $Emplid = &F.Emplid
  let #Health_card_num = &F.Gpjp_hlth_card_num
  let #Pension_code = &F.Gpjp_pens_code
  let $No_records    = 'N'

 if &RC.Gpjp_rd_select = '0'
  if &F.Gpjp_subject_ind = '30'
     add 1 to #Counter6
     let #month = 06
  else
     if &F.Gpjp_subject_ind = '11'
        add 1 to #Maternity_Counter
        let $Mat_leave_flg = 'Y'
        let #month = 06
     else
        if &F.Gpjp_orc_ind_n2 = 1
                add 1 to #Counter7
                let #month = 07
        else
                if &F.Gpjp_orc_ind_n1 = 1
                        add 1 to #Counter11
                        let #month = 08
                else
                   if &F.Gpjp_orc_ind_n1 = 2
                      add 1 to #Maternity_Counter1
                      let #month = 08
                      let $Mat_leave_flg = 'Y'
                   else
                        if &F.Gpjp_orc_ind_n = 1
                           add 1 to #Counter15
                           let #month = 09
                        else
                          if &F.Gpjp_orc_ind_n = 2
                             add 1 to #Maternity_Counter2
                             let $Mat_leave_flg = 'Y'
                             let #month = 09
                          end-if
                        end-if
                   end-if
                end-if
        end-if
     end-if
  end-if
 else
        if &F.Gpjp_subject_ind = '30' and &F.Gpjp_orc_ind_n1 = 0 and &F.Gpjp_orc_ind_n = 0
             add 1 to #Counter6
             let #month = 06
        else
           if &F.Gpjp_subject_ind = '11' and &F.Gpjp_orc_ind_n1 = 0 and &F.Gpjp_orc_ind_n = 0
              add 1 to #Maternity_Counter
              let $Mat_leave_flg = 'Y'
              let #month = 06
           else
                if &F.Gpjp_subject_ind = '10' and &F.Gpjp_orc_ind_n2 = 1
                        add 1 to #Counter7
                        let #month = 07
                else
                        if &F.Gpjp_orc_ind_n1 = 1
                                add 1 to #Counter11
                                let #month = 08
                        else
                           if  &F.Gpjp_orc_ind_n1 = 2 and &F.Gpjp_orc_ind_n <> 2
                              add 1 to #Maternity_Counter1
                              let #month = 08
                              let $Mat_leave_flg = 'Y'
                           else
                                if &F.Gpjp_orc_ind_n = 1
                                   add 1 to #Counter15
                                   let #month = 09
                                else
                                   if &F.Gpjp_orc_ind_n = 2
                                      add 1 to #Maternity_Counter2
                                      let #month = 09
                                      let $Mat_leave_flg = 'Y'
                                   end-if
                                end-if
                          end-if
                        end-if
                end-if
           end-if
        end-if
 end-if


  do Get-Personal-Data

  do Load-Wrk-Table

FROM PS_GP_CAL_RUN A,
      PS_GP_CAL_RUN_DTL B,
      PS_GP_CALENDAR C,
      PS_GP_RUN_TYPE E,
      PS_GPJP_MTHRMN_TBL F
WHERE A.CAL_RUN_ID = B.CAL_RUN_ID
AND B.GP_PAYGROUP = C.GP_PAYGROUP
AND B.CAL_ID = C.CAL_ID
AND A.RUN_FINALIZED_IND = 'Y'
AND C.RUN_TYPE = E.RUN_TYPE
AND E.CALC_TYPE = 'P'
AND C.PYMT_DT >= $June1st
AND C.PYMT_DT < $July1st
AND A.CAL_RUN_ID = F.CAL_RUN_ID
AND B.GP_PAYGROUP = F.GP_PAYGROUP
AND B.CAL_ID = F.CAL_ID
[$SlctSC_Estblm]
ORDER BY F.GPJP_TAX_ESTAB

end-select

   if $No_records <> 'Y'
        let $End = 'Y'
        do TaxEstab-Change
   end-if

end-procedure ! Process-Main


!***********************************************************************
!                                                                      *
! Check-Job                                                            *
!                                                                      *
!                                                                      *
! Called By:    Print-Details                                          *
!                                                                      *
! Description:  Reads Social Insurance Payee table to determine if     *
!               employee was Enrolled/Re-enrolled in June of the       *
!               current year                                           *
!                                                                      *
!***********************************************************************
begin-procedure Check-Job

begin-select
SC.EMPLID
SC.EFFDT

      add 1 to #Counter4

FROM  PS_GPJP_SC_PYE_DTA SC
WHERE SC.GPJP_TAX_ESTAB = $Estab
AND   SC.EFFDT = (SELECT MIN(SC1.EFFDT)
                  FROM PS_GPJP_SC_PYE_DTA SC1
                  WHERE SC1.EMPLID = SC.EMPLID
                  AND SC1.EFFDT     >= $June1st
                  AND SC1.EFFDT     <= $July1st)
AND   SC.GPJP_CHG_FLG IN ('01','02','10') ! To consider Enrollment/Re-enrollment cases only
end-select

end-procedure !Check-Job


!***********************************************************************
!                                                                      *
! Get-Personal-Data                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Reads Personal Data table to get Employee Name         *
!                                                                      *
!***********************************************************************
begin-procedure Get-Personal-Data

let $Name = ' '

begin-select
NM.EMPLID
NM.NAME

     let $Name = &NM.Name

FROM  PS_PERSON_NAME NM
WHERE NM.EMPLID         = $Emplid

end-select

end-procedure !Get-Personal-Data


!***********************************************************************
!                                                                      *
! Load-Wrk-Table                                                       *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Loads the Work Table                                   *
!                                                                      *
!***********************************************************************
begin-procedure Load-Wrk-Table

begin-SQL  on-error=SQL-ERROR
INSERT INTO PS_GPJP_WRK_SC03 (PROCESS_INSTANCE,
                              GPJP_CHANGED_MTH,
                              GPJP_HLTH_CARD_NUM,
                              GPJP_PENS_CODE,
                              EMPLID,
                              NAME,
                              GPJP_MAT_LEAVE_FLG)
                     VALUES (#prcs_process_instance,
                             #month,
                             #Health_card_num,
                             #Pension_code,
                             $Emplid,
                             $Name,
                             $Mat_leave_flg);
End-SQL


end-procedure !Load-Wrk-Table


!***********************************************************************
!                                                                      *
! TaxEstab-Change                                                      *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  This procedure is executed whenever a change is        *
!               detected in Tax Establishment number.                  *
!                                                                      *
!***********************************************************************
begin-procedure TaxEstab-Change

   do Get-Estab-Name
   do Print-Details
   let #Counter4  = 0
   let #counter6 = 0
   let #counter7 = 0
   let #counter11 = 0
   let #counter15 = 0
   let #counter16 = 0
   do page_break

end-procedure !TaxEstab-Change


!***********************************************************************
!                                                                      *
! Print-Details                                                        *
!                                                                      *
!                                                                      *
! Called By:    Company-Change                                         *
!               TaxEstab-Change                                        *
!                                                                      *
! Description:  Prints the detail lines                                *
!                                                                      *
!***********************************************************************
begin-procedure Print-Details

      do Check-Job


      print $GPJPSC03_Estab              (+2,15,30)
      print $Estab                       (0,67,15)

      print $GPJPSC03_Tot_ins_jun_jul    (+1,15,70)
      print  #Counter4                   (0,112,9)  edit 9,999,990

      print $GPJPSC03_Tot_sub_std_rmn    (+1,15,70)
      print  #Counter6                   (0,112,9)  edit 9,999,990

      print $GPJPSC03_Tot_subj_occ_rev   (+1,15,70)
      print  #Counter7                   (0,112,9)  edit 9,999,990

      print $GPJPSC03_Tot_sub_mat_rev   (+1,15,70)
      print  #Maternity_Counter          (0,112,9)  edit 9,999,990

      let #Counter16 = #Counter4 + #Counter6 + #Counter7 + #Counter11 + #Counter15
      let #Counter16 = #Counter16 + #Maternity_Counter + #Maternity_Counter1 + #Maternity_Counter2

      if $Rc_payee_id_type = '1'
      print $GPJPSC03_Hlth_card_num      (+3,67,28)
      else
      print $GPJPSC03_Pens_code    (+3,67,28)
      end-if
      print $GPJPSC03_Emplid             (0,94,16)
      print $GPJPSC03_Name               (0,120,10)

      let $Print_head = 'Y'
      let #Month_save = 0
      let #counter = 0

begin-select
WRK.GPJP_CHANGED_MTH
WRK.GPJP_HLTH_CARD_NUM
WRK.GPJP_PENS_CODE
WRK.EMPLID
WRK.NAME
WRK.GPJP_MAT_LEAVE_FLG

     let #Month_num = &WRK.Gpjp_changed_mth
     let #Health_card = &WRK.Gpjp_hlth_card_num
     let #Pension_cd = &WRK.Gpjp_pens_code
     let $Mat_leave_flg = &WRK.Gpjp_mat_leave_flg

     if  #Month_save <> #Month_num

         if #Month_save <> 0 and #counter > 0
            print $GPJPSC03_Tot_empl     (+2,94,25)
            print #Counter               (0,113,8) edit 99999990
            let #counter = 0
         end-if

         let $Print_head = 'Y'
         let $Mat_head_flg = 'Y'
         let #Month_save = #Month_num
     end-if

   if $Mat_leave_flg = 'Y' and $Mat_head_flg = 'Y' and ( #Month_num = 8 or #Month_num = 9 ) and #counter > 0
        print $GPJPSC03_Tot_empl     (+2,94,25)
        print #Counter               (0,113,8) edit 99999990
        let #counter = 0
   end-if
   if  $Mat_leave_flg <> 'Y'
     if  $Print_head = 'Y'
         if #Month_num = 8
             print $GPJPSC03_August        (+2,15,50)
         else

             print $GPJPSC03_September    (+2,15,50)
         end-if
        if $Rc_payee_id_type = '1'
         print #Health_card              (0,67,8) edit 99999999
         else
         print #Pension_cd              (0,67,8) edit 99999999
         end-if
         print &WRK.Emplid               (0,94,11)
         print &WRK.Name                 (0,120,30)
         let $Print_head = 'N'

     else

        if $Rc_payee_id_type = '1'
         print #Health_card              (+1,67,8) edit 99999999
         else
         print #Pension_cd              (+1,67,8) edit 99999999
         end-if
         print &WRK.Emplid               (0,94,11)
         print &WRK.Name                 (0,120,30)
     end-if

    else
         if  $Mat_head_flg = 'Y'
             if #Month_num = 8
                 print $GPJPSC03_August1        (+2,15,50)

             else

                 print $GPJPSC03_September1    (+2,15,50)
             end-if

        if $Rc_payee_id_type = '1'
         print #Health_card              (0,67,8) edit 99999999
         else
         print #Pension_cd              (0,67,8) edit 99999999
         end-if
             print &WRK.Emplid               (0,94,11)
             print &WRK.Name                 (0,120,30)
             let $Mat_head_flg = 'N'

         else

        if $Rc_payee_id_type = '1'
         print #Health_card              (+1,67,8) edit 99999999
         else
         print #Pension_cd              (+1,67,8) edit 99999999
         end-if
             print &WRK.Emplid               (0,94,11)
             print &WRK.Name                 (0,120,30)
         end-if
    end-if

     add 1 to #counter

FROM PS_GPJP_WRK_SC03 WRK
WHERE (WRK.GPJP_CHANGED_MTH = 08
     OR WRK.GPJP_CHANGED_MTH = 09)
AND PROCESS_INSTANCE = #prcs_process_instance
ORDER BY WRK.GPJP_CHANGED_MTH,WRK.GPJP_MAT_LEAVE_FLG,WRK.GPJP_HLTH_CARD_NUM,WRK.GPJP_PENS_CODE

end-select

        print $GPJPSC03_Tot_empl     (+2,94,25)
        print #Counter               (0,113,8)  edit 99999990

        print $GPJPSC03_Tot_Insured  (+3,94,20)
        print #Counter16             (0,113,8)  edit 99999990

        do Delete-Wrk-Table


end-procedure  !Print-Details


!***********************************************************************
!                                                                      *
! page_break                                                           *
!                                                                      *
!                                                                      *
! Called By:    Company-Change                                         *
!               TaxEstab-Change                                        *
!                                                                      *
! Description:  Performs Page break and ensures end of report line     *
!               is printed.                                            *
!                                                                      *
!***********************************************************************
begin-procedure page_break

    if $End = 'Y'
      do Reset
    end-if

    new-page
end-procedure  !page_break


!***********************************************************************
!                                                                      *
!                                                                      *
! SQCS included in the report                                          *
!                                                                      *
!***********************************************************************
#include 'getestab.sqc'     ! Get Establishment Data from the GPJP_TAX_ESTAB
#include 'getcodta.sqc'     ! Get selected fields from the Company Table
#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcsapi.sqc'      ! Replaces stdapi.sqc
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        ! Reset printer procedure
#include 'number.sqc'   !Routines to format numbers
#include 'datetime.sqc' !Routines for date and time formatting
