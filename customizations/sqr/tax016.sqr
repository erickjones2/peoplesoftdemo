!**********************************************
!  TAX016:  Default Tax Data Report - U.S.    *
!**********************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2020, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  32284399                                            !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'                 ! Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX016' to $ReportID
  move 'Default Tax Data Report - U.S.' to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  if $Prcs_Process_Instance = ''
    do Get-From-Thru-Dates
  else
    do Select-Parameters
    move $RC_PAY.FromDate to $FromDate
    move $RC_PAY.ThruDate to $AsOfDate
    move $RC_PAY.ThruDate to $ThruDate
  end-if
end-procedure

begin-heading 8

  #include 'stdhdg02.sqc'
  #include 'stdhdg08.sqc'
  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if
  print 'Pay Group'        (5,1)
  print $PayGroup          (0,13)
  print $PayGroupName      (0,17)
  print 'Employee ID'                                      (+2,3)
  print 'Name'                                             (0,15)
  print 'Hire Date'                                        (0,41)
  print '-- Fed Data ------'                               (0,54)
  print '-------- State Data --------'                     (0,75)
  print '------ Local Data ------'                         (0,107)
  print '---------------- Exceptions -----------------'    (0,134)

  print 'Tax'                                              (+1,55)
  print 'Allow'                                            (0,63)
  print 'Tax'                                              (0,82)
  print 'State'                                            (0,96)
  print 'Local'                                            (0,113)

  print 'Status'                                           (+1,55)
  print '/DEP $'                                           (0,63)
  print 'State'                                            (0,75)
  print 'Status'                                           (0,82)
  print 'Allow'                                            (0,90)
  print 'Resident?'                                        (0,96)
  print 'Allow'                                            (0,107)
  print 'Resident?'                                        (0,113)
  print 'Locality'                                         (0,123)

end-heading

Begin-Procedure Process-Main

Begin-SELECT

A.COMPANY,
D.PAYGROUP,
A.EMPLID,
A.EFFDT,
A.FWT_MAR_STATUS,
A.FWT_ALLOWANCES,
B.STATE,
B.SWT_MAR_STATUS,
B.SWT_ALLOWANCES,
B.RESIDENT,
A.FWT_FORM_VERSION,
A.FWT_TTL_DEP_AMT

  if &A.Emplid <> $Emplid
      add 1 to #Employees
      move &A.Emplid to $Emplid
      move 'N' to $PrintSwitch
  end-if

  if &A.Company <> $Company
      or &D.Paygroup <> $Paygroup

      if Rtrim($Company,' ') <> ''
            and RTRIM($PAYGROUP,' ') <> ''

          NEW-PAGE
      end-if

      move &A.Company to $Company
      move &D.Paygroup to $Paygroup
  end-if

  move &A.Emplid  to $Emplid
  move &A.Effdt   to $Effdt
  let $State = rtrim(&B.State, ' ')
  move ' '        to $Locality
  move ' '        to $Resident
  move ' '        to $LWT_Allowances

  do Get-Local-Data

  if $PrintSwitch <>'Y'
      do Print-Employee-Data
  end-if

FROM PS_FED_TAX_DATA A,
     PS_STATE_TAX_DATA B,
     PS_JOB D

WHERE A.LAST_ACTION = 'D'
  AND A.EFFDT  >= $FromDate
  AND A.EFFDT  <= $AsOfDate
  AND D.EMPLID  = A.EMPLID
  AND D.EFFDT   = A.EFFDT
  AND B.EMPLID  = A.EMPLID
  AND B.COMPANY = A.COMPANY
  AND B.EFFDT   = A.EFFDT

ORDER BY A.COMPANY,
         D.PAYGROUP,
         A.EMPLID,
         A.EFFDT,
         B.STATE

End-SELECT

End-Procedure

Begin-Procedure Get-Local-Data

Begin-Select

C.LWT_ALLOWANCES,
C.RESIDENT,
C.LOCALITY
C.STATE

  If rtrim(&C.State, ' ') = $State
     move &C.LWT_Allowances to $LWT_Allowances
     move &C.Resident       to $Resident
     move &C.Locality       to $Locality
  end-if

  do Print-Employee-Data
  move 'Y' to $PrintSwitch

FROM PS_LOCAL_TAX_DATA C

WHERE C.EMPLID  = $Emplid
  AND C.COMPANY = $Company
  AND C.EFFDT   = $Effdt

ORDER BY C.LOCALITY

End-SELECT

End-Procedure

Begin-Procedure Print-Employee-Data

  print &A.Emplid                      (+1,1)    on-break level=1 skiplines=1

  do Get-Employee-Data
  move &X.Business_unit to $Busunit
  let $Recname  = 'LOCATION_TBL'
  do Get-Setid($Busunit, $Recname, $Setid)
  let $Location = rtrim(&X.Location, ' ')
  do Get-Location-Name
  do Get-Paygroup-Data

  print &Y.Name                        (0,15,20) on-break level=1
  
  move $Effdt   to $Effdt-P  

#ifdef MICROSOFT
  do Convert-To-DTU-Date ($Effdt, $Effdt-P) 
#endif

  print $Effdt-P                       (0,41)    on-break level=1
  print &A.FWT_Mar_Status              (0,57)    on-break level=1
  if &A.FWT_FORM_VERSION = 'A'
     print &A.FWT_Allowances           (0,63)    on-break level=1
  else
     print &A.FWT_TTL_DEP_AMT          (0,63)
  end-if 
  print $State                         (0,76)
  print &B.SWT_Mar_Status              (0,84)
  print &B.SWT_Allowances              (0,91) 
  print &B.Resident                    (0,99)
  print $LWT_Allowances                (0,108)
  print $Resident                      (0,116)
  print $Locality                      (0,123)

  if &ZZ.Country <> &PGT.Country

      print ' PayGroup/Location Country do not match' (0,133) on-break level=2
  end-if

end-procedure

begin-procedure Get-Employee-Data

begin-SELECT LOOPS=1

X.DEPTID, X.LOCATION, Y.NAME, X.EFFDT, X.EFFSEQ, X.BUSINESS_UNIT

FROM  PS_JOB X, PS_PERSON_NAME Y

WHERE Y.EMPLID = X.EMPLID
  AND X.EMPLID = $Emplid
  AND X.EFFDT <= $EffDt

ORDER BY X.EFFDT DESC, X.EFFSEQ DESC

end-SELECT

end-procedure

#include 'getcodta.sqc'  ! Get-Company-Data procedure
#include 'getpgdta.sqc'  ! Get-Paygroup-Data procedure
#include 'getsetid.sqc'  ! Get-Setid procedure
#include 'getlocnm.sqc'  ! Get-Location-Name procedure
#include 'readxlat.sqc'  ! Read-Translate-Table procedure
#include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#Include 'datetime.sqc'  ! Routines for date and time formatting
#Include 'datemath.sqc'  ! Routines for date calculation
#Include 'number.sqc'    ! Routines to format numbers
#include 'getftdts.sqc'  ! Routines to prompt for From - To Dates

#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
