!-----------------------------------------------------------------------
!  STES018:  Stock Purchase Contribution Refunds
!-----------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:51:13                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!-----------------------------------------------------------------------
! Program Descr:  Summary report of Payroll Refunds
!-----------------------------------------------------------------------
! Prompts:  Process Group, Employee Nbr, From/Thru Date, Reprint
!-----------------------------------------------------------------------

  #include 'setenv.sqc' !Set environment

Begin-Setup

  #include 'ptpsl177.sqc'

End-Setup

!-----------------------------------------------------------------------
Begin-Program
!-----------------------------------------------------------------------

  do Init-Report
  do Process-Main
  do Reset
  do Successful-EOJ

  let $CurrentTime = datenow()
  show 'Process ended at:   ' $SysDateTime      !standard output info to sqr.log

End-Program

!-----------------------------------------------------------------------
! Print Report Header
!-----------------------------------------------------------------------
Begin-Heading 08

  #include 'stdhdg01.sqc'

  print $StockIdLbl                                        (03,001,008)
  print ':'                                                (  ,   ,001)
  print $RC_Stock_ID                                       (  ,018,010)

  print $FromLbl                                           (  ,073,004)
  print ':'                                                (  ,   ,001)
  print $FromDate                                          (  , +1,010)

  print $ThruLbl                                           (  , +2,004)
  print ':'                                                (  ,   ,001)
  print $ThruDate                                          (  , +1,010)

  print $StockPlanLbl                                      (04,001,010)
  print ':'                                                (  ,   ,001)
  print $RC_Stock_Plan                                     (  ,018,010)

  print $PrcsGrpLbl                                        (05,001,013)
  print ':'                                                (  ,   ,001)
  print $PrcsGrp                                           (  ,018,010)

  print $ReprintLbl                                        (06,001,007)
  print ':'                                                (  ,   ,001)
  print $RC_Reprint                                        (  ,018,001)

  print $NameLbl                                           (08,001,030)
  print $EmplidLbl                                         (  ,032,011)
  print $EmplRcdLbl                                        (  ,045,008)
  print $PeriodEndLbl                                      (  ,055,013)
  print $CompanyLbl                                        (  ,070,007)
  print $PayGroupLbl                                       (  ,079,008)
  print $SourceLbl                                         (  ,089,006)
  print $RefundLbl                                         (  ,127,006)
  print $CurrencyLbl                                       (  ,135,008)
  if $RC_Reprint = 'Y'
    print $PrDateLbl                                       (  ,145,010)
  end-if
  print '-'                                                (09,001,155) fill

End-Heading

!-----------------------------------------------------------------------
! Function:    Init-Report
! Description: Prompt for run-time parameters
!-----------------------------------------------------------------------
Begin-Procedure Init-Report

  let $ReportID = 'STES018'
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  do Get-Report-Language
  let $AsOfDate = $AsOfToday

  if $prcs_process_instance = ''
  else
    do Get-SQR-Parms                   ! Get Run Control Values
  end-if

  let $RC_Reprint     = rtrim($RC_Reprint_Prompt,' ')

  show 'Reprint:       ' $RC_Reprint_Prompt
  show 'Stock ID:      ' $RC_Stock_ID
  show 'From Date:     ' $RC_FromDate
  show 'Thru Date:     ' $RC_ThruDate

  if $RC_Stock_Plan <> ''
    show 'Stock Plan:    ' $RC_Stock_Plan
  end-if

  if $RC_PrcsGrp <> ''
    show 'Prcs Group:    ' $RC_PrcsGrp
  end-if

  if $RC_Emplid <> ''
    show 'Emplid:        ' $RC_Emplid
  end-if

  do Format-DateTime ($RC_FromDate, $FromDate, {DEFDATE}, '', '')
  do Format-DateTime ($RC_ThruDate, $ThruDate, {DEFDATE}, '', '')

  show ' '
  let $CurrentTime = datenow()
  show 'Process started at: ' $SysDateTime      !standard output info to sqr.log

  do Build-Where-Clause

End-Procedure Init-Report

!-----------------------------------------------------------------------
! Function:    Report-Translation
! Description: 
!-----------------------------------------------------------------------
Begin-Procedure Report-Translation

  do Init_Report_Translation ('STOCK', $language_cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK',   'COMPANY',      $CompanyLbl,   #DW)
  do Get_Field_Information ('STOCK',   'PAYGROUP',     $PayGroupLbl,  #DW)
  do Get_Field_Information ('STOCK',   'STOCK_ID',     $StockIdLbl,   #DW)
  do Get_Field_Information ('STOCK',   'STOCK_PLAN',   $StockPlanLbl, #DW)
  do Get_Field_Information ('STOCK',   'PROCESS_GRP',  $PrcsGrpLbl,   #DW)
  do Get_Field_Information ('STOCK',   'NAME',         $NameLbl,      #DW)
  do Get_Field_Information ('STOCK',   'EMPLID',       $EmplidLbl,    #DW)
  do Get_Field_Information ('STOCK',   'CURRENCY_CD',  $CurrencyLbl,  #DW)
  do Get_Field_Information ('STOCK',   'TOTAL',        $TotalLbl,     #DW)
  do Get_Field_Information ('STOCK',   'GRAND_TOTAL',  $GrndTotLbl,   #DW)
  do Get_Field_Information ('STOCK',   'OFFERING_ID',  $OfferingLbl,  #DW)
  do Get_Field_Information ('STOCK',   'PURCHASE_DT',  $PeriodEndLbl, #DW)
  do Get_Field_Information ('STOCK',   'FROM',         $FromLbl,      #DW)
  do Get_Field_Information ('STOCK',   'THRU',         $ThruLbl,      #DW)
  do Get_Field_Information ('STOCK',   'ST_PR_DT',     $PrDateLbl,    #DW)

  do Get_Field_Information ('STES018', 'REPORT_TITLE', $ReportTitle,  #DW)
  do Get_Field_Information ('STES018', 'EMPL_RCD',     $EmplRcdLbl,   #DW)
  do Get_Field_Information ('STES018', 'REPRINT',      $ReprintLbl,   #DW)
  do Get_Field_Information ('STES018', 'REFUND',       $RefundLbl,    #DW)
  do Get_Field_Information ('STES018', 'SOURCE',       $SourceLbl,    #DW)

End-Procedure

!-----------------------------------------------------------------------
! Section: Build-Where-Clause
! Descr:   Construct portions of where clause, to be used in the main select,
!          based on report parameters choosen.
!-----------------------------------------------------------------------
Begin-Procedure Build-Where-Clause

  let $SQLQuote      = ''''
  let $WhereReprint  = ''
  let $WhereNew      = ''

  if $RC_Stock_Plan <> ''
    let $WhereStockPlan = ' and B.STOCK_PLAN  = '   || $SQLQuote || $RC_Stock_Plan || $SQLQuote
  else
    let $WhereStockPlan = ''
  end-if

  if $RC_Emplid <> ''
    let $WhereEmplid    = ' and B.EMPLID = '        || $SQLQuote || $RC_Emplid     || $SQLQuote
  else
    let $WhereEmplid    = ''
  end-if

  if $RC_PrcsGrp <> '' 
    let $WherePrcsGrp   = ' and B.PROCESS_GROUP  = '  || $SQLQuote || $RC_PrcsGrp    || $SQLQuote
  else
    let $WherePrcsGrp   = ''
  end-if

  if $RC_Reprint = 'Y'
    if $RC_FromDate <> ''
       let $WhereFromDate = ' and B.ST_PR_DT  >= '    || $SQLQuote || $RC_FromDate   || $SQLQuote
    else
       let $WhereFromDate = ''
    end-if
    if $RC_ThruDate <> ''
       let $WhereThruDate = ' and B.ST_PR_DT  <= '    || $SQLQuote || $RC_ThruDate   || $SQLQuote
    else
       let $WhereThruDate = ''
    end-if
    let $WhereReprint     = ' and B.ST_PR_DT IS NOT NULL'
  else
    if $RC_FromDate <> ''
       let $WhereFromDate = ' and B.PERIOD_END_DT  >= ' || $SQLQuote || $RC_FromDate || $SQLQuote
    else
       let $WhereFromDate = ''
    end-if
    if $RC_ThruDate <> ''
       let $WhereThruDate = ' and B.PERIOD_END_DT  <= ' || $SQLQuote || $RC_ThruDate || $SQLQuote
    else
       let $WhereThruDate = ''
    end-if
    let $WhereReprint     = ' and B.ST_PR_DT IS NULL'
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Main
! Description: This is the main report procedure.  Selects and prints
!              share disposition by employee.
!-----------------------------------------------------------------------
Begin-Procedure Process-Main

Begin-Select

B.PROCESS_GROUP                                            () on-break print=never level=1 procedure=PrcsGrp-Change
B.COMPANY
B.PAYGROUP
A.NAME
B.PERIOD_END_DT
B.EMPLID
B.EMPL_RCD
B.OFFERING_ID
B.ST_REFUND_SRC
B.ESPP_RESIDUAL_AMT
B.TO_CUR
B.ST_PR_DT
B.STOCK_PLAN
B.SEQNO

  let $Print       = 'Y'
  let $PrcsGrp     = rtrim(&b.process_group,' ')
  let $Name        = rtrim(&a.name,' ')
  let $Emplid      = rtrim(&b.emplid,' ')
  let $PeriodEndDt = rtrim(&b.period_end_dt,' ')
  let $Company     = rtrim(&b.company,' ')
  let $PayGroup    = rtrim(&b.paygroup,' ')
  let $FieldValue  = rtrim(&b.st_refund_src,' ')
  let $FieldName   = 'ST_REFUND_SRC'
  do Read-Translate-Table
  let $Source      = $XlatLongName
  let #ResidualAmt = &b.espp_residual_amt
  let $PayrollDt   = rtrim(&b.st_pr_dt,' ')


  do Print-Detail

  let #PrcsResidualAmt  = #PrcsResidualAmt + #ResidualAmt

  if $RC_Reprint = 'N'
    do Update-Refund
  end-if

from  PS_ST_PERSON_NAME A,
      PS_ST_REFUND_ESPP B
where A.EMPLID          = B.EMPLID
  and B.STOCK_ID        = $RC_Stock_ID
  and B.STOCK_PLAN_TYPE = 'E'
  and B.ST_SEND_SRC     = 'R'
  and B.ESPP_REFUND_STS = 'R'
  [$WhereFromDate]
  [$WhereThruDate]
  [$WhereStockPlan]
  [$WhereEmplid]
  [$WherePrcsGrp]
  [$WhereReprint]
order by B.PROCESS_GROUP,
         B.COMPANY,
         B.PAYGROUP,
         A.NAME,
         B.PERIOD_END_DT

End-Select

  if $Print = 'Y'
    do Print-Totals
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Detail
! Descr:   Prints the report
!-----------------------------------------------------------------------
Begin-Procedure Print-Detail

  print $Name                                              (+1,001,030)
  print $Emplid                                            (  ,032,011)
  print &b.empl_rcd                                        (  ,051,002) edit 99
  do Format-DateTime ($PeriodEndDt,$out, {DEFDATE}, '', '')
  print $out                                               (  ,055,010)
  print $Company                                           (  ,070,003)
  print $PayGroup                                          (  ,079,003)
  print $Source                                            (  ,089,020)
  print #ResidualAmt                                       (  ,111,022) edit 999,999,999,999.999999
  print &b.to_cur                                          (  ,135,003)
  do Format-DateTime ($PayrollDt,$out, {DEFDATE}, '', '')
  print $out                                               (  ,145,010)
  
End-Procedure

!-----------------------------------------------------------------------
! Procedure: PrcsGrp-Change
! Descr:     Prints Totals for each process group and advances a new page
!-----------------------------------------------------------------------
Begin-Procedure PrcsGrp-Change

  next-listing need=4
  let $ChangeLbl = $PrcsGrpLbl || ' ' || $TotalLbl || ':'
  print '-'                                                (+2,001,155) fill
  print $ChangeLbl                                         (+1,032,   )
  print #PrcsResidualAmt                                   (  ,111,022) edit 999,999,999,999.999999
  print '-'                                                (+1,001,155) fill
  let #TotalResidualAmt = #TotalResidualAmt + #PrcsResidualAmt
  let #PrcsResidualAmt  = 0
  new-page

End-Procedure

!-----------------------------------------------------------------------
! Print Totals
!-----------------------------------------------------------------------
Begin-Procedure Print-Totals

  next-listing need=4
  let $ChangeLbl = $PrcsGrpLbl || ' ' || $TotalLbl || ':'
  print '-'                                                (+2,001,155) fill
  print $ChangeLbl                                         (+1,032,   )
  print #PrcsResidualAmt                                   (  ,111,022) edit 999,999,999,999.999999
  print '-'                                                (+1,001,155) fill
  let #TotalResidualAmt = #TotalResidualAmt + #PrcsResidualAmt

  next-listing need=4
  print '-'                                                (+2,001,155) fill
  print $GrndTotLbl                                        (+1,032,   )
  print ':'                                                (  ,   ,001)
  print #TotalResidualAmt                                  (  ,111,022) edit 999,999,999,999.999999
  print '-'                                                (+1,001,155) fill

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Update-Refund
!-----------------------------------------------------------------------

Begin-Sql
update PS_ST_REFUND_ESPP
   set ST_PR_DT        = $AsofToday
 where EMPLID          = &b.emplid
   and EMPL_RCD        = &b.empl_rcd
   and STOCK_ID        = $RC_Stock_ID
   and STOCK_PLAN_TYPE = 'E'
   and STOCK_PLAN      = &b.stock_plan
   and OFFERING_ID     = &b.offering_id
   and PERIOD_END_DT   = &b.period_end_dt
   and PROCESS_GROUP   = &b.process_group
   and COMPANY         = &b.company
   and PAYGROUP        = &b.paygroup
   and SEQNO           = &b.seqno

End-Sql

End-Procedure

!-----------------------------------------------------------------------
! SQC Files for called procedures
!-----------------------------------------------------------------------
#include 'prcsapi.sqc'   !Update Process Request API
#include 'prcsdef.sqc'   !Update Process Request variable declare
#include 'askftd.sqc'    !Routines to accept from - thru dates
#include 'eoj.sqc'       !End of Job procedure
#include 'sqrtrans.sqc'  !Access Strings Table
#include 'getrplng.sqc'  !Gets the report language
#include 'reset.sqc'     !End of Program
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date arithmetic
#include 'strunctl.sqc'  !Stock Admin controls
#include 'readxlat.sqc'
