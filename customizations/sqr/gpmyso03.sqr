!***********************************************************************
! GPMYSO03:  SOCSO Form 8A: Monthly Schedule of Contributions           *
!***********************************************************************
!***********************************************************************
!                                                                *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2019, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                                                                                *
!                                                                                                                                *
!       $Release:  HR92                                                *
!           $Bug:  29589818                                            *
!                                                                                                                                *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!***********************************************************************
!22/09/06        1332380000   Employee's IC (old or new) number is     *
!                              right justified in SOCSO Form A file    *
!                                   and file positioning is incorrect  *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup01.sqc'  !Printer and page-size initialization


begin-setup
  page-size 87 140
    declare printer
      type          = HPLASERJET
      orientation   = portrait
      chars-inch    = 16.6
      top-margin    = 0.30
      left-margin   = 0.25
      font          = 4
      point-size    = 8
      lines-inch    = 7
      declare-variable
      date $strtone
      date $endone
      end-declare
 end-setup
 
 

begin-report

  do Init-Processing
  Move &SysDateTime to $AsOfToday

end-report
begin-procedure Init-Processing

        do Init-Datetime
        do Get-Current-Datetime
        do Define-Prcs-Vars
        do Init-Number
        do Init-Report
       ! do Report-Parm-Clean
        do Stdapi-Term
end-procedure ! Init-Processing

!*********************************
!Procedure : Print-Values-Box
!*********************************
begin-procedure Print-Values-Box ($value, #start_position, #Line_no)

let #val_len = length($value)
let #cnt = 1

while #cnt <= #val_len
    let $prnt_char = substr($value, #cnt, 1)
    add 1 to #cnt
    graphic (#Line_no,#start_position,3) box 1 10
    add 1 to #start_position
    print $prnt_char (#Line_no, #start_position)
    add 2 to #start_position
end-while

end-procedure

!*********************************
!Procedure : Print-Values-Box1
!*********************************
begin-procedure Print-Values-Box1 ($value1, #start_position1, #Line_no1, #length1)

let #val_len1 = #length1
let #cnt1 = 1

while #cnt1 <= #val_len1
    let $prnt_char1 = substr($value1, #cnt1, 1)
    add 1 to #cnt1
    graphic (#Line_no1,#start_position1,3) box 1 10
    add 1 to #start_position1
    print $prnt_char1 (#Line_no1, #start_position1)
    add 2 to #start_position1
end-while

end-procedure

!*********************************
!Procedure : Init-Report
!*********************************
begin-procedure Init-Report

do Stdapi-Init
do Get-Language-Codes   ! get the current language in which user wants to print the report
do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
do Append_Report_Translation ('GPMYSO03')       ! from settrans.sqc
!do Get_Field_Information ('GPMYSO03', 'FORM_TYPE', $FORM_TYPE, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'TITLE1', $ReportTitle1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'TITLE2', $ReportTitle2, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'FORM_ID', $FORM_ID, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'MONTH_CONTRIB', $MONTH_CONTRIB, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'TITLE3', $ReportTitle3, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'AMOUNT1', $AMOUNT1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'CASH_PAYMENT', $CASH_PAYMENT, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'NO_OF_ EMPLOYEES', $NO_OF_EMPLOYEES, #DW) ! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'CHEQUE _NO_AMOUNT', $CHEQUE_NO, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'RINGATTS', $Currency, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'NUMBER1', $NBR, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'FOR _OFFICE _USE', $FOR_OFFICE_USE, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'EMPLOYER', $EMPLOYER, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'DATE_OF_PAYMENTS', $DATE_OF_PAYMENTS, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'NAME_EMPLOYER', $NAME_EMPLOYER, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'NAME', $NAME_LBL, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'ADDRESS_EMPLOYER', $ADDRESS_EMPLOYER, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'AMOUNT2', $AMOUNT2, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'SIGNATURE1', $SIGNATURE1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'RINGKAS', $RINGKAS, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'L-PNMB., K.L.', $Text1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'BANK', $BANK, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'NUMBER2', $NUMBER2, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'MMBRSHIP_NBR', $MMBRSHIP_NBR, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'ID_NUM', $Ic_NUM, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'ID_NUM_1', $Ic_NUM_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'EMPLOYEE_ SOCSO', $EMPLOYEE_SOCSO, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'EMPLOYEE_ SOCSO_1', $EMPLOYEE_SOCSO_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'CONTRIBUTION', $CONTRIBUTION, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'RINGATTS', $RINGATTS, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'SEN', $SEN, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'PAGE_TOTAL', $PAGE_TOTAL, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'TOTAL_FORWARD', $TOTAL_FORWARD, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS1', $REMARKS1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'GRAND_TOTAL', $GRAND_TOTAL, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'SIGNATURE2', $SIGNATURE2, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'SOCIAL_USAGE', $SOCIAL_USAGE, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'SOCIAL_USAGE_1', $SOCIAL_USAGE_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'NAME_EMPLOYER', $NAME_EMPLOYER, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'PHONE', $PHONE, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'CAP MAJIKAN:', $ReportTitle4, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'CATATAN', $TEXT2, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS14',$REMARKS14 , #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS2', $REMARKS2, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS2_1', $REMARKS2_1, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS3', $REMARKS3, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS4', $REMARKS4, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS5', $REMARKS5, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO03', 'REMARKS6', $REMARKS6, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS7', $REMARKS7, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS8', $REMARKS8, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS9', $REMARKS9, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS10',$REMARKS10, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS11',$REMARKS11, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS12',$REMARKS12, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS13',$REMARKS13, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS14',$REMARKS14, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO03', 'REMARKS15',$REMARKS15, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS16',$REMARKS16, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'REMARKS17',$REMARKS17, #DW)! from settrans.sqc returning the actual text based upon the language selected

!do Get_Field_Information ('GPMYSO03', 'EMPLOYEE_NAME', $EMPLOYEE_NAME, #DW)! from settrans.sqc returning the actual text based upon the language selected
!do Get_Field_Information ('GPMYSO03', 'PAGE_NO', $PAGE_NO, #DW)! from settrans.sqc returning the actual text based upon the language selected
 let $FORM_TYPE='BORANG 8A'
 let $ReportTitle1='PERTUBUHAN KESELAMATAN SOSIAL'
 let $ReportTitle2='PERATURAN - PERATURAN (AM) KESELAMATAN SOSIAL PEKERJA 1971 (PER. 44A)'
 let $FORM_ID='8A'
 let $MONTH_CONTRIB='Jumlah caruman untuk bulan di atas hendaklah dibayar'
 let $ReportTitle3='tidak lewat daripada'
 let $AMOUNT1='Amaun Caruman (RM)'
 let $CASH_PAYMENT='Bayaran Tunai'
 let $NO_OF_EMPLOYEES='Bil. Pekerja'
 let $CHEQUE_NO='Bayaran cek. No. cek'
 let $Currency='RM'
 let $NBR='No. Kod Majikan'
 let $FOR_OFFICE_USE='For Office Use'
 let $EMPLOYER='Majikan'
 let $DATE_OF_PAYMENTS='DATE OF PAYMENTS'
 let $NAME_EMPLOYER='Nama dan Alamat Majikan'
 let $NAME_LBL='Nama'
 let $ADDRESS_EMPLOYER='Alamat'
 let $AMOUNT2='Amaun:'
 let $SIGNATURE1='Signature'
 let $RINGKAS='Ringkas'
 let $Text1='L-PNMB., K.L'
 let $BANK='Cap Bank'
 let $NUMBER2='NO. KAD PENGENALAN'
 let $MMBRSHIP_NBR='TKH. MULA/TKH.'
 let $Ic_NUM='PENDAFTARAN NEGARA'
 let $Ic_NUM_1='Lihat Catatan'
 let $EMPLOYEE_SOCSO='BERHENTI KERJA'
 let $EMPLOYEE_SOCSO_12='(hhbbtttt)'
 let $CONTRIBUTION='CARUMAN'
 let $RINGATTS='RM'
 let $SEN='SEN'
 let $PAGE_TOTAL='Jumlah muka surat ini'
 let $TOTAL_FORWARD='Total Forward'
 let $REMARKS1='(* Potong mana yang tidak berkenaan)'
 let $GRAND_TOTAL='* JUMLAH BESAR'
 let $SIGNATURE2='Tandatangan'
 let $SOCIAL_USAGE='KEGUNAAN'
 let $SOCIAL_USAGE_1='PERKESO'
 let $PHONE='No. Tel'
 let $ReportTitle4='Cop Majikan'
 let $TEXT2='CATATAN'
 let $REMARKS14='1) NO. PENDAFTARAN KESELAMATAN SOSIAL ADALAH NOMBOR KAD PENGENALAN PENDAFTARAN NEGARA.'
 let $REMARKS2='2) Tandakan X di ruangan (2) jika pekerja telah berhenti kerja dan masukkan'
 let $REMARKS2_1='tarikh berhenti kerja di ruangan (3).'
 let $REMARKS3='3) Isikan tarikh mula kerja untuk pekerja yang tidak tersenarai sahaja di'
 let $REMARKS4='ruangan (3). Pendaftaran pekerja sedemikian hendaklah juga dibuat'
 let $REMARKS5='dalam borang 2.'
 !let $REMARKS6=' '
 let $REMARKS7='4) Jika tiada caruman sebab cuti tanpa gaji masukkan angka 00.00'
 let $REMARKS8='di ruangan (6).'
 let $REMARKS9 =' '
 let $REMARKS10 ='5) Jika ada butir-butir yang didapati tidak betul, jangan buat pindaan di'
 let $REMARKS11 ='borang ini, sila beritahu PERKESO secara bertulis.'
 let $REMARKS12 ='6) Sila pastikan tulisan/angka/cap tidak menyentuh mana-mana garisan/kotak/barcode yang disediakan.'
 let $REMARKS13 ='7) Format untuk tkh. mula/tkh. berhenti kerja adalah hhbbtttt contoh 01072000.'
 let $REMARKS14 ='1) NO. PENDAFTARAN KESELAMATAN SOSIAL ADALAH NOMBOR KAD PENGENALAN PENDAFTARAN NEGARA.'
 !let $REMARKS15 =' '
 let $REMARKS16 ='Jika berhenti kerja tanda'
 let $REMARKS17 ='di ruangan (3'
 let $EMPLOYEE_NAME ='NAMA PEKERJA (MENGIKUT KAD PENGENALAN)'
 let $PAGE_NO ='Lembaran'
 let $bulan = 'bulan'
 let $tahun = 'tahun'
 let $Coid = 'No. MyCoID / No. Pendaftaran Perniagaan'
 let $Amaun_heading = 'Amaun caruman di atas hendaklah dibayar kepada PERKESO/EJEN PEMUNGUT tidak lewat daripada'
 let $Ejen = 'Kegunaan Ejen Pemungut'
 let $Cop = 'Cop'
 let $Slip = 'No. Slip Bayaran'
 let $Sta1 = 'STA-'
 let $Sta2 = 'TUS'
 let $tarikh = 'TARIKH'
 let $mula = 'MULA/BERHENTI'
 let $kerja = 'KERJA'
 let $kaedah = 'Kaedah Pembayaran (Sila tandakan (x))'
 let $tunai = 'Tunai'
 let $kiriman = 'Kiriman Wang'
 let $cek = 'Cek'
 let $lain = 'Lain-lain'
 let $nocek = 'No. Cek / Kiriman Wang'
 

 move 'GPMYS003' to $ReportID
  move 'SOCSO FORM 8A: Monthly Schedule of Contributions  ' to $ReportTitle

  let $Ic_NUM_1 = rtrim(ltrim($Ic_NUM_1, ' '), ' ')
  let $EMPLOYEE_SOCSO_1 = rtrim(ltrim($EMPLOYEE_SOCSO_1, ' '), ' ')
  let $EMPLOYEE_SOCSO_1 = $EMPLOYEE_SOCSO_1 || ' (3)'
  let $Ic_NUM_1 = $Ic_NUM_1 || ' (1)'

  do Select-Parameters
  move $Contr_Month  to #N_Mth
  do Format-Number(#N_Mth,$Contr_Month1,'09')

  move $Contr_Year  to #N_Yr
  let #This_Yr = #N_Yr
  add 2             to #N_Mth

  if #N_Mth > 12
      let #N_Mth = #N_Mth - 12
      add 1 to #N_Yr
  end-if

  do Format-Number(#N_Yr,$Next_Year,'9999')
  do Format-Number(#N_Mth,$Next_Mth,'09')
  do dtu-format-date(#N_Yr, #N_Mth, 1, $DTU_Date)!yyyy-dd-mm format
  do dtu-subtract-days($DTU_Date, 1, $Next_Month_End)
  do Format-Number(#This_Yr,$Year_D,'9999')
  let $Mth_head = 'CARUMAN GAJI BULAN '
  do Build-Date
  do Build-Where
  do Get-prcsoutputdir
  do Print-Due-Date($Next_Month_End,$PrnDueDate)
 ! Let $FileName1=$prcsoutputdir ||''||$FileName

 ! let $FileOut = $FileName1
 !   open $FileOut as 2 for-writing record=83:fixed
  do Get-SOCSO-NBR
end-procedure


!Procedure :Select-Parameters     *
!****************************
begin-procedure Select-Parameters
begin-select

RC.GPMY_ORG_LINK_OPTN,
RC.ORG_LINK_UNIT,
RC.BUSINESS_UNIT,
RC.GPMY_SOCSO_NBR,
RC.MONTHCD,
RC.GPMY_CONTRIB_YEAR,
RC.FILENAME

FROM  PS_GPMY_RPT_RC  RC
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select



  let $ORG_LINK_OPTN     =  &RC.GPMY_ORG_LINK_OPTN
  let $ORG_LINK_UNIT     =  &RC.ORG_LINK_UNIT
  let $BUSINESS_UNIT     =  &RC.BUSINESS_UNIT
  let $SOC_NBR           =  &RC.GPMY_SOCSO_NBR
  let $Contr_Month       =  &RC.MONTHCD
  let $Contr_Year        =  &RC.GPMY_CONTRIB_YEAR
  let $FileName1         =  &RC.FILENAME


end-procedure


!*********************************
!Procedure : Build-Date
!*********************************

begin-procedure Build-Date
  let #year = edit($Contr_Year,'9999')
  let #month = edit($Contr_Month,'99')
  
  do dtu-format-date(#year, #month, 1, $DTU_Date)
  do dtu-month-end($DTU_Date, $DTU_Endmonth_Date)
  do convert-from-dtu-date($DTU_Date, $FromDate)
  do convert-from-dtu-date($DTU_Endmonth_Date, $ToDate)  
  
end-procedure


!*********************************
!Procedure : Build-Where
!*********************************
begin-procedure Build-Where


  Let $WHERE = ''

if ($ORG_LINK_OPTN='CO')OR ($ORG_LINK_OPTN='PG')OR ($ORG_LINK_OPTN='ET')
     if isnull(RTRIM($ORG_LINK_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($SOC_NBR,' '))
               LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
           ELSE
              LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_SOCSO_NBR='|| '''' || RTRIM($SOC_NBR,' ') || ''''
           end-if
     end-if

 end-if

if ($ORG_LINK_OPTN='LO')OR ($ORG_LINK_OPTN='DE')
     if isnull(RTRIM($BUSINESS_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($ORG_LINK_UNIT,' '))
               LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''
           ELSE
                if isnull(RTRIM($SOC_NBR,' '))
                 LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
                ELSE
                 LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_SOCSO_NBR='|| '''' || RTRIM($SOC_NBR,' ') || ''''
                END-IF
           end-if
     end-if

 end-if

end-procedure

!************************************
!Procedure : Get-SOCSO-NBR   *
!************************************
begin-procedure Get-SOCSO-NBR
let $FirstSocso = ''
let #PGNUM=0

Let #Page-Count = 1
begin-SELECT
DISTINCT(B.GPMY_SOCSO_NBR )  &CompSocSo1
PF.GPMY_STAT_REG

        let #x= #x +1
   if isnull(rtrim($oldreg,' '))
   else
    if rtrim(&PF.GPMY_STAT_REG,' ') <> rtrim($oldreg,' ')
          if $FileOpen = 'Y'
            ! do Close-File
             close #count
             let $FileOpen = 'N'
          end-if
  end-if
  end-if

        do Get-Selection-Details
        let $oldreg =  &PF.GPMY_STAT_REG

FROM PS_GPMY_SOC_ORG B,PS_GPMY_SOC_ORG_DT C ,PS_GPMY_SOC_TBL PF
WHERE B.EFFDT=C.EFFDT
AND PF.GPMY_SOCSO_NBR=B.GPMY_SOCSO_NBR
AND PF.EFFDT=(SELECT MAX(L2.EFFDT)FROM PS_GPMY_SOC_TBL L2 WHERE PF.GPMY_SOCSO_NBR =L2.GPMY_SOCSO_NBR)
AND C.GPMY_ORG_LINK_OPTN= $ORG_LINK_OPTN
[$WHERE]
ORDER BY PF.GPMY_STAT_REG
end-SELECT


end-procedure


!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.NAME_TYPE = 'LEG'
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT)
                 FROM PS_NAMES NAMES1
                 WHERE NAMES1.EMPLID = NAMES.EMPLID
                 AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                 AND NAMES1.EFFDT <= $ToDate)
end-SELECT

end-procedure

!*********************************************************************************
!  Procedure: Get-ManagerLegal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-ManagerLegal-Name

begin-SELECT
NAMESMn.NAME

    let $MnLegalName = &NAMESMn.NAME

FROM PS_NAMES NAMESMn
WHERE NAMESMn.EMPLID = $ResponcibleId
AND NAMESMn.EFFDT=(SELECT MAX(NAMES11.EFFDT) FROM PS_NAMES NAMES11
                                          WHERE NAMES11.EMPLID=NAMESMn.EMPLID
                                            AND NAMES11.NAME_TYPE = NAMESMn.NAME_TYPE
                                            AND NAMES11.EFFDT <= $ToDate)
AND NAMESMn.NAME_TYPE = 'LEG'
end-SELECT

end-procedure




!*********************************************************************************
!  Procedure: Get-Empl-SocNbr                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Empl-SocNbr
   
begin-SELECT
GPMY_SOCSO_NBR    
    Let $Empl-SocNbr = &GPMY_SOCSO_NBR

FROM PS_GPMY_SOC_PYE A
where EMPLID = &Emplid
      AND GPMY_SOCSO_NBR=&CompSocSo1  
      AND EFFDT = (SELECT MAX(B.EFFDT) from PS_GPMY_SOC_PYE B where A.EMPLID= B.EMPLID
                 ! and A.EMPL_RCD = B.EMPL_RCD AND B.EFFDT <= $Empl_JDT_new) 
            and A.EMPL_RCD = B.EMPL_RCD AND B.EFFDT <= $ToDate)  

end-SELECT

end-procedure
!*********************************************************************************
begin-procedure Get-Empl-SocNbr-Term ! This procedure is to know whether socso number is changed for the employee after termination and rehire

let $CompSocso1 = &CompSocso
let $changesocso = 'Y'

begin-SELECT

'X' &recone

FROM PS_JOB J

WHERE EMPLID =  &Emplid
AND EMPL_RCD > 0
AND( EXISTS ( SELECT 'X' FROM
        PS_JOB V
        WHERE ACTION IN ('HIR','TER','REH')
            AND V.EMPLID=J.EMPLID
            AND V.EMPL_RCD=J.EMPL_RCD
            AND V.EFFDT BETWEEN $FromDate AND $ToDate
      )
    OR EXISTS(select 'X' from PS_JOB A

        where
        ACTION in ('HIR', 'REH')
        AND A.EMPLID=J.EMPLID
        AND A.EMPL_RCD=J.EMPL_RCD
        AND A.EFFDT <$FromDate
        AND A.EFFDT = (select MAx(EFFDT) from PS_JOB B
                where
                B.EMPLID = A.EMPLID
                and B.EMPL_RCD = A.EMPL_RCD
                and B.EFFDT < $FromDate
                )

        ))




end-SELECT

if &recone <> 'X'

begin-SELECT

'Y'  &socsonbr



FROM PS_GPMY_SOC_PYE A

where EMPLID = &Emplid
      AND EFFDT = (SELECT MAX(B.EFFDT) from PS_GPMY_SOC_PYE B where A.EMPLID= B.EMPLID
      And A.EMPL_RCD = B.EMPL_RCD AND B.EFFDT > $Empl_JDT
      And GPMY_SOCSO_NBR <> $CompSocso1
      And B.EFFDT between $FromDate  and  $ToDate )


end-SELECT

begin-SELECT
'Y'  &rehstatus

FROM PS_JOB A

where
EMPLID = &Emplid
AND EFFDT = (SELECT MAX(B.EFFDT) from PS_JOB B where A.EMPLID= B.EMPLID
      And A.EMPL_RCD = B.EMPL_RCD AND B.EFFDT >= $Empl_JDT
        And B.EFFDT >= $FromDate and  B.EFFDT <= $ToDate
         AND B.ACTION = 'REH'
            )


end-SELECT
if &socsonbr <> 'Y' And &rehstatus = 'Y' ! This is for printing Zero
let $changesocso = 'N'
end-if

end-if




end-procedure

!*********************************
!Procedure : Get-Selection-Details
!*********************************

begin-procedure Get-Selection-Details

  Let $NewPage = 'N'
  Let #TotRecs = 1
  Let #PageTotal = 0
  Let $National_Id_Type = ''
  Let #GrandTotal = 0
  


    do Convert-to-DTU-Date($FromDate, $FromDate_dtu)
    do Convert-to-DTU-Date($ToDate, $ToDate_dtu)

    do dtu-add-days($FromDate_dtu, 1, $strtonee)
    do dtu-add-days($ToDate_dtu, 1, $endonee)
    


    do convert-from-dtu-date($strtonee, $strtone_dt)
    do convert-from-dtu-date($endonee, $endone_dt)


begin-SELECT
DISTINCT(J.EMPLID )             &Emplid
EP.GPMY_SOCSO_NBR      &CompSocso
EP.GPMY_MMBRSHIP_NBR    &EmplSOCSO
J.ACTION              &Action
J.ACTION_REASON       &Action_Reason
J.EFFDT               &Empl_JDT
J.LAST_DATE_WORKED      &lastdaywrkd
J.COMPANY             &Compp
EP.GPMY_IC_INDICATOR    &IdType
L.GPMY_REGISTERED_NM   &CompName
L.ADDRESS1
L.ADDRESS2             !&CompAdr2
L.ADDRESS3            ! &CompAdr3
L.ADDRESS4            !&CompAdr4
L.CITY                   ! &
L.STATE
L.POSTAL
L.COUNTRY
L.NAME                 &Person_InChg
L.GPMY_RESPONSIBLEID
L.GPMY_STAT_REG        &L.GPMY_STAT_REG
L.PHONE                &PIC_Phone
P1.NAME                 &EmplName
CON.DESCR               &CountryNm
STT.DESCR               &StateName
EP.GPMY_MMBRSHIP_NBR   &GPMY_MMBRSHIP_NBR

 
    let $COUNTRY  = rtrim(ltrim(&CountryNm  , ' '), ' ')
    let $ADDRESS1 = rtrim(ltrim(&L.ADDRESS1 , ' '), ' ')
    let $ADDRESS2 = rtrim(ltrim(&L.ADDRESS2 , ' '), ' ')
    let $ADDRESS3 = rtrim(ltrim(&L.ADDRESS3 , ' '), ' ')
    let $ADDRESS4 = rtrim(ltrim(&L.ADDRESS4 , ' '), ' ')
    let $CITY     = rtrim(ltrim(&L.CITY     , ' '), ' ')
    let $STATE    = rtrim(ltrim(&StateName  , ' '), ' ')
    let $POSTAL   = rtrim(ltrim(&L.POSTAL   , ' '), ' ')
      
    
    !do adformat
    !do Compress-Address
    !let $CompAdr1 = $ADDLINE2
    !let $CompAdr2 = $ADDLINE3
    !let $CompAdr3 = $ADDLINE31
    let $StrAddress = ''
    let $StrAddress = $StrAddress || $ADDRESS1
    if $ADDRESS2 <> ''
      let $StrAddress = $StrAddress || ', ' || $ADDRESS2
    end-if
    if $ADDRESS3 <> ''
      let $StrAddress = $StrAddress || ', ' || $ADDRESS3
    end-if
    if $ADDRESS4 <> ''
      let $StrAddress = $StrAddress || ', ' || $ADDRESS4
    end-if
    if $CITY     <> ''
      let $StrAddress = $StrAddress || ', ' || $CITY
    end-if
    let $StrAddress = $StrAddress || ', ' || $STATE
    let $StrAddress = $StrAddress || '-'  || $POSTAL
    let $StrAddress = $StrAddress || ', ' || $COUNTRY

      !  Add 1 to #TotRecs

         Move &Emplid    to $Emplid
        Move &GPMY_MMBRSHIP_NBR to $GPMY_MMBRSHIP_NBR

        let $EELegalName = ''
        let $ResponcibleId = rtrim(&L.GPMY_RESPONSIBLEID, ' ')
        do Get-Legal-Name

        LET $EELegalName = LTRIM(RTRIM($EELegalName, ' '), ' ')
    IF $EELegalName = ''
        let $Name = RTRIM(LTRIM(&EmplName, ' '), ' ')
        ELSE
        let $Name = RTRIM(LTRIM($EELegalName, ' '), ' ')
        END-IF
        ! do Rotate-Name
        Let $EmplName = Upper($Name)
        Let $EmplName = replace($EmplName,',',' ')

    let #strlen = LENGTH($EmplName)
    let $EmplName1 = ''
    let $EmplName2 = ''

    IF LENGTH($EmplName) > 30
        let $EmplName1 = RTRIM(LTRIM(SUBSTR($EmplName,1,30),' '), ' ')
        let $EmplName2 = RTRIM(LTRIM(SUBSTR($EmplName,31,30), ' '), ' ')
    END-IF

        let $MnLegalName = '' !
        do Get-ManagerLegal-Name      !


        IF $MnLegalName = '' or $MnLegalName = ' '
            move &Person_InChg to $Person_InChg
        ELSE
            move $MnLegalName to $Person_InChg
        END-IF

        ! do Rotate-Name
        Let $Person_InChg = Upper($Person_InChg)
        Let $Person_InChg = replace($Person_InChg,',',' ')

        if &CompSocso <> $FirstSocso
            do Add-Grp-Deduction
            do Count-Empl-Deduction
            Let $NewPage = 'Y'
            Let $FirstPage = 'Y'
        end-if
        do Add-Empl-Deduction
        if &EmplDeduct <> 0
            Move &Compp to $Compp 
            
             if &CompSocso <> $FirstSocso
                if isnull(rtrim($FirstSocso,' '))
                else
                    if &CompSocSo <> $FirstSocso
                        new-page
                    end-if
                end-if
                Let $FirstSocso = &CompSocso
            end-if
            
            let $where1 = 'AND NATIONAL_ID_TYPE = '||'''NEWIC'''
            let $SOSCONUM = ''
            Do Get-SOCSO-no
            if $SOSCONUM = ''
            let $where1 = 'AND NATIONAL_ID_TYPE = '||'''OLDIC'''
            Do Get-SOCSO-no
            End-If          
            
            !if &IdType ='N'
                !Let  $National_Id_Type = 'NEWIC'
                !Do get-nid-no
            !end-if
            
            !if &IdType ='O'   
                !Let   $National_Id_Type = 'OLDIC'
                !Do get-nid-no
            !end-if
            
            !if $SOSCONUM = ''
                !if &IdType ='A'
                    !do GetICPassportInfo
                !end-if
            !else
                let $ICPassport=$SOSCONUM
            !end-if
            
            let $ICPassport=lpad(ltrim(rtrim($ICPassport,' '),' '),12,' ')
            
            do Check-if-Terminated

            !  added code here

         Let $lastdaywrkd = ''
         
        move &Empl_JDT to $Empl_JDT
        move &lastdaywrkd to $lastdaywrkd
        
        
        !move &EmplSOCSO to $EmplSOCSO
        Let $EmplSOCSO = rtrim($EmplSOCSO,' ')
   

        #IFDEF ORACLE
             Let $FromDate1 = $FromDate
             Let $ToDate1 = $ToDate
          #ELSE
             Let $FromDate1 = translate($FromDate,'-','')
             Let $ToDate1 = translate($ToDate,'-','')
          #END-IF
          
          !*************For termination cases**********
         
          #IFDEF ORACLE
             Let $FromDate1a = $strtone_dt 
             Let $ToDate1a = $endone_dt
          #ELSE
             Let $FromDate1a = translate($strtone_dt,'-','')
             Let $ToDate1a = translate($endone_dt,'-','')
          #END-IF
          
        
          Let #date1a = datediff(strtodate($Empl_JDT),strtodate($FromDate1a),'DAY')
          Let #date2a = datediff(strtodate($ToDate1a),strtodate($Empl_JDT),'DAY')
          
    
          !*************Termination case over****
          
          
          Let #date1 = datediff(strtodate($Empl_JDT),strtodate($FromDate1),'DAY')
          Let #date2 = datediff(strtodate($ToDate1),strtodate($Empl_JDT),'DAY')
           
          move &Action to $Action
          move &Action_Reason to $Action_Reason

        !do Convert-to-DTU-Date($Empl_JDT, $Empl_JDT4)


        ! Printing the date only when the hire/rehire/termination dates falling in between the from and to date.
        !if $Empl_JDT4 >= $FromDate AND $Empl_JDT4 <= $ToDate
        !do Convert-to-DTU-Date($Empl_JDT, $Empl_JDTk)

        !else

        !let $Empl_JDTk = ''

        !end-if
        
         !*********Date print control statement for both Text and PDF files**********
        if #date1 >=0 and #date2 >= 0
          if $Action = 'HIR' or $Action = 'REH'  or $Action = 'PRC'
            do Convert-to-DTU-Date($Empl_JDT, $Empl_JDTk)
            let $Empl_JDT1 = substr($Empl_JDTk, 9, 2)
            let $Empl_JDT2 = substr($Empl_JDTk, 6, 2)
            let $Empl_JDT3 = substr($Empl_JDTk, 1, 4)
          end-if
        end-if
        
        !****For termination *************
    
        if #date1a >=0 and #date2a >= 0
      
          if $Action = 'TER' or $Action = 'RWP' or $Action = 'TWB' or $Action = 'TWP' or $Action = 'RET'
            Let $Empl_JDT = $lastdaywrkd
            do Convert-to-DTU-Date($Empl_JDT, $Empl_JDTk)
            let $Empl_JDT1 = substr($Empl_JDTk, 9, 2)
            let $Empl_JDT2 = substr($Empl_JDTk, 6, 2)
            let $Empl_JDT3 = substr($Empl_JDTk, 1, 4)
          end-if
        end-if
        !********Termination case over***

            move &CompSocso to $CompSocso
       
        do Get-Empl-SocNbr
  
        if $Empl-SocNbr = $CompSocso  and ($empl_printed <> $emplid)   
          do Print-Report
        if $Empltermvalue = 'N'
        Let #PageTotal = #PageTotal + &EmplDeduct
        Let #GrandTotal = #GrandTotal + &EmplDeduct
        end-if

         end-if
        let $empl_printed = $Emplid  
        let $Socso_printed = &CompSocSo1 

        Let $OutName = $EmplName
        Let #DedAmt = &EmplDeduct * 100

        if $Empltermvalue = 'Y'
        Let #DedAmt = 0
        end-if


        Let $DedAmt = edit(#DedAmt,'99999')
        Let $DedAmt = translate($DedAmt,' ','0')

        Let $ICPassport = rtrim($ICPassport,' ')
        !Let $EmplSOCSO = rtrim($EmplSOCSO,' ')
        Let $OutName = rtrim($OutName,' ')
        let #len=length($EmplSOCSO)
               !***********Output Text File********
          move &Action to $Action 
          move &Action_Reason to $Action_Reason
    
        if $Action = 'HIR' or $Action = 'REH' or $Action = 'PRC'
          if #date1 >= 0 and #date2 >= 0
           Let $tempprint =  'B'
          end-if
        end-if
        
        if $Action = 'TER' or $Action = 'RWP' or $Action = 'TWB' or $Action = 'TWP' or $Action = 'RET'
          if #date1a >= 0 and #date2a >= 0
           if $Action_Reason = 'DEA'
            Let $tempprint =  'M'   
           else
            Let $tempprint =  'H'  
           end-if
          end-if
        end-if
        if $Action = 'LOA'
          if #date1 >= 0 and #date2 >= 0
           Let $tempprint =  'T' 
          end-if
        end-if
        if $Action = 'PLA'
          if #date1 >= 0 and #date2 >= 0
           Let $tempprint =  'S' 
          end-if
        end-if

            if  rtrim(&L.GPMY_STAT_REG,' ') <> rtrim($old_region,' ')

                Let $FileName1=$prcsoutputdir ||''||rtrim(&L.GPMY_STAT_REG,' ')||$FileName1

                let $FileOut = $FILENAME1


                let $FILENAME1 = &RC.FILENAME

                let $FileOpen = 'N'
                let #count = #count+1

                if $FileOpen = 'N'
                    open $FileOut as #count for-writing record=223:fixed status=#filestat
                let $FileOpen = 'Y'
            end-if
                end-if
        if $FileOpen = 'Y'

            if $Empl-SocNbr = $CompSocso
            Let $Detail = rtrim($CompSOCSO,' ')
            if &IdType ='O'
                LET $ICPassport = Rpad($ICPassport,12,' ')
            end-if

            Let $Detail = substr($Detail,1,12)
            Let $ICPassport = substr($ICPassport,1,12)
            Let $GPMY_MMBRSHIP_NBR = translate($GPMY_MMBRSHIP_NBR,'-','')
            Let $GPMY_MMBRSHIP_NBR = substr($GPMY_MMBRSHIP_NBR,1,12)
            Let $OutName = substr($OutName,1,150)
            ! modifiying the $outname to 45 for rpad function
            !Let $Details = lpad($Detail,9,' ') || lpad($ICPassport,12,' ') || lpad($EmplSocso,9 ,' ') || $Contr_Month1 ||         substr($Contr_Year,3,2) || rpad($OutName,40,' ') || $DedAmt
            do Get-Comp-Registration
            Let $Details = rpad($Detail,12,' ') || rpad($RegNum,20,' ') || rpad($GPMY_MMBRSHIP_NBR,12,' ') || rpad($OutName,150,' ') || $Contr_Month1 || substr($Contr_Year,1,4) || lpad($DedAmt, 14, '0')
            Let $Details = $Details || $Empl_JDT1 || $Empl_JDT2 || $Empl_JDT3 || $tempprint 
            
            write #count from $Details:223
            !Let $ICPassport = ' '

            !Let #PageTotal = #PageTotal + &EmplDeduct
            !Let #GrandTotal = #GrandTotal + &EmplDeduct
            
            end-if
             end-if
            Let $ICPassport = ' '
            Let $tempprint = ''
            Let $Empl_JDT1 = ''
            Let $Empl_JDT2 = ''
            Let $Empl_JDT3 = ''
            let $old_region = &L.GPMY_STAT_REG
         end-if

          
        
        

FROM PS_JOB J,PS_GPMY_SOC_TBL L , PS_GPMY_SOC_PYE  EP, PS_NAMES P1, PS_COUNTRY_TBL CON, PS_STATE_NAMES_TBL STT
WHERE  L.EFF_STATUS='A'
AND EP.EFF_STATUS='A'
AND L.GPMY_SOCSO_NBR=&CompSocSo1
AND L.EFFDT=(SELECT MAX(L1.EFFDT)FROM PS_GPMY_SOC_TBL L1 WHERE L.GPMY_SOCSO_NBR =L1.GPMY_SOCSO_NBR  )
AND J.EMPL_RCD           = EP.EMPL_RCD
AND J.EMPL_RCD = (SELECT MAX(J1.EMPL_RCD) FROM PS_JOB J1 WHERE J1.EMPLID = J.EMPLID)
!AND J.EFFDT BETWEEN $FromDate AND $ToDate
AND J.EFFSEQ =
                    (SELECT MAX(J2.EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = J.EMPLID
                    AND J2.EMPL_RCD = J.EMPL_RCD
                    AND J2.EFFDT = J.EFFDT)
AND J.EMPLID=EP.EMPLID

AND EP.GPMY_SOCSO_NBR =     L.GPMY_SOCSO_NBR
AND EP.EFFDT      = (SELECT MAX(EPA.EFFDT) FROM PS_GPMY_SOC_PYE EPA
                            WHERE EPA.EMPLID   = EP.EMPLID
                            AND EPA.EMPL_RCD  = EP.EMPL_RCD
                            AND EPA.GPMY_SOCSO_NBR = EP.GPMY_SOCSO_NBR
                            AND EPA.EFFDT     <=$ToDate )


AND P1.EMPLID     = EP.EMPLID
AND P1.NAME_TYPE  = 'PRI'
AND P1.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES X WHERE X.EMPLID=P1.EMPLID
                                                  AND X.NAME_TYPE = P1.NAME_TYPE
                                                  AND X.EFFDT <= $ToDate )
AND L.COUNTRY = CON.COUNTRY
AND L.COUNTRY = STT.COUNTRY
AND L.STATE   = STT.STATE
AND (J.EFFDT =      (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1 
                    WHERE J1.ACTION = 'HIR'
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $FromDate AND $ToDate
                    GROUP BY J1.EMPLID)
OR  J.EFFDT =      (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.ACTION='REH'
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $FromDate AND $ToDate
                    AND NOT EXISTS (SELECT 1 FROM PS_JOB J2 WHERE J2.ACTION = 'HIR' AND J1.EMPLID=J2.EMPLID AND J1.EMPL_RCD=J2.EMPL_RCD AND J2.EFFDT BETWEEN $FromDate AND $ToDate)
                    GROUP BY J1.EMPLID)
                   
OR  J.EFFDT =       (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.ACTION IN ('TER', 'RWP' , 'TWB' ,'TWP' ,'RET')
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $strtone_dt AND $endone_dt
                    AND NOT EXISTS (SELECT 1 FROM PS_JOB J2 WHERE J1.EMPLID=J2.EMPLID AND J2.ACTION IN ('HIR','REH') AND J1.EMPL_RCD=J2.EMPL_RCD AND J2.EFFDT BETWEEN $FromDate AND $ToDate)
                    GROUP BY J1.EMPLID)
                  
OR  J.EFFDT =       (SELECT MAX(J1.EFFDT)
                    FROM PS_JOB J1
                    WHERE J1.ACTION IN ('XFR','ADL','ADD','LOA','PRC', 'PLA')
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT BETWEEN $FromDate AND $ToDate
                    AND NOT EXISTS (SELECT 1 FROM PS_JOB J2 WHERE J1.EMPLID=J2.EMPLID AND J2.ACTION IN ( 'HIR','REH','TER','RET', 'RWP' , 'TWB' ,'TWP' ,'RET') 
                    AND J1.EMPL_RCD=J2.EMPL_RCD AND J2.EFFDT BETWEEN $FromDate AND $ToDate)
                    GROUP BY J1.EMPLID)
OR ( J.EFFDT =         (SELECT MAX(J1.EFFDT) 
                    FROM PS_JOB J1 
                    WHERE J1.ACTION IN ('HIR','REH','XFR','ADL','ADD','LOA','PRC','PLA')
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT < $FromDate
                    AND  NOT EXISTS (SELECT J2.EFFDT FROM PS_JOB J2 WHERE J2.ACTION IN ('HIR','REH','XFR','ADL','ADD','LOA','RET','PRC','PLA') 
                    AND J2.EMPLID=J1.EMPLID AND J2.EMPL_RCD=J1.EMPL_RCD AND J2.EFFDT BETWEEN $FromDate AND $ToDate)
                    GROUP BY J1.EMPLID)
and  J.EFFDT =         (SELECT MAX(J1.EFFDT) 
                    FROM PS_JOB J1 
                    WHERE J1.ACTION IN ('HIR','REH','XFR','ADL','ADD','LOA','PRC','PLA')
                    AND J1.EMPLID=J.EMPLID
                    AND J1.EMPL_RCD=J.EMPL_RCD
                    AND J1.EFFDT < $FromDate
                    AND  NOT EXISTS (SELECT J2.EFFDT FROM PS_JOB J2 WHERE J2.ACTION IN ('TER', 'RWP' , 'TWB' ,'TWP' ,'RET') AND J2.EMPLID=J1.EMPLID AND J2.EMPL_RCD=J1.EMPL_RCD AND J2.EFFDT BETWEEN $strtone_dt AND $endone_dt)
                    GROUP BY J1.EMPLID) 
                    )
               
   )

ORDER BY EP.GPMY_SOCSO_NBR, P1.NAME, J.EMPLID
end-SELECT


     if #PageTotal <> 0
        let #PageTotal_dec = (abs(#PageTotal) - trunc(abs(#PageTotal), 0)) * 100
        let #PageTotal = trunc(#PageTotal, 0)
        move #PageTotal to $PageTotal 999999
        do Print-Values-Box1 ($PageTotal, 113, 73, 6)
        print '.' (73, 132)
         if #PageTotal_dec <> 0
         move #PageTotal_dec to $PageTotal_dec 99
         else
         let $PageTotal_dec = '00'
         end-if

        do Print-Values-Box1 ($PageTotal_dec, 133, 73, 2)
!         print #PageTotal    (72,105)   BOLD edit '999999.99'
        ! print #Page-Count   (12,103)     BOLD edit '99999'

     end-if

     if #GrandTotal  <> 0
        let #GrandTotal_dec = (abs(#GrandTotal) - trunc(abs(#GrandTotal), 0)) * 100
        let #GrandTotal = trunc(#GrandTotal, 0)
        move #GrandTotal to $GrandTotal 9999999
        !do Print-Values-Box ($GrandTotal, 91, 76)
        !print '-' (76, 113)
           if #GrandTotal_dec <> 0
         move #GrandTotal_dec to $GrandTotal_dec 99
        else
        let $GrandTotal_dec  = '00'
        end-if

        !do Print-Values-Box ($GrandTotal_dec, 115, 76)
!           print #GrandTotal (75,105) BOLD edit '999999.99'
    end-if


    if $FileOpen = 'Y'
        close #count
           let $FileOpen = 'N'
    end-if
      !  close 1 ! Close the file
     ! close 1
end-procedure


begin-procedure get-nid-no
begin-SELECT
A.EMPLID
A.NATIONAL_ID  &ICPassport

     move &ICPassport to $ICPassport
    let $ICPassport=lpad(ltrim(rtrim($ICPassport,' '),' '),12,' ')

 FROM PS_PERS_NID A
WHERE A.EMPLID= &Emplid
AND A.NATIONAL_ID_TYPE =$National_Id_Type

end-SELECT


end-procedure

begin-procedure Get-SOCSO-no

let $SOSCONUM = ''
begin-SELECT
A1.EMPLID
A1.NATIONAL_ID  &SOSCONUM

   let $SOSCONUM = &SOSCONUM

 FROM PS_PERS_NID A1
WHERE A1.EMPLID= &Emplid
AND COUNTRY = 'MYS'
[$where1]
end-SELECT
end-procedure

!*********************************
!Procedure : Get-Comp-Registration
!*********************************
begin-procedure Get-Comp-Registration
begin-SELECT
A.COMPANY_REGNBR_MYS  &RegNum

     Let $RegNum = &RegNum

FROM PS_COMPANY_TBL_MYS A
WHERE A.COMPANY = $Compp
AND A.EFFDT = (SELECT MAX(EFFDT) 
                   FROM PS_COMPANY_TBL_MYS B
                   WHERE B.COMPANY = A.COMPANY
                   AND B.EFFDT <= $AsOfToday ) 
end-SELECT

end-procedure

!*********************************
!Procedure : Count-Empl-Deduction
!*********************************
begin-procedure Count-Empl-Deduction
begin-SELECT
COUNT (DISTINCT MP3.EMPLID) &TotalCount
  FROM PS_GPMY_PY_TMP3  MP3 , PS_GPMY_PY_TMP MP ,PS_GP_PYE_SEG_STAT T2
WHERE MP3.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
                        FROM PS_GPMY_PY_TMP
                        WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
AND EMPLID=MP.EMPLID )
! AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PR_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.JOBINSTANCE = MP3.JOBINSTANCE
!        AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!        AND X1.USER_KEY1=MP3.USER_KEY1
!)
AND MP3.RSLT_SEG_NUM = (SELECT MIN(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND CAL_ID =  MP3.CAL_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)
AND USER_KEY1=&CompSocso
AND MP.GP_GENRPT_BREAK1 = &CompSocSo1
AND MP3.EMPLID = MP.EMPLID
AND MP.EMPLID = T2.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP.CAL_RUN_ID =  T2.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = T2.EMPL_RCD
AND MP3.EMPL_RCD =
  (SELECT MAX(TE1.EMPL_RCD)
  FROM PS_GPMY_PY_TMP3 TE1
  WHERE TE1.EMPLID   = MP3.EMPLID
  AND TE1.PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
  AND TE1.CAL_RUN_ID = MP3.CAL_RUN_ID
  AND TE1.GP_PAYGROUP = MP3.GP_PAYGROUP
  AND TE1.CAL_ID     = MP3.CAL_ID
  AND TE1.USER_KEY1  = MP3.USER_KEY1
  )
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP.GP_PAYGROUP = T2.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP.CAL_ID = T2.CAL_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP.RSLT_SEG_NUM = T2.RSLT_SEG_NUM
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP.ORIG_CAL_RUN_ID =  T2.ORIG_CAL_RUN_ID
AND MP3.EMPLID IN (SELECT DISTINCT EMPLID
                   FROM PS_GPMY_SOC_PYE PS
                   WHERE EFFDT = (SELECT MAX(EFFDT)
                                  FROM PS_GPMY_SOC_PYE PS1
                                  WHERE PS1.EMPLID=PS.EMPLID
                                  AND PS1.EMPL_RCD=PS.EMPL_RCD
                                  AND GPMY_SOCSO_NBR=&CompSocSo1))
AND MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.GPMY_FLD_NAME='SOC_DED_MTD'
end-SELECT
end-procedure



!*********************************
!Procedure : Add-Empl-Deduction
!*********************************
begin-procedure Add-Empl-Deduction

begin-SELECT
MP3.CALC_RSLT_VAL &EmplDeduct

FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP , PS_GP_PYE_SEG_STAT T2
WHERE MP.PRC_ORD_TS=(
SELECT MAX(PRC_ORD_TS)
FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
AND EMPLID=MP.EMPLID )
!AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PR_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.JOBINSTANCE = MP3.JOBINSTANCE
!        AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!        AND X1.USER_KEY1=MP3.USER_KEY1
!)
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND CAL_ID =  MP3.CAL_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)
AND MP3.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND CAL_ID =  MP3.CAL_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1
                )

AND USER_KEY1=&CompSocso
AND MP3.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP3.EMPLID = MP.EMPLID
AND MP.EMPLID = T2.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP.CAL_RUN_ID =  T2.CAL_RUN_ID
!AND MP3.EMPL_RCD = MP.EMPL_RCD   
!AND MP.EMPL_RCD = T2.EMPL_RCD  
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP.GP_PAYGROUP = T2.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP.CAL_ID = T2.CAL_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP.RSLT_SEG_NUM = T2.RSLT_SEG_NUM
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP.ORIG_CAL_RUN_ID =  T2.ORIG_CAL_RUN_ID
AND MP.GP_GENRPT_BREAK1 = &CompSocSo1
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = T2.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = T2.RSLT_REV_NUM
AND MP3.EMPLID = &Emplid
AND MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.GPMY_FLD_NAME='SOC_DED_MTD'

end-SELECT
end-procedure


!*********************************
!Procedure : Add-Grp-Deduction
!*********************************
begin-procedure Add-Grp-Deduction



begin-SELECT
sum(MP3.CALC_RSLT_VAL) &GrpDeduct
  FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP , PS_GP_PYE_SEG_STAT T2
WHERE MP3.PROCESS_INSTANCE = MP.PROCESS_INSTANCE
AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=MP.PROCESS_INSTANCE
AND EMPLID=MP.EMPLID )
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND CAL_ID =  MP3.CAL_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)
!AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PY_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.JOBINSTANCE = MP3.JOBINSTANCE
!        AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!        AND X1.USER_KEY1=MP3.USER_KEY1
!)
AND USER_KEY1=&CompSocso

AND MP.SLICE_END_DT  = (select MAX(SLICE_END_DT)
                    FROM PS_GPMY_PY_TMP
                    Where
                    PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP.EMPLID
                    AND EMPL_RCD = MP.EMPL_RCD
                    AND GP_PAYGROUP = MP.GP_PAYGROUP
                    AND CAL_RUN_ID =  MP.CAL_RUN_ID
                    AND CAL_ID =  MP.CAL_ID
                    AND GP_GENRPT_BREAK1 =&CompSocSo1
                    )

AND MP3.EMPLID = MP.EMPLID
AND MP.EMPLID = T2.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP.CAL_RUN_ID =  T2.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
AND MP.EMPL_RCD = T2.EMPL_RCD
AND MP3.EMPL_RCD = (SELECT MAX(TE1.EMPL_RCD) FROM PS_GPMY_PY_TMP3 TE1 WHERE TE1.EMPLID = MP3.EMPLID)
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP.GP_PAYGROUP = T2.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP.CAL_ID = T2.CAL_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP.RSLT_SEG_NUM = T2.RSLT_SEG_NUM
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP.ORIG_CAL_RUN_ID =  T2.ORIG_CAL_RUN_ID
!AND MP3.RSLT_VER_NUM = MP.RSLT_VER_NUM
!AND MP.RSLT_VER_NUM = T2.RSLT_VER_NUM
!AND MP3.RSLT_REV_NUM = MP.RSLT_REV_NUM
!AND MP.RSLT_REV_NUM = T2.RSLT_REV_NUM
AND MP3.EMPLID IN (SELECT DISTINCT EMPLID FROM PS_GPMY_SOC_PYE PS WHERE
EFFDT = (SELECT MAX(EFFDT) FROM PS_GPMY_SOC_PYE PS1 WHERE
PS1.EMPLID=PS.EMPLID AND PS1.EMPL_RCD=PS.EMPL_RCD
AND PS1.GPMY_SOCSO_NBR=&CompSocSo1
AND PS1.EFFDT     <=$ToDate ))
AND MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP.GP_GENRPT_BREAK1 = &CompSocSo1
AND MP3.GPMY_FLD_NAME='SOC_DED_MTD'


end-SELECT
end-procedure
!

!***********************************************************************
! Procedure: GetICPassportInfo                                         *
!***********************************************************************
begin-Procedure GetICPassportInfo
begin-SELECT
CP.PASSPORT_NBR     &Passport
CP.DEPENDENT_ID     &DependId
CP.DT_ISSUED        &CPIssueDt
CP.EXPIRATN_DT      &CPExpireDt
  do Format-DateTime (&CPExpireDt, $CPExpireDt, {DEFYMD}, '', '')
  if ($AsofToday <= $CPExpireDt OR rtrim($CPExpireDt,' ') = '')
     if &DependId = ''
       Move &Passport to $ICPassport
     end-if
  end-if
   FROM PS_CITIZEN_PSSPRT CP
 WHERE  CP.EMPLID = $Emplid
    AND $AsOfToday >= CP.DT_ISSUED
end-SELECT
end-Procedure

!*********************************
!Procedure : Check-if-Terminated
!*********************************
begin-procedure Check-if-Terminated
  Let $EmplTerm = 'N'
  LET $ANDCLAUSE =''

  LET $TRORG_LINK_UNIT=RTRIM(LTRIM($ORG_LINK_UNIT,' '),' ')
IF $TRORG_LINK_UNIT<>''


if $ORG_LINK_OPTN ='CO'

  Let $ANDCLAUSE='AND JT.COMPANY='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='DE'

  Let $ANDCLAUSE='AND JT.DEPTID='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='LO'

  Let $ANDCLAUSE='AND JT.LOCATION='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='PG'

  Let $ANDCLAUSE='AND JT.PAYGROUP='''||$ORG_LINK_UNIT||''''
end-if

if $ORG_LINK_OPTN ='ET'

  Let $ANDCLAUSE='AND JT.ESTABID='''||$ORG_LINK_UNIT||''''
end-if
END-IF


begin-SELECT
JT.EMPLID           &eid
JT.EMPL_RCD


  Let $EmplTerm = 'Y'

  FROM PS_JOB JT

  WHERE JT.EMPLID             = $Emplid
  AND JT.EMPL_RCD          = #EmplRcd

    [$ANDCLAUSE]

    AND JT.ACTION IN ('TER','RWP','TWB','TWP','RET')
    AND JT.ACTION = &Action
    AND JT.EFFDT IN (SELECT (JT1.EFFDT)
                     FROM PS_JOB JT1
                       WHERE JT1.EMPLID=JT.EMPLID
                      AND   JT1.EFFDT BETWEEN $FromDate AND $ToDate)

    AND JT.EFFSEQ =(SELECT MAX(JT2.EFFSEQ) FROM PS_JOB JT2
                        WHERE JT2.EMPLID=JT.EMPLID AND JT2.EFFDT = JT.EFFDT)



end-SELECT
end-procedure


!*********************************
!Procedure : Print-Report
!*********************************
begin-procedure Print-Report

let $trCompSocSo=rtrim(ltrim(&CompSocSo,' '),' ')

        if #TotRecs >=12
         or #CurLine >= 73
        Let #TotRecs = 1
            Let $NewPage = 'Y'                       
    
            let #PageTotal_dec = (#PageTotal - trunc(#PageTotal, 0)) * 100
            let #PageTotal = trunc(#PageTotal, 0)
            if #Empldeduct_dec<>0
            move #PageTotal to $PageTotal 999999
            else
            let $Empldeduct='00'
         end-if    

        do Print-Values-Box1 ($PageTotal, 113, 73, 6)
        print '.' (73, 132)
        if #PageTotal_dec <> 0
           move #PageTotal_dec to $PageTotal_dec 99
        else
           let $PageTotal_dec = '00'
        end-if
        do Print-Values-Box1 ($PageTotal_dec, 133, 73, 2)

!        print #PageTotal (72,107) BOLD edit '99999.99'
        Let #PageTotal =0
        new-page
        !print #Page-Count  (12,103)     BOLD edit '99999'

    end-if
    
    if $NewPage = 'Y'
       !print #Page-Count  (12,103)     BOLD edit '99999'
       if $PrevCompSocSo<>''
           if $PrevCompSocSo=$trCompSocSo
         let #PGNUM=#PGNUM+1
        else
         let #PGNUM=1
        end-if
      else
         let #PGNUM=1
      end-if
      let $PrevCompSocSo=$trCompSocSo
       !print #PGNUM  (12,103)     BOLD edit '99999'

       Let #CurLine = 1
       Let $NewPage = 'N'

       graphic () font 5 10
       !print $FORM_TYPE (#CurLine,5)

       graphic () font 5 14
       print $ReportTitle1  (#CurLine,41) BOLD
       graphic () font 5 10
       Add 2 to #CurLine
       print $ReportTitle2  (#CurLine,32)
       Add 2 to #CurLine
       graphic () font 5 11
       print $Mth_head  (#CurLine,45) BOLD
       graphic () font 5 13
       print $FORM_TYPE (#CurLine,121) BOLD
       graphic () font 5 10
       
       let $Contr_Month1 = rtrim(ltrim($Contr_Month1, ' '), ' ')
       do Print-Values-Box ($Contr_Month1, 77, #CurLine)
       let $Year_D = rtrim(ltrim($Year_D, ' '), ' ')
       let $Year_D_1 = substr($Year_D, 1, 4)
       !let $Year_D_2 = substr($Year_D, 4, 1)
       !print $Year_D_1       (#CurLine,59)
       do Print-Values-Box ($Year_D_1, 85, #CurLine)
!       let $Contr_Month1_1 = substr($Contr_Month1, 1, 1)
!       let $Contr_Month1_2 = substr($Contr_Month1, 2, 1)
!       print $Contr_Month1_1  (#CurLine,50) BOX
!       print $Contr_Month1_2  (#CurLine,52) BOX
!       print $Year_D_2       (#CurLine,59) BOX

       Add 1 to #CurLine
       graphic () font 5 8
       print $bulan (#CurLine, 78)
       print $tahun (#CurLine, 89)       

       !Add 1 to #CurLine
       graphic () font 5 9
       !print $MONTH_CONTRIB (#CurLine,25) BOLD
       !Add 1 to #CurLine
       !print $ReportTitle3 (#CurLine,25) BOLD
       let $Next_Month_End = ' ' || $Next_Month_End
       !print $Next_Month_End (#Curline) BOLD
!      !print $Text1          (#Curline,101)


       !graphic (#CurLine,65,5) vert-line
       !graphic (#CurLine,83,5) vert-line
       !graphic (#CurLine,101,5) vert-line
       !graphic (13,73,16) vert-line


       Add 2 to #CurLine

       !********* Commented out **********!
       !graphic (#CurLine,21,2) box 1
       !print $AMOUNT1 (#CurLine,72)
       !print $PAGE_NO    (#CurLine,103)
       !print $CASH_PAYMENT (#CurLine,24)
       !print $NO_OF_EMPLOYEES   (#CurLine,85)

       !graphic (#CurLine,21,2) box 1
       !print $CHEQUE_NO (#CurLine,24)
       !graphic (#CurLine,44,15) horz-line
       !print $Currency (#CurLine,66)
       !graphic () font 5 10
       !print &GrpDeduct (#CurLine,67) BOLD edit '99999999.99'
       !print &TotalCount (#CurLine,91) BOLD

       !let #Save_Line = #CurLine
       !graphic (#CurLine,19,106) horz-line
       !let #CurLine = #Save_Line

       !graphic () font 5 8
       !print $BANK (#CurLine,108)

       !graphic () font 5 8
       !print $NBR (#CurLine, 9)
       !print &CompSocso (#Curline,21) BOLD
       !let $print_val = &CompSocso
       !do Print-Values-Box ($print_val, 21, #Curline)
       !graphic () font 5 8

       !print $EMPLOYER (#CurLine, 9)
       !print $NAME_EMPLOYER (#CurLine, 9)
       !graphic () font 5 10
       !print &CompName  (#CurLine,20) BOLD
       
       !graphic () font 5 8
       !print $ADDRESS_EMPLOYER   (#CurLine, 9)
       !********* Commented out **********!


       graphic (#CurLine,1,139) box 24 10
       Let #CurLine1 = #CurLine - 1
       graphic (#CurLine1,41,4) vert-line 10 
       graphic (#CurLine1,105,4) vert-line 10
       graphic () font 5 9

       !Add 1 to #CurLine
       print $NBR   (#CurLine,3)
       print $Coid  (#CurLine,48)
       print $AMOUNT1 (#CurLine,109)
       graphic (#CurLine,1,139) horz-line 10

       Add 1 to #CurLine
 
       Add 1 to #CurLine
       let $print_val = &CompSocso
       let $print_val = lpad($print_val,12,' ')
       do Print-Values-Box1($print_val, 3, #CurLine, 12)
       
       do Get-Comp-Registration
       Let $coid_number = $RegNum
       Let $coid_number = lpad($coid_number,20,' ')
       do Print-Values-Box1($coid_number, 43, #CurLine, 20)
 
       Let #Deduct = &GrpDeduct
       Let #Deduct1 = trunc(#Deduct,0)
       Let #Deduct2 = #Deduct - #Deduct1
       Let $Deduct1 = edit(#Deduct1, '999999')
  
       if #Deduct2 <> 0
          Let $Deduct2 = edit(#Deduct2*100, '99')
       else
          Let $zero = '00'
          Let $Deduct2 = edit($zero, '99')
       end-if

       do Print-Values-Box1($Deduct1, 109, #CurLine, 6)
       print '.' (#CurLine, 128)
       do Print-Values-Box1($Deduct2, 129, #CurLine, 2)

       Add 1 to #CurLine
       graphic (#CurLine,1,139) horz-line 10

       Add 1 to #CurLine
       Let $Amaun_heading2 = ''
       Let $Amaun_heading2 = $Amaun_heading || ' ' || $PrnDueDate
       print $Amaun_heading2 (#CurLine, 3)      
       
       graphic (#CurLine,1,139) horz-line 10
       graphic (#CurLine,94,19) vert-line 10
       graphic (#CurLine,119,4) vert-line 10
      
       Add 1 to #CurLine
       print $NAME_EMPLOYER (#CurLine, 3)

       Let #CurLine2 = #CurLine + 2
       print &CompName  (#CurLine2, 3) BOLD
       Add 1 to #CurLine2
       if $ADDRESS1 <> ''
         print $ADDRESS1   (#CurLine2, 3)
         Add 1 to #CurLine2
       end-if
       if $ADDRESS2 <> ''
         print $ADDRESS2   (#CurLine2, 3)
         Add 1 to #CurLine2
       end-if
       if $ADDRESS3 <> ''
         print $ADDRESS3   (#CurLine2, 3)
         Add 1 to #CurLine2
       end-if
       if $ADDRESS4 <> ''
         print $ADDRESS4   (#CurLine2, 3)
         Add 1 to #CurLine2
       end-if
       if $CITY <> ''
         print $CITY   (#CurLine2, 3)
         Add 1 to #CurLine2
       end-if 
       if $STATE <> ''
         if $POSTAL <> ''
            Let $temp11 = $STATE || '-' || $POSTAL
            print $temp11   (#CurLine2, 3)
            Add 1 to #CurLine2
         else
            print $STATE   (#CurLine2, 3)
            Add 1 to #CurLine2
         end-if
       end-if
       if $COUNTRY <> ''
          print $COUNTRY   (#CurLine2, 3)
       end-if       

       print $PAGE_NO (#CurLine, 101)
       print $NO_OF_EMPLOYEES (#CurLine, 122)
       graphic (#CurLine,1,139) horz-line 10

       Add 2 to #CurLine
       let $PGNUM = edit(#PGNUM,'999')
       !let $PGNUM = lpad($PGNUM,3,' ')
       do Print-Values-Box1($PGNUM, 97, #CurLine, 3)
       print '/' (#CurLine,107)
       
       move &TotalCount to #TotalCount
       Let #Noofpages = ceil(#TotalCount / 11)
       move #Noofpages to $Noofpages 999
       
       do Print-Values-Box1($Noofpages, 108, #CurLine, 3)
       let $Totalcount = edit(&TotalCount,'9999')
       do Print-Values-Box1($Totalcount, 121, #CurLine, 4)

       Add 1 to #CurLine
       graphic (#CurLine,94,46) horz-line 10

       Add 1 to #CurLine
       print $Ejen (#CurLine, 100)
       graphic (#CurLine,94,46) horz-line 10

       Add 1 to #CurLine
       print $Cop (#CurLine, 96)

       print $Slip (29,96)
       do Print-Values-Box1($Empty, 96, 30, 12)
       
       
       Add 12 to #CurLine
       let $FirstPage = 'N'
       
       !********* Commented out **********!
       !add 1 to #Curline
       
       !Add 1 to #CurLine
       !Print $EMPLOYER  (#CurLine, 9)
       !graphic () font 5 9

       !Print $StrAddress (#CurLine,20)  wrap 45 100
       !Print $CompAdr1  (#CurLine,20)
       !Add 2 to #CurLine
       !Print $CompAdr2  (#CurLine,20)
       !Add 2 to #CurLine
       !Print $CompAdr3  (#CurLine,20)
       !Add 4 to #CurLine

       !graphic () font 5 6
       !print $TEXT2 (15,74) bold
       !print $REMARKS14         (16,74) wrap 54  2
       !print $REMARKS2          (18,74)
       !print $REMARKS2_1        (19,74)
       !print $REMARKS3          (20,74)
       !print $REMARKS4          (21,74)
       !print $REMARKS6         (23,74)
       !print $REMARKS7          (23,74)
       !print $REMARKS8          (24,74)
       !print $REMARKS10         (25,74)
       !print $REMARKS11         (26,74)
       !print $REMARKS13         (29,74)
       !print $REMARKS15         (29,74)
       !Add 7 to #CurLine
       !********* Commented out **********!

       Add 3 to #CurLine
       graphic (#CurLine,1,139) box   42 10
       graphic (32,19,39)  vert-line 10
       graphic (32,25,39)  vert-line 10
       graphic (32,52,39)  vert-line 10
       graphic (32,121,39)  vert-line 10
       graphic (#CurLine,1,139) box 5 10
       graphic () font 5 8

       Add 1 to #CurLine
       Let #Curtemp = #CurLine - 1
       print $tarikh (#Curtemp,7)

       Add 1 to #CurLine
       Let #Curtemp = #CurLine - 1
       print $mula (#Curtemp,2)
       print $Sta1 (#CurLine,20)
       print $NUMBER2 (#CurLine,28)
       print $EMPLOYEE_NAME (#CurLine,64)
       print $CONTRIBUTION (#CurLine,125)

       Add 1 to #CurLine
       Let #Curtemp = #CurLine - 1
       print $kerja (#Curtemp,7)
       print $EMPLOYEE_SOCSO_12 (#CurLine,6)
       print $Sta2  (#CurLine,20)
       print '(5)' (#CurLine,129)
       graphic (#CurLine,121,19) horz-line 10


       !********* Commented out **********!
       !print $NUMBER2 (#Curline,2)
       !print $MMBRSHIP_NBR (#Curline,30)
       !print $SOCIAL_USAGE (#Curline,46)

       !print $CONTRIBUTION (#Curline,108)

       !Add 1 to #CurLine
       !print $Ic_NUM    (#Curline,2)
       !print $EMPLOYEE_SOCSO     (#Curline,29)
       !print $EMPLOYEE_NAME      (#Curline,57)
       !print $SOCIAL_USAGE_1     (#Curline,47)
       !graphic (#Curline,105,20)    horz-line
       !********* Commented out **********!

       
       !let $Ic_NUM_1 = rtrim(ltrim($Ic_NUM_1, ' '), ' ')
       !let $Ic_NUM_1 = $Ic_NUM_1 || ' (1)'
       !print $Ic_NUM_1 (#Curline,4)
       
       !let $EMPLOYEE_SOCSO_1 = rtrim(ltrim($EMPLOYEE_SOCSO_1, ' '), ' ')
       !let $EMPLOYEE_SOCSO_1 = $EMPLOYEE_SOCSO_1 || ' (3)'
       !print $EMPLOYEE_SOCSO_1 (#Curline,32)

       Add 1 to #CurLine
       print '(1)' (#CurLine,9)
       print '(2)' (#CurLine,21)
       print '(3)' (#CurLine,37)
       print '(4)' (#CurLine,87)
       

       print $RINGATTS  (#Curline,125)
       print $SEN (#Curline,134)
       add 2 to #CurLine

      graphic () font 5 9
      graphic (72,1,139) box 3 10
      !print $REMARKS16 (73,10)
      !print $REMARKS17  (73,47)
      print $PAGE_TOTAL (73,92) 
      !graphic (75,90,35) box 3 10
      !print $RINGATTS  (75,91)
      !print $TOTAL_FORWARD  (74,45)
      !print $GRAND_TOTAL (76,75)

!      print $REMARKS1 (74,1)
!      graphic (78,72,53) box 7 10
!      graphic () font 5 10
!      graphic (78,72,24) box  3 10
!      print $FOR_OFFICE_USE (79,73)
!      graphic ()  font 4 8
!      print $SIGNATURE1      (79,98)
!      print $RINGKAS         (80,98)
      graphic () font 5 9
      print $SIGNATURE2 (78,1)
!      print $DATE_OF_PAYMENTS  (82,72)
!      print $AMOUNT2           (82,98)
      graphic (78,16,40) horz-line
      !print $PHONE (, 65)
      !graphic (,75,40) horz-line
      !print &PIC_Phone (,75)

      print $NAME_LBL (80,1)
!      graphic () font 5 10
      graphic (80,16,40) horz-line
      print $Person_Inchg (80,16)

!      graphic () font 5 10

      let $rep_title4=$PHONE || ' & '

      print $rep_title4 (82,1)
      print $ReportTitle4 (83,1)
      print &PIC_Phone (82,16)
      !graphic (82,21,36) horz-line

      print $kaedah  (76,88)
      graphic (78,89,3) box 1 10
      print $tunai   (78,93)
      graphic (80,89,3) box 1 10
      print $cek     (80,93)
      print '.........................'  (80,97)
      graphic (78,113,3) box 1 10
      print $kiriman (78,117)
      graphic (80,113,3) box 1 10
      print $lain    (80,117)
      print '.........................'  (80,125)
      print $nocek   (82,88)
      do Print-Values-Box1($Empty, 88, 83, 10)

      end-if
      graphic () font 5 10
      print $ICPassport (#CurLine,28)

      move &Action to $Action
      move &Action_Reason to $Action_Reason

        #IFDEF ORACLE
             Let $FromDate1 = $FromDate
             Let $ToDate1 = $ToDate
        #ELSE
             Let $FromDate1 = translate($FromDate,'-','')
             Let $ToDate1 = translate($ToDate,'-','')
        #END-IF
              
               
        Let #date1 = datediff(strtodate($Empl_JDT),strtodate($FromDate1),'DAY')
        Let #date2 = datediff(strtodate($ToDate1),strtodate($Empl_JDT),'DAY')
            
            !*************For termination cases**********
         
          #IFDEF ORACLE
             Let $FromDate1a = $strtone_dt 
             Let $ToDate1a = $endone_dt
          #ELSE
             Let $FromDate1a = translate($strtone_dt,'-','')
             Let $ToDate1a = translate($endone_dt,'-','')
          #END-IF
          
         
          
          Let #date1a = datediff(strtodate($Empl_JDT),strtodate($FromDate1a),'DAY')
          Let #date2a = datediff(strtodate($ToDate1a),strtodate($Empl_JDT),'DAY')
              
               
      if $Action = 'HIR' or $Action = 'REH' or $Action = 'PRC'
        if #date1 >= 0 and #date2 >= 0
         print 'B'    (#CurLine,21)
        end-if
      end-if
      
      if $Action = 'TER' or $Action = 'RWP' or $Action = 'TWB' or $Action = 'TWP' or $Action = 'RET'
        if #date1a >= 0 and #date2a >= 0
         if $Action_Reason = 'DEA'
            print 'M'    (#CurLine,21)
         else
            print 'H'    (#CurLine,21)
         end-if
        end-if
      end-if
      if $Action = 'LOA'
        if #date1 >= 0 and #date2 >= 0
         print 'T'    (#CurLine,21)
        end-if
      end-if
       if $Action = 'PLA'
        if #date1 >= 0 and #date2 >= 0
         print 'S'    (#CurLine,21)
        end-if
      end-if
          
    
    
    let $PrintDate = $Empl_JDT1 || '/' || $Empl_JDT2 || '/' || $Empl_JDT3
    
    
    
    
    if $PrintDate = '//'
     
    let $PrintDate = ''
    end-if
      print $PrintDate  (#CurLine,3)

    Let $Empltermvalue = 'N'
      if $EmplTerm = 'Y'

      do Get-Empl-SocNbr-Term
         !print 'X' (#CurLine,20) BOLD



         if $changesocso = 'N'
         let $Empltermvalue = 'Y'
         end-if


      end-if


       
      IF $EmplName1 <> '' AND $EmplName2 <> ''
         print $EmplName1  (#CurLine,56)
         add 1 to #CurLine
         print $EmplName2  (#CurLine,56)
        let #CurLine = #CurLine - 1
        let #cnt = #CurLine
      ELSE
      print $EmplName   (#CurLine,56)
        let #cnt = #CurLine
      end-if

      let #Empldeduct = &Empldeduct

       if $Empltermvalue = 'Y'
         let #Empldeduct = 0
         end-if


      let #Empldeduct_dec = (abs(#Empldeduct) - trunc(abs(#Empldeduct), 0)) * 100

      let #Empldeduct = trunc(#Empldeduct, 0)
            if #Empldeduct<>0
      move #Empldeduct to $Empldeduct 999
      else
       let $Empldeduct='00'
      end-if


      do Print-Values-Box1($Empldeduct, 122, #cnt, 3)
      print '.' (#cnt, 132)
      if #Empldeduct_dec<>0
      move #Empldeduct_dec to $Empldeduct_dec 99
      else
        let $Empldeduct_dec='00'
      end-if


      !move #Empldeduct_dec to $Empldeduct_dec 99
      do Print-Values-Box ($Empldeduct_dec, 133, #cnt)
     
      Add 1 to #CurLine
      if #CurLine <> 70
      graphic (#CurLine,1,139)  horz-line 10
      end-if

!      move &Empldeduct to $Empldeduct 99.99
!      do Print-Values-Box ($Empldeduct, 106, #Curline)
!      print &Empldeduct (#CurLine,107)  edit '9999.99'
      Add 1 to #TotRecs
      add 2 to #CurLine
      Let $Action = ''
      Let $Action_Reason = ''
end-procedure


begin-Procedure Report-Parm-Clean
begin-sql
DELETE FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP2
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql
begin-sql
DELETE FROM PS_GPMY_PY_TMP3
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_RPT_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_PR_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_EMPL_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

end-Procedure

!*********************************
!Procedure : Print-Due-Date
!*********************************

begin-procedure Print-Due-Date($nxt_mnth_end,:$PrnDueDt)

Do dtu-Parse-Date($nxt_mnth_end,#D_YR,#D_MN,#D_DY)

if (( mod(#D_DY, 100) >= 11 ) AND ( mod(#D_DY, 100) <= 13 ))
      Let $DY_suffix = 'th'
else
   Let #D_DY_eval = mod(#D_DY, 10)
   
   EVALUATE #D_DY_eval
   
    WHEN = 1
     Let $DY_suffix = 'st'
    break
   
    WHEN = 2
     Let $DY_suffix = 'nd'
    break
   
    WHEN = 3
     Let $DY_suffix = 'rd'
    break
   
    WHEN-Other
     Let $DY_suffix = 'th'
  
   End-Evaluate 

end-if
   
    Let #Check_Month = #D_MN
    Do Get-Month-Name(#Check_Month,$Month_Print)
    
    
      Let $Day_Print = edit(#D_DY,'99')
      Let $Year_Print = edit(#D_YR,'9999')
      Let $PrnDueDt = $Day_Print || $DY_suffix || ' ' || $Month_Print || ' ' || $Year_Print

end-procedure
!********************************************************************
! Procedure :   Get-Month-Name
!********************************************************************
Begin-Procedure Get-Month-Name (#monthno,:$Mon_Print)
      Let $Month_Print = ''
      Evaluate #monthno
         When = 1
               Let $Mon_Print = 'Jan'
               break
         When = 2
               Let $Mon_Print = 'Feb'
               break
         When = 3
               Let $Mon_Print = 'Mar'
               break
         When = 4
               Let $Mon_Print = 'Apr'
               break
         When = 5
               Let $Mon_Print = 'May'
               break
         When = 6
               Let $Mon_Print = 'Jun'
               break
         When = 7
               Let $Mon_Print = 'Jul'
               break
         When = 8
               Let $Mon_Print = 'Aug'
               break
         When = 9
               Let $Mon_Print = 'Sep'
               break
         When = 10
               Let $Mon_Print = 'Oct'
               break
         When = 11
               Let $Mon_Print = 'Nov'
               break
         When = 12
               Let $Mon_Print = 'Dec'
               break
      End-Evaluate
End-Procedure   !Get-Month-Name
!
!********************************************************************
#include 'prcslng.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  !Routines for date manipulation
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'readxlat.sqc'  !Enables XLAT table read
#Include 'rotname1.sqc'  !Rotate-Name Procedure
#include 'sqrtrans.sqc'     ! Translate SQR strings to given langua
 #include 'adformat.sqc'   !Address formatting
 #Include 'getlogou.sqc'

