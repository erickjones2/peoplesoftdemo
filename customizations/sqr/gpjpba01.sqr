!***********************************************************************
!   GPJPBA01:  Banking Report                                          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:46:49                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !Printer and page-size initialization, SETUP31 and
                        !  SETUP32 SQCs to support HTML, HP PCL, PostScript,
                        !  PDF and Window in addition to Line Printer as
                        !  the output type.


!***********************************************************************
! begin-report                                                         *                                                          *
!                                                                      *
! Called By: N/A                                                       *
! Calls:     Init-Processing                                           *
!            Get-Values                                                *
!            Process-Main                                              *
!            Reset                                                     *
!            Delete-From-AE-Tables                                     *
!            End-Report                                                *
!***********************************************************************

begin-report

  do Init-Processing

  do Get-Values

  do Get-Header

  do Process-Main

  do Reset                        ! called from reset.sqc

  do Delete-From-AE-Tables

  do Update-Prcs-Run-Status       ! called from prcsapi.sqc to update
                                  ! the Process Monitor to Success
end-report

!***********************************************************************
! Select-Parameters                                                    *                                                          *
!                                                                      *
! Called By: Get-Values                                                *
!***********************************************************************

begin-procedure Select-Parameters

let $Quote = ''''

begin-SELECT

#ifdef debugy
    show 'BEGINNING RUNCONTROL SELECT'
#end-if

A.SRC_BANK_ID
A.CAL_RUN_ID
A.FILE_HANDLE

FROM PS_GPJP_RC_BA01 A
WHERE A.OPRID       = $PRCS_OPRID
AND A.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
end-SELECT

end-procedure !Select-Parameters

!***********************************************************************
! Init-Processing                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Define-Prcs-Vars        - prcsapi.sqc (prcsdef.sqc)    *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Init-Report                                            *
!               Init-Number             - number.sqc                   *
!               Get-Language-Codes      - prcslng.sqc                  *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!***********************************************************************

begin-procedure Init-Processing

  do Init-Datetime                ! called from datetime.sqc

  do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)

  do Define-Prcs-Vars             ! called from prcsapi.sqc (prcsdef.sqc)

  do Get-Run-Control-Parms        ! In prcsapi.sqc
  
  do Get-Language-Codes           ! called from prcslng.sqc
  
  do Init-Report

  do Init-Number                  ! called from number.sqc

  Let #FileCount = 1

end-procedure !Init-Processing

!***********************************************************************
! Init-Report                                                          *
!                                                                      *
! Called By: Init-Processing                                           *
! Calls:     Init_Report_Translation    -   sqrtrans.sqc               *
!            Append_Report_Translation  -   sqrtrans.sqc               *
!            Get_Field_Information                                     *
!            Format-DateTime                                           *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header, date formatting, time           *
!               formatting, translations & strings tables retrievals.  *
!***********************************************************************

begin-procedure Init-Report

! Column definitons

!Transaction Columns
  #define Col_1         1
  #define Col_2         9
  #define Col_3         19
  #define Col_4         71
  #define Col_5         77
  #define Col_6         109
  #define Col_7         114
  #define Col_8         146
  #define Col_9         156
  #define Col_10        165

! Header Columns
  #define Col_2h        17
  #define Col_3h        25
  #define Col_3hb       37
  #define Col_4h        40
  #define Col_5h        54
  #define Col_6h        67
  #define Col_7h        81
  #define Col_7hb       71
  #define Col_8h        98
  #define Col_9h        114

! Footer Columns
  #define Col_5f        91
  #define Col_10f       163

! Translations procedures & Strings Table retrievals.

  do Init_Report_Translation ($ReportID, $curr_language_cd)
  do Append_Report_Translation ('GPJPBA01')

  do Get_Field_Information ('GPJPBA01','SRC_BANK_ID',     $SRC_BANK_ID_lbl,     #DW)
  do Get_Field_Information ('GPJPBA01','BANK_ID',         $BANK_ID_lbl,         #DW)
  do Get_Field_Information ('GPJPBA01','BRANCH_ID',       $BRANCH_ID_lbl,       #DW)
  do Get_Field_Information ('GPJPBA01','COMPANY_CODE',    $COMPANY_CODE_lbl,    #DW)
  do Get_Field_Information ('GPJPBA01','COMPANY_NAME',    $COMPANY_NAME_lbl,    #DW)
  do Get_Field_Information ('GPJPBA01','DEPOSIT_TYPE',    $DEPOSIT_TYPE_lbl,    #DW)
  do Get_Field_Information ('GPJPBA01','ACCOUNT_NUM',     $ACCOUNT_NUM_lbl,     #DW)
  do Get_Field_Information ('GPJPBA01','TRANS_SPEC_DAY',  $TRANS_SPEC_DAY_lbl,  #DW)
  do Get_Field_Information ('GPJPBA01','EMPL',            $EMPL_lbl,            #DW)
  do Get_Field_Information ('GPJPBA01','DEP_NAME',        $DEP_NAME_lbl,        #DW)
  do Get_Field_Information ('GPJPBA01','TRANS_BANK_ID',   $TRANS_BANK_ID_lbl,   #DW)
  do Get_Field_Information ('GPJPBA01','TRANS_BANK_NAME', $TRANS_BANK_NAME_lbl, #DW)
  do Get_Field_Information ('GPJPBA01','BRANCH_NAME',     $BRANCH_NAME_lbl,     #DW)
  do Get_Field_Information ('GPJPBA01','TRANSFER_AMOUNT', $TRANSFER_AMOUNT_lbl, #DW)
  do Get_Field_Information ('GPJPBA01','TRANS_COUNT',     $TRANS_COUNT_lbl,     #DW)
  do Get_Field_Information ('GPJPBA01','RPT_TITLE',       $RPT_TITLE_lbl,       #DW)
  do Get_Field_Information ('GPJPBA01','SEQ_NUM',         $SEQ_NUM_lbl,         #DW)
  do Get_Field_Information ('GPJPBA01','CHECKING',        $CHECKING_lbl,        #DW)
  do Get_Field_Information ('GPJPBA01','REGULAR',         $REGULAR_lbl,         #DW)
  do Get_Field_Information ('GPJPBA01','CAL_GROUP',       $CAL_GROUP_lbl,       #DW)
  do Get_Field_Information ('GPJPBA01','FILE_HANDLE',     $FILE_HANDLE_lbl,     #DW)

! Report variables.

  let $ReportID       = 'GPJPBA01'
  let $ReportTitle    = $RPT_TITLE_lbl
  let $ReportDate     = $AsOfToday
  let $ReportTime     = $AsOfNow

! Dates:   All of Europe uses date format DD/MM/YYYY
!          The US uses date format of MM/DD/YYYY

! Numbers: The U.S. and the U.K. use NN,NNN.NN
!          The rest of Europe uses NN.NNN,NN

    if $curr_language_cd      = 'ENG'
        let $ReportDateType   = '0'             ! resolved in datetime.sqc
    else
        let $ReportDateType   = '1'
    end-if

    if $curr_language_cd = 'ENG' or $curr_language_cd = 'INE'
        let $ReportSDecimal   = '.'
        let $ReportSThousand  = ','
    else
        let $ReportSDecimal   = ','             ! resolved in number.sqc
        let $ReportSThousand  = '.'             ! resolved in number.sqc
    end-if


! Initialize date formatting.                                          *

    let $Date_Init = '1900-01-01 00:00:00.000'

    #ifdef ORACLE
           let $Date_Init = '01-NOV-1999'
    #end-if

    do Format-DateTime($Date_Init, $out999, {DEFDATE}, '', '')

end-procedure !Init-Report

!***********************************************************************
! Get-Values                                                           *
!                                                                      *
! Called By: begin-report                                              *
! Calls:     Ask-Values         -   this program                       *
!            Select-Parameters  -   tlrnctl1.sqc                       *
!                                                                      *
! Description:  If process instance blank, prompt user for input       *
!               If populated, get values from run control              *
!               Format dates to print in header                        *
!***********************************************************************

begin-procedure Get-Values

    if $prcs_process_instance = ''
        do Ask-Values
    else
        do Select-Parameters
    end-if

    do Format-DateTime($FromDate,$HdgFromDt,{DEFDATE}, '', '')
    do Format-DateTime($ThruDate,$HdgThruDt,{DEFDATE}, '', '')

end-procedure !Get-Values

!***********************************************************************
! Ask-Values                                                           *
!                                                                      *
! Called By: Get-Values                                                *
! Calls:     none                                                      *
!                                                                      *
! Description: Prompt user to input values                             *
!***********************************************************************

begin-procedure Ask-Values

  input $IncludeDetail 'Include Detail?  Y/N' TYPE=char maxlen=1

end-procedure !Ask-Values

!***********************************************************************
! Get-Header                                                           *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Description:  Loads Header specific information from the database.   *
!***********************************************************************

begin-procedure Get-Header

begin-select
H.BANK_CD
H2.BANK_NM
H.BRANCH_EC_CD
H3.DESCR
H.GPJP_COMPANY_CODE
H4.ACCOUNT_NAME
H.GPJP_ACCOUNT_TYPE
  If &H.GPJP_ACCOUNT_TYPE = '1'
    Let $GPJP_ACCOUNT_TYPE = $REGULAR_lbl
  Else
    Let $GPJP_ACCOUNT_TYPE = $CHECKING_lbl
  End-if

H.ACCOUNT_EC_ID
H.GPJP_CHARDATE
From PS_GPJP_BA_HEADER H, PS_BANK_EC_TBL H2, PS_BANK_BRANCH_TBL H3, PS_SRC_BANK H4
Where H.BANK_CD = H2.BANK_CD
and H.COUNTRY_CD = H2.COUNTRY_CD
and H.BANK_CD = H3.BANK_CD
and H.COUNTRY_CD = H3.COUNTRY_CD
and H.BRANCH_EC_CD = H3.BRANCH_EC_CD
and H.SRC_BANK_ID = H4.SRC_BANK_ID
and H.JOBINSTANCE = #prcs_job_instance
end-select

begin-select
H5.DESCR
from PS_GP_CAL_RUN H5
Where H5.CAL_RUN_ID = &A.CAL_RUN_ID
end-select

begin-select
H6.DESCR
from PS_GPJP_FILE_HANDL H6
Where H6.FILE_HANDLE = &A.FILE_HANDLE
end-select

end-procedure !Get-Header

!***********************************************************************
! Get-Trailer                                                          *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Loads Trailer specific information from the database   *
! that is displayed at the end of the report.                          *
!***********************************************************************

begin-procedure Get-Trailer

begin-select
F.RECORD_COUNT
F.GP_PMT_AMT
From PS_GPJP_BA_TRAILER F
Where F.JOBINSTANCE = #prcs_job_instance
end-select

end-procedure !Get-Trailer

!***************************
begin-heading 9
!***************************

#include 'stdhdg01.sqc'

!***********************************************************************
! Print column definitions.  Some fields are lined up vertically with  *
!   other fields on the report.  The first occurence of a column       *
!   location is defined.  After that, fields that occur in the same    *
!   column use the first field's column definition.  Field labels end  *
!   in _lbl.  Other column definitions are for the field values.       *
!***********************************************************************

!Line 1
print $CAL_GROUP_lbl (,{Col_1})
print ':' (,)
print &A.CAL_RUN_ID (,{Col_2h})
print &H5.DESCR (,{Col_3hb})
print $FILE_HANDLE_lbl (,{Col_5h})
print ':' (,)
print &A.FILE_HANDLE (,{Col_6h})
print &H6.DESCR (,{Col_7hb})

!Line 2
print $SRC_BANK_ID_lbl (+1,{Col_1})
print ':' (,)
print &A.SRC_BANK_ID (,{Col_2h})
print $COMPANY_CODE_lbl (,{Col_4h})
print ':' (,)
print &H.GPJP_COMPANY_CODE (,{Col_5h})
print $COMPANY_NAME_lbl (,{Col_6h})
print ':' (,)
print &H4.ACCOUNT_NAME (,{Col_7h})

!Line 3
print $BANK_ID_lbl (+1,{Col_1})
print ':' (,)
print &H.BANK_CD (,{Col_2h})
print &H2.BANK_NM (,{Col_3h})
print $DEPOSIT_TYPE_lbl (,{Col_6h})
print ':' (,)
print $GPJP_ACCOUNT_TYPE (,{Col_7h})
print $TRANS_SPEC_DAY_lbl (,{Col_8h})
print ':' (,)
print &H.GPJP_CHARDATE (,{Col_9h})

!Line 4
print $BRANCH_ID_lbl (+1,{Col_1})
print ':' (,)
print &H.BRANCH_EC_CD (,{Col_2h})
print &H3.DESCR (,{Col_3h})
print $ACCOUNT_NUM_lbl (,{Col_6h})
print ':' (,)
print &H.ACCOUNT_EC_ID (,{Col_7h})

!Transaction Header Line
print $SEQ_NUM_lbl (+2,{Col_1})
print $EMPL_lbl (,{Col_2})
print $DEP_NAME_lbl (,{Col_3})
!print $TRANS_BANK_ID_lbl (,{Col_4})
print $TRANS_BANK_NAME_lbl (,{Col_4})
!print $BRANCH_ID_lbl (,{Col_6})
print $BRANCH_NAME_lbl (,{Col_6})
print $DEPOSIT_TYPE_lbl (,{Col_8})
print $ACCOUNT_NUM_lbl (,{Col_9})
print $TRANSFER_AMOUNT_lbl (,{Col_10})

print '-' (+1,1,176) fill

end-heading

!***********************************************************************
! Process-Main                                                         *
!                                                                      *
! Called By: begin-report                                              *
! Calls:     Get-Trailer                                               *
!            Generate-Trailer                                          *
!***********************************************************************

begin-procedure Process-Main

Let #Counter = 0

begin-select
B.EMPLID (+1,{Col_2})
  Let #Counter = #Counter + 1
  Let $Counter = edit(#Counter,'99999')
  print $Counter (,{Col_1})
C.ACCOUNT_NAME (,{Col_3})
B.GPJP_BANK_CD (,{Col_4})
D.BANK_NM (,{Col_5})
B.GPJP_BRANCH_EC_CD (,{Col_6})
E.DESCR (,{Col_7})
B.ACCOUNT_TYPE_PYE
  If &B.ACCOUNT_TYPE_PYE = '1'
    Let $ACCOUNT_TYPE_PYE = $REGULAR_lbl
  Else
    Let $ACCOUNT_TYPE_PYE = $CHECKING_lbl
  End-if
  print $ACCOUNT_TYPE_PYE (,{Col_8})

B.GPJP_ACCOUNT_EC_ID (,{Col_9})
B.GP_PMT_AMT
  let $GP_PMT_AMT = Edit(&B.GP_PMT_AMT,'9999999999')
  print $GP_PMT_AMT (,{Col_10})

From PS_GPJP_BA_TRANS B, PS_PYE_BANKACCT C, PS_BANK_EC_TBL D, PS_BANK_BRANCH_TBL E

Where B.EMPLID = C.EMPLID
and B.ACCOUNT_ID = C.ACCOUNT_ID
and B.BANK_CD = D.BANK_CD
and B.COUNTRY_CD = D.COUNTRY_CD
and B.BANK_CD = E.BANK_CD
and B.COUNTRY_CD = E.COUNTRY_CD
and B.BRANCH_EC_CD = E.BRANCH_EC_CD
and B.JOBINSTANCE = #prcs_job_instance
order by B.EMPLID
end-select

do Get-Trailer
do Generate-Trailer

end-procedure !Process-Main

!***********************************************************************
! Delete-From-AE-Tables                                                *
!                                                                      *
! Called By: begin-report                                              *
!***********************************************************************

begin-procedure Delete-From-AE-Tables

begin-sql
Delete from PS_GPJP_BA_HEADER
Where JOBINSTANCE = #prcs_job_instance;

Delete from PS_GPJP_BA_TRANS
Where JOBINSTANCE = #prcs_job_instance;

Delete from PS_GPJP_BA_TRAILER
Where JOBINSTANCE = #prcs_job_instance
end-sql

end-procedure !Delete-From-AE-Tables

!***********************************************************************
! Generate-Trailer                                                     *
!                                                                      *
! Called By: Process-Main                                              *
!***********************************************************************

begin-procedure Generate-Trailer

  print $TRANS_COUNT_lbl (+3,{Col_4})
  print ':' (,)
  print &F.RECORD_COUNT (,{Col_5f})
  let $GP_PMT_AMT = Edit(&F.GP_PMT_AMT,'999999999999')
  print $GP_PMT_AMT (,{Col_10f})

end-procedure !Generate-Trailer



!***********************************************************************
! Additional SQCs included in the report                               *
!***********************************************************************

#include 'datetime.sqc'     !Routines for date and time formatting
#include 'datemath.sqc'     !Date conversion procedures
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
#include 'prcsapi.sqc'      !Replaces stdapi.sqc
#include 'prcslng.sqc'      !Replaces getrplng.sqc
#include 'reset.sqc'        !Reset printer procedure
#include 'number.sqc'       !Routines to format numbers
