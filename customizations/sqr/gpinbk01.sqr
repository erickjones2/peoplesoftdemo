!***********************************************************************
!  GPINBK01.sqr
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2014, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2014/04/22:01:34:03                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! Global Payroll       Release 8                                       *
!***********************************************************************
#include 'setenv.sqc'
!***********************************************************************
!  Begin Setup
!***********************************************************************
begin-setup
#include "setupdb.sqc"
end-setup

#include 'number.sqc'
#include 'reset.sqc'     !Reset Printer Procedure
#include 'curdttim.sqc'  !Get Current Date Time
#include 'datemath.sqc'  !SQR date arithmetic procedures
#include 'timemath.sqc'  !SQR time arithmetic procedures
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'prcsapi.sqc'   !Update Process Request API
#include 'prcsdef.sqc'   !Update Process Request variable declare
#include 'stdapi.sqc'    !Process Scheduler API


!***********************************************************************
begin-heading 10
!***********************************************************************


print 'Date:' (1,2) BOLD
Date-time (,7)  MM/DD/YYYY
print 'Statement Of Salary/Reimbursements/Other Payments'(1,1,0) center  BOLD
print 'Corporate Account number:'(+3,2) BOLD
print $src_account_nbr (,30) BOLD
print 'Calendar Group ID:' (,70)  BOLD
print $CAL_RUN_ID (,90)  BOLD
print 'Bank Name:' (+3,2)  BOLD
print $bankname (,30)  BOLD
print 'Branch:'    (,70)  BOLD
print $branch_descr (,90)  BOLD
print '-'       (+1,1,118) fill BOLD
print 'EmplId' (+2,1) BOLD
print 'Name'  (,15) BOLD
print 'Account Number' (,45) BOLD
print 'Amount S/R/OP'  (,69)   BOLD
print 'Type Credit/Debit' (,84) BOLD
print '-'       (+2,1,118) fill BOLD

end-heading

!***********************************************************************
begin-Report
!***********************************************************************

   do Init-Report
   do Stdapi-Term

end-Report

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************

        let #file_cnt = 0
        let #line = 4
        let #col = 1
        do Init-DateTime
        do Init-Number
        do Stdapi-Init
        let $curr_code = 'INR'
        let $solid = '0012'
        let $tran_type = 'C'
        let $tran_desc = 'Credit'
        do get-runcntl-record

        do process-records

end-procedure


!***********************************************************************
begin-procedure get-runcntl-record
!***********************************************************************

begin-select
AA.OPRID &AA.OPRID
AA.RUN_CNTL_ID &AA.RUN_CNTL_ID
AA.CAL_RUN_ID  &AA.CAL_RUN_ID

        let $CAL_RUN_ID = &AA.CAL_RUN_ID



from PS_GPIN_BANK_RC AA
where AA.OPRID = $Prcs_Oprid
and   AA.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select

end-procedure


!***********************************************************************
begin-procedure open-files
!***********************************************************************
let #file_cnt = #file_cnt + 1

open $filename as #file_cnt for-writing RECORD=100 filestatus=#filestatus
if #filestatus <> 0
        show 'Error opening input file'
        stop
end-if

end-procedure


!***********************************************************************
begin-procedure process-records
!***********************************************************************

LET $first_time='Y'

begin-select
A.EMPLID
A.GP_PAYGROUP
A.CAL_ID
A.INSTANCE
A.GP_PMT_AMT
A.REVERSAL_IND
A.SRC_BANK_ID
A.PMT_STATUS
!B.ACCOUNT_EC_ID
C.NAME

                !let $account_nbr = &B.ACCOUNT_EC_ID
                let $name        = &C.NAME


        IF $first_time='Y'

                let $filename = '{FILEPREFIX}' || rtrim(&A.SRC_BANK_ID,' ') || '.DAT'
                let $filename = rtrim($filename,' ')

                #ifdef OS390
                    let #pos  = instr($sqr-report,'GPINBK01',0)
                    let #pos  = #pos - 1
                    let $path = substr($sqr-report,1,#pos)
                    let $filename = $path || rtrim(&A.SRC_BANK_ID,' ') || '.DAT'
                #endif

                #ifdef OS400
                    let #pos  = instr($sqr-report,'GPINBK01',0)
                    let #pos  = #pos - 1
                    let $path = substr($sqr-report,1,#pos)
                    let $filename = $path || rtrim(&A.SRC_BANK_ID,' ') || '.DAT'
                #endif

                #ifdef MVS
                    let #pos  = instr($sqr-report,'GPINBK01',0)
                    let #pos  = #pos - 1
                    let $path = substr($sqr-report,1,#pos)
                    let $filename = $path || rtrim(&A.SRC_BANK_ID,' ') || '.DAT'
                #endif

                !Show '$filename: ' $filename
                do open-files

                let $first_time = 'N'
                let $calid = &A.CAL_ID
                let $SRC_BANK=&A.SRC_BANK_ID
                do get-run-type
                do get-src-bank-details
        END-IF

        if &A.CAL_ID <> $calid
                do get-run-type
                let $calid = &A.CAL_ID
        end-if

        if &A.SRC_BANK_ID <> $SRC_BANK
                do close-file
                let #line = 4
                let #col = 1
                let $filename = '{FILEPREFIX}' || rtrim(&A.SRC_BANK_ID,' ') || '.DAT'
                let $filename = rtrim($filename,' ')
                new-page
                do open-files
                do get-run-type
                do get-src-bank-details
                let $CALID=&A.CAL_ID
                let $SRC_BANK=&A.SRC_BANK_ID
        end-if


        let $emplid = &A.EMPLID
        let #tran_amt = &A.GP_PMT_AMT

        do get-employee-net-pay-distrib

from PS_GP_PAYMENT A ,  PS_PERSON_NAME C


where   A.CAL_RUN_ID = &AA.CAL_RUN_ID
        AND A.PMT_STATUS = 'F'
        AND A.EMPLID = C.EMPLID
        AND A.PMT_TYPE = '01'


order by A.SRC_BANK_ID,A.CAL_ID, A.EMPLID

end-select
end-procedure

!***********************************************************************
begin-procedure write-file
!***********************************************************************
write #file_cnt from
        $account_nbr:16
        $curr_code:3
        $solid:8
        $tran_type:1
        $distrib_amt:15
        $particulars:30

end-procedure


!***********************************************************************
begin-procedure get-run-type
!***********************************************************************
begin-select
T.DESCR,
P.RUN_TYPE
FROM PS_GP_PYE_PRC_STAT P, PS_GP_RUN_TYPE T
WHERE P.CAL_ID = &A.CAL_ID
AND   P.EMPLID = &A.EMPLID
AND   P.CAL_RUN_ID = &AA.CAL_RUN_ID
AND P.RUN_TYPE = T.RUN_TYPE
end-select
end-procedure


!***********************************************************************
begin-procedure get-src-bank-details
!***********************************************************************

begin-select
E.SRC_BANK_ID
E.ACCOUNT_EC_ID
F.BANK_NM
E.COUNTRY_CD
E.BANK_CD
E.BRANCH_EC_CD

        let $src_account_nbr = &E.ACCOUNT_EC_ID
        let $bankname = &F.BANK_NM


FROM PS_SRC_BANK E,PS_BANK_EC_TBL F
WHERE E.SRC_BANK_ID = &A.SRC_BANK_ID
AND   E.BANK_CD = F.BANK_CD
AND   E.COUNTRY_CD = F.COUNTRY_CD
end-select

let $branch_exists = 'N'
let $branch_descr = 'None'
begin-select
G.DESCR

        let $branch_exists = 'Y'
        let $branch_descr = &G.DESCR

FROM PS_BANK_BRANCH_TBL G
WHERE G.COUNTRY_CD =  &E.COUNTRY_CD
AND   G.BANK_CD = &E.BANK_CD
AND   G.BRANCH_EC_CD = &E.BRANCH_EC_CD
end-select

end-procedure


!***********************************************************************
BEGIN-PROCEDURE get-employee-net-pay-distrib
!***********************************************************************
let $net_dist_found = 'N'
BEGIN-SELECT
ND.EMPLID
ND.EMPL_RCD
ND.RUN_TYPE


        LET $net_dist_found = 'Y'

FROM PS_GP_NET_DIST ND
WHERE ND.EMPLID = &A.EMPLID
AND   ND.EMPL_RCD = 0
AND   ND.RUN_TYPE = &P.RUN_TYPE
END-SELECT
if $net_dist_found = 'N'
        SHOW 'No Distribution details found for ' &A.EMPLID
else
        do get-dist-dtl
end-if

END-PROCEDURE


!***********************************************************************
begin-procedure get-dist-dtl
!***********************************************************************
let $net_dist_found = 'N'
begin-select loops=1
X.EMPLID
X.EMPL_RCD
X.RUN_TYPE
X.EFFDT
X.INSTANCE
X.ACCOUNT_ID
X.PARTIAL_ALLOWED
X.PRIMARY_ACCT_IND
X.PERCENT_RATE
X.DISTRIB_AMT
X3.ACCOUNT_EC_ID

        !--------- Write the details into this ---

        let $account_nbr = &X3.ACCOUNT_EC_ID
        let #distrib_amt = #tran_amt
        let $distrib_amt = edit(#distrib_amt,'999,990.99')
        let $distrib_amt = (RTRIM(LTRIM($distrib_amt,' '),' '))
         
        LET $net_dist_found = 'Y'

        DO PRINT-REPORT
        DO write-file

        DO update-payment-status

FROM PS_GP_NET_DIST_DTL X, PS_GP_NET_DIST X1 , PS_PYE_BANKACCT X3
WHERE X.EMPLID = &A.EMPLID
AND   X.EMPL_RCD = 0
AND   X.EMPLID   = X1.EMPLID
AND   X.EMPL_RCD = X.EMPL_RCD
AND   X.RUN_TYPE = X1.RUN_TYPE
AND   X.PAYMENT_MTHD <> 'A'
AND   X.EFFDT = (SELECT MAX(X2.EFFDT) FROM PS_GP_NET_DIST_DTL X2
                        WHERE X2.EMPLID = X1.EMPLID
                        AND   X2.EMPL_RCD = X1.EMPL_RCD
                        AND   X2.EFFDT <= (SELECT A1.PRD_END_DT FROM PS_GP_PYE_PRC_STAT A1
                                                WHERE A1.CAL_ID = &A.CAL_ID
                                                AND   A1.GP_PAYGROUP = &A.GP_PAYGROUP
                                                AND   A1.EMPLID = &A.EMPLID
                                                AND   A1.EMPL_RCD = 0 
                                                AND   A1.CAL_RUN_ID = &AA.CAL_RUN_ID))
AND (X.RUN_TYPE = &P.RUN_TYPE OR X1.DEFAULT_IND = 'Y')
AND X1.EMPLID  = X3.EMPLID
AND X3.EFF_STATUS = 'A'
ORDER BY X.INSTANCE
end-select

if $net_dist_found = 'N'
        SHOW 'No Distribution details found for ' &A.EMPLID
end-if

end-procedure

!***********************************************************************
begin-procedure print-report
!***********************************************************************
        If #line > 40
                new-page
                let #line = 4
        end-if


        print $emplid   (#line,#col) BOLD
        print $name     (#line,15)   BOLD
        print $account_nbr      (#line,45)  BOLD
        print #distrib_amt      (#line,67) edit 9,99,999.99 BOLD
        print $tran_desc (#line,85)  BOLD

        let #line = #line + 2
end-procedure


begin-procedure close-file

        close #file_cnt

end-procedure




!***********************************************************************
begin-procedure update-payment-status
!***********************************************************************
begin-sql

UPDATE PS_GP_PAYMENT SET PMT_STATUS = 'T' WHERE EMPLID = &A.EMPLID AND CAL_RUN_ID = &AA.CAL_RUN_ID 
AND PMT_STATUS = 'F' AND PMT_TYPE = '01' 
AND EXISTS (SELECT 'X' FROM PS_GP_NET_DIST WHERE PS_GP_NET_DIST.EMPLID = PS_GP_PAYMENT.EMPLID 
AND EMPL_RCD = 0 AND  RUN_TYPE = &P.RUN_TYPE);

end-sql

end-procedure

