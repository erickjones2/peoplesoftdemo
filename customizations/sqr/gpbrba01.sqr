!***********************************************************************
! GPBRBA01:  EFT Banking                                               *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2016, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  24830561                                            !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'       !Set environment

#define c1 1
#define c8 13
#define c8a 22
#define c2 28
#define c3 65
#define c4 95
#define c4a 90
#define c5 115
#define c6 140
#define c7 160
#define c7a 173
#define c98 159
#define c99 168

begin-Setup
#include 'setupdb.sqc'
 
Declare-Printer   THIS_REPORT
       Type=HPLASERJET
       Font=2
       Point-Size=4
       Pitch=12
       Symbol-Set=0U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
      Orientation=Landscape
      Char-Width= 4     ! 7.2
      Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
 End-Declare
end-Setup

!**************************************
Begin-Report
!**************************************
  Do Init-Report
  Do Select-Parameters
  Do Security-Param
  Do READ-Deposit
  Do Stdapi-Term
  Do Reset
End-Report

!**************************************
Begin-Procedure Init-Report
!**************************************  
  Let #FontStd  = 1            
  Let #SizeStd  = 8  
  
  Move '2' to $ReportDateType
  Move '1' to $ReportYear4

  move '.'                To $ReportSThousand 
  move ','                To $ReportSDecimal
     
  Alter-Locale MONEY-SIGN = 'R$'
  
  DO Init-DateTime
  DO Init-Number
  DO Stdapi-Init
  DO Get-Current-DateTime
  
  Move 'GPBRBA01' to $ReportID
  Move 'TRANSFERÊNCIA BANCÁRIA' to $ReportTitle
  display $ReportID
  display $ReportTitle
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

End-Procedure Init-Report

!**************************************
begin-heading 9
!**************************************
  Print 'PeopleSoft'               (1,) center
  Print $ReportTitle               (2,) center       
  Print 'Relatório:'               (3,1)
  Print $ReportId                  (,28)
  Print 'ID Grupo Calendários:'    (4,1)
  Print $CalRunId                  (,28)
  Print 'Entidade Pagadora:'       (5,1)
  print $PayEntity                 (,28)
  print $PayEntityName             (,42)
  print 'Página:'                  (5,{c98})
  page-number                      (,{c99})
  Print 'Código do Banco:'         (6,1) 
  Print $RBankCD                   (,28) 
  print 'Hora:'                    (,{c98})
  print $ReportTime                (,{c99})
  if $CreateFile = 'Y'
    Print 'Formato do Banco:'        (7,1) 
    Print $BankFormatDescr           (,28)
  end-if
  print 'Data:'                    (7,{c98})
  print $ReportDate                (,{c99})
 
  print '='                        (+1,1,150) fill
  print 'ID PESSOA'                (+1,{c1})
  print 'Nº REGISTRO'              (0,{c8})
  print 'NOME'                     (0,{c2})
  print 'TIPO'                     (0,{c3})
  print 'ID BANCO'                 (0,{c4})
  print 'ID AGÊNCIA'               (0,{c5})
  print 'No. DA CONTA'             (0,{c6})
  print 'VALOR'                    (0,{c7a})
  print '='                        (+1,1,150) fill
end-heading

!**************************************
begin-procedure PrintHeader
!**************************************
  Alter-Printer Point-size = #Sizestd  Font-Type = Proportional Font = #FontStd
  print 'Data Inicio Intervalo:'  (+1,1)
  Do convert-to-dtu-date(&E.PRD_BGN_DT, $PBgnDtP)  
  print $PBgnDtP                  (,35) bold
  print 'Data Término Intervalo:' (,75)
  Do convert-to-dtu-date(&E.PRD_END_DT, $PEndDtP)  
  print $PEndDtP                  (,105) bold
  print ''                        (+1,1)
  if $CreateFile = 'Y'
    Add 1 to #FileSeq
    Let $FileName = ''
    do Open-File
  end-if
end-procedure PrintHeader

!**************************************
begin-procedure PrintFooter
!**************************************
  Alter-Printer Point-size = #Sizestd  Font-Type = Proportional Font = #FontStd
  Print 'TOTAL PAGAMENTOS:'             (+2,{c3}) bold
  Print #SubTotalEmpl                   (,{c4a}) edit 9,999,999,999c
  Print 'TOTAL VALOR:'                  (,{c6}) bold
  Print #SubTotalAmount                 (,{c7}) edit 9,999,999,999.99c
  if $CreateFile = 'Y'
    Print 'Nome do Arquivo:'            (+2,1)
    Print $FileName                     (,25)
  end-if
  graphic (+1,1,180) horz-line 10
  Print ''                              (+1,1)
  if $CreateFile = 'Y'
    do WRITE-FOOTER
    do Close-File
  end-if
  Let #TotalEmpl = #TotalEmpl + #SubTotalEmpl
  Let #TotalAmount = #TotalAmount + #SubTotalAmount
  Let #SubTotalEmpl = 0
  Let #SubTotalAmount = 0
  Let #EmpSeq = 0
end-procedure PrintFooter

!**************************************
Begin-Procedure Select-Parameters
#debug show '* Select-Parameters *'
!**************************************
Let $FileName = ''
Let $WhereClause = ''
Begin-Select
RUNCTL.CAL_RUN_ID
RUNCTL.PAY_ENTITY
RUNCTL.CAL_ID
RUNCTL.GPBR_BANK_CD
!RUNCTL.GPBR_BANK_FORMAT
RUNCTL.GPBR_FILE_NAME
RUNCTL.GPBR_BENEF_HIST
RUNCTL.GPBR_SUMMARY_IND
RUNCTL.PAYMENT_DT

  Let $Benef         = RTRIM(&RUNCTL.GPBR_BENEF_HIST, ' ')
  Let $CalRunId      = RTRIM(&RUNCTL.CAL_RUN_ID,' ')
  Let $PayEntity     = RTRIM(&RUNCTL.PAY_ENTITY,' ')
  Let $CalId         = RTRIM(&RUNCTL.CAL_ID, ' ')
  Let $RBankCD       = RTRIM(&RUNCTL.GPBR_BANK_CD, ' ')
  Let $File          = LTRIM(RTRIM(&RUNCTL.GPBR_FILE_NAME,' '),' ')
  !Let $BankFormat    = RTRIM(&RUNCTL.GPBR_BANK_FORMAT,' ')
  Let $CreateFile    = RTRIM(&RUNCTL.GPBR_SUMMARY_IND, ' ')
  Let $PaymentDate   = RTRIM(&RUNCTL.PAYMENT_DT,' ')
 
  !Let $XlatValue = Rtrim(&RUNCTL.GPBR_BANK_FORMAT, ' ') 
  Let $XlatField = 'GPBR_BANK_FORMAT'
  Do Evaluate-XlatLang
  Let $BankFormatDescr = upper($XlatDescr)
  
  If $CalID <> ''
     Let $WhereClause = ' AND D.CAL_ID = '  || ''''|| $CalId || ''''
  End-if
  
  Do Read-Pay-Entity

FROM  PS_GPBR_RC_EFTBANK  RUNCTL
WHERE RUNCTL.OPRID     = $Prcs_OprID
AND RUNCTL.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
End-Select
End-Procedure Select-Parameters

!**************************************
Begin-Procedure validateOffCycle
!**************************************
BEGIN-SELECT
OFF_CYCLE  

   Let $offCycle = rtrim(&OFF_CYCLE, ' ')

FROM  PS_GP_CAL_RUN 
WHERE CAL_RUN_ID = $CalRunId
END-SELECT
End-Procedure validateOffCycle

!**************************************
Begin-Procedure Read-Pay-Entity
!**************************************
Let $PayEntityName  = ' '
Begin-Select
PPP.DESCR            
  
  Let $PayEntityName = Rtrim(&PPP.DESCR, ' ')

FROM  PS_GP_PYENT PPP
WHERE PPP.PAY_ENTITY = $PayEntity
End-Select
End-Procedure Read-Pay-Entity

!**************************************
Begin-Procedure PrintCompany
!**************************************
Let $Company = Upper(Rtrim(&J.COMPANY, ' '))
Begin-Select
C.DESCR

  Let $CompDescr = Rtrim(&C.DESCR, ' ')
  
FROM PS_COMPANY_TBL C
WHERE C.COMPANY = $Company
AND C.EFFDT = (SELECT MAX(CC.EFFDT) FROM PS_COMPANY_TBL CC
               WHERE CC.COMPANY = C.COMPANY
               AND CC.EFFDT <= $AsofToday
               AND CC.EFF_STATUS = 'A')
End-Select
Print 'EMPRESA:'    (+1,1)  bold
Print $Company      (,{c2})
Print $CompDescr    (,+2,30)
Print ''            (+1,)
End-Procedure PrintCompany

!**************************************
Begin-Procedure PrintEstabId
!**************************************
Begin-Select
S.DESCR

  Let $EstabIdDescr =  Rtrim(&S.DESCR, ' ')
  
FROM PS_ESTAB_TBL S
WHERE S.ESTABID = $EstabId
AND S.EFFDT = (SELECT MAX(SS.EFFDT) FROM PS_ESTAB_TBL SS
               WHERE SS.ESTABID = S.ESTABID
               AND SS.EFFDT <= $AsofToday
               AND SS.EFF_STATUS = 'A')
End-Select
Print ''                    (+1,)
Print 'TOTAL ESTABID:'      (+1,{c1}) bold
Print $EstabId              (,{c2})
Print $EstabIdDescr         (,+3,30)
Print '        PAGAMENTOS:' (,{c3})
Print #TotalEmpEstab        (,{c4a}) edit 9,999,999,999c
Print 'VALOR:'              (,{c6})
Print #TAmountEstab         (,{c7}) edit 9,999,999,999.99c
Print ''                    (+1,)
Let #TotalEmpEstab = 0
Let #TAmountEstab = 0
End-Procedure PrintEstabId

!**************************************
Begin-Procedure READ-Deposit
!**************************************
Let #FileSeq = 0
Let #EmpSeq = 0
Let #SubTotalEmpl = 0
Let #TotalEmpEstab = 0
Let #TAmountEstab = 0
Begin-Select
D.EMPLID
D.EMPL_RCD
D.NAME
D.ACCOUNT_NAME
D.BANK_CD               !PAYEE BANK
D.ACCOUNT_EC_ID         !PAYEE ACCOUNT
D.BRANCH_EC_CD          !PAYEE BRANCH
D.CHECK_DIGIT           !PAYEE CHECK DIGIT
D.ACCOUNT_TYPE_PYE      !PAYEE ACCOUNT TYPE
D.INSTANCE              !PAYEE INSTANCE
D.DEBIT_DT              () ON-BREAK level=1 print=never before=PrintHeader after=PrintFooter
D.GPBR_BANK_CD          !EMPLOYEER BANK
D.GPBR_ACCOUNT_EC_ID    !EMPLOYEER ACCOUNT
D.GPBR_ACCOUNT_NAME     !EMPLOYEER ACCOUNT NAME    
D.GPBR_BRANCH_EC_CD     !EMPLOYEER BRANCH
D.GPBR_CHECK_DIGIT      !EMPLOYEER CHECK DIGIT
MIN(E.PRD_BGN_DT)       &E.PRD_BGN_DT
MAX(E.PRD_END_DT)       &E.PRD_END_DT
SUM(D.GP_PMT_AMT)       &D.GP_PMT_AMT
J.COMPANY               () ON-BREAK level=2 print=never before=PrintCompany
J.ESTABID               () ON-BREAK level=3 print=never after=PrintEstabId

    !PAYEE
    Let $Emplid           = Rtrim(&D.EMPLID,' ')
    Let #Emplrcd          = &D.EMPL_RCD
    Let $Name             = Rtrim(&D.NAME, ' ')
    Let $AccountName      = Rtrim(&D.ACCOUNT_NAME, ' ')
    Let $BankCD           = Rtrim(&D.BANK_CD, ' ')
    Let $Account          = Rtrim(&D.ACCOUNT_EC_ID, ' ')
    Let $Branch           = Rtrim(&D.BRANCH_EC_CD, ' ')
    Let $Digit            = RTrim(&D.CHECK_DIGIT, ' ')
    Let $AccType          = Rtrim(&D.ACCOUNT_TYPE_PYE, ' ')
    Let #Instance         = &D.INSTANCE
    Let #PayAmount        = &D.GP_PMT_AMT
    Let $DDate            = Rtrim(&D.DEBIT_DT, ' ')
    Let $EstabId          = Rtrim(&J.ESTABID, ' ')
        
    !EMPLOYEER
    Let $EBankCD          = Rtrim(&D.GPBR_BANK_CD, ' ')
    Let $EAccount         = Rtrim(&D.GPBR_ACCOUNT_EC_ID, ' ')
    Let $EAccountName     = Rtrim(&D.GPBR_ACCOUNT_NAME, ' ')
    Let $EBranch          = Rtrim(&D.GPBR_BRANCH_EC_CD, ' ')
    Let $EDigit           = RTRIM(&D.GPBR_CHECK_DIGIT, ' ')
   
    !CALENDAR
     Let $PBgnDt           = &E.PRD_BGN_DT
     Let $PEndDt           = &E.PRD_END_DT

    Alter-Printer Point-size = #Sizestd  Font-Type = Proportional Font = #FontStd

    Let $XlatValue = $AccType 
    Let $XlatField = 'ACCOUNT_TYPE_PYE'
    Do Evaluate-XlatLang
    Let $AccTypeDescr = $XlatDescr
    
    Let #Length = 10
    Let $FieldIn = $Account
    do FILL_LEADING
    Let $Account = $FieldOut

    print $Emplid                (+1,{c1})   
    print #Emplrcd               (0,{c8a}) edit 999
    print $Name                  (0,{c2},30)
    print $AccTypeDescr          (0,{c3},19)
    print $BankCD                (0,{c4})
    print $Branch                (0,{c5})
    print $Account               (0,{c6})
    print #PayAmount             (0,{c7})  edit 9,999,999,999.99c
    
    Add 1 to #SubTotalEmpl
    Add 1 to #TotalEmpEstab
    Add 1 to #EmpSeq
    Let #SubTotalAmount = #SubTotalAmount + #PayAmount
    Let #TAmountEstab   = #TAmountEstab + #PayAmount
    if $CreateFile = 'Y'
      if #EmpSeq = 1
          Do WRITE-HEADER
      end-if
      Do WRITE-LINE 
    end-if

FROM  PS_GPBR_PAYMENT D
      ,PS_GP_PYE_PRC_STAT E
      ,PS_JOB J
      ,PS_FAST_SQR_SEC_VW SCRTY
WHERE D.CAL_RUN_ID    = $CalRunId
AND   D.CAL_RUN_ID    = D.ORIG_CAL_RUN_ID
AND   D.PAY_ENTITY    = $PayEntity
AND   D.BANK_CD       = $RBankCD
AND   D.PMT_TYPE      = '01'
AND   D.PAYMENT_MTHD  = 'T'
AND   D.EMPLID        = SCRTY.EMPLID
AND   D.EMPL_RCD      = SCRTY.EMPL_RCD
AND   E.EMPLID        = D.EMPLID
AND   E.EMPL_RCD      = D.EMPL_RCD
AND   E.CAL_RUN_ID    = D.CAL_RUN_ID
AND   E.PAY_ENTITY    = D.PAY_ENTITY
AND   E.GP_PAYGROUP   = D.GP_PAYGROUP
AND   E.CAL_ID        = D.CAL_ID
AND   E.CALC_TYPE     = 'P'
AND   J.EMPLID        = D.EMPLID
AND   J.EMPL_RCD      = D.EMPL_RCD
AND   J.EFFDT         = (SELECT MAX(AC.EFFDT) FROM PS_JOB AC 
                         WHERE AC.EMPLID  = J.EMPLID
                         AND AC.EMPL_RCD  = J.EMPL_RCD
                         AND AC.EFFDT <= E.PRD_END_DT
                         AND AC.EFFDT <= D.SEG_END_DT)   
           
AND   J.EFFSEQ        = (SELECT MAX(AD.EFFSEQ) FROM PS_JOB AD 
                         WHERE AD.EMPLID = J.EMPLID
                         AND AD.EMPL_RCD = J.EMPL_RCD
                         AND AD.EFFDT  = J.EFFDT)
[$WhereClause]
[$SecurityClause]    
GROUP BY D.EMPLID,D.EMPL_RCD,D.NAME,D.ACCOUNT_NAME,D.BANK_CD,D.ACCOUNT_EC_ID,D.BRANCH_EC_CD,
D.CHECK_DIGIT,D.ACCOUNT_TYPE_PYE,D.INSTANCE,D.DEBIT_DT,D.GPBR_BANK_CD,D.GPBR_ACCOUNT_EC_ID,
D.GPBR_ACCOUNT_NAME, D.GPBR_BRANCH_EC_CD,D.GPBR_CHECK_DIGIT, J.COMPANY, J.ESTABID
ORDER BY MIN(E.PRD_BGN_DT), MAX(E.PRD_END_DT), J.COMPANY, J.ESTABID, D.EMPLID, D.EMPL_RCD, D.NAME
End-Select
End-Procedure READ-Deposit

!**************************************
Begin-Procedure EnrollmentNumber
!**************************************
Let $EnrollNum = ''
Begin-Select
NID.NATIONAL_ID

 Let $EnrollNum = &NID.NATIONAL_ID
 
FROM PS_PERS_NID NID
WHERE NID.NATIONAL_ID_TYPE = 'CPF'
AND NID.EMPLID             = $Emplid
End-Select
End-Procedure

!**************************************
Begin-Procedure Open-File
!**************************************
if $File = ''
   Let $FileName = $BankFormatDescr || to_char(#FileSeq) || '.TXT'
else
   unstring $File  by '.' into $fname $ext
   if $ext = ''
      Let $ext = 'TXT'
   end-if
   Let $FileName = $fname || to_char(#FileSeq) || '.' || $ext
end-if
Let $FileName =  '{FILEPREFIX}' || $FileName || '{FILESUFFIX}'
EVALUATE $BankFormat
WHEN = '01' !UNIBANCO
     OPEN $FileName AS #FileSeq FOR-WRITING RECORD=320:fixed STATUS=#FILESTAT
BREAK
END-EVALUATE
show 'Nome do Arquivo: ' $FileName
End-Procedure Open-File

!*****************************  
Begin-Procedure Close-File
!*****************************
CLOSE #FileSeq
End-Procedure Close-File

!*****************************
Begin-Procedure WRITE-HEADER
!*****************************
EVALUATE $BankFormat
WHEN = '01' !---ENCAB UNIBANCO

       Do convert-to-dtu-date($AsOfToday, $Today)  
       Do dtu-parse-date($Today,#DYear,#DMonth,#DDay)
       Let #DYear = to_number(substr(to_char(#DYear),3,4))
       Let $Today  = EDIT(#DDay,'00') || EDIT(#DMonth,'00') || EDIT(#DYear,'00')

       Let #Length = 4
       Let $FieldIn = $EBranch
       do FILL_LEADING
       Let $EBranchF = $FieldOut

       Let #Length = 6
       Let $FieldIn = $EAccount
       do FILL_LEADING
       Let $EAccountF = $FieldOut

       Let $EDigitF = EDIT($EDigit,'0')
        
       WRITE #FileSeq FROM '0':1                 -
                           '1':1                 -
                           'REMESSA':7           -
                           '08':2                -
                           'CONTAS A PAGAR':14   -
                           $EBranchF:4           -
                           $EAccountF:6          -
                           $EDigitF:1            -
                           $EAccountName:30      -
                           '409':3               -
                           $EBankCD:15           -
                           $Today:6              -
                           ' ':224               -
                           '000001':6
BREAK
END-EVALUATE
End-Procedure WRITE-HEADER

!************************************** 
Begin-Procedure WRITE-LINE
!************************************** 
EVALUATE $BankFormat
WHEN = '01'
       
    Let #PayAmountInt = TRUNC(#PayAmount,0)
    Let $PayAmountInt = EDIT(#PayAmountInt,'00000000000')

    Let #PayAmountDec = #PayAmount - #PayAmountInt
    Let #PayAmountDec = #PayAmountDec * 100
    Let $PayAmountDec = EDIT(#PayAmountDec,'00')
    
    Let $PayAmountF = $PayAmountInt || $PayAmountDec
    Let $AccountF   = '0011' || LTRIM($Account,' ')

    Let #Length = 4
    Let $FieldIn = $EBranch
    do FILL_LEADING
    Let $EBranchF = $FieldOut

    Let #Length = 6
    Let $FieldIn = $EAccount
    do FILL_LEADING
    Let $EAccountF = $FieldOut

    Let $EDigitF = EDIT($EDigit,'0')

    Let #Length = 4
    Let $FieldIn = $Branch
    do FILL_LEADING
    Let $BranchF = $FieldOut

    Let #Length = 10
    Let $FieldIn = $Account
    do FILL_LEADING
    Let $AccountF = $FieldOut

    Do convert-to-dtu-date($AsOfToday, $Today)  
    Do dtu-parse-date($Today,#DYear,#DMonth,#DDay)
    Let #DYear = to_number(substr(to_char(#DYear),3,4))
    Let $Today  = EDIT(#DDay,'00') || EDIT(#DMonth,'00') || EDIT(#DYear,'00')

    Do convert-to-dtu-date($DDate, $DDate)  
    Do dtu-parse-date($DDate,#DYear,#DMonth,#DDay)
    Let #DYear = to_number(substr(to_char(#DYear),3,4))
    Let $DDateF  = EDIT(#DDay,'00') || EDIT(#DMonth,'00') || EDIT(#DYear,'00')

    Let $Calc = '0409' || $Branch || $Account
    Let #CalcF = (to_number($Calc) + #PayAmount) * 5
    Let $CalcF = EDIT(#CalcF,'000000000000000000')

    Let #Length = 5
    Let $FieldIn = $Benef
    do FILL_LEADING
    Let $BenefF = $FieldOut

    Let #Length = 1
    Let $FieldIn = $Digit
    do FILL_LEADING
    Let $DigitF = $FieldOut
    
    Let $EmpSeqF = EDIT(#EmpSeq,'000000')
   
    WRITE #FileSeq FROM '2':1                     -
                        $EBranchF:4               -
                        $EAccountF:6              -
                        $EDigitF:1                -
                        ' ':20                    -
                        '0409':4                  -
                        $BranchF:4                -
                        $AccountF:10              -
                        '4':1                     -
                        '0':1                     -
                        '5':1                     -
                        '1':1                     -
                        $PayAmountF:13            -
                        ' ':15                    -
                        $Today:6                  -
                        $DDateF:6                 -
                        $Name:30                  -
                        ' ':95                    -
                        ' ':15                    -
                        '14':2                    -
                        ' ':11                    -
                        ' ':11                    -
                        '01':2                    -
                        '0':1                     -
                        ' ':1                     -
                        $CalcF:18                 -
                        '01':2                    -
                        $EnrollNum:14             -
                        ' ':10                    -
                        $BenefF:5                 -
                        '  ':2                    -
                        $DigitF:1                 -
                        $EmpSeqF:6
BREAK
END-EVALUATE
End-Procedure WRITE-LINE

!**************************************
Begin-Procedure WRITE-FOOTER
!**************************************
EVALUATE $BankFormat
WHEN = '01'

       Let #SubTotalAmountInt = TRUNC(#SubTotalAmount,0)
       Let $TotalAmountInt = EDIT(#SubTotalAmountInt,'00000000000')
       Let #SubTotalAmountDec = #SubTotalAmount - #SubTotalAmountInt
       Let #SubTotalAmountDec = #SubTotalAmountDec * 100
       Let $TotalAmountDec = EDIT(#SubTotalAmountDec,'00')
       Let $TotalAmountF = $TotalAmountInt || $TotalAmountDec       
       Let $EmpSeqF = EDIT(#EmpSeq,'000000')

       WRITE #FileSeq FROM     '9':1             -
                               $EmpSeqF:6        -
                               $TotalAmountF:13  -
                               $EmpSeqF:6        -
                               ' ':288           -
                               $EmpSeqF:6                    
BREAK
END-EVALUATE
End-Procedure WRITE-FOOTER

!**************************************
Begin-Procedure FILL_LEADING
!show '* FILL_LEADING *'
!*************************************
LET $FieldIn  = RTRIM($FieldIn,' ')
LET $FieldIn  = LTRIM($FieldIn,' ')
LET $FieldOut = ''
LET #FieldLength = LENGTH($FieldIn) 

LET #SPACES = #Length - #FieldLength

LET #CONT = 1
WHILE #CONT <= #SPACES
  LET $FieldOut = LTRIM($FieldOut,' ') || '0'
  ADD 1 TO #CONT
END-WHILE
LET $FieldOut = $FieldOut || $FieldIn
Let $FieldIn = ''
End-Procedure FILL_LEADING

!**************************************
begin-procedure Evaluate-XlatLang
!**************************************
Let $XlatDescr = ''
Begin-Select     
XL.XLATLONGNAME

  Let $XlatDescr = Rtrim(&XL.XLATLONGNAME,' ')
  
FROM XLATTABLE_LNG XL
WHERE XL.FIELDNAME  = $XlatField
AND   XL.FIELDVALUE = $XlatValue 
AND   XL.LANGUAGE_CD = $curr_language_cd
End-Select

if $XlatDescr = ''
 
Begin-Select     
XX.XLATLONGNAME
  
    Let $XlatDescr = Rtrim(&XX.XLATLONGNAME,' ')
    
FROM XLATTABLE_VW XX
WHERE XX.FIELDNAME  = $XlatField
AND   XX.FIELDVALUE = $XlatValue 
End-Select
end-if

End-Procedure Evaluate-XlatLang

!******************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports
#include 'hrsecty.sqc'   !Get SQR Security parameters