!***********************************************************************
!  GPGBRTTC.SQC - RETRIEVE TAX CREDITS                                 *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2013/01/18:04:06:13                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!----------------------------------------------------------------------
!
!                                                                      *
!***********************************************************************
!  Date         Modification
!  ----         ------------
!  03/2001      Changes in WHERE Clause to consider Version and Revision Number
!               + misc. enhancements
!
!  12/2001      - SQC include name in lowercase
!               - add element for TC02
!*=================================================================
! Procedure     : RETRIEVE TAX CREDITS                            !
! Descr         : Retrieves tax credit informatiom for all        !
!                 selected Employees                              !
!
! >>>>>           Retrieves from GP Accumulators Results          !
! >>>>>           GBGPP11C.sqr                                    
! >>>>>           GPGBTXCR.sqr
!*=================================================================

begin-procedure RETRIEVE-TAX-CREDITS ($SELECTED_EMPLOYEE,
                #SELECTED_TAX_PERIOD, $SELECTED_FREQUENCY)

        let $ProcedureName      = 'RETRIEVE-TAX-CREDITS'
        SHOW 'CJJ2 PROCEDURE->' $ProcedureName ' Selected Employee <>' $SELECTED_EMPLOYEE
        SHOW 'CJJ2 PROCEDURE->' $ProcedureName ' Selected Tax Period<>' #SELECTED_TAX_PERIOD
        SHOW 'CJJ2 PROCEDURE->' $ProcedureName ' Selected Frequency<>' $SELECTED_FREQUENCY
        SHOW 'CJJ2 PROCEDURE->' $ProcedureName ' Pnl Tax Year<>' #_Pnl_Tax_Year

        LET $PERIOD  = 'NEW'
        LET $_VALTC  = 'NIL'
        LET #_VALTC  = 0
        LET #_TC_RSLT = 0
        LET $_PRINTC = 'N'

!**********************************
! Define Array for Tax Credit         03/2001
  if #TC_Def <> 1
    Do DEFINE-TAX-CREDIT
    Let #TC_Def = 1
  end-if
!**********************************

BEGIN-SELECT

GP.PIN_CODE           &PIN_CODE
GEX.EMPLID            &GRA.EMPLID
GRA.CALC_RSLT_VAL     &CALC_RSLT_VAL
GRA.USER_KEY1         &GRA.USER_KEY1
GRA.USER_KEY2         &GRA.USER_KEY2
GER.GPGB_TAX_PERIOD   &GER.TAX_PERIOD
GER.FREQUENCY_ID      &FREQUENCY_ID
GEX.START_DATE        &START_DATE
GEX.STOP_DATE         &STOP_DATE
GEX.GPGB_TXCRD_RT     &GPGB_TXCRD_RT
GEX.GPGB_TXC_REF      &GPGB_TXC_REF
GEX.EMPL_RCD          &EMPL_RCD
GPPS.PRD_END_DT       &GPPS.PRD_END_DT
GPPS.PRD_BGN_DT       &GPPS.PRD_BGN_DT

        LET $PIN_CODE          = RTRIM(&PIN_CODE,' ')

        LET $_VALTC            = EDIT(&CALC_RSLT_VAL, '999,999.99')
        LET #_TC_RSLT          = &CALC_RSLT_VAL
        LET $USER_KEY1         = RTRIM(&GRA.USER_KEY1,' ')       ! User Key1 contains the Start Date in YYYY-MM-DD format
        LET $USER_KEY2         = RTRIM(&GRA.USER_KEY2,' ')

        LET $EMPLID            = &GRA.EMPLID
        LET $EMPL_RCD          = &EMPL_RCD

        LET $FREQUENCY_ID      = RTRIM(&FREQUENCY_ID,' ')
        LET $TAX_PERIOD        = EDIT(&GER.TAX_PERIOD,'9')
        LET $PERIOD            = $FREQUENCY_ID || $TAX_PERIOD

        LET $_START_DATE       = DATETOSTR(&START_DATE, 'DD/MM/YYYY')
        LET $_STOP_DATE        = DATETOSTR(&STOP_DATE, 'DD/MM/YYYY')
        LET #_RATE             = EDIT(&GPGB_TXCRD_RT, '999,999.99')
        LET $_REF              = &GPGB_TXC_REF

        LET $PRD_END_DT        = &GPPS.PRD_END_DT
        LET $PRD_BGN_DT        = &GPPS.PRD_BGN_DT

        DO CONVERT-TO-DTU-DATE(&START_DATE,$GEX.START_DATE)

        SHOW 'RETRIEVE-TAX-CREDITS.EMPLID = ' $EMPLID
        SHOW 'RETRIEVE-TAX-CREDITS.USER_KEY1 = ' $USER_KEY1
        SHOW 'RETRIEVE-TAX-CREDITS.START_DATE = ' $GEX.START_DATE

        IF $USER_KEY1 = $GEX.START_DATE
        Do SELECT-RSLT-ACUM-TXCD($PIN_CODE,$PERIOD)
        END-IF

FROM PS_GP_PIN GP,
PS_GP_RSLT_ACUM GRA,
PS_GPGB_EE_RSLT GER,
PS_GPGB_EE_TAXCRD GEX,
PS_GP_PYE_PRC_STAT GPPS

WHERE GP.PIN_NUM = GRA.PIN_NUM

AND GRA.EMPLID = GER.EMPLID
AND GRA.CAL_RUN_ID = GER.CAL_RUN_ID
AND GRA.EMPL_RCD = GER.EMPL_RCD
AND GRA.GP_PAYGROUP = GER.GP_PAYGROUP
AND GRA.CAL_ID = GER.CAL_ID
AND GRA.RSLT_SEG_NUM = GER.RSLT_SEG_NUM

AND GER.EMPLID = $SELECTED_EMPLOYEE
AND GER.GPGB_TAX_PERIOD = #SELECTED_TAX_PERIOD
AND GER.FREQUENCY_ID = $SELECTED_FREQUENCY
AND GER.GPGB_TAX_BGN_YR = #_Pnl_Tax_Year

AND GEX.EMPLID = GER.EMPLID
AND GEX.EMPL_RCD = GER.EMPL_RCD
AND GEX.START_DATE <= GPPS.PRD_END_DT
AND GEX.STOP_DATE >= GPPS.PRD_BGN_DT

AND GPPS.EMPLID      = GER.EMPLID
AND GPPS.CAL_RUN_ID  = GER.CAL_RUN_ID
AND GPPS.EMPL_RCD    = GER.EMPL_RCD
AND GPPS.CAL_ID      = GER.CAL_ID
AND GPPS.GP_PAYGROUP = GER.GP_PAYGROUP
AND GPPS.CALC_TYPE   = 'P'
AND GPPS.RSLT_VER_NUM = (SELECT MAX (X.RSLT_VER_NUM) FROM PS_GP_PYE_PRC_STAT X
                                WHERE GPPS.EMPLID       = X.EMPLID
                         !      AND GPPS.CAL_RUN_ID     = X.CAL_RUN_ID         --> Non selected to get the last calc.
                                AND GPPS.EMPL_RCD       = X.EMPL_RCD
                                AND GPPS.CAL_ID         = X.CAL_ID
                                AND GPPS.GP_PAYGROUP    = X.GP_PAYGROUP
                                AND GPPS.CALC_TYPE      = X.CALC_TYPE)
AND GPPS.RSLT_REV_NUM = (SELECT MAX (X.RSLT_REV_NUM) FROM PS_GP_PYE_PRC_STAT X
                                WHERE GPPS.EMPLID       = X.EMPLID
                         !      AND GPPS.CAL_RUN_ID     = X.CAL_RUN_ID         --> Non selected to get the last calc.
                                AND GPPS.EMPL_RCD       = X.EMPL_RCD
                                AND GPPS.CAL_ID         = X.CAL_ID
                                AND GPPS.GP_PAYGROUP    = X.GP_PAYGROUP
                                AND GPPS.CALC_TYPE      = X.CALC_TYPE)

AND GP.PIN_CODE IN ('TC AC REF PTD GBR',
                    'TC AC REF YTD GBR',
                    'TC AC IND PAY TD GBR')

ORDER BY GEX.EMPLID, GER.FREQUENCY_ID, GER.GPGB_TAX_PERIOD

END-SELECT

end-procedure RETRIEVE-TAX-CREDITS

!*===================================================================
! Procedure     : SELECT-RSLT-ACUM-TXCD                             !
! Descr         : Retrieve/evaluate selected Tax Credit Accumulators!
! Nota !!!!       The accum refered in the 'When' should match the  !
!                 'IN' list of the RETRIEVE_EMPLOYEE_DATA procedure !
!*===================================================================
begin-procedure SELECT-RSLT-ACUM-TXCD($PIN_CODE,$PERIOD)

        SHOW 'SELECT-RSLT-ACUM-TXCD.PIN_CODE = ' $PIN_CODE
        SHOW 'SELECT-RSLT-ACUM-TXCD.PERIOD = ' $PERIOD


        EVALUATE $PIN_CODE
        WHEN = 'TC AC REF PTD GBR'

        LET #_VALTC = #_TC_RSLT
        LET $_PRINTC = 'Y'
                if $_ReportID = 'P11 - PART 3'
        DO PRINT-REPORT ($PIN_CODE, $PERIOD, $NI_CATEGORY, $EMPLID,
        $PAY_ENTITY)
                end-if
        LET $_PRINTC = 'N'
        BREAK

        WHEN = 'TC AC REF YTD GBR'

        LET #_VALTCY =  #_TC_RSLT
        DO LOAD-TAX-CREDIT

        BREAK
        WHEN = 'TC AC IND PAY TD GBR'

        LET #_VALTC02 =  #_TC_RSLT
        DO LOAD-TAX-CREDIT2

        BREAK
        END-EVALUATE

        SHOW 'SELECT-RSLT-ACUM-TXCD._VALTC = ' #_VALTC
        SHOW 'SELECT-RSLT-ACUM-TXCD._VALTCY = ' #_VALTCY
        SHOW 'SELECT-RSLT-ACUM-TXCD._VALTC02 = ' #_VALTC02


end-procedure SELECT-RSLT-ACUM-TXCD


!*=================================================================
! Procedure     : DEFINE-TAX-CREDIT                               !
! Descr         : Define Array for Tax Credit                     !
! Nota !!!!                                                       !
!                                                                 !
!*=================================================================
begin-procedure DEFINE-TAX-CREDIT

   Create-Array name=Tax_Credit_ARR size=55
                field=TC_Date:Char
                field=TC_End:Char
                field=TC_Rate:number
                field=TC_Ref:Char
                field=TC_Total:number
                field=TC_Total_TD:number

end-procedure DEFINE-TAX-CREDIT

!*=================================================================
! Procedure     : LOAD-TAX-CREDIT                                 !
! Descr         : Load Array to Store Ytd per Tax Credit Ref      !
!                                                                 !
!*=================================================================
begin-procedure LOAD-TAX-CREDIT

   LET #i = 0
   WHILE #i < 55    ! (55 columns to contain at list one Tax Credit per period. Should be more than sufficient)

   Get $W_TC_Date From Tax_Credit_ARR(#i) TC_Date

        SHOW 'Tax Credit Array->' $W_TC_Date '<>' #i
        SHOW '#VALTCY = ' #VALTCY

   if  $W_TC_Date = $START_DATE or $W_TC_Date <= ''

        Put $START_DATE Into Tax_Credit_ARR(#i) TC_Date
        Put $STOP_DATE  Into Tax_Credit_ARR(#i) TC_End
        Put #RATE       Into Tax_Credit_ARR(#i) TC_Rate
        Put $REF        Into Tax_Credit_ARR(#i) TC_Ref
        Put #VALTCY     Into Tax_Credit_ARR(#i) TC_Total

        BREAK
   end-if

   let #i = #i + 1
   END-WHILE

end-procedure LOAD-TAX-CREDIT


!*=================================================================
! Procedure     : LOAD-TAX-CREDIT2                                !
! Descr         : Load Array to store TD per Tax Credit Ref       !
!                  (for TC02)                                     !
!*=================================================================
begin-procedure LOAD-TAX-CREDIT2

   LET #i = 0
   WHILE #i < 55    ! (55 columns to contain at list one Tax Credit per period. Should be more than sufficient)

   Get $W_TC_Date From Tax_Credit_ARR(#i) TC_Date

   if  $W_TC_Date = $START_DATE or $W_TC_Date <= ''

        Put $START_DATE Into Tax_Credit_ARR(#i) TC_Date
        Put $STOP_DATE  Into Tax_Credit_ARR(#i) TC_End
        Put #RATE       Into Tax_Credit_ARR(#i) TC_Rate
        Put $REF        Into Tax_Credit_ARR(#i) TC_Ref
        Put #VALTC02    Into Tax_Credit_ARR(#i) TC_Total_TD
        Let #i = 99
        BREAK
   end-if

   let #i = #i + 1
   END-WHILE

end-procedure LOAD-TAX-CREDIT2

!******************************************************************
#include 'datemath.sqc' ! Routines for date and time operations
!******************************* End Of Program *******************
