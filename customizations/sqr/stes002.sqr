!--------------------------------------------------------------------------------------
! Report Name: STES002.SQR - Participant's Contributions
!--------------------------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:49:55                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!----------------------------------------------------------
! Program Descr: Sum and Total currency amount by PayGroup
!                for a given Purchase ID.
!----------------------------------------------------------
! Prompts:       Purchase ID, Process Group, Emplid
! Options:       Sort by Company/PayGroup
! Tables:        RUN_CNTL_ST, ST_STES002_VW
! Sorts:         By Process Group, PayGroup, Name
!----------------------------------------------------------

#include 'setenv.sqc'

!--------------------------------------------------------------------
Begin-Setup
!--------------------------------------------------------------------

  #include 'ptpsl177.sqc'

End-Setup

!--------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     Main Report procedure.
!--------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Get-Purchase-ID
  do Print-Report
  do Reset
  do Successful-EOJ

End-Program

!----------------------------------------------------------
! Section: Heading Procedures
! Descr:   This sections contains all procedures for
!          printing the optional heading.
!----------------------------------------------------------
Begin-Heading 12

#Include 'stdhdg01.sqc'

  print $StockIdLbl                                        (-1,001,009)
  print $PUR_StockId                                       (  ,017,010)
  print $PurchaseIdLbl                                     (  ,080,011)
  print $RC_PURCHASE_ID                                    (  ,095,010)
  print $StockPlanLbl                                      (+1,001,011)
  print $PUR_StPlan                                        (  ,017,010)
  print $OfferIdLbl                                        (+1,001,012)
  print $PUR_Offering                                      (  ,017,010)
  print $PurchaseDtLbl                                     (+1,001,014)
  do Format-DateTime ($PUR_PurchDt, $Dt, {DEFDATE}, '', '')
  print $Dt                                                (  ,017,010)
  print $ProcessGrpLbl                                     (+2,001,014)
  print $ProcessGroup                                      (  ,017,010)

  if $RC_SORT = 'C'
    print $CompanyLbl                                      (+1,001,008)
    print $Company                                         (  ,017,003)
    print $PayGroupLbl                                     (+1,001,009)
    print $PayGroup                                        (  ,017,003)
    print $NewContribLbl                                   (11,085,007)
    print $CurrencyLbl                                     (  ,120,008)
    print $EmplNameLbl                                     (12,001,030)
    print $EmplidLbl                                       (  ,033,011)
    print $CarryFwdLbl                                     (  ,055,013)
    print $ContribLbl                                      (  ,079,013)
    print $TtlContribLbl                                   (  ,097,019)
    print $CodeLbl                                         (  ,120,006)
    print $ContribSrcLbl                                   (  ,130,019)
    print '-'                                              (13,001,159) fill
  else
    print $CarryFwdLbl                                     (11,067,013)
    print $NewContribLbl                                   (  ,097,007)
    print $CurrencyLbl                                     (  ,132,008)
    print $EmplNameLbl                                     (12,001,030)
    print $EmplidLbl                                       (  ,033,011)
    print $CoPayGrpLbl                                     (  ,046,010)
    print $AmountLbl                                       (  ,074,006)
    print $ContribLbl                                      (  ,091,013)
    print $TtlContribLbl                                   (  ,109,019)
    print $CodeLbl                                         (  ,132,006)
    print $ContribSrcLbl                                   (  ,142,019)
    print '-'                                              (13,001,171) fill
  end-if

End-Heading

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!
Begin-Procedure Report-Translation

  do Init_Report_Translation ('STOCK',$language_cd)
  do Append_Report_Translation ('STES002')

  do Get_Field_Information ('STOCK',   'PURCHASE_ID',    $PurchaseIdLbl, #DW)
  do Get_Field_Information ('STOCK',   'STOCK_ID',       $StockIdLbl,    #DW)
  do Get_Field_Information ('STOCK',   'STOCK_PLAN_DESC',$StockPlanLbl,  #DW)
  do Get_Field_Information ('STOCK',   'OFFERING_ID',    $OfferIdLbl,    #DW)
  do Get_Field_Information ('STOCK',   'PURCHASE_DT',    $PurchaseDtLbl, #DW)
  do Get_Field_Information ('STOCK',   'PROCESS_GRP',    $ProcessGrpLbl, #DW)
  do Get_Field_Information ('STOCK',   'NAME',           $EmplNameLbl,   #DW)
  do Get_Field_Information ('STOCK',   'EMPLID',         $EmplidLbl,     #DW)
  do Get_Field_Information ('STOCK',   'COMPANY',        $CompanyLbl,    #DW)
  do Get_Field_Information ('STOCK',   'PAYGROUP',       $PayGroupLbl,   #DW)
  do Get_Field_Information ('STOCK',   'CURRENCY_CD',    $CurrencyLbl,   #DW)
  do Get_Field_Information ('STOCK',   'TOTAL',          $TotalLbl,      #DW)
  do Get_Field_Information ('STOCK',   'CARRYFWD',       $CarryFwdLbl,   #DW)
  do Get_Field_Information ('STOCK',   'NEW_CONTRIB',    $NewContribLbl, #DW)
  do Get_Field_Information ('STOCK',   'TOTAL_CONTRIB',  $TtlContribLbl, #DW)

  do Get_Field_Information ('STES002', 'CONTRIBUTIONS', $ContribLbl,     #DW)
  do Get_Field_Information ('STES002', 'AMT',           $AmountLbl,      #DW)
  do Get_Field_Information ('STES002', 'CODE',          $CodeLbl,        #DW)
  do Get_Field_Information ('STES002', 'REPORT_TITLE',  $ReportTitle,    #DW)
  do Get_Field_Information ('STES002', 'CO_PAYGRP',     $CoPayGrpLbl,    #DW)
  do Get_Field_Information ('STES002', 'CONTRIB_SRC',   $ContribSrcLbl,  #DW)

End-Procedure

!--------------------------------------------------------------------
! Procedure: Init-Report
! Descr:     Report initialization procedure.  Set titles, parameters.
!            This is called from the Begin-Program procedure.
!--------------------------------------------------------------------
Begin-Procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  let $ReportId = 'STES002'
  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.

  if $prcs_process_instance = ''
    input $RC_PURCHASE_ID MAXLEN=10 'Purchase ID: ' Type=Char
    uppercase $RC_Purchase_ID
    input $RC_PrcsGrp MAXLEN=10 'Process Group: ' Type=Char
    uppercase $RC_PrcsGrp
    input $RC_EMPLID MAXLEN=11 'Emplid: ' Type=Char
    uppercase $RC_EMPLID
  else
    do Get-SQR-Parms                            ! Get Run Control Values
  end-if

  do Build-Where-Clause

  if $RC_SORT = 'P'
    let $ReportId = 'STES002A'
  else
    let $ReportId = 'STES002B'
  end-if

End-Procedure

!----------------------------------------------------------
! Section: Print-Report
! Descr:   Main report
!----------------------------------------------------------
Begin-Procedure Print-Report

  let $WhereCurr1 = ''
  let $WhereCurr2 = ''
  do Populate-Contrib-Temp-Table

  if $RC_SORT = 'P'
     do Print-Process-Group-Report
  else
     do Print-Co-PayGroup-Report
  end-if

End-Procedure

!----------------------------------------------------------
! Section: Print-Process-Group-Report
! Descr:   
!----------------------------------------------------------
Begin-Procedure Print-Process-Group-Report

begin-Select
V1.PROCESS_GROUP                            &Process_Group () On-Break Print=never Level=1
                                                              after= Print-Process-Group-Totals
                                                              save= $ProcessGroup
P1.CURRENCY_CD                                             () On-Break Print=never Level=1 Save=$PCurrCd
V1.NAME                                                    (+1,001,030)
V1.EMPLID                                                  (  ,033,011)
V1.COMPANY                                                 (  ,046,003)
V1.PAYGROUP                                                (  ,051,003)
SUM(V1.CARRYOVER_AMT)                         &CarryOver1  (  ,058,022) edit 999,999,999,999.999999
SUM(V1.ESPP_CONTRIB_AMT)                      &NewContrib1 (  ,082,022) edit 999,999,999,999.999999
SUM(V1.CARRYOVER_AMT) + SUM(ESPP_CONTRIB_AMT) &Contrib1    (  ,106,022) edit 999,999,999,999.999999
V1.FROM_CUR                                   &CurrCd1     (  ,132,003)
V1.ESPP_CONTRIB_SRC

  let $ContribSrc = ''
  let $FieldName  = 'ESPP_CONTRIB_SRC'
  let $FieldValue = &v1.espp_contrib_src
  do Read-Translate-Table
  let $ContribSrc = $XlatLongName
  print $ContribSrc                                        (  ,142,030)

  let #CarryOver       = #CarryOver       + &CarryOver1
  let #NewContrib      = #NewContrib      + &NewContrib1
  let #Contrib         = #Contrib         + &Contrib1
  let #TotalCarryOver  = #TotalCarryOver  + &CarryOver1
  let #TotalNewContrib = #TotalNewContrib + &NewContrib1
  let #TotalContrib    = #TotalContrib    + &Contrib1
  let $CurrCd          = &CurrCd1

FROM  PS_R_CONTRIB_PART V1,
      PS_ST_PROCESS_GRP P1
WHERE V1.REPORT_ID       = $ReportID
  AND V1.STOCK_ID        = $PUR_StockId
  AND V1.STOCK_PLAN_TYPE = $PUR_StPlanType
  AND V1.STOCK_PLAN      = $PUR_StPlan
  AND V1.OFFERING_ID     = $PUR_Offering
  AND V1.PERIOD_END_DT   = $PUR_PurchDt
  AND P1.PROCESS_GROUP = V1.PROCESS_GROUP
  AND P1.EFFDT = (SELECT MAX(P2.EFFDT)
                  FROM PS_ST_PROCESS_GRP P2
                  WHERE P2.PROCESS_GROUP = P1.PROCESS_GROUP
                    AND P2.EFFDT <= $PUR_PurchDt)
  [$WherePrcsGrp]
  [$WhereEmplid]
GROUP BY V1.PROCESS_GROUP, P1.CURRENCY_CD, V1.COMPANY, V1.PAYGROUP, V1.NAME, V1.EMPLID, V1.FROM_CUR, V1.ESPP_CONTRIB_SRC
ORDER BY V1.PROCESS_GROUP, V1.NAME, V1.COMPANY, V1.PAYGROUP, V1.FROM_CUR
End-Select

End-Procedure

!----------------------------------------------------------
! Section: Print-Process-Group-Totals
! Descr:   Force a new page.
!----------------------------------------------------------
Begin-Procedure Print-Process-Group-Totals

  let $TotalString = $ProcessGrpLbl || ' ' || $ProcessGroup || ' ' || $TotalLbl
  print '-'                                                (+1,001,171) fill
  print $TotalString                                       (+1,001,035)
  print #TotalCarryOver                                    (  ,058,022) edit 999,999,999,999.999999
  print #TotalNewContrib                                   (  ,082,022) edit 999,999,999,999.999999
  print #TotalContrib                                      (  ,106,022) edit 999,999,999,999.999999
  print $PCurrCd                                           (  ,132,003)
  print '-'                                                (+1,001,171) fill
  new-page
  let #TotalCarryOver = 0
  let #TotalNewContrib = 0
  let #TotalContrib = 0

End-Procedure

!----------------------------------------------------------
! Section: Print-Co-PayGroup-Report
! Descr:   
!----------------------------------------------------------
Begin-Procedure Print-Co-PayGroup-Report

begin-Select
V2.PROCESS_GROUP                                           () On-break Print=never Level=1
                                                              Save=$ProcessGroup After=Print-Process-Group-Totals
P3.CURRENCY_CD                                             () On-break Print=never Level=1 Save=$PCurrCd
V2.COMPANY                                                 () On-break Print=never Level=2 Save=$Company
V2.PAYGROUP                                                () On-break Print=never Level=2 Save=$PayGroup
                                                              After=Print-PayGroup-Totals
V2.NAME                                                    (+1,001,030)
V2.EMPLID                                                  (  ,033,011)
SUM(V2.CARRYOVER_AMT)                          &CarryOver2  (  ,046,022) edit 999,999,999,999.999999
SUM(V2.ESPP_CONTRIB_AMT)                       &NewContrib2 (  ,070,022) edit 999,999,999,999.999999
SUM(V2.CARRYOVER_AMT)+SUM(V2.ESPP_CONTRIB_AMT) &Contrib2    (  ,094,022) edit 999,999,999,999.999999
V2.FROM_CUR                                    &CurrCd2     (  ,120,003)
V2.ESPP_CONTRIB_SRC

  let $ContribSrc = ''
  let $FieldName  = 'ESPP_CONTRIB_SRC'
  let $FieldValue = &v2.espp_contrib_src
  do Read-Translate-Table
  let $ContribSrc = $XlatLongName
  print $ContribSrc                                        (  ,130,030)

  let #CarryOver       = #CarryOver       + &CarryOver2
  let #NewContrib      = #NewContrib      + &NewContrib2
  let #Contrib         = #Contrib         + &Contrib2
  let #TotalCarryOver  = #TotalCarryOver  + &CarryOver2
  let #TotalNewContrib = #TotalNewContrib + &NewContrib2
  let #TotalContrib    = #TotalContrib    + &Contrib2
  let $CurrCd = &CurrCd2

FROM  PS_R_CONTRIB_PART V2,
      PS_ST_PROCESS_GRP P3
WHERE V2.REPORT_ID       = $ReportID
  AND V2.STOCK_ID        = $PUR_StockID
  AND V2.STOCK_PLAN_TYPE = $PUR_StPlanType
  AND V2.STOCK_PLAN      = $PUR_StPlan
  AND V2.OFFERING_ID     = $PUR_Offering
  AND V2.PERIOD_END_DT   = $PUR_PurchDt
  AND P3.PROCESS_GROUP = V2.PROCESS_GROUP
  AND P3.EFFDT = (SELECT MAX(P4.EFFDT)
                  FROM PS_ST_PROCESS_GRP P4
                  WHERE P4.PROCESS_GROUP = P3.PROCESS_GROUP
                    AND P4.EFFDT <= $PUR_PurchDt)
  [$WherePrcsGrp]
  [$WhereEmplid]
GROUP BY V2.PROCESS_GROUP, P3.CURRENCY_CD, V2.COMPANY, V2.PAYGROUP, V2.NAME, V2.EMPLID, V2.FROM_CUR, V2.ESPP_CONTRIB_SRC
ORDER BY V2.PROCESS_GROUP, V2.COMPANY, V2.PAYGROUP, V2.FROM_CUR, V2.NAME
End-Select

End-Procedure

!----------------------------------------------------------
! Section: Print-PayGroup-Totals
! Descr:   Force a new page.
!----------------------------------------------------------
Begin-Procedure Print-PayGroup-Totals

  let $TotalString = $PayGroupLbl || ': ' || $PayGroup || ' ' || $TotalLbl
  print '-'                                                (+1,001,159) fill
  print $TotalString                                       (+1,001,035)
  print #CarryOver                                         (  ,046,022) edit 999,999,999,999.999999
  print #NewContrib                                        (  ,070,022) edit 999,999,999,999.999999
  print #Contrib                                           (  ,094,022) edit 999,999,999,999.999999
  print $CurrCd                                            (  ,120,003)
  print '-'                                                (+1,001,159) fill
  new-page
  let #CarryOver  = 0
  let #NewContrib = 0
  let #Contrib    = 0

End-Procedure

!-----------------------------------------------------------------------
! SQC Includes
!-----------------------------------------------------------------------
#include 'strunctl.sqc'    !Stock Admin's Run Control Record
#include 'sqlerr.sqc'      !SQL error processing
#include 'stdapi.sqc'
#include 'curdttim.sqc'    !Get-Current-Date-Time
#include 'datetime.sqc'    !Get-Date-Time
#include 'datemath.sqc'    !Date Math Routines
#include 'reset.sqc'       !Reset printer procedure
#include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Translate SQR strings to given language
#include 'askftd.sqc'      
#include 'stgetfmv.sqc'    !Retrieves FMV for a particular date
#include 'getrplng.sqc'    !Gets the report language
#include 'stescomn.sqc'   ! Procedures: Get-Purchase-ID
                          !             Build-Where-Clause
#include 'readxlat.sqc'
