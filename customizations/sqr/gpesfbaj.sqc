!*************************************************************!
!       $Release:  HR92                                       !
!           $Bug:  31141964                                   !
!*************************************************************!
! ************************************************************* !
!                                                               !
!                                                               !
! This software and related documentation are provided under a  !
! license agreement containing restrictions on use and          !
! disclosure and are protected by intellectual property         !
! laws. Except as expressly permitted in your license agreement !
! or allowed by law, you may not use, copy, reproduce,          !
! translate, broadcast, modify, license, transmit, distribute,  !
! exhibit, perform, publish or display any part, in any form or !
! by any means. Reverse engineering, disassembly, or            !
! decompilation of this software, unless required by law for    !
! interoperability, is prohibited.                              !
! The information contained herein is subject to change without !
! notice and is not warranted to be error-free. If you find any !
! errors, please report them to us in writing.                  !
!                                                               !
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.       !
! All Rights Reserved.                                          !
! ************************************************************* !
!************************************************************************
! Procedure Check-Empl-Termtn-Dt
!************************************************************************
!begin-procedure Check-Empl-Termtn-Dt
!#debug do Fin-Debug-Msg('Check-Empl-Termtn-Dt')
!
!  let $Empl-Terminated = 'N'
!  Let $Job-EffDt-Select = ''
!  Let #Job-EffSeq-Select = 0
!
!  #debugd show 'Employee:                ' $Select-EMPLID
!  #debugd show 'Employee record:         ' #Select-EMPL-RCD
!
!let $sql-statement = 'GPESFNQ1.SQR,Check-Empl-Termtn-Dt,Select,PS_EMPLOYMENT'
!begin-SELECT on-error=SQL-Error
!JTERM.EMPLID
!JTERM.EMPL_RCD
!JTERM.EFFDT
!JTERM.EFFSEQ
!   !{DateTimeOut-Prefix}JTERM.EFFDT{DateTimeOut-Suffix}       &Hire-Dt-Wk
!   !{DateTimeOut-Prefix}JTERM.EFFDT - 1{DateTimeOut-Suffix}   &Termination-Dt-Wk
!JTERM.ACTION
!
!  #debugd show 'Effective Date: ' &JTERM.EFFDT
!  #debugd show 'Action:         ' &JTERM.ACTION
!
!  If &JTERM.ACTION = 'TER'
!    Let $Empl-Terminated   =  'Y'
!    do Convert-To-DTU-Date(&JTERM.EFFDT, $Termination-Dt-Wk)
!    do dtu-subtract-days( $Termination-Dt-Wk , 1 , $Termination-Dt)
!    do Convert-From-DTU-Date($Termination-Dt, $Termination-Dt)
!    #debugd show 'Termination Dt: ' $Termination-Dt
!    Let $Job-EffDt-Select  =  &JTERM.EFFDT
!    Let #Job-EffSeq-Select =  &JTERM.EFFSEQ
!  else
!    If &JTERM.ACTION = 'HIR' Or &JTERM.ACTION = 'REH'
!      Let $Hire-Dt         =  &JTERM.EFFDT
!      If $Empl-Terminated = 'Y'
!        EXIT-SELECT
!      end-if
!    end-if
!  end-if
!
!FROM PS_JOB JTERM
!
!WHERE JTERM.EMPLID = $Select-EMPLID
!  AND JTERM.EMPL_RCD = #Select-EMPL-RCD
!  AND JTERM.EFFDT <= $Select-ASOFDATE
!  AND JTERM.ACTION IN ('HIR','REH','TER')
!
!ORDER BY JTERM.EMPLID, JTERM.EMPL_RCD, JTERM.EFFDT DESC, JTERM.EFFSEQ DESC
!end-SELECT
!
!  #debugd show 'Employee:                ' $Select-EMPLID
!  #debugd show 'Employee record:         ' #Select-EMPL-RCD
!  #debugd show 'Employee hire/rehire dt: ' $Hire-Dt
!  #debugd show 'Employee Termination dt: ' $Termination-Dt
!
!end-procedure
!
!
!***********************************************************************
Begin-Procedure Check-Duration
!***********************************************************************
#debug do Fin-Debug-Msg('Check-Duration')

   #debugd show 'Begin Date : ' $BeginDt1
   #debugd show 'End Date   : ' $EndDt1
   DO Diff-Date($EndDt1,$BeginDt1,#wkYears1,#wkMonths1,#wkDays1)
   #debugd show 'DTU Diff: ' #wkYears1 ' Years, ' #wkMonths1 ' Months and ' #wkDays1 ' Days.'

   do Convert-To-DTU-Date($BeginDt1, $BeginDt1-DTU)
   Do dtu-add-months($BeginDt1-DTU, #wkMonths1, $BeginDt1-DTU)
   Do dtu-add-days($BeginDt1-DTU, -1, $BeginDt1-DTU)
   do Convert-From-DTU-Date($BeginDt1-DTU, $BeginDt1-Wk)
   do Diff-Date($EndDt1,$BeginDt1-Wk,#wkYrs1-Wk,#wkMths1-Wk,#wkDys1)

   Let $Duration = ''
   If #wkYears1 > 0
     If #wkYears1 = 1
       Let $Duration = to_char(#wkYears1) || ' Año '
     Else
       Let $Duration = to_char(#wkYears1) || ' Años '
     End-if
     Let #Duration-XML = #wkYears1
     Let $Duration-Unit-XML = 'A'
   End-If
   Let #wkMonths1-Wk = #wkMonths1 - (#wkYears1 * 12)
   if #wkMonths1-Wk > 0
     if #wkMonths1-Wk = 1
       let $duration = $duration || to_char(#wkMonths1-Wk) || ' mes '
     else
       let $duration = $duration || to_char(#wkMonths1-Wk) || ' meses '
     end-if
     Let #Duration-XML = #wkMonths1 + (#wkYears1 * 12)
     Let $Duration-Unit-XML = 'M'
   end-if
   if #wkDys1 > 0
     if #wkDays1 = 1
       let $duration = $duration || to_char(#wkDys1) || ' día'
     else
       let $duration = $duration || to_char(#wkDys1) || ' días'
     end-if
     Let #Duration-XML = #wkDays1 + 1
     Let $Duration-Unit-XML = 'D'
   end-if

end-procedure


!************************************************************************
! Procedure Get-Dflt-WS
!************************************************************************
begin-procedure Get-Dflt-WS
#debug do Fin-Debug-Msg('Get-Dflt-WS')

let $Schedule_SetID = ''
let $Schedule_ID = ''
let $Use-Dflt-WS = ''
let $Sch-AdHoc-Ind = ''
let $Rotation-Id = ''

let $sql-statement = 'GPESFNQ1.SQR,Get-Dflt-WS,Select,PS_SCH_ASSIGN SCH'
begin-SELECT on-error=SQL-Error
SCHOVR.SETID
SCHOVR.SCH_ADHOC_IND
SCHOVR.SCHEDULE_ID
SCHOVR.ROTATION_ID
SCHOVR.USE_DFLT_WS

  let $Schedule_SetID = &SCHOVR.SETID
  let $Schedule_ID = &SCHOVR.SCHEDULE_ID
  let $Use-Dflt-WS = &SCHOVR.USE_DFLT_WS
  let $Sch-AdHoc-Ind = &SCHOVR.SCH_ADHOC_IND
  let $Rotation-Id = &SCHOVR.ROTATION_ID

  #debugd show 'Override Schedule Setid: ' $Schedule_SetID
  #debugd show 'Override Schedule ID:    ' $Schedule_ID
  #debugd show 'Override AdHoc Ind:      ' $Sch-AdHoc-Ind
  #debugd show 'Override Rotation ID:    ' $Rotation-Id
  #debugd show 'Override Dflt WS Ind:    ' $Use-Dflt-WS

FROM PS_SCH_ASSIGN SCHOVR

WHERE SCHOVR.EMPLID = $Select-EMPLID
 AND  SCHOVR.EMPL_RCD = #Select-EMPL-RCD
 AND  SCHOVR.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_SCH_ASSIGN
                    WHERE EMPLID = SCHOVR.EMPLID
                     AND  EMPL_RCD = SCHOVR.EMPL_RCD
                     AND  EFFDT <= $Contract-End-Dt AND END_EFFDT >= $Contract-Bgn-Dt)

end-SELECT

 
 

If $Use-Dflt-WS = '' or $Use-Dflt-WS = 'Y'

let $sql-statement = 'GPESFNQ1.SQR,Get-Dflt-WS,Select,PS_GP_PYGRP_DTL'
begin-SELECT on-error=SQL-Error
PGRP.GP_PAYGROUP
PGRP.EFFDT
PGRP.SETID
PGRP.SCHEDULE_ID
PGRP.ROTATION_ID

  let $Schedule_SetID = &PGRP.SETID
  let $Schedule_ID = &PGRP.SCHEDULE_ID
  let $Sch-AdHoc-Ind = '1'
  let $Rotation-Id = &PGRP.ROTATION_ID

FROM PS_GP_PYGRP_DTL  PGRP
WHERE PGRP.GP_PAYGROUP = $Pay_Group
 AND PGRP.EFFDT = (SELECT MAX(EFFDT) FROM PS_GP_PYGRP_DTL
                    WHERE GP_PAYGROUP = PGRP.GP_PAYGROUP
                      AND EFFDT <= $Contract-End-Dt)
end-SELECT

  #debugd show 'Paygroup:               ' $Pay_Group
  #debugd show 'Paygroup Effdt:         ' &PGRP.EFFDT
  #debugd show 'Default Schedule Setid: ' $Schedule_SetID
  #debugd show 'Default Schedule ID:    ' $Schedule_ID
  #debugd show 'Default AdHoc Ind:      ' $Sch-AdHoc-Ind
  #debugd show 'Default Rotation ID:    ' $Rotation-Id
End-if

end-procedure


!************************************************************************
! Procedure Get-Guarda-Legal-PCT
!************************************************************************
begin-procedure Get-Guarda-Legal-PCT
#debug do Fin-Debug-Msg('Get-Guarda-Legal-PCT')

Let #Guarda-lgl-PCT = 0

let $sql-statement = 'GPESFNQ1.SQR,Get-Guarda-Legal-PCT,Select,PS_GP_ABS_EVENT AEVT'
begin-SELECT on-error=SQL-Error
'X'   &AEVT.EXISTS

FROM PS_GP_ABS_EVENT AEVT

WHERE AEVT.EMPLID = $Select-EMPLID
 AND  AEVT.EMPL_RCD = #Select-EMPL-RCD
 AND  $Select-ASOFDATE BETWEEN BGN_DT AND END_DT
 AND  AEVT.PIN_TAKE_NUM = (SELECT PIN_NUM
                           FROM  PS_GP_PIN
                           WHERE PIN_CODE = 'GUARDA LEGAL ESP')
end-SELECT

#debugd show 'GUARDA LEGAL Exists? (''X'' = Yes): ' &AEVT.EXISTS

If &AEVT.EXISTS = 'X'

!!!**********************************************************************
!!!--Code fragmenY commented out waiting for further analysis on the use of
!!!--element CLI FM SBR FCT FTE
!!!   let $sql-statement = 'GPESFNQ1.SQR,Get-Guarda-Legal-PCT,Select,PS_GP_RSLT_PIN PRST'
!!!begin-SELECT on-error=SQL-Error
!!!PRST.PIN_VAL_NUM
!!!
!!!FROM PS_GP_RSLT_PIN PRST
!!!
!!!WHERE PRST.EMPLID = $Select-EMPLID
!!! AND  PRST.EMPL_RCD = #Select-EMPL-RCD
!!! AND  $Select-ASOFDATE BETWEEN SLICE_BGN_DT AND SLICE_END_DT
!!! AND  PRST.PIN_NUM = (SELECT PIN_NUM
!!!                      FROM  PS_GP_PIN
!!!                      WHERE PIN_CODE = 'CLI FM SBR FCT FTE ESP')
!!!end-SELECT
!!!
!!!#debugd show 'Custom formula CLI FM SBR FCT FTE value: ' &PRST.PIN_VAL_NUM
!!!
!!!   If &PRST.PIN_VAL_NUM <> 0
!!!      Let #Guarda-lgl-PCT = &PRST.PIN_VAL_NUM
!!!      Multiply 100 Times #Guarda-lgl-PCT Round=2
!!!   Else
      do Convert-To-DTU-Date($Select-ASOFDATE ,$Out)
      do dtu-subtract-days($Out, 3, $OVRD-Bgn-Dt)
      do Convert-From-DTU-Date($OVRD-Bgn-Dt, $OVRD-Bgn-Dt)
      Let $OVRD-End-Dt = $Select-ASOFDATE
      do Get-WorkDay-Reduction                      !Gets &SOVR.SOVR_VAL_NUM
      Let $Workday-Reduction = ''                   !Necessary to reset this variable!!!

      If &SOVR.SOVR_VAL_NUM <> 0                    !CLI VR RED JORNADA value override

         !Let $Contract-Bgn-Dt = $OVRD-Bgn-Dt
         Let $Contract-End-Dt = $OVRD-End-Dt
         do Get-PartTime-Contract-Workdays             !Gets &SCH.SCHED_HRS
         #debugd show 'Using schedule hours for legal custody pct. calc Schd Hrs value: ' #Sched-Hrs
         Let #Guarda-lgl-PCT = &SOVR.SOVR_VAL_NUM
         Divide #Sched-Hrs Into #Guarda-lgl-PCT Round=6 On-Error = Zero
         Multiply 100 Times #Guarda-lgl-PCT Round=2
      Else
         #debugd show 'Using FTE for legal custody pct calc. FTE Value: ' &JOB.FTE
         Let #Guarda-lgl-PCT = &JOB.FTE
         Multiply 100 Times #Guarda-lgl-PCT Round=2
      End-If
      let #Guarda-lgl-PCT = 100 - #Guarda-lgl-PCT           !Calculate worked PCT
!!!   End-if
!!!--Code fragmenY commented out waiting for further analysis on the use of
!!!--element CLI FM SBR FCT FTE
!!!**********************************************************************
End-If

end-procedure


!************************************************************************
! Procedure Get-ERE-DAY-REDN-PCT
!************************************************************************
begin-procedure Get-ERE-DAY-REDN-PCT
#debug do Fin-Debug-Msg('Get-ERE-DAY-REDN-PCT')

let $sql-statement = 'GPESFBAJ.SQR,Get-ERE-DAY-REDN-PCT,Select,PS_ERE_UPD_ACT_ESP'
begin-SELECT on-error=SQL-Error
EAC.PIN_TAKE_NUM

FROM PS_ERE_UPD_ACT_ESP EAC

WHERE EAC.ERE_U_ACTN_TYP_ESP = 'D'
end-SELECT

let $sql-statement = 'GPESFBAJ.SQR,Get-ERE-DAY-REDN-PCT,Select,PS_GP_ABS_EVENT EAEVT'
begin-SELECT on-error=SQL-Error
EAEVT.BEGIN_DAY_HRS

FROM PS_GP_ABS_EVENT EAEVT

WHERE EAEVT.EMPLID = $Select-EMPLID
 AND  EAEVT.EMPL_RCD = #Select-EMPL-RCD
 !AND  $Select-ASOFDATE BETWEEN BGN_DT AND END_DT
 AND  EAEVT.PIN_TAKE_NUM = &EAC.PIN_TAKE_NUM
 AND  BGN_DT = (SELECT MAX(BGN_DT) FROM PS_GP_ABS_EVENT EAEVT1
                WHERE EAEVT1.EMPLID = EAEVT.EMPLID
                  AND EAEVT1.EMPL_RCD = EAEVT.EMPL_RCD
                  AND EAEVT1.PIN_TAKE_NUM = EAEVT.PIN_TAKE_NUM
                  AND EAEVT1.BGN_DT <= $Select-ASOFDATE)
end-SELECT

#debugd show 'ERE Work day reduction hours: ' &EAEVT.BEGIN_DAY_HRS

Let $Contract-Bgn-Dt = $ERE-BGNDT
Let $Contract-End-Dt = $ERE-ENDDT
do Get-PartTime-Contract-Workdays             !Gets &SCH.SCHED_HRS
#debugd show 'Using schedule hours for ERE workday reduction pct. Calc Schd Hrs value: ' #Sched-Hrs
Let #ERE-WRD-PCT = &EAEVT.BEGIN_DAY_HRS
Divide #Sched-Hrs Into #ERE-WRD-PCT Round=6 On-Error = Zero
Multiply 100 Times #ERE-WRD-PCT Round=2

end-procedure


!************************************************************************
! Procedure Print-Certificate-BAJ
!************************************************************************
begin-procedure Print-Certificate-BAJ
#debug do Fin-Debug-Msg('Print-Certificate-BAJ')

  #define DFLT_COL1                08
  #define DFLT_COL2                16

  #define MAIN_BOX_WIDTH    {ColR}

  #define ARIAL               4
  #define ARIAL_BOLD        400
  #define COURIER_NEW         3
  #define HELVETICA_NARROW   38
  #define TIMES_ITALIC       32

  If $Print-Certificate = 'Y'
    print ' '                                                                                    ( 1, 1)

    !---- HEADER PART----!
    PRINT-IMAGE  (  1,  {DFLT_COL1})
      type         = jpeg-file
      image-size   = (32,8)
      source       = $FileDir

    PRINT-IMAGE  ( +1,  108)
      type         = jpeg-file
      image-size   = (21,5)
      source       = $FileDir2

    alter-printer point-size=19 font={ARIAL_BOLD}
    set-color print-text-foreground = ('black')
    print 'Certificado de empresa'                                                               (+10, {DFLT_COL1})

    alter-printer point-size=9 font={ARIAL}
    set-color print-text-foreground = ('black')
    print 'D.'                                                                                   ( +3, {DFLT_COL1})
    graphic (,12,118) horz-line
    print $Responsible-Name                                                                      (   , 14)
    !set-color print-text-foreground = ('black')
    !print 'con DNI o NIE'                                                                        (   , 93)
    !graphic (,108,22) horz-line
    !print $Responsible-DNI                                                                       (   , 110)
    set-color print-text-foreground = ('black')
    print 'que desempeña en la Empresa el cargo de'                                              ( +2, {DFLT_COL1})
    print $Reponsible-JobCode                                                                    (   , 51)
    graphic (,49,81) horz-line
    alter-printer point-size=9 font={ARIAL_BOLD}
    set-color print-text-foreground = ('green')
    print 'CERTIFICA:'                                                                           (+3, {DFLT_COL1})
    alter-printer point-size=8 font={ARIAL}
    set-color print-text-foreground = ('black')
    print 'A efectos de solicitud de Prestación por Desempleo, que son ciertos los datos relativos a la Empresa, así como los personales,'   (   , 20)
    print 'profesionales y de cotización del trabajador que a continuación se consignan.'        ( +1, {DFLT_COL1})
    alter-printer point-size=8 font={ARIAL}
    set-color print-text-foreground = ('green')
    print 'Antes de rellenar cada apartado, lea atentamente las instrucciones del dorso.'        ( +2, {DFLT_COL1})

    !------------------------PART 1------------------------------------------------------
    graphic (+2,{DFLT_COL1},{MAIN_BOX_WIDTH}) box 2.5 3 10
    alter-printer point-size=10 font={ARIAL}
    set-color print-text-foreground = ('black')
    print '   1. Datos de la empresa'                                                            ( +1, {DFLT_COL1})  Bold

    alter-printer point-size=7 font={ARIAL}
    print 'Nombre o razón social'                                                                ( +2, {DFLT_COL1})
    graphic (,26,104) horz-line
    print $Cmpny-Descr                                                                           (   , 28)

    print 'Régimen Seguridad Social: Código'                                                     ( +2, {DFLT_COL1})
    graphic (,35,8) horz-line
    print $CMP-SchemeID                                                                          (   , 37)

    print 'Denominación'                                                                         (   , 45)
    graphic (,57,32) horz-line
    print $CMP-Scheme-DESCR                                                                      (   , 59)

    print 'Código cuenta cotización'                                                             (   , 91)
    graphic (,111,19) horz-line
    print $Cmpny-Ssn                                                                             (   , 113)  EDIT 'XX/XXXXXXX/XX'

    print 'Domicilio Social'                                                                     ( +2, {DFLT_COL1})
    !set-color print-text-foreground = ('green')
    !print 'Calle o Plaza y Número'                                                              (   , 20)
    !set-color print-text-foreground = ('black')
    graphic (,21,109) horz-line
    print $Cmpny-Address                                                                         (   , 23)
    set-color print-text-foreground = ('black')

    print 'Localidad'                                                                            ( +2, {DFLT_COL1})
    graphic (,17,34) horz-line
    print $Cmpny-City                                                                            (   , 19)

    print 'Código Postal'                                                                        (   , 53)
    graphic (,65,13) horz-line
    print $Cmpny-Postal                                                                          (   , 67)

    print 'Provincia'                                                                            (   , 80)
    graphic (,88,42) horz-line
    print $Cmpny-State-Desc                                                                      (   , 90)

    Do INDSTRY-ACT-ESP
    print 'Actividad Económica(1): Clave CNAE'                                                   ( +2, {DFLT_COL1})
    graphic (,37,7) horz-line
    print $Cmpny-Indstry-Cd                                                                      (   , 39)
    print 'Denominación'                                                                         (   , 46)
    graphic (,58,72) horz-line
    print $Cmpny-Indstry-Desc                                                                    (   , 60)

    print 'Domicilio y localidad del centro de trabajo (si es distinto del domicilio social)'    (+2, {DFLT_COL1})
    graphic (,64, 66)   horz-line
    If $Cmpny-address-Cmp <> $Wrk-Center-Addr
       print $Wrk-Center-Addr                                                                    (  , 66)
    end-if
    !graphic (+2,{DFLT_COL1},122)   horz-line


    !---------------------------PART 2------------------------------------------------------
    graphic (+2,{DFLT_COL1},{MAIN_BOX_WIDTH}) box 2.5 5 10
    alter-printer point-size=10 font={ARIAL}
    print '   2. Datos del trabajador'                                                           ( +1, {DFLT_COL1}) Bold

    alter-printer point-size=7 font={ARIAL}
    print 'Nombre y apellidos'                                                                   ( +2, {DFLT_COL1})
    graphic (,23,48) horz-line
    print $Empl-Name                                                                             (   , 25)

    print 'DNI o NIE'                                                                            (   , 73)
    graphic (,81,17) horz-line
    print $Empl-DNI                                                                              (   , 83)

    print 'Nº Afiliación SS'                                                                     (   , 100)
    graphic (,113,17) horz-line
    print $Empl-SSN                                                                              (   , 115) EDIT 'XX/XXXXXXXX/XX'

    print 'Grupo de cotización'                                                                  ( +2, {DFLT_COL1})
    graphic (,24,29) horz-line
    print $Empl-SS-Grp-Desc                                                                      (   , 26)

    print 'Contrato'                                                                             (   , 55)
    set-color print-text-foreground = ('green')
    print '(2)'                                                                                  (   , 62)
    set-color print-text-foreground = ('black')
    print ':Tipo'                                                                                (   , 64)
    graphic (,69,28) horz-line
    print $Cntrct-Type-INEM-Desc                                                                 (   , 71)

    print 'Duración'                                                                             (   , 99)
    graphic (,107,23) horz-line
    print $Duration                                                                              (   , 109)


    print 'Distribución de las jornadas de trabajo en contratos a tiempo parcial'                ( +2, {DFLT_COL1})
    set-color print-text-foreground = ('green')
    print '(3)'                                                                                  (   , 58)
    set-color print-text-foreground = ('black')
    print ':'                                                                                    (   , 60)

    Let #Schedule-ln = #current-line + 2
    Let #LnWk = 0
    While #LnWk <= 1
      print 'Tipo:'                                                                              ( +2, {DFLT_COL1})
      graphic (,13,5) horz-line

      print 'Días:'                                                                              (   , 20)
      graphic (,25,8) horz-line

      print 'del'                                                                                (   , 35)
      graphic (,39,12) horz-line

      print 'al'                                                                                 (   , 53)
      graphic (,56,12) horz-line

      print 'Tipo:'                                                                              (   , 70)
      graphic (,75,5) horz-line

      print 'Días:'                                                                              (   , 82)
      graphic (,87,8) horz-line

      print 'del'                                                                                (   , 97)
      graphic (,101,12) horz-line

      print 'al'                                                                                 (   , 115)
      graphic (,118,12) horz-line

      Let #LnWk = #LnWk + 1
    end-while


    !print 'Profesión:Código CNO'                                                                ( +2, {DFLT_COL1})
    print  'Profesión/Categoría profesional: Código (4)'                                         ( +2, {DFLT_COL1})
    graphic (,41,11) horz-line
    print $CNO-Code                                                                              (  ,43)

    print 'Denominación'                                                                         ( , 54)
    graphic (,66,64) horz-line
    Let $Out = substr($Empl-CNO-Desc,1,64)
    print $Out                                                                                   (  ,68)

    !print 'Categoría'                                                                           (  +2 , {DFLT_COL1})
    graphic (+2,{DFLT_COL1},11) horz-line
    graphic (,17,45) horz-line
    !print $Empl-Ctg-Desc                                                                        (   , 19)
    Let $Out = substr($Empl-CNO-Desc,65,56)
    print $Out                                                                                   (  ,68)


    print 'Cargo público o sindical'                                                             (  , 64)
    Set-color print-text-foreground = ('green')
    Print '(5)'                                                                                  (  , 82)
    set-color print-text-foreground = ('black')
    Print ':'                                                                                    (  , 84)
    graphic (,86,19) horz-line

    print 'dedicación'                                                                           ( , 108)
    graphic (,118,9) horz-line
    print '%'                                                                                    ( , 128)


    print 'Fecha alta en empresa'                                                                (  +2 , {DFLT_COL1})
    graphic (,27,14) horz-line
    do Format-DateTime($Hire-Dt, $Hire-Dt-Print, {DEFDMY}, '', '')
    print $Hire-Dt-Print                                                                         (   , 29)

    print 'Suspensión/extinción de la relación laboral'                                          (  , 43)
    Set-color print-text-foreground = ('green')
    print '(6)'                                                                                  (   , 74)
    set-color print-text-foreground = ('black')
    print ':Código'                                                                              (   , 76)
    graphic (,83,7) horz-line
    print 'Causa'                                                                                (   , 92)
    graphic (,99,31) horz-line
    ! if $Empl-Terminated = 'Y'
       print $Actn-Rsn-INEM                                                                      (   , 85)
       Let $Out = substr($Actn-Rsn-INEM_Desc, 1, 35)
       print $Out                                                                                (    , 102)
    ! End-if
    !For some extrange reason it jumps one additional line. So, I jump one line instead of two.
    graphic (+1,{DFLT_COL1},122)   horz-line
    !For some extrange reason it jumps one additional line. So, I jump one line instead of two.
    ! if $Empl-Terminated = 'Y'
       Let $Out = substr($Actn-Rsn-INEM_Desc, 36, 122) || ' '
       print $Out                                                                                 (    , {DFLT_COL1})
    ! End-if
    print 'Fecha suspensión/extinción'                                                           ( +2 , {DFLT_COL1})
    graphic (,30,22) horz-line
    !If &A.GPES_EMPLOYEE_TYPE = 'I'     !Terminated employees filter criteria
    if $Empl-Terminated = 'Y'
       do Format-DateTime($Termination-Dt, $Termination-Dt-Print, {DEFDMY}, '', '')
       print $Termination-Dt-Print                                                               (    , 32)
    Else
      If $ERE-BGNDT <> ''
        do Format-DateTime($ERE-BGNDT, $ERE-BGNDT-Print, {DEFDMY}, '', '')
        print $ERE-BGNDT-Print                                                                   (    , 32)
      end-if
    End-if
    print 'Fecha fin suspensión'                                                                 (    , 54)
    graphic (,72,22) horz-line
    If $ERE-ENDDT <> ''
    do Format-DateTime($ERE-ENDDT, $ERE-ENDDT-Print, {DEFDMY}, '', '')
    print $ERE-ENDDT-Print                                                                       (    , 74)
    end-if
    print 'Nº E.R.E (7)'                                                                         (    ,97)
    graphic (,109,21) horz-line
    print $ERE-NBR                                                                               (    , 111)
    !print 'Nº de dias de vacaciones anuales retribuidas y no disfrutadas antes del cese:'       ( +2, {DFLT_COL1})
    !graphic (,65,4) horz-line
    !let #Vactn-days-ln = #current-line
    !let #Vactn-days-col = {EMPL_VACN_DAYS_FLD}

    print 'Reducción  de  jornada  por'                                                          ( +2, {DFLT_COL1})
    Set-color print-text-foreground = ('green')
    print '(8)'                                                                                  (   , 29)
    set-color print-text-foreground = ('black')
    print ':'                                                                                    (   , 32)
    print 'Reducción  temporal  de  la  jornada  o  ERE'                                         ( +2, {DFLT_COL1})
    graphic (,42,14) horz-line
    ! ***** ERE Workday reduction PCT taken from the table instead of calculate it here.
    !If $ERE-TYPE = 'D'
    !  Do Get-ERE-DAY-REDN-PCT
    !End-If
    ! ***** ERE Workday reduction PCT taken from the table instead of calculate it here.
    Do Format-Number(#ERE-WRD-PCT, $ERE-WRD-PCT-Print, '99B.BB')
    print $ERE-WRD-PCT-Print                                                                          (   , 44)
    print '%,  cuidado  de  hijos  o  familiares,  o  víctima  de  violencia  de  género'      (   , 57)
    !For some extrange reason it jumps one additional line. So, I jump one line back.
    graphic (-1,112,15) horz-line
    !For some extrange reason it jumps one additional line. So, I jump one line back.
    do Get-Guarda-Legal-PCT
    Do Format-Number(#Guarda-Lgl-PCT, $Guarda-Lgl-PCT-Print, '99B.BB')
    print $Guarda-Lgl-PCT-Print                                                                  (   , 115)
    print '%'                                                                                    (   , 128)


    print 'Nº de días de salarios de tramitación:'                                               ( +2, {DFLT_COL1})
    graphic (,37,6) horz-line
    print 'del'                                                                                  (    , 45)
    graphic (,49,12) horz-line
    print 'al'                                                                                   (    , 63)
    graphic (,67,12) horz-line
    !if $Empl-Terminated = 'Y'
      print $days_lit                                                                            (    , 39)
      print $LITIG_BGN_DT-PRINT                                                                  (    , 51)
      print $LITIG_END_DT-PRINT                                                                  (    , 69)
    !End-if


    !---------------------------PART 3------------------------------------------------------
    graphic (+2,{DFLT_COL1},{MAIN_BOX_WIDTH}) box 2.5 5 10
    alter-printer point-size=10 font={ARIAL}
    print '   3. Cotizaciones por contingencias comunes y de desempleo'                          ( +1, {DFLT_COL1}) Bold
    alter-printer point-size=8 font={ARIAL}
    !set-color print-text-foreground = ('green')
    !print 'Según TC-2, durante los últimos 180 días precedentes a la fecha del cese'            (+2, {DFLT_COL1}) Bold
    alter-printer point-size=7 font={ARIAL}
    set-color print-text-foreground = ('black')
    print 'Bases de cotización de los últimos 180 dias precedentes a la fecha de la suspensión/extinción de la relación laboral.'  (+2,{DFLT_COL1})


    #define TABLE-ROWS          9
    #define DFLT_HDR_HEIGHT     3
    #define DFLT_LINE_HEIGHT    2
    #define DFLT_YEAR_WIDTH     8
    #define DFLT_MNTH_WIDTH    16
    #define DFLT_CTZD_WIDTH    27
    #define DFLT_BSCC_WIDTH    47
    #define DFLT_BSCP_WIDTH    66
    #define DFLT_COMM_WIDTH    119

    graphic (+2, {DFLT_COL1},{DFLT_YEAR_WIDTH}) box {DFLT_HDR_HEIGHT} 1
    graphic (, {DFLT_COL1},{DFLT_MNTH_WIDTH}) box {DFLT_HDR_HEIGHT} 1
    graphic (, {DFLT_COL1},{DFLT_CTZD_WIDTH}) box {DFLT_HDR_HEIGHT} 1
    graphic (, {DFLT_COL1},{DFLT_BSCC_WIDTH}) box {DFLT_HDR_HEIGHT} 1
    graphic (, {DFLT_COL1},{DFLT_BSCP_WIDTH}) box {DFLT_HDR_HEIGHT} 1
    graphic (, {DFLT_COL1},{MAIN_BOX_WIDTH}) box {DFLT_HDR_HEIGHT} 1
    Let #Line-Prev = #current-line
    Let #linea_ant_b1 = #current-line + {DFLT_HDR_HEIGHT}

    alter-printer point-size=6 font={ARIAL}
    graphic (+{DFLT_HDR_HEIGHT}, {DFLT_COL1}, {MAIN_BOX_WIDTH}) box {DFLT_LINE_HEIGHT} 1
    Let #Height = {DFLT_LINE_HEIGHT}
    Let #I = 1
    While #I <= {TABLE-ROWS}
       If #I = {TABLE-ROWS} - 1
         Let #Vactn-Line = #current-line + 1
         Let #vert-line = #current-line - 3
         let #Shadow = 10
       else
         let #Shadow = 0
       end-if

       If #I <> {TABLE-ROWS}
          If #I <> {TABLE-ROWS} - 1
             !#debugt show '#I ' #I
             graphic (  , {DFLT_COL1},  8) box #Height 1 #Shadow   !Column AÑO
          End-If
       else
          If #I = {TABLE-ROWS}
            print 'Totales' ( , 9)
            let #Totals-Line = #current-line + 1
          End-If
       end-if

       graphic (  , {DFLT_COL1}, {DFLT_MNTH_WIDTH}) box #Height 1 #Shadow          !Column AÑO y MES
       graphic (  , {DFLT_COL1}, {DFLT_CTZD_WIDTH}) box #Height 1 0                !Column NUMEROS DIAS COTIZADOS (9)
       graphic (  , {DFLT_COL1}, {DFLT_BSCC_WIDTH}) box #Height 1 0                !Column BASE COTIZACIÓN CONTINGENCIAS COMUNES (10)
       graphic (  , {DFLT_COL1}, {DFLT_BSCP_WIDTH}) box #Height 1 0                !Column BASE CONTIZACIÓN DESEMPLEO (11)
       graphic (  , {DFLT_COL1}, {MAIN_BOX_WIDTH})  box #Height 1 0                !Column OBSERVACIONES (12)
       position (+#Height, )

       Let #Height = {DFLT_LINE_HEIGHT}
       Let #I = #I + 1
    End-While


    !----new fields-----!
    do Format-DateTime($AsOfToday, $out, {DEFCMP}, '', '')
    let $Day = substr($out, 7, 2)
    let $Month = substr($out, 5, 2)
    let $Year = substr($out, 1, 4)

    let $FieldName = 'GPES_MONTHCD'
    let $FieldValue = $Month
    let $AsOfDate = $Select-ASOFDATE
    Do Read-Translate-Table
    let $Month_Cd_Descr = RTrim($XLatshortName, ' ')

   ! alter-printer point-size=7 font={ARIAL}
   print 'En'                                                                                    (+1, 55)
   print $Wrk-Center-City                                                                        (  , 58)
   graphic                                                                                       (  , 57, 30) horz-line
   print 'a,'                                                                                    (  , 89)
   print $Day                                                                                    (  , 92)
   graphic                                                                                       (  , 91, 4) horz-line
   print 'de'                                                                                    (  , 97)
   print $Month_Cd_Descr                                                                         (  , 100)
   graphic                                                                                       (  , 99, 21) horz-line
   print 'de'                                                                                    (  ,122)
   print $Year                                                                                   (  ,125)
   graphic                                                                                       (  ,124, 6) horz-line


   print 'Firma:'                                                                                (+5, 78)
   graphic (,{DFLT_COL1},15) box 1.5 5 9
   print 'Sello de la empresa'                                                                   (  , 9)

   !print 'www.inem.es'                                                                           (+4, 9)
   graphic (,{DFLT_COL1},10) box 1.5 5
   PRINT-IMAGE  ( +2, {DFLT_COL1})
     type         = jpeg-file
     image-size   = (121,6)
     source       = $FileDir3



   Let #vert-line1 = #vert-line + 3
   Let #vert-line2 = #vert-line + 4
   alter-printer point-size=3 font={ARIAL}
   set-color print-text-foreground = ('black')
   print 'antes de la fecha del cese en la empresa'                                              (#vert-line2,{DFLT_COL1})
   Print 'Por vacaciones anuales,retribuidas y no disfrutadas '                                  (#vert-line1 ,{DFLT_COL1})



   !print 'antes de la fecha de la suspensión en la empresa'                                     (#vert-line2,{DFLT_COL1})
   set-color print-text-foreground = ('green')
   print '(13)'                                                                                  (#vert-line2,21)
   set-color print-text-foreground = ('black')



   alter-printer point-size=6 font={ARIAL}
   graphic (#vert-line, 16,2) vert-line
   Let #Line-Prev1 = #Line-Prev + 1
   print 'Año'                                                                                   (#Line-Prev, 10)
   print 'Mes'                                                                                   (#Line-Prev, 18)
   print 'Nº de días'                                                                            (#Line-Prev, 26)
   print 'cotizados (9)'                                                                         (#Line-Prev1, 25)
   print 'Base contización contin-'                                                              (#Line-Prev, 37)
   print 'gencias comunes (10)'                                                                  (#Line-Prev1, 37)
   print 'Base cotización'                                                                       (#Line-Prev, 59)
   print 'desempleo (11)'                                                                        (#Line-Prev1, 59)
   print 'Observaciones (12)'                                                                    (#Line-Prev, 96)
  End-if

end-procedure


!************************************************************************
! Procedure New-Certificate-Page
!************************************************************************
begin-procedure New-Certificate-Page
#debug do Fin-Debug-Msg('New-Certificate-Page')

  New-Page 1
  Do Print-Certificate-BAJ
  Do Print-Parttime-WorkDays
  let #Table-Row = {TABLE-ROWS} - 8

end-procedure


!************************************************************************
! Procedure Print-PartTime-WorkDays
!************************************************************************
begin-procedure Print-parttime-workdays
#debug do Fin-Debug-Msg('Print-PartTime-WorkDays')

do Convert-To-DTU-Date($Termination-Dt, $End-dt-DTU)
do dtu-add-years($End-dt-DTU, -6, $Begin-dt-DTU)
do Convert-From-DTU-Date($Begin-dt-DTU, $Begin-dt)

!---if $Empl-Terminated = 'Y'
do Format-DateTime($Termination-Dt, $Termination-Dt-CMP, {DEFCMP}, '', '')
!---else
!---  do Format-DateTime($Select-ASOFDATE, $Termination-Dt-CMP, {DEFCMP}, '', '')
!---end-if
let #TermMonth = substr($Termination-Dt-CMP, 5, 2)
let #TermYear = substr($Termination-Dt-CMP, 1, 4)

do Format-DateTime($Begin-dt, $Begin-dt-CMP, {DEFCMP}, '', '')
do Format-DateTime($Hire-Dt, $Hire-Dt-CMP, {DEFCMP}, '', '')
If $Hire-Dt-CMP > $Begin-dt-CMP
   Let $Begin-dt-CMP = $Hire-Dt-CMP
end-if
let #BgnMonth = substr($Begin-dt-CMP, 5, 2)
let #BgnYear = substr($Begin-dt-CMP, 1, 4)

#Debugd show 'PartTime Workdays Begin Yr/Mnth: ' #BgnYear  '/'  #BgnMonth
#Debugd show 'PartTime Workdays End Yr/Mnth:   ' #TermYear '/'  #TermMonth
#debugd show 'EMPLID:  ' $Select-EMPLID
#debugd show 'EMPLRCD: ' #Select-EMPL-RCD

Let #Schedule-Col = 1
Let #CntrtCount   = 0

let $sql-statement = 'GPESFNQ1.SQR,Print-PartTime-WorkDays,Select,PS_GPES_SSTC_RS_VW SSCTWK'
Begin-SELECT DISTINCT on-error=SQL-Error
CWK.EMPLID
CWK.CONTRACT_NUM
CWK.CONTRACT_BEGIN_DT        &CNTRCT_BGN_DT
MIN(CWK.CONTRACT_END_DT)     &CNTRCT_END_DT
SUM(SSTCWK.GPES_SSTC_DAYS)          &SSTCWK_DAYS

  Let $Contract-Bgn-Dt = &CNTRCT_BGN_DT

  do Format-DateTime(&CNTRCT_END_DT, $Contract-End-Dt-CMP, {DEFCMP}, '', '')
  do Format-DateTime($Select-ASOFDATE, $Select-ASOFDATE-CMP, {DEFCMP}, '', '')
  If NVL(&CNTRCT_END_DT, '') <> '' and $Contract-End-Dt-CMP <= $Select-ASOFDATE-CMP
    Let $Contract-End-Dt = &CNTRCT_END_DT
  else
    !Executing INEM report for an active employee needs a contract end date
    Let $Contract-End-Dt = $Select-ASOFDATE
  End-if
  Do Get-PartTime-Contract-Workdays

  If $Print-Certificate = 'Y'
    If #Schedule_Wk_Days <> 0
      Do Format-Number(#Schedule_Wk_Days, $Schedule_Days-Print, '9,999')
      do Format-DateTime($Contract-Bgn-Dt, $Cntrct_Bgn_Dt-Print, {DEFDMY}, '', '')
      do Format-DateTime($Contract-End-Dt, $Cntrct_End_Dt-Print, {DEFDMY}, '', '')
      If #Schedule-Col = 1
        print $Schedule_type             (#Schedule-ln, 15)
        print $Schedule_Days-Print       (            , 28)  EDIT 'XXXXX'
        print $Cntrct_Bgn_Dt-Print       (            , 41)
        print $Cntrct_End_Dt-Print       (            , 58)
        Let #Schedule-Col = 2
      Else
        print $Schedule_type             (            , 77)
        print $Schedule_Days-Print       (            , 90)  EDIT 'XXXXX'
        print $Cntrct_Bgn_Dt-Print       (            , 103)
        print $Cntrct_End_Dt-Print       (            , 120)
        Let #Schedule-Col = 1
        Let #Schedule-ln = #Schedule-ln + 2
      End-if
    End-if
  End-if

  
  If $Prepare-XML = 'Y'
      And $Stored-PT-Workdays = 'N'
      And ($Empl-Terminated = 'Y'
        Or ($ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'))   !Suspension, Work day redn or Daily redn
         do Get-Full-Part-Time-Term-Month
    If #Schedule_Wk_Days <> 0  and $TERM-Full-Part-Time='P'
     
      Do Insert-PT-Workdays-XML
    End-if
  End-if

  Let #CntrtCount = #CntrtCount + 1
  If #CntrtCount = 4
    EXIT-SELECT
  End-if

FROM PS_GPES_SSTC_RS_VW SSTCWK
    ,PS_CONTRACT_DATA CWK

WHERE SSTCWK.EMPLID = $Select-EMPLID
 AND  SSTCWK.EMPL_RCD = #Select-EMPL-RCD
 AND  SSTCWK.EMPLID = CWK.EMPLID
 AND  SSTCWK.CONTRACT_NUM = CWK.CONTRACT_NUM
 AND  SSTCWK.GPES_SSTC_HRS_FLAG = 'H'

 AND  SSTCWK.GPES_SSTC_ELEMENT IN ('BA01','BA22')
 AND  SSTCWK.GPES_SSTC_LGL_CUST <> 'T'

 AND (((SSTCWK.GPES_YEAR_RECALC = #BgnYear AND SSTCWK.GPES_MONTH_RECALC >= #BgnMonth) OR SSTCWK.GPES_YEAR_RECALC > #bgnYear)
   AND ((SSTCWK.GPES_YEAR_RECALC = #TermYear AND SSTCWK.GPES_MONTH_RECALC <= #TermMonth) OR SSTCWK.GPES_YEAR_RECALC < #TermYear)
   AND SSTCWK.SLICE_BGN_DT >= $Hire-Dt AND SSTCWK.SLICE_BGN_DT <= $Termination-Dt)

 AND  SSTCWK.GPES_SSTC_PAYMNT NOT IN ('L13', 'V03', 'V90')

GROUP BY CWK.EMPLID, CWK.CONTRACT_NUM, CWK.CONTRACT_BEGIN_DT
ORDER BY CWK.EMPLID, CWK.CONTRACT_NUM, CWK.CONTRACT_BEGIN_DT DESC
End-SELECT
  #debugd show ''
  #debugd show '******************************PRINT CONTRACTS PERIODS WHERE CLAUSE************************'
  #debugd show 'FROM PS_GPES_SSTC_RS_VW SSTCWK'
  #debugd show '    ,PS_CONTRACT_DATA CWK'
  #debugd show 'WHERE SSTCWK.EMPLID = ''' $Select-EMPLID ''''
  #debugd show ' AND  SSTCWK.EMPL_RCD = ' #Select-EMPL-RCD
  #debugd show ' AND  SSTCWK.EMPLID = CWK.EMPLID'
  #debugd show ' AND  SSTCWK.CONTRACT_NUM = CWK.CONTRACT_NUM'
  #debugd show ' AND  SSTCWK.GPES_SSTC_HRS_FLAG = ''H'''
  #debugd show ' AND  SSTCWK.GPES_SSTC_ELEMENT IN (''BA01'',''BA22'')'
  #debugd show ' AND  SSTCWK.GPES_SSTC_LGL_CUST <> ''T'''
  #debugd show 'AND (((SSTCWK.GPES_YEAR_RECALC = ' #BgnYear ' AND SSTCWK.GPES_MONTH_RECALC >= ' #BgnMonth ') OR SSTCWK.GPES_YEAR_RECALC > ' #bgnYear ')'
  #debugd show '   AND ((SSTCWK.GPES_YEAR_RECALC = ' #TermYear ' AND SSTCWK.GPES_MONTH_RECALC <= ' #TermMonth ') OR SSTCWK.GPES_YEAR_RECALC < ' #TermYear ')'
  #debugd show '   AND SSTCWK.SLICE_BGN_DT >= ''' $Hire-Dt ''' AND SSTCWK.SLICE_BGN_DT <= ''' $Termination-Dt ''')'
  #debugd show ' AND  SSTCWK.GPES_SSTC_PAYMNT NOT IN (''L13'',''V03'',''V90'')'
  #debugd show '******************************PRINT CONTRACTS PERIODS WHERE CLAUSE************************'
  #debugd show ''

Let $Stored-PT-Workdays = 'Y'

end-procedure


!************************************************************************
! Procedure Print-Contribution-bases-BAJ
!************************************************************************
begin-procedure Print-Contribution-bases-BAJ 
#debug do Fin-Debug-Msg('Print-Contribution-bases-BAJ')

  do Format-DateTime($Termination-Dt, $out, {DEFCMP}, '', '')
  let #From-Year = substr($out, 1, 4)
  let #From-Month = substr($out, 5, 2)
  let #Prev-Year = #From-Year
  let #Prev-Month = #From-Month
  let  #Prev_GPES_YEAR=#From-Year
  let  #Prev_GPES_MONTH=#From-Month
  
   let #NextMonth-Year =  #From-Year
   let #NextMonth =  #From-Month + 1
   if #NextMonth > 12 
      let #NextMonth = 1
      let #NextMonth-Year = #NextMonth-Year + 1
   end-if
     
  do Format-DateTime($Hire-Dt, $out, {DEFCMP}, '', '')
  let #To-Year =  substr($out, 1, 4)
  let #To-Month = substr($out, 5, 2)
  let #To-Day = substr($out, 7, 2)

  let #Total-CC = 0
  let #Total-Dsmpl = 0
  let #OT_hrs = 0
  let #denormalzdCP = 0
  let #OTbetCeilings = 0
  let #Ctz-Days = 0
  let #Ctz-Days_L03 = 0
  let #Init-Natural-Days = 1
  let #Empl-Total-CC = 0
  let #Empl-Total-Dsmpl = 0
  let #Empl-Ctz-Days = 0
  let #Vactn-Total-CC = 0
  let #Vactn-Total-Dsmpl = 0
  let #Vactn-Ctz-Days = 0
  let $Prev-sstc-Paymnt = ' '
  !let $Prev-Cmpny-Ssn = $Cmpny-Ssn
  let #Natural-Days = 0
  let #Contributing-Days = 0
  let #Insert-CC-Contrib-Cnt = 0
  let #Max-Version = 0

  let $Cmpny-SSN-XML = $Cmpny-Ssn
  let #Vactn-Ctz-Days-XML = 0
  let #Vactn-Total-CC-XML = 0
  let #Vactn-Total-Dsmpl-XML = 0
  let #Ctz-Days-XML =  0
  let #Total-CC-XML =  0
  let #Total-Dsmpl-XML =  0
  let #Prev-Vac-Days = 0

  let $Forced-Exit-Flag = ''

  let #Table-Row = {TABLE-ROWS} - 8
  Do Print-Certificate-BAJ
  Do Print-PartTime-WorkDays
  
  Let $ERE-TYPE-SQL = nvl($ERE-TYPE, ' ')

let $sql-statement = 'GPESFNQ1.SQR,Print-Contribution-bases-BAJ,Select,PS_GPES_SSTC_RS_VW'
Begin-SELECT on-error=SQL-Error 
SSTC.EMPLID 
SSTC.GPES_YEAR_RECALC 
SSTC.GPES_MONTH_RECALC 
SSTC.GPES_YEAR 
SSTC.GPES_MONTH 
  !SSTC.SSN_EMPLOYER 
SSTC.GPES_SSTC_ELEMENT 
SSTC.GPES_SSTC_PAYMNT 
                !*** Bug 27164423 - Manage the order of the select, for retrieveing L13 before L90/L91)
(CASE WHEN SSTC.GPES_SSTC_PAYMNT = 'L13' THEN '09' 
      WHEN SSTC.GPES_SSTC_PAYMNT = 'V90' THEN '11' 
      WHEN SSTC.GPES_SSTC_PAYMNT = 'V03' THEN '10' 
      WHEN SSTC.GPES_SSTC_PAYMNT = 'L00' THEN '08' 
      WHEN SSTC.GPES_SSTC_PAYMNT = 'L03' THEN '07' 
      ELSE '01'
END ) &ORDER_BY
SSTC.RSLT_VER_NUM 
MIN(SSTC.CONTRACT_NUM)  &SSTC.CONTRACT_NUM 
SSTC.GPES_SSTC_LGL_CUST 
SSTC.GPES_SSTC_OTHERS 
CWKS.CONTRACT_END_DT            &CNT_END_DT_S
  Let $Vacn-Cnt-End-Dt = &CNT_END_DT_S
  !Let $Cmpny-Ssn = &SSTC.SSN_EMPLOYER

  ! In case of litigation salaries we find L00 & L02 records in the table that make to print
  ! two lines in the report for the same month. We just want to print one line with the sum of
  ! L00 & L02 records for a month.
  let $sstc-Paymnt = &SSTC.GPES_SSTC_PAYMNT
  if &SSTC.GPES_SSTC_PAYMNT <> 'L13' and &SSTC.GPES_SSTC_PAYMNT <> 'V03' and &SSTC.GPES_SSTC_PAYMNT <> 'V90'
    let $sstc-Paymnt = 'L00'
  end-if

SUM(SSTC.GPES_SSTC_DAYS)      &SSTC.GPES_SSTC_DAYS
SUM(SSTC.GPES_SSTC_AMOUNT)    &SSTC.GPES_SSTC_AMOUNT

   let $Forced-Exit-Flag = 'N'
   let $Period = &SSTC.GPES_SSTC_PAYMNT || to_char(&SSTC.GPES_YEAR) || to_char(&SSTC.GPES_MONTH)

   !#debugd show 'ssn er/prev ssn er: ' $Cmpny-Ssn '/' $Prev-Cmpny-Ssn
   !#debugd show 'Month/prev month:   ' &SSTC.GPES_MONTH_RECALC '/' #Prev-Month
   !#debugd show 'Year/prev year:     ' &SSTC.GPES_YEAR_RECALC  '/' #Prev-Year
   !#debugd show 'Paymnt/prev paymnt: ' $sstc-Paymnt '/' $Prev-sstc-Paymnt
   !#debugd show 'Before starting TC Base Amount:           ' &SSTC.GPES_SSTC_AMOUNT

   if #Prev-Month <> &SSTC.GPES_MONTH_RECALC
       or #Prev-Year <> &SSTC.GPES_YEAR_RECALC
       or $Prev-sstc-Paymnt <> $sstc-Paymnt
      ! or $Prev-Cmpny-Ssn <> $Cmpny-Ssn
  
     #debugd show 'Before starting TC Base Amount:           ' &SSTC.GPES_SSTC_AMOUNT
     if $Prev-sstc-Paymnt <> 'L13' and $Prev-sstc-Paymnt <> 'V03' and $Prev-sstc-Paymnt <> 'V90'
       if #Ctz-Days <> 0  OR  #Ctz-Days_L03 <> 0
   
    if #Ctz-Days = 0
    let #Ctz-Days = #Ctz-Days_L03
    end-if
   
   
         if #Table-Row > {TABLE-ROWS} - 2
           Do New-Certificate-Page
         end-if

         Do Print-Contribution-Ln-BAJ

         let #Contributing-Days = #Contributing-Days + #Ctz-Days
         #debugd show 'Contributing Days Count: ' #Contributing-Days ' '  #Ctz-Days

         if #Contributing-Days >= 180
           #debugd show 'Forced Exit --> Contributing Days >= 180 Count: ' #Contributing-Days
           let $Forced-Exit-Flag = 'Y'
           EXIT-SELECT
         end-if
         !If $Prev-Cmpny-Ssn <> $Cmpny-Ssn
         !  Do Print-Vacations-Ln-BAJ
         !  Do New-Certificate-Page
         !end-if
       end-if
     end-if

     let #Prev-Year          = &SSTC.GPES_YEAR_RECALC
     let #Prev-Month         = &SSTC.GPES_MONTH_RECALC
     let  #Prev_GPES_YEAR=&SSTC.GPES_YEAR
     let  #Prev_GPES_MONTH=&SSTC.GPES_MONTH
     let #Total-CC           =  0
     let #Total-Dsmpl        =  0
     let #Ctz-Days           =  0
     let #Ctz-Days_L03           =  0
     let $Prev-sstc-Paymnt   =  $sstc-Paymnt
     !let $Prev-Cmpny-Ssn     =  $Cmpny-Ssn
     let #OT_hrs             =  0
     let #denormalzdCP       =  0
     let #OTbetCeilings      =  0
     let $Prev_Period = $Period

   end-if


   #debugd show 'TC Payment/Element:       ' &SSTC.GPES_SSTC_PAYMNT '/' &SSTC.GPES_SSTC_ELEMENT
   #debugd show 'Year Recalc/Month Recalc: ' &SSTC.GPES_YEAR_RECALC '/' &SSTC.GPES_MONTH_RECALC
   #debugd show '  TC contributing days:     ' &SSTC.GPES_SSTC_DAYS
   #debugd show '  TC Base Amount:           ' &SSTC.GPES_SSTC_AMOUNT

   !** Procedure to get the company code of the employee's contract id***!
   let $mult_contract = &SSTC.CONTRACT_NUM
   !do GetEmployeeContractCompany
   !#debugd show '  Job/contract company: ' $CMP '/' $EmpContractCompany
   !#debugd show '  Job/FAN rslt table contract: ' &JOB.CONTRACT_NUM '/' &SSTC.CONTRACT_NUM
   #debugd show ' '


   !**1648916000 - We add Contributions pertaining to last 180days (across contracts) but of the same company as the terminated one**!

   !if $EmpContractCompany = $CMP
       if &SSTC.GPES_SSTC_ELEMENT = 'BA01' or &SSTC.GPES_SSTC_ELEMENT = 'BA21'
          if &SSTC.GPES_SSTC_PAYMNT = 'L13' or &SSTC.GPES_SSTC_PAYMNT = 'V03' or &SSTC.GPES_SSTC_PAYMNT = 'V90'
             let #Vactn-Total-CC =  #Vactn-Total-CC +  &SSTC.GPES_SSTC_AMOUNT
          else
             let #Total-CC = #Total-CC + &SSTC.GPES_SSTC_AMOUNT
          end-if
       end-if
        #debugd show '    Payment Type: ' &SSTC.GPES_SSTC_PAYMNT     
        #debugd show '    Version: ' &SSTC.RSLT_VER_NUM 
        #debugd show '    Total CC Bases  (#Total-CC) /&SSTC.GPES_SSTC_AMOUNT  : '  #Total-CC ' / ' &SSTC.GPES_SSTC_AMOUNT 
        #debugd show '    Total Vacation Bases  #Vactn-Total-CC : ' #Vactn-Total-CC 
     
       if &SSTC.GPES_SSTC_ELEMENT = 'BA02' or &SSTC.GPES_SSTC_ELEMENT = 'BA22' or &SSTC.GPES_SSTC_ELEMENT = 'BA42' or &SSTC.GPES_SSTC_ELEMENT = 'CRAX'
          if &SSTC.GPES_SSTC_PAYMNT = 'L13' or &SSTC.GPES_SSTC_PAYMNT = 'V03' or &SSTC.GPES_SSTC_PAYMNT = 'V90' 
               let #Vactn-Total-Dsmpl = #Vactn-Total-Dsmpl +  &SSTC.GPES_SSTC_AMOUNT


               If #Prev-Month-Recalc = &SSTC.GPES_MONTH_RECALC and #Prev-Year-Recalc = &SSTC.GPES_YEAR_RECALC and &SSTC.RSLT_VER_NUM <> #Prev-Version
                  let #Vactn-Ctz-Days    = #Vactn-Ctz-Days -  #Prev-Vac-Days                 
                  let #Contributing-Days =  #Contributing-Days - #Prev-Vac-Days
               end-if
               let #Vactn-Ctz-Days    = #Vactn-Ctz-Days +  &SSTC.GPES_SSTC_DAYS                 
               let #Contributing-Days =  #Contributing-Days + &SSTC.GPES_SSTC_DAYS
               
               let #Prev-Month-Recalc = &SSTC.GPES_MONTH_RECALC
               let #Prev-Year-Recalc = &SSTC.GPES_YEAR_RECALC 
               let #Prev-Version = &SSTC.RSLT_VER_NUM 
               let #Prev-Vac-Days = &SSTC.GPES_SSTC_DAYS
            
               #debugd show '    Contributing Days Count (L13): ' #Contributing-Days
               #debugd show '    Vactn-Ctz-Days (L13): ' #Vactn-Ctz-Days
          else
             let #Total-Dsmpl = #Total-Dsmpl +  &SSTC.GPES_SSTC_AMOUNT
             if $sstc-Paymnt = $Prev-sstc-Paymnt and &SSTC.GPES_SSTC_PAYMNT <> 'L03' AND &SSTC.GPES_SSTC_PAYMNT <> 'L09'
                 and &SSTC.GPES_SSTC_PAYMNT <> 'L91' AND &SSTC.GPES_SSTC_PAYMNT <> 'L90'
                 If (&SSTC.GPES_SSTC_PAYMNT <> 'L02' AND (&SSTC.GPES_SSTC_LGL_CUST <> 'T' AND &SSTC.GPES_SSTC_OTHERS <> 'P'))
                     OR (&SSTC.GPES_SSTC_PAYMNT = 'L02' AND &SSTC.GPES_YEAR_RECALC = &SSTC.GPES_YEAR AND &SSTC.GPES_MONTH_RECALC = &SSTC.GPES_MONTH)
                     let #Ctz-Days = #Ctz-Days +  &SSTC.GPES_SSTC_DAYS
                 end-if
             else
                !*** Bug 27164423 - Update the number of days in case of Retro (L90/L03/L91). Initializate days counter in case of change of liquidation type or month.
                if $Prev_Period = $Period or #Prev-Version = &SSTC.RSLT_VER_NUM 
                   let #Ctz-Days = #Ctz-Days + &SSTC.GPES_SSTC_DAYS
                else
                   let #Ctz-Days = &SSTC.GPES_SSTC_DAYS
                end-if
             end-if
 
             if $sstc-Paymnt = $Prev-sstc-Paymnt 
                and  #Prev_GPES_MONTH=&SSTC.GPES_MONTH  and  #Prev_GPES_YEAR=&SSTC.GPES_YEAR 
                and (&SSTC.GPES_SSTC_PAYMNT = 'L03' OR  &SSTC.GPES_SSTC_PAYMNT = 'L09' 
                OR  &SSTC.GPES_SSTC_PAYMNT = 'L90' OR  &SSTC.GPES_SSTC_PAYMNT = 'L91')
   
                If &SSTC.GPES_SSTC_LGL_CUST <> 'T' AND &SSTC.GPES_SSTC_OTHERS <> 'P'
                   let #Ctz-Days_L03 = #Ctz-Days_L03 +  &SSTC.GPES_SSTC_DAYS
                end-if
             end-if
          end-if
       end-if
   
   let #Prev-Version = &SSTC.RSLT_VER_NUM 
   #debugd show '  Agregate contributing days: ' #Ctz-Days
   #debugd show '  Agregate contributing days #Ctz-Days_L03: ' #Ctz-Days_L03

   #debugd show '  '

     !** refer incident id:1649774001 for explantaions on the below code **!
     if &SSTC.GPES_SSTC_ELEMENT = 'BA10' or &SSTC.GPES_SSTC_ELEMENT = 'BA11'
       let #OT_hrs = #OT_hrs + &SSTC.GPES_SSTC_AMOUNT
     End-if
   !end-if

 FROM PS_GPES_SSTC_RS_VW  SSTC
    ,PS_CONTRACT_DATA CWKS

WHERE SSTC.EMPLID = $Select-EMPLID
 AND  SSTC.EMPL_RCD = #Select-EMPL-RCD
 AND  SSTC.EMPLID = CWKS.EMPLID
 AND  SSTC.CONTRACT_NUM = CWKS.CONTRACT_NUM
 AND  SSTC.GPES_SSTC_ELEMENT IN ('BA01','BA02','BA21','BA22','BA42','BA10','BA11','CRAX')
 AND  SSTC.SLICE_BGN_DT >= $Hire-Dt
 AND ((SSTC.SLICE_BGN_DT <= $Termination-Dt AND (&A.GPES_EMPLOYEE_TYPE = 'I' OR $ERE-TYPE-SQL IN ('S', 'W', 'D')))
         OR (SSTC.SLICE_BGN_DT <= $Select-ASOFDATE AND (&A.GPES_EMPLOYEE_TYPE = 'A' AND $ERE-TYPE-SQL NOT IN ('S', 'W', 'D'))))
 AND (((SSTC.GPES_YEAR_RECALC = #From-Year AND  SSTC.GPES_MONTH_RECALC <= #From-Month) OR SSTC.GPES_YEAR_RECALC < #From-Year)
         AND ((SSTC.GPES_YEAR_RECALC = #To-Year AND  SSTC.GPES_MONTH_RECALC >= #To-Month) OR SSTC.GPES_YEAR_RECALC > #To-Year)
  !OR  (SSTC.GPES_YEAR = #From-Year AND SSTC.GPES_MONTH = #From-Month AND SSTC.GPES_SSTC_PAYMNT = 'L13'))
  OR  ( (SSTC.GPES_SSTC_PAYMNT = 'L13' OR SSTC.GPES_SSTC_PAYMNT = 'V03' OR SSTC.GPES_SSTC_PAYMNT = 'V90') AND (SSTC.GPES_YEAR = #NextMonth-Year AND SSTC.GPES_MONTH >= #NextMonth) 
     OR (SSTC.GPES_YEAR = #From-Year AND SSTC.GPES_MONTH = #From-Month)))

GROUP BY SSTC.EMPLID, SSTC.GPES_YEAR_RECALC, SSTC.GPES_MONTH_RECALC, SSTC.GPES_YEAR, SSTC.GPES_MONTH, 8, SSTC.GPES_SSTC_PAYMNT, SSTC.GPES_SSTC_ELEMENT, CWKS.CONTRACT_END_DT, 
         SSTC.GPES_SSTC_LGL_CUST, SSTC.GPES_SSTC_OTHERS, SSTC.RSLT_VER_NUM
ORDER BY SSTC.EMPLID, SSTC.GPES_YEAR_RECALC DESC, SSTC.GPES_MONTH_RECALC DESC, 8 DESC, SSTC.RSLT_VER_NUM, SSTC.GPES_SSTC_PAYMNT DESC,  SSTC.GPES_SSTC_ELEMENT DESC
End-SELECT
  #debugd show ''
  #debugd show '******************************PRINT CONTRIBUTION BASES WHERE CLAUSE************************'
  #debugd show 'FROM PS_GPES_SSTC_RS_VW  SSTC'
  #debugd show '    ,PS_CONTRACT_DATA CWKD'
  #debugd show 'WHERE SSTC.EMPLID = ''' $Select-EMPLID ''''
  #debugd show 'AND  SSTC.EMPL_RCD = ' #Select-EMPL-RCD
  #debugd show ' AND SSTC.EMPLID = CWKD.EMPLID'
  #debugd show ' AND SSTC.CONTRACT_NUM = CWKD.CONTRACT_NUM'
  #debugd show 'AND  SSTC.GPES_SSTC_ELEMENT IN (''BA01'',''BA02'',''BA21'',''BA22'',''BA42'',''BA10'',''BA11'')'
  #debugd show 'AND  SSTC.SLICE_BGN_DT >= ''' $Hire-Dt ''''
  #debugd show 'AND ((SSTC.SLICE_BGN_DT <= ''' $Termination-Dt ''' AND (''' &A.GPES_EMPLOYEE_TYPE ''' = ''I'' OR ''' $ERE-TYPE-SQL ''' IN (''S'', ''W'', ''D'')))'
  #debugd show '        OR (SSTC.SLICE_BGN_DT <= ''' $Select-ASOFDATE ''' AND (''' &A.GPES_EMPLOYEE_TYPE ''' = ''A'' AND ''' $ERE-TYPE-SQL ''' NOT IN (''S'', ''W'', ''D''))))'
  #debugd show 'AND (((SSTC.GPES_YEAR_RECALC = ' #From-Year ' AND  SSTC.GPES_MONTH_RECALC <= ' #From-Month ') OR SSTC.GPES_YEAR_RECALC < ' #From-Year ')'
  #debugd show '    AND ((SSTC.GPES_YEAR_RECALC = ' #To-Year ' AND  SSTC.GPES_MONTH_RECALC >= ' #To-Month ') OR SSTC.GPES_YEAR_RECALC > ' #To-Year ')'
  #debugd show ' OR  (SSTC.GPES_YEAR = ' #From-Year ' AND SSTC.GPES_MONTH = ' #From-Month ' AND GPES_SSTC_PAYMNT = ''L13''))'
  #debugd show '******************************PRINT CONTRIBUTION BASES WHERE CLAUSE************************'
  #debugd show ''



  #debugd show 'Year/Month From (Backward); ' #From-Year '/' #From-Month
  #debugd show 'Employee ID:    ' $Select-EMPLID
  #debugd show 'Empl Rcd#:      ' #Select-EMPL-RCD
  #debugd show 'Termination Dt: ' $Termination-Dt

  #debugd show 'Forced Exit/#Table-row/TABLE-ROWS: ' $Forced-Exit-Flag '/' #Table-Row '/' {TABLE-ROWS}
  If $Forced-Exit-Flag = 'N'
    if #Ctz-Days <> 0 OR  #Ctz-Days_L03 <> 0

    if #Ctz-Days = 0 
    let   #Ctz-Days= #Ctz-Days_L03
    end-if



      if #Table-Row > {TABLE-ROWS} - 2
        Do New-Certificate-Page
      end-if
      Do Print-Contribution-Ln-BAJ
    end-if
  end-if

  If $Prepare-XML = 'Y'
      And #Insert-CC-Contrib-Cnt = 0           !XML generator needs at leas one blank record
      And ($Empl-Terminated = 'Y'
        Or ($ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'))   !Suspension, Work day redn or Daily redn
    Let #Prev-Year = 0
    Let #Prev-Month = 0
    Let $Ctz-Days = 0
    Let $Total-Dsmpl = 0
    Do Insert-CC-Contrib-XML
  End-if

  If $Print-Certificate = 'Y'
    Do Print-Vacations-Ln-BAJ

    If $Prepare-XML = 'Y'
!        And $Stored-CC-EE-Data = 'N'
        And ($Empl-Terminated = 'Y'
        Or ($ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'))
      Do Insert-CC-EE-Data-XML
      Let $Stored-CC-EE-Data = 'Y'
    End-if
  
    Do Format-Number(#Empl-Ctz-Days, $out, '999')
    let $Out = lpad($out, 3, ' ')
    print $out                                   ( #Totals-Line, 28)
    if $ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'   !Suspension, Work day redn or Daily redn
      Do Format-Number(#Empl-Total-CC, $out, '999,999.99')
      let $Out = lpad($out, 12, ' ')
      print $Out                                 ( #Totals-Line, 37)
    end-if
    Do Format-Number(#Empl-Total-Dsmpl, $out, '999,999.99')
    let $Out = lpad($out, 11, ' ')
    print $Out                                   ( #Totals-Line, 57)   
  End-if

end-procedure



!************************************************************************
! Procedure Print-Contribution-Ln-BAJ
!************************************************************************
begin-procedure Print-Contribution-Ln-BAJ
#debug do Fin-Debug-Msg('Print-Contribution-Ln-BAJ')

  alter-printer point-size=8 font={COURIER_NEW}

  !** refer incident id:1649774001 for explantaions on the below code **!
  !** The below check is made only if the employee has OT earnings **!
  If #OT_hrs > 0
   let #denormalzdCP = #Total-CC + #OT_hrs
   if #denormalzdCP > #Total-Dsmpl
     let #OTbetCeilings = #OT_hrs - (#denormalzdCP - #Total-Dsmpl)
   else
     let #OTbetCeilings = #OT_hrs
   End-if
   let #Total-Dsmpl = #Total-Dsmpl - #OTbetCeilings
  End-if


  If #Contributing-Days + #Ctz-Days >= 180
    !Active employee filter criteria contributing base proration only for first month
    Or (&A.GPES_EMPLOYEE_TYPE = 'A' and #Init-Natural-Days = 1       !Active employees filter criteria..
        and #Prev-Year = #From-Year AND #Prev-Month = #From-Month)   !only for first month
    !Active employee filter criteria contributing base proration

    If &A.GPES_EMPLOYEE_TYPE = 'A' and #Init-Natural-Days = 1
      let $SchDays-Last-Month-PdEnd = $Select-ASOFDATE    !Sets variable for procedure Get-Schedule-Days-Last-Month

      !Carefull when hiring/terminating in the same month
      If #From-Year = #To-Year and #From-Month = #To-Month
        do Convert-To-DTU-Date($Hire-Dt, $TC-Period-Begin-DTU)
      else
        let $TC-Period-Begin-DTU = to_char(#Prev-Year) || '-' || to_char(#Prev-Month) || '-01'
      End-if

      Do DTU-Month-End($TC-Period-Begin-DTU, $TC-Period-End-DTU)
      Do Convert-From-DTU-Date($TC-Period-Begin-DTU, $TC-Period-Begin)
      Do Convert-From-DTU-Date($TC-Period-End-DTU, $TC-Period-End)
      #debugd show 'Last Month Begin/End Dates: ' $TC-Period-Begin '/' $TC-Period-End
      Do Get-Full-Part-Time-Last-Month     !Fills $FPLM-Full-Part-Time, $Contract-Bgn-Dt and $Contract-End-Dt

      let $OVRD-Bgn-Dt = $Contract-Bgn-Dt
      let $OVRD-End-Dt = $Contract-End-Dt
      Do Get-WorkDay-Reduction

      do Convert-To-DTU-Date($Termination-Dt, $Termination-Dt-DTU)
      do dtu-diff-days($TC-Period-Begin-DTU, $TC-Period-End-DTU, #diff-month-day)
      do dtu-diff-days($TC-Period-Begin-DTU, $Termination-Dt-DTU, #diff-day)
      let #diff-month-day = #diff-month-day + 1
      let #diff-day       = #diff-day       + 1
      #debugd show 'Month days: ' #diff-month-day ' As Of Date days: ' #diff-day
      If #diff-month-day = #diff-day
        let #Partial-Days = #Ctz-Days
      Else
        let #Partial-Days = #diff-day
        if $FPLM-Full-Part-Time = 'P' and $Workday-Reduction <> 'WKR'
          Do Get-Schedule-Days-Last-Month_Main
          let #Partial-Days = #LastMonthWorkDays_Total
        end-if
      End-If
      #debugd show 'Partial Contribution days(1): ' #Partial-Days

    else
      Let #Partial-Days = #Ctz-Days - (#Contributing-Days + #Ctz-Days - 180)
    end-if


    #debugd show 'Partial Contribution days: ' #Partial-Days
    #debugd show 'Base CC proration:         ' #Total-CC '/' #Ctz-Days '*' #Partial-Days '='
    Let #Total-CC = round((#Total-CC / #Ctz-Days) * #Partial-Days, 2)
    #debugd show '.......................... ' #Total-CC
    let #Total-Dsmpl = round((#Total-Dsmpl / #Ctz-Days) * #Partial-Days, 2)
    Let #Ctz-Days = #Partial-Days

    #debugd show 'Contributing Days (Prorated): ' #Ctz-Days
  End-if

  let #Init-Natural-Days = 0


  If #Ctz-Days > 0
  
  
    If $Print-Certificate = 'Y'
      let #Empl-Ctz-Days    =  #Empl-Ctz-Days +  #Ctz-Days
      let #Empl-Total-CC    =  #Empl-Total-CC + #Total-CC
      let #Empl-Total-Dsmpl =  #Empl-Total-Dsmpl +  #Total-Dsmpl
  
      let #Ctz-Days-XML    =  #Ctz-Days-XML +  #Ctz-Days
      let #Total-CC-XML    =  #Total-CC-XML + #Total-CC
      let #Total-Dsmpl-XML =  #Total-Dsmpl-XML +  #Total-Dsmpl

      print #Prev-Year                                                                          (#linea_ant_b1, 10) EDIT '9999'! (+{DFLT_LINE_HEIGHT}, 10)    EDIT '9999'
      print #Prev-Month                                                                         (  , 19)   EDIT '99'
      Do Format-Number(#Ctz-Days, $out, '999')
      let $Out = lpad($out, 3, ' ')
      print $out                                                                                (  , 28)
      if $ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'   !Suspension, Work day redn or Daily redn
        Do Format-Number(#Total-CC, $out, '999,999.99')
        let $Out = lpad($out, 11, ' ')
        print $Out                                                                              (  , 37)
      end-if
      Do Format-Number(#Total-Dsmpl, $out, '999,999.99')
      let $Out = lpad($out, 11, ' ')
      print $Out                                                                                (  , 57)

      let #linea_ant_b1 = #linea_ant_b1 + {DFLT_LINE_HEIGHT}
      let #Table-Row = #Table-Row + 1
    End-if
    !If #Prev-Month <> &SSTC.GPES_MONTH_RECALC or #Prev-Year <> &SSTC.GPES_YEAR_RECALC
      If $Prepare-XML = 'Y'
          And ($Empl-Terminated = 'Y'
            Or ($ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'))   !Suspension, Work day redn or Daily redn
        Do Insert-CC-Contrib-XML
        let #Ctz-Days-XML =  0
        let #Total-CC-XML =  0
        let #Total-Dsmpl-XML =  0 
      End-if
    !End-if
  end-if

  alter-printer point-size=7 font={ARIAL}

end-procedure


!************************************************************************
! Procedure Print-Vacations-Ln-BAJ
!************************************************************************
begin-procedure Print-Vacations-Ln-BAJ
#debug do Fin-Debug-Msg('Print-Vacations-Ln-BAJ')

 
    do Format-DateTime($Vacn-Cnt-End-Dt, $Vacn-Cnt-End-Dt-CMP, {DEFCMP}, '', '')
    do Format-DateTime($Select-ASOFDATE, $Select-ASOFDATE-CMP, {DEFCMP}, '', '')
    
 #debugd show 'Print-Vacations-Ln-BAJ ' $Vacn-Cnt-End-Dt-CMP  $Select-ASOFDATE-CMP
 #debugd show 'Vactn-Ctz-Days (L13): ' #Vactn-Ctz-Days
 
  If #Vactn-Ctz-Days <> 0
      and $Vacn-Cnt-End-Dt-CMP <= $Select-ASOFDATE-CMP
    alter-printer point-size=8 font={COURIER_NEW}

    let $Out = lpad($Vactn-Ctz-Days-Print, 3, ' ')
    Do Format-Number(#Vactn-Ctz-Days, $Vactn-Ctz-Days-Print, '999')
 #debugd show '$Vactn-Ctz-Days-Print: ' $Vactn-Ctz-Days-Print
    print $Vactn-Ctz-Days-Print                                                                   ( #Vactn-Line, 28)
    ! Code fragment commented out as this is only printed out under ERE condition;
    ! but we do not support EREs at this point.
    ! Do Format-Number(#Vactn-Total-CC, $out, '999,999.99')
    ! let $Out = lpad($out, 12, ' ')
    ! print $Out                                                                                  ( #Vactn-Line, 37)
    Do Format-Number(#Vactn-Total-Dsmpl, $out, '999,999.99')
    let $Out = lpad($out, 11, ' ')
    print $Out                                                                                    ( #Vactn-Line, 57)

    ! Print employee totals
    let #Empl-Ctz-Days    = #Empl-Ctz-Days + #Vactn-Ctz-Days
    let #Empl-Total-CC    = #Empl-Total-CC + #Vactn-Total-CC
    let #Empl-Total-Dsmpl = #Empl-Total-Dsmpl + #Vactn-Total-Dsmpl
  
    let #Vactn-Ctz-Days-XML    = #Vactn-Ctz-Days-XML + #Vactn-Ctz-Days
    let #Vactn-Total-CC-XML    = #Vactn-Total-CC-XML + #Vactn-Total-CC
    let #Vactn-Total-Dsmpl-XML = #Vactn-Total-Dsmpl-XML + #Vactn-Total-Dsmpl

    let #Vactn-Total-CC = 0
    let #Vactn-Total-Dsmpl = 0
    let #Vactn-Ctz-Days = 0

  end-if

end-procedure


!************************************************************************
! Procedure Natural-Day-Month
!************************************************************************
begin-procedure Natural-Day-Month
#debug do Fin-Debug-Msg('Natural-Day-Month')

  Let #Natural-Days-Delta = 0

  move $MMLZero to $MMLZero_Prev
  move '0' to $MMLZero

  let $Date1 = to_char(#Prev-Month) || '/01/' || to_char(#Prev-Year)
  do Format-DateTime($Date1, $Date1, {DEFDATE},'','native')
  let $Date2 = to_char(#Nat-Month) || '/01/' || to_char(#Nat-Year)
  do Format-DateTime($Date2, $Date2, {DEFDATE},'','native')

  move $MMLZero_Prev to $MMLZero

  do Convert-To-DTU-Date($Date1, $TC-$Date1)
  do Convert-To-DTU-Date($Date2, $TC-$Date2)
  do dtu-diff-months($TC-$Date1, $TC-$Date2,  #diff-month)
  let #diff-month = #diff-month * (-1)

  #debugd show 'Date From/To and diff: ' $TC-$Date1 '/' $TC-$Date2 ' Diff ' #diff-month


  if #diff-month > 1
     ! and $sstc-Paymnt <>'L13'
    let #Natural-Days-wrk = #Natural-Days
    let #num-months = #diff-month - 1
    let #month = #prev-month - 1

    if  #month = 0
      let #month = 12
    end-if

    let #I=1
    While #I <= #num-months
      if $Soc-Sec-Cntb-Freq = 'D'
        evaluate #month
           when = 1
           when = 3
           when = 5
           when = 7
           when = 8
           when = 10
           when = 12
                let #Natural-Days  = #Natural-Days + 31
                break
           when = 2
                if (mod(#Nat-Year,4) = 0) and ((mod(#Nat-Year,100)<>0) or (mod(#Nat-Year,400) = 0))
                        let #Natural-Days  = #Natural-Days + 29
                else
                        let #Natural-Days  = #Natural-Days + 28
                end-if
                break
           when = 4
           when = 6
           when = 9
           when = 11
                let #Natural-Days  = #Natural-Days + 30
                break
        end-evaluate
      else
        let #Natural-Days  = #Natural-Days + 30
      end-if

      let #month = #month - 1
      if #month = 0
        let #month = 12
      end-if
      let #I= #I  + 1

    End-While
    let #Natural-Days-Delta = #Natural-Days - #Natural-Days-wrk
  end-if

end-procedure

!Procedure Get-Full-Part-Time-Term-Month
!************************************************************************
begin-procedure Get-Full-Part-Time-Term-Month
#debug do Fin-Debug-Msg('Get-Full-Part-Time-Term-Month')

Let $TERM-Full-Part-Time = ''

Begin-SELECT
TERM_JOB.FULL_PART_TIME
   Let $TERM-Full-Part-Time=&TERM_JOB.FULL_PART_TIME
FROM PS_JOB  TERM_JOB
WHERE  TERM_JOB.EMPLID = $Select-EMPLID
  AND  TERM_JOB.EMPL_RCD = #Select-EMPL-RCD
  AND  TERM_JOB.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
                  WHERE EMPLID = TERM_JOB.EMPLID
                    AND EMPL_RCD = TERM_JOB.EMPL_RCD
                    AND EFFDT <= $Select-ASOFDATE)
  AND TERM_JOB.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
                   WHERE EMPLID = TERM_JOB.EMPLID
                     AND EMPL_RCD = TERM_JOB.EMPL_RCD
                     AND EFFDT = TERM_JOB.EFFDT)

END-SELECT

#debugd show 'Employee ID:                     ' $Select-EMPLID
#debugd show 'Empl Rcd#:                       ' #Select-EMPL-RCD
#debugd show 'Term Date Full Part Time as of:  ' $TERM-Full-Part-Time ' (' $Select-ASOFDATE ')'
end-procedure

!************************************************************************
! Procedure Get-Full-Part-Time-Last-Month
!************************************************************************
begin-procedure Get-Full-Part-Time-Last-Month
#debug do Fin-Debug-Msg('Get-Full-Part-Time-Last-Month')

Let $Contract-Bgn-Dt = ''
Let $Contract-End-Dt = ''
Let $FPLM-Full-Part-Time = ''

Begin-SELECT
AA.CONTRACT_BEGIN_DT
AA.CONTRACT_END_DT
BB.FULL_PART_TIME

  Let $Contract-Bgn-Dt = &AA.CONTRACT_BEGIN_DT
  if nvl(&AA.CONTRACT_END_DT, '') <> ''
    Let $Contract-End-Dt = &AA.CONTRACT_END_DT
  else
    !Executing INEM report for an active employee needs a contract end date
    Let $Contract-End-Dt = $Select-ASOFDATE
  End-if
  Let $FPLM-Full-Part-Time = &BB.FULL_PART_TIME

FROM PS_CONTRACT_DATA AA, PS_JOB BB
WHERE AA.EMPLID = BB.EMPLID
  AND AA.CONTRACT_NUM = $Mult_Contract
  AND BB.EMPLID = $Select-EMPLID
  AND BB.EMPL_RCD = #Select-EMPL-RCD
  AND BB.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
                  WHERE EMPLID = BB.EMPLID
                    AND EMPL_RCD = BB.EMPL_RCD
                    !AND EFFDT <= $TC-Period-End)
                    AND EFFDT <= $Select-ASOFDATE)
  AND BB.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
                   WHERE EMPLID = BB.EMPLID
                     AND EMPL_RCD = BB.EMPL_RCD
                     AND EFFDT = BB.EFFDT)
  AND BB.CONTRACT_NUM = AA.CONTRACT_NUM
END-SELECT

#debugd show 'Employee ID:                ' $Select-EMPLID
#debugd show 'Empl Rcd#:                  ' #Select-EMPL-RCD
#debugd show 'Last Month Contract Num:    ' $Mult_Contract
#debugd show 'Last Month Contract Bgn Dt: ' $Contract-Bgn-Dt
#debugd show 'Last Month Contract End Dt: ' $Contract-End-Dt
#debugd show 'Last Month Full Part Time as of:  ' $FPLM-Full-Part-Time ' (' $Select-ASOFDATE ')'

end-procedure


!************************************************************************
! Procedure Get-Schedule-Days-Last-Month_Main
!************************************************************************
begin-procedure Get-Schedule-Days-Last-Month_Main
#debug do Fin-Debug-Msg('Get-Schedule-Days-Last-Month_Main')


let #LastMonthWorkDays_Total = 0
let #CountDown = #Partial-Days
#debugd show 'Schedule day count down: ' #CountDown

do Format-DateTime($Hire-Dt, $Hire-Dt_LM, {DEFCMP}, '', '')
do Format-DateTime($Termination-Dt, $Termination-Dt_LM, {DEFCMP}, '', '')

let #BgnMonth = substr($Hire-Dt_LM, 5, 2)
let #BgnYear = substr($Hire-Dt_LM, 1, 4)
let #TermMonth = substr($Termination-Dt_LM, 5, 2)
let #TermYear = substr($Termination-Dt_LM, 1, 4)

let $sql-statement = 'GPESFNQ1.SQR,Get-Schedule-Days-Last-Month_Main,Select,PS_GPES_SSTC_RS_VW SSCTWK,PS_CONTRACT_DATA CWK'
Begin-SELECT DISTINCT on-error=SQL-Error
CWK.EMPLID                  &CNTRCT_EMPLID
CWK.CONTRACT_NUM            &CNTRCT_CONTRACT_NUM
CWK.CONTRACT_BEGIN_DT        &CNTRCT_BGN_DT_LASTMONTH
MIN(CWK.CONTRACT_END_DT)     &CNTRCT_END_DT_LASTMONTH
SUM(SSTCWK.GPES_SSTC_DAYS)          &SSTCWK_DAYS_LASTMONTH

  do Format-DateTime(&CNTRCT_BGN_DT_LASTMONTH, $Contract-Bgn-Dt-CMP_LM, {DEFCMP}, '', '')
  do Format-DateTime($TC-Period-Begin, $TC-Period-Begin_CMP_LM, {DEFCMP}, '', '')
  
  If $Contract-Bgn-Dt-CMP_LM < $TC-Period-Begin_CMP_LM 
   Let $Contract-Bgn-Dt_LASTMONTH = $TC-Period-Begin
  else
   Let $Contract-Bgn-Dt_LASTMONTH = &CNTRCT_BGN_DT_LASTMONTH
  End-if
  

  do Format-DateTime(&CNTRCT_END_DT_LASTMONTH, $Contract-End-Dt-CMP_LM, {DEFCMP}, '', '')
  do Format-DateTime($Select-ASOFDATE, $Select-ASOFDATE-CMP, {DEFCMP}, '', '')
  If NVL(&CNTRCT_END_DT_LASTMONTH, '') <> '' and $Contract-End-Dt-CMP_LM <= $Select-ASOFDATE-CMP
    Let $Contract-End-Dt_LASTMONTH = &CNTRCT_END_DT_LASTMONTH
  else
    !Executing INEM report for an active employee needs a contract end date
    Let $Contract-End-Dt_LASTMONTH = $Select-ASOFDATE
  End-if
  
   DO Get-Schedule-Days-Last-Month
   let #LastMonthWorkDays_Total = #LastMonthWorkDays_Total +  #LastMonthWorkDays
FROM PS_GPES_SSTC_RS_VW SSTCWK
    ,PS_CONTRACT_DATA CWK

WHERE SSTCWK.EMPLID = $Select-EMPLID
 AND  SSTCWK.EMPL_RCD = #Select-EMPL-RCD
 AND  SSTCWK.EMPLID = CWK.EMPLID
 AND  SSTCWK.CONTRACT_NUM = CWK.CONTRACT_NUM
 AND  SSTCWK.GPES_SSTC_HRS_FLAG = 'H'

 AND  SSTCWK.GPES_SSTC_ELEMENT IN ('BA01','BA22')
 AND  SSTCWK.GPES_SSTC_LGL_CUST <> 'T'

 AND (((SSTCWK.GPES_YEAR_RECALC = #BgnYear AND SSTCWK.GPES_MONTH_RECALC >= #BgnMonth) OR SSTCWK.GPES_YEAR_RECALC > #bgnYear)
   AND ((SSTCWK.GPES_YEAR_RECALC = #TermYear AND SSTCWK.GPES_MONTH_RECALC <= #TermMonth) OR SSTCWK.GPES_YEAR_RECALC < #TermYear)
   AND SSTCWK.SLICE_BGN_DT >= $Hire-Dt AND SSTCWK.SLICE_BGN_DT <= $Termination-Dt)

 AND  SSTCWK.GPES_SSTC_PAYMNT NOT IN ('L13', 'V03', 'V90')

GROUP BY CWK.EMPLID, CWK.CONTRACT_NUM, CWK.CONTRACT_BEGIN_DT
ORDER BY CWK.EMPLID, CWK.CONTRACT_NUM, CWK.CONTRACT_BEGIN_DT DESC

End-SELECT


#debugd show 'Last Month Work Days Total: ' #LastMonthWorkDays_Total ' (pd. End Dt.: ' $SchDays-Last-Month-PdEnd ')'

end-procedure


!************************************************************************
! Procedure Get-Schedule-Days-Last-Month
!************************************************************************
begin-procedure Get-Schedule-Days-Last-Month
#debug do Fin-Debug-Msg('Get-Schedule-Days-Last-Month')

let $Contract-Bgn-Dt = $Contract-Bgn-Dt_LASTMONTH
let $Contract-End-Dt = $Contract-End-Dt_LASTMONTH
Do Get-Dflt-WS

let #LastMonthWorkDays = 0
!let #CountDown = #Partial-Days
!#debugd show 'Schedule day count down: ' #CountDown

let $sql-statement = 'GPESFNQ1.SQR,Get-Schedule-Days-Last-Month,Select,PS_SCH_CLND_DTL_VW'
Begin-SELECT on-error=SQL-Error
SETID
SCH_ADHOC_IND
SCHEDULE_ID
ROTATION_ID
DUR
OFFDAY_IND

  If &OFFDAY_IND = 'N'
    Let #LastMonthWorkDays = #LastMonthWorkDays + 1
    #debugd show 'Last Month Work Days: ' #LastMonthWorkDays
  End-if

  !let #CountDown = #CountDown - 1
  !#debugd show 'Schedule day count down: ' #CountDown
  !If #CountDown = 0
  !  EXIT-SELECT
  !END-IF

FROM PS_SCH_CLND_DTL_VW
WHERE SETID = $Schedule_SetID
  AND SCH_ADHOC_IND = $Sch-AdHoc-Ind
  AND SCHEDULE_ID = $Schedule_ID
  AND ROTATION_ID = $Rotation-Id
  !AND DUR <= $SchDays-Last-Month-PdEnd
  AND DUR <= $Contract-End-Dt
  AND DUR >= $Contract-Bgn-Dt
ORDER BY SETID, SCH_ADHOC_IND, SCHEDULE_ID, ROTATION_ID, DUR DESC
End-SELECT

#debugd show 'Last Month Work Days: ' #LastMonthWorkDays ' (pd. End Dt.: ' $Contract-End-Dt ')'

end-procedure


!************************************************************************
! Procedure Insert-CC-EE-Data-XML
!************************************************************************
begin-procedure Insert-CC-EE-Data-XML
#debug do Fin-Debug-Msg('Insert-CC-EE-Data-XML')

Let $Select-EMPLID      = nvl($Select-EMPLID, ' ')
Let $Select-ASOFDATE    = nvl($Select-ASOFDATE, '')
!****Let $Cntrct-Bgn-Dt-XML  = nvl(&CNTRCT.CONTRACT_BEGIN_DT, '')
Let $Cmpny-SSN-XML      = nvl($Cmpny-SSN-XML, ' ')
Let $Scheme-CCC         = nvl(lpad($CMP-SchemeID, 4, '0') || $Cmpny-SSN-XML, ' ')
Let $RESPONSIBLE_ID     = nvl(&RESPONSIBLE_ID, ' ')
Let $Reponsible-JobCode = nvl($Reponsible-JobCode, ' ')
Let $CMP                = nvl($CMP, ' ')
Let $Empl-DNI           = nvl($Empl-DNI, ' ')
Let $Empl-SS-Grp-Cd     = nvl($Empl-SS-Grp-Cd, ' ')
Let $Cntrct-Type        = nvl($Cntrct-Type, ' ')
Let $Hire-Dt            = nvl($Hire-Dt, '')
if $Empl-Terminated = 'Y' and &A.GPES_EMPLOYEE_TYPE = 'I'
  Let $Termination-Dt   = nvl($Termination-Dt, '')
else
  If $ERE-BGNDT <> ''
    Let $Termination-Dt = nvl($ERE-BGNDT, '')
  End-If
End-If
Let $Actn-Rsn-INEM      = nvl($Actn-Rsn-INEM, ' ')
Let $days-lit-5         = nvl(lpad($days_lit, 5, '0'), ' ')
Let $Litig_Bgn_Dt-XML   = nvl($Litig_Bgn_Dt-XML, '')
Let $Litig_End_Dt-XML   = nvl($Litig_End_Dt-XML, '')
Let $Vactn-Ctz-Days-XML = nvl(lpad(To_Char(#Vactn-Ctz-Days-XML), 3, '0'), ' ')
if $ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'   !Suspension, Work day redn or Daily redn
  Let $Vactn-Total-CC-XML = nvl(lpad(To_Char(#Vactn-Total-CC-XML * 100), 9, '0'), ' ')
Else
  Let $Vactn-Total-CC-XML = ' '
End-if
Let $Vactn-Total-Dsmpl-XML  = nvl(lpad(To_Char(#Vactn-Total-Dsmpl-XML * 100), 9, '0'), ' ')
Let $Duration-XML       = nvl(lpad(To_Char(#Duration-XML), 5, '0'), ' ')
Let $Duration-Unit-XML  = nvl($Duration-Unit-XML, ' ')
Let $CNO-Code-7         = nvl(lpad($CNO-Code, 4, '0') || '000', ' ')
Let $Fiscal_ID_Cd       = nvl($Fiscal_ID_Cd, ' ')
Let $ERE-NBR            = nvl($ERE-NBR, ' ')
Let $Out = ' '
If #ERE-WRD-PCT <> 0
  Let #In = #ERE-WRD-PCT * 100
  Do Format-Number(#In, $Out, '9999')
End-If
Let $ERE-WRD-PCT = $Out
Let $ERE-ENDDT          = nvl($ERE-ENDDT, '')
Let $Out = ' '
If #Guarda-Lgl-PCT <> 0
  Let #In = #Guarda-Lgl-PCT * 100
  Do Format-Number(#In, $Out, '9999')
End-If
Let $Guarda-Lgl-PCT = $Out

#Debugd show 'ERE WorkDay reduction pct.: ''' $ERE-WRD-PCT ''''
#Debugd show 'Legal custody pct.: ''' $Guarda-Lgl-PCT ''''
Let $REDN-RSN = ' '
If #ERE-WRD-PCT <> 0 and #Guarda-Lgl-PCT <> 0
  Let $REDN-RSN = '03'
else
  If #ERE-WRD-PCT <> 0
    Let $REDN-RSN = '01'
  end-if
  If #Guarda-Lgl-PCT <> 0
    Let $REDN-RSN = '02'
  end-if
End-if

let $sql-statement = 'GPESFNQ1.SQR,Insert, Insert-CC-EE-Data-XML, PS_GPES_CC_EE_DTA'
begin-sql on-error=SQL-Error
INSERT INTO PS_GPES_CC_EE_DTA (
 OPRID
,RUN_CNTL_ID
,EMPLID
,EMPL_RCD
,EFFDT
,SSN_EMPLOYER
,GPES_SCHEME_CCC
,RESPONSIBLE_ID
,JOBCODE_DESCR
,COMPANY
,NATIONAL_ID
,SOC_SEC_WRK_GRP_CD
,CONTRACT_TYPE
,HIRE_DT
,TERMINATION_DT
,TERMINATION_REASON
,GPES_LITIG_DAYS
,GPES_LITIG_BGN_DT
,GPES_LITIG_END_DT
,GPES_VACTN_DAYS
,GPES_VACTN_BS_CC
,GPES_VACTN_BS_CP
,GPES_CNT_DURATION
,GPES_CNT_FREQ
,GPES_CNO_CODE_8
,FISCAL_ID_CD
,GPES_WRK_CNCL_FUNC
,GPES_CNCL_PCT
,GPES_ERE_ID
,GPES_ERE_REDN_PCT
,GPES_ERE_SUS_ENDDT
,GPES_REDN_PCT_OTH
,GPES_REDN_RSN)
VALUES (
 $prcs_oprid
,$prcs_run_cntl_id
,$Select-EMPLID
,#Select-EMPL-RCD
,$Select-ASOFDATE
,$Cmpny-SSN-XML
,$Scheme-CCC
,$RESPONSIBLE_ID
,$Reponsible-JobCode
,$CMP
,$Empl-DNI
,$Empl-SS-Grp-Cd
,$Cntrct-Type
,$Hire-Dt
,$Termination-Dt
,$Actn-Rsn-INEM
,$days-lit-5
,$Litig_Bgn_Dt-XML
,$Litig_End_Dt-XML
,$Vactn-Ctz-Days-XML
,$Vactn-Total-CC-XML
,$Vactn-Total-Dsmpl-XML
,$Duration-XML
,$Duration-Unit-XML
,$CNO-Code-7
,$Fiscal_ID_Cd
,' '
,' '
,$ERE-NBR
,$ERE-WRD-PCT
,$ERE-ENDDT   
,$Guarda-Lgl-PCT
,$REDN-RSN)
end-sql

end-procedure


!************************************************************************
! Procedure Insert-PT-Workdays-XML
!************************************************************************
begin-procedure Insert-PT-Workdays-XML
#debug do Fin-Debug-Msg('Insert-PT-Workdays-XML')

#Debugd show 'Emplid:      ' $Select-EMPLID
#Debugd show 'EFFDT:       ' $Select-ASOFDATE
#Debugd show 'ER CCC:      ' $Cmpny-SSN-XML
#Debugd show 'PT Begin Dt: ' $Contract-Bgn-Dt

Let $Select-EMPLID      = nvl($Select-EMPLID, ' ')
Let $Select-ASOFDATE    = nvl($Select-ASOFDATE, '')
Let $Cmpny-SSN-XML      = nvl($Cmpny-SSN-XML, ' ')
Let $Contract-Bgn-Dt    = nvl($Contract-Bgn-Dt, '')
Let $Contract-End-Dt    = nvl($Contract-End-Dt, '')
Let $Schedule_type      = nvl($Schedule_type, ' ')
Let $Schedule_Wk_Days   = nvl(lpad(To_Char(#Schedule_Wk_Days), 5, '0'), ' ')

let $sql-statement = 'GPESFNQ1.SQR,Insert, Insert-PT-Workdays-XML, PS_GPES_CC_PT_DAYS'
begin-sql on-error=SQL-Error
INSERT INTO PS_GPES_CC_PT_DAYS (
 OPRID
,RUN_CNTL_ID
,EMPLID
,EFFDT
,SSN_EMPLOYER
,GPES_PT_BGN_DT
,EMPL_RCD
,GPES_PT_END_DT
,GPES_PT_SCHD_TYPE
,GPES_PT_WRKED_DAYS)
VALUES (
 $prcs_oprid
,$prcs_run_cntl_id
,$Select-EMPLID
,$Select-ASOFDATE
,$Cmpny-SSN-XML
,$Contract-Bgn-Dt
,#Select-EMPL-RCD
,$Contract-End-Dt
,$Schedule_type
,$Schedule_Wk_Days)
end-sql

end-procedure


!************************************************************************
! Procedure Insert-CC-Contrib-XML
!************************************************************************
begin-procedure Insert-CC-Contrib-XML
#debug do Fin-Debug-Msg('Insert-CC-Contrib-XML')

Let $Select-EMPLID      = nvl($Select-EMPLID, ' ')
Let $Select-ASOFDATE    = nvl($Select-ASOFDATE, '')
Let $Cmpny-SSN-XML      = nvl($Cmpny-SSN-XML, ' ')
Let $Prev-Year          = nvl(lpad(To_Char(#Prev-Year), 2, '0'), ' ')
Let $Prev-Month         = nvl(lpad(To_Char(#Prev-Month), 2, '0'), ' ')
Let $Ctz-Days-XML       = nvl(lpad(To_Char(#Ctz-Days-XML), 3, '0'), ' ')
if $ERE-TYPE = 'S' Or $ERE-TYPE = 'W' Or $ERE-TYPE = 'D'   !Suspension, Work day redn or Daily redn
  Let $Total-CC-XML = nvl(lpad(To_Char(#Total-CC-XML * 100), 9, '0'), ' ')
Else
  Let $Total-CC-XML = ' '
End-if
Let $Total-Dsmpl-XML    = nvl(lpad(To_Char(#Total-Dsmpl-XML * 100), 9, '0'), ' ')

Let #Insert-CC-Contrib-Cnt = #Insert-CC-Contrib-Cnt + 1

#Debugd show 'Oprid:       ' $prcs_oprid
#Debugd show 'Run Cntl ID: ' $prcs_run_cntl_id
#Debugd show 'Emplid:      ' $Select-EMPLID
#Debugd show 'Empl Rcd#:   ' #Select-EMPL-RCD
#Debugd show 'Effdt:       ' $Select-ASOFDATE
#Debugd show 'ER CCC:      ' $Cmpny-SSN-XML
#Debugd show 'Year:        ' #Prev-Year 
#Debugd show 'Month:       ' #Prev-Month 

let $sql-statement = 'GPESFNQ1.SQR,Insert, Insert-CC-Contrib-XML, PS_GPES_CC_CNTRB'
begin-sql on-error=SQL-Error
INSERT INTO PS_GPES_CC_CNTRB (
 OPRID
,RUN_CNTL_ID
,EMPLID
,EFFDT
,SSN_EMPLOYER
,YEAR
,MONTHCD
,EMPL_RCD
,GPES_CNTB_DAYS
,GPES_CNTB_BSCC
,GPES_CNTB_BSCP)
VALUES (
 $prcs_oprid
,$prcs_run_cntl_id
,$Select-EMPLID
,$Select-ASOFDATE
,$Cmpny-SSN-XML
,$Prev-Year
,$Prev-Month
,#Select-EMPL-RCD
,$Ctz-Days-XML
,$Total-CC-XML
,$Total-Dsmpl-XML)
end-sql

end-procedure


!************************************************************************
! Procedure Populate-XML-ITEM
!************************************************************************
begin-procedure Populate-XML-ITEM
#debug do Fin-Debug-Msg('Populate-XML-ITEM')

Let $XmlFile-ID  = 'CC ' || $prcs_oprid || $prcs_run_cntl_id


let $sql-statement = 'GPESFNQ1.SQR,Delete, Populate-XML-ITEM, PS_XML_ITEM'
begin-sql on-error=SQL-Error
DELETE FROM PS_XML_ITEM WHERE XMLFILE_ID = $XmlFile-ID
end-sql

!*************************************************************************
!Concat in the SELECT required for DB2/OS390 platform compatibility
!DB2/OS390 does not allow binds in the SELELCT of an INSERT/SELECT
!Concat values are the same as for variable $XmlFile-ID
!*************************************************************************
let $sql-statement = 'GPESFNQ1.SQR,Insert, Populate-XML-ITEM, PS_XML_ITEM'
begin-sql on-error=SQL-Error
INSERT INTO PS_XML_ITEM (
 XMLFILE_ID
,KEY1_FLD_VAL
,KEY2_FLD_VAL
,KEY3_FLD_VAL
,XML_NODE_STATUS
,XML_NODE_ID)
SELECT DISTINCT 'CC ' {ptconcat} OPRID {ptconcat} RUN_CNTL_ID
,SSN_EMPLOYER
,' '
,' '
,'1'
,'G1 01'
FROM PS_GPES_CC_EE_DTA
WHERE OPRID = $prcs_oprid
  AND RUN_CNTL_ID = $prcs_run_cntl_id
end-sql

end-procedure

