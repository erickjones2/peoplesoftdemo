!************************************************************************
!  STSU015:  Treasury Allocation
!************************************************************************                                                                      !
!
!                                                                 
!   This software and related documentation are provided under a  
!   license agreement containing restrictions on use and          
!   disclosure and are protected by intellectual property         
!   laws. Except as expressly permitted in your license agreement 
!   or allowed by law, you may not use, copy, reproduce,          
!   translate, broadcast, modify, license, transmit, distribute,  
!   exhibit, perform, publish or display any part, in any form or 
!   by any means. Reverse engineering, disassembly, or            
!   decompilation of this software, unless required by law for    
!   interoperability, is prohibited.                              
!   The information contained herein is subject to change without 
!   notice and is not warranted to be error-free. If you find any 
!   errors, please report them to us in writing.                  
!                                                                 
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.       
!   All Rights Reserved.                                          
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2013/01/18:02:56:53                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!
!************************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
   #include 'ptpsl177.sqc'  !Printer and page-size init (landscape)
end-setup

#define  col2    5
#define  col3    10
#define  col4    25
#define  col5    35
#define  col6    53
#define  col7    70
#define  col8    96
#define  col9    111
#define  col10   135

!************************************************************************
begin-program
!************************************************************************

  do Init-DateTime         !procedure in datetime.sqc
  do Init-Number           !procedure in number.sqc
  do Get-Current-DateTime  !procedure in currdttm.sqc
  do Init-Report           !procedure in SQR

  let $timebegan =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Began: '  $timebegan  ' '

  do Process-Main          !does all report processing in SQR
  do Reset                 !procedure in reset.sqc
  do Stdapi-term           !procedure in stdapi.sqc

  let $timeEnded =DateToStr(DateNow(),'hh:mi:ss')

  show 'Report Ended: '  $timeEnded  ' '

end-program

!************************************************************************
begin-procedure Init-Report
!************************************************************************

  do Stdapi-Init

  let     $ReportID     =   'STSU015'

  do Get-Report-Language

  if $prcs_process_instance = ''
     do Prompts             !Prompt user

  else
     do Get-SQR-Parms
     do Get-Values
  end-if

  show    'FLOW: Init-Report'
  show    'Report Title: ' $REPORTTITLE

end-procedure

!******************************************************************************
begin-procedure Prompts
!******************************************************************************

!-----------------------------------------------------------------------------!
! Procedure: Prompts                                                          !
! Descr:     Prompts for all input parameters in the event the program is run !
!            directly from SQR.  In normal use, this should not happen.       !
!-----------------------------------------------------------------------------!

end-procedure

!************************************************************************
begin-procedure Get-Values
!************************************************************************

end-procedure

!************************************************************************
begin-procedure Report-Translation
!************************************************************************

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!

  do Init_Report_Translation ('STOCK',$language_cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK','STOCK_ID',          $STOCK_ID,            #DW)
  do Get_Field_Information ('STOCK','SHARES_ALLOCATED',  $SHARES_ALLOCATED,    #DW)
  do Get_Field_Information ('STOCK','DATE',              $ALLOC_DT,            #DW)

  do Get_Field_Information ('STSU015','STSU015',           $REPORTTITLE,      #DW)
  do Get_Field_Information ('STSU015','TREASURY_ID',       $TREASURY_ID,      #DW)
  do Get_Field_Information ('STSU015','EXPIRATN_DT',       $EXPIRATN_DT,      #DW)
  do Get_Field_Information ('STSU015','ALLOCATION_TYPE',   $ALLOCATION_TYPE,  #DW)
  do Get_Field_Information ('STSU015','APPROVAL_DT',       $APPRVL_DT,        #DW)
  do Get_Field_Information ('STSU015','LAST_EMPLID',       $LAST_EMPLID,      #DW)
  do Get_Field_Information ('STSU015','LAST_DTTM_UPDATE',  $LAST_DTTM_UPDATE, #DW)
  do Get_Field_Information ('STSU015','SEQ_NUM',           $SEQ_NUM,          #DW)
  do Get_Field_Information ('STSU015','DESCR',             $DESCR,            #DW)

end-procedure

!************************************************************************
begin-heading 3
!************************************************************************

#include 'stdhdgtr.sqc'

end-heading

!************************************************************************
begin-procedure Process-Main
!************************************************************************

!----------------------------------------------------------------------!
! Procedure:  Process-Main                                             !
! Descr:      This is where all required data is selected              !
!----------------------------------------------------------------------!

  display 'FLOW: Process-Main'

begin-Select

A.STOCK_ID                     () ON-BREAK Print=never before=Select-Dtl
A.ST_TREASURY_ID
A.DESCR
A.APPRVL_DT
A.EXPIRATN_DT

  do Print-data
  do Select-LowerDtl
  print ' ' (+1,1,1)

from     PS_STOCK_TREASURY  A
order by A.STOCK_ID

end-Select


end-procedure

!**************************************************************************
begin-procedure Select-Dtl
!**************************************************************************

begin-Select

B.STOCK_ID
B.DESCRSHORT

  do Print-Info

 from  PS_STOCK_TBL B
where  B.STOCK_ID  =  &A.STOCK_ID

end-Select

end-procedure

!***********************************************************************
begin-procedure Select-LowerDtl
!***********************************************************************

begin-Select

C.STOCK_ID
C.ST_TREASURY_ID               () ON-BREAK Print=never before = Print-heading
C.ALLOCATION_DT
C.SEQ_NUM
C.DESCR
C.ST_ALLOCATION_TYPE
C.APPRVL_DT
C.SHARES_ALLOCATED
C.LASTUPDOPRID
C.LASTUPDDTTM

  do Print-LowerDtl

 from  PS_ST_TRSR_ALLOC  C
where  STOCK_ID       =  &A.STOCK_ID
  and  ST_TREASURY_ID =  &A.ST_TREASURY_ID

end-Select

end-procedure

!************************************************************************
begin-procedure Print-heading
!************************************************************************

  print $ALLOC_DT              (+2,{col3},04)
  print $SEQ_NUM               (0,+9,07)
  print $ALLOCATION_TYPE       (0,+4,15)
  print $APPRVL_DT             (0,+4,13)
  print $SHARES_ALLOCATED      (0,+10,16)
  print $LAST_EMPLID           (0,+4,20)
  print $LAST_DTTM_UPDATE      (0,+4,26)
  print $DESCR                 (0,+4,20)
  print ' '                    (+1,1,1)

end-procedure

!************************************************************************
begin-procedure Print-Info
!************************************************************************

  print $STOCK_ID              (+2,0,08)
  print ':'                    (,,1)
  print &A.STOCK_ID            (0,+2,10)
  print &B.DESCRSHORT          (0,+5,10)

end-procedure

!***********************************************************************
begin-procedure Print-Data
!***********************************************************************

  print $TREASURY_ID           (+2,{col2},11)
  print ':'                    (,,1)
  print &A.ST_TREASURY_ID      (0,+2,10)
  print $DESCR                 (+1,{col2},11)
  print ':'                    (,,1)
  print &A.DESCR               (0,+2,30)

  do Format-DateTime(&A.APPRVL_DT,  $ApprovalDate, {DEFYMD}, '', '')
  do Format-DateTime(&A.EXPIRATN_DT,$ExpiratnDate, {DEFYMD}, '', '')

  print $APPRVL_DT             (+2,{col3},13)
  print ':'                    (,,1)
  print $ApprovalDate          (0,28,10)
  print $EXPIRATN_DT           (+1,{col3},15)
  print ':'                    (,,1)
  print $ExpiratnDate          (0,28,10)

end-procedure

!***********************************************************************
begin-procedure Print-LowerDtl
!***********************************************************************

  do Format-DateTime(&C.ALLOCATION_DT,    $AllocDate,  {DEFYMD}, '', '')
  do Format-DateTime(&C.APPRVL_DT,        $ApprvlDate, {DEFYMD}, '', '')
  do Format-DateTime(&C.LASTUPDDTTM,      $LastUpDate, {DEFYMD}, '', '')

  print $AllocDate             (+1,{col3},10)
  print &C.SEQ_NUM             (0,{col4},15)

  do Get-Data

  print $AllocType             (0,{col5},10)
  print $ApprvlDate            (0,{col6},10)

  do Format-Number(&C.SHARES_ALLOCATED, $SHARES_ALLOC, '999,999,999,990.009999')

  print $SHARES_ALLOC          (0,{col7},22)
  print &C.LASTUPDOPRID        (0,+4,20)
  print $LastUpDate            (0,+4,26)
  print &C.DESCR               (0,+4,30)

end-procedure

!************************************************************************
begin-procedure Get-Data
!************************************************************************

!-------------------------------------------------------------------!
! Procedure:  Get-Data                                              !
! Descr:      This procedure gets the value of the specific field   !
!             from the Translate Table                              !
!-------------------------------------------------------------------!

  let $FieldName = 'ST_ALLOCATION_TYPE'
  let $FieldValue = &C.ST_ALLOCATION_TYPE

  do Read-Translate-Table

  let $AllocType = RTRIM($XlatShortName,' ')

end-procedure

!************************************************************************
!  SQC Include Files
!************************************************************************

#include 'stdapi.sqc'
#include 'curdttim.sqc'  !Get-Current-Date-Time
#include 'datetime.sqc'  !Get-Date-Time
#include 'datemath.sqc'  !Date Math Routines
#include 'reset.sqc'     !Reset printer procedure
#include 'number.sqc'    !Routines to format numbers
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read the Translate Table for the desired values.
#include 'strunctl.sqc'  !Get run control parameter values
