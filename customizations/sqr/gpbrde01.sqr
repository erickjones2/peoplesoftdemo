!***********************************************************************
!  GPBRDE01:  Dependents Income Tax                                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:20:17                                 *
!       $Release:  HR92                                                *
!      $Revision:  102                                                 *
!                                                                      *
!***********************************************************************
#define C01   1
#define C03   3
#define C13  13
#define C20  20
#define C30  30
#define C40  40
#define C43  43
#define C53  53
#define C60  60
#define C63  63
#define C68  68
#define C77  77
#define C78  78
#define C88  88
#define C105 105
#define C107 107
#define C110 110
#define C113 113
#define C115 115
#define C120 120
#define Cba  100

#define G0     1
#define G1     3
#define G2     5

#define L10   10
#define L40   40
#define L50   50
#define L60   60
#define L75   75
#define L85   85
#define L100 100
#define L110 110
#define L125 125

#include 'setenv.sqc'   ! set enviroment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
       Type=HPLASERJET
       Font=15
       Point-Size=12
       Pitch=17
       Symbol-Set=0U     ! ASCII symbol set
 End-Declare

 Declare-Layout THIS_REPORT
       Orientation=Portrait
       Top-Margin   = .4
       Left-Margin  = .60
       Max-Lines    = 82
       Max-Columns  = 130
       Char-Width   = 4.3    ! 7.2
       Line-Height  = 9     ! 72/printer_point-size
 End-Declare

 Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
 End-Declare

end-Setup

!**************************************
begin-report
#debug show '*** Report ***'
!**************************************
  let #FontStd  = 4      !12arial 3curier
  let #SizeGrd  = 7
  let #SizeStd  = 8
  let #SizeSml  = 6

  do Init-Report
  do Process-Main
  do Stdapi-Term
  do Reset
end-report

!**************************************
begin-procedure Init-Report
#debug show '*** Init Report ***'
!**************************************
  move '2' to $ReportDateType   ! Set for date to format as DMY
  move '1' to $ReportYear4      ! Set for year to be formatted YYYY
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  move 'GPBRDE01' to $ReportID
  move 'Declaração de Dependentes p/ Desconto de IR na Fonte' to $ReportTitle
  move 'V.2012-B' to $ReportVersion
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display $AsOfToday
  display &timeBegan
end-procedure Init-Report

!**************************************
begin-heading 6
!**************************************

  Graphic (#R1  ,{C01} ,{L125}) box  6 {G2}

  Alter-Printer Point-size = #SizeGrd  Font-Type = Proportional Font = #FontStd
  Print 'Declaração de Dependentes p/ Desconto de IR na Fonte' (#R1a , )  Bold center

  uppercase $CompanyRptNm
  uppercase $CompanyAdd1
  uppercase $CompanyAdd2
  uppercase $Name
  uppercase $Address1
  uppercase $Address2
  uppercase $Address4
  uppercase $City
  uppercase $MarStatus
  uppercase $City

  Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Print 'Emplid:'                      (#R1a,{Cba})
  Print 'Relatorio:'                   (#R1b,{Cba})
  Print $ReportId                      (#R1b,{C110})
  Print 'Página:'                      (#R2,{Cba})
  page-number                          (#R2,{C110})
  Print 'Data:'                        (#r2a,{Cba})

  Do Format-DateTime($AsOfToday,$Today,{DEFDMY},'','')

  Print $Today                         (#r2a ,{C110})
  Print 'Hora:'                        (#r2b,{Cba})
  Print &timeBegan                     (#r2b,{C110})

  Alter-Printer Point-size = #SizeStd  Font-Type = Proportional Font = #FontStd
  Print $Emplid          (#R1a,{C110}) Bold
  Print $CompanyRptNm    (#R2,{C03} ) Bold

  Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Print $CompanyAdd1     (#R2a ,{C03} )
  Print $CompanyAdd2     (#R2b,{C03} )

end-heading

!**************************************
begin-procedure Process-Main
#debug show '** Process-Main **'
!**************************************
Do Select-Parameters

Let $Obs01 = 'Observação:'
Let $Obs02 = 'Considera-se dependentes econômicos para efeito de imposto de renda:'
Let $Obs03 = '- Cônjuge e companheiro (união estável);'
Let $Obs04 = '- Filhos, enteados, menor sob guarda, tutela ou curatela, até 21 anos, '
Let $Obs04 = $Obs04 || 'ou de qualquer idade, quando incapacitado(a), física ou mentalmente, '
Let $Obs04 = $Obs04 || 'para o trabalho, ou até 24 anos, se cursando estabelecimento superior '
Let $Obs04 = $Obs04 || 'ou técnica de segundo grau;'
Let $Obs05 = '- Pais, avós ou bisavós, desde que não aufiram rendimentos, tributáveis ou não, '
Let $Obs05 = $Obs05 || 'superiores ao limite de isenção mensal; '
Let $Obs06 = '- Irmão(ã), neto(a) ou bisneto(a), sem arrimo dos pais, até‚ 21 anos, desde que o '
Let $Obs06 = $Obs06 || 'contribuinte detenha a guarda judicial, ou de qualquer idade, quando '
Let $Obs06 = $Obs06 || 'incapacitado(a), física ou mentalmente, para o trabalho, ou até 24 anos, '
Let $Obs06 = $Obs06 || 'se cursando estabelecimento superior ou técnica de segundo grau; '
Let $Obs07 = '- O absolutamente incapaz (deficiente, surdo, mudo ou pródigo, assim declarado '
Let $Obs07 = $Obs07 || 'judicialmente), do qual o contribuinte seja tutor ou curador;'

Let $Obs08 = '- Sogro(a), desde que não aufiram rendimentos, tributáveis ou não, superiores ao '
Let $Obs08 = $Obs08 || 'limite de isenção mensal, e desde que a declaração do conjugê/companheiro(a) '
Let $Obs08 = $Obs08 || 'do declarante seja efetuada em conjunto.'
Let $Obs09 = 'Documentação necessária a ser entregue junto com esta declaração:'


Let $Obs10 = '*   Cópia da certidão de casamento quando o parentesco for “esposa(o)”;'
Let $Obs11 = '*   Cópia da declaração de união estável se o parentesco for “companheiro(a)”:'
Let $Obs12 = '*   Cópia da certidão de nascimento se o parentesco for: “filho(a); enteado(a); '
Let $Obs12 = $Obs12 || 'menor sob guarda ou tutela”;'
Let $Obs13 = '*   Cópia do termo de tutela, curatela ou documento que concede a guarda se o '
Let $Obs13 = $Obs13 || 'parentesco for: “tutela, curatela ou menor sob guarda”;'
Let $Obs14 = '*   No caso de dependente inválido deverá ser apresentado laudo médico que comprove '
Let $Obs14 = $Obs14 || 'a invalidez, principalmente para maiores de 21 anos de idade. Se a invalidez '
Let $Obs14 = $Obs14 || 'implicar em interdição do dependente (exemplo: alienação mental), deverá '
Let $Obs14 = $Obs14 || 'obrigatoriamente, ser apresentado o termo de curatela;'
Let $Obs15 = '*   Para dependente maior de 21 anos se estudante, deverá ser apresentada declaração '
Let $Obs15 = $Obs15 || 'expedida pela instituição, com data de emissão recente, indicando o '
Let $Obs15 = $Obs15 || 'ano/semestre que está cursando;'
Let $Obs16 = '*   Para sogro e sogra deverá ser apresentada declaração anual de Imposto de Renda, '
Let $Obs16 = $Obs16 || 'onde demonstre que a declaração conjunta com cônjuge/companheiro.'

Let $Obs17 = 'Toda vez em que ocorrer alteração na relação dos seus dependentes (inclusão de '
Let $Obs17 = $Obs17 || 'novo dependente ou exclusão), deverá ser assinada nova declaração, '
Let $Obs18 = $Obs18 || 'com a alteração necessária.'

Let $Obs19 = 'Declaro, na forma da Lei, que as informações prestadas são verdadeiras, tendo '
Let $Obs19 = $Obs19 || 'conhecimento da legislação e das conseqüências decorrentes de falsa '
Let $Obs19 = $Obs19 || 'declaração.'




Let $LComments01 = '- Sempre que ocorrer alteração nesta declaração a mesma deverá ser renovada.'
Let $LComments02 = '- No caso de dependentes comuns (filhos), esta declaração '
Let $LComments02 = $LComments02 || 'deverá ser assinada por ambos os cônjuges.'
Let $LText01     = 'Ciente da proibição de um mesmo dependente por ambos os cônjugues, '
Let $LText01     = $LText01 || 'declaro sob as penas da lei que '
Let $LText01     = $LText01 || 'as pessoas acima relacionadas são meus '
Let $LText02     = 'dependentes e não recebem rendimentos tributáveis pelo '
Let $LText02     = $LText02 || 'Imposto de Renda, não cabendo V.S. (Fonte pagadora) '
Let $LText02     = $LText02 || 'nenhuma responsabilidade perante á fiscalização.'
Let $LText03     = ''
Do Define-Array-Dependents
Do Declare-Rows
Let $SecurityClauseWithoutERN = ''
Let $_TableAlias = 'A'
Do Security-Param
Do Select-Employee-Data
end-procedure Process-Main

!**************************************
begin-procedure Select-Parameters
#debug show '** Select-Parameters **'
!**************************************
Let #PinFamlyNum  = 0
Let $Condicion1   = ''
Let $Condicion2   = ''
Let $WhereClause  = ''
Let $WhereHireClause = ''
begin-select
RC.GP_PAYGROUP
RC.GB_GROUP_ID
RC.BEGIN_DT
RC.END_DT
RC.GPBR_LIST_OPTION
RC.GPBR_PIN_FAMLY_NUM

  Let #PinFamlyNum = &RC.GPBR_PIN_FAMLY_NUM
  Let $ListOption  = Rtrim(&RC.GPBR_LIST_OPTION, ' ')
  Let $Paygroup    = Rtrim(&RC.GP_PAYGROUP, ' ')
  Let $GroupID     = Rtrim(&RC.GB_GROUP_ID, ' ')
  Let $BeginDt     = Rtrim(&RC.BEGIN_DT, ' ')
  Let $EndDt       = Rtrim(&RC.END_DT, ' ')

  Evaluate $ListOption
  when = '3'
       Let $WhereClause = $WhereClause || ' AND A.EMPLID IN (SELECT EE.EMPLID FROM PS_GPBR_RC_DEP_EE EE'
       Let $WhereClause = $WhereClause || ' WHERE EE.OPRID = ''' || $prcs_oprid || ''''
       Let $WhereClause = $WhereClause || ' AND EE.RUN_CNTL_ID = ''' ||  $prcs_run_cntl_id || ''')'
  when = '4'
       Let $WhereClause = $WhereClause || ' AND A.EMPLID IN (SELECT GR.EMPLID FROM  PS_GB_GRP_RES_TBL GR'
       Let $WhereClause = $WhereClause || ' WHERE GR.GB_GROUP_ID = ''' || $GroupID  || ''''
       Let $WhereClause = $WhereClause || ' AND GR.VERSIONGBQDM = (SELECT MAX(G.VERSIONGBQDM) FROM'
       Let $WhereClause = $WhereClause || ' PS_GB_GRP_RES_TBL G WHERE G.GB_GROUP_ID = GR.GB_GROUP_ID))'
  when = '5'
       Let $WhereClause = $WhereClause || ' AND A.GP_PAYGROUP = ''' || $Paygroup || ''''
  End-Evaluate

  If $BeginDt <> '' Or $EndDt <> ''
     Let $WhereHireClause = $WhereHireClause || ' AND A.EMPLID IN (SELECT AX.EMPLID FROM PS_JOB AX WHERE AX.EMPLID = A.EMPLID '
     Let $WhereHireClause = $WhereHireClause || ' AND AX.ACTION IN (SELECT ACT.ACTION FROM PS_ACTION_STAT_TBL ACT WHERE ACT.SET_LST_HIRE_DT = ''' || '2' || ''')'
     If $BeginDt <> ''
        Let $WhereHireClause = $WhereHireClause || ' AND AX.EFFDT >= ''' || $BeginDt || ''''
     End-If
     If $EndDt   <> ''
        Let $WhereHireClause = $WhereHireClause || ' AND AX.EFFDT <= ''' || $EndDt   || ''''
     End-if
     Let $WhereHireClause = $WhereHireClause || ')'
  End-If

 FROM  PS_GPBR_RC_DEPEND RC
 WHERE RC.OPRID  = $prcs_oprid
 AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
 end-select
end-procedure Select-Parameters

!**************************************
begin-procedure Define-Array-Dependents
#debug show '*** Define-Array-Dependents ***'
!**************************************
    create-array name=Dependents size=1000 -
    Field=Emplid:Char
    Field=Sequence:Char
    Field=DepntName:Char
    Field=DepntRel:Char
    Field=BirthDate:Char
    Field=NID:Char

end-procedure Define-Array-Dependents

!**************************************
begin-procedure Select-OptionName
#debug show '*** Select-OptionName ***'
!**************************************
Begin-Select
LO.LEGAL_ENT_TYPE_BRA
LC.COMPANY

    Let $LegNameOpt = Rtrim(&LO.LEGAL_ENT_TYPE_BRA, ' ')
    Let $LegNameCia = Rtrim(&LC.COMPANY, ' ')

FROM PS_ESTAB_TBL_BRA LO,
PS_ESTAB_TBL LC
WHERE LO.ESTABID = $Estabid
AND   LO.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_ESTAB_TBL
                  WHERE ESTABID = LO.ESTABID
                  AND   EFFDT <= $Effdt
                  AND   EFF_STATUS = 'A')
AND LC.ESTABID = LO.ESTABID
AND LC.EFFDT = LC.EFFDT
End-Select

#debug Show '    $LegNameOpt : ' $LegNameOpt
#debug Show '    $LegNameCia : ' $LegNameCia

End-Procedure Select-OptionName


!**************************************
begin-procedure Select-Company
#debug show '*** Select-Company ***'
!**************************************
Begin-Select
A.DESCR
A.ADDRESS1
A.ADDRESS2
A.STATE
A.POSTAL
A.NUM1

  Let $CompanyNm   = Ltrim(Rtrim(&A.DESCR, ' '), ' ')
  !Let $Num1        = Ltrim(Rtrim(&A.NUM1, ' '), ' ')
  !Let $CompanyAdd1 = Ltrim(Rtrim(&A.ADDRESS1, ' '), ' ') || ' ' || $Num1
  !Let $Postal      = Ltrim(Rtrim(&A.POSTAL, ' '), ' ')
  !Let $State       = Ltrim(Rtrim(&A.STATE, ' '), ' ')
  !Let $CompanyAdd2 = Ltrim(Rtrim(&A.ADDRESS2, ' '), ' ')  || ' ' || $State || ' ' || $Postal

FROM PS_COMPANY_TBL A
WHERE A.COMPANY = $Company
End-Select
End-Procedure Select-Company

!**************************************
begin-procedure Select-Establishment
#debug show '*** Select-Establishment ***'
!**************************************
Begin-Select
E.DESCR
E.ADDRESS1
E.ADDRESS2
E.STATE
E.POSTAL
E.NUM1

  Let $EstabNm   = Ltrim(Rtrim(&E.DESCR, ' '), ' ')
  Let $Num1        = Ltrim(Rtrim(&E.NUM1, ' '), ' ')
  Let $CompanyAdd1 = Ltrim(Rtrim(&E.ADDRESS1, ' '), ' ') || ' ' || $Num1
  Let $Postal      = Ltrim(Rtrim(&E.POSTAL, ' '), ' ')
  Let $State       = Ltrim(Rtrim(&E.STATE, ' '), ' ')
  Let $CompanyAdd2 = Ltrim(Rtrim(&E.ADDRESS2, ' '), ' ')  || ' ' || $State || ' ' || $Postal

FROM PS_ESTAB_TBL E
WHERE E.ESTABID = $Estabid
AND   E.EFFDT   = (SELECT MAX(EE.EFFDT) FROM PS_ESTAB_TBL EE
                   WHERE EE.ESTABID = E.ESTABID AND EE.EFFDT <= $Effdt
                   AND   EE.EFF_STATUS = 'A')
End-Select

BEGIN-Select
EE.DESCR

  Let $EstabidDescr   = Ltrim(Rtrim(&EE.DESCR, ' '), ' ')

FROM PS_ESTAB_TBL_LANG EE
WHERE EE.ESTABID = $Estabid
AND   EE.LANGUAGE_CD = $curr_language_cd
AND   EE.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_ESTAB_TBL_LANG
                  WHERE ESTABID = EE.ESTABID
                  AND   LANGUAGE_CD = EE.LANGUAGE_CD
                  AND   EFFDT <= $Effdt)
End-Select
End-Procedure Select-Establishment

!**************************************
begin-procedure Select-Employee-Data
#debug show '*** Select-Employee-Data ***'
#debug show '    [$WhereClause]     :' $WhereClause
#debug show '    [$WhereHireClause] :' $WhereHireClause

!**************************************
Begin-Select
A.EMPLID
A.COMPANY
A.GP_PAYGROUP
C.NAME_DISPLAY
D1.MAR_STATUS
A.ESTABID
A.DEPTID
A.EFFDT

    Let #Sequence  = 0
    Let $Emplid    = Rtrim(&A.EMPLID, ' ')
    Let $Company   = Rtrim(&A.COMPANY, ' ')
    Let $Paygroup  = &A.GP_PAYGROUP
    Let $Name      = Rtrim(&C.NAME_DISPLAY, ' ')
    Let $XlatValue = Rtrim(&D1.MAR_STATUS, ' ')
    Let $Estabid   = Rtrim(&A.ESTABID, ' ')
    Let $Effdt     = &A.EFFDT

    Let $XlatField = 'MAR_STATUS'
    Do Evaluate-XlatLang
    Let $MarStatus = $XlatDescr

    #debug show '    #Sequence   :' #Sequence
    #debug show '    $Emplid     :' $Emplid
    #debug show '    $Company    :' $Company
    #debug show '    $Paygroup   :' $Paygroup
    #debug show '    $Name       :' $Name
    #debug show '    $Estabid    :' $Estabid
    #debug show '    $Effdt      :' $Effdt
    #debug show '    $MarStatus  :' $MarStatus

    Do Select-OptionName
    Do Select-Company
    Do Select-Establishment

    #debug show '    $CompanyNm  :' $CompanyNm
    #debug show '    $EstabNm    :' $EstabNm

    If $LegNameOpt = 'COM'
        Let $CompanyRptNm = $CompanyNm
    Else
        Let $CompanyRptNm = $EstabNm
    End-If

    #debug show '    $CompanyRptNm    :' $CompanyRptNm

    Do Select-Address
    Do Select-Person-Bra
    Do Select-National-Id
    Do Select-Dependents
    If #CountD > 0
       Do Print-Dependents
    End-if

FROM PS_JOB A
    ,PS_JOB_JR B
    ,PS_PERSON_NAME C
    ,PS_PERS_DATA_EFFDT D1
WHERE A.EMPLID      = B.EMPLID
AND A.EMPLID        = C.EMPLID
AND A.EMPLID        = D1.EMPLID
AND A.EFFDT         = (SELECT MAX(AA.EFFDT) FROM PS_JOB AA
                       WHERE A.EMPLID = AA.EMPLID
                       AND A.EMPL_RCD = AA.EMPL_RCD)
AND A.EFFDT         = B.EFFDT
AND D1.EFFDT        = (SELECT MAX(DD.EFFDT) FROM PS_PERS_DATA_EFFDT DD
                       WHERE D1.EMPLID = DD.EMPLID)
AND A.EFFSEQ        = (SELECT MAX(AA.EFFSEQ) FROM PS_JOB AA
                       WHERE A.EMPLID   = AA.EMPLID
                       AND   A.EMPL_RCD = AA.EMPL_RCD
                       AND   A.EFFDT    = AA.EFFDT)
AND A.EFFSEQ        = B.EFFSEQ
AND A.EMPL_RCD      = B.EMPL_RCD
AND A.JOB_INDICATOR = 'P'
AND A.EMPL_STATUS   = 'A'
![$SecurityClauseWithoutERN]
[$WhereClause]
[$WhereHireClause]
ORDER BY A.COMPANY, A.ESTABID, A.DEPTID, A.EMPLID
End-Select
End-Procedure Select-Employee-Data

!**************************************
begin-procedure Select-Person-Bra
#debug show '** Select-Person-Bra **'
!**************************************
Let $CTPSSerie = ''
Begin-Select
F.CTPS_SERIES_BRA
F.CTPS_STATE_BRA

  Let $CTPSSerie = Rtrim(&F.CTPS_SERIES_BRA, ' ')

FROM PS_PERSON_BRA F
WHERE F.EMPLID = $Emplid
End-Select
End-Procedure Select-Person-Bra

!**************************************
begin-procedure Select-Address
#debug show '*** Select-Address ***'
!**************************************
Let $Address1 = ''
Let $Address2 = ''
Let $Num      = ''

Begin-Select
B1.ADDRESS1
B1.ADDRESS2
B1.ADDRESS3
B1.ADDRESS4
B1.CITY
B1.NUM1
B1.STATE
B1.POSTAL

  Let $Address1 = Rtrim(&B1.ADDRESS1,' ')    !Street
  Let $Address2 = Rtrim(&B1.ADDRESS2,' ')    !Complement
  Let $Address4 = Rtrim(&B1.ADDRESS4,' ')    !Neihgborhood
  Let $City     = Rtrim(&B1.CITY,' ')        !City
  Let $Num      = Rtrim(&B1.NUM1,' ')        !Number
  Let $Postal   = Rtrim(&B1.POSTAL,' ')      !Postal
  Let $UF       = Rtrim(&B1.STATE, ' ')      !State

FROM PS_ADDRESSES B1
WHERE B1.EMPLID  = $Emplid
AND   B1.EFFDT   = (SELECT MAX(BB.EFFDT) FROM PS_ADDRESSES BB
                    WHERE B1.EMPLID = BB.EMPLID)
End-Select
End-Procedure Select-Address

!**************************************
begin-procedure Evaluate-XlatLang
!**************************************
Let $XlatDescr = ''
Begin-Select
XL.XLATLONGNAME

  Let $XlatDescr = Rtrim(&XL.XLATLONGNAME,' ')

  if ($XlatValue = 'P' and $Sex = 'F')
      Let $XlatDescr = 'Mãe'
  end-if
  if ($XlatValue = 'P' and $Sex = 'M')
      Let $XlatDescr = 'Pai'
  end-if
  if ($XlatValue = 'PI' and $Sex = 'F')
      Let $XlatDescr = 'Sogra'
  end-if
  if ($XlatValue = 'PI' and $Sex = 'M')
      Let $XlatDescr = 'Sogro'
  end-if

FROM XLATTABLE_LNG XL
WHERE XL.FIELDNAME  = $XlatField
AND   XL.FIELDVALUE = $XlatValue
AND   XL.LANGUAGE_CD = $curr_language_cd
End-Select

if $XlatDescr = ''
  do Evaluate-Xlat
end-if

End-Procedure Evaluate-XlatLang

!**************************************
begin-procedure Evaluate-Xlat
#debug show '*** Evaluate-Xlat ***'
!**************************************
Let $XlatDescr = ''

Begin-Select
XX.XLATLONGNAME

  Let $XlatDescr = Rtrim(&XX.XLATLONGNAME,' ')

  if ($XlatValue = 'P' and $Sex = 'F')
      Let $XlatDescr = 'Mother'
  end-if
  if ($XlatValue = 'P' and $Sex = 'M')
      Let $XlatDescr = 'Father'
  end-if
  if ($XlatValue = 'PI' and $Sex = 'F')
      Let $XlatDescr = 'Mother-in-Law'
  end-if
  if ($XlatValue = 'PI' and $Sex = 'M')
      Let $XlatDescr = 'Father-in-Law'
  end-if

FROM XLATTABLE_VW XX
WHERE XX.FIELDNAME  = $XlatField
AND   XX.FIELDVALUE = $XlatValue
End-Select
End-Procedure Evaluate-Xlat

!**************************************
begin-procedure Select-Dependents
#debug show '*** Select-Dependents ***'
!**************************************
Let #CountD = 0
Let #TotalD = 0
Begin-SELECT
DD.NAME_DISPLAY
DD.BIRTHDATE
DE.RELATIONSHIP
DE.MAR_STATUS
DE.DEP_BENEF_TYPE
DE.DEPENDENT_BENEF



  Let $DepntName    = Rtrim(&DD.NAME_DISPLAY, ' ')
  Let #Age          = 0
  Do convert-to-dtu-date(&DD.BIRTHDATE, $BirthDate)
  Do convert-to-dtu-date($AsOfToday, $Today)
  Do dtu-diff-years($BirthDate,$Today ,#Age)
  Let $BirthDate = '           '
  Do Format-DateTime(&DD.BIRTHDATE,$BirthDate,{DEFDMY},'','')

  Let $Relation  = Rtrim(&DE.RELATIONSHIP, ' ')
  Let $XlatValue = $Relation
  Let $XlatField = 'RELATIONSHIP'
  Do Evaluate-XlatLang
  Let $DepntRel = $XlatDescr

  Let $MStatus   = Rtrim(&DE.MAR_STATUS, ' ')
  Let $DepType   = Rtrim(&DE.DEP_BENEF_TYPE, ' ')
  Let $DepntBenf = Rtrim(&DE.DEPENDENT_BENEF, ' ')

  #debug Show '    $DepntName : ' $DepntName
  #debug Show '    #Age       : ' #Age
  #debug Show '    $DepntRel  : ' $DepntRel
  #debug Show '    $MStatus   : ' $MStatus
  #debug Show '    $DepType   : ' $DepType
  #debug Show '    $DepntBenf : ' $DepntBenf

  Let $DependentOk  = 'N'
  Do Select-Dependents-BRA

  if $Disable     = '1'
     Let $DependentOk = 'Y'
  else
    Do Select-Dependents-WA
    Do Evaluate-Dependents
  end-if

  If $DependentOk   =  'Y'
     Let #Sequence     = #Sequence + 1
     Let #TotalD       = #TotalD   + 1
     Do Select-Dependent-NID
     Do Create-Array-Dependents
  End-if

FROM PS_DEPENDENT_BENEF DD
    ,PS_DEP_BEN_EFF DE
WHERE DD.EMPLID = $Emplid
AND DE.EMPLID   = DD.EMPLID
AND DE.DEPENDENT_BENEF = DD.DEPENDENT_BENEF
AND DD.DEP_BENEF_TYPE NOT IN ('N')
AND DE.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEP_BEN_EFF
                WHERE EMPLID = DE.EMPLID
                AND DEPENDENT_BENEF = DE.DEPENDENT_BENEF)
End-Select
If #TotalD = 0
   show 'Não encontrado termine dependentes para este empregado: ' $Emplid
End-if
End-Procedure Select-Dependents

!**************************************
begin-procedure Select-Dependents-BRA
#debug show '** Select-Dependents-BRA **'
!**************************************
Let $EducationInd = ''
Let $Disable = ''
Let $Student = ''
Begin-SELECT
E.EDUCATION_IND_BRA
E.DISABLED_BRA
E.STUDENT_BRA

  Let $EducationInd = Edit(&E.EDUCATION_IND_BRA, '0')
  Let $Disable      = Edit(&E.DISABLED_BRA, '0')
  Let $Student      = Edit(&E.STUDENT_BRA, '0')

FROM PS_DEP_BEN_EFF_BRA E
WHERE E.EMPLID = $Emplid
AND E.DEPENDENT_BENEF = $DepntBenf
AND E.EFFDT = (SELECT MAX(EE.EFFDT) FROM PS_DEP_BEN_EFF_BRA EE
               WHERE EE.EMPLID = E.EMPLID
               AND   EE.DEPENDENT_BENEF = E.DEPENDENT_BENEF)
End-Select
End-Procedure Select-Dependents-BRA

!**************************************
begin-procedure Select-Dependents-WA
#debug show '*** Select-Dependents-WA ***'
!**************************************
if $DependentOk = 'N'
Begin-Select
'X'

  Let $DependentOk = 'Y'

FROM PS_GPBR_DEPEND_WA WA
WHERE WA.EMPLID = $Emplid
AND   WA.PAYMENT_DT = (SELECT MAX(W.PAYMENT_DT) FROM PS_GPBR_DEPEND_WA W
                       WHERE W.EMPLID = WA.EMPLID
                       AND   WA.GPBR_INC_TAX_IND = 1)
AND WA.DEPENDENT_BENEF = $dependentBenef
End-Select
end-if
End-Procedure Select-Dependents-WA

!**************************************
begin-procedure Evaluate-Dependents
#debug show '*** Evaluate-Dependents ***'
!**************************************
  If  $DependentOk  = 'N'
    Evaluate $Relation
      when = 'SP'
        if $MStatus = 'M' and ($DepType = 'D' or $DepType = 'O')
          Let $DependentOk = 'Y'
        end-if
        break

      when = 'C'
      when = 'FC'
      when = 'RC'
      when = 'SB'
      when = 'GC'
      when = 'SC'
      when = 'OC'
        if $DepType = 'D' or $DepType = 'O'
          if #Age < 21
             Let $DependentOk = 'Y'
          else
             if #Age < 24 and ($EducationInd = '1' and $Student = '1')
                Let $DependentOk = 'Y'
             end-if
          end-if
        end-if
      break
      when = 'FR'
      when = 'N'
      when = 'O'
      when = 'R'
      when = 'RO'
      when = 'T'
      when = 'NA'
      when = 'NC'
        if $DepType = 'D' or $DepType = 'O'
          if #Age < 21
             Let $DependentOk = 'Y'
          end-if
        end-if
      break
      when = 'P'
      when = 'GP'
        if $DepType = 'D' or $DepType = 'O'
           Let $DependentOk = 'Y'
        end-if
      break
    End-Evaluate
  End-if

End-Procedure Evaluate-Dependents


!**************************************
begin-procedure Select-Dependent-NID
#debug show '*** Select-Dependent-NID ***'
!**************************************
Let $NID-Benef = ''
Begin-Select
NATIONAL_ID

    Let $NID-Benef = Rtrim(&NATIONAL_ID, ' ')

FROM PS_DEP_BENEF_NID
WHERE EMPLID = $Emplid
AND DEPENDENT_BENEF = $DepntBenf
AND COUNTRY = 'BRA'
AND NATIONAL_ID_TYPE = 'CPF'
End-Select
End-Procedure Select-Dependent-NID

!**************************************
begin-procedure Create-Array-Dependents
#debug show '*** Create-Array-Dependent ***'
!**************************************
  Let $Sequence = Edit(#Sequence, '00')
  Let #CountD   = #CountD + 1

  Put $Emplid $Sequence $DepntName $DepntRel $BirthDate $NID-Benef
  into Dependents(#CountD) Emplid Sequence DepntName DepntRel BirthDate NID

End-Procedure Create-Array-Dependents

!**************************************
begin-procedure Select-National-Id
#debug show '*** Select-National-Id ***'
!**************************************
Let $PIS  = ''
Let $CTPS = ''
Let $CRES = ''
Let $CPF  = ''

Begin-Select
A.NATIONAL_ID
A.NATIONAL_ID_TYPE

   Let $NationalId = Rtrim(&A.NATIONAL_ID_TYPE, ' ')

   Evaluate $NationalId
   when = 'PIS'
     Let $PIS       = Rtrim(&A.NATIONAL_ID,' ')
   when = 'CTPS'
     Let $CTPS      = Rtrim(&A.NATIONAL_ID,' ')
   when = 'C-RES'
     Let $CRES      = Rtrim(&A.NATIONAL_ID,' ')
   when = 'TIT-EL'
     Let $TITEL     = Rtrim(&A.NATIONAL_ID,' ')
   when = 'CPF'
     Let $CPF       = Rtrim(&A.NATIONAL_ID,' ')
   End-Evaluate

from PS_PERS_NID A
WHERE A.EMPLID = $Emplid
AND A.COUNTRY = 'BRA'
End-Select
End-Procedure Select-National-Id

!**************************************
begin-procedure Declare-Rows
#debug show '*** Declare-Rows ***'
!**************************************
!Row 3
  Let #R1  = 3
  Let #R1a = #R1 + 1
  Let #R1b = #R1 + 2
!Row 6
  Let #R2  = #R1 + #R1
  Let #R2a = #R2 + 1
  Let #R2b = #R2 + 2
!Row 9
  Let #R3  = #R2 + #R1
  Let #R3a = #R3 + 1
!Row 12
  Let #R4  = #R3 + #R1
  Let #R4a = #R4 + 1
!Row 15
  Let #R5  = #R4 + #R1
  Let #R5a = #R5 + 1
!Row 18
  Let #R6  = #R5 + #R1
  Let #R6b = #R6 + 2
!Row 21
  Let #R7  = #R6 + #R1
  Let #R7a = #R7 + 1
!Row 24
  Let #R8  = #R7 + #R1
!Row 27
  Let #R9  = #R8 + #R1
!Row 30
  Let #R10 = #R9 + #R1
!Row 48
  Let #R16  = #R10 + #R6
  Let #R16b = #R16 + 2
!Row 51
  Let #R17  = #R16 + #R1
  Let #R17a = #R17 + 1
!Row 56
  Let #R18  = #R17 + #R1
  Let #R18b = #R18 + 2
!Row 57
  Let #R19  = #R18 + #R1
  Let #R19b = #R19 + 2
!Row 62
  Let #R20  = #R19 + #R1
  Let #R20a = #R20 + 1
!Row 63
  Let #R21  = #R20 + #R1
  Let #R21a = #R21 + 1
!Row 66
  Let #R22  = #R21 + #R1
  Let #R22a = #R22 + 1
  Let #R22b = #R22 + 2
!Row 69
  Let #R23  = #R22 + #R1
!Row 72
  Let #R24  = #R23 + #R1

end-procedure Declare-Rows

!**************************************
begin-procedure Print-Employee-Data
#debug show '*** Print-Employee-Data ***'
!**************************************

  !Graphic (#R1a ,{C01} ,{L125}) box 15 {G2}
  !Graphic (#R1a ,{C01} ,{L125}) box 3  {G1}
  !Graphic (#R1a ,{C01} ,{L125}) box 6  {G1}
  !Graphic (#R1a ,{C01} ,{L125}) box 9  {G1}
  !Graphic (#R1a ,{C01} ,{L125}) box 12 {G1}
  !Graphic (#R3a ,{C01} ,{L40} ) box 3  {G1}
  !Graphic (#R3a ,{C01} ,{L85} ) box 3  {G1}
  !Graphic (#R4a ,{C01} ,{L110}) box 3  {G1}
  !Graphic (#R4a ,{C01} ,{L75} ) box 3  {G1}
  !Graphic (#R4a ,{C01} ,{L60} ) box 3  {G1}

  !Graphic (#R5a ,{C01} ,{L50} ) box 3  {G1}
  !Graphic (#R5a ,{C01} ,{L85} ) box 3  {G1}

  !Graphic (#R6b ,{C01} ,{L125}) box 29 {G2}
  !Graphic (#R6b ,{C01} ,{L125}) box  2 {G1} !Data do Nascimento
  !Graphic (#R6b ,{C01} ,{L125}) box  3 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box  5 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box  7 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box  9 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 11 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 13 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 15 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 17 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 19 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 21 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 23 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 25 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 27 {G1}
  !Graphic (#R6b ,{C01} ,{L125}) box 29 {G1}

  !Graphic (#R7a ,{C01} ,{L10} ) box 27 {G1}
  !Graphic (#R7a ,{C01} ,{L60} ) box 27 {G1}
  !Graphic (#R7a ,{C01} ,{L100}) box 27 {G1}

  !Graphic (#R16b,{C01} ,{L125}) box 8 {G2}
  !Graphic (#R18b, 23 ,{L40})  horz-line {G2}

  !Graphic (#R19b,{C01} ,{L125}) box 6 {G2}
  !Graphic (#R21 , 23 ,{L40})  horz-line {G2}

  !Graphic (#R22 ,{C01} ,{L125}) box 4 {G2}

  uppercase $CompanyRptNm
  uppercase $CompanyAdd1
  uppercase $CompanyAdd2
  uppercase $Name
  uppercase $Address1
  uppercase $Address2
  uppercase $Address4
  uppercase $City
  uppercase $MarStatus
  uppercase $City

    Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd

    Graphic (  4,  1, 125) box 2
        Print 'Fonte Pagadora'               (  4,   3 ) Bold

    Graphic (  6,  1, 125) box 2
        Print 'Nome do Declarante'           (  6,   3 ) Bold

    Graphic (  8,  1,  41) box 2
        Print 'CTPS n. série'                (  8,   3 ) Bold
    Graphic (  8,  42,  41) box 2
        Print 'CPF'                          (  8 , 43 ) Bold
    Graphic (  8,  83,  43) box 2
        Print 'Estado Civil'                 (  8 , 84 ) Bold

    Graphic ( 10,   1,  60) box 3
        Print 'Logradouro'                   ( 10 ,  3 ) Bold
    Graphic ( 10,  61,   8) box 3
        Print 'Número'                       ( 10 , 62 ) Bold
    Graphic ( 10,  69,  43) box 3
        Print 'Complemento'                  ( 10 , 71 ) Bold
    Graphic ( 10, 112,  14) box 3
        Print 'CEP'                          ( 10 ,113 ) Bold

    Graphic ( 13,   1,  50) box 3
        Print 'Bairro'                       ( 13 ,  3 ) Bold
    Graphic ( 13,  51,  50) box 3
        Print 'Cidade'                       ( 13 , 53 ) Bold
    Graphic ( 13, 101,  25) box 3
        Print 'UF'                           ( 13 ,103 ) Bold

    Graphic ( 17,   1, 125) box 1
        Print 'Beneficiários'                ( 17 , 57 ) Bold
    Graphic ( 18,   1, 10) box 1
        Print 'N Ordem'                      ( 18 ,  3 ) Bold
    Graphic ( 18,  11, 62) box 1
        Print 'Dependente'                   ( 18 , 35 ) Bold
    Graphic ( 18,  73, 16) box 1
        Print 'Data de Nascimiento'          ( 18 , 74 ) Bold
    Graphic ( 18,  89, 22) box 1
        Print 'Parentesco'                   ( 18 , 97 ) Bold
    Graphic ( 18, 111, 15) box 1
        Print 'CPF'                          ( 18 ,117 ) Bold

    Let #GridRow    = 1
    Let #CurrentRow = 18
    While #GridRow <= 13
        Let #CurrentRow = #CurrentRow + 1
        Graphic ( #CurrentRow,   1, 10) box 1
        Graphic ( #CurrentRow,  11, 62) box 1
        Graphic ( #CurrentRow,  73, 16) box 1
        Graphic ( #CurrentRow,  89, 22) box 1
        Graphic ( #CurrentRow, 111, 15) box 1
        Let #GridRow = #GridRow + 1
    End-While


    Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
    Let $CTPSNbr = $CTPS || ' - ' || $CTPSSerie
    Let $CTPSNbr = Rtrim($CTPSNbr, '- ')

    Print $CompanyRptNm                  (  5 ,  3)

    Print $Name                          (  7 ,  3)

    Print $CTPSNbr                       (  9 ,  3)
    Print $CPF                           (  9 , 43)
    Print $MarStatus                     (  9 , 84)

    Print $Address1                      ( 12 ,  3)
    Print $Num                           ( 12 , 62)
    if length($Address2) > 35
        Print $Address2                  ( 11 , 71) wrap 35 2
    Else
        Print $Address2                  ( 12 , 71)
    End-if
    Print $Postal                        ( 12 ,113)

    if length($Address4) > 40
        Print $Address4                  ( 14 ,  3) wrap 40 2
    Else
        Print $Address4                  ( 15 ,  3)
    End-if
    Print $City                          ( 15 , 53)
    Print $UF                            ( 15 ,103)

    Print $Obs01                         ( 32,   1) Bold
    Print $Obs02                         ( +1,   1) Bold
    Print $Obs03                         ( +1,   1) wrap 126 5
    Print $Obs04                         ( +1,   1) wrap 126 5
    Print $Obs05                         ( +1,   1) wrap 126 5
    Print $Obs06                         ( +1,   1) wrap 126 5
    Print $Obs06                         ( +1,   1) wrap 126 5
    Print $Obs08                         ( +1,   1) wrap 126 5

    Print $Obs09                         ( +2,   1) bold
    Print $Obs10                         ( +1,   1) wrap 126 5
    Print $Obs11                         ( +1,   1) wrap 126 5
    Print $Obs12                         ( +1,   1) wrap 126 5
    Print $Obs13                         ( +1,   1) wrap 126 5
    Print $Obs14                         ( +1,   1) wrap 126 5
    Print $Obs15                         ( +1,   1) wrap 126 5
    Print $Obs16                         ( +1,   1) wrap 126 5
    Print $Obs17                         ( +1,   1) wrap 126 5
    Print $Obs18                         ( +1,   1) wrap 126 5

    Graphic ( 64,   1, 125) box 2
        Print  $Obs19                    ( 64 ,  3) Bold wrap 126 2

    Graphic ( 67,   1, 50) box 5
        Print 'LOCAL E DATA'             ( 67 ,  3) Bold
    Graphic ( 67,  51, 74) box 5
        Print 'ASSINATURA DO FUNCIONÁRIO' (67 , 53) Bold


  !Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  !Print $LText01                       (#R17 ,  5)
  !Print $LText02                       (#R17a,  5)
  !Print $LText03                       (#R18,  5)
  !Print '____/____/____'               (#R18b, 03)
  !Print 'Declarante'                   (#R19 , 40)
  !Print 'Assinatura do cônjuge, no caso de dependentes comuns.'  (#R20 ,  5)
  !Print '____/____/____'               (#R21 , 05)
  !Print 'Cônjuge'                      (#R21a, 40)
  !Print 'Observações:'                 (#R22 ,  5)
  !Print $LComments01                   (#R22a,  5)
  !Print $LComments02                   (#R22b,  5)

end-procedure Print-Employee-Data

!**************************************
begin-procedure Print-Dependents
#debug show '*** Print-Dependents ***'
!**************************************
  Do Print-Employee-Data

  Let #R8 = 19
  Let #Limit = 13
  Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
  Let #CountD = 1

  While #CountD <= #TotalD
    get $EmplidD $Sequence $DepntName $DepntRel $BirthDate $NID-Dependent
    from Dependents(#CountD)

    If #CountD > #Limit
       Let #R8 = 19
       New-Page
       Do Print-Employee-Data
       Let #Limit = #Limit + 13
       Alter-Printer Point-size = #SizeSml  Font-Type = Proportional Font = #FontStd
    end-if

    Print $Sequence      (#R8,   3)
    Print $DepntName     (#R8,  12)
    Print $BirthDate     (#R8,  74)
    Print $DepntRel      (#R8,  90)
    Print $NID-Dependent (#R8, 112)

    Let #R8 = #R8 + 1

    add 1 to #CountD
  End-while

  New-Page
  Let #R8 = #R7 + #R1

end-procedure Print-Dependents

!**************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'useprntr.sqc'  !Indicate which printer to use for reports
#include 'hrsecty.sqc'   !Get SQR Security parameters
