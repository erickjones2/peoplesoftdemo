!***********************************************************************
!  GPMXRTN2:  Convert from "Paternal Maternal,First" name format to    *
!             "PATERNAL MATERNAL FIRST" names for Mexico.              *
!                                                                      *
!             Note: This procedure extracts commas from $Name and      *
!             prepares the name for a mag media interface file:        *
!             Uppercase, replace ñ with &, and deletes puncuation.         *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:53:15                                 *
!       $Release:  HR92                                                *
!      $Revision:  102                                                 *
!                                                                      *
!***********************************************************************

begin-procedure Rotate-Name-for-Mag-Media-Mex

  !do Rotate-Name

  move '' to $Names

  let $EmpPat = rtrim($EmpPat,' ')
  let $EmpMat = rtrim($EmpMat,' ')
  let $Name = rtrim($Name,' ')
  if not isnull($EmpPat)
     let $Names = $EmpPat || ' '
  end-if

  let $Names = $Names || $EmpMat || ' ' || $Name

  if not isnull($MidName)
     let $Names = $Names || ' ' || $MidName
  end-if

! Remove hyphen and replace with blank

!  while INSTR($Names,'-',0)
!        let #locn-hyph = INSTR($Names,'-',0)
!    let $Names      = SUBSTR($Names,0,#locn-hyph - 1)   || ' ' ||
!                     SUBSTR($Names,#locn-hyph + 1,40)
!  end-while


! Check for accented characters -> replace with nonaccent, and Ñ/ñ
! replace with &.  Then uppercase the string.

  let $Name_In = $Names

  let #Len = Length($Name_In)
  let #I   = 1

  while #I <= #Len

    let $Found = 'N'
    let $Test_Char = Substr($Name_In, #I, 1)
    let #Test_Code = ascii(Upper($Test_Char))
    if (#Test_Code > 64
    and #Test_Code < 91)
      let $Name_Out = $Name_Out || Upper($Test_Char)
      let $Found = 'Y'
    end-if
     
    if ($Found = 'N')
    Let $Test_Char = lower($Test_Char)
      evaluate $Test_Char
        when = 'é'
        when = 'ê'
        when = 'ë'
        when = 'è'
        when = 'É'
          let $Test_Char = 'E'
          let $Name_Out  = $Name_Out || $Test_Char
          break
        when = 'á'
        when = 'â'
        when = 'ä'
        when = 'à'
        when = 'å'
        when = 'Ä'
        when = 'Å'
          let $Test_Char = 'A'
          let $Name_Out  = $Name_Out || $Test_Char
          break
        when = 'ï'
        when = 'î'
        when = 'ì'
        when = 'í'
          let $Test_Char = 'I'
          let $Name_Out  = $Name_Out || $Test_Char
          break
        when = 'ô'
        when = 'ö'
        when = 'ò'
        when = 'Ö'
        when = 'ó'
          let $Test_Char = 'O'
          let $Name_Out  = $Name_Out || $Test_Char
          break
        when = 'ü'
        when = 'û'
        when = 'ù'
        when = 'Ü'
        when = 'ú'
          let $Test_Char = 'U'
          let $Name_Out  = $Name_Out || $Test_Char
          break
        when = 'ñ'
        when = 'Ñ'
          let $Test_Char = 'N'
          let $Name_Out  = $Name_Out || $Test_Char
          break
        when = 'Ç'
          let $Test_Char = 'C'
          let $Name_Out  = $Name_Out || $Test_Char
          break
        when = ' '
        when = '-'
          let $Name_Out  = $Name_Out || $Test_Char
        when-other
          break
      end-evaluate
    end-if

    add 1 to #I

  end-while

  let $Names = upper ($Name_Out)
  let $name_out = ''

end-procedure



#include 'gpmxrtn1.sqc' !Rotate-Name



