!***********************************************************************
!  GPMXIM11: Incapacidades                                             *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  31781263                                            *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   ! set enviroment
#include 'setup02.sqc'  ! landscape orientation and printer initialize
! Heading columns definition
#define c1  1           !Empl. Num
#define c2  14          !Empl. National ID
#define c3  28          !Name
#define c4  64          !Abscense Take
#define c5  85          !Reason
#define c6  115         !#Dias
#define c6a 116         !#Dias
#define c7  121         !Fecha Inicio
#define c8  133         !Fecha Fin
#define c8b 145         !Estabid
#define c8c 150         
#define c9  163         !Folio
#define c98 155
#define c99 164
!***********************************************************************
! Setup Section
!***********************************************************************
begin-setup
 PAGE-SIZE 60 180
end-setup
!***********************************************************************
! Main of Program
begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'GPMXIM11'to $ReportID
  move 'Ausentismos' to $ReportTitle
  display $ReportTitle
  move 'Ver.2020 PUM37.01'  to $ReportVersion 
  display $ReportVersion 
  display ' ' 
end-procedure Init-Report

begin-report
  move '1' to $ReportDateType
  move '1' to $ReportYear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Init-Report
  do Select-Params
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
end-report
!***********************************************************************
! Heading Definition
begin-heading 09
print 'PeopleSoft'                   (1,) center
print 'AUSENTISMOS'                  (2,) center
print 'Reporte:'                     (3,1)
print $ReportID                      (,18)
print 'Página:'                      (3,{c98})
page-number                          (,{c99})
print 'Hora:'                        (4,{c98})
print $ReportTime                    (,{c99})
print 'Fecha:'                       (5,{c98})
print $ReportDate                    (,{c99})
print 'Compañía:'                    (4,1)
print $COMP                          (,18)
If $Estabid <> ''
    print 'Establecimiento:'         (5,1)
    print $Estabid                   (,18)
    print 'Periodo:'                 (+1,1)
    print $BegDtP                    (,18)
    print ' al'                      (,+1)
    print $EndDtP                    (,+1)
else
    print 'Periodo:'                 (5,1)
    print $BegDtP                    (,18)
    print ' al'                      (,+1)
    print $EndDtP                    (,+1)
end-if

print '='                            (+1,1,173) fill
print 'Número de'                    (+1,{c1})
print 'Número de'                    (,{c2})
print 'Tipo de'                      (,{c4})
print 'Fecha'                        (,{c7})
print 'Fecha'                        (,{c8})
print 'Empleado'                     (+1,{c1})
print 'Afiliación'                   (,{c2})
print 'Nombre del Empleado'          (,{c3})
print 'Ausentismo'                   (,{c4})
print 'Motivo'                       (,{c5})
print 'Días'                         (,{c6})
print 'Inicio'                       (,{c7})
print 'Fin'                          (,{c8})
If $Estabid = ''
   print 'Establecimiento'           (,{c8b})
   print 'Folio'                     (,{c9})
else
   print 'Folio'                     (,{c8c})
end-if
print '='                            (+1,1,173) fill
end-heading

!***********************************************************************
Begin-procedure Select-Params
Let $LocClause = ''
Let $DateClause = ''
Begin-Select
A.COMPANY
A.ESTABID
A.BALANCE_YEAR
A.MONTHCD
A.GPMX_ESTABID_OPTN
 
 LET $COMP = Rtrim(&A.COMPANY, ' ')
 let #Year =  &A.BALANCE_YEAR
 let #Month = &A.MONTHCD
 Let $Estab_Opt = &A.GPMX_ESTABID_OPTN
 
 do dtu-format-date(#Year, #Month ,1, $BegDtDTU)
 do dtu-month-end($BegDtDTU, $EndDtDTU)
 
 Do Convert-From-DTU-Date($BegDtDTU, $BegDt)
 Do Convert-From-DTU-Date($EndDtDTU, $EndDt)
  
 do Format-DateTime($BegDt, $BegDtP, {DEFDATE},'','')
 do Format-DateTime($EndDt, $EndDtP, {DEFDATE},'','')
 
 Let $Estabid = Rtrim(&A.ESTABID, ' ')
 
 If $Estabid <> ''
   If $Estab_Opt = 'L'
     Let $LocClause = 'AND C.LOCATION IN '
     Let $LocClause = $LocClause || ' (SELECT LOC.LOCATION FROM PS_LOCATION_TBL LOC ' 
     Let $LocClause = $LocClause || ' WHERE LOC.ESTABID = ' || '''' || $Estabid || ''''
     Let $LocClause = $LocClause || ' AND LOC.SETID = C.SETID_LOCATION AND LOC.LOCATION = C.LOCATION'
     Let $LocClause = $LocClause || ' AND LOC.EFFDT = (SELECT MAX(L.EFFDT) FROM PS_LOCATION_TBL L'
     Let $LocClause = $LocClause || ' WHERE L.LOCATION = LOC.LOCATION AND L.EFFDT <= '
     Let $LocClause = $LocClause || '''' || $EndDt || '''' || ')) '
     Let $OrderEstablishment =  'C.LOCATION,'
   Else
     Let $LocClause = ' AND C.ESTABID = ''' || $Estabid || ''' ' 
     Let $OrderEstablishment =  'C.ESTABID,'
   End-if  
 End-if
 
 Let $DateClause = ' AND (I.BGN_DT BETWEEN ''' ||  $BegDt || ''' AND ''' || $EndDt  || ''' OR '
 Let $DateClause = $DateClause || 'I.END_DT BETWEEN ''' || $BegDt || ''' AND ''' || $EndDt || ''')'
 

 do BRING_PIN_TAKE_NUM
 
FROM PS_GPMX_RC_WRKRISK A
WHERE A.OPRID = $Prcs_OprID
AND A.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
End-Select
End-procedure Select-Params

!**************************************
Begin-procedure BRING_PIN_TAKE_NUM
!**************************************
Let #PinNum = 0
Let $AbsReason = ''
Let $WhereClause = 'AND ('
Let $Found = 'N'
Begin-Select
B.PIN_TAKE_NUM
B.ABSENCE_REASON
 Let $Found = 'Y'
 Let #PinNum    = &B.PIN_TAKE_NUM
 Let $AbsReason = rtrim(&B.ABSENCE_REASON, ' ')
 
 If #PinNum > 0 and $AbsReason <> '' 
     Let $WhereClause = $WhereClause || '(D.PIN_TAKE_NUM = ' || To_char(#PinNum) || ' AND D.ABSENCE_REASON = ''' || $AbsReason || ''') OR '
 else 
     If #PinNum > 0 and $AbsReason = '' 
        Let $WhereClause = $WhereClause || '(D.PIN_TAKE_NUM = ' || To_char(#PinNum) || ') OR '
     End-If
 End-If
 
FROM PS_GPMX_RC_WKRSK_C B
WHERE B.OPRID = $Prcs_OprID
AND B.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
End-Select 
If $Found = 'Y' 
   Let $WhereClause = Substr($WhereClause,1,length($WhereClause) - 3) ||  ')'
else
   Let $WhereClause = ''
end-if
Do BRING_DATA

End-procedure BRING_PIN_TAKE_NUM

!***********************************************************************
Begin-procedure BRING_DATA
!***********************************************************************
Let $Loc_SetId = ''
Let $Loc_SetId_Aux = ''

BEGIN-SELECT DISTINCT
G.PIN_NUM
D.EMPLID
G.PIN_NM
E.NAME
D.ABSENCE_REASON
D.ABS_TYPE_OPTN
C.LOCATION
C.SETID_LOCATION
I.DURATION_ABS
D.EVT_CONFIG1
I.BGN_DT
I.END_DT
C.ESTABID
  
  LET #PinNum   =   &G.PIN_NUM
  LET $PinName  =   &G.PIN_NM
  LET $EMPLID   =   &D.EMPLID
  LET $NAME     =   &E.NAME
  LET $Reason   =   Rtrim(&D.ABSENCE_REASON, ' ')
  LET $AbsType  =   &D.ABS_TYPE_OPTN
  LET #Days     =   &I.DURATION_ABS
  LET $Folio    =   &D.EVT_CONFIG1
  LET $BgnAbs   =   &I.BGN_DT
  LET $EndAbs   =   &I.END_DT

  Do Get-National-Id
  Do Get-Abs-Reason
  
  If $Estabid = ''
    If $Estab_Opt = 'L'
       Let $Location = Rtrim(&C.LOCATION, ' ')
       Let $Setid    = Rtrim(&C.SETID_LOCATION, ' ')
       Let $Loc_SetId = $Setid||$Location
       
       If $Loc_SetId <> $Loc_SetId_Aux
         Do Get-Estabid
         Let $Loc_SetId_Aux = $Loc_SetId
       End-if  
    Else
       Let $EstabidEmpl = RTrim(&C.ESTABID, ' ')
    End-if   
  End-if
 
  Do PRINT_FORM_EMPLID

FROM PS_JOB C,
PS_GP_RSLT_ABS D,
PS_NAMES E,
PS_GP_PIN G,
PS_GP_ABS_EVENT I
WHERE C.COMPANY = $COMP
AND   C.EFFSEQ  = (SELECT MAX(AA.EFFSEQ) FROM PS_JOB AA
                        WHERE AA.EMPLID = C.EMPLID
                        AND   AA.EFFDT  = C.EFFDT
                        AND   AA.EMPL_RCD = C.EMPL_RCD)
AND   C.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB WHERE EMPLID = C.EMPLID 
                        AND EMPL_RCD = C.EMPL_RCD 
                        AND EFFSEQ = C.EFFSEQ
                        AND EFFDT <= $EndDt)
AND D.EMPLID       = C.EMPLID
AND I.EMPLID       = D.EMPLID
AND G.PIN_NUM      = D.PIN_TAKE_NUM
[$DateClause]
[$WhereClause]
AND D.ABSENCE_DATE = I.BGN_DT
AND D.ABS_END_DT   = I.END_DT
AND D.EMPLID       = I.EMPLID
AND E.EMPLID       = D.EMPLID
AND E.EFFDT        = (SELECT MAX(EE.EFFDT) FROM PS_NAMES EE WHERE
                      EE.EMPLID = E.EMPLID 
                      AND EE.EFF_STATUS = 'A' 
                      AND EE.EFFDT <= $EndDt)
[$LocClause]
ORDER BY [$OrderEstablishment] D.EMPLID,G.PIN_NM, I.BGN_DT
End-Select
End-procedure BRING_DATA

!**************************************
Begin-procedure Get-Abs-Reason
!**************************************
Let $ReasonDescr = ''
Begin-Select
AR.DESCR

   Let $ReasonDescr = Rtrim(&AR.DESCR, ' ' )
   
FROM PS_GP_ABS_REASON AR
WHERE AR.ABS_TYPE_OPTN = $AbsType
AND   AR.ABSENCE_REASON = $Reason
AND   AR.COUNTRY = 'MEX'
AND   AR.EFFDT <= (SELECT MAX (ARR.EFFDT) FROM PS_GP_ABS_REASON ARR
WHERE ARR.USED_BY = AR.USED_BY
AND ARR.COUNTRY = AR.COUNTRY 
AND ARR.ABS_TYPE_OPTN = AR.ABS_TYPE_OPTN
AND ARR.ABSENCE_REASON = AR.ABSENCE_REASON
AND ARR.EFFDT <= $EndDt)
End-Select
End-procedure Get-Abs-Reason

!**************************************
begin-procedure Get-National-Id
!**************************************
Let $IMSS = ''
Begin-Select
A.NATIONAL_ID

 Let $IMSS     = Rtrim(&A.NATIONAL_ID,' ')  
   
from PS_PERS_NID A
WHERE A.EMPLID = $Emplid
AND A.COUNTRY = 'MEX' 
AND A.NATIONAL_ID_TYPE = 'IMSS'
End-Select
End-Procedure Get-National-Id

!**************************************
begin-procedure Get-Estabid
!**************************************
Let $EstabidEmpl = ''
Begin-Select
E.ESTABID

 Let $EstabidEmpl = &E.ESTABID

FROM PS_LOCATION_TBL E 
WHERE E.LOCATION = $Location
AND   E.SETID = $SetID
AND   E.EFFDT = (SELECT MAX(L.EFFDT) FROM PS_LOCATION_TBL L
                 WHERE L.LOCATION = E.LOCATION 
                 AND   L.EFFDT <= $EndDt)
     
End-Select
End-Procedure Get-Estabid

!***********************************************************************
BEGIN-PROCEDURE PRINT_FORM_EMPLID
 PRINT $EMPLID        (+1,{c1})  ON-BREAK
 PRINT $IMSS          (,{c2})    ON-BREAK                
 PRINT $NAME          (,{c3},29) ON-BREAK
 PRINT $PinName       (,{c4})
 PRINT $ReasonDescr   (,{c5})
 PRINT #Days          (,{c6}) edit 999
 PRINT $BgnAbs         (,{c7}) edit 'dd/mm/yyyy'
 PRINT $EndAbs         (,{c8}) edit 'dd/mm/yyyy'
 If $Estabid = ''
    print $EstabidEmpl (,{c8b}) 
    PRINT $Folio         (,{c9}) 
 else
    PRINT $Folio         (,{c8c}) 
 end-if

 let #Days=0
END-PROCEDURE PRINT_FORM_EMPLID
!***********************************************************************
#Include 'reset.sqc'    !Reset printer procedure
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'datetime.sqc' !Routines for date and time formatting
#Include 'number.sqc'   !Routines to format numbers
#Include 'stdapi.sqc'   !Update Process API
#Include 'datemath.sqc' !Routines for date math
#include 'getcodta.sqc' !Get-Company-data
