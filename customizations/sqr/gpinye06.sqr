!***********************************************************************
!  GPINYE06: Form 6                                                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:04:01:03                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! Modification History                                                 *
! Dated      Author  ICE         Changes                               *
! 07/02/2007 Animesh 1605819001  Hard coded col positions are removed  *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'rellang.sqc'

  #define Col_1        10
  #define Col_1a       3
  #define Col_2        8
  #define Col_3        11
  #define Col_3a       18
  #define Col_3b       12
  #define Col_3c       13
  #define Col_4        20
  #define Col_4a       23
  #define Col_5        25
  #define Col_5a       28
  #define Col_6        40
  #define Col_6a       43
  #define Col_7        45
  #define Col_8        50
  #define Col_8a       53
  #define Col_9        58
  #define Col_10       62
  #define Col_11       64
  #define Col_12a      73
  #define Col_12b      75
  #define Col_12       77
  #define Col_13       82
  #define Col_14       85
  #define Col_14a      90
  #define Col_15       100
  #define Col_15a      115
  #define Col_16       105
  #define Col_16a      110
  #define Col_17       120
  #define Col_18       128
  #define Col_19a      140
  #define Col_19       144
  #define Col_20       150
  #define Col_21       160
  #define Col_22       165
  #define array_size   1000

Begin-Setup
declare-variable
  date     $begin_date
  date     $end_date
  date     $month_end
  integer  #challan_seq_num
  integer  #file_begin
end-declare

#Include 'ptset02.sqc'   ! Printer and page-size initialization
Create-Array Name=cntrbtn  size = {array_size}
Field=insno:char
!Field=insname:char
Field=Finsname:char
Field=Employeeid:char
Field=wages:Number
Field=cont:Number
Field=workdays:Number
Field=Dispensary:char

declare-layout form_6_layout
  paper-size = (a4)
  orientation = portrait
end-declare

  declare-report form_6_report
 layout = form_6_layout
end-declare

End-Setup

Begin-Program
  Do Init-Processing
  Do Reset
  Do stdapi-term
End-Program

Begin-Heading 4
End-Heading
!********************************************************************************
Begin-Procedure Init-Processing

  Do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)
  Do Stdapi-Init
  Do Get-Translate-Values
  Do Get-Run-Cntrl-Dtls
  Do Process-Main
End-Procedure !Init-Processing
!********************************************************************************
Begin-Procedure Get-Run-Cntrl-Dtls
Begin-Select
RNCT.GPIN_REPORT_ID
RNCT.ESTABID
RNCT.CAL_PRD_ID
RNCT.BGN_DT
RNCT.END_DT
FROM PS_GPIN_PR_RC RNCT
WHERE  RNCT.OPRID = $prcs_oprid
AND RNCT.RUN_CNTL_ID = $prcs_run_cntl_id
End-Select

Let $estab_id=ltrim(rtrim(&RNCT.ESTABID ,' '),' ')
if $estab_id <> ''
    Let $check_estab_id = 'AND (TMP.GP_GENRPT_BREAK1=' || ''''||$estab_id || ''')'
else
    Let $check_estab_id = ''
end-if

End-Procedure    ! Get-Run-Cntrl-Dtls
!********************************************************************************
Begin-Procedure Rep-Header
    alter-printer  point-size=12  font=4
    print 'FORM 5'     (0,80) BOLD
    alter-printer  point-size=10 font=4
    print 'RETURN OF CONTRIBUTIONS '   (+2,70)
    alter-printer  point-size=12  font=4
    print 'EMPLOYEES'' STATE INSURANCE CORPORATION' (+2,55) BOLD
    alter-printer  point-size=10  font=4
    print '(Regulation 26)' (+1,80)
    alter-printer  point-size=8 font=4
    print  'Name of Branch Office...........................................' (+2,10)
    print  'Employer''s Code No..............................................' (0,130)

End-Procedure  !Rep-Header
!********************************************************************************
Begin-Procedure Process-Main
Let #file_begin = 1
Let $begin_date = &RNCT.BGN_DT
Let $end_date   = $begin_date

while $end_date < &RNCT.END_DT

Move $begin_date to $begin_date_str 'MM-DD-YYYY'
extract $begin_mnth from $begin_date_str 0 2
Let #begin_mnth = to_number($begin_mnth)
 if #begin_mnth >= 4 and #begin_mnth <=9
    Let $end_date=dateadd($begin_date,'month',9-#begin_mnth)
    Move $end_date to $end_date_str 'MM-DD-YYYY'
    extract $begin_yr from $begin_date_str 6 4
    extract $end_yr from $end_date_str 6 4
    Let $month_end_str=$end_yr||'-'||'09'||'-'||'30'
 else
    if #begin_mnth > 3
        Let $end_date=dateadd($begin_date,'month',(12+3)-#begin_mnth)
    else
        Let $end_date=dateadd($begin_date,'month',3-#begin_mnth)
    end-if
    Move $end_date to $end_date_str 'MM-DD-YYYY'
 extract $begin_yr from $begin_date_str 6 4
 extract $end_yr from $end_date_str 6 4
 Let $month_end_str=$end_yr||'-'||'03'||'-'||'31'
 end-if
 Let $month_end=strtodate($month_end_str,'YYYY-MM-DD')
 Let $end_date=dateadd($end_date,'day',datediff($month_end,$end_date,'day'))
 if ($end_date>&RNCT.END_DT)
    Let $end_date=&RNCT.END_DT
 end-if
    Do Process-Form6

Let $begin_date=dateadd($end_date,'day',1)
end-while

End-Procedure !Process-Main
!********************************************************************************
Begin-Procedure Process-Form6
  Let $sav_estabid   = ''
  Let #slno          = 0
  Let #i             = 0
  Let #emplconded    = 0
  Let #totwagepd     = 0
  Let #workdays      = 0
  Let $sav_emplid    = ''
  Let #tot_empcont   = 0
  Let #tot_empwages  = 0
  Let #challan_total =0
  do Get-Assessment-Period

Begin-Select
TMP.JOBINSTANCE
TMP.EMPLID
TMP.CAL_RUN_ID
TMP.EMPL_RCD
TMP.GP_PAYGROUP
TMP.CAL_ID
TMP.ORIG_CAL_RUN_ID
TMP.RSLT_SEG_NUM
TMP.RSLT_VER_NUM
TMP.RSLT_REV_NUM
TMP.GP_GENRPT_BREAK1
TMP.PRD_BGN_DT
TMP.PRD_END_DT

    If $sav_estabid = ''
        move &TMP.GP_GENRPT_BREAK1 to $sav_estabid
        do Reset-Array
       let $estab_brk = 'Y'
       Do Get-Insur-No
       Let #emplconded = 0
       Let #totwagepd = 0
       let #workdays = 0
       let #i = 0
       MOVE &TMP.EMPLID TO  $sav_emplid
       Do Get-Challan-Total
    end-if

    If $sav_estabid <> &TMP.GP_GENRPT_BREAK1
        if  #challan_total <> 0
            if #file_begin = 0
                new-page
            Else
                Let #file_begin = 0
            End-if

            Do Print-Form6
            Do Print-Rpt-Flds
            !Do Print-Vert-Linesdd
        End-If

         move &TMP.GP_GENRPT_BREAK1 to $sav_estabid
         Let #i = 0
         do Reset-Array
         let $estab_brk = 'Y'
         Do Get-Insur-No
         Let #emplconded = 0
         Let #totwagepd = 0
         let #workdays = 0
         let #tot_wages = 0
         Let #tot_empcont = 0
         Let #tot_empwages = 0
         MOVE &TMP.EMPLID TO  $sav_emplid
         Do Get-Challan-Total
    End-If

    if $sav_emplid <> &TMP.EMPLID
       Add 1 to #i
       Do Get-Insur-No
       Let #emplconded = 0
       Let #totwagepd  = 0
       let #workdays   = 0
       MOVE &TMP.EMPLID TO  $sav_emplid
    end-if

  let $sav_emplid   = &TMP.EMPLID
  let #JOBINSTANCE  = &TMP.JOBINSTANCE
  let $EMPLID       = &TMP.EMPLID
  let $CALRUNID     = &TMP.CAL_RUN_ID
  let $ORIGCALRUNID = &TMP.ORIG_CAL_RUN_ID
  let $PAYGRP       = &TMP.GP_PAYGROUP
  let $CALID        = &TMP.CAL_ID
  let $RPTBREAK     = &TMP.GP_GENRPT_BREAK1
  let $BGNDATE      = &TMP.PRD_BGN_DT
  let $ENDDATE      = &TMP.PRD_END_DT

  move &TMP.RSLT_SEG_NUM to #RSLTSEGNUM
  move &TMP.RSLT_VER_NUM to #RSLTVERNUM
  move &TMP.RSLT_REV_NUM to #RSLTREVNUM

  let #empl_rcd = &TMP.EMPL_RCD

  Do Get-Rpt-Fields

From PS_GPIN_PR_TMP TMP, PS_GP_CALENDAR CAL, PS_GP_RUN_TYPE RT
WHERE TMP.JOBINSTANCE = #prcs_job_instance
AND EXISTS (SELECT 'X' FROM PS_GPIN_ESI_ENROLL XX
            WHERE XX.EMPLID = TMP.EMPLID
            AND   XX.EFFDT = (SELECT MAX(EFFDT) FROM PS_GPIN_ESI_ENROLL
                              WHERE EMPLID = XX.EMPLID
                              AND   EFFDT <= $end_date)
                              AND   XX.EFF_STATUS = 'A')
AND  CAL.CAL_ID       =  TMP.CAL_ID
AND  CAL.GP_PAYGROUP  =  TMP.GP_PAYGROUP
AND  CAL.RUN_TYPE     =  RT.RUN_TYPE
AND  RT.CALC_TYPE     <> 'A'
[$check_estab_id]
ORDER BY TMP.GP_GENRPT_BREAK1, TMP.EMPLID
End-Select
 if  #challan_total <> 0
    if #file_begin = 0
        new-page
    Else
        Let #file_begin = 0
    End-if
 Do Print-Form6
 Do Print-Rpt-Flds
 !Do Print-Vert-Lines
End-If

End-Procedure !Process-Main
!************************************************************************

Begin-Procedure Reset-Array
!********************************************************************************
CLEAR-ARRAY  NAME = cntrbtn
End-Procedure !Reset-Array

!************************************************************************

Begin-Procedure Get-Rpt-Fields
Let #repval = 0

Begin-Select DISTINCT
TMP3.GPIN_FLD_NAME
TMP3.CALC_RSLT_VAL

  Move &TMP3.GPIN_FLD_NAME To $rptfldname
  Move &TMP3.CALC_RSLT_VAL To #repval

  do load-array

FROM PS_GPIN_PR_TMP3 TMP3
WHERE  TMP3.JOBINSTANCE = #prcs_job_instance
AND TMP3.EMPLID = $EMPLID
AND TMP3.CAL_RUN_ID = $CALRUNID
AND TMP3.EMPL_RCD = #empl_rcd
AND TMP3.GP_PAYGROUP = $PAYGRP
AND TMP3.CAL_ID = $CALID
AND TMP3.ORIG_CAL_RUN_ID= $ORIGCALRUNID
AND TMP3.RSLT_SEG_NUM = #RSLTSEGNUM
AND TMP3.RSLT_VER_NUM = #RSLTVERNUM
AND TMP3.RSLT_REV_NUM = #RSLTREVNUM
End-Select

End-Procedure !Get-Rpt-Fields


begin-procedure load-array
        Let $rptfldname = ltrim($rptfldname ,' ')
        Let $rptfldname = rtrim($rptfldname,' ')
Evaluate $rptfldname
    when = 'F6_EMPL_CON_DED'
       get #emplconded from cntrbtn(#i) cont
       let #emplconded = #emplconded + #repval
       put #emplconded into cntrbtn(#i) cont
       Let #tot_empcont = #tot_empcont + #repval
       break
    when = 'F6_TOT_WAGE_PD'
       get #totwagepd from cntrbtn(#i) wages
       let #totwagepd = #totwagepd + #repval
       put #totwagepd into cntrbtn(#i) wages
       break
    when = 'F6_ER_ESI'
       move #repval to #totded_er
       Let #tot_wages = #tot_wages + #repval
       break
    when = 'F6_DAYS_WORKED'
       get #workdays from cntrbtn(#i) workdays
       let #workdays = #workdays + #repval
       put #workdays into cntrbtn(#i) workdays
       break
   End-Evaluate
end-procedure
!******************************************************************************

Begin-Procedure Print-Form6
       Do Rep-Header
       Do Get-Employer-Det
       DO GET-PRINCIPAL-EMP-DET
       DO GET-PRINCIPAL-EMP-ADDR
       Let #lnno = 8
        print $esi_brch_offc  (#lnno , 30)
        print $emp_code  (#lnno , 148)
        print $NAME_FACTORY_lbl                 (+2,{Col_1})  bold

        if ltrim(rtrim($est_company,' '),' ') <> ''
          print $est_company                    (+1,{Col_1})
        end-if
        if $EST_ADDRESS1 <> ''
          print $EST_ADDRESS1                   (+1,{Col_1})
        end-if
        if $EST_ADDRESS2<> ''
          print $EST_ADDRESS2                   (+1,{Col_1})
        end-if
        if $EST_ADDRESS3<> ''
          print $EST_ADDRESS3                   (+1,{Col_1})
        end-if
        if $EST_ADDRESS4 <> ''
          print $EST_ADDRESS4                   (+1,{Col_1})
        end-if
        if $EST_CITY <> ''
         print $EST_CITY                        (+1,{Col_1})
        end-if
        if $EST_STATE <> ''
         print $EST_STATE                       (+1,{Col_1})
        end-if
        if $EST_COUNTRY <> ''
         print $EST_COUNTRY                      (+1,{Col_1})
        end-if
        print $PARTICULAR_EMPLOYR_lbl            (+2,{Col_1})       bold
        print $NAME_lbl                          (+1,{Col_3a})

     Let $PRINCIPAL-EMP-NAME = ltrim(rtrim($PRINCIPAL-EMP-NAME,' '),' ')
     Let $PRINCIPAL_FIRST_NAME = ltrim(rtrim($PRINCIPAL_FIRST_NAME,' '),' ')
     Let $PRINCIPAL_MIDDLE_NAME= ltrim(rtrim($PRINCIPAL_MIDDLE_NAME,' '),' ')
     Let $PRINCIPAL_LAST_NAME = ltrim(rtrim($PRINCIPAL_LAST_NAME,' '),' ')
     LET $PRINCIPAL-EMP-NAME  = $PRINCIPAL_FIRST_NAME || ' ' ||  $PRINCIPAL_MIDDLE_NAME || ' ' || $PRINCIPAL_LAST_NAME
        print $PRINCIPAL-EMP-NAME                (,40,)
        print $DESIGNATION_lbl                   (+1,{Col_3a})
        print $DESIGNATION                       (,40,)
        print $RES_ADD_lbl                       (+1,{Col_3a})

        Let $EMP-ADDR1=ltrim(rtrim($EMP-ADDR1,' '),' ')
        Let $EMP-ADDR2=ltrim(rtrim($EMP-ADDR2 ,' '),' ')
        Let $EMP-ADDR3=ltrim(rtrim($EMP-ADDR3 ,' '),' ')
        Let $EMP-ADDR4=ltrim(rtrim($EMP-ADDR4 ,' '),' ')
        Let $EMP-ADDR5=ltrim(rtrim($EMP-ADDR5 ,' '),' ')

        if $EMP-ADDR1 <> ''
        print $EMP-ADDR1                         (,40,)
        end-if

        if $EMP-ADDR2 <> ''
         print $EMP-ADDR2                         (+1,40,)
        end-if

        if $EMP-ADDR3 <> ''
         print $EMP-ADDR3                         (+1,40,)
        end-if

        if $EMP-ADDR4 <> ''
         print $EMP-ADDR4                         (+1,40,)
        end-if

        if $EMP-ADDR5 <> ''
         print $EMP-ADDR5                         (+1,40,)
        end-if

        print $PERIOD_lbl                        (+2,{Col_1})
        print $PERIOD                            (,33)         bold

print 'I furnish below the details of the Employer''s and Employee''s share of contribution in respect of the under mentioned insured persons.I hereby declare that the return includes each and every'(+2,{Col_3a})
print 'employee, employed directly or through an immediate employer or in connection with the work of the factory /establishment or any work connected with the administration of the factory/establishment' (+1,{Col_1})
print 'or purchase of raw materials, sale or distribution of finished products etc., to whom the ESI Act, 1948 applies, in the contribution period to which this return relates and that the contributions' (+1,{Col_1})
print 'in respect of employer''s and employee''s share have been correctly paid in accordance with the provisions of the Act and Regulations.' (+1,{Col_1})
        Let #ln = #Current-Line - 4
        Do Get-Challan-Total
        Do Print-Totals
print 'Employees''s Share..............................' (+2,50)
print 'Rs.'(,68)
print #employee_contrib (,71)
print 'Employers''s Share...............................' (+1,50)
print 'Rs.'(,68)
print #employer_contrib (,71)
print 'Total Contribution.................................' (+1,50)
print 'Rs.'(,68)
print #challan_total (,71)

        new-page
        print $CHALLAN_lbl                      (,10)
        Do header-page3
        Do Get-Bill-Det
        Do Print-Vert-Lines2
        print $Total_Amnt_lbl                     (+2,{Col_15a})
        print #TAmnt   (,135)
        print '.............................................'(,134)

print 'I declare that' (+3,{Col_1}) BOLD
print '(a)'(+1,{Col_1})
print 'All the Records and Registers have been maintained as per provisions contained in ESI Act, Rules & Regulations framed therein.'(,{Col_3c}) wrap 160 2
print '(b)'(+1,{Col_1})
print 'During the period of return .............. No. of Declaration forms have been submitted.'(,{Col_3c}) wrap 160 2
print '(c)'(+1,{Col_1})
print 'During the above period .............. No. of TICs have been received.'(,{Col_3c}) wrap 160 2
print '(d)'(+1,{Col_1})
print 'During the above period .............. No. of PICs have been received.'(,{Col_3c}) wrap 160 2
print '(e)'(+1,{Col_1})
print 'During the above period .............. No. of PICs have been distributed amongst the eligible IPs.'(,{Col_3c}) wrap 160 2
print '(f)'(+1,{Col_1})
print 'During the above period .............. accidents have been reported to the concerned Branch Office.'(,{Col_3c}) wrap 160 2
print '(g)'(+1,{Col_1})
print 'During the period .............. No. of employees directly employed by us have been covered and a total wages of Rs................ have been paid to such employees.'(,{Col_3c}) wrap 160 2
print '(h)'(+1,{Col_1})
print 'During the period .............. No. of employees directly employed by us have not been covered and a total wages of Rs................. have been paid to such employees.'(,{Col_3c}) wrap 160 2
print '(i)'(+1,{Col_1})
print 'During the period .............. No. of employees employed through immediate employer have been covered and a total wages of Rs.................. have been paid to such employees.'(,{Col_3c}) wrap 160 2
print '(j)'(+1,{Col_1})
print 'During the period .............. No. of employees employed through immediate employer have not been covered and a total wages of Rs................. have been paid to such employees.'(,{Col_3c}) wrap 160 2
print '(k)'(+1,{Col_1})
print 'Following components of wages have been taken into consideration for the purpose of payment of contribution -'(,{Col_3c}) wrap 160 2
print '1.'(+1,{Col_3a})
print '2.'(+1,{Col_3a})
print '3.'(+1,{Col_3a})
print '4.'(+1,{Col_3a})
print '5.'(+1,{Col_3a})
print '(l)'(+1,{Col_1})
print 'Following components of wages have not been taken into consideration for the purpose of payment of contribution -'(,{Col_3c}) wrap 160 2
print '1.'(+1,{Col_3a})
print '2.'(+1,{Col_3a})
print '3.'(+1,{Col_3a})
print '4.'(+1,{Col_3a})
print '5.'(+1,{Col_3a})
LET $DECLARE_STR1 = 'The above mentioned information is based on records and any information if found incorrect will render me liable for '
LET $DECLARE_STR2 = 'prosecutions under provisions of ESI Act and action for recovery of contribution due along-with interest and damages as per provisions of the ESI Act.'
LET $DECLARE_STR = $DECLARE_STR1 || $DECLARE_STR2
print $DECLARE_STR (+2,{Col_1}) wrap 175 2
        print $PLACE_lbl                         (+4,{Col_1})
        print $EST_CITY                          (,20)
        print $DESIGNATION1_lbl                  (,{Col_15a})
        print $DATE_lbl                          (+1,{Col_1})
        move &RNCT.END_DT to $prd_end_date
        move $prd_end_date to $prd_end_date_str 'DD/MM/YYYY'
        PRINT $prd_end_date_str                  (,20)
        print $STAMP_lbl                       (,120)

print 'CERTIFICATE BY CHARTERED ACCOUNTANT' (+3,70)
print '(To be submitted in case of employers employing 40 or more employees)' (+1,60)
let $Cert_Str1 = 'Certified that I have verified the above return from the Records & Registers of M/s .............................................................................................................. '
let $Cert_Str2 = 'and found it to be correct.'
let $Cert_Srt = $Cert_Str1 || $Cert_Str2
print $Cert_Srt (+2,{Col_3c}) wrap 219 2
print 'Signature & Seal of the Chartered Accountant' (+5,{Col_15a})
print 'with membership No.'(+1,{Col_15a})
print 'Important Instructions :Information to be given in "Remarks Column (No. 9)" '(+3,{Col_1}) BOLD
let $str4 = 'If any I.P. is appointed for the first time and/or leaves during '
let $str4 = $str4 ||'the contribution period,indicate "A.......(date)" and/or "L.......(date)".'
print '(i)' (+1, {Col_1})
print $str4 (, {Col_3c}) wrap 165 3
print '(ii)'(+1, {Col_1})
print 'Please indicate Insurance Nos. in ascending order.' (,{Col_3c})
print '(iii)'(+1, {Col_1})
print 'Figures in columns 4, 5 and 6 shall be in respect of wage periods ended during the contribution period.' (,{Col_3c})
print '(iv)'(+1, {Col_1})
print 'Invariably strike totals of columns 4, 5 and 6 of the Return.' (,{Col_3c})
print '(v)'(+1, {Col_1})
print 'No overwriting shall be made. Any corrections, if made, should be signed by the employer.' (,{Col_3c})
print '(vi)'(+1, {Col_1})
print 'Every page of this Return should bear full signature and rubber stamp of the employer.' (,{Col_3c})
print '(vii)'(+1, {Col_1})
print 'Daily wages in column 7 of the return shall be calculated by dividing figures in column 5 by figures in column 4 to two decimal places.' (,{Col_3c})
print '' (+1,{Col_1})
print 'For *CP ending 31st March, due date is 12th May'  (+1,{Col_1})
print 'For CP ending 30th September, due date is 11th November.'  (+1,{Col_1})


End-Procedure !Print-Form6
!********************************************************************************
Begin-Procedure Print-Totals

         let #employer_contrib = round(((#challan_total * 0.475)/0.65),2)
         let #employee_contrib = round(((#challan_total * 0.175)/0.65),2)
         string $TOTAL_lbl #challan_total $TOTAL1_lbl #employer_contrib $TOTAL2_lbl $TOTAL3_lbl #employee_contrib $TOTAL4_lbl by ' ' into $TotalString
End-Procedure !Print-Totals
!********************************************************************************
Begin-Procedure Print-Rpt-Flds
         new-page
         Do header-page4
         Do header-page2
         Let #line = 5
         Let #j = 0
         print ' '                                 (+1,1,1)
         Let #line = #line + 1
         let #slno = 0

 While #j <= #i

         ADD 1 TO #slno
         print #slno (+1,4,) edit 9999
         Get $insno $Finsname $Employeeid #wages #cont #workdays $Dispensary   from cntrbtn(#j)  insno Finsname Employeeid wages cont workdays Dispensary
         print $insno                              (,12,)
         print #workdays                           (,50)   edit 9,99,999
         Let #TWdays = #TWdays + #workdays
         if #workdays = 0
                let #avgdlywages = #wages
         else
                let #avgdlywages=#wages/#workdays
         end-if
         Let #Rn-avgdlywages = round(#avgdlywages, 2)
         print #Rn-avgdlywages                       (,{Col_16})!
         Let #TAvg-wages = #TAvg-wages + #Rn-avgdlywages
         print #wages                              (,70,)  edit 9,99,999.99
         Let #Twages = #Twages + #wages
         print #cont                               (,{Col_14},)  edit 9,99,999.99
         Let #TCont = #TCont + #cont

         do Hire-Employees
         do Terminated-Employees

         if $rmks2 = 'X' and $rmks1 <> 'X'
         Let $EFFDT1 = &HIR.EFFDT

         Move $EFFDT1 to $EFFDT1_str 'MM/DD/YYYY'
         Print $EFFDT1_str (,162,)

         End-if

         Let $rmks2 = 'Y'


         if  $rmks1 = 'X'

         Let $EFFDT1 = &TRM.EFFDT

         Move $EFFDT1 to $EFFDT1_str 'MM/DD/YYYY'


         Print 'No'   (,126,)
         Print $EFFDT1_str (,162,)

         else
         Print 'Yes'    (,126,)
         End-if

         Let $rmks1 = 'Y'

         Let $Finsname=ltrim(rtrim($Finsname,' '),' ')
         let $Finsname1 = RTRIM(LTRIM(SUBSTR($Finsname,1,18),' '), ' ')
         let $Finsname2 = RTRIM(LTRIM(SUBSTR($Finsname,19,18), ' '), ' ')
         let $Finsname3 = RTRIM(LTRIM(SUBSTR($Finsname,37,19), ' '), ' ')


         let $Dispensary = ltrim(rtrim($Dispensary,' '),' ')
         let $Dispensary1 = ltrim(rtrim(substr($dispensary,1,17),' ' ), ' ')
         let $dispensary2 = ltrim(rtrim(substr($dispensary,18,length($dispensary)-17),' ' ), ' ')

         If LENGTH($Finsname) <= 18 and length($Dispensary) <= 17
            print $Finsname                             (,{Col_5},)
            print $Dispensary                           (,135,)
         end-if


         IF LENGTH($Finsname) > 18 and LENGTH($Finsname) < 37 and length($Dispensary) <= 17
            print $Finsname1                            (,{Col_5},)
            print $Dispensary                           (,135,)
            print $Finsname2                            (+1,{Col_5},)
         End-if

         IF LENGTH($Finsname) >= 37 and length($Dispensary) <= 17
            print $Finsname1                            (,{Col_5},)
            print $Dispensary                           (,135,)
            print $Finsname2                            (+1,{Col_5},)
            print $Finsname3                            (+1,{Col_5},)
         End-if

         IF LENGTH($Finsname) <= 18 and length($Dispensary) >17
            print $Finsname                             (,{Col_5},)
            print $Dispensary1                          (,135,)
            print $Dispensary2                          (+1,135,)
         End-if

         IF LENGTH($Finsname) > 18 and LENGTH($Finsname) < 37 and length($Dispensary) > 17
            print $Finsname1                            (,{Col_5},)
            print $Dispensary1                          (,135,)
            print $Finsname2                            (+1,{Col_5},)
            print $Dispensary2                          (,135,)
         End-if

         IF LENGTH($Finsname) >= 37 and length($Dispensary) > 17
            print $Finsname1                            (,{Col_5},)
            print $Dispensary1                          (,135,)
            print $Finsname2                            (+1,{Col_5},)
            print $Dispensary2                          (,135,)
            print $Finsname3                            (+1,{Col_5},)
         End-if

         If LENGTH($Finsname) <= 18 and length($Dispensary) <= 17
         Add 1 To #line
         end-if

         IF LENGTH($Finsname) > 18 and LENGTH($Finsname) < 37 and length($Dispensary) <= 17
         Add 2 To #line
         End-if

         IF LENGTH($Finsname) >= 37 and length($Dispensary) <= 17
         Add 3 to #line
         End-if

         IF LENGTH($Finsname) <= 18 and length($Dispensary) >17
         Add 2 To #line
         end-if

         IF LENGTH($Finsname) > 18 and LENGTH($Finsname) < 37 and length($Dispensary) > 17
         Add 2 To #line
         end-if

         IF LENGTH($Finsname) >= 37 and length($Dispensary) > 17
         Add 3 To #line
         End-if


    IF #line > 35
         GRAPHIC                                   (0,5,173) horz-line
         Do Print-Vert-Linesdd
         new-page
         Do header-page2
         Let #line = 5
    End-If
         Add 1 To #j
 End-While

          let #crln = #line + 10
          do Print-Vert-Lines
         GRAPHIC                                   ( #crln,5,173) horz-line
         Print  $Sum_Total_lbl  ( +1,13)
         Print  #TWdays   (,49)   edit 99,99,999
         Print  #TAvg-wages  (,{Col_16})
         Print  #Twages    (,70,)  edit 99,99,999.99
         Print  #TCont    (,{Col_14},)  edit 99,99,999.99
         GRAPHIC                                   (,5,173) horz-line
         print $SIGNATURE_lbl                     (+3,{Col_15a})
         IF #current-line > 45
                new-page
                let #sn = 5
            else
                let #sn = #current-line
                let #sn = #sn + 1
         End-If
          print '*Date of appointment and leaving the job may be given in remarks column.' (#sn,5)
          print '(FOR OFFICIAL USE)' (+2,{Col_12})
          print ' 1.  Entitlement position marked.' (+1,{Col_1})
          print ' 2.  Total of Col. 5 of Return checked and Found correct/correct amount is indicated.' (+1,{Col_1})
          print ' 3.  Checked the amount of Employer''s/Employee''s contribution paid which is in order / observation memo enclosed.' (+1,{Col_1})
          print $CNTSIGNATURE_lbl  (+2,{Col_15a})
          print '.................................................................'(, 127)
          print 'U.D.C'   (+2, 5)
          Print 'Head Clerk' (,{Col_12})
          Print 'Branch Officer' (,{Col_19}

End-Procedure !Print-Rpt-Flds

!***********************************************************************************
Begin-Procedure header-page3
        GRAPHIC                                 (2,10,147)    horz-line
        print $SERIAL_lbl                       (5,12)
        print $MONTH_lbl                        (,30)
        print $DATE_OF_CHALLAN_lbl              (,{Col_9})
        print $AMOUNT_lbl                       (,{Col_14})
        print $BANK_NAME_lbl                    (,{Col_16})
        GRAPHIC                                 (0,10,147)      horz-line
End-Procedure !header-page3


!***********************************************************************************
Begin-Procedure header-page2
        GRAPHIC                                  (7,5,173)    horz-line
        print $SERIAL_lbl                        (10,6)
        print $INSURANCE_NO_lbl                  (, 13)
        print $INSURED_NAME_lbl                  (,{Col_5})
        print 'Person'                           (,39)
        print $DAYS_WAGES_PAID_lbl               (,{Col_8})
        print $AMOUNT_WAGES_PAID_lbl             (,70)
        print $EMPLOYEE_CONTRIBUT_lbl            (,87)
        print $AVERAGE_DAILY_lbl                 (,103)
        print $INSUR_WAGE_CELING_lbl             (,123)
        print $DISPENSARY_lbl                    (,140)
        print $REMARKS_lbl                       (,162)
        print $NUMBER_lbl                        (+1,13)
        print $WAGES_PAID_lbl                    (,{Col_8})
        print $AMOUNT_WAGES_PAID1_lbl            (,70)
        print $CONTRIBUTION_lbl                  (,87)
        print $AVERAGE_DAILY1_lbl                (,103)
        print $INSUR_WAGE_CELING1_lbl            (,123)
        print $AMOUNT_WAGES_PAID2_lbl            (+1,74)
        print $DEDUCTED_lbl                      (,87)
        print $INSUR_WAGE_CELING2_lbl            (,123)
        GRAPHIC                                  (+1,5,173)       horz-line
        print $ONE_lbl                           (+1,7)
        print $TWO_lbl                           (,17)
        print $THREE_lbl                         (,33)
        print $FOUR_lbl                          (,57)
        print $FIVE_lbl                          (,{Col_12a})
        print $SIX_lbl                           (,90)
        print $SEVEN_lbl                         (,110)
        print $EIGHT_lbl                         (,127)
        print $NINE_lbl                          (,144)
        print $TEN_lbl                           (,165)
        GRAPHIC                                  (+1,5,173)        horz-line

End-Procedure !header-page2
!********************************************************************************

!***********************************************************************************
Begin-Procedure header-page4
  alter-printer  point-size=12  font=4
   print 'EMPLOYEES'' STATE INSURANCE CORPORATION' (+2,60) BOLD
   alter-printer  point-size=8 font=4
   print  'Employer''s Name and Address: ' (+2,5)

     Let $PRINCIPAL-EMP-NAME = ltrim(rtrim($PRINCIPAL-EMP-NAME,' '),' ')
     Let $PRINCIPAL_FIRST_NAME = ltrim(rtrim($PRINCIPAL_FIRST_NAME,' '),' ')
     Let $PRINCIPAL_MIDDLE_NAME= ltrim(rtrim($PRINCIPAL_MIDDLE_NAME,' '),' ')
     Let $PRINCIPAL_LAST_NAME = ltrim(rtrim($PRINCIPAL_LAST_NAME,' '),' ')

    LET $PRINCIPAL-EMP-NAME  = $PRINCIPAL_FIRST_NAME || ' ' ||  $PRINCIPAL_MIDDLE_NAME || ' ' || $PRINCIPAL_LAST_NAME
    Let $EST_ADDRESS1 = ltrim(rtrim($EST_ADDRESS1,' '),' ')
    Let $EST_ADDRESS2 = ltrim(rtrim($EST_ADDRESS2 ,' '),' ')
    Let $EST_ADDRESS3 = ltrim(rtrim($EST_ADDRESS3 ,' '),' ')
    Let $EST_ADDRESS4 = ltrim(rtrim($EST_ADDRESS4 ,' '),' ')
    Let $EST_ADDRESS5 = ltrim(rtrim($EST_ADDRESS5 ,' '),' ')
    Let $EST_CITY     = ltrim(rtrim($EST_CITY ,' '),' ')
    Let $EST_STATE    = ltrim(rtrim($EST_STATE ,' '),' ')
    Let $EST_COUNTRY  = ltrim(rtrim($EST_COUNTRY ,' '),' ')
    Let $est_company  = ltrim(rtrim($est_company  ,' '),' ')

    if $EST_ADDRESS1 <> ''
    let $COM-NAME = $COM-NAME ||  $EST_ADDRESS1 || ', '
    end-if
    if $EST_ADDRESS2 <> ''
    let $COM-NAME = $COM-NAME ||  $EST_ADDRESS2  || ', '
    end-if
    if $EST_ADDRESS3  <> ''
    let $COM-NAME = $COM-NAME ||  $EST_ADDRESS3  || ', '
    end-if
    if $EST_ADDRESS4 <> ''
    let $COM-NAME = $COM-NAME ||  $EST_ADDRESS4  || ', '
    end-if
    if $EST_ADDRESS5  <> ''
    let $COM-NAME = $COM-NAME ||  $EST_ADDRESS5  || ', '
    end-if

    if $EST_CITY  <> ''
    let $COM-NAME = $COM-NAME ||  $EST_CITY  || ', '
    end-if

    if $EST_STATE  <> ''
    let $COM-NAME = $COM-NAME ||  $EST_STATE || ', '
    end-if
    if $EST_COUNTRY <> ''
    let $COM-NAME = $COM-NAME ||  $EST_COUNTRY
    end-if

   LET $COM-NAME = $est_company  ||  ', ' ||$COM-NAME
  print $COM-NAME (,32)   !wrap 170 1
  print  'Employer''s Code No....................................Period from..............................................' (+1,5)
  print $emp_code  (0, 25)
  print $PERIOD                            (,52)

End-Procedure !header-page4
!********************************************************************************
Begin-Procedure Deposit-one

        print $month                              (,30)
        Move $depostdt to $depo_str_dt 'DD/MM/YYYY'
        print $depo_str_dt                           (,{Col_9})
        print #amount                            (,{Col_14})
        Let #TAmnt = #TAmnt + #amount
        print $bankdesc                           (,102)
        print $branchdesc                         (,117)

End-Procedure !Deposit-one
!************************************************************************************
Begin-Procedure Deposit-two

        GRAPHIC                                  (,{Col_5},10)      horz-line
        print $depstdt                           (,{Col_5})
        print $CHALLAN_RS_lbl                    (,{Col_11})
        print #amount                            (,{Col_14})
        GRAPHIC                                  (,{Col_14},15)     horz-line
End-Procedure  !Deposit-two
!*********************************************************************************
Begin-Procedure Deposit-three

        GRAPHIC                                  (,{Col_5},10)      horz-line
        print $depstdt                           (,{Col_5})
        print $CHALLAN_RS_lbl                    (,{Col_11})
        print #amount                            (,{Col_14})
        GRAPHIC                                  (,{Col_14},15)     horz-line
End-Procedure  !Deposit-three
!**************************************************************************************
Begin-Procedure Deposit-four

        GRAPHIC                                  (,{Col_5},10)      horz-line
        print $depstdt                           (,{Col_5})
        print $CHALLAN_RS_lbl                    (,{Col_11})
        print #amount                            (,{Col_14})
        GRAPHIC                                  (,{Col_14},15)     horz-line
End-Procedure   !Deposit-four
!**************************************************************************************
Begin-Procedure Deposit-five

        GRAPHIC                                  (,{Col_5},10)      horz-line
        print $depstdt                           (,{Col_5})
        print $CHALLAN_RS_lbl                    (,{Col_11})
        print #amount                            (,{Col_14})
        GRAPHIC                                  (,{Col_14},15)     horz-line
End-Procedure  !Deposit-five
!**************************************************************************************
Begin-Procedure Deposit-six

        GRAPHIC                                  (,{Col_5},10)      horz-line
        print $depstdt                           (,{Col_5})
        print $CHALLAN_RS_lbl                    (,{Col_11})
        print #amount                            (,{Col_14})
        GRAPHIC                                  (,{Col_14},15)     horz-line
End-Procedure !Deposit-six
!**************************************************************************************
Begin-Procedure Print-Vert-Lines

   Let #colm = 5
   Let #line = #line + 1
   let #more = #line + 3
   GRAPHIC (7,#colm,#more) VERT-LINE
   add 6 to #colm
   GRAPHIC (7,#colm,#more) VERT-LINE
   add 12 to #colm
   GRAPHIC (7,#colm,#more) VERT-LINE
   add 24 to #colm
   GRAPHIC (7,#colm, #more ) VERT-LINE
   add 20 to #colm
   GRAPHIC (7,#colm, #more) VERT-LINE
   add 17 to #colm
   GRAPHIC (7,#colm, #more) VERT-LINE
    add 17 to #colm
   GRAPHIC (7,#colm, #more) VERT-LINE
   add 21 to #colm
   GRAPHIC (7,#colm, #more ) VERT-LINE
   add 12 to #colm
   GRAPHIC (7,#colm, #more) VERT-LINE
   add 23 to #colm
   GRAPHIC (7,#colm, #more) VERT-LINE
   add 21 to #colm
   GRAPHIC (7,#colm,#more) VERT-LINE
   let #footerline = #current-line
End-Procedure !Print-Vert-Lines


!**************************************************************************************
Begin-Procedure Print-Vert-Linesdd
   Let #colm = 5
   Let #line = #line + 3

   GRAPHIC (7,#colm,#line) VERT-LINE
   add 6 to #colm
   GRAPHIC (7,#colm,#line) VERT-LINE
   add 12 to #colm
   GRAPHIC (7,#colm,#line) VERT-LINE
   add 24 to #colm
   GRAPHIC (7,#colm, #line ) VERT-LINE
   add 20 to #colm
   GRAPHIC (7,#colm, #line) VERT-LINE
   add 17 to #colm
   GRAPHIC (7,#colm, #line) VERT-LINE
    add 17 to #colm
   GRAPHIC (7,#colm, #line) VERT-LINE
   add 21 to #colm
   GRAPHIC (7,#colm, #line ) VERT-LINE
   add 12 to #colm
   GRAPHIC (7,#colm, #line) VERT-LINE
   add 23 to #colm
   GRAPHIC (7,#colm,#line) VERT-LINE
   add 21 to #colm
   GRAPHIC (7,#colm,#line) VERT-LINE
End-Procedure !Print-Vert-Linesdd


!**************************************************************************************
Begin-Procedure Print-Vert-Lines2
   Let #colm = 10
   Let #line = #line + 4
   let #prln = #prln - 2
   GRAPHIC (2,#colm,#prln) VERT-LINE
   add 10 to #colm
   GRAPHIC (2,#colm,#prln) VERT-LINE
   add 30 to #colm
   GRAPHIC (2,#colm,#prln) VERT-LINE
   add 30 to #colm
   GRAPHIC (2,#colm,#prln) VERT-LINE
   add 20 to #colm
   GRAPHIC (2,#colm,#prln) VERT-LINE
   add 57 to #colm
   GRAPHIC (2,#colm,#prln) VERT-LINE
   let #prln = #prln + 2
   GRAPHIC                                  (#prln,10,147)     horz-line
End-Procedure !Print-Vert-Lines

!****************************************************************************************
Begin-Procedure Get-Challan-Total
Begin-Select
SUM(AB.AMOUNT) &amt_total
 Move &amt_total to #challan_total
FROM   PS_GPIN_YE_F6 AB
WHERE AB.ESTABID = $sav_estabid
AND AB.CAL_PRD_ID=&RNCT.CAL_PRD_ID

End-Select
End-Procedure ! Get-Challan-Total
!***********************************************************************************
Begin-Procedure Get-Bill-Det
Let #challan_seq_num = 0
Let #prln = 5
Begin-Select
AB.DEPOSIT_DATE
AB.AMOUNT
AB.GPIN_MONTH
AB.BANK_CD
AB.BRANCH_EC_CD
 Move &AB.DEPOSIT_DATE TO $depstdt 'MM/DD/YYYY'
 Move &AB.DEPOSIT_DATE TO $depostdt
 Move &AB.AMOUNT TO #amount
 Move &AB.GPIN_MONTH TO $month
 Move &AB.BANK_CD TO $bankcode
 Move &AB.BRANCH_EC_CD TO $branch
 do Bank-Info
 extract $depst_mth from $depstdt 0 2
 Let #challan_seq_num = #challan_seq_num + 1
 Add 1 to #prln
        print #challan_seq_num                   (#prln ,12)

        print '.'                                (,{Col_14})

 evaluate $depst_mth
    when = '04'
    when = '10'
       Do Deposit-one
       break
    when = '05'
    when = '11'
       Do Deposit-one
       break
    when = '06'
    when = '12'
       Do Deposit-one
       break
    when = '07'
    when = '01'
       Do Deposit-one
       break
    when = '08'
    when = '02'
       Do Deposit-one
       break
    when = '03'
    when = '09'
       Do Deposit-one
       break
 end-evaluate
FROM   PS_GPIN_YE_F6 AB
WHERE AB.ESTABID = $sav_estabid
AND AB.CAL_PRD_ID=&RNCT.CAL_PRD_ID
AND   AB.DEPOSIT_DATE >= $begin_date
AND   AB.DEPOSIT_DATE <= $end_date
End-Select
End-Procedure ! Get-Bill-Det

!***********************************************************************************
Begin-Procedure  Bank-Info
Begin-Select

BK.BANK_NM
 Move &BK.BANK_NM TO $bankdesc
FROM   PS_BANK_EC_TBL BK
WHERE BK.BANK_CD = $bankcode
End-Select

Begin-Select

BR.DESCR
 Move &BR.DESCR TO $branchdesc
FROM   PS_BANK_BRANCH_TBL BR
WHERE BR.BRANCH_EC_CD = $branch
End-Select

End-Procedure   !Bank-Info


!**************************************************************************************
!***********************************************************************************
Begin-Procedure  Get-Employer-Det

    let $est_company= ''

Begin-Select
ESTBL.GPIN_REG_NAME
   Move &estbl.gpin_reg_name To $est_company

ESTBL.GPIN_ESI_NBR
   Move &estbl.gpin_esi_nbr To $emp_code

ESTBL.GPIN_ESI_OFFICE
   Move &estbl.gpin_esi_office To $esi_brch_offc

EST.COUNTRY
   move &EST.country to $est_country
EST.ADDRESS1
   move &EST.address1 to $est_address1
   let $est_address1 = substr($est_address1,0,30)
EST.ADDRESS2
   if rtrim(&EST.address2,' ')<>''
      move &EST.address2 to $est_address2
      let $est_address2 = substr($est_address2,0,30)
   else
      move '' to $est_address2
   end-if
EST.ADDRESS3
   if rtrim(&EST.address3,' ')<>''
      move &EST.address3 to $est_address3
      let $est_address3 = substr($est_address3,0,30)
   else
      move '' to $est_address3
   end-if
EST.ADDRESS4
   if rtrim(&EST.address4,' ')<>''
      move &EST.address4 to $est_address4
      let $est_address4 = substr($est_address4,0,30)
   else
      move '' to $est_address4
   end-if
EST.CITY
   if rtrim(&EST.city,' ')<>''
         move &EST.city to $est_city
   else
         move '' to $est_city
   end-if
EST.STATE
   if rtrim(&EST.state,' ')<>''
         move &EST.state to $est_state
   else
         move '' to $est_state
   end-if
EST.NUM1
   if rtrim(&EST.num1,' ')<>''
      move &EST.num1 to $est_num1
   else
      move '' to $est_num1
   end-if
EST.NUM2
   if rtrim(&EST.num2,' ')<>''
      move &EST.num2 to $est_num2
   else
      move '' to $est_num2
   end-if
EST.HOUSE_TYPE
   if rtrim(&EST.house_type,' ')<>''
      move &EST.house_type to $est_house_type
   else
      move '' to $est_house_type
   end-if
EST.ADDR_FIELD1
   if rtrim(&EST.addr_field1,' ')<>''
      move &EST.addr_field1 to $est_afield1
   else
      move '' to $est_afield1
   end-if
EST.ADDR_FIELD2
   if rtrim(&EST.addr_field2,' ')<>''
      move &EST.addr_field2 to $est_afield2
   else
      move '' to $est_afield2
   end-if
EST.ADDR_FIELD3
   if rtrim(&EST.addr_field3,' ') <> ''
      move &EST.addr_field3 to $est_afield3
   else
      move '' to $est_afield3
   end-if

FROM PS_ESTAB_TBL EST, PS_ESTAB_TBL_GPIN ESTBL
WHERE EST.ESTABID = $sav_estabid
AND   ESTBL.ESTABID = EST.ESTABID
AND EST.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
                        WHERE ESTABID = EST.ESTABID
                        AND   EFFDT <= $end_date)
AND ESTBL.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
                        WHERE ESTABID = ESTBL.ESTABID
                        AND   EFFDT <= $end_date)

End-Select
End-Procedure   !Get-Employer-det
!**************************************************************************************
Begin-Procedure GET-PRINCIPAL-EMP-DET
begin-select

JOBCODE.DESCR
NAMES.LAST_NAME
NAMES.FIRST_NAME
NAMES.MIDDLE_NAME

    let $designation = &JOBCODE.DESCR
    LET $PRINCIPAL_LAST_NAME  =  &NAMES.LAST_NAME
    LET $PRINCIPAL_FIRST_NAME  = &NAMES.FIRST_NAME
    LET $PRINCIPAL_MIDDLE_NAME  = &NAMES.MIDDLE_NAME

FROM PS_ESTAB_TBL_GPIN E, PS_NAMES NAMES, PS_JOB JOB, PS_JOBCODE_TBL JOBCODE
WHERE E.EMPLID = NAMES.EMPLID
AND E.ESTABID = $sav_estabid
AND E.EMPLID = JOB.EMPLID
AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
               WHERE ESTABID = E.ESTABID
               AND EFFDT <= $end_date)
AND JOB.EMPL_RCD = 0
AND JOB.JOBCODE = JOBCODE.JOBCODE
AND JOB.EMPLID = NAMES.EMPLID
AND NAMES.NAME_TYPE = 'PRI'
AND JOBCODE.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
               WHERE SETID = JOBCODE.SETID
               AND JOBCODE = JOBCODE.JOBCODE
               AND EFFDT <= $end_date)
AND NAMES.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
               WHERE EMPLID = NAMES.EMPLID
               AND NAME_TYPE = NAMES.NAME_TYPE
               AND EFFDT <= $end_date)
AND JOB.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = E.EMPLID
               AND EMPL_RCD = 0
               AND EFFDT <= $end_date)
AND JOB.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
                WHERE EMPLID = E.EMPLID
                AND EMPL_RCD = 0
                AND EFFDT = JOB.EFFDT)

End-select
End-Procedure !
!**************************************************************************************
Begin-Procedure GET-PRINCIPAL-EMP-ADDR
begin-select
ADDR.ADDRESS1
ADDR.ADDRESS2
ADDR.ADDRESS3
ADDR.ADDRESS4
ADDR.CITY
ADDR.STATE
ADDR.POSTAL
    LET $EMP-ADDR1=&ADDR.ADDRESS1
    LET $EMP-ADDR2=&ADDR.ADDRESS2
    LET $EMP-ADDR3=&ADDR.ADDRESS3
    LET $EMP-ADDR4=&ADDR.ADDRESS4
    Let $ADDR.CITY =ltrim(rtrim(&ADDR.CITY,' '),' ')
    Let $ADDR.STATE =ltrim(rtrim(&ADDR.STATE ,' '),' ')
    Let $ADDR.POSTAL =ltrim(rtrim(&ADDR.POSTAL,' '),' ')
    LET $EMP-ADDR5 = $ADDR.CITY || ' ' || $ADDR.POSTAL || ' ' || $ADDR.STATE

FROM PS_ESTAB_TBL_GPIN E, PS_PERSON_ADDRESS ADDR
WHERE E.EMPLID = ADDR.EMPLID
AND E.ESTABID = $sav_estabid
AND E.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN E1
               WHERE E1.ESTABID = E.ESTABID
               AND E1.EFFDT <= $end_date)
AND ADDR.ASOFDATE=(
        SELECT MAX(ASOFDATE) FROM PS_PERSON_ADDRESS ADDR1
        WHERE ADDR1. EMPLID=ADDR.EMPLID AND ADDR1.ASOFDATE<=$end_date AND ADDR1.ADDRESS_TYPE = 'HOME')
AND ADDR.ADDRESS_TYPE = 'HOME'
end-select
End-Procedure  !GET-PRINCIPAL-EMP-ADDR
!**************************************************************************************
Begin-Procedure Get-Assessment-Period
           Let $TDT = datetostr($end_date,'mm/dd/yyyy')
           Move $begin_date to $begin_str_dt 'DD/MM/YYYY'
           Move $end_date to $end_str_dt 'DD/MM/YYYY'
           Let $PERIOD =  $begin_str_dt || ' To ' || $end_str_dt

End-Procedure  !Get-Assessment-Period
!**************************************************************************************
Begin-Procedure Get-Insur-No

Begin-Select
ESI.EMPLID
ESI.EFFDT
ESI.ESTABID
ESI.GPIN_REG_NBR
ESI.GPIN_HOSP_NAME

  Let cntrbtn.insno(#i) = &ESI.GPIN_REG_NBR
  let cntrbtn.Dispensary(#i) = &ESI.GPIN_HOSP_NAME

FROM PS_GPIN_ESI_ENROLL ESI
WHERE ESI.EMPLID = &TMP.EMPLID
AND ESI.EFFDT = (SELECT MAX(EFFDT) FROM PS_GPIN_ESI_ENROLL
                 WHERE EMPLID = ESI.EMPLID
                 AND EFFDT <= $end_date)
End-Select

Begin-Select DISTINCT
EMPNME.NAME
EMPNME.FIRST_NAME
EMPNME.MIDDLE_NAME
EMPNME.LAST_NAME
EMPNME.EMPLID

  Let cntrbtn.Finsname(#i) = &empnme.NAME
  Let cntrbtn.Employeeid(#i) = &empnme.EMPLID


FROM PS_NAMES EMPNME
WHERE EMPNME.EMPLID = &TMP.EMPLID
AND EMPNME.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
                   WHERE EMPLID =  EMPNME.EMPLID
                   AND EFFDT <= $end_date)
End-Select
End-Procedure !Get-Insur-No


Begin-Procedure Terminated-Employees
Begin-Select
TRM.EMPLID
TRM.EFFDT

    Let $rmks1 =  'X'

FROM
PS_JOB TRM
where
TRM.EMPLID = $Employeeid
AND TRM.EMPL_RCD = 0
AND TRM.ACTION in ('RET', 'TER')

AND TRM.EFFDT = (SELECT MAX(TERM1.EFFDT) FROM

            PS_JOB TERM1
            where
            TERM1.EMPLID = TRM.EMPLID
            AND TERM1.EMPL_RCD = 0
            AND TERM1.ACTION in ('RET', 'TER')
            AND TERM1.EFFDT < $end_date)

End-Select
End-Procedure
!*******************************************************************************************
Begin-Procedure Hire-Employees

Begin-Select
HIR.EMPLID
HIR.EFFDT

    Let $rmks2 =  'X'

FROM
PS_JOB HIR
where
HIR.EMPLID = $Employeeid
AND HIR.EMPL_RCD = 0
AND HIR.ACTION in ('HIR')

AND HIR.EFFDT = (SELECT MAX(HIR1.EFFDT) FROM

            PS_JOB HIR1
            where

            HIR1.EMPLID = HIR.EMPLID
            AND HIR1.EMPL_RCD = 0
            AND HIR1.ACTION in ('HIR')
            AND HIR1.EFFDT >= $Begin_date And
             HIR1.EFFDT <= $end_date)

End-Select
End-Procedure
!**********************************************************************************************
Begin-Procedure Get-Translate-Values
   Do Init_Report_Translation ($ReportID,$Language_Code)
   Do Append_Report_Translation ('GPINYE06')
   Do Get_Field_Information ('GPINYE06','REPORT_TITLE',          $REC_RPT,                  #DW)
   Do Get_Field_Information ('GPINYE06','NAME_FACTORY',          $NAME_FACTORY_lbl,         #DW)
   Do Get_Field_Information ('GPINYE06','PARTICULAR_EMPLOYR',    $PARTICULAR_EMPLOYR_lbl,   #DW)
   Do Get_Field_Information ('GPINYE06','NAME',                  $NAME_lbl,                 #DW)
   Do Get_Field_Information ('GPINYE06','DESIGNATION',           $DESIGNATION_lbl,          #DW)
   Do Get_Field_Information ('GPINYE06','RES_ADD',               $RES_ADD_lbl,              #DW)
   Do Get_Field_Information ('GPINYE06','PERIOD',                $PERIOD_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','PERIOD_TO',             $PERIOD_TO_lbl,            #DW)
   Do Get_Field_Information ('GPINYE06','TOTAL',                 $TOTAL_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','PROFITS1',              $PROFITS1_lbl,             #DW)
   Do Get_Field_Information ('GPINYE06','TOTAL',                 $TOTAL_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','TOTAL1',                $TOTAL1_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','TOTAL2',                $TOTAL2_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','TOTAL3',                $TOTAL3_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','TOTAL4',                $TOTAL4_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','CHALLAN',               $CHALLAN_lbl,              #DW)
   Do Get_Field_Information ('GPINYE06','CHALLAN_RS',            $CHALLAN_RS_lbl,           #DW)
   Do Get_Field_Information ('GPINYE06','PLACE',                 $PLACE_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','DATE',                  $DATE_lbl,                 #DW)
   Do Get_Field_Information ('GPINYE06','TOTAL_AMNT',            $Total_Amnt_lbl,           #DW)
   Do Get_Field_Information ('GPINYE06','SIGNATURE',             $Signature_lbl,            #DW)
   Do Get_Field_Information ('GPINYE06','CNTR_SIGNATURE',        $CNTSIGNATURE_lbl,         #DW)
   Do Get_Field_Information ('GPINYE06','DESIGNATION1',          $DESIGNATION1_lbl,         #DW)
   Do Get_Field_Information ('GPINYE06','STAMP',                 $STAMP_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','SERIAL_NO',             $SERIAL_NO_lbl,            #DW)
   Do Get_Field_Information ('GPINYE06','INSURANCE_NO',          $INSURANCE_NO_lbl,         #DW)
   Do Get_Field_Information ('GPINYE06','INSURED_NAME',          $INSURED_NAME_lbl,         #DW)
   Do Get_Field_Information ('GPINYE06','DAYS_WAGES_PAID',       $DAYS_WAGES_PAID_lbl,      #DW)
   Do Get_Field_Information ('GPINYE06','AMOUNT_WAGES_PAID',     $AMOUNT_WAGES_PAID_lbl,    #DW)
   Do Get_Field_Information ('GPINYE06','EMPLOYEE_CONTRIBUT',    $EMPLOYEE_CONTRIBUT_lbl,   #DW)
   Do Get_Field_Information ('GPINYE06','CONTRIBUTION',          $CONTRIBUTION_lbl,         #DW)
   Do Get_Field_Information ('GPINYE06','AVERAGE_DAILY',         $AVERAGE_DAILY_lbl,        #DW)
   Do Get_Field_Information ('GPINYE06','INSUR_WAGE_CELING',     $INSUR_WAGE_CELING_lbl,    #DW)
   Do Get_Field_Information ('GPINYE06','DISPENSARY',            $DISPENSARY_lbl,           #DW)
   Do Get_Field_Information ('GPINYE06','REMARKS',               $REMARKS_lbl,              #DW)
   Do Get_Field_Information ('GPINYE06','NUMBER',                $NUMBER_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','AMOUNT_WAGES_PAID1',    $AMOUNT_WAGES_PAID1_LBL,   #DW)
   Do Get_Field_Information ('GPINYE06','AMOUNT_WAGES_PAID2',    $AMOUNT_WAGES_PAID2_LBL,   #DW)
   Do Get_Field_Information ('GPINYE06','WAGES_PAID',            $WAGES_PAID_lbl,           #DW)
   Do Get_Field_Information ('GPINYE06','DEDUCTED',              $DEDUCTED_lbl,             #DW)
   Do Get_Field_Information ('GPINYE06','AVERAGE_DAILY1',        $AVERAGE_DAILY1_lbl,       #DW)
   Do Get_Field_Information ('GPINYE06','INSUR_WAGE_CELING1',    $INSUR_WAGE_CELING1_lbl,   #DW)
   Do Get_Field_Information ('GPINYE06','INSUR_WAGE_CELING2',    $INSUR_WAGE_CELING2_lbl,   #DW)
   Do Get_Field_Information ('GPINYE06','DISPENSARY1',           $DISPENSARY1_lbl,          #DW)
   Do Get_Field_Information ('GPINYE06','ONE',                   $ONE_lbl,                  #DW)
   Do Get_Field_Information ('GPINYE06','TWO',                   $TWO_lbl,                  #DW)
   Do Get_Field_Information ('GPINYE06','THREE',                 $THREE_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','FOUR',                  $FOUR_lbl,                 #DW)
   Do Get_Field_Information ('GPINYE06','FIVE',                  $FIVE_lbl,                 #DW)
   Do Get_Field_Information ('GPINYE06','SIX',                   $SIX_lbl,                  #DW)
   Do Get_Field_Information ('GPINYE06','SEVEN',                 $SEVEN_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','SEVEN1',                $SEVEN1_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','EIGHT',                 $EIGHT_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','NINE',                  $NINE_lbl,                 #DW)
   Do Get_Field_Information ('GPINYE06','TEN',                   $TEN_lbl,                  #DW)
   Do Get_Field_Information ('GPINYE06','MONTH',                 $MONTH_lbl,                #DW)
   Do Get_Field_Information ('GPINYE06','DATE_OF_CHALLAN',       $DATE_OF_CHALLAN_lbl,      #DW)
   Do Get_Field_Information ('GPINYE06','AMOUNT',                $AMOUNT_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','BANK_NAME',             $BANK_NAME_lbl,            #DW)
   Do Get_Field_Information ('GPINYE06','SERIAL',                $Serial_lbl,               #DW)
   Do Get_Field_Information ('GPINYE06','SUM_TOTAL',             $Sum_Total_lbl,            #DW)

  Let $ReportID       = 'Form 6'
  Let $ReportTitle    = $REC_RPT
  Let $ReportDate     = $AsOfToday
End-Procedure !Get-Translate-Values
!***********************************************************************
! Additional SQCs included in the report                               *
!***********************************************************************
#include 'datetime.sqc'     !Routines for date and time formatting
#include 'datemath.sqc'     !Date conversion procedures
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
#include 'prcsapi.sqc'      !Replaces stdapi.sqc
#include 'prcslng.sqc'      !Replaces getrplng.sqc
#include 'readxlat.sqc'     !Procedure to read values from xlattable
#include 'reset.sqc'        !Reset printer procedure
#include 'number.sqc'       !Routines to format numbers
#include 'stdapi.sqc'