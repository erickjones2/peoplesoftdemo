!***********************************************************************
!  GPHKEE01: New/Termination Report                                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/18:03:44:26                                 !
!       $Release:  HR92                                                !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************
!  Modification History:                                               *
!                                                                      *
!  Date         Incident                                               *
! ----------    -----------                                            *
! DD/MM/YYYY                                                           *
! 27/05/2003    121757   The SQR has been updated to retrieve the      *
!                        Terminated Employees with in the  selection   *
!                        period                                        *
!                                                                      *
! 13/11/2003   646269000 The SQR has been updated to generate the      *
!                        report for terminated, new and hired employee *
! 14/06/2004   685867000 The SQR has been updated to generate the report*
!                        when the employee is terminated on 1st of the *
!                        month.                                        *
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment
#Include 'setup02.sqc'  ! Portrait Printer and page-size initialization

#define Quote ''''
#define colA 1
#define colB 11
#define colC 15
!#define colD 30
#define colD1 42
#define colD2 52
#define colE 99
#define colF 106
#define colG 126
#define colH 132
#define colI 138
#define colJ 142
#define colK 147
#define colL 154
#define colM 159


begin-setup

  page-size 55 171
  declare printer
      type          = HPLASERJET
      orientation   = LANDSCAPE
      font          = 5
      point-size    = 10
      LINES-INCH    = 5.9
end-setup

begin-report

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  Do Get-Current-DateTime
  do Select-Parameters
  do Init-Report
  do Get-PayEntity-Details
  do Get-PayGroup
  do Print-NoData
  do Reset
  do Delete-RunControl
  do Stdapi-Term
end-Report

Begin-heading 11

move 'GPHKEE01' to $ReportID

#include 'stdhdg01.sqc'

If rtrim($PayEntity, ' ') <> ''
   let $header1 = 'Pay Entity   : ' || $Pyentdescr
   Print $Header1 (+1, {colA})
End-If

If rtrim($FromDate, ' ') <> ''
        do Format-DateTime($FromDate, $Date_From_Conv, {DEFDATE}, '', '')
   let $header2 = 'From : ' || $Date_From_Conv
   Print $Header2 (+1, {colA})
End-If

If rtrim($ToDate, ' ') <> ''
        do Format-DateTime($ToDate, $Date_To_Conv, {DEFDATE}, '', '')
   let $header3 = 'To : ' || $Date_To_Conv
   Print $Header3 (+1, {ColA})
End-If

Let $Curr_Language_Cd = 'ENG'

do Init_Report_Translation ($ReportID, $curr_language_cd)

do Get_Field_Information ($ReportID, 'EMPLID', $Emplid_Title,    #DW)
do Get_Field_Information ($ReportID, 'EMPL_RCD', $Empl_Rcd_Title,  #DW)
do Get_Field_Information ($ReportID, 'NAME', $Name_Title,    #DW)
do Get_Field_Information ($ReportID, 'HKID', $Hkid_Title,    #DW)
do Get_Field_Information ($ReportID, 'HIRE_DT', $Hire_Dt_Title,     #DW)
do Get_Field_Information ($ReportID, 'TERM_DT', $Term_Dt_Title,     #DW)
do Get_Field_Information ($ReportID, 'DEPT', $Dept_Title,     #DW)
do Get_Field_Information ($ReportID, 'JOB_CD', $Job_Cd_Title,     #DW)
do Get_Field_Information ($ReportID, 'PLAN', $Plan_Title,     #DW)
do Get_Field_Information ($ReportID, 'GRADE',$Grade_Title,    #DW)
do Get_Field_Information ($ReportID, 'STEP', $Step_Title,     #DW)
do Get_Field_Information ($ReportID, 'REG_TEMP', $Reg_Temp_Title,     #DW)
do Get_Field_Information ($ReportID, 'FULL_PRT', $Full_Prt_Title,     #DW)
do Get_Field_Information ($ReportID, 'COMPENSATION', $Compensation_Title,     #DW)
do Get_Field_Information ($ReportID, 'ADDRESS', $Address_Title,     #DW)

If $RepType = '10'
   let $header4 = $Hire_Dt_Title
   let $RepTitle = 'New Employees Report'
Else
   let $header4 = $Term_Dt_Title
   let $RepTitle = 'Terminated Employees Report'
End-If
let $Hkid_Title = $Hkid_Title || 'Passport'

print $Emplid_Title       (+2,{ColA})
print $Empl_Rcd_Title     (0,{ColB})
print $Name_Title         (0,{ColC})
print $Hkid_Title         (0,{ColD1})
print $header4            (0,{ColE})
print $Dept_Title         (0,{ColF})
print $Job_Cd_Title       (0,{ColG})
print $Plan_Title         (0,{ColH})
print $Grade_Title        (0,{ColI})
print $Step_Title         (0,{ColJ})
print $Reg_Temp_Title     (0,{ColK})
print $Full_Prt_Title     (0,{ColL})
print $Compensation_Title (0,{ColM})
print $Address_Title      (0,{ColD2})
print ' '                 (+1,)

end-heading
!
!*************************************
! Select-Parameters                  *
! Retrieve Run control parameters    *
!*************************************
Begin-Procedure Select-Parameters
Begin-SELECT
RC.PAY_ENTITY
RC.FROMDATE
RC.TO_DATE
RC.GPHK_NEWTERM_OPTN
     Let $PayEntity = &RC.PAY_ENTITY
     Let $FromDate  = &RC.FROMDATE
     let $ToDate    = &RC.TO_DATE
     let $RepType   = &RC.GPHK_NEWTERM_OPTN

  FROM PS_GPHK_MPF_RUNCTL RC
    WHERE RC.OPRID         = $PRCS_OPRID
        AND RC.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT
End-Procedure
!
!*************************************
! Init-Report                        *
! Initialise Report                  *
!*************************************
Begin-Procedure Init-Report

LET $List = ''''||'D'''||','||''''||'Q'''||','||''''||'R'''||','||''''||'T'''||','||''''||'U'''||','||'''V'''

If $RepType = '10'
   let $ReportTitle = 'New Employees Report'

   !let $where = 'AND JB.EMPL_STATUS NOT IN ('''||'D'||'''||')'

   let $where = 'AND JB.EMPL_STATUS NOT IN ('||$List||') AND JB.LAST_HIRE_DT >= '''||$FromDate||''' AND JB.LAST_HIRE_DT <= '''||$ToDate||''''

Else
   let $ReportTitle = 'Terminated Employees Report'
   let $where = 'AND JB.EMPL_STATUS IN ('||$List||') AND JB.TERMINATION_DT>= '''||$FromDate||''' AND JB.TERMINATION_DT <= '''||$ToDate||''''
End-If

End-Procedure
!
!*************************************
! Get-Employees                      *
! Retrieve New Employees             *
!*************************************
Begin-Procedure Get-Employees

Begin-SELECT
JB.EMPLID
JB.EMPL_RCD
JB.JOBCODE
JB.SAL_ADMIN_PLAN
JB.GRADE
JB.STEP
JB.REG_TEMP
JB.FULL_PART_TIME
JB.COMPRATE
JB.REG_REGION
JB.EFFDT
JB.HIRE_DT
JB.TERMINATION_DT

   Let $Emplid = &JB.EMPLID
   Let #EmplRcd = &JB.EMPL_RCD
   Let $JobCode = &JB.JOBCODE
   Let $Sal_Plan = &JB.SAL_ADMIN_PLAN
   Let $Grade = &JB.GRADE
   Let #Step = &JB.STEP
   Let $Reg_Temp = &JB.REG_TEMP
   Let $Full_Part = &JB.FULL_PART_TIME
   Let #Comprate = &JB.COMPRATE
   Let $RegRegion = &JB.REG_REGION
   IF $RepType='10'
     let $HireDt=&JB.HIRE_DT
   ELSE
   LET $TermDt=&JB.TERMINATION_DT
   END-IF
   if rtrim($HireDt,' ') <> ''
      Do Format-DateTime($HireDt, $HireDt, {DEFDATE},'','')
   End-If
   if rtrim($TermDt,' ') <> ''
      Do Format-DateTime($TermDt, $TermDt, {DEFDATE},'','')
   End-If
   Do Count-Data
   Do Get-Name
   Do Get-EE-ICID-No
   Do Get-EE-PASSPORT-No
   Do Get-Department
   Do Get-Country
   Do Get-Address

   Do Print-Body

FROM PS_JOB JB
WHERE JB.GP_PAYGROUP = $PayGroup
[$where]
AND JB.EFFDT = (SELECT MAX(EFFDT)  FROM PS_JOB JB1
                 WHERE JB1.EMPLID = JB.EMPLID
                 AND JB1.EMPL_RCD = JB.EMPL_RCD
                 AND JB1.EFFDT <= $ToDate)
AND JB.EFFSEQ = (SELECT MAX(JB2.EFFSEQ) FROM PS_JOB JB2
                 WHERE JB2.EMPLID = JB.EMPLID
                 AND JB2.EMPL_RCD = JB.EMPL_RCD
                 AND JB2.EFFDT  = JB.EFFDT )
End-SELECT

End-Procedure
!
!*************************************
! Count-Data                         *
! Keep a counter                     *
!*************************************
Begin-Procedure Count-Data
 let #i = #i + 1
End-Procedure
!
!*************************************
! Get-Name                           *
! Get Name                           *
!*************************************
Begin-Procedure Get-Name
Let $Name = ''
Begin-SELECT
PERS.NAME
   Let $Name = &PERS.NAME
   if length($Name)> 40
      let $Name = substr($Name,1,40)
   end-if
    FROM PS_PERSONAL_VW PERS
 WHERE PERS.EMPLID = $Emplid
End-SELECT
End-Procedure
!
!*************************************
! Get-PayGroup                       *
! Get Pay Group                      *
!*************************************
Begin-Procedure Get-PayGroup
Let $PayGroup = ''
Begin-SELECT
PYGRP.GP_PAYGROUP
   Let $PayGroup = &PYGRP.GP_PAYGROUP
   Do Get-Employees
    FROM PS_GP_PYGRP PYGRP
 WHERE PYGRP.PAY_ENTITY = $PayEntity
End-SELECT
End-Procedure
!
!*************************************
! Print-Body                         *
! Print Body                         *
!*************************************
Begin-procedure Print-Body
   print $Emplid                 (+1,{ColA})
   print #EmplRcd                (0,{ColB})     edit '999'
   print $Name                   (0,{ColC})
   if $EE_IdNo <> ''
      print $EE_IdNo             (0,{ColD1})    edit 'XXXXXXXX(X)'
   end-if
   If $RepType = '10'
      print $HireDt              (0,{ColE})
   Else
      print $TermDt              (0,{ColE})
   End-If
   print $Department             (0,{ColF})
   print $JobCode                (0,{ColG})
   print $Sal_Plan               (0,{ColH})
   print $Grade                  (0,{ColI})
   print #Step                   (0,{ColJ})     edit '99'
   print $Reg_Temp               (0,{ColK})
   print $Full_Part              (0,{ColL})
   print #Comprate               (0,{ColM})
   print $Address1               (0,{ColD2})
   if $EE_IdNo = '' or $EE_IdNo = ' '
      print $EE_PPNo             (,{ColD1})
      print ' '                  (+1,{ColD1})
   else
      print $EE_PPNo             (+1,{ColD1})
   end-if
   if $Address1 = '' or $Address1 = ' '
      print $Address2            (-1,{ColD2})
   else
      print $Address2            (,{ColD2})
   end-if
   if $Address2 = '' or $Address2 = ' '
      print $Address3            (,{ColD2})
   else
      print $Address3            (+1,{ColD2})
   end-if
   if $Address3 = '' or $Address3 = ' '
      print $Address4            (,{ColD2})
   else
      print $Address4            (+1,{ColD2})
   end-if

   print ' '                     (+1,{ColA})
   let $address1 = ''
   let $address2 = ''
   let $address3 = ''
   let $address4 = ''

End-Procedure
!
!*************************************
! Get-EE-ICID-No                     *
! Get Employee IC No or Scheme No    *
!*************************************
Begin-Procedure Get-EE-ICID-No
   Let $EE_IdNo = ''
Begin-SELECT
PN.NATIONAL_ID

   Let $EE_IdNo = RPAD(RTRIM(&PN.NATIONAL_ID,' '),9,' ')

    FROM PS_PERS_NID PN
 WHERE PN.EMPLID = $Emplid
   AND PN.COUNTRY = 'HKG'
   AND PN.PRIMARY_NID = 'Y'
End-SELECT
End-Procedure
!*************************************
! Get-EE-PASSPORT-No                     *
! Get Employee Passport No    *
!*************************************
Begin-Procedure Get-EE-PASSPORT-No
   Let $EE_PPNo = ''
Begin-SELECT
CP.PASSPORT_NBR
   Let $EE_PPNo = RTRIM(&CP.PASSPORT_NBR,' ')

    FROM PS_CITIZEN_PSSPRT CP
 WHERE CP.EMPLID = $Emplid
   AND CP.DEPENDENT_ID = ' '
End-SELECT
End-Procedure

!*************************************
! Get-Department                     *
! Get Department Description         *
!*************************************
!
Begin-Procedure Get-Department
   Let $Department = ''
Begin-SELECT
B.SETID
B.DESCR
B.EFFDT
   Let $Department = &B.DESCR

    FROM PS_JOB A, PS_DEPT_TBL B
 WHERE A.DEPTID = B.DEPTID
 AND A.EMPLID = $Emplid
 AND A.EMPL_RCD = #EmplRcd
 AND A.SETID_DEPT = B.SETID
 AND A.EFFDT = (SELECT MAX(C.EFFDT) FROM PS_JOB C
 WHERE C.EMPLID = A.EMPLID
 AND C.EMPL_RCD = A.EMPL_RCD)
 AND B.EFFDT = (SELECT MAX(D.EFFDT) FROM PS_DEPT_TBL D
 WHERE D.DEPTID = B.DEPTID
 AND D.SETID = B.SETID
 AND D.EFFDT <= $AsofToday)
End-SELECT
End-Procedure
!
!*************************************
! Get-Country                        *
! Get Country                        *
!*************************************
!
Begin-Procedure Get-Country
   Let $Country = ''
Begin-SELECT
RG.COUNTRY
   Let $Country = &RG.COUNTRY
     FROM PS_REG_REGION_TBL RG
  WHERE RG.REG_REGION = $RegRegion
End-SELECT
End-Procedure
!
!*************************************
! Get-Address                        *
! Get Address                        *
!*************************************
!
Begin-Procedure Get-Address
Let $Address = ''
Let $Addline1 = ''
Let $Addline2 = ''
Let $Addline3 = ''
Let $Addline31 = ''
Let $Addline4 = ''
Let $Addline5 = ''
Let $Addline6 = ''

Begin-SELECT
A.ADDRESS1
A.ADDRESS2
A.ADDRESS3
A.CITY
A.STATE
   let $address1 = &A.ADDRESS1
   let $address2 = &A.ADDRESS2
   let $address3 = &A.ADDRESS3
   let $City     = LTRIM(RTRIM(&A.CITY,' '),' ')
   let $StateId  = &A.STATE
   let $address4 = $City

   Do Get-State
   Do AdFormat
   Do Compress-Address

   Let $Address = LTRIM(RTRIM($Addline2||' '||$Addline3||' '||' '||$Addline31||' '||$Addline4||' '||$Addline5||' '||$Addline6,' '),' ')

FROM PS_ADDRESSES A
WHERE EMPLID = $Emplid
AND ADDRESS_TYPE = 'HOME'

End-Select
End-Procedure
!
!*************************************
! Get-State                          *
! Get State                          *
!*************************************
!
Begin-Procedure Get-State
Let $State = ''
Begin-SELECT
S.DESCR
   let $State = LTRIM(RTRIM(&S.DESCR,' '),' ')
   let $address4 = $State||', '||$address4
FROM PS_STATE_NAMES_TBL S
WHERE S.COUNTRY = $Country
AND S.STATE = $StateId

End-Select
End-Procedure
!
!*************************************
! Get-PayEntity-Details              *
! Get Pay Entity Description         *
!*************************************
!
Begin-Procedure Get-PayEntity-Details
Let $Pyentdescr = ''
Begin-SELECT
PED.DESCR
   let $Pyentdescr = &PED.DESCR
   FROM PS_GP_PYENT PED
    WHERE PED.PAY_ENTITY = $PayEntity
End-SELECT
End-Procedure
!
!***********************************************************************
! Delete-RunControl                                                    *
!***********************************************************************
begin-procedure Delete-RunControl
begin-SQL
DELETE FROM PS_GPHK_MPF_RUNCTL
    WHERE OPRID         = $PRCS_OPRID
    AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID;
end-SQL

end-procedure ! Delete-RunControl
!
!**********************
! Print No Data       *
!**********************
begin-procedure Print-NoData

If #i < 1
   print 'No Rows Retrieved'     (+5,) Center Bold
End-If

end-procedure ! Print-NoData


#Include 'reset.sqc'     !Reset printer procedure
#include 'sqrtrans.sqc'  ! Translate SQR strings to given language
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'curdttim.sqc'  !Routines for current date time
#Include 'adformat.sqc'  !Routines for address format



