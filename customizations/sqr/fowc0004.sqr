!******************************************************************************!
! Report Name: fowc0004 - WC PREMIUM CALCULATION                               !
!******************************************************************************!
!                                                                              !
!                                                                              !
!                                                                              !
! This software and related documentation are provided under a                 !
! license agreement containing restrictions on use and                         !
! disclosure and are protected by intellectual property                        !
! laws. Except as expressly permitted in your license agreement                !
! or allowed by law, you may not use, copy, reproduce,                         !
! translate, broadcast, modify, license, transmit, distribute,                 !
! exhibit, perform, publish or display any part, in any form or                !
! by any means. Reverse engineering, disassembly, or                           !
! decompilation of this software, unless required by law for                   !
! interoperability, is prohibited.                                             !
! The information contained herein is subject to change without                !
! notice and is not warranted to be error-free. If you find any                !
! errors, please report them to us in writing.                                 !
!                                                                              !
!                                                                              !
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.                      !
! All Rights Reserved.                                                         !
!******************************************************************************!
!***********************************************************************
!                                                                      *
!          $Date:  2012/09/17:05:02:09                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!----------------------------------------------------------------------!
#include 'setenv.sqc' !Set environment
#include 'reset.sqc'  !Reset printer procedure

!******************************************************************************!
! Name: program                                                                *
!                                                                              *
! Calls    : Init-DateTime                                                     *
!            Init-Number                                                       *
!            Get-Current-DateTime                                              *
!            Stdapi-Init                                                       *
!            Initialization                                                    *
!            get-earnings                                                      *
!            get-ot-earns                                                      *
!            get-oth-earns                                                     *
!            reset                                                             *
!            stdapi-term                                                       *
!            finalization                                                      *
!                                                                              *
! Function : Controls flow of program                                          *
!                                                                              *
!******************************************************************************!

begin-program


  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Define-Prcs-Vars
  do Get-Run-Control-Parms

  do Initialization

  do get-earnings
  do get-ot-earns
  do get-oth-earns

  new-page

  do reset

  do finalization

  do 8000-wrapup

end-program
!==============================================================================!

!******************************************************************************!
! SetUp Section
!******************************************************************************!
begin-setup

#include 'setup02a.sqc'  !Printer and page-size initialization

!Define Constants such as printing location and substitution variables

#define COL_1    1
#define COL_2    9
#define COL_3    15
#define COL_4    24
#define COL_5    45
#define COL_6    58
#define COL_7    85
#define COL_8    91
#define COL_9    94
#define COL_10   97
#define COL_11   103
#define COL_12   114
#define COL_13   122
#define COL_14   131
#define COL_15   137
#define COL_16   148
#define COL_17   159
#define COL_18   168


end-setup
!==============================================================================!

! =============================================================================!
! Heading Section
! =============================================================================!

Begin-Heading 7

  move 'fowc0004'          to $ReportID
  move 'WC Premium Calc'   to $ReportTitle

#include 'stdhdg01.sqc'         !standard heading

  Print 'Worker Compensation , Calculation.'     (+1,1)

  Print 'Empl'                  (+2,{COL_1})            bold
  Print 'Job'                   (0,{COL_2})             bold
  Print 'Cust'                  (0,{COL_3})             bold
  Print 'Cust Name'             (0,{COL_4})             bold
  Print 'Project'               (0,{COL_5})             bold
  Print 'Proj Descr'            (0,{COL_6})             bold
  Print 'Dept'                  (0,{COL_7})             bold
  Print 'St'                    (0,{COL_8})             bold
  Print 'RT'                    (0,{COL_9})             bold
  Print 'Erncd'                 (0,{COL_10})            bold
  Print 'Pay Date'              (0,{COL_11})            bold
  Print 'Company'               (0,{COL_12})            bold
  Print 'WC Code'               (0,{COL_13})            bold
  Print 'Hours'                 (0,{COL_14})            bold
  Print 'Earnings'              (0,{COL_15})            bold
  Print 'Comp Ern'              (0,{COL_16})            bold
  Print 'Rate'                  (0,{COL_17})            bold
  Print 'MOD'                   (0,{COL_18})            bold



  Print '-'              (+1,{COL_1},175)          fill      bold

End-Heading
! =============================================================================!

!******************************************************************************!
! Procedure Name: Initialization                                               *
!                                                                              *
! Called By: Begin-Program                                                     *
!                                                                              *
! Calls    : ask-from-thru-date                                                *
!            get-values                                                        *
!            Format-DateTime                                                   *
!                                                                              *
! Function : Initializes the program                                           *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE Initialization

do Format-DateTime($asoftoday, $ReportDate, {DEFDATE}, '', '')

  show 'Date: ' $AsOfToday
  show 'Time: ' $AsOfNow
  show ' '
  show 'Please wait....................fowc0004.sqr is being Processed.'
  show ''
  show 'Program to Calculate Workers Compensation Premium.'
  show ''
  show 'The program path is ::: ' $SQR-Program
  show ''
  show 'The Current Date    ::: ' $ReportDate

let #total_count = 0
let $country = 'USA'

if $Prcs_Process_Instance = ''
 ! do ask-from-thru-date
else
  do get-values
end-if
let $space = ' '
let #zero = 0
let $date_null = ''

let $emplid             = $space
let $jobcode            = $space
let $xref_custid        = $space
let $xref_projid        = $space
let $deptid             = $space
let $original_state     = $space
let $rate_type          = $space
let $earnings_code      = $space
let $pay_end_dt         = $date_null
let $company            = $space
let $location           = $space
let #total_hours        = #zero
let #total_earnings     = #zero
let $comp_earns         = $space
let #comp_earns         = #zero
let $code               = $space
let $mono_type          = $space
let $business_unit_gl   = $space
let $premium            = $space
let #premium            = #zero
let #fo_wc_rate         = #zero
let #mod_rate           = #zero
let $product            = $space
let $gl_wc_exp          = $space
let $gl_wc_liab         = $space
let $jobcode_descr      = $space
let $code_descr         = $space
let $xref_custid        = $space
let $xref_bu_pc         = $space
let $xref_projid        = $space
let $xref_act_id        = $space


END-PROCEDURE !Initialization
!==============================================================================!

!******************************************************************************!
! Procedure Name: Get-Values                                                   *
!                                                                              *
! Called By: Initialization                                                    *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function : Get Parameters                                                    *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE get-values

BEGIN-SELECT

RUN.PAY_END_DT      &run_dt

FROM  PS_RUN_CNTL_FOWC4   RUN

WHERE RUN.OPRID       = $prcs_oprid
AND   RUN.RUN_CNTL_ID = $prcs_run_cntl_id

END-SELECT

END-PROCEDURE !get-values
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-earnings                                                 *
!                                                                              *
! Called By: Begin-Program                                                     *
!                                                                              *
! Calls    : process-logic                                                     *
!            print-table                                                       *
!                                                                              *
! Function : Main Process                                                      *
!                                                                              *
!******************************************************************************!

BEGIN-PROCEDURE get-earnings
show 'get-earnings'
let #counter = 0
let $company_chg = 'Y'
let $state_chg = 'Y'

show 'run date' &run_dt '*'
show 'country' $country '*'


BEGIN-SELECT

A.COMPANY
A.PAY_END_DT
A.NAME
B.DEPTID
B.STATE
!A.EMPLID
B.EMPLID
A.LOCATION
A.SSN
B.JOBCODE
B.ERNCD_REG_HRS
B.HOURLY_RT
(B.REG_HRS + B.REG_EARN_HRS)       &b.total_hours
(B.REG_HRLY_EARNS +  B.REG_EARNS)  &b.total_earnings
A.PAYGROUP
A.OFF_CYCLE
A.PAGE_NUM
A.LINE_NUM
B.ADDL_NBR
B.EMPL_RCD
B.XREF_NUM
        let $original_state = &B.STATE
        let $company        = &A.COMPANY
        let $deptid         = &B.DEPTID
        let $state          = &B.STATE
        let $emplid         = &B.EMPLID
        let $jobcode        = &B.JOBCODE
        let #hourly_rt      = &B.HOURLY_RT
        let $earnings_code  = &B.ERNCD_REG_HRS
        let #total_hours    = &b.total_hours
        let #total_earnings = &b.total_earnings
        let $pay_end_dt1    = &A.PAY_END_DT
        let $location       = &A.LOCATION
        let $paygroup       = &A.PAYGROUP
        let $off_cycle      = &A.OFF_CYCLE
        let #page           = &A.PAGE_NUM
        let #line           = &A.LINE_NUM
        let #addl           = &B.ADDL_NBR
        let #empl_rcd       = &B.EMPL_RCD
        let #XrefNum        = &B.XREF_NUM

        do format-datetime($pay_end_dt1,$pay_end_dt,{DEFDATE},'','')

        do process-logic
        do print-table

FROM PS_PAY_CHECK A,
     PS_PAY_EARNINGS B,
     PS_EARNINGS_TBL A2,
     PS_PAYGROUP_TBL F

WHERE A.COMPANY                         = B.COMPANY
  AND A.PAYGROUP                        = B.PAYGROUP
  AND A.PAY_END_DT                      = B.PAY_END_DT
  AND A.OFF_CYCLE                       = B.OFF_CYCLE
  AND A.PAGE_NUM                        = B.PAGE_NUM
  AND A.LINE_NUM                        = B.LINE_NUM
  AND A.PAYCHECK_STATUS                 in ('F','R')
  AND A.PAY_END_DT                      = &run_dt
  AND (B.REG_HRLY_EARNS +  B.REG_EARNS) <> 0
  AND A.COMPANY                         = F.COMPANY
  and A.PAYGROUP                        = F.PAYGROUP
  and F.COUNTRY                         = $country
  and F.EFFDT                           = (SELECT MAX(KK.EFFDT) FROM PS_PAYGROUP_TBL KK
                                           WHERE KK.PAYGROUP  = F.PAYGROUP
                                           AND KK.COMPANY     = F.COMPANY
                                           AND KK.EFFDT       <= A.PAY_END_DT)
  AND A2.EFFDT                          = (SELECT MAX(A1.EFFDT) FROM PS_EARNINGS_TBL A1
                                           WHERE A1.ERNCD      = A2.ERNCD
                                           AND A1.EFFDT       <= A.PAY_END_DT)
  AND A2.ERNCD                          = B.ERNCD_REG_HRS
  AND A2.SUBJECT_FWT                    = 'Y'
ORDER BY A.COMPANY
end-select

show 'got all the earnings'

END-PROCEDURE !get-earnings
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-oth-earns                                                *
!                                                                              *
! Called By:      Begin-program                                                *
!                                                                              *
! Calls    : process-logic                                                     *
!            print-table                                                       *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure get-oth-earns
show 'get-oth-earns'

show 'run date' &run_dt '*'
show 'country' $country '*'

let $company_chg = 'Y'

begin-SELECT

AA.COMPANY
AA.PAY_END_DT
BB.DEPTID
BB.STATE
!AA.EMPLID
BB.EMPLID
AA.LOCATION
AA.SSN
BB.JOBCODE
CC.ERNCD
BB.HOURLY_RT
CC.OTH_HRS      &cc.total_hours
CC.OTH_EARNS    &cc.total_earnings
AA.PAYGROUP
AA.OFF_CYCLE
AA.PAGE_NUM
AA.LINE_NUM
BB.ADDL_NBR
!AA.EMPL_RCD
BB.EMPL_RCD
CC.XREF_NUM


        let $original_state = &BB.STATE
        let $company        = &AA.COMPANY
        let $deptid         = &BB.DEPTID
        let $state          = &BB.STATE
        let $emplid         = &BB.EMPLID
        let $jobcode        = &BB.JOBCODE
        let $earnings_code  = &CC.ERNCD
        let #hourly_rt      = &BB.HOURLY_RT
        let #total_hours    = &CC.TOTAL_HOURS
        let #total_earnings = &cc.total_earnings
        let $pay_end_dt1    = &AA.PAY_END_DT
        let $location       = &AA.LOCATION
        let $paygroup       = &AA.PAYGROUP
        let $off_cycle      = &AA.OFF_CYCLE
        let #page           = &AA.PAGE_NUM
        let #line           = &AA.LINE_NUM
        let #addl           = &BB.ADDL_NBR
        let #empl_rcd       = &BB.EMPL_RCD
        let #XrefNum        = &CC.XREF_NUM
        
        do format-datetime($pay_end_dt1,$pay_end_dt,{DEFDATE},'','')        

        do process-logic
        do print-table

FROM PS_PAYGROUP_TBL FF,
     PS_EARNINGS_TBL A3,
     PS_PAY_CHECK AA,
     PS_PAY_EARNINGS BB,
     PS_PAY_OTH_EARNS CC

WHERE AA.COMPANY                        = BB.COMPANY
      AND AA.PAYGROUP                   = BB.PAYGROUP
      AND AA.PAY_END_DT                 = BB.PAY_END_DT
      AND AA.OFF_CYCLE                  = BB.OFF_CYCLE
      AND AA.PAGE_NUM                   = BB.PAGE_NUM
      AND AA.LINE_NUM                   = BB.LINE_NUM
      AND AA.SEPCHK                     = BB.SEPCHK
      AND AA.COMPANY                    = CC.COMPANY
      AND AA.PAYGROUP                   = CC.PAYGROUP
      AND AA.PAY_END_DT                 = CC.PAY_END_DT
      AND AA.OFF_CYCLE                  = CC.OFF_CYCLE
      AND AA.PAGE_NUM                   = CC.PAGE_NUM
      AND AA.LINE_NUM                   = CC.LINE_NUM
      AND BB.ADDL_NBR                   = CC.ADDL_NBR
      AND AA.PAYCHECK_STATUS            in  ('F','R')
      AND BB.PAY_END_DT                 = &run_dt
      AND (CC.OTH_EARNS +  CC.OTH_PAY)  <> 0
      AND AA.COMPANY                    = FF.COMPANY
      and AA.PAYGROUP                   = FF.PAYGROUP
      and FF.COUNTRY                    = $country
      and FF.EFFDT                      = (SELECT MAX(FF1.EFFDT) FROM PS_PAYGROUP_TBL FF1
                                           WHERE FF1.PAYGROUP  = FF.PAYGROUP
                                           AND FF1.COMPANY     = FF.COMPANY
                                           AND FF1.EFFDT       <= AA.PAY_END_DT)
      AND A3.EFFDT                      = (SELECT MAX(AA2.EFFDT) FROM PS_EARNINGS_TBL AA2
                                           WHERE A3.ERNCD      = AA2.ERNCD
                                           AND AA2.EFFDT       <= AA.PAY_END_DT)
      AND A3.ERNCD                      = CC.ERNCD
      AND A3.SUBJECT_FWT                = 'Y'
ORDER BY AA.COMPANY
end-select

end-procedure !get-oth-earns
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-ot-earns                                                 *
!                                                                              *
! Called By:      Begin-program                                                *
!                                                                              *
! Calls    : process-logic                                                     *
!            print-table                                                       *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure get-ot-earns
show 'get-ot-earns'

show 'run date' &run_dt '*'
show 'country' $country '*'

let $company_chg = 'Y'

begin-SELECT

AAA.COMPANY
AAA.PAY_END_DT
BBB.DEPTID
BBB.STATE
!AAA.EMPLID
BBB.EMPLID
AAA.LOCATION
AAA.SSN
BBB.JOBCODE
CCC.ERNCD_OT_HRS
BBB.HOURLY_RT
BBB.OT_HRS              &bbb.total_hours
BBB.OT_HRLY_EARNS       &bbb.total_earnings
AAA.PAYGROUP
AAA.OFF_CYCLE
AAA.PAGE_NUM
AAA.LINE_NUM
BBB.ADDL_NBR
!AAA.EMPL_RCD
BBB.EMPL_RCD
BBB.XREF_NUM

        let $original_state = &BBB.STATE
        let $company        = &AAA.COMPANY
        let $deptid         = &BBB.DEPTID
        let $state          = &BBB.STATE
        let $emplid         = &BBB.EMPLID
        let $jobcode        = &BBB.JOBCODE
        let $earnings_code  = &CCC.ERNCD_OT_HRS
        let #hourly_rt      = &BBB.HOURLY_RT
        let #total_hours    = &bbb.total_hours
        let #total_earnings = &bbb.total_earnings
        let $pay_end_dt1    = &AAA.PAY_END_DT
        let $location       = &AAA.LOCATION
        let $paygroup       = &AAA.PAYGROUP
        let $off_cycle      = &AAA.OFF_CYCLE
        let #page           = &AAA.PAGE_NUM
        let #line           = &AAA.LINE_NUM
        let #addl           = &BBB.ADDL_NBR
        let #empl_rcd       = &BBB.EMPL_RCD
        let #XrefNum        = &BBB.XREF_NUM

        do format-datetime($pay_end_dt1,$pay_end_dt,{DEFDATE},'','')

        do process-logic
        do print-table

FROM PS_PAY_CHECK AAA,
     PS_EARNINGS_TBL A4,
     PS_PAY_EARNINGS BBB,
     PS_PAYGROUP_TBL CCC

WHERE AAA.COMPANY            = BBB.COMPANY
     AND AAA.PAYGROUP        = BBB.PAYGROUP
     AND AAA.PAY_END_DT      = BBB.PAY_END_DT
     AND AAA.OFF_CYCLE       = BBB.OFF_CYCLE
     AND AAA.PAGE_NUM        = BBB.PAGE_NUM
     AND AAA.LINE_NUM        = BBB.LINE_NUM
     AND AAA.PAYCHECK_STATUS in ('F','R')
     AND BBB.PAY_END_DT      = &run_dt
     AND BBB.OT_HRLY_EARNS   <> 0
     AND AAA.COMPANY         = CCC.COMPANY
     AND AAA.PAYGROUP        = CCC.PAYGROUP
     AND CCC.COUNTRY         = $country
     AND CCC.EFFDT           = (SELECT MAX(C1.EFFDT) FROM PS_PAYGROUP_TBL C1
                                WHERE CCC.COMPANY    = C1.COMPANY
                                AND CCC.PAYGROUP     = C1.PAYGROUP
                                AND C1.EFFDT         <= AAA.PAY_END_DT)
     AND A4.EFFDT            = (SELECT MAX(AA4.EFFDT) FROM PS_EARNINGS_TBL AA4
                                WHERE A4.ERNCD       = AA4.ERNCD
                                AND AA4.EFFDT        <= AAA.PAY_END_DT)
     AND A4.ERNCD            = CCC.ERNCD_OT_HRS
     AND A4.SUBJECT_FWT      = 'Y'
ORDER BY AAA.COMPANY
END-SELECT

end-procedure !get-ot-earns
!==============================================================================!

!******************************************************************************!
! Procedure Name: process-logic                                                *
!                                                                              *
! Called By: get-earnings                                                      *
!                                                                              *
! Calls    : get-state-info                                                    *
!            comp-state-check                                                  *
!            get-compensatory-earns                                            *
!            getting-state-rates                                               *
!            get-jobcode-descr                                                 *
!            get-project-info                                                  *
!            get-company-mod-info                                              *
!            get-business-unit-gl                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure process-logic

        let #total_hours     = edit(#total_hours,'999999.99')
        let #total_earnings  = edit(#total_earnings, '99999999999.99')
        let #earns_by_cd     = #total_earnings

        if $company_chg <> $company
   !*** get mod rate for the company                       ***!
            let #mod_rate = 1
            do get-company-mod-info
            do get-business-unit-gl
            let $company_chg = $company
        end-if

   !*** get jobcode description, product based on jobcode   ***!
   !*** get wc code and description based on state, country ***!
   !*** and jobcode                                         ***!
        do get-jobcode-descr

   !*** get project id and bill to cust id from employee    ***!
   !*** xref tables                                         ***!
        do get-project-info

   !*** get gl account information for the state            ***!
        do get-state-info

   !*** calculate compensatory earnings if applicable       ***!
   !*** otherwise = 0                                       ***!
        do get-compensatory-earns

   !*** get rate type and base rate based on wc code from   ***!
   !*** get-jobcode-descr.  calculate premium based on rate ***!
   !*** type.  if no rate found - error out                 ***!
        do getting-state-rates


end-procedure !process-logic
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-buisness-unit-gl                                         *
!                                                                              *
! Called By:      get-earnings, get-oth-earns and get-ot-earns                 *
!                                                                              *
! Calls    : get-SETID                                                         *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure get-business-unit-gl
show 'get-business-unit-gl'

show 'company' $company '*'
show 'emplid' $emplid '*'
show 'emplrcd' #empl_rcd '*'
show 'effdt' $pay_end_dt1 '*'

   let $business_unit_gl = ' '

begin-select

JOB.BUSINESS_UNIT
BUSG.BUSINESS_UNIT_GL

   let $business_unit_hr = &JOB.BUSINESS_UNIT
   let $business_unit_gl = &BUSG.BUSINESS_UNIT_GL
   
   show 'bu_hr' $business_unit_hr '*'
   show 'bu_gl' $business_unit_gl '*'

   do get-setid

FROM PS_JOB JOB,
     PS_BUS_UNIT_TBL_HR BUSG

WHERE JOB.COMPANY       = $company
  AND JOB.BUSINESS_UNIT = BUSG.BUSINESS_UNIT
  AND JOB.EMPLID        = $emplid
  AND JOB.EMPL_RCD      = #empl_rcd
  AND JOB.EFFDT         = (SELECT max(JOB2.EFFDT)
                           FROM PS_JOB JOB2 
                           WHERE JOB2.EMPLID = JOB.EMPLID
                           AND   JOB2.EMPL_RCD = JOB.EMPL_RCD
                           AND   JOB2.EFFDT <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
 AND JOB.EFFSEQ         = (SELECT max(JOB3.EFFSEQ)
                           FROM PS_JOB JOB3
                           WHERE JOB3.EMPLID = JOB.EMPLID
                           AND   JOB3.EMPL_RCD = JOB.EMPL_RCD
                           AND   JOB3.EFFDT = JOB.EFFDT)                           

end-select

end-procedure !get-buisness-unit-gl
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-company-mod-info                                         *
!                                                                              *
! Called By: get-earnings                                                      *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE get-company-mod-info
show 'get-company-mod-info'

show 'company' $company '*'
show 'effdt' $pay_end_dt1 '*'

BEGIN-SELECT
MOD1.FO_WC_MOD

  LET #mod_rate = &MOD1.FO_WC_MOD

FROM PS_FO_WC_CO_MOD MOD1

WHERE MOD1.COMPANY    = $company
AND   MOD1.EFFDT      = (SELECT MAX(MOD2.EFFDT)
                      FROM  PS_FO_WC_CO_MOD MOD2
                      WHERE MOD1.COMPANY  = MOD2.COMPANY
                      AND   MOD2.EFFDT   <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
AND   MOD1.EFF_STATUS = 'A'
END-SELECT

END-PROCEDURE !get-company-mod-info
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-project-info                                             *
!                                                                              *
! Called By: get-earnings                                                      *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE get-project-info
show 'get-project-info'
show 'emplid' $emplid
show 'emplrcd' #empl_rcd

BEGIN-SELECT
XREF.BUSINESS_UNIT_PC
XREF.PROJECT_ID
XREF.ACTIVITY_ID
XREF.CUST_SETID
XREF.CUST_ID
!XREF.BUSINESS_UNIT_PC
!XREF.PROJECT_ID
!XREF.ACTIVITY_ID  
PROJ.DESCR
CUST.NAME1

  LET $xref_bu_pc     = &XREF.BUSINESS_UNIT_PC
  LET $xref_projid    = &XREF.PROJECT_ID
  LET $xref_act_id     = &XREF.ACTIVITY_ID
  LET $xref_custsetid = &XREF.CUST_SETID
  LET $xref_custid    = &XREF.CUST_ID
  LET $proj_descr     = &PROJ.DESCR
  LET $cust_name1     = &CUST.NAME1

FROM PS_FO_EMPL_XREF XREF, PS_TL_XREF_TBL TLX, PS_TL_PAYABLE_TIME TLPAY, PS_PROJECT PROJ, PS_CUSTOMER CUST

WHERE TLX.PAY_SYSTEM        = 'NA'
AND   TLX.SEQ_NBR           = TLPAY.SEQ_NBR
AND   TLX.XREF_NUM          = #XrefNum
AND   TLPAY.EMPLID          = $emplid
AND   TLPAY.EMPL_RCD        = #empl_rcd
! AND   TLPAY.DUR
! AND   XREF.BUSINESS_UNIT_PC = XREF.BUSINESS_UNIT_PC 
! AND   XREF.PROJECT_ID       = XREF.PROJECT_ID 
! AND   XREF.ACTIVITY_ID      = XREF.ACTIVITY_ID
AND   XREF.EMPLID           = $emplid               
AND   XREF.EMPL_RCD         = #empl_rcd             
AND XREF.BUSINESS_UNIT_PC   = PROJ.BUSINESS_UNIT 
AND XREF.PROJECT_ID         = PROJ.PROJECT_ID 
AND XREF.CUST_SETID         = CUST.SETID 
AND XREF.CUST_ID            = CUST.CUST_ID
END-SELECT

SHOW '*' $xref_bu_pc '*'
SHOW '*' $xref_projid '*'   
SHOW '*' $xref_act_id '*'    
SHOW '*' $xref_custsetid '*'
SHOW '*' $xref_custid '*'   
SHOW '*' $proj_descr '*'    
SHOW '*' $cust_name1 '*'    


END-PROCEDURE !get-project-info
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-jobcode-descr                                            *
!                                                                              *
! Called By: get-earnings                                                      *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure get-jobcode-descr
show 'get-jobcode-descr'

let $jobcode_descr = ' '
let $code          = ' '
let $code_descr = ' '

show 'setid' $setid '*'
show 'jobcode' $jobcode '*'
show 'country' $country '*'
show 'state' $state '*'
show 'effdt' $pay_end_dt '*'

begin-select
AB.DESCR
AC.FO_WC_CODE
AE.DESCR

   let $jobcode_descr = &AB.DESCR
   let $code          = &AC.FO_WC_CODE
   let $code_descr    = &AE.DESCR      
   
   show '*' $jobcode_descr
   show '*' $code         
   show '*' $code_descr   
              

        
   if rtrim($jobcode_descr, ' ') = ''
     let $jobcode_descr = ' '
   end-if

   if rtrim($code_descr, ' ') = ''
     let $code_descr = ' '
   end-if

FROM PS_JOBCODE_TBL    AB,
     PS_FO_JOBCODE_WC  AC,
     PS_FO_JOBCODE_PRD AD,
     PS_FO_WC_ST_CODE  AE

WHERE AB.SETID          = $setid
  AND AB.JOBCODE        = $jobcode
  AND AB.EFFDT          = (SELECT MAX(AB1.EFFDT)
                           FROM PS_JOBCODE_TBL AB1
                           WHERE AB.SETID     = AB1.SETID
                           AND AB.JOBCODE     = AB1.JOBCODE
                           AND AB1.EFFDT      <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
  AND AB.SETID          = AC.SETID
  AND AB.JOBCODE        = AC.JOBCODE
  AND AC.EFFDT          = (SELECT MAX(AC1.EFFDT)
                           FROM PS_FO_JOBCODE_WC AC1
                           WHERE AC1.SETID   = AC.SETID
                           AND AC1.JOBCODE   = AC.JOBCODE
                           AND AC1.EFFDT     <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
  AND AC.COUNTRY        = $country
  AND AC.STATE          = $state
  AND AB.SETID          = AD.SETID
  AND AB.JOBCODE        = AD.JOBCODE
  AND AD.EFFDT          = (SELECT MAX(AD2.EFFDT)
                           FROM PS_FO_JOBCODE_PRD AD2
                           WHERE AD.SETID    = AD2.SETID
                           AND AD.JOBCODE    = AD2.JOBCODE
                           AND AD2.EFFDT     <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
  AND AD.EFF_STATUS     = 'A'
  AND AE.COUNTRY        = $country
  AND AE.STATE          = $state
  AND AE.EFFDT          = (SELECT MAX(AE2.EFFDT)
                           FROM PS_FO_WC_ST_CODE AE2
                           WHERE AE2.COUNTRY     = AE.COUNTRY
                           AND   AE2.STATE       = AE.STATE
                           AND   AE2.FO_WC_CODE  = AE.FO_WC_CODE
                           AND   AE2.EFFDT       <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
  AND AE.FO_WC_CODE      = AC.FO_WC_CODE
end-select

end-procedure !get-jobcode-descr
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-setid                                                    *
!                                                                              *
! Called By: get-earnings                                                      *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure get-setid
show 'get-setid' 

show 'businessunit' $business_unit_hr '*'

let $setid = ' '

BEGIN-SELECT distinct
AX.SETID

        let $setid = &AX.SETID

FROM PS_SET_CNTRL_REC AX

WHERE AX.SETCNTRLVALUE = $BUSINESS_UNIT_HR
AND   AX.RECNAME       = 'JOBCODE_TBL'

END-SELECT

SHOW '&AX.SETID....' $setid

end-procedure !get-setid
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-state-info                                               *
!                                                                              *
! Called By: process-logic                                                     *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE get-state-info
show 'get-state-info'

show 'company' $company '*'
show 'country' $country '*'
show 'state' $state '*'

let $state_found = 'N'
let $mono_check  = 'N'
let #st_mod_rate = 0


BEGIN-SELECT
COS.FO_GL_WC_EXP
COS.FO_GL_WC_LIAB
COS.FO_MONO_STATE
COS.FO_WC_MOD

   let $mono_check  = &COS.FO_MONO_STATE
   let $gl_wc_exp   = &COS.FO_GL_WC_EXP
   let $gl_wc_liab  = &COS.FO_GL_WC_LIAB
   let #st_mod_rate = &COS.FO_WC_MOD
   let $state_found = 'Y'

FROM PS_FO_WC_CO_STATE COS

WHERE   COS.COMPANY     = $company
AND     COS.COUNTRY     = $country
AND     COS.STATE       = $state
AND     COS.EFFDT       = (SELECT MAX(COS1.EFFDT) FROM PS_FO_WC_CO_STATE COS1
                           WHERE COS.COMPANY   = COS1.COMPANY
                           AND   COS.COUNTRY   = COS1.COUNTRY
                           AND   COS.STATE     = COS1.STATE
                           AND   COS1.EFFDT    <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
AND     COS.EFF_STATUS  = 'A'
END-SELECT

    if $mono_check = 'N'
      if $state_found = 'N'
         let $state = '$U'
      else
         if #st_mod_rate = 0 or #st_mod_rate = 1 
           if #mod_rate = 0  
             LET #mod_rate = 1
           end-if
         else  
           LET #mod_rate = #st_mod_rate           
         end-if   
      end-if
    else
      let #mod_rate = 1    
    end-if  
      
END-PROCEDURE !get-state-info
!==============================================================================!

!******************************************************************************!
! Procedure Name: get-compensatory-earns                                       *
!                                                                              *
! Called By: process-logic                                                     *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE get-compensatory-earns
show 'get-compensatory-earns'

show 'earncds' $earnings_code '*'

 let #comp_earns = 0

BEGIN-SELECT
EARN.FO_WC_STHRS_ONLY

        evaluate &EARN.FO_WC_STHRS_ONLY
                when = 'E'
                  break
                when = 'F'
                  let #comp_earns = edit((#earns_by_cd * 1.0000),'999999.99')
                  break
                when = 'H'
                  let #comp_earns = edit((#earns_by_cd * 0.5000),'999999.99')
                  break
                when = 'T'
                  let #comp_earns = edit(((#earns_by_cd * 2)/3),'999999.99')
                  break
        end-evaluate

FROM PS_FO_WC_ST_EARN EARN

WHERE EARN.EFFDT     = (SELECT MAX(EARN1.EFFDT) FROM PS_FO_WC_ST_EARN EARN1
                        WHERE EARN.COUNTRY  = EARN1.COUNTRY
                          AND EARN.STATE    = EARN1.STATE
                          AND EARN1.EFFDT   <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
  AND EARN.COUNTRY   = $country
  AND EARN.STATE     = $state
  AND EARN.ERNCD     = $earnings_code

END-SELECT

END-PROCEDURE !get-compensatory-earns
!==============================================================================!

!******************************************************************************!
! Procedure Name: getting-state-rates                                          *
!                                                                              *
! Called By: Process-logic                                                     *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE getting-state-rates
show 'getting-state-rates'

show 'code' $code '*'

let $rate_found = 'N'

BEGIN-SELECT
SRT.FO_WC_RATE_TYPE
SRT.FO_WC_BASE_RT

  let #fo_wc_rate = &SRT.FO_WC_BASE_RT
  let $rate_type  = &SRT.FO_WC_RATE_TYPE
  let #rate_earns = (#total_earnings * #fo_wc_rate)/100
  
  show #fo_wc_rate
  show $rate_type 
  show #rate_earns

  if $rate_type = 'H'
     !let $premium  = edit(((#total_hours * #fo_wc_rate)),'999999.99')
     let #premium  = #total_hours * #fo_wc_rate
  else
     !let $premium  = edit(((#mod_rate * #fo_wc_rate * #comp_earns)/100),'999999.99')
     let #premium  = (#mod_rate * #fo_wc_rate * #comp_earns)/100
     
  end-if

  let $rate_found = 'Y'

FROM PS_FO_WC_CO_ST_RT SRT

WHERE   SRT.COMPANY         = $company
AND     SRT.COUNTRY         = $country
AND     SRT.STATE           = $state
AND     SRT.EFFDT           = (SELECT MAX(SRT2.EFFDT) FROM PS_FO_WC_CO_ST_RT SRT2
                               WHERE SRT.COMPANY  = SRT2.COMPANY
                               AND SRT.COUNTRY    = SRT2.COUNTRY
                               AND SRT.STATE        = SRT2.STATE
                               AND SRT.FO_WC_CODE   = SRT2.FO_WC_CODE
                               AND SRT2.EFFDT       <= {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix})
AND     SRT.FO_WC_CODE      = $code

END-SELECT

END-PROCEDURE !getting-rates-state
!==============================================================================!

!******************************************************************************!
! Procedure Name: print-table                                                  *
!                                                                              *
! Called By: get-earnings, get-ot-earnings and get-oth-earnings                *
!                                                                              *
! Calls    : check-fo-wc-premium                                               *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
BEGIN-PROCEDURE print-table

let #counter       = #counter + 1
let #total_count   = #total_count + 1
let $comp_earns    = edit(#comp_earns,'99999999999.99')
!let $premium       = edit($premium,'999999999999.99')
let $premium       = edit(#premium,'999999999999.99')


if  rtrim($mono_check, ' ') = ''
   let $mono_type = 'N'
else
   let $mono_type = $mono_check
end-if

do check-fo-wc-premium

!if #counter >= 100
!  commit
!  let #counter = 0
!end-if

let #comp_earns       = 0
let #rate_earns       = 0
let $premium          = 0
let #class_premium    = 0
let $class_premium    = 0
let #fo_wc_class_rate = 0


END-PROCEDURE !print-table
!==============================================================================!

!******************************************************************************!
! Procedure Name: check-fo-wc-premium                                          *
!                                                                              *
! Called By: print-table                                                       *
!                                                                              *
! Calls    : update-existing-record                                            *
!            insert-fo-wc-premium                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure check-fo-wc-premium
show 'check-fo-wc-premium'

let $check-fo-wc-premium = 'N'

begin-select distinct
XA.EMPLID
XA.ERNCD

  let $check-fo-wc-premium = 'Y'

FROM PS_FO_WC_PREMIUM XA

WHERE XA.EMPLID           = $emplid
  AND XA.EMPL_RCD         = #empl_rcd
  AND XA.EFFDT            = {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix}
  AND XA.COMPANY          = $company  
  AND XA.DEPTID           = $deptid  
  AND XA.JOBCODE          = $jobcode
  AND XA.STATE            = $original_state  
  AND XA.ERNCD            = $earnings_code
  AND XA.LOCATION         = $location

end-select

if $check-fo-wc-premium = 'Y'
  do update-existing-record

else
  do insert-fo-wc-premium

end-if

end-procedure !check-fo-wc-premium
!==============================================================================!

!******************************************************************************!
! Procedure Name:  insert-fo-wc-premium                                        *
!                                                                              *
! Called By: check-fo-wc-premium                                               *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure insert-fo-wc-premium
show 'insert-fo-wc-premium'

do Print-List-File

!DO show-sql-error
show 'b4-insert'
BEGIN-SQL on-error=show-sql-error

INSERT INTO PS_FO_WC_PREMIUM
(EMPLID,
JOBCODE,
CUST_ID,
BUSINESS_UNIT_PC,
PROJECT_ID,
ACTIVITY_ID,
DEPTID,
STATE,
FO_WC_RATE_TYPE,
ERNCD,
EFFDT,
COMPANY,
LOCATION,
WORKED_HOURS,
EARNINGS,
FO_COMP_EARNS,
FO_WC_CODE,
FO_MONO_STATE,
BUSINESS_UNIT_GL,
FO_PREMIUM_AMT,
FO_WC_BASE_RT,
FO_WC_MOD,
PRODUCT,
FO_GL_WC_EXP,
FO_GL_WC_LIAB,
FO_WC_JOBCODE_DESC,
FO_WC_CODE_DESCR,
EMPL_RCD,
BUSINESS_UNIT_HR
)
values
($emplid,
$jobcode,
$xref_custid,
 $xref_bu_pc,
$xref_projid,
$xref_act_id,
$deptid,
$original_state,
$rate_type,
$earnings_code,
{DateIn-Prefix}$pay_end_dt1{DateIn-Suffix},
$company,
$location,
#total_hours,
#total_earnings,
!$comp_earns,
#comp_earns,
$code,
$mono_type,
$business_unit_gl,
!$premium,
#premium,
#fo_wc_rate,
#mod_rate,
$product,
$gl_wc_exp,
$gl_wc_liab,
$jobcode_descr,
$code_descr,
#empl_rcd,
$business_unit_hr)

END-SQL
show 'after-insert'
end-procedure !insert-fo-wc-premium
!==============================================================================!

!******************************************************************************!
! Procedure Name:  update-existing-record                                      *
!                                                                              *
! Called By: check-fo-wc-premium                                               *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure update-existing-record
show 'update-existing-record'

do Print-List-File

BEGIN-SQL on-error=show-sql-error

UPDATE PS_FO_WC_PREMIUM SET
        WORKED_HOURS            = #total_hours,
        EARNINGS                = #total_earnings,
!        FO_COMP_EARNS           = $comp_earns,
        FO_COMP_EARNS           = #comp_earns,
        FO_WC_CODE              = $code,
        FO_MONO_STATE           = $mono_type,
        BUSINESS_UNIT_GL        = $business_unit_GL,
!        FO_PREMIUM_AMT          = $premium,
        FO_PREMIUM_AMT          = #premium,
        FO_WC_BASE_RT           = #fo_wc_rate,
        FO_WC_MOD               = #mod_rate,
        FO_WC_JOBCODE_DESC      = $jobcode_descr,
        FO_WC_CODE_DESCR        = $code_descr,
        FO_GL_WC_EXP            = $gl_wc_exp,
        FO_GL_WC_LIAB           = $gl_wc_liab,
        BUSINESS_UNIT_HR        = $business_unit_hr,
        ACTIVITY_ID             = $xref_act_id,
        CUST_ID                 = $xref_custid,
        PROJECT_ID              = $xref_projid,
        FO_WC_RATE_TYPE         = $rate_type

WHERE EMPLID              = $emplid
  AND EMPL_RCD            = #empl_rcd
  AND EFFDT               = {DateIn-Prefix}$pay_end_dt1{DateIn-Suffix}
  AND COMPANY             = $company
  AND DEPTID              = $deptid 
  AND JOBCODE             = $jobcode
  AND STATE               = $original_state
  AND ERNCD               = $earnings_code 
  AND LOCATION            = $location

END-SQL

end-procedure !update-existing-record
!==============================================================================!

!******************************************************************************!
! Procedure Name: print-list-file                                              *
!                                                                              *
! Called By: insert-vi-wc-premium                                              *
!            update-existing-record                                            *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function : Prints data to list file                                          *
!                                                                              *
!******************************************************************************!
Begin-Procedure print-list-file

show 'print-list-file'

  Print $emplid                 (+2,{COL_1})
  Print $jobcode                (0,{COL_2})
  Print $xref_custid            (0,{COL_3})
  Print $cust_name1             (0,{COL_4})
  Print $xref_projid            (0,{COL_5})
  Print $proj_descr             (0,{COL_6})
  Print $deptid                 (0,{COL_7})
  Print $original_state         (0,{COL_8})
  Print $rate_type              (0,{COL_9})   
  Print $earnings_code          (0,{COL_10})
  !Print $pay_end_dt             (0,{COL_11})  edit MM/DD/YYYY
  Print $pay_end_dt             (0,{COL_11}) 
  Print $company                (0,{COL_12})
  Print $code                   (0,{COL_13})
  Print #total_hours            (0,{COL_14})  edit 999.9
  Print #total_earnings         (0,{COL_15})  edit 9999999.99
  Print $comp_earns             (0,{COL_16})  edit 9999999.99
  Print #fo_wc_rate             (0,{COL_17})  edit 99999.99999
  Print #mod_rate               (0,{COL_18})  edit 99999.99


  Add 1 to #Active_Count

show 'print-list-file-ends'
End-Procedure !print-list-file
!==============================================================================!
!******************************************************************************!
! Procedure Name:  show-sql-error                                              *
!                                                                              *
! Called By: update-existing-record and  insert-fo-wc-premium                  *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function :                                                                   *
!                                                                              *
!******************************************************************************!
begin-procedure show-sql-error

show 'SQL Error: ' $SQL-Error
show '  $emplid            ['   $emplid           ']'
show '  $jobcode           ['   $jobcode          ']'
show '  $xref_custid       ['   $xref_custid      ']'
show '  $xref_bu_pc        ['   $xref_bu_pc       ']'
show '  $xref_projid       ['   $xref_projid      ']'
show '  $deptid            ['   $deptid           ']'
show '  $original_state    ['   $original_state   ']'
show '  $rate_type         ['   $rate_type        ']'
show '  $earnings_code     ['   $earnings_code    ']'
show '  $pay_end_dt        ['   $pay_end_dt       ']'
show '  $pay_end_dt1       ['   $pay_end_dt1      ']'
show '  $company           ['   $company          ']'
show '  $location          ['   $location         ']'
show '  #total_hours       ['   #total_hours      ']'
show '  #total_earnings    ['   #total_earnings   ']'
show '  $comp_earns        ['   $comp_earns       ']'
show '  $fo_wc_code        ['   $code             ']'
show '  $mono_type         ['   $mono_type        ']'
show '  $business_unit_gl  ['   $business_unit_gl ']'
show '  $premium           ['   $premium          ']'
show '  #fo_wc_rate        ['   #fo_wc_rate       ']'
show '  #mod_rate          ['   #mod_rate         ']'
show '  $product           ['   $product          ']'
show '  $gl_wc_exp         ['   $gl_wc_exp        ']'
show '  $gl_wc_liab        ['   $gl_wc_liab       ']'
show '  $jobcode_descr     ['   $jobcode_descr    ']'
show '  $code_descr        ['   $code_descr       ']'

show ' '

end-procedure !show-sql-error
!==============================================================================!

!******************************************************************************!
! Procedure Name: finalization                                                 *
!                                                                              *
! Called By: Begin-Program                                                     *
!                                                                              *
! Calls    : None                                                              *
!                                                                              *
! Function : Wraps up the program                                              *
!                                                                              *
!******************************************************************************!
begin-procedure finalization

  do Init-Datetime
  do Get-Current-DateTime

  Show ''
  Show 'Date: ' $AsOfToday
  Show 'Time: ' $AsOfNow
  Show ''

  Show 'fowc004.sqr process successful.'

end-procedure !finalization
!==============================================================================!
!**************************************************************************
!                                                                         *
! PROCEDURE: 8000-WRAPUP                                                  *
!                                                                         *
! PURPOSE: THIS PROCEDURE:                                                *
!            1. UPDATES THE PROCESS SCHEDULER TO INDICATE A SUCCESSFUL    *
!               COMPLETION.                                               *
!            2. EXECUTES THE STANDARD ERROR REPORT PROCEDURE TO GENERATE  *
!               A REPORT OF ANY ERRORS ENCOUNTERED DURING THE PROCESS.    *
!                                                                         *
!**************************************************************************
BEGIN-PROCEDURE 8000-wrapup

if $prcs_process_instance <> ''
   do update-prcs-run-status
end-if

END-PROCEDURE
!******************************************************************************!
!  PeopleSoft SQC's                                                            *
!******************************************************************************!
! #include 'getdatcd.sqc'  !Get-Date-Codes procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
!#include 'rotname3.sqc'  !Rotate Name Procedure
#include 'datemath.sqc'  !Routine for performing date math
!#include 'askftd.sqc'    !Routine for asking from thru dates
#Include 'prcsdef.sqc'   !Update Process Request variable declare
#Include 'prcsapi.sqc'   !Update Process API
