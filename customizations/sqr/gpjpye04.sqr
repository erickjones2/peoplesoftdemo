!***********************************************************************
! GPJPYE04.sqr:  Dependent Deduction Report                            *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  31887292                                            !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment
#DEFINE JapaneseDates
#DEFINE PRINT_JAPANESE

#include 'gpjppnbr.sqc'  !JPN Personal Number
begin-setup
declare-variable
   integer #Ageofdep
   end-declare
#include 'gpjpyel2.sqc'  !page layout and printer definition
end-setup

begin-report
        #IFDEF GPJPPNBR-Included                  !gpjppnbr.sqc
          do Check-JPN-Personal-Nbr-Install
        #ENDIF
        do Check-JPN-TE-Firm-Num-Install          !getestab.sqc
        do Init-Processing
        do Process-Main
        do Reset
        do Update-Prcs-Run-Status
end-report


!***********************************************************************
! Init-Processing                                                      *
! Called By:    begin-report                                           *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Define-Prcs-Vars        - prcsapi.sqc                  *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Get-Language-Codes      - prcslng.sqc                  *
!               Get-GPJPYE04-runctl                                    *
!               Init-Report                                            *
! Description:  Standard PeopleSoft initialization processing.         *
!***********************************************************************
begin-procedure Init-Processing

        do Init-Datetime
        do Get-Current-Datetime
        do Define-Prcs-Vars
        do Get-Run-Control-Parms
        do Get-Language-Codes
        if $JPN-Personal-Nbr-Installed='Y'
          do Get-Prcs-Instance-Pers-Nbr-Process
        end-if
        do Get-GPJPYE04-runctl
        do Build-Select
        do Init-Report
        do Get-Sort-Order
end-procedure ! Init-Processing




!***********************************************************************
! Get-GPJPYE04-runctl                                                  *
! Called By:    Init-Processing                                        *
! Description:  Gets data from GPJP_RC_YEA-RPT runcotrol record.       *
!***********************************************************************
begin-procedure Get-GPJPYE04-Runctl


begin-SELECT

RC.DATE_YEAR_VAL
RC.GPJP_TAX_ESTAB
RC.PAY_ENTITY
RC.BUSINESS_UNIT
RC.DEPTID
RC.LOCATION
RC.GPJP_PAYEE_IND
RC.GPJP_INCL_PERNBR
RC.GPJP_INCL_PNBR_MSG

  let #RC_ObjectYear     = &RC.DATE_YEAR_VAL
  let $RC_Estab          = RTRIM(&RC.GPJP_TAX_ESTAB, ' ')
  let $RC_Pay_entity     = RTRIM(&RC.PAY_ENTITY, ' ')
  let $RC_BusinessUnit   = RTRIM(&RC.BUSINESS_UNIT, ' ')
  let $RC_DeptId         = RTRIM(&RC.DEPTID, ' ')
  let $RC_Location       = RTRIM(&RC.LOCATION, ' ')
  let $RC_Pye_ind        = RTRIM(&RC.GPJP_PAYEE_IND, ' ')
  let $RC_Print_Pers_Nbr = RTRIM(&RC.GPJP_INCL_PERNBR, ' ')
  let $RC_Print_PNbr_Msg = RTRIM(&RC.GPJP_INCL_PNBR_MSG, ' ')
FROM PS_GPJP_RC_YEA_RPT RC
WHERE RC.OPRID = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SELECT

   LET $Estab = $RC_Estab

end-procedure ! Get-GPJPYE04-Runctl




!***********************************************************************
! Init-Report                                                          *
! Called By:    Init-Processing                                        *
! Calls:        Init_Report_Translation    - sqrtrans.sqc              *
!               Append_Report_Translation  - sqrtrans.sqc              *
!               Get_Field_Information                                  *
! Description:  Initializes variables, defines values for variables    *
!               used in report header & throughout report.  Performs   *
!               Strings Table translation.  #Defines variables for     *
!               use throughout report in printing columns.             *
!***********************************************************************
begin-procedure Init-Report
    let #gpjpye04-default-point-size = 7.2
    let $Mark_circle   = 'o'

    let #Max-lines-dep  = 4
    let #Max-lines-dep2 = 3
    let #Max-lines-dis-descr = 4
    let #Max-lines-dis-rchan = 4
    let #Max-chars-dis-descr = 65
    let #Max-chars-dis-rchan = 19

    do gpjp_print_cm_adjust_coordinate(-0.37, 0.07)   !HP LaserJet 9000N Setting when top-margin = 0 and left-margin = 0
!***********************************************************************
! Translations procedures & Strings Table retrievals.                  *
!***********************************************************************

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Append_Report_Translation ('GPJPYE04')

    do Get_Field_Information ('GPJPYE04','PAGE',       $GPJPYE04_Page,        #dummy_width)
    do Get_Field_Information ('GPJPYE04','CONTINUED',  $GPJPYE04_Continued,   #dummy_width)
    do Get_Field_Information ('GPJPYE04','MARK_CIRCLE',$GPJPYE04_Mark_circle,   #dummy_width)
    do Get_Field_Information ('GPJPYE04','SAME_ADDRESS_EMPL',$GPJPYE04_Same_address_empl,  #dummy_width)
    do Get_Field_Information ('GPJPYE04','GPJP_INCL_PNBR_MSG',$GPJPYE04_Personal_number_msg,  #dummy_width)
    let $_TableAlias = 'B'
    do Security-Param

end-procedure ! Init-Report


!***********************************************************************
! Select-Employees                                                     *
! Calls:        none                                                   *
! Description:  Selects employees off run control.  Strings them into  *
!                   a variable for use in the main select clause in    *
!                   the calling report.                                *
!***********************************************************************

begin-procedure Select-Employees
    let $Quote                  = ''''
    let $Multiple = 'N'     ! Controls the stringing format for the Select_Clause.
    let $Employee_List          = ' '

begin-SELECT

LVL1B.OPRID                 &LVL1B.OPRID
LVL1B.RUN_CNTL_ID           &LVL1B.RUN_CNTL_ID
LVL1B.EMPLID                &LVL1B.EMPLID
LVL1B.EMPL_RCD              &LVL1B.EMPL_RCD
    let $Runctl_Emplid = &LVL1B.EMPLID
    let #Runctl_Emplrcd = &LVL1B.EMPL_RCD

    if $Multiple = 'N'
       let $EE_Select_Clause = ' AND ((B.EMPLID = ' ||$Quote||$Runctl_Emplid||$Quote|| ' AND B.EMPL_RCD = ' ||to_char(#Runctl_Emplrcd)|| ')'
    else
       let $EE_Select_Clause = $EE_Select_Clause|| ' OR (B.EMPLID = ' ||$Quote||$Runctl_Emplid||$Quote|| ' AND B.EMPL_RCD = ' ||to_char(#Runctl_Emplrcd)|| ')'
    end-if
    let $Multiple = 'Y'

    FROM PS_GPJP_RC_YEA_PYE     LVL1B

    WHERE LVL1B.OPRID        = $Prcs_OprID
      AND LVL1B.RUN_CNTL_ID  = $Prcs_Run_Cntl_ID
end-SELECT

    let $EE_Select_Clause  = $EE_Select_Clause || ')'

end-procedure ! Select-Employees


!***********************************************************************
!                                                                      *
! Get-Sort-Order                                                       *
!                                                                      *
!                                                                      *
! Called By: Init-Processing                                           *
!                                                                      *
! Description:  Determines Sort order string                           *
!               ICE 547284001                                          *
!                                                                      *
!***********************************************************************

begin-procedure Get-Sort-Order



begin-SELECT
RC.GPJP_BU_SORT,
RC.GPJP_LOC_SORT,
RC.GPJP_DEPT_SORT,
RC.GPJP_SUPV_SORT,
RC.GPJP_INCL_BU_LOC



     let $Order_By     = ' '

     If &RC.GPJP_BU_SORT = 'Y'
       Let $Order_By = 'Order by C.BUSINESS_UNIT'
     end-if

     If &RC.GPJP_LOC_SORT = 'Y'
       If $Order_By = ' '
          Let $Order_By = 'Order by C.LOCATION '
       else
         Let $Order_By = $Order_By || ', C.LOCATION '
       end-if
     end-if

     If &RC.GPJP_DEPT_SORT = 'Y'
       If $Order_By = ' '
          Let $Order_By = 'Order by C.DEPTID'
       else
         Let $Order_By = $Order_By || ', C.DEPTID'


       end-if
     end-if

     If &RC.GPJP_SUPV_SORT = 'Y'
       If $Order_By = ' '
          Let $Order_By = 'Order by C.SUPV_LVL_ID'
       else
         Let $Order_By = $Order_By || ', C.SUPV_LVL_ID'
       end-if
     end-if

     If $Order_By = ' '
         Let $Order_By = 'Order by B.EMPLID'
       else
         Let $Order_By = $Order_By || ', B.EMPLID'
     end-if

FROM PS_GPJP_RC_YEA_RPT RC
WHERE RC.OPRID = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID


end-SELECT


end-procedure Get-Sort-Order

!***********************************************************************
! Build-select                                                         *
! Called By:    Begin-Report                                           *
! Description:  Builds dynamic select statement for main procedure.    *
!***********************************************************************
begin-procedure Build-select

     let $Select_Clause_1 = 'B.GPJP_TAX_ESTAB = ''' || $RC_Estab ||''''
     if $RC_Pay_entity <> ''
         let $Select_Clause_1 =  $Select_Clause_1 || 'AND PG.PAY_ENTITY = ''' || $RC_Pay_Entity ||''''
     end-if
     if $RC_BusinessUnit <> ''
         let $Select_Clause_1 =  $Select_Clause_1 || 'AND C.BUSINESS_UNIT = ''' || $RC_BusinessUnit ||''''
     end-if
     if $RC_DeptId <> ''
         let $Select_Clause_1 =  $Select_Clause_1 || 'AND C.DEPTID = ''' || $RC_DeptId ||''''
     end-if
     if $RC_Location <> ''
         let $Select_Clause_1 =  $Select_Clause_1 || 'AND C.LOCATION = ''' || $RC_Location ||''''
     end-if

     if $RC_Pye_ind   = 'Y'
         do Select-Employees
     end-if
     
end-procedure !Build-select


!***********************************************************************
!                                                                      *
! Process-Main                                                         *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Description:  Main procedure.                                        *
!                                                                      *
!***********************************************************************
begin-procedure Process-Main

     let $No_records = 'Y'
     do Get_ASOFDATE
     LET $Estab = $RC_Estab
     let $EstabType      = 'IT'
     do Get-Estab-Name
     do Set_TaxEstab-Address


Begin-SELECT DISTINCT
B.EMPLID
B.EFFDT
B.NAME    !hoh NAME
B.GPJP_IT_HOHREL
B.GPJP_IT_EMPDIS
B.GPJP_IT_EMPTYPE
B.GPJP_DIS_DESCR
B.GPJP_DIS_RCHAN
B.GPJP_TAX_ESTAB
C.EMPL_RCD
C.EFFSEQ
C.BUSINESS_UNIT
C.LOCATION
C.DEPTID
PG.PAY_ENTITY
C.SUPV_LVL_ID
C.SETID_SUPV_LVL

     let $My_Emplid      = rtrim(&B.EMPLID, ' ')
     let #Empl_rcd       = &C.Empl_rcd
     let $BU             = &C.Business_unit
     let $HOH_name       = rtrim(&B.NAME, ' ')
     let $Emp_dis        = rtrim(&B.GPJP_IT_EMPDIS, ' ')
     let $Emp_type       = rtrim(&B.GPJP_IT_EMPTYPE, ' ')
     let $Emp_DIS_DESCR  = rtrim(&B.GPJP_DIS_DESCR, ' ')
     let $Emp_DIS_RCHAN  = rtrim(&B.GPJP_DIS_RCHAN, ' ')
     let $BU             = rtrim(&C.BUSINESS_UNIT,' ')
     let $Location       = rtrim(&C.LOCATION,' ')
     let $DeptID         = rtrim(&C.DEPTID,' ')
     let $Supv_lvl_id    = rtrim(&C.SUPV_LVL_ID,' ')
     let $Setid          = rtrim(&C.SETID_SUPV_LVL,' ')
 If &RC.GPJP_INCL_BU_LOC = 'Y'

     do Get-Business-Unit-Name
     let $BUDesc = $BU_DESCRSHORT


     let $Recname = 'LOCATION_TBL'
     do Get-Location-Name
     let $LocationDesc = $LocationAbbrv


  end-if


!    get translate value for HOH relationship:
     let $HOH_rel        = rtrim(&B.GPJP_IT_HOHREL, ' ')
     let $FieldName      = 'GPJP_IT_HOHREL'
     let $FieldValue     = $HOH_rel
     do Read-Translate-Table
     let $HOH_rel        = rtrim($XlatLongName, ' ')

     do Print-report
     new-page

FROM PS_GPJP_IT_PYE_TAX B,
     PS_JOB C,
     PS_GP_PYGRP PG


WHERE
[$Select_Clause_1]
[$EE_Select_Clause]
AND B.EMPLID = C.EMPLID
AND B.EMPL_RCD = C.EMPL_RCD
AND B.GPJP_IT_TYPE = '10'
AND C.GP_PAYGROUP = PG.GP_PAYGROUP

AND B.EFFDT = (SELECT MAX(B1.EFFDT) FROM PS_GPJP_IT_PYE_TAX B1
               WHERE B1.EMPLID = B.EMPLID
               AND B1.EMPL_RCD = B.EMPL_RCD
               AND B1.EFFDT <= $SU_asofdate)
AND C.HR_STATUS = 'A'
AND C.PAY_SYSTEM_FLG = 'GP'
AND C.EFFDT = (SELECT MAX(C1.EFFDT) FROM PS_JOB C1
               WHERE C1.EMPLID = C.EMPLID
               AND C1.EMPL_RCD = C.EMPL_RCD
               AND C1.EFFDT <= $SU_asofdate)
AND C.EFFSEQ = (SELECT MAX(C2.EFFSEQ) FROM PS_JOB C2
               WHERE C2.EMPLID = C.EMPLID
               AND C2.EMPL_RCD = C.EMPL_RCD
               AND C2.EFFDT = C.EFFDT)

[$SecurityClausewithERN]
[$Order_By]
end-SELECT
    if $No_records <> 'Y'
        let $End = 'Y'
    end-if
end-procedure ! Process-Main


!***********************************************************************
! Get_ASOFDATE                                                         *
! Called By:    Process-Main                                           *
! Description:  Get_ASOFDATE from YEA setup                            *
!***********************************************************************
begin-procedure Get_ASOFDATE

! -----  Calculate the Dates  01/01 of the year   *

    let #first_day = 01
    let #january   = 01

    do dtu-format-date(#RC_ObjectYear, #january, #first_day, $Date_jan)
    do Convert-From-DTU-Date($Date_jan,$Jan_1st)

!  Asof date is the last day in the Object Year:
    let #thirty_first= 31
    let #december    = 12
    do dtu-format-date(#RC_ObjectYear, #december, #thirty_first, $Last_Object_yr_day)
    do Convert-From-DTU-Date($Last_Object_yr_day,$SU_asofdate)

 end-procedure ! Get_ASOFDATE


!***********************************************************************
! Print-report                                                         *
! Called By:    Process-Main                                           *
! Description:  Prints report                                          *
!***********************************************************************
begin-procedure Print-report

   !Initialize variables by payee
   let #page_no          = 0
   let #Disabled_dep     = 0
   let #Special_Dis_dep  = 0
   let #Living_w_Dis_dep = 0
   let $PYEDIS_DIS_DESCR = ''
   let $PYEDIS_DIS_RCHAN = ''

   do Get_EE_info
   do Print_New_Page

   ! print disability and type only first page
   do Print_EE_info

   ! print spouse information only first page
   let $Criteria_Dep_Rel = 'DB.RELATIONSHIP = ''SP'' AND DT.GPJP_IT_SUBJ_DED <> ''N'''
   do Get_Dependent_info

   ! print disability dependent count only first page
   do Count-Number-of-Dep-Disb
   do Print-Number-of-Dep-Disb
   ! fetch and print single parent dependent info in only first page
   do Get-Single-Parent-Dep-Dtl
   ! print dependent detail infomation
   let $Criteria_Dep_Rel = 'DB.RELATIONSHIP <> ''SP'' AND DT.GPJP_IT_SUBJ_DED <> ''N'''
   do Get_Dependent_info

end-procedure  !Print-report


!***********************************************************************
! Print_New_Page                                                       *
! Called By:                                                           *
! Description:                                                         *
!***********************************************************************
begin-procedure Print_New_Page()

   declare-variable
      decimal #xpos #ypos
      text $pstr
   end-declare

   let #_page_no     = #_page_no + 1
   
   if #_page_no > 1
     if #_dep_line_no > #_Max-lines-dep
       let #ypos =  20.25
     else
       let #ypos = 20.25
     end-if
     do gpjp_print_cm($_GPJPYE04_Continued, 4.2, #ypos) !item (17)
     new-page
   end-if

   do Print_Page_No(#_page_no)
   do Print_Heading
   do pers_number_message
   !initialize and update variables by page
   let #_dep_line_no         = 0
   let #_dep_line_no2        = 0
   let #_curr-line-dis-descr = 0
   let #_curr-line-dis-rchan = 0
   let #_Dependent_index     = 0

end-procedure ! Print_New_Page


!***********************************************************************
! Print_Page_No                                                        *
! Called By:                                                           *
! Description:                                                         *
!***********************************************************************
begin-procedure Print_Page_No(#page-no)

   let $pstr = $_GPJPYE04_Page || ' ' || edit(#page-no, '99')
   do gpjp_print_cm($pstr, 1.72, 0.72)   ! Print 'Page' + Page No.

end-procedure !Print_Page_No


!***********************************************************************
! Print_Heading                                                        *
! Called By:    Process-Main                                           *
! Description:  This procedure prints the 'Heading' which include      *
!  the Tax Establishment Info and Employee info                        *
!***********************************************************************
begin-procedure Print_Heading

   !Initialize variables by page.
   let #ypos-dis-descr = 12.20
   do gpjp_print_cm($EstabName , 6.75, 1.8)            !item (1)
   do Print_Firm_Number                                 !item (1a)      !gpjppnbr.sqc
   
   if #TE_add_len_p <= 33
      do gpjp_print_cm($TE_address, 6.75, 3.7)         !item (2)

   else
                                                        !item (2)
      do gpjp_print_cm_wrap($TE_address, 6.75, 3.70, 33, 0.30, 2)
      
   end-if


   do gpjp_print_cm($EE_name_ac, 14.30, 1.29)           !item (3)
   do gpjp_print_cm($EE_name,    14.30, 1.90)           !item (3)
   
   !Print payee's personal number
   do print_pers_number($EE_Pers_Nbr, 14.15, 2.8)      !item (3a)
  
    
   !print payee's birthDay
   evaluate #EE_Print_era
   when = 1
         do gpjpye04_mark_circle(21.33, 1.2, 0.15)     !item (5)
         break
   when = 2
         do gpjpye04_mark_circle(21.43, 1.2, 0.15)     !item (5)
         break
   when = 3
         do gpjpye04_mark_circle(21.78, 1.2, 0.15)     !item (5)
         break
   when = 4
         do gpjpye04_mark_circle(20.13, 1.4, 0.15)     !item (5)
         break
   end-evaluate

   do gpjp_print_cm($EE_Print_year_in_era, 22.07, 1.4) !item (5)
   do gpjp_print_cm($EE_Print_month,       23.10, 1.4) !item (5)
   do gpjp_print_cm($EE_Print_day,         24.20, 1.4) !item (5)

   do gpjp_print_cm($HOH_name, 21.25, 1.95)             !item (6)
   do gpjp_print_cm($HOH_rel,  21.25, 2.8)             !item (7)

   do gpjp_print_cm($EE_Postal1, 15.40, 3.28)           !item (8)
   do gpjp_print_cm($EE_Postal2, 16.31, 3.28)           !item (8)

   if #EE_add_len_p <= 65
      do gpjp_print_cm($EE_address, 14.20, 3.7)        !item (8)
   else
                                                        !item (8)
      do gpjp_print_cm_wrap($EE_address, 14.20, 3.24, 65, 0.28, 2)
   end-if


   ! item (9)  mark kanji with a circle
   if    $EE_marital_st = 'M'
      do gpjpye04_mark_circle(24.20, 3.5, 0.25)        !item (9)
   else
      do gpjpye04_mark_circle(24.80, 3.5, 0.25)        !item (9)
   end-if

end-procedure ! Print_Heading


!***********************************************************************
! Print_EE_info                                                        *
! Called By:    Process-Main                                           *
! Description:  Print_EE_info                                          *
!***********************************************************************
begin-procedure Print_EE_info()

   declare-variable
      Decimal #xpos #ypos #ypos-base #line-height-cm
      integer #lenp #i
   end-declare

!----  print Disability information:
    
   if $_Emp_dis = '20'                 ! disabled
      do gpjpye04_mark_circle(7.80, 13.06, 0.2)                            !item (26A)
   end-if 
   if $_Emp_dis = '30'                 ! Special disabled
      do gpjpye04_mark_circle(7.80, 13.53, 0.2)                            !item (26B)
   end-if


!----  print Employee Type information:
   let #xpos = 11.3
   let #ypos-base = 12.39
   let #radius = 0.22
   let #line-height-cm = 0.500  ! item line heghit [cm]


   
   Evaluate $_Emp_type
   when = '40'                  ! Widow
   when = '70'                  ! Working Student and Widow
      !if $_EE_sex = 'F'         ! Ordinary Widow
         let #ypos = #ypos-base
         do gpjpye04_mark_circle(#xpos, #ypos, #radius)                     !item (27-3)
      !else                      ! Ordinary Widower
      !   let #ypos = #ypos-base + #line-height-cm * 2 - 0.4
      !   do gpjpye04_mark_circle(#xpos, #ypos, #radius)                     !item (27-5)
     ! end-if
      break
   when = '50'                  ! Single parent 
   when = '80'                  ! Working Student and Single Parent
         let #ypos = #ypos-base + 0.07 + #line-height-cm
         do gpjpye04_mark_circle(#xpos, #ypos, #radius)                     !item (27-4)
   end-evaluate

   Evaluate $_Emp_type
   when = '20'                  ! Working Student
   when = '70'                  ! Working Student and Widow
   when = '80'                  ! Working Student and Single Parent
         let #ypos = #ypos-base + 0.14 + #line-height-cm * 2
         do gpjpye04_mark_circle(#xpos, #ypos, #radius)                     !item (27-6)
   end-evaluate

   if  $_PYEDIS_DIS_DESCR <> ''
      do gpjpye05-print-dis-descr($_PYEDIS_DIS_DESCR, 13.40, 12.64, #_Max-chars-dis-descr, 0.28, #_Max-lines-dis-descr, #_curr-line-dis-descr)
                                                                                 !item (28)
   end-if

   if $_PYEDIS_DIS_RCHAN <> ''
      do gpjpye05-print-dis-descr($_PYEDIS_DIS_RCHAN, 23.90, 12.64, #_Max-chars-dis-rchan, 0.28, #_Max-lines-dis-rchan, #_curr-line-dis-rchan)
                                                                            !item (29)
   end-if

end-procedure !              Print_EE_info


!***********************************************************************
! Print_Dependent_info                                                 *
! Called By:    Process-Main                                           *
! Description:  Print_Dependent_info                                   *
!***********************************************************************
begin-procedure Print_Dependent_info


   ! ***  Spouse  ******************************************************
  if $DB_relation = 'SP'
      let #ypos-SP-info = 6.60
      let #ypos-SP-info2 = 6.35  !2nd row of data

      !Name_ac
       alter-printer
         point-size = 5
         font = 3
         do gpjp_print_cm($DB_ac_name, 4.5, 6.0)
       
       !Name
       alter-printer
           font = 28825
           point-size = #gpjpye04-default-point-size
           do gpjp_print_cm($DB_name, 4.5, #ypos-SP-info)       !item (10)

      !Print dependant's personal number
      do print_pers_number($DB_Pers_Nbr, 7.67, #ypos-SP-info2)         !item (10a)
     
      !Birth date
      evaluate #DB_Print_era
      when = 1
         do gpjpye04_mark_circle(9.62, 6.65, 0.2)                    !item (11)
         break
      when = 2
         do gpjpye04_mark_circle(10.10, 6.65, 0.2)                    !item (11)
         break
      when = 3
         do gpjpye04_mark_circle(9.62, 6.75, 0.2)                    !item (11)
         break
      when = 4
         do gpjpye04_mark_circle(10.10, 6.75, 0.2)                    !item (11)
      end-evaluate

      do gpjp_print_cm($DB_Print_year_in_era,10.76, 6.69)     !item (11)
      do gpjp_print_cm($DB_Print_month,      11.68, 6.69)     !item (11)
      do gpjp_print_cm($DB_Print_day,        12.35, 6.69)     !item (11)
     
     ! The below commented not valid from 2018
     ! !Dependent Type(Elderly Spouse)
     ! if $DT_IT_SPOUSE  = '30'                !item (12) Spouse type Elderly
     !    do gpjpye04_mark_circle(11.50, 6.07, 0.25)                     !item (12)
     ! end-if

      !Address
      if $DB_same_addr  = 'Y'     
         do gpjp_print_cm($GPJPYE04_Same_address_empl,18.05, #ypos-SP-info)
      else
         if #DB_add_len_p <= 30
            do gpjp_print_cm($DB_address, 18.05, #ypos-SP-info)          !item (14)
         else
            do gpjp_print_cm_wrap($DB_address, 18.05, 5.68, 30, 0.30, 2) !item (14)
         end-if
      end-if

      !Expected Annual Income
      let $db_info_pstr_tmp = edit(#DT_DEP_INC, '999,999,999')
      let #ypstn = #ypos-SP-info - 0.2
      do gpjp_print_cm($db_info_pstr_tmp, 15.30, #ypstn)          !item (15)

      !Non-Resident Relative
      
      if $DT_non_resident_relative = 'Y'
         let #db_line_ypos_tmp = #ypos-SP-info2 + 0.24
         do gpjpye04_mark_circle(15.65, #db_line_ypos_tmp, 0.2)          !item (15a)
      end-if
      
      !Fact unifying a living
     ! let #db_line_ypos_tmp = #ypos-SP-info2 - 0.16
     ! let $db_info_pstr_tmp = edit(#DT_fact_unifying_living, '999,999,999')
     ! do gpjp_print_cm($db_info_pstr_tmp, 21.90, #db_line_ypos_tmp)      !item (15b)

      !Reason of Change
      if lengthp($DTT_DEP_RCHAN) < 19
         do gpjp_print_cm($DTT_DEP_RCHAN, 24.90, #ypos-SP-info)          !item (16)
      else
         do gpjp_print_cm_wrap($DTT_DEP_RCHAN, 24.90, 5.68, 19, 0.30, 2) !item (16)
      end-if

      !Disability Information
      evaluate $DT_GPJP_IT_DEPDIS
         when = '20'                                  ! disabled
            do gpjpye04_mark_circle(9.18, 13.06, 0.2)                    !item (26C)
            break
         when = '30'                                  ! Special disabled
            do gpjpye04_mark_circle(9.18, 13.53, 0.2)                    !item (26D)
            break
         when = '40'                                  ! Living with Special Disabled
            do gpjpye04_mark_circle(9.18, 14.10, 0.2)                    !item (26E)
      end-evaluate

   else

     ! ***  Non-deductible (Juvenile) Dependent  ****************************
     if $DT_IT_DEP = '11'

       !check page overflow
       let #dep_line_no2 = #dep_line_no2 + 1

       if #dep_line_no2 > #Max-lines-dep2
         do Print_New_Page
         let #dep_line_no2 = #dep_line_no2 + 1
       end-if

       if #page_no > 1 and #dep_line_no2 = #Max-lines-dep2
         do Print_Page_No(#page_no)
       end-if
   
       Let #ypos-dep-ac-info = 18.03 + 0.76 * (#dep_line_no2 - 1)
       let #ypos-dep-info = 18.27 + 0.73 * (#dep_line_no2 - 1)
       
       !Name_ac
    
       alter-printer
        point-size = 5
        font = 3

        do gpjp_print_cm($DB_ac_name, 4.8, #ypos-dep-ac-info)
       
       !Name
       alter-printer
        point-size = 5
        font = 3
    
         do gpjp_print_cm($DB_name, 4.8, #ypos-dep-info)

       !Print dependant's personal number
         let #db_line_ypos_tmp = #ypos-dep-info + 0.03 * (#dep_line_no2 -1)
         do print_pers_number($DB_Pers_Nbr, 7.35, #db_line_ypos_tmp)         ! Personal Number
       
       !Relationship to EE
       !get translate value for HOH relationship:
       if $DB_relation <> 'SP'
          let $FieldName      = 'GPJP_RELATIONSHIP'
          let $FieldValue     = $DB_relation
          do Read-Translate-Table
          let $DB_rel_print    = rtrim($XlatLongName, ' ')
          do gpjp_print_cm($DB_rel_print, 12.60, #ypos-dep-info)
       end-if
     evaluate #DB_Print_era
     
      when = 4
         let #db_line_ypos_tmp = (#ypos-dep-info - 0.30) 
         do gpjpye04_mark_circle(13.90, #db_line_ypos_tmp, 0.15)      !item (19)
      when = 5
         let #db_line_ypos_tmp = (#ypos-dep-info + 0.05) 
         do gpjpye04_mark_circle(13.90 , #db_line_ypos_tmp, 0.15)      !item (19)
      end-evaluate
       !Birth date
       do gpjp_print_cm($DB_Print_year_in_era,14.25, #ypos-dep-info )
       do gpjp_print_cm($DB_Print_month,      14.87, #ypos-dep-info)
       do gpjp_print_cm($DB_Print_day,        15.44, #ypos-dep-info)


       !Address
       if $DB_same_addr  = 'Y'
          do gpjp_print_cm($GPJPYE04_Same_address_empl,16.02,#ypos-dep-info)
       else
          if #DB_add_len_p <= 30
             do gpjp_print_cm($DB_address, 17.04, #ypos-dep-info)
          else
             let #db_line_ypos_tmp = 17.9 + 0.6 * (#dep_line_no2 -1)
             do gpjp_print_cm_wrap($DB_address, 17.04, #db_line_ypos_tmp, 30, 0.30, 2)
          end-if
       end-if
      
       !Non-Resident Relative 
       if $DT_non_resident_relative = 'Y'
        let #db_line_ypos_tmp = #ypos-dep-info - 0.19 !* (#dep_line_no2 -1)
        do gpjpye04_mark_circle(21.60, #db_line_ypos_tmp, 0.2)
       end-if
      
       !Expected Annual Income 
       let $db_info_pstr_tmp = edit(#DT_DEP_INC, '999,999,999')
       if #dep_line_no2 = 1
         do gpjp_print_cm($db_info_pstr_tmp, 21.77, #ypos-dep-info)
       else
         do gpjp_print_cm($db_info_pstr_tmp, 21.77, #ypos-dep-info)
       end-if
   
       !Reason of Change 
       if lengthp($DTT_DEP_RCHAN) < 19
         do gpjp_print_cm($DTT_DEP_RCHAN, 24.90, #ypos-dep-info)
       else
         let #db_line_ypos_tmp = 17.70 + 0.6 * (#dep_line_no2 -1)
         do gpjp_print_cm_wrap($DTT_DEP_RCHAN, 24.90, #db_line_ypos_tmp, 19, 0.30, 2)
       end-if

     ! ***  Other Non-Spouse Dependent  *************************************
    else
    
      !check page overflow
         let #dep_line_no = #dep_line_no + 1

      if #dep_line_no > #Max-lines-dep
         do Print_New_Page
         let #dep_line_no = #dep_line_no + 1
      end-if

      if #page_no > 1 and #dep_line_no = #Max-lines-dep
         do Print_Page_No(#page_no)
      end-if
  
      let #ypos-dep-ac-info = 7.25 + 1.26 * (#dep_line_no - 1)
      let #ypos-dep-info = 8.00 + 1.26 * (#dep_line_no - 1)
       
       !Name_ac
       alter-printer
        point-size = 5
        font = 3
        do gpjp_print_cm($DB_ac_name, 4.8, #ypos-dep-ac-info)
        
       !Name
       alter-printer
         font = 28825
         point-size = #gpjpye04-default-point-size
         do gpjp_print_cm($DB_name, 4.8, #ypos-dep-info)               !item (17)


      !Print dependant's personal number
      let #db_line_ypos_tmp = #ypos-dep-ac-info + 0.2 + 0.02 * (#dep_line_no - 1)
      do print_pers_number($DB_Pers_Nbr, 7.67, #db_line_ypos_tmp)   !item (17a)
      
      !Relationship to EE
      !get translate value for HOH relationship:
      if $DB_relation <> 'SP'
         let $FieldName      = 'GPJP_RELATIONSHIP'
         let $FieldValue     = $DB_relation
         do Read-Translate-Table
         let $DB_rel_print    = rtrim($XlatLongName, ' ')
         do gpjp_print_cm($DB_rel_print, 7.6 , #ypos-dep-info)       !item (18)
      end-if

      !Birth date
      
      evaluate #DB_Print_era
      when = 1
      
         let #db_line_ypos_tmp = 7.80+ 1.25 * (#dep_line_no -1)
         do gpjpye04_mark_circle(9.65, #db_line_ypos_tmp, 0.2)      !item (19)
         break
      when = 2
         let #db_line_ypos_tmp = 7.80 + 1.25 * (#dep_line_no -1)
         do gpjpye04_mark_circle(10.06, #db_line_ypos_tmp, 0.2)      !item (19)
         break
      when = 3
         let #db_line_ypos_tmp = 7.99 + 1.25 * (#dep_line_no -1)
         do gpjpye04_mark_circle(9.65, #db_line_ypos_tmp, 0.2)      !item (19)
         break
      when = 4
         let #db_line_ypos_tmp = 7.99 + 1.25 * (#dep_line_no -1)
         do gpjpye04_mark_circle(10.06, #db_line_ypos_tmp, 0.2)      !item (19)
      end-evaluate

      let #db_line_ypos_tmp = #ypos-dep-info 
      do gpjp_print_cm($DB_Print_year_in_era,10.70, #db_line_ypos_tmp)  !item (19)
      do gpjp_print_cm($DB_Print_month,      11.62, #db_line_ypos_tmp)  !item (19)
      do gpjp_print_cm($DB_Print_day,        12.29, #db_line_ypos_tmp)  !item (19)

      ! Dependent type (mark kanji with a circle)
      
      let #db_line_ypos_tmp = #ypos-dep-info - 0.85
      let #db_line_ypos_tmp1 = #ypos-dep-info - 1.00 + 0.25 +0.15
      let #db_line_ypos_tmp2 = #ypos-dep-info - 1 + 0.9
      
      if $DT_IT_DEP  = '50'                                !Liv w/ Elderly
         do gpjpye04_mark_circle(13.37, #db_line_ypos_tmp, 0.2)     !item (21)(Alignment updated by ICE 537155000)
      end-if

      if $DT_IT_DEP  = '40'                                !Elderly
         do gpjpye04_mark_circle(13.37, #db_line_ypos_tmp1, 0.2)     !item (20)(Alignment updated by ICE 537155000)
      end-if

      if $DT_IT_DEP  = '30'                                !Specified
         do gpjpye04_mark_circle(13.37, #db_line_ypos_tmp2, 0.2)     !item (20)(Alignment updated by ICE 537155000)
      end-if

      !Address
      if $DB_same_addr  = 'Y'
         do gpjp_print_cm($GPJPYE04_Same_address_empl, 18.05, #ypos-dep-info)
      else
         if #DB_add_len_p <= 30
            do gpjp_print_cm($DB_address, 18.05, #ypos-dep-info)     !item (23)
         else
            let #db_line_ypos_tmp = 6.80 + 1.1 * (#dep_line_no -1)
            do gpjp_print_cm_wrap($DB_address, 18.05, #db_line_ypos_tmp, 30, 0.30, 2) !item (23)
         end-if
      end-if

      !Expected Annual Income
      let $db_info_pstr_tmp = edit(#DT_DEP_INC, '999,999,999')
      let #yamntpos = #ypos-dep-info - 0.6
      do gpjp_print_cm($db_info_pstr_tmp, 15.30, #yamntpos)     !item (24)
      
      !Non-Resident Relative
      
      if $DT_non_resident_relative = 'Y'
       let #db_line_ypos_tmp = #ypos-dep-info  
       do gpjpye04_mark_circle(15.65, #db_line_ypos_tmp, 0.2)      !item (24a)
      end-if
      
      !Fact unifying a living 
      let #db_line_ypos_tmp = #ypos-dep-info - 0.05 + 0.02 * (#dep_line_no - 1)
      let $db_info_pstr_tmp = edit(#DT_fact_unifying_living, '999,999,999')
      do gpjp_print_cm($db_info_pstr_tmp, 16.20, #db_line_ypos_tmp)  !item (24b)
      
      
      Show '#ypos-dep-info - ' #ypos-dep-info
      Show '#dep_line_no - ' #dep_line_no
      let #rsn_line_ypos_tmp = #ypos-dep-info  + 0.02 * (#dep_line_no - 1)
      !Reason of Change
      if lengthp($DTT_DEP_RCHAN) < 19
         do gpjp_print_cm($DTT_DEP_RCHAN, 24.90, #rsn_line_ypos_tmp)     !item (25)
      else
         let #db_line_ypos_tmp = 6.96 + 1.1 * (#dep_line_no -1)
         do gpjp_print_cm_wrap($DTT_DEP_RCHAN, 24.90, #rsn_line_ypos_tmp, 19, 0.30, 2)  !item (25)
      end-if

    end-if

   end-if

   !Description of Disability & Reason of Disability Change

   if  $DEPDIS_DIS_DESCR <> ''

      do gpjpye05-print-dis-descr($DEPDIS_DIS_DESCR, 13.40, 12.66, #Max-chars-dis-descr, 0.28, #Max-lines-dis-descr, #curr-line-dis-descr)
                                                                     !item (28)
   end-if

   if $DEPDIS_DIS_RCHAN <> ''
      do gpjpye05-print-dis-descr($DEPDIS_DIS_RCHAN, 23.9, 12.66, #Max-chars-dis-rchan, 0.28, #Max-lines-dis-rchan, #curr-line-dis-rchan)
                                                                     !item (29)
   end-if

end-procedure ! Print_Dependent_info


!***********************************************************************
! print_pers_number                                                    *
! Called By:    Print_Heading                                          *
! Description:  print_pers_number                                      *
!***********************************************************************
begin-procedure print_pers_number($str_pers_nbr,#xpos,#ypos)
   declare-variable
      text $str
   end-declare
   
   alter-printer
      point-size = 10.25
      font = 3

   let $str = edit($str_pers_nbr, 'xbxbxbxbxbxbxbxbxbxbxbxb')
   do gpjp_print_cm($str, #xpos, #ypos)
   
   alter-printer
      point-size = #_gpjpye04-default-point-size
      font = 28825
end-procedure




!***********************************************************************
! Print_Firm_Number                                                    *
! Called By:    Process-Main                                           *
! Description:  Print firm number of Tax establishment                 *
!***********************************************************************
begin-procedure Print_Firm_Number()
    declare-variable
       text $print_firm_number
    end-declare

    if #_FirmNumber <> 0 
    !Print Firm Number if it is not equal to 0 (default)

       alter-printer
          point-size = 10.25
          font = 3
      
       let $print_firm_number = edit(#_FirmNumber,'xbxbxbxbxbxbxbxbxbxxbxbxb')
       do gpjp_print_cm($print_firm_number, 6.55, 2.8)            !item (1a)
       
       alter-printer
          point-size = #_gpjpye04-default-point-size
          font = 28825
    end-if    
end-procedure




!***********************************************************************
! Print-Number-of-Dep-Disb                                             *
! Called By:    Process-Main                                           *
! Description:  Print-Number-of-Dep-Disb                               *
!***********************************************************************
begin-procedure Print-Number-of-Dep-Disb()
   declare-variable
      text $str
   end-declare
   alter-printer
      point-size = 7
      font = 3

   let $str = edit(#_Disabled_dep, '99')
   do gpjp_print_cm($str, 10.40, 13.11)     !item (26F)
   let $str = edit(#_Special_Dis_dep, '99')
   do gpjp_print_cm($str, 10.40, 13.65)     !item (26G)
   let $str = edit(#_Living_w_Dis_dep, '99')
   do gpjp_print_cm($str, 10.40, 14.25)     !item (26H)
   alter-printer
      point-size = #_gpjpye04-default-point-size
      font = 28825
end-procedure



!***********************************************************************
! TaxEstab-Address                                                     *
! Called By:    Process-Main                                           *
! Description:  Set up the Tax Establishment address                   *
!***********************************************************************
begin-procedure Set_TaxEstab-Address()
   declare-variable
      text $postal
   end-declare

   let $postal = ltrim($_EstabPostal,' ')
   do gpjp_separate_postal($postal, $_TE_Postal1, $_TE_Postal2)

   let $_TE_address = $_EstabState || $_EstabCity || $_EstabAddr1 ||
                      $_EstabAddr2 || $_EstabAddr3 || $_EstabAddr4
   let #_TE_add_len_p = lengthp($_TE_address)


end-procedure !Set_TaxEstab-Address



!***********************************************************************
! Get_EE_info                                                          *
! Called By:    Process-Main                                           *
! Description:  Get and print EE infor                                 *
!***********************************************************************
begin-procedure Get_EE_info

    let $EE_name       = ''
    let $EE_name_ac    = ''
    let $EE_Pers_Nbr   = ''
    let $EE_bthdt_era  = ''
    let $Bthdt6        = ''
    let $EE_sex        = ''
    let $EE_marital_st = ''
    let $EE_deathdate  = ''

BEGIN-SELECT

A.NAME
A.NAME_AC
PER.GPJP_CHRDT_ERA1  &PER.GPJP_CHRDT_ERA1
PER.GPJP_CHRDT_YYMMDD1 &PER.GPJP_CHRDT_YYMMDD1
PER.DT_OF_DEATH      &PER.DT_OF_DEATH
PER.SEX              &PER.SEX
PER.MAR_STATUS       &PER.MAR_STATUS

    let $EE_name       = rtrim(&A.NAME,' ')
    let $EE_name_ac    = rtrim(&A.NAME_AC, ' ')
    let $EE_sex        = rtrim(&PER.SEX,' ')
    let $EE_marital_st = rtrim(&PER.MAR_STATUS, ' ')
    let $EE_bthdt_era  = rtrim(&PER.GPJP_CHRDT_ERA1, ' ')
    let $Bthdt6        = rtrim(&PER.GPJP_CHRDT_YYMMDD1, ' ')

    let $EE_deathdate  = &PER.DT_OF_DEATH
    do  Get-Japanese-Dates
    let #EE_Print_era  = $EE_bthdt_era
    let $EE_Print_year_in_era = $Print_year_in_era
    let $EE_Print_month = $Print_month
    let $EE_Print_day   = $Print_day

!***   Trim description to fit the space available on the report page.
    if length($EE_name) > 30
        let $EE_name = substr($EE_name,1,30)
    end-if

   FROM PS_GPJP_PERSDTA_VW PER
      , PS_NAMES A
   WHERE PER.EMPLID = $My_Emplid
     AND PER.EMPLID = A.EMPLID
     AND PER.EFFDT = (
       SELECT MAX(B.EFFDT)
         FROM PS_PERS_DATA_EFFDT B
         WHERE B.EMPLID = PER.EMPLID
           AND B.EFFDT <= $SU_asofdate)
     AND A.NAME_TYPE = 'PRI'
     AND A.EFFDT = (
       SELECT MAX(B.EFFDT)
         FROM PS_NAMES B
         WHERE B.EMPLID = A.EMPLID
           AND B.NAME_TYPE = A.NAME_TYPE
           AND B.EFFDT <= $SU_asofdate)

END-SELECT

    !Payee personal number
    let $EE_Pers_Nbr = ' '
    if $RC_Print_Pers_Nbr = 'Y'
       if $JPN-Personal-Nbr-Installed='Y'
       do Get_Pers_Nbr(' ',$EE_Pers_Nbr)   !gpjppnbr.sqc
       end-if
    end-if

    let $EE_ADDR_TYPE = ' '
    let $country       = ' '
    let $postal        = ' '
    let $state         = ' '
    let $city          = ' '
    let $add1          = ' '
    let $add2          = ' '
    let $add3          = ' '
    let $add4          = ' '
    let $addr_type    = 'LEGL'
    do Get_EE_address
    if $EE_ADDR_TYPE = ' '
       let $addr_type = 'HOME'
       do Get_EE_address
    end-if

    do Get_EE_Latest_DIS_RCHAN

end-procedure  !Get_EE_info


!***********************************************************************
! Count-Number-of-Dep-Disb                                                 *
! Called By:    Process-Main                                           *
! Description:  Count up Disability Information of Dependent           *
!***********************************************************************
begin-procedure Count-Number-of-Dep-Disb()

BEGIN-SELECT

DT.GPJP_IT_DEPDIS  &GPJP_IT_DEPDIS

   let $DT_GPJP_IT_DEPDIS = rtrim(&GPJP_IT_DEPDIS, ' ')

   evaluate $DT_GPJP_IT_DEPDIS
   when = '20'                              ! disabled
      let #_Disabled_dep =  #_Disabled_dep + 1
      break
   when = '30'                      ! Special disabled
      let #_Special_Dis_dep =  #_Special_Dis_dep + 1
      break
   when = '40'          ! Living with Special Disabled
      let #_Living_w_Dis_dep =  #_Living_w_Dis_dep + 1
      break
   end-evaluate

FROM  PS_DEP_BEN_EFF DB, PS_GPJP_IT_DEP_TAX DT
WHERE DB.EMPLID = $_My_Emplid
  AND DB.EMPLID = DT.EMPLID
  AND DT.EMPL_RCD = #_Empl_rcd
  AND DB.DEPENDENT_BENEF = DT.DEPENDENT_BENEF
  AND DB.RELATIONSHIP <> 'SP'
  AND DB.EFFDT = (SELECT MAX(DB2.EFFDT) FROM PS_DEP_BEN_EFF DB2
                      WHERE DB.EMPLID = DB2.EMPLID
                        AND DB.DEPENDENT_BENEF = DB2.DEPENDENT_BENEF
                        AND DB2.EFFDT <= $_SU_asofdate
                 )
  AND DT.EFFDT = (SELECT MAX(DT2.EFFDT) FROM PS_GPJP_IT_DEP_TAX DT2
                      WHERE DT.EMPLID = DT2.EMPLID 
                        AND DT.EMPL_RCD = DT2.EMPL_RCD
                        AND DT.DEPENDENT_BENEF = DT2.DEPENDENT_BENEF
                        AND DT2.EFFDT <= $_SU_asofdate
                 )

END-SELECT

end-procedure  !Count-Number-of-Dep-Disb



!***********************************************************************
! Get-Single-Parent-Dep-Dtl                                                 *
! Called By:    Process-Main                                           *
! Description:  Print Single Parent Dependent Related Information           *
!***********************************************************************
begin-procedure Get-Single-Parent-Dep-Dtl()


BEGIN-SELECT
     
DB.GPJP_CHILD_NAME &DB_GPJP_CHILD_NAME
DB.GPJP_CHLD_REAR_NUM &DB_GPJP_CHLD_REAR_NUM
DB.GPJP_CHLD_EST_INCO &DB_GPJP_CHLD_EST_INCO
DB.GPJP_CHG_REASON &DB_GPJP_CHG_REASON
     let $Name = &DB_GPJP_CHILD_NAME
    let $Num= &DB_GPJP_CHLD_REAR_NUM
    let $Income= edit(&DB_GPJP_CHLD_EST_INCO,'9,999,999,999')     
    let $Reason= &DB_GPJP_CHG_REASON
   
   do gpjpye04_mark_circle(4.65,19.3, 0.15) 
   do gpjp_print_cm($Num, 9.4, 19.3)
   !do gpjp_print_cm($Name, 14.6, 25.0)
    IF lengthp($Name) > 20  
   do gpjp_print_cm_wrap($Name, 14.6, 30.0, 20, 0.30, 2)
   ELSE
   do gpjp_print_cm($Name, 14.6, 30.0)
   END-IF
   do gpjp_print_cm($Income, 19.5, 30.0)
   IF lengthp($Reason) > 20  
   do gpjp_print_cm_wrap($Reason, 29.0, 30.0, 20, 0.30, 2)
   ELSE
   do gpjp_print_cm($Reason, 29.0, 38.0)
   END-IF

FROM  PS_GPJP_SIN_PARENT DB
WHERE DB.EMPLID = $_My_Emplid
  AND DB.GPJP_CHANGE_DATE = (SELECT MAX(DT2.GPJP_CHANGE_DATE) FROM PS_GPJP_SIN_PARENT DT2
                      WHERE DT2.EMPLID = DB.EMPLID 
                        AND DT2.GPJP_CHANGE_DATE <= $_SU_asofdate
                 )

END-SELECT

end-procedure  !Count-Number-of-Dep-Disb











!***********************************************************************
! Get-Japanese-Dates                                                   *
! Called By:    Get_EE_info                                            *
! Description:  This procedure converts the birthdate into the         *
!               appropriate Japanese format                            *
!***********************************************************************
begin-procedure Get-Japanese-Dates

        let $Print_year_in_era  = substr($Bthdt6,1,2)
        let $Print_month        = substr($Bthdt6,3,2)
        let $Print_day          = substr($Bthdt6,5,2)


end-procedure  ! Get-Japanese-Dates



!***********************************************************************
! Get_EE_address                                                       *
! Called By:    Process-Main                                           *
! Description:  Get_EE_address                                         *
!***********************************************************************
begin-procedure Get_EE_address()
   declare-variable
      text $country $state $state-str $postal $city $add1 $add2 $add3 $add4
      integer #addr_lengthp
   end-declare
    let $EE_ADDR_TYPE = ' '
    let $country       = ' '
    let $postal        = ' '
    let $state         = ' '
    let $city          = ' '
    let $add1          = ' '
    let $add2          = ' '
    let $add3          = ' '
    let $add4          = ' '

BEGIN-SELECT

PA.ADDRESS_TYPE   &PA.ADDRESS_TYPE
PA.COUNTRY        &PA.COUNTRY
PA.POSTAL         &PA.POSTAL
PA.STATE          &PA.STATE     ! prefecture
PA.CITY           &PA.CITY
PA.ADDRESS1       &PA.ADDRESS1
PA.ADDRESS2       &PA.ADDRESS2
PA.ADDRESS3       &PA.ADDRESS3
PA.ADDRESS4       &PA.ADDRESS4

    let $_EE_ADDR_TYPE = rtrim(&PA.ADDRESS_TYPE, ' ')
    let $country       = rtrim(&PA.COUNTRY, ' ')
    let $postal        = ltrim(rtrim(&PA.POSTAL,' '), ' ')
    let $state         = rtrim(&PA.STATE, ' ')
    let $city          = rtrim(&PA.CITY, ' ')
    let $add1          = rtrim(&PA.ADDRESS1, ' ')
    let $add2          = rtrim(&PA.ADDRESS2, ' ')
    let $add3          = rtrim(&PA.ADDRESS3, ' ')
    let $add4          = rtrim(&PA.ADDRESS4, ' ')
    FROM PS_ADDRESSES PA
    WHERE PA.EMPLID = $_My_Emplid
      AND PA.ADDRESS_TYPE = $_addr_type
      AND PA.EFFDT = (SELECT MAX(PA1.EFFDT)
                                  FROM PS_ADDRESSES PA1
                      WHERE  PA1.EMPLID = $_My_Emplid
                       AND PA1.ADDRESS_TYPE = $_addr_type
                       AND PA1.EFFDT <= $_Jan_1st)

END-SELECT     ! empl address
   do gpjp_separate_postal($postal, $_EE_Postal1, $_EE_Postal2)
   do get_state_descr($country, $state, $state-str)
   let $_EE_address = $state-str || $city || $add1 || $add2 || $add3 || $add4
   let #_EE_add_len_p = lengthp($_EE_address)


end-procedure  ! Get_EE_address

!***********************************************************************
! Get_Dependent_info                                                   *
! Called By:    Process-Main                                           *
! Description:  Get_Dependent_info                                     *
!***********************************************************************
begin-procedure Get_Dependent_info()
   declare-variable
      text $rel $country $state $state-str $postal $city $add1 $add2 $add3 $add4
      date $date4 $date6
   end-declare

 !  let #_Dependent_index = 0
   let #_NoRecord = {TRUE}

BEGIN-SELECT

DB.DEPENDENT_BENEF         &DB.DEPENDENT_BENEF
DB.RELATIONSHIP            &DB.RELATIONSHIP
DB.SEX      &DB.SEX
DB.MAR_STATUS    &DB.MAR_STATUS
DB.MAR_STATUS_DT   &DB.MAR_STATUS_DT
C.NAME                    &C.NAME
C.NAME_AC                 &C.NAME_AC
DB.BIRTHDATE              &DB.BIRTHDATE
DB.GPJP_CHRDT_ERA1        &DB.GPJP_CHRDT_ERA1
DB.GPJP_CHRDT_YYMMDD1     &DB.GPJP_CHRDT_YYMMDD1
DB.DT_OF_DEATH  &DB.DT_OF_DEATH
EM.BIRTHDATE   &EM.BIRTHDATE
EM.DT_OF_DEATH  &EM.DT_OF_DEATH
B.SAME_ADDRESS_EMPL       &B.SAME_ADDRESS_EMPL
B.COUNTRY                 &B.COUNTRY
B.POSTAL                  &B.POSTAL
B.STATE                   &B.STATE     ! prefecture
B.CITY                    &B.CITY
B.ADDRESS1                &B.ADDRESS1
B.ADDRESS2                &B.ADDRESS2
B.ADDRESS3                &B.ADDRESS3
B.ADDRESS4                &B.ADDRESS4

DT.GPJP_IT_SUBJ_DED   &DT.GPJP_IT_SUBJ_DED
DT.GPJP_PARENT_LWP   &DT.GPJP_PARENT_LWP
DT.GPJP_DEP_JOB            &DT.GPJP_DEP_JOB
DT.GPJP_DEP_INC            &DT.GPJP_DEP_INC
DT.GPJP_IT_DEPDIS          &DT.GPJP_IT_DEPDIS
DT.GPJP_NO_RSDNT_RLTV      &DT.GPJP_NO_RSNDT_RLTV
DT.GPJP_FCT_UNFY_LVNG      &DT.GPJP_FCT_UNFY_LVNG

   !Dependent Tax Information
   let $_DT_SUBJ_DED  = rtrim(&DT.GPJP_IT_SUBJ_DED, ' ')
   let $_DT_PARENT_LWP     = rtrim(&DT.GPJP_PARENT_LWP, ' ')
   let $_DT_DEP_JOB    = rtrim(&DT.GPJP_DEP_JOB, ' ')
   let $_DT_GPJP_IT_DEPDIS = rtrim(&DT.GPJP_IT_DEPDIS, ' ')


   if $_DB_relation <> 'SP' and $_DT_SUBJ_DED = 'Y'
      let #_Dependent_index = #_Dependent_index + 1
   end-if

   if #_NoRecord = {TRUE}
      let #_NoRecord = {FALSE}
   else
      do Print_Dependent_info
   end-if
   
   !Dependent Tax Information
   let #_DT_DEP_INC    = &DT.GPJP_DEP_INC
  
  !Dependent Benef Information
   let $_DB_dep_benef  = rtrim(&DB.DEPENDENT_BENEF, ' ')
   let $_DB_relation   = rtrim(&DB.RELATIONSHIP, ' ')
   let $_DB_marstatus  = rtrim(&DB.MAR_STATUS,' ')
   let $_DB_marstatusdt = rtrim(&DB.MAR_STATUS_DT,' ')
   let $_DB_name       = rtrim(&C.NAME, ' ')
   let $_DB_ac_name    = rtrim(&C.NAME_AC, ' ') 
   let $_DB_bthdt_era  = rtrim(&DB.GPJP_CHRDT_ERA1, ' ')
   let $_Bthdt6        = rtrim(&DB.GPJP_CHRDT_YYMMDD1, ' ')
   let $_DB_deathdate  = rtrim(&DB.DT_OF_DEATH, ' ')
   let $_DB_same_addr  = &B.SAME_ADDRESS_EMPL
   let $_DB_sex        = rtrim(&DB.SEX, ' ')

   !Dependent Tax Information (2)
   let $_DT_non_resident_relative  = &DT.GPJP_NO_RSNDT_RLTV
   let #_DT_fact_unifying_living   = &DT.GPJP_FCT_UNFY_LVNG
   
   !Dependent personal number
   let $_DB_Pers_Nbr = ' '
   if $_RC_Print_Pers_Nbr = 'Y'
      if $_JPN-Personal-Nbr-Installed='Y'
      do Get_Pers_Nbr($_DB_dep_benef,$_DB_Pers_Nbr)    !gpjppnbr.sqc
      end-if
   end-if

   if $_DB_same_addr <> 'Y'
      let $country       = rtrim(&B.COUNTRY, ' ')
      let $postal        = rtrim(&B.POSTAL, ' ')
      let $state         = rtrim(&B.STATE, ' ')
      let $city          = rtrim(&B.CITY, ' ')
      let $add1          = rtrim(&B.ADDRESS1, ' ')
      let $add2          = rtrim(&B.ADDRESS2, ' ')
      let $add3          = rtrim(&B.ADDRESS3, ' ')
      let $add4          = rtrim(&B.ADDRESS4, ' ')

      do get_state_descr($country, $state, $state-str)
      let $_DB_address = $state-str || $city || $add1 || $add2 || $add3 || $add4
      let #_DB_add_len_p = lengthp($_DB_address)

   end-if

    if $_DB_relation = 'P'
    if $_DB_sex = 'M'
      let $_DB_relation = 'F'
      else
      let $_DB_relation = 'M'
      end-if
       if $_DB_sex = 'U'
  let $_DB_relation = 'P'
  end-if
   end-if

 if $_DB_relation = 'GP'
    if $_DB_sex = 'M'
      let $_DB_relation = 'GF'
      else
      let $_DB_relation = 'GM'
      end-if
       if $_DB_sex = 'U'
  let $_DB_relation = 'GP'
  end-if
   end-if

 if $_DB_relation = 'SB'
    if $_DB_sex = 'M'
      let $_DB_relation = 'B'
      else
      let $_DB_relation = 'SI'
      end-if
       if $_DB_sex = 'U'
  let $_DB_relation = 'SB'
  end-if
   end-if

   do  Get-Japanese-Dates
   let #_DB_Print_era  = $_DB_bthdt_era
   let $_DB_Print_year_in_era = $_Print_year_in_era
   let $_DB_Print_month = $_Print_month
   let $_DB_Print_day   = $_Print_day
   !***   Trim description to fit the space available on the report page.
   if length($_DB_ac_name) > 30
   let $_DB_name = substr($_DB_ac_name,1,30)
   end-if
   
   if length($_DB_name) > 30
   let $_DB_name = substr($_DB_name,1,30)
   end-if

    do Convert-To-DTU-Date($_SU_asofdate,$date1)

 let $date4 = strtodate($date1,{DTUDateFormat})
 let $date6 = dateadd($date4,'year',-1)

  If &EM.DT_OF_DEATH = ''
    If &DB.DT_OF_DEATH <> ''
 If &DB.DT_OF_DEATH <= $date6
 let $_DT_SUBJ_DED = 'N'
 end-if
       let #Ageofdep = datediff(&DB.DT_OF_DEATH,dateadd(&DB.BIRTHDATE,'day',-1),'year')
       else
        let #Ageofdep = datediff($date4,dateadd(&DB.BIRTHDATE,'day',-1),'year')
 end-if
   ELSE
   If &DB.DT_OF_DEATH <> ''
   If &DB.DT_OF_DEATH < &EM.DT_OF_DEATH
       let #Ageofdep = datediff(&DB.DT_OF_DEATH,dateadd(&DB.BIRTHDATE,'day',-1),'year')
       else
       let #Ageofdep = datediff(&EM.DT_OF_DEATH,dateadd(&DB.BIRTHDATE,'day',-1),'year')
    END-IF
    else
    let #Ageofdep = datediff(&EM.DT_OF_DEATH,dateadd(&DB.BIRTHDATE,'day',-1),'year')
    end-if
    end-if
    if $_DB_relation = 'SP'
      if $_DB_marstatus = 'D' and &DB.MAR_STATUS_DT <= $date4
        let $_DT_SUBJ_DED = 'N'
      end-if
      if $_DT_SUBJ_DED = 'Y'
        if #Ageofdep >= 70
           let $_DT_IT_SPOUSE = '30'
        else
           let $_DT_IT_SPOUSE = '20'
        end-if
      else
       let $_DT_IT_SPOUSE = '10'
      end-if
    end-if

   if $_DB_relation <> 'SP'
      if $_DT_SUBJ_DED = 'Y'
         if #Ageofdep >= 70
            if $_DT_PARENT_LWP = 'Y'
               let $_DT_IT_DEP = '50'
            else
               let $_DT_IT_DEP = '40'
            end-if
         else
            if #Ageofdep >= 23
               let $_DT_IT_DEP = '20'
            else
               if #Ageofdep >= 19
                  let $_DT_IT_DEP = '30'
               else
                  if #Ageofdep >= 16
                     let $_DT_IT_DEP = '20'
                  else
                     let $_DT_IT_DEP = '11'
                  end-if
               end-if
            end-if
         end-if
      else
         let $_DT_IT_DEP = '10'
      end-if
   end-if

   let $_DTT_DEP_RCHAN = ''
   do  Get_Latest_RCHAN

   let $_DEPDIS_DIS_RCHAN = ''
   let $_DEPDIS_DIS_DESCR = ''
   do  Get_latest_DIS_RCHAN



FROM PS_DEP_BEN_ADDR B
  , PS_DEP_BEN_NAME C
  , PS_GPJP_DEPEND_VW DB
  , PS_GPJP_IT_DEP_TAX DT
  , PS_PERSON EM

 WHERE
   DB.EMPLID = $_My_Emplid
   AND [$_Criteria_Dep_Rel]
   AND DB.EMPLID = EM.EMPLID
   AND DB.EMPLID = DT.EMPLID
   AND DB.DEPENDENT_BENEF = DT.DEPENDENT_BENEF
   AND DB.DEPENDENT_BENEF = DT.DEPENDENT_BENEF
   AND DT.EFFDT <= $_SU_asofdate
   AND DT.EFFDT = (SELECT MAX(DT2.EFFDT) FROM PS_GPJP_IT_DEP_TAX DT2
                     WHERE DT.EMPLID = DT2.EMPLID
                       AND DT.EMPL_RCD = DT2.EMPL_RCD
                       AND DT.DEPENDENT_BENEF = DT2.DEPENDENT_BENEF
                       AND DT2.EFFDT <= $_SU_asofdate
                 )
   And (DB.DT_OF_DEATH IS NULL OR DB.DT_OF_DEATH >= $_Jan_1st)
   And B.EMPLID = DB.EMPLID
   AND B.DEPENDENT_BENEF = DB.DEPENDENT_BENEF
   AND (B.EFFDT = (
 SELECT MAX(B1.EFFDT)
  FROM PS_DEP_BEN_ADDR B1
 WHERE B1.EMPLID = B.EMPLID
   AND B1.DEPENDENT_BENEF = B.DEPENDENT_BENEF
   AND B1.EFFDT <= $_SU_asofdate))
   AND C.EMPLID = DB.EMPLID
   AND C.DEPENDENT_BENEF = DB.DEPENDENT_BENEF
   AND (C.EFFDT = (
 SELECT MAX(C1.EFFDT)
  FROM PS_DEP_BEN_NAME C1
 WHERE C1.EMPLID = C.EMPLID
   AND C1.DEPENDENT_BENEF = C.DEPENDENT_BENEF
   AND C1.EFFDT <= $_SU_asofdate))
   AND (DB.EFFDT = (
 SELECT MAX(D1.EFFDT)
  FROM PS_DEP_BEN_EFF D1
 WHERE D1.EMPLID = DB.EMPLID
   AND D1.DEPENDENT_BENEF = DB.DEPENDENT_BENEF
   AND D1.EFFDT <= $_SU_asofdate))

ORDER BY DB.DEPENDENT_BENEF
END-SELECT

   if #_NoRecord = {FALSE} and $_DT_SUBJ_DED = 'Y'
     do Print_Dependent_info
   end-if

end-procedure  !Get_Dependent_info


!***********************************************************************
! Get_Latest_RCHAN                                                     *
! Called By:    Get_Depend_Tax                                         *
! Description:  Get Depend latest DEP_RCHAN                            *
!***********************************************************************
begin-procedure Get_Latest_RCHAN
BEGIN-SELECT

DTT.EFFDT
DTT.GPJP_DEP_RCHAN

    let $DTT_EFFDT     =  &DTT.EFFDT
    do Convert-To-DTU-Date ($DTT_EFFDT, $DTT_EFFDT_out)
    let $DTT_GPJP_DEP_RCHAN =  &DTT.GPJP_DEP_RCHAN
    let $DTT_DEP_RCHAN  = substr($DTT_EFFDT_out,6,5) || ' ' || rtrim($DTT_GPJP_DEP_RCHAN, ' ')


    FROM  PS_GPJP_IT_DEP_TAX DTT
    WHERE DTT.EMPLID = $My_Emplid
      AND DTT.EMPL_RCD = #Empl_rcd
      AND DTT.DEPENDENT_BENEF = $DB_dep_benef
            AND DTT.EFFDT = (SELECT MAX(DTT2.EFFDT) FROM PS_GPJP_IT_DEP_TAX DTT2
                      WHERE DTT2.EMPLID  = $My_Emplid
                        AND DTT2.EMPL_RCD = #Empl_rcd
                        AND DTT2.DEPENDENT_BENEF = $DB_dep_benef
                        AND DTT2.EFFDT >= $Jan_1st
                        AND DTT2.EFFDT <= $SU_asofdate)

END-SELECT
end-procedure  ! Get_Latest_RCHAN

!***********************************************************************
! Get_Latest_DIS_RCHAN                                                 *
! Called By:    Get_Depend_Tax                                         *
! Description:  Get Depend latest DEP_RCHAN                            *
!***********************************************************************
begin-procedure Get_Latest_DIS_RCHAN
BEGIN-SELECT

DEPDIS.EFFDT
DEPDIS.GPJP_DIS_RCHAN
DEPDIS.GPJP_DIS_DESCR

    let $DEPDIS_EFFDT     =  &DEPDIS.EFFDT
    do Convert-To-DTU-Date ($DEPDIS_EFFDT, $DEPDIS_EFFDT_out)
    let $DEPDIS_GPJP_DIS_RCHAN =  &DEPDIS.GPJP_DIS_RCHAN
    let $DEPDIS_DIS_RCHAN  = substr($DEPDIS_EFFDT_Out,6,5) || ' ' || rtrim($DEPDIS_GPJP_DIS_RCHAN, ' ')
    let $DEPDIS_GPJP_DIS_DESCR =  &DEPDIS.GPJP_DIS_DESCR
    let $DEPDIS_DIS_DESCR  = $DB_name || ' : ' || rtrim($DEPDIS_GPJP_DIS_DESCR, ' ')


    FROM  PS_GPJP_IT_DEP_TAX DEPDIS
    WHERE DEPDIS.EMPLID = $My_Emplid
      AND DEPDIS.EMPL_RCD = #Empl_rcd
      AND DEPDIS.DEPENDENT_BENEF = $DB_dep_benef
      AND DEPDIS.EFFDT = (SELECT MAX(DEPDIS2.EFFDT) FROM PS_GPJP_IT_DEP_TAX DEPDIS2
                      WHERE DEPDIS2.EMPLID  = $My_Emplid
                        AND DEPDIS2.EMPL_RCD = #Empl_rcd
                        AND DEPDIS2.DEPENDENT_BENEF = $DB_dep_benef
                        AND DEPDIS2.EFFDT >= $Jan_1st
                        AND DEPDIS2.EFFDT <= $SU_asofdate)
      AND DEPDIS.GPJP_IT_SUBJ_DED <> 'N'
      AND DEPDIS.GPJP_IT_DEPDIS <> '10'

END-SELECT          end-procedure  !Get_Depend_Tax
end-procedure  ! Get_Latest_DIS_RCHAN


!***********************************************************************
! Get_EE_Latest_DIS_RCHAN                                              *
! Called By:     Get_EE_address                                        *
! Description:  Get_EE_Latest_DIS_RCHAN                                *
!***********************************************************************
begin-procedure Get_EE_Latest_DIS_RCHAN
BEGIN-SELECT

PYEDIS.EFFDT
PYEDIS.GPJP_DIS_RCHAN
PYEDIS.GPJP_DIS_DESCR

    let $PYEDIS_EFFDT     =  &PYEDIS.EFFDT
    do Convert-To-DTU-Date ($PYEDIS_EFFDT, $PYEDIS_EFFDT_out)
    let $PYEDIS_GPJP_DIS_RCHAN =  &PYEDIS.GPJP_DIS_RCHAN
    let $PYEDIS_DIS_RCHAN = substr($PYEDIS_EFFDT_out,6,5) || ' ' || rtrim($PYEDIS_GPJP_DIS_RCHAN, ' ')
    let $PYEDIS_GPJP_DIS_DESCR =  &PYEDIS.GPJP_DIS_DESCR
    let $PYEDIS_DIS_DESCR  = $EE_name || ' : ' || rtrim($PYEDIS_GPJP_DIS_DESCR, ' ')
   
    FROM  PS_GPJP_IT_PYE_TAX PYEDIS
    WHERE PYEDIS.EMPLID = $My_Emplid
      AND PYEDIS.EMPL_RCD = #Empl_rcd
      AND PYEDIS.EFFDT = (SELECT MAX(PYEDIS2.EFFDT) FROM PS_GPJP_IT_PYE_TAX PYEDIS2
               WHERE PYEDIS2.EMPLID = PYEDIS.EMPLID
                 AND PYEDIS2.EMPL_RCD = PYEDIS.EMPL_RCD
                 AND PYEDIS2.EFFDT >= $Jan_1st
                 AND PYEDIS2.EFFDT <= $SU_asofdate)
    AND PYEDIS.GPJP_IT_EMPDIS <> '10'

END-SELECT
end-procedure  ! Get_EE_Latest_DIS_RCHAN


!***********************************************************************
! gpjpye05-print-dis-descr                                             *
! Called By:                                                           *
! Description:  When wraped text rows exceed the number of rows        *
!               available, it prints the rest of text to the next page.*
!***********************************************************************
begin-procedure gpjpye05-print-dis-descr($str, #xpos, #ypos-base, #wrap-chars, #line-height, #max-lines, :#current-line-no)
   declare-variable
      decimal #ypos
      integer #i #len #len1
      text $pstr
   end-declare

   let $str = rtrim($str, ' ')
   let #len = lengthp($str)

   while #len > 0
      if #current-line-no >= #max-lines
         do Print_New_Page
         let #current-line-no = 0
      end-if

      let $pstr = substrp($str, 1, #wrap-chars)
      let #len1 = lengthp($pstr)

      if #len1 < #wrap-chars
         let $pstr = substrp($str, 1, #wrap-chars + 1)
         let #len1 = lengthp($pstr)
      end-if

      let #current-line-no = #current-line-no + 1
      let #ypos = #ypos-base + #line-height * (#current-line-no - 1)
      do gpjp_print_cm($pstr, #xpos, #ypos)

      let $str = substrp($str, #len1 + 1, #len - #wrap-chars)
      let #len = lengthp($str)

   end-while


end-procedure


begin-procedure gpjpye04_mark_circle(#xpos, #ypos, #radius)
   declare-variable
      decimal #xdif #ydif #psize
   end-declare


   let #xdif   = #radius * 8.8 / 7.15
   let #ydif   = #radius * 6.3 / 7.15
   let #psize  = #radius * 500 / 7.15

   let #xpos   = #xpos - #xdif
   let #ypos   = #ypos + #ydif

   alter-printer
      font = 28825
      point-size = #psize

   do gpjp_print_cm($_GPJPYE04_Mark_circle, #xpos, #ypos)

   alter-printer
      font = 28825
      point-size = #_gpjpye04-default-point-size


end-procedure



begin-procedure pers_number_message()
  
   if $_RC_Print_PNbr_Msg = 'Y'
      alter-printer
          point-size = 10.25
          font = 3
     
       do gpjp_print_cm($_GPJPYE04_Personal_number_msg, 9, 20.2)
       
       alter-printer
          point-size = #_gpjpye04-default-point-size
          font = 28825
   end-if

end-procedure
!***********************************************************************
! Print Footing                                                        *
! ICE 547284000                                                        *
!***********************************************************************


begin-procedure Reset
  move 'Y' to $End_of_Report
  if #MsgFlagW
     print $MsgTextW (+2,1)
  end-if
end-procedure

begin-footing 1
!  Print 'Footer text here' (,1)


  let $Footing = $BUDesc||'  '||$LocationDesc||'  '||$DeptID||'  '||$Supv_lvl_id||'  '||$My_Emplid

If &RC.GPJP_INCL_BU_LOC = 'Y'
  print $Footing (,1)
end-if


  if $End_of_Report = 'Y'
!#ifdef EBCDIC
!   encode '<39>E' into $Reset
!#else
!   encode '<27>E' into $Reset
!#end-if
    print $Reset (+0,+1)
  end-if
end-footing



!***********************************************************************
!                                                                      *
!                                                                      *
! SQCS included in the report                                          *
!                                                                      *
!***********************************************************************
#include 'getestab.sqc'     ! Get-Estab-Name procedure
#include 'number.sqc'       ! Routines to format numbers
#include 'datetime.sqc'     ! Routines for date AND time formatting
#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcsapi.sqc'      ! Replaces stdapi.sqc
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'hrsecty.sqc'      ! Get SQR Security parameters
#Include 'getsetid.sqc'     ! Get Set Id from the Tableset Record Detail
#include 'getsupjp.sqc'     ! Get Supervisor Level Name
#include 'gpjpprnt.sqc'    ! Print Functions - Japanese
#include 'gpjpaddr.sqc'  ! Format address to Japanese form
#Include 'getlocnm.sqc'      ! Get Location description
#Include 'getbunam.sqc'      ! Get Business unit description
#Include 'getdptnm.sqc'      ! Get Department description
