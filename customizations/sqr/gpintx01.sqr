!***********************************************************************
! GPINTX01                                                             *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!----------------------------------------------------------------------
!***********************************************************************                                                                      *
!                                                                      *
!          $Date:  2013/01/18:04:00:31                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!***********************************************************************
!  Program Name : GPINTX01.SQR.                                        !
!  Description: This SQR generate the Taxable Amount of Employee for GPIN
!***********************************************************************
!                                                                      *
!                      Modification History                            *
!                                                                      *
!    Date          ICE                      Description                *
!  --------       -----                    -------------               *
! 06/May/2008   1705540002      The SQR has been modified to print the *
!                               establishment name from GPIN_REG_NAME  *
!                               from the ESTAB_TBL_GPIN record.        *
!                                                                      *
!***********************************************************************

#DEFINE COL_ESTABID   11   !Establishment Id
#DEFINE COL_DESCR     10   !Description
#DEFINE COL_EMPLID    11   !Employee ID
#DEFINE COL_NAME      30   !Employee Name
#DEFINE COL_FROMDATE  15
#DEFINE COL_TODATE    15
#DEFINE COL_DOJ       15   !Employee Join Date
#DEFINE COL_All_AMT   18   !Allowed Amount
#DEFINE COL_REM_AMT   18   !Remburashed Amount
#DEFINE COL_TAX_AMT   18   !Taxable Amount
#DEFINE COL_SEP        5   !Column Seperator
#DEFINE DEBUG1
#DEFINE COLR          105

!**************************************************************************
!select parameters from the user inputs
!**************************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
#include 'ptset01.sqc'
end-setup

!**************************************************************************
begin-heading 13
if (#reporttype =01)
alter-printer font=6 point-size=6
#Include 'stdhdg01.sqc'
   PRINT ' List of Taxable Medical Amount of Employees' (+1)CENTER bold
   PRINT 'Establishment Name:'  (+2,1,20)BOLD
   PRINT $descr                 (,19)
   PRINT 'Establishment ID:'    (,90,20)BOLD
   PRINT  $estabid              (,105)
   PRINT 'From Date:'           (+2,1,12)BOLD
   PRINT $fromdate              (,19,10)
   PRINT 'To Date:'             (,90,10)BOLD
   PRINT $todate                (,105,10)
   GRAPHIC                      (+1,1,125) horz-line
   PRINT 'EmplID'               (+2,1,{COL_EMPLID}) bold
   PRINT 'Name'                 (0,+{COL_SEP},{COL_NAME})bold
   PRINT 'Date of '             (0,+{COL_SEP},{COL_DOJ})bold
   PRINT 'Allowance '           (0,+{COL_SEP},{COL_All_AMT})bold
   PRINT 'Amount  '             (0,+{COL_SEP},{COL_REM_AMT})bold
   PRINT 'Taxable '             (0,+{COL_SEP},{COL_TAx_AMT})bold
   PRINT '  '                   (0,1,{COL_EMPLID})bold
   PRINT '  '                   (0,+{COL_SEP},{COL_NAME})bold
   PRINT 'Joining'              (0,+{COL_SEP},{COL_DOJ})bold
   PRINT 'Amount'               (0,+{COL_SEP},{COL_All_AMT})bold
   PRINT 'Reimbursed'           (0,+{COL_SEP},{COL_REM_AMT})bold
   PRINT 'Amount'               (0,+{COL_SEP},{COL_TAx_AMT})bold
   GRAPHIC                      (0,1,125) horz-line
END-IF
!**************************************************************************
!         Lta Heading
!**************************************************************************
if (#reporttype =02)
alter-printer font=6 point-size=6
#Include 'stdhdg01.sqc'
PRINT ' List of Taxable LTA Amount of Employees' (+1)CENTER bold
PRINT 'Establishment Name:'  (+2,1,20)BOLD
PRINT $descr                 (,19)
PRINT 'Establishment ID:'    (,90,20)BOLD
PRINT  $estabid              (,105)
PRINT 'From Date:'           (+2,1,12)BOLD
PRINT $fromdate              (,19,10)
PRINT 'To Date:'             (,90,10)BOLD
PRINT $todate                (,105,10)
GRAPHIC                      (+1,1,125) horz-line
PRINT 'EmplID'               (+2,1,{COL_EMPLID}) bold
PRINT 'Name'                 (0,+{COL_SEP},{COL_NAME})bold
PRINT 'Date of '             (0,+{COL_SEP},{COL_DOJ})bold
PRINT 'Allowance '           (0,+{COL_SEP},{COL_All_AMT})bold
PRINT 'Amount  '             (0,+{COL_SEP},{COL_REM_AMT})bold
PRINT 'Taxable '             (0,+{COL_SEP},{COL_TAx_AMT})bold
PRINT '  '                   (0,1,{COL_EMPLID})bold
PRINT '  '                   (0,+{COL_SEP},{COL_NAME})bold
PRINT 'Joining'              (0,+{COL_SEP},{COL_DOJ})bold
PRINT 'Amount'               (0,+{COL_SEP},{COL_All_AMT})bold
PRINT 'Reimbursed'           (0,+{COL_SEP},{COL_REM_AMT})bold
PRINT 'Amount'               (0,+{COL_SEP},{COL_TAx_AMT})bold
GRAPHIC                      (0,1,125) horz-line
END-IF
end-heading
!**************************************************************************
BEGIN-PROGRAM
  do  INIT-REPORT
  do  Stdapi-Term
END-PROGRAM
!**************************************************************************
begin-procedure Init-Report
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do get-runcntl-record
  do check
end-procedure !Init-Report
!**************************************************************************
begin-procedure get-runcntl-record
begin-select
AA.OPRID
AA.RUN_CNTL_ID
AA.BGN_DT
AA.END_DT
AA.GPIN_TAX_RPT_TYPE
AA.GP_GENRPT_SORT_OPT

         let $OPRID=&AA.OPRID
         let $run_cntl_id=&AA.RUN_CNTL_ID
         let $Fromdate=datetostr(&AA.BGN_DT,'DD/MM/YYYY')
         let $ToDate=datetostr(&AA.END_DT,'DD/MM/YYYY')
         let #reporttype=&AA.GPIN_TAX_RPT_TYPE
         let #SortOption=&AA.GP_GENRPT_SORT_OPT

from PS_GPIN_PR_RC AA
where AA.OPRID = $prcs_Oprid
and   AA.RUN_CNTL_ID = $prcs_Run_Cntl_ID

end-select
end-procedure !get-runcntl-record
!**************************************************************************
begin-procedure check
   let $ReportID       = 'GPINTX01 '
  if (#reporttype =01)
     do get-employees-tmp
  else
    IF (#reporttype=02)
     do get-employees-tmp
    end-if
  end-if
end-procedure !check
!**************************************************************************
BEGIN-PROCEDURE get-employees-tmp
let $sav_estabid = ''
let $sav_emplid = ''
let #taxable_lta = 0
let #non_tax_lta = 0
let #taxable_med = 0
let #non_tax_med = 0

if #reporttype =01

        let $dyn_sql = '(''TX01_NTAX_MED'',''TX01_TAX_MED'',''TX01_MA_WAIVE'',''TX01_MA_PAYOUT'')'
else
        let $dyn_sql = '(''TX01_LTA'',''TX01_NON_LTA'',''TX01_LTA_WAIVE'',''TX01_LTA_PAYOUT'')'
end-if

BEGIN-SELECT
TMP.JOBINSTANCE
TMP.EMPLID
TMP.CAL_RUN_ID
TMP.EMPL_RCD
TMP.GP_PAYGROUP
TMP.CAL_ID
TMP.ORIG_CAL_RUN_ID
TMP.RSLT_SEG_NUM
TMP.RSLT_VER_NUM
TMP.RSLT_REV_NUM
TMP.GP_GENRPT_BREAK1
TMP.PRD_BGN_DT
TMP.PRD_END_DT

    if $sav_estabid = ''
       let $sav_estabid=&TMP.GP_GENRPT_BREAK1
       do estab-details
    end-if

    if $sav_estabid <> &TMP.GP_GENRPT_BREAK1
       if (#reporttype =01)
               do empl-details-med
               do print-values-medical
               do clear-variables
              let $sav_emplid=&TMP.EMPLID
             else
              if (#reporttype =02)
                  do empl-details-lta
                  do print-values-lta
                  do clear-variables
                let $sav_emplid=&TMP.EMPLID
            end-if
       end-if
       new-page
       let $sav_estabid=&TMP.GP_GENRPT_BREAK1
       do estab-details
      end-if

    if $sav_emplid = ''
        let $sav_emplid = &TMP.EMPLID
     end-if
    if &TMP.EMPLID <> $sav_emplid
      if (#reporttype =01)
        do empl-details-med
        do print-values-medical
        do clear-variables
       let $sav_emplid=&TMP.EMPLID
      else
       if (#reporttype =02)
           do empl-details-lta
           do print-values-lta
           do clear-variables
         let $sav_emplid=&TMP.EMPLID
     end-if
    end-if
   end-if

  let $sav_emplid = &TMP.EMPLID
  let #JOBINSTANCE=&TMP.JOBINSTANCE
  let $EMPLID=&TMP.EMPLID
  let $CALRUNID=&TMP.CAL_RUN_ID
  let $PAYGRP =&TMP.GP_PAYGROUP
  let $CALID=&TMP.CAL_ID
  let $RPTBREAK=&TMP.GP_GENRPT_BREAK1
  let $BGNDATE=&TMP.PRD_BGN_DT
  let $ENDDATE=&TMP.PRD_END_DT

  do get-employees-tmp3

From PS_GPIN_PR_TMP TMP
WHERE TMP.JOBINSTANCE = #prcs_job_instance
AND TMP.PRD_BGN_DT >= &AA.BGN_DT
AND TMP.PRD_BGN_DT <= &AA.END_DT
AND EXISTS (SELECT 'X' FROM PS_GPIN_PR_TMP3
                WHERE JOBINSTANCE = #prcs_job_instance
                AND  EMPLID = TMP.EMPLID
                AND  CAL_RUN_ID = TMP.CAL_RUN_ID
                AND  EMPL_RCD = TMP.EMPL_RCD
                AND  GP_PAYGROUP = TMP.GP_PAYGROUP
                AND  CAL_ID = TMP.CAL_ID
                AND  ORIG_CAL_RUN_ID = TMP.ORIG_CAL_RUN_ID
                AND  RSLT_SEG_NUM = TMP.RSLT_SEG_NUM
                AND  RSLT_VER_NUM = TMP.RSLT_VER_NUM
                AND  RSLT_REV_NUM = TMP.RSLT_REV_NUM
                AND  GPIN_FLD_NAME IN [$dyn_sql])
ORDER BY TMP.GP_GENRPT_BREAK1,TMP.EMPLID

END-SELECT
    if (#reporttype =01)
        do empl-details-med
        do print-values-medical
        do clear-variables
       let $sav_emplid=&TMP.EMPLID
    else
       if (#reporttype =02)
          do empl-details-lta
          do print-values-lta
          do clear-variables
         let $sav_emplid=&TMP.EMPLID
       end-if
    end-if

END-PROCEDURE !get-employees-tmp
!**************************************************************************
!             Establishment Details
!**************************************************************************
begin-procedure estab-details

begin-select
ESTAB.ESTABID
ESTIND.GPIN_REG_NAME

    let $estabid = &ESTAB.ESTABID
    let $descr   = &ESTIND.GPIN_REG_NAME

FROM PS_ESTAB_TBL ESTAB,
     PS_ESTAB_TBL_GPIN ESTIND

WHERE ESTAB.ESTABID  = ESTIND.ESTABID
AND ESTIND.ESTABID   = &TMP.GP_GENRPT_BREAK1
and ESTAB.EFFDT      = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
                        WHERE ESTABID=ESTAB.ESTABID
                        AND   EFFDT <= &AA.END_DT)
AND ESTIND.EFFDT     = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL_GPIN
                        WHERE ESTABID=ESTIND.ESTABID
                        AND   EFFDT <= &AA.END_DT)

end-select
end-procedure !estab-details
!**************************************************************************
! employee datails for medical
!**************************************************************************
begin-procedure  empl-details-med
begin-select
A.EMPLID
B.NAME
C.JOB_ENTRY_DT
A.GPIN_ELIG_AMT
C.ESTABID

    let $emplid_med          = &A.EMPLID
    let $name_med            = &B.NAME
    let $joindate_med        = datetostr(&C.JOB_ENTRY_DT,'dd/mm/yyyy')
    let #eligible_amount_med = &A.GPIN_ELIG_AMT

FROM PS_GPIN_MDA_ENROLL A,
     PS_PERSON_NAME B,
     PS_JOB C
WHERE A.EMPLID=$sav_emplid
AND   A.EMPLID=B.EMPLID
and   B.EMPLID=C.EMPLID
AND   A.EFFDT=(SELECT MAX(EFFDT) FROM PS_GPIN_MDA_ENROLL
               WHERE EMPLID=A.EMPLID
               AND   EFFDT <= &AA.END_DT)
AND  C.EFFDT=(SELECT MAX(EFFDT) FROM  PS_JOB
              WHERE EMPLID=C.EMPLID
              AND   EMPL_RCD=C.EMPL_RCD
              AND   EFFDT <=&AA.END_DT)
AND C.EFFSEQ=(SELECT MAX(EFFSEQ) FROM PS_JOB
             WHERE EMPLID=C.EMPLID
             AND   EMPL_RCD=C.EMPL_RCD
             AND   EFFDT <= &AA.END_DT)
order by A.EMPLID
end-select
end-procedure !empl-details-med
!**************************************************************************
! employee datails for LTA
!**************************************************************************
begin-procedure  empl-details-lta
begin-select
A1.EMPLID
B1.NAME
C1.JOB_ENTRY_DT
A1.GPIN_ELIG_AMT
C1.ESTABID

    let $emplid_lta          = &A1.EMPLID
    let $name_lta            = &B1.NAME
    let $joindate_lta        = datetostr(&C1.JOB_ENTRY_DT,'dd/mm/yyyy')
    let #eligible_amount_lta = &A1.GPIN_ELIG_AMT

FROM PS_GPIN_LTA_ENROLL A1,
     PS_PERSON_NAME B1,
     PS_JOB C1
WHERE A1.EMPLID=$sav_emplid
AND   A1.EMPLID=B1.EMPLID
AND   A1.EMPLID=C1.EMPLID
AND   A1.EFFDT=(SELECT MAX(EFFDT) FROM PS_GPIN_LTA_ENROLL
               WHERE EMPLID=A1.EMPLID
               AND   EFFDT <= &AA.END_DT)
AND  C1.EFFDT=(SELECT MAX(EFFDT) FROM  PS_JOB
              WHERE EMPLID=C1.EMPLID
              AND   EMPL_RCD=C1.EMPL_RCD
              AND   EFFDT <=&AA.END_DT)
AND C1.EFFSEQ=(SELECT MAX(EFFSEQ) FROM PS_JOB
             WHERE EMPLID=C1.EMPLID
             AND   EMPL_RCD=C1.EMPL_RCD
             AND   EFFDT <= &AA.END_DT)
order by  A1.EMPLID
end-select
end-procedure !empl-details-lta
!**************************************************************************
begin-procedure print-values-medical
alter-printer font=6 point-size=6

if #amt_rem_med > 0
 PRINT $emplid_med           (+1,1,{COL_EMPLID})
 PRINT $name_med             (0,+{COL_SEP},{COL_NAME})
 PRINT $joindate_med         (0,+{COL_SEP},{COL_DOJ})
 PRINT #eligible_amount_med  (0,+{COL_SEP},{COL_All_AMT})
 PRINT #amt_rem_med          (0,+{COL_SEP},{COL_REM_AMT})
 print #taxable_med          (0,+{COL_SEP},{COL_TAx_AMT})
end-if
end-procedure !print-values-medical
!**************************************************************************
begin-procedure print-values-lta
alter-printer font=6 point-size=6

If #amt_rem_lta > 0
 PRINT $emplid_lta           (+1,1,{COL_EMPLID})
 PRINT $name_lta             (0,+{COL_SEP},{COL_NAME})
 PRINT $joindate_lta         (0,+{COL_SEP},{COL_DOJ})
 PRINT #eligible_amount_lta  (0,+{COL_SEP},{COL_All_AMT})
 PRINT #amt_rem_lta          (0,+{COL_SEP},{COL_REM_AMT})
 print #taxable_lta          (0,+{COL_SEP},{COL_TAx_AMT})
end-if
end-procedure
!**************************************************************************
begin-procedure clear-variables
let #taxable_lta  = 0
let #non_tax_lta  = 0
let #taxable_med  = 0
let #non_tax_med  = 0
end-procedure
!**************************************************************************
begin-procedure get-employees-tmp3
begin-select
TMP3.GPIN_FLD_NAME
TMP3.CALC_RSLT_VAL

        let #rslt_val = &TMP3.CALC_RSLT_VAL
        let $fld_name = ltrim(rtrim(&TMP3.GPIN_FLD_NAME,' '),' ')

         evaluate $fld_name
             when = 'TX01_LTA'
               add #rslt_val to #taxable_lta
               break
             when = 'TX01_NON_LTA'
               add #rslt_val to #non_tax_lta
               break
             when = 'TX01_NTAX_MED'
              add #rslt_val to #non_tax_med
              break
             when = 'TX01_TAX_MED'
               add #rslt_val to #taxable_med
               break
             when = 'TX01_LTA_WAIVE'
               add #rslt_val to #taxable_lta
               break
             when = 'TX01_LTA_PAYOUT'
               add #rslt_val to #taxable_lta
               break
             when = 'TX01_MA_WAIVE'
               add #rslt_val to #taxable_med
               break
             when = 'TX01_MA_PAYOUT'
               add #rslt_val to #taxable_med
               break
          end-evaluate

         let #amt_rem_med = #taxable_med + #non_tax_med
         let #amt_rem_lta = #taxable_lta + #non_tax_lta

FROM PS_GPIN_PR_TMP3 TMP3
WHERE TMP3.JOBINSTANCE = #prcs_job_instance
and  TMP3.EMPLID = $SAV_EMPLID
AND  TMP3.CAL_RUN_ID = &TMP.CAL_RUN_ID
AND  TMP3.EMPL_RCD = &TMP.EMPL_RCD
AND  TMP3.GP_PAYGROUP = &TMP.GP_PAYGROUP
AND  TMP3.CAL_ID = &TMP.CAL_ID
AND  TMP3.ORIG_CAL_RUN_ID = &TMP.ORIG_CAL_RUN_ID
AND  TMP3.RSLT_SEG_NUM = &TMP.RSLT_SEG_NUM
AND  TMP3.RSLT_VER_NUM = &TMP.RSLT_VER_NUM
AND  TMP3.RSLT_REV_NUM = &TMP.RSLT_REV_NUM
end-select
end-procedure !get-employees-tmp3
!**************************************************************************
#include 'number.sqc'
#include 'reset.sqc'     !Reset Printer Procedure
#include 'curdttim.sqc'  !Get Current Date Time
#include 'datemath.sqc'  !SQR date arithmetic procedures
#include 'timemath.sqc'  !SQR time arithmetic procedures
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'prcsapi.sqc'   !Update Process Request API
#include 'prcsdef.sqc'   !Update Process Request variable declare
#include 'stdapi.sqc'    !Process Scheduler API
