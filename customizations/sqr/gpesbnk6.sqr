!**********************************************************************
! Report Name: GPESBNK6.SQR  Bank File Creation Log
!**********************************************************************
!----------------------------------------------------------------------
!                                                                      
!                                                                      
!                                                                      
!   This software and related documentation are provided under a       
!   license agreement containing restrictions on use and               
!   disclosure and are protected by intellectual property              
!   laws. Except as expressly permitted in your license agreement      
!   or allowed by law, you may not use, copy, reproduce,               
!   translate, broadcast, modify, license, transmit, distribute,       
!   exhibit, perform, publish or display any part, in any form or      
!   by any means. Reverse engineering, disassembly, or                 
!   decompilation of this software, unless required by law for         
!   interoperability, is prohibited.                                   
!   The information contained herein is subject to change without      
!   notice and is not warranted to be error-free. If you find any      
!   errors, please report them to us in writing.                       
!                                                                      
!                                                                      
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            
!   All Rights Reserved.                                               
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2013/01/18:03:39:52                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      
!----------------------------------------------------------------------


#include 'setenv.sqc'        ! SET ENVIRONMENT
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup


BEGIN-REPORT

  DO INIT-DATETIME
  DO Get-Language-Codes
  DO INIT-NUMBER
  DO INIT-REPORT
  DO GET-CURRENT-DATETIME
  DO PROCESS-MAIN
  DO RESET
  DO STDAPI-TERM

END-REPORT

BEGIN-HEADING 8
#include 'stdhdg01.sqc'
  PRINT $RUN_CNTL_ID             (+1,1)
  let $Out=rtrim($RUN_CNTL_ID_EO, ' ')
  PRINT $Out                         (0,+1)
  PRINT '-'                          (0,+2)
  PRINT $PROCESS                     (0,+2)
  PRINT $PROCESS_INSTANCE            (0,+2)
  PRINT $EMPLOYEE                 (+3,1,11)
  PRINT $NATIONAL_ID              (0,+2,11)
  PRINT $EMPL_NAME                (0,+3,30)
  PRINT $TELEPHONE_NBR            (0,+3,10)
  PRINT $EMAILID                  (0,+3,25)
  PRINT $LOG_DESCR                (0,+3,25)
  GRAPHIC                        (+1,1,175) HORZ-LINE

END-HEADING

BEGIN-PROCEDURE INIT-REPORT
#debug do Fin-Debug-Msg('Init-Report')

  MOVE 'GPESBNK6' TO $REPORTID

  DO STDAPI-INIT
  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

!**********  do Security-Param
  IF $PRCS_PROCESS_INSTANCE = ''
    !No Prompt
  ELSE
   DO SELECT-PARAMETERS
  END-IF
  DO INIT_PRINTER
  
  
  do Init_Report_Translation ($ReportID, $language_cd)

  do Get_Field_information ('GPESBNK6', 'REPORT_TITLE', $REPORTTITLE,        #DW)
  do Get_Field_information ('GPESBNK6', 'PAY_ENTITY',$PAY_ENTITY,            #DW)
  do Get_Field_information ('GPESBNK6', 'EMPLID',$EMPLOYEE,                  #DW)
  do Get_Field_information ('GPESBNK6', 'RUN_CNTL_ID',$RUN_CNTL_ID,          #DW)
  do Get_Field_information ('GPESBNK6', 'PROCESS',$PROCESS,                  #DW)
  do Get_Field_information ('GPESBNK6', 'LOG_DESCR',$LOG_DESCR,              #DW)
  do Get_Field_information ('GPESBNK6', 'NATIONAL_ID',$NATIONAL_ID,          #DW)
  do Get_Field_information ('GPESBNK6', 'NAME', $EMPL_NAME,                  #DW)
  do Get_Field_information ('GPESBNK6', 'BUSINESS_UNIT', $BUSINESS_UNIT,     #DW)
  do Get_Field_information ('GPESBNK6', 'DEPARTMENT', $DEPARTMENT,           #DW)
  do Get_Field_information ('GPESBNK6', 'LOCATION', $LOCATION,               #DW)
  do Get_Field_information ('GPESBNK6', 'TELEPHONE_NBR', $TELEPHONE_NBR,     #DW)
  do Get_Field_information ('GPESBNK6', 'EMAILID', $EMAILID,                 #DW)


LAST1:
END-PROCEDURE INIT-REPORT


BEGIN-PROCEDURE GET-VALUES
#debug do Fin-Debug-Msg('Get-Values')
  
 ! let $language_cd = $PRCS_LANGUAGE_CD
  
end-procedure


!************************************************************************************
BEGIN-PROCEDURE SELECT-PARAMETERS
!************************************************************************************
#debug do Fin-Debug-Msg('Select-Parameters')

#debugd show 'Operator Id:     ' $prcs_oprid
#debugd show 'Run Control Id:  ' $prcs_run_cntl_id

let $sql-statement = 'GPESBNK6.SQR,Select-Parameters,Select,PS_GPES_RC_BNK'
BEGIN-SELECT on-error=SQL-Error
GPES_RC_BNK.GPES_FILENAME
   MOVE &GPES_RC_BNK.GPES_FILENAME      TO $GPES_FILENAME
GPES_RC_BNK.RUN_CNTL_ID_EO
   MOVE &GPES_RC_BNK.RUN_CNTL_ID_EO     TO $RUN_CNTL_ID_EO
GPES_RC_BNK.PROCESS_INSTANCE
   MOVE &GPES_RC_BNK.PROCESS_INSTANCE   TO $PROCESS_INSTANCE
   
   do Format-DateTime($asoftoday,$asoftoday-NAT,{DEFCMP},'','')

FROM PS_GPES_RC_BNK GPES_RC_BNK

   WHERE GPES_RC_BNK.OPRID = $PRCS_OPRID
   AND GPES_RC_BNK.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID


END-SELECT
END-PROCEDURE




!************************************************************************************
BEGIN-PROCEDURE PROCESS-MAIN
!************************************************************************************
#debug do Fin-Debug-Msg('Process-Main')

DO GET-VALUES
DO Get-Data

END-PROCEDURE

!************************************************************************************
BEGIN-PROCEDURE Get-Data
!************************************************************************************
#debug do Fin-Debug-Msg('Get-Data')

#debugd show 'Country:    ' $RUN_CNTL_ID_EO
#debugd show 'Pay Entity: ' $PROCESS_INSTANCE


let $sql-statement = 'GPESBNK6.SQR,Get-Data,Select,PS_JOB'

BEGIN-SELECT DISTINCT on-error=SQL-Error

G.EMPLID                &G.EMPLID
  let $EMPLID = rtrim(&G.EMPLID, ' ')
  PRINT $EMPLID          (+1,1,11)
G.MESSAGE_SET_NBR &G.MESSAGE_SET_NBR 
G.MESSAGE_NBR &G.MESSAGE_NBR

  LET #MES_SET = &G.MESSAGE_SET_NBR
  LET #MES_NUM = &G.MESSAGE_NBR

   do Get-Msg-Txt
   Print $MSGTEXT        (0,+90,75)

FROM PS_GPES_FILE_MSG G

WHERE G.RUN_CNTL_ID = $RUN_CNTL_ID_EO
  AND G.PROCESS_INSTANCE = $PROCESS_INSTANCE
  AND G.EMPLID = 'ERROR'
ORDER BY G.EMPLID
END-SELECT

BEGIN-SELECT DISTINCT on-error=SQL-Error
A.EMPLID                &A.EMPLID
  let $EMPLID = rtrim(&A.EMPLID, ' ')
  PRINT $EMPLID          (+1,1,11)
  DO  Get-National-Id-Data
  PRINT $NID             (0,+2,11)

PNM.NAME               &P.NAME
  let $NAME = rtrim(&P.NAME, ' ')
  PRINT $NAME             (0,+3,30)


A.LOCATION             &LOCATION
   LET $LOCATION = rtrim(&LOCATION, ' ')
   DO GET-LOCATION-NAME
   let $phone = ' '
   do get-telephone-data
   PRINT $PHONE          (0,+3,10)
   let $email = ' '
   do get-email-data
   PRINT $EMAIL          (0,+3,25)
PG.MESSAGE_SET_NBR &PG.MESSAGE_SET_NBR 
PG.MESSAGE_NBR &PG.MESSAGE_NBR
  
  LET #MES_SET = &PG.MESSAGE_SET_NBR
  LET #MES_NUM = &PG.MESSAGE_NBR


   do Get-Msg-Txt
   Print $MSGTEXT        (0,+3,75)

FROM PS_PERSON PSN, PS_PERSON_NAME PNM,
     PS_PER_ORG_ASGN ASGN,
     PS_JOB A,
     PS_GPES_FILE_MSG PG

WHERE A.EMPLID = PSN.EMPLID
  AND PNM.EMPLID = PSN.EMPLID
  AND A.EFFDT =
      (SELECT MAX(EFFDT) FROM PS_JOB 
       WHERE EMPLID = A.EMPLID
         AND EMPL_RCD = A.EMPL_RCD
         AND EFFDT <= $AsOfToday)
  AND A.EFFSEQ =
      (SELECT MAX(EFFSEQ) FROM PS_JOB
       WHERE EMPLID = A.EMPLID
         AND EMPL_RCD = A.EMPL_RCD
         AND EFFDT = A.EFFDT)
  AND A.EMPL_STATUS IN ('A','L','S','P','W')
  AND A.EMPLID = ASGN.EMPLID
  AND A.EMPL_RCD = ASGN.EMPL_RCD
  AND ASGN.PER_ORG = 'EMP'
  AND PG.RUN_CNTL_ID = $RUN_CNTL_ID_EO
  AND PG.PROCESS_INSTANCE = $PROCESS_INSTANCE
  AND PG.EMPLID = A.EMPLID
ORDER BY A.EMPLID
END-SELECT

END-PROCEDURE


!************************************************************************************
BEGIN-PROCEDURE Get-National-Id-Data
!************************************************************************************
#debug do Fin-Debug-Msg('Get-National-Id-Data')

#debugd show 'Employee:  ' $EMPLID

let $sql-statement = 'GPESBNK6.SQR,Get-National-Id-Data,Select,PS_PERS_NID'
BEGIN-SELECT on-error=SQL-Error

B.NATIONAL_ID          &B.NATIONAL_ID
   let $NID = rtrim(&B.NATIONAL_ID, ' ')


FROM PS_PERS_NID B
WHERE B.EMPLID = $EMPLID
  AND B.PRIMARY_NID = 'Y'

END-SELECT
END-PROCEDURE


!************************************************************************************
BEGIN-PROCEDURE Get-Telephone-Data
!************************************************************************************
#debug do Fin-Debug-Msg('Get-Telephone-Data')

#debugd show 'Employee:   ' $EMPLID
#debugd show 'Phone Type: BUSN'

let $sql-statement = 'GPESBNK6.SQR,Get-Telephone-Data,Select,PS_PERSONAL_PHONE'
BEGIN-SELECT on-error=SQL-Error

PHONE                &PHONE
  LET $PHONE = rtrim(&PHONE, ' ')
FROM PS_PERSONAL_PHONE
WHERE EMPLID = $EMPLID
AND PHONE_TYPE = 'BUSN'

END-SELECT
END-PROCEDURE

!************************************************************************************
BEGIN-PROCEDURE Get-Email-Data
!************************************************************************************
#debug do Fin-Debug-Msg('Get-Email-Data')

#debugd show 'Employee:    ' $EMPLID
#debugd show 'Address Type: BUSN'

let $sql-statement = 'GPESBNK6.SQR,Get-Email-Data,Select,PS_EMAIL_ADDRESSES'
BEGIN-SELECT on-error=SQL-Error

EMAIL_ADDR         &EMAIL_ADDR

  LET $EMAIL = rtrim(&EMAIL_ADDR, ' ')

FROM PS_EMAIL_ADDRESSES
WHERE EMPLID = $EMPLID
AND E_ADDR_TYPE = 'BUSN'

END-SELECT
END-PROCEDURE


!************************************************************************************
BEGIN-PROCEDURE Get-Pay-Entity-Data
!************************************************************************************
#debug do Fin-Debug-Msg('Get-Pay-Entity-Data')

#debugd show 'Pay Entity: ' $PAY_ENTITY_RNCTL

let $sql-statement = 'GPESBNK6.SQR,Get-Pay-Entity-Data,Select,PS_GP_PYENT'
BEGIN-SELECT on-error=SQL-Error
PE.DESCR     &PE.DESCR
  
  let $PAY-ENTITY-NAME = &PE.DESCR

FROM PS_GP_PYENT PE
WHERE PE.PAY_ENTITY = $PAY_ENTITY_RNCTL
END-SELECT
END-PROCEDURE


!--------------------------------------------------------------------!
! Debug Msg                                                          !
!--------------------------------------------------------------------!
begin-procedure Fin-Debug-Msg($procedure_name)
   display ' '
   display '----------------------------------'
   display $procedure_name
   #debugt date-time () {Native-DateTime} &SysDateTime
   #debugt move &SysDateTime to $SysDateTime
   #debugt show 'TIMING, ' $procedure_name ', ' $SysDateTime
   display ' '
end-procedure ! Fin-Debug-Msg


!******************************************************************!
! Fetches The Message                                              !
!******************************************************************!

Begin-Procedure Get-Msg-Txt

 LET $MSGTEXT = ''
 LET $CURNOTBASE = 'N'
If $curr_language_cd <> $Psoptions_Language_Cd
       LET $CURNOTBASE = 'Y'
       Do Get-Message-Rel-Lang
   If $MSGTEXT = ''
       Do Get-Message-Base-Lang
   End-if
else
       Do Get-Message-Base-Lang
End-if

End-Procedure


begin-procedure Get-Message-Rel-Lang
Begin-Select
N.MESSAGE_TEXT  &MESSAGE_TEXT
  Move &MESSAGE_TEXT TO $MSGTEXT
  Let $Flag = 'Y'
 
From PSMSGCATLANG  N
Where   N.MESSAGE_SET_NBR = #MES_SET
  AND   N.MESSAGE_NBR     = #MES_NUM
  AND   N.LANGUAGE_CD     = $curr_language_cd

End-Select
End-Procedure !Get-Message-Rel-Lang

begin-procedure Get-Message-Base-Lang
Begin-Select
M.MESSAGE_TEXT  &MESSAGE_TEXT1
  
  Move &MESSAGE_TEXT1 TO $MSGTEXT

  Let $Flag = 'Y'
 

From PSMSGCATDEFN  M
Where   M.MESSAGE_SET_NBR = #MES_SET
  And   M.MESSAGE_NBR     = #MES_NUM

End-Select
End-Procedure !Get-Message-Base-Lang


!***************************************************************
!Include SQCs
!***************************************************************
!#include 'hrrnctl1.sqc'  ! GET RUN CONTROL PARAMETER VALUES
!#include 'hrgetval.sqc'  ! GET VALUES MASK ROUTINES

#include 'reset.sqc'     ! RESET PRINTER PROCEDURE
#include 'stdapi.sqc'    ! UPDATE PROCESS API
#include 'curdttim.sqc'  ! GET-CURRENT-DATETIME PROCEDURE
#include 'datetime.sqc'  ! ROUTINES FOR DATE AND TIME FORMATTING
#include 'number.sqc'    ! ROUTINES TO FORMAT NUMBERS
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'sqlerr.sqc'
#Include 'sqrtrans.sqc'  !Routines to Translate SQR
#include 'datemath.sqc'  ! ROUTINES FOR DATEMATH
#include 'getbunam.sqc'
#include 'getdptnm.sqc'
#include 'getlocnm.sqc'
#include 'getempnm.sqc'
#include 'prcslng.sqc'
#include 'useprntr.sqc'




