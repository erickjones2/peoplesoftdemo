!***********************************************************************
!  GPMXIM01:  Variability Report                                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2019, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                !
!           $Bug:  30462516                                            !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-heading 9
  ALTER-PRINTER
  POINT-SIZE = 7
  FONT = 7
  print 'PeopleSoft'      ()          center
  print 'Report ID:  '    (+1,1)
  print $ReportID         ()
  uppercase $ReportTitle
  print $ReportTitle      ()          center

  print 'Compañia: '          (+1,1)
  print $Company              ( ,+2)
  print $CompanyName          ( ,+2)
  page-number                 (0,155)  'Page No.  '
  print 'Año: '               (+1,1)
  print  $Year                ( ,+7)
  print 'Bimestre: '          ( ,+5)
  print $Bimonth              (0,+1)
  print 'Run Date '           (,155)
  print $ReportDate           (,+1)
  print 'Grupo de Pago: '     (+1,1)
  print $Paygroup             (,+1)
  print $PayDesc              (,+1)
  print 'Run Time '           (,155)
  print $ReportTime           (,+1)

  print '-'                   (+1,001,320) fill
  print 'Empleado'            ( ,001)
  print 'Nombre del Empleado' ( 0,012)
  print 'Percepción'          ( 0,063)
  print 'Días'                ( 0,79)
  print 'No Integrable '      ( 0,92)
  print 'Integrable'          ( 0,107)
  print 'Cuota Var.'          ( 0,122)
  print 'Cuota Fija'          ( 0,136)
  print 'SDI'                 ( 0,153)
  print '-'                   (+1,001,320) fill
end-heading

begin-report
  move '1' to $ReportDateType
  move '1' to $ReportYear4
  do Init-Report
  do Stdapi-Term
end-report

!*********************************
Begin-Procedure Init-Report
  do Get-Current-DateTime
  date-time () hh:mi:ss &timeBegan
  move 'GPMXIM01'        to $ReportID
  move 'SDI Variable'   to $ReportTitle
  move 'Version PUM-33.01' to $ReportVersion
  
  display $ReportID
  display $ReportTitle
  display $ReportVersion
  display 'Report Began: ' noline
  display &timeBegan
  
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Select-Params

  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded  
End-Procedure Init-Report

!*********************************
Begin-procedure Select-Params
Let $Condition = ''
Begin-SELECT
RC.COMPANY
RC.GP_PAYGROUP
RC.YEARCD
RC.GPMX_BIMONTH_CD

  Let $Company = &RC.COMPANY
  Let $PayGroup = &RC.GP_PAYGROUP
  Let #Asyear  = &RC.YEARCD
  Let #Asyear1 = #Asyear + 1
  Let #Bimonth = &RC.GPMX_BIMONTH_CD

  Let $Year = edit(#AsYear,'9999')
  Let $Year1 = edit(#AsYear1,'9999')
  Let $Bimonth = edit(#Bimonth,'09')

  Evaluate $Bimonth
  When = '01'
      Let $BgnDt = $Year || '-' || '01' || '-' || '02'
      Let $EndDt = $Year || '-' || '03' || '-' || '01'
      Let $BgnDtAcum = $Year || '-' || '01' || '-' || '01'
  Break
  When = '02'
      Let $BgnDt = $Year || '-' || '03' || '-' || '02'
      Let $EndDt = $Year || '-' || '05' || '-' || '01'
      Let $BgnDtAcum = $Year || '-' || '03' || '-' || '01'
  Break
  When = '03'
      Let $BgnDt = $Year || '-' || '05' || '-' || '02'
      Let $EndDt = $Year || '-' || '07' || '-' || '01'
      Let $BgnDtAcum = $Year || '-' || '01' || '-' || '01'
  Break
  When = '04'
      Let $BgnDt = $Year || '-' || '07' || '-' || '02'
      Let $EndDt = $Year || '-' || '09' || '-' || '01'
      Let $BgnDtAcum = $Year || '-' || '07' || '-' || '01'
  Break
  When = '05'
      Let $BgnDt = $Year || '-' || '09' || '-' || '02'
      Let $EndDt = $Year || '-' || '11' || '-' || '01'
      Let $BgnDtAcum = $Year || '-' || '09' || '-' || '01'
  Break 
  When = '06'
      Let $BgnDt = $Year || '-' || '11' || '-' || '02'
      Let $EndDt = $Year1 || '-' || '01' || '-' || '01'
      Let $BgnDtAcum = $Year || '-' || '11' || '-' || '01'
  Break
  End-Evaluate
   
   Let $BeginDate = '123456789012'
   Let $EndDate = '123456789012'
   Do Dtu-Add-Days($BgnDt, -1, $BeginDate)
   Do Dtu-Add-Days($EndDt, -1, $EndDate)
   Do Convert-From-DTU-Date($BeginDate,$BeginDate)
   Do Convert-From-DTU-Date($EndDate,$EndDate)
      
   do Convert-From-DTU-Date($BgnDt,$BgnDt)
   do Convert-From-DTU-Date($EndDt,$EndDt)
   do Convert-From-DTU-Date($BgnDtAcum,$BgnDtAcum)
   
   If rtrim($Company, ' ') <> '' 
       Let $Condition = ' AND JOB.COMPANY = ' || '''' || $Company || ''' '
   End-If
   
   If rtrim($PayGroup, ' ') <> '' 
       Let $Condition = $Condition || ' AND JOB.GP_PAYGROUP = ' || '''' || $PayGroup || ''' '
   End-If
     
   #debug show 'Condition: ' $Condition   
   
   Do Get-Payee-Data

FROM PS_GPMX_RC_VARIABL RC
WHERE RC.OPRID = $prcs_oprid
AND RC.RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT
End-Procedure Select-Params

!**************************************
Begin-Procedure PayGroup-Parameters
Begin-SELECT 
P.GPMX_BASE_DAYS

  Let $BaseDays = &P.GPMX_BASE_DAYS
 
FROM PS_GPMX_TAX_PARM P
WHERE P.GP_PAYGROUP = $PayGroup
AND P.BGN_DT = (SELECT MAX(PYG2.BGN_DT)
              FROM PS_GPMX_TAX_PARM PYG2
              WHERE PYG2.GP_PAYGROUP = P.GP_PAYGROUP
              AND PYG2.BGN_DT < $EndDt)
END-SELECT
End-Procedure PayGroup-Parameters

!**************************************
Begin-Procedure Get-Payee-Data

Let $PayGroupBefore = ''
Begin-SELECT distinct
JOB.COMPANY () ON-BREAK PRINT=NEVER AFTER=CHANGE LEVEL=1
JOB.EMPLID
JOB.EMPL_RCD
JOB.GP_PAYGROUP      () ON-BREAK PRINT=NEVER AFTER=CHANGE-PAYGROUP LEVEL=2
JOB.STD_HOURS 
N.NAME

  Let $Company = &JOB.COMPANY
  Let $EmplID  = &JOB.EMPLID
  Let #EmplRcd = &JOB.EMPL_RCD
  Let $Name    = &N.NAME
  Let $PayGroup= &JOB.GP_PAYGROUP
  If $PayGroup <> $PayGroupBefore
    Do PayGroup-Parameters  
    Let $PayGroupBefore = $PayGroup
  End-if

  Let #StdHours = &JOB.STD_HOURS
  do Report
 
FROM PS_JOB JOB
    ,PS_NAMES N
WHERE JOB.EMPLID=N.EMPLID
AND   JOB.EFFDT=(SELECT MAX(H.EFFDT)
                 FROM PS_JOB H 
                 WHERE H.EMPLID = JOB.EMPLID
                 AND H.EMPL_RCD = JOB.EMPL_RCD
                 AND H.EFFDT < $EndDt)
AND   JOB.EFFSEQ=(SELECT MAX(H1.EFFSEQ)
                 FROM PS_JOB H1 
                 WHERE H1.EMPLID = JOB.EMPLID
                 AND H1.EMPL_RCD = JOB.EMPL_RCD
                 AND H1.EFFDT    = JOB.EFFDT)                  
AND   JOB.HR_STATUS = 'A'
AND   N.NAME_TYPE = 'PRI'
AND   N.EFFDT   = (SELECT MAX(NAM_ED.EFFDT) FROM PS_NAMES NAM_ED 
                        WHERE N.EMPLID    = NAM_ED.EMPLID 
                          AND N.NAME_TYPE = NAM_ED.NAME_TYPE 
                          AND NAM_ED.EFFDT <= JOB.EFFDT)                 
[$Condition]
ORDER BY JOB.COMPANY, JOB.GP_PAYGROUP, JOB.EMPLID
END-SELECT
End-Procedure Get-Payee-Data

!*********************************
Begin-Procedure get_pin_num
Begin-SELECT
O.PIN_NM

  Let $DESCR_PIN=&O.PIN_NM

FROM PS_GP_PIN O
WHERE PIN_NUM=#PIN_NUM
END-SELECT
End-Procedure get_pin_num

!*********************************
Begin-Procedure Report
#debug show '*** Report ***'
#debug show 'Emplid:  ' $Emplid
#debug show 'EmplRcd: ' #EmplRcd
#debug show 'BeginDate: ' $BeginDate
#debug show 'EndDate: ' $EndDate
!*********************************
Begin-SELECT DISTINCT
A.PIN_NUM
A.EMPLID     () ON-BREAK PRINT=NEVER AFTER=PRINT-TOT
A.DAYS
A.GPMX_BASE
A.GPMX_INTEG_BASE
B.GPMX_SDI_VAR
B.GPMX_SDI_FIX
B.GPMX_SDI_TOT

 Let #PIN_NUM  = &A.PIN_NUM
 Let $EMPLOYEE = &A.EMPLID

 IF $BaseDays = '0040'
   Do Get-Accum-Rslt
   If #Units <> 0
     Let #DAYS = #Units / #StdHours
   Else 
     Let #DAYS = &A.DAYS
   End-if
 ELSE
   Let #DAYS = &A.DAYS
 END-IF 

 Let #BASE     = &A.GPMX_BASE
 Let #TOT_BASE = #TOT_BASE + #BASE
 Let #INTEG_BASE = &A.GPMX_INTEG_BASE
 Let #TOT_INTEG_BASE = #TOT_INTEG_BASE + #INTEG_BASE

 IF #DAYS=0
   Let #SDIVAR = 0
 ELSE
   Let #SDIVAR = #BASE / #DAYS
   Let #SDI_VAR= #SDI_VAR + #SDIVAR     
 END-IF

 Let #SDI_FIX  = &B.GPMX_SDI_FIX
 Let #SDI_TOT  = #SDI_VAR+#SDI_FIX
 
 do get_pin_num
 do select-company-descr
 do SELECT-PAYGROUP-DESCR
 do Print-form

FROM PS_GP_PYE_PRC_STAT A3
, PS_GP_PYE_SEG_STAT B3
, PS_GP_CALENDAR C3
, PS_GP_RUN_TYPE D3
, PS_GPMX_SDIVAR_WA A
, PS_GPMX_SDI_WA B
WHERE A.EMPLID   = $EMPLID
  AND A.EMPL_RCD = #EmplRcd
  AND B.EMPLID   = A.EMPLID
  AND B.EMPL_RCD = A.EMPL_RCD
  AND B.EFFDT  =(SELECT MAX(Z.EFFDT)
                 FROM PS_GPMX_SDI_WA Z
                 WHERE A.EMPLID=Z.EMPLID
                   AND Z.EFFDT BETWEEN $BgnDt AND $EndDt)
  AND B.SEQNUM =(SELECT MAX(Z1.SEQNUM)
                 FROM PS_GPMX_SDI_WA Z1
                 WHERE A.EMPLID = Z1.EMPLID
                   AND Z1.EFFDT = B.EFFDT) 
AND A3.CAL_RUN_ID       =       A.CAL_RUN_ID 
AND A3.EMPLID           =       A.EMPLID 
AND A3.EMPL_RCD         =       A.EMPL_RCD 
AND A3.GP_PAYGROUP      =       A.GP_PAYGROUP 
AND A3.CAL_ID           =       A.CAL_ID 
AND A3.ORIG_CAL_RUN_ID  =       A.ORIG_CAL_RUN_ID 
AND A3.RSLT_VER_NUM     =       1
AND A3.RSLT_REV_NUM     =       1
AND A3.PRD_BGN_DT       >=      $BeginDate
AND A3.PRD_END_DT       <=      $EndDate
AND B3.RSLT_SEG_NUM     =       A.RSLT_SEG_NUM                  
AND B3.CAL_RUN_ID       =       A3.CAL_RUN_ID 
AND B3.EMPLID           =       A3.EMPLID 
AND B3.EMPL_RCD         =       A3.EMPL_RCD 
AND B3.GP_PAYGROUP      =       A3.GP_PAYGROUP 
AND B3.CAL_ID           =       A3.CAL_ID 
AND B3.ORIG_CAL_RUN_ID  =       A3.ORIG_CAL_RUN_ID 
AND B3.PYE_CALC_STAT    >=      '50' 
AND B3.CALC_ACTION      =       'C' 
AND C3.GP_PAYGROUP      =       A3.GP_PAYGROUP
AND C3.CAL_ID           =       A3.CAL_ID
AND D3.RUN_TYPE         =       C3.RUN_TYPE
AND D3.CALC_TYPE        =       'P'                   
ORDER BY A.PIN_NUM
end-SELECT
End-Procedure Report

!*********************************
Begin-Procedure Print-form
  Let #Comp-Value = #BASE + #INTEG_BASE
  IF #Comp-Value <> 0
    IF #FLAG = 0
      PRINT $Emplid                (+1,001)
      PRINT $NAME                  (0,012,35)
      Let #FLAG = 1
    END-IF
    PRINT $DESCR_PIN             (0,062)
    PRINT #DAYS                  (0,75)     edit 99999.99
    PRINT #INTEG_BASE            (0,93)     edit 9999,999.99
    PRINT #Base                  (0,106)    edit 9999,999.99
    PRINT #SDIVAR                (0,121)    edit 9999,999.99
    IF $EMPLOYEE = $EMPLID
      PRINT ''                    (+1,0)
    END-IF
  END-IF
End-Procedure Print-form

!*********************************
Begin-Procedure PRINT-TOT
  Let #Comp-tot = #TOT_INTEG_BASE + #TOT_BASE+#SDI_VAR
  IF #Comp-tot <> 0
    PRINT ''                        (+1,)
    PRINT 'TOTALES POR EMPLEADO : ' (0,012)    
    PRINT #TOT_INTEG_BASE           (0,93)     edit 9999,999.99
    PRINT #TOT_BASE                 (0,106)    edit 9999,999.99
    PRINT #SDI_VAR                  (0,121)    edit 9999,999.99
    PRINT #SDI_FIX                  (0,135)    edit 9999,999.99
    PRINT #SDI_TOT                  (0,145)    edit 9999,999.99
    PRINT ''                        (+1,)
    Let #SDI_VAR=0
    Let #SDI_TOT=0
    Let #FLAG=0
    Let #TOT_INTEG_BASE=0
    Let #TOT_BASE=0
  END-IF
End-Procedure PRINT-TOT

!*********************************
Begin-Procedure CHANGE
  IF rtrim($EMPLOYEE,' ') <> '' AND $CompanyPrior <> $Company AND rtrim($Company,' ') <> ''
    MOVE $Company TO $CompanyPrior
    MOVE $PayGroup TO $PayGrp
    Let $employee=''
  END-IF
End-Procedure CHANGE

!*********************************
Begin-Procedure CHANGE-PAYGROUP
  IF rtrim($EMPLOYEE,' ')<>'' AND $PayGroup<>$PayGrp
    MOVE $PayGroup TO $PayGrp
    MOVE $Company TO $CompanyPrior
    NEW-PAGE
    Let $employee=''
  END-IF
End-Procedure CHANGE-PAYGROUP

!*********************************
Begin-Procedure SELECT-PAYGROUP-DESCR
Begin-SELECT
P.DESCR

  Let $PayDesc = &P.DESCR

From PS_GP_PYGRP P
WHERE GP_PAYGROUP=$PAYGR
END-SELECT
End-Procedure SELECT-PAYGROUP-DESCR

!*********************************
Begin-Procedure select-company-descr
Begin-SELECT
Q.DESCR

  Let $CompanyName = &Q.DESCR

FROM PS_COMPANY_TBL Q
WHERE Q.COMPANY=$COMPANY
END-SELECT
End-Procedure select-company-descr

!*********************************
Begin-Procedure Get-Accum-Rslt

Do GetPinNumber('GPMX_RC_VARIABIL','SUELDO_X_HORA',$dias_pago)
Let #PinNum = $dias_pago
Begin-SELECT
A.CALC_RSLT_VAL

  Let #Units = &A.CALC_RSLT_VAL

FROM PS_GP_RSLT_ACUM A
WHERE A.EMPLID = $Emplid
  AND A.PIN_NUM = #PinNum
  AND A.SLICE_BGN_DT =(SELECT MAX(A1.SLICE_BGN_DT) 
                       FROM PS_GP_RSLT_ACUM A1
                       WHERE A1.EMPLID  = A.EMPLID
                       AND   A1.PIN_NUM = A.PIN_NUM
  AND A.SLICE_BGN_DT >= $BgnDtAcum
  AND A.SLICE_BGN_DT < $EndDt)
  AND A.SEQ_NUM8 = (SELECT MAX(A2.SEQ_NUM8) 
                    FROM PS_GP_RSLT_ACUM A2
                    WHERE A.EMPLID = A2.EMPLID 
                      AND A.PIN_NUM = A2.PIN_NUM
                      AND A.SLICE_BGN_DT = A2.SLICE_BGN_DT)
end-SELECT
End-Procedure Get-Accum-Rslt

#Include 'gpmxpinm.sqc'  !Element Map
#Include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields
#Include 'getlocnm.sqc'  !Get-Location-Name
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
