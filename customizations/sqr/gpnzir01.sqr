!***********************************************************************
!  GPNZIR01:  IR 348 Report                                            *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2018, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!       $Release:  HR92                                                !
!           $Bug:  27908866                                            !
!***********************************************************************
! Program Description                                                  *
! -------------------                                                  *
!                                                                      *
! This report produces a listing of the data in the IR 348 data tables *
!                                                                      *
! Sorted by:                                                           *
! Employee ID                                                          *
!                                                                      *
! Modification History                                                 *
!                                                                      *
!    Date    Incident                                                  *
! ~~~~~~~~~~ ~~~~~~~~                                                  *
!  20/03/02  Initial version                                           *
!  05/03/03  ICE 564060000 - Change Pay Entity CONTACT_PHONE field - it*
!            was formatted as Nth American Phone Number.  Also remove  *
!            commas from names & exclude negatives from totals.        *
!  15/05/03  Formatting issue with output. Also when employee has      *
!            multiple names, the report shows multiple lines           *
!  18/05/04  ICE 724794000 When an employee has two name records       *
!            in PS_NAME table the report is duplicating the detail     *
!            lines and doubling the totals                             *
!  03/06/04  ICE 731046000 When an employee has a hire date greater    *
!            than today's date then IR348 Report not showing the IRD   *
!            details of that employee.                                 *
!  18/08/04  ICE 1109958000 Data format error on DB2/Unix              *
!  13/08/07  ICE 1677260000 KiwiSaver Reporting Specifications 2007-08 *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup02.sqc'   !Printer and page-size initialization

begin-setup
   page-size 70 200
#define PAGE_MAX_COLS    200
#define PAGE_MAX_LINES   70
#Define ColR 183  !Column # referenced by Standard Headings
#IFDEF ORACLE
  declare-variable
    date $PERIOD_END_DT
  end-declare
#END-IF
end-setup

!************************************************************************
!  Define Variables                                                     *
!************************************************************************
#define BLANK                       ' '
#define NULL                        ''
#define TRUE                        1
#define FALSE                       0
#define FULL_REPORT                 '00'
#define EXCEPT_REPORT               '01'
#define EMPLOYED_LIST               'A','L','P','S','W'
#define IRD_DETAIL_REC              'PS_GPNZ_IRD_EMPDET'
#define IRD_EXCEPT_REC              'PS_GPNZ_IRD_EEXCEP'
#define IRD_EXCEPT_FLD              'A.GPNZ_EXCEPTION_CD'
#define IRD_START_DT_FLD            'A.GPNZ_START_DT'
#define IRD_FINISH_DT_FLD           'A.GPNZ_FINISH_DT'
#define REPORT_ID                   'GPNZIR01'


!************************************************************************
!  Report Structure                                                     *
!************************************************************************
begin-Program
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stamp-End-Time
  do Stdapi-Term

end-Program


!************************************
!PrintHeading                       *
!************************************
begin-heading 18

  print '            '            (1,1)
  print 'Report ID:  '            (+1,1)
  print $ReportID                 ()
  uppercase $REPORT_TITLE
  print $REPORT_TITLE             ()          center
  let #RptCol = {ColR} - 2
  page-number                     (0,#RptCol)  'Page No.  '
  uppercase $ReportTitle2
  print $ReportTitle2             (+1)        center edit 'MONTH, YYYY'
  let #RptCol = {ColR} - 2
  let #RptCol2 = {ColR} + 6
  print $Run_Date_lbl             (0,#RptCol)
  print ':'                       ()
  print $ReportDate               ()
  print $Run_Time_lbl             (+1,#RptCol)
  print ':'                       ()
  print $ReportTime               ()

  print $PAY_ENTITY_LBL           (+1,1)
  print ':'                       ()
  print $Pay_Entity_Desc          (0,#HdrCol1)
  print $GPNZ_IRD_NUMBER_LBL      (+1,1)
  print ':'                       ()
  print $IRDNum                   (0,#HdrCol1)
  print $CONTACT_ID_LBL           (+1,1)
  print ':'                       ()
  print $Contact_Name             (0,#HdrCol1, 20)
  print $PHONE_LBL                (+1,1)
  print ':'                       ()
  let $Phone = ltrim($Phone, ' ')
  print $Phone                    (0,#HdrCol1)

  print $CREATION_DT_LBL          (0,#RptCol)
  print ':'                       ()
  print $ICreatedt                (0,#RptCol2) edit 'DD/MM/YYYY'

  print $DT_ISSUED_LBL            (+1,#RptCol)
  print ':'                       ()
  print $IIssuedt                 (0,#RptCol2) edit 'DD/MM/YYYY'

  print $STATUS_LBL               (+1,#RptCol)
  print ':'                       ()
  print $IssueShortName           (0,#RptCol2)

  !Print fill line
  print '='                       (+1, 1, 198) fill
  print $EMPLID_LBL               (+1,1)
  print '/'                       (0,)
  print $NAME_LBL                 (0,)
  print $GPNZ_TAX_SCALE_LBL       (0,#HeadCol1) wrap 5 2 keep-top
  print $GPNZ_IRD_NUMBER_LBL      (0,#HeadCol2) wrap 6 2 keep-top
  print $START_DATE_LBL           (0,#HeadCol3) wrap 7 2 keep-top
  print $FINISH_DATE_LBL          (0,#HeadCol4) wrap 7 2 keep-top

  let $GPNZ_TAX_GROSS_LBL1     = lpad($GPNZ_TAX_GROSS_LBL    , 18, ' ')
  let $GPNZ_STUD_LOAN_AMT_LBL1 = lpad($GPNZ_STUD_LOAN_AMT_LBL, 12, ' ')
  let $GPNZ_KIWI_EE_LBL1       = lpad($GPNZ_KIWI_EE_LBL, 18, ' ')
  let $GPNZ_KIWI_ER_LBL1       = lpad($GPNZ_KIWI_ER_LBL, 18, ' ')

  let $GPNZ_GROSS_NO_EP_LBL1   = lpad($GPNZ_GROSS_NO_EP_LBL  , 18, ' ')
  let $GPNZ_PAYE_TAX_AMT_LBL1  = lpad($GPNZ_PAYE_TAX_AMT_LBL , 18, ' ')

  print $GPNZ_TAX_GROSS_LBL1      (+3,#HeadCol5) wrap 18 2 keep-top
  print $GPNZ_GROSS_NO_EP_LBL1    (0,#HeadCol6) wrap 18 2 keep-top
  print $GPNZ_PAYE_TAX_AMT_LBL1   (0,#HeadCol7) wrap 18 2 keep-top
  print $GPNZ_LUMP_SUM_FLAG_LBL   (0,#HeadCol8) wrap 5 2 keep-top

  print $GPNZ_CHILD_SUP_AMT_LBL   (0,#HeadCol9) wrap 7 2 keep-top
  print $GPNZ_CHILD_SUP_VAR_LBL   (0,#HeadCol10) wrap 5 2 keep-top
  print $GPNZ_STUD_LOAN_AMT_LBL1  (0,#HeadCol11) wrap 7 2 keep-top
  print $GPNZ_KIWI_EE_LBL1        (0,#HeadCol12) wrap 9 2 keep-top
  print $GPNZ_KIWI_ER_LBL1        (0,#HeadCol13) wrap 9 2 keep-top
  print $GPNZ_PAYROLL_GIVING_LBL1 (0,#HeadCol14) wrap 10 2 keep-top
  print $MESSAGE_TEXT_LBL         (0,#HeadCol15)

  !Print fill line
  print '='                       (+2, 1, 198) fill

end-heading


!************************************
!Init-Report                        *
!************************************
begin-procedure Init-Report

  let $ReportID = {REPORT_ID}

  !*** Translations procedures & Strings Table retrievals.
  do Init_Report_Translation ($ReportID, $curr_language_cd)
  do Append_Report_Translation ($ReportID)

  do Get_Field_Information ($ReportID, 'REPORT_ID', $REPORT_ID_LBL, #DW)
  do Get_Field_Information ($ReportID, 'REPORT_TITLE_FULL', $REPORT_TITLE_FULL, #DW)
  do Get_Field_Information ($ReportID, 'REPORT_TITLE_EXCPT', $REPORT_TITLE_EXCPT, #DW)
  do Get_Field_Information ($ReportID, 'PAGE_NUM', $PAGE_NUM_LBL, #DW)
  do Get_Field_Information ($ReportID, 'RUNDATE', $Run_Date_lbl, #DW)
  do Get_Field_Information ($ReportID, 'RUNTIME', $Run_Time_lbl, #DW)

  do Get_Field_Information ($ReportID, 'CONTACT_ID', $CONTACT_ID_LBL, #DW)
  do Get_Field_Information ($ReportID, 'PHONE', $PHONE_LBL, #DW)
  do Get_Field_Information ($ReportID, 'CREATION_DT', $CREATION_DT_LBL, #DW)
  do Get_Field_Information ($ReportID, 'DT_ISSUED', $DT_ISSUED_LBL, #DW)
  do Get_Field_Information ($ReportID, 'STATUS', $STATUS_LBL, #DW)

  do Get_Field_Information ($ReportID, 'EMPLID', $EMPLID_LBL, #DW)
  do Get_Field_Information ($ReportID, 'NAME', $NAME_LBL, #DW)
  do Get_Field_Information ($ReportID, 'PAY_ENTITY', $PAY_ENTITY_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_TAX_SCALE', $GPNZ_TAX_SCALE_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_IRD_NUMBER', $GPNZ_IRD_NUMBER_LBL, #DW)
  do Get_Field_Information ($ReportID, 'START_DATE', $START_DATE_LBL, #DW)
  do Get_Field_Information ($ReportID, 'FINISH_DATE', $FINISH_DATE_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_TAX_GROSS', $GPNZ_TAX_GROSS_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_GROSS_NO_EP', $GPNZ_GROSS_NO_EP_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_PAYE_TAX_AMT', $GPNZ_PAYE_TAX_AMT_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_CHILD_SUP_AMT', $GPNZ_CHILD_SUP_AMT_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_CHILD_SUP_VAR', $GPNZ_CHILD_SUP_VAR_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_STUD_LOAN_AMT', $GPNZ_STUD_LOAN_AMT_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_LUMP_SUM_FLAG', $GPNZ_LUMP_SUM_FLAG_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_KIWI_EE_AMT', $GPNZ_KIWI_EE_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_KIWI_ER_AMT', $GPNZ_KIWI_ER_LBL, #DW)
  do Get_Field_Information ($ReportID, 'GPNZ_PG_AMT', $GPNZ_PAYROLL_GIVING_LBL1, #DW)

  do Get_Field_Information ($ReportID, 'MESSAGE_TEXT', $MESSAGE_TEXT_LBL, #DW)

  do Get_Field_Information ($ReportID, 'TOTALS_LABEL', $TOTALS_LABEL_LBL, #DW)

  do Get_Field_Information ($ReportID, 'RUN_DATE_FMT', $RUN_DATE_FMT, #DW)
  do Get_Field_Information ($ReportID, 'RUN_TIME_FMT', $RUN_TIME_FMT, #DW)
  do Get_Field_Information ($ReportID, 'IRD_NUMBER_FMT', $IRD_NUMBER_FMT, #DW)
  do Get_Field_Information ($ReportID, 'START_DATE_FMT', $START_DATE_FMT, #DW)
  do Get_Field_Information ($ReportID, 'FINISH_DATE_FMT', $FINISH_DATE_FMT, #DW)
  do Get_Field_Information ($ReportID, 'GROSS_EARNS_FMT', $GROSS_EARNS_FMT, #DW)
  do Get_Field_Information ($ReportID, 'NOT_LIABLE_FMT', $NOT_LIABLE_FMT, #DW)
  do Get_Field_Information ($ReportID, 'PAYE_FMT', $PAYE_FMT, #DW)
  do Get_Field_Information ($ReportID, 'CHILD_SUPPORT_FMT', $CHILD_SUPPORT_FMT, #DW)
  do Get_Field_Information ($ReportID, 'STUDENT_LOAN_FMT', $STUDENT_LOAN_FMT, #DW)
  do Get_Field_Information ($ReportID, 'KIWI_EE_FMT', $KIWI_EE_FMT, #DW)
  do Get_Field_Information ($ReportID, 'KIWI_ER_FMT', $KIWI_ER_FMT, #DW)
   do Get_Field_Information ($ReportID, 'PAYROLL_GVNG_FMT', $PAYROLL_GVNG_FMT, #DW)


  display $REPORT_TITLE



    do Stdapi-Init

  if $prcs_process_instance = ''
!
  else
    do Select-Parameters

     LET $Str_PERIOD_END_DT = $Run_Year || '-' || $Run_Month || '-01'
#IFDEF ORACLE
     LET $PERIOD_END_DT = strtodate($Str_PERIOD_END_DT, 'YYYY-MM-DD')
     LET $PERIOD_END_DT = dateadd($PERIOD_END_DT, 'month', 1)
     LET $PERIOD_END_DT = dateadd($PERIOD_END_DT, 'day', -1)
#ELSE
!     LET $PERIOD_END_DTTT = strtodate($Str_PERIOD_END_DT, 'YYYY-MM-DD')
     do dtu-add-months($Str_PERIOD_END_DT, 1, $PERIOD_END_DT)
     do dtu-subtract-days($PERIOD_END_DT, 1, $PERIOD_END_DT)
#END-IF

    ! move '-' to $DDelimiter
    ! do Format-DateTime($PERIOD_END_DT, $PERIOD_END_DT, {DEFCMP}, '', '')

       do Create-Exception-Code-Array
       do Create-Issue-Status-Array

       do Get-Hdr-Details-Extra
       do Get-Issue-Status-Desc($IStatus, $IssueLongName, $IssueShortName)

    if $Run_Report_Type = {EXCEPT_REPORT}
        let   $REPORT_TITLE = $REPORT_TITLE_EXCPT
    else
        let   $REPORT_TITLE = $REPORT_TITLE_FULL
    end-if
    let $ReportTitle2 = $Run_Year || $Run_Month || '01'

  end-if



  let #HdrCol1 = 15
  let #HdrCol2 = 120
  let #HdrCol3 = 135

  let #BodyCol1 =  40            ! Tax Scale data
  let #BodyCol2 =  50            ! IRD Number data
  let #BodyCol3 =  60            ! Start Date data
  let #BodyCol4 =  71            ! Finish Date data
  let #BodyCol5 =  25            ! Gross Earnings data
  let #BodyCol6 =  40            ! Not Liable for EP data
  let #BodyCol7 =  59            ! PAYE data
  let #BodyCol8 =  82            ! Lump Sum data
  let #BodyCol9 =  87            ! Child Support data
  let #BodyCol10 = 95            ! CS Code data
  let #BodyCol11 = 103           ! Student Loan data
  let #BodyCol12 = 120           ! Kiwi Saver EE data
  let #BodyCol13 = 140           ! Kiwi Saver ER data
  let #BodyCol14 = 160           ! Payroll Giving
  let #BodyCol15 = 180           ! Message

  let #HeadCol1 =  40             ! Tax Scale label
  let #HeadCol2 =  50             ! IRD Number label
  let #HeadCol3 =  60             ! Start Date label
  let #HeadCol4 =  71             ! Finish Date label
  let #HeadCol5 =  25             ! Gross Earnings label
  let #HeadCol6 =  45             ! Not Liable for EP label
  let #HeadCol7 =  55             ! PAYE label
  let #HeadCol8 =  81             ! Lump Sum label
  let #HeadCol9 =  90             ! Child Support label
  let #HeadCol10 = 102            ! CS Code label
  let #HeadCol11 = 112            ! Student Loan label
  let #HeadCol12 = 130            ! Kiwi Saver EE label
  let #HeadCol13 = 150            ! Kiwi Saver ER label
  let #HeadCol14 = 168            ! Payroll Giving label
  let #HeadCol15 = 183            ! Message label

  do Stamp-Begin-Time

end-procedure


!******************************************************************************
! Create-Exception-Code-Array                                                 *
! Create and populate the array of exception codes for use in retrieving      *
! descriptions.                                                               *
!******************************************************************************
Begin-Procedure Create-Exception-Code-Array Local

Create-Array Name=ExceptionCodes Size=30
   Field=Value:char
   Field=LongName:char
   Field=ShortName:char

let #_ExceptionCodesCount = 0

let $_Error-Message = 'GPNZIR01.SQR, Create-Exception-Code-Array, XLATTABLE, Select'

begin-SELECT on-error=SQL-Error-Handler($_Error-Message)
A.FIELDVALUE,
A.XLATLONGNAME,
A.XLATSHORTNAME

   let $Value = rtrim(&A.FIELDVALUE, ' ')
   let $LongName = rtrim(&A.XLATLONGNAME, ' ')
   let $ShortName = rtrim(&A.XLATSHORTNAME, ' ')
   put $Value $LongName $ShortName into ExceptionCodes(#_ExceptionCodesCount)
   add 1 to #_ExceptionCodesCount

FROM PSXLATITEM A
WHERE A.FIELDNAME = 'GPNZ_EXCEPTION_CD'
!AND A.LANGUAGE_CD = 'ENG'
AND A.EFFDT = (SELECT MAX(ED.EFFDT) FROM PSXLATITEM ED
             WHERE A.FIELDNAME = ED.FIELDNAME
!               AND A.LANGUAGE_CD = ED.LANGUAGE_CD
               AND A.FIELDVALUE = ED.FIELDVALUE
               AND ED.EFFDT <= {DATEIN-PREFIX}$PERIOD_END_DT{DATEIN-SUFFIX})
end-SELECT

  !display 'ended'
End-Procedure Create-Exception-Code-Array


!******************************************************************************
! Create-Issue-Status-Array                                                   *
! Create and populate the array of exception codes for use in retrieving      *
! descriptions.                                                               *
!******************************************************************************
Begin-Procedure Create-Issue-Status-Array Local

Create-Array Name=IssueStatus Size=30
   Field=Value:char
   Field=LongName:char
   Field=ShortName:char

let #_IssueStatusCount = 0

let $_Error-Message = 'GPNZIR01.SQR, Create-Issue-Status-Array, XLATTABLE, Select'

begin-SELECT on-error=SQL-Error-Handler($_Error-Message)

A.FIELDVALUE,
A.XLATLONGNAME,
A.XLATSHORTNAME

   let $Value = rtrim(&A.FIELDVALUE, ' ')
   let $LongName = rtrim(&A.XLATLONGNAME, ' ')
   let $ShortName = rtrim(&A.XLATSHORTNAME, ' ')
   put $Value $LongName $ShortName into IssueStatus(#_IssueStatusCount)
   add 1 to #_IssueStatusCount




FROM PSXLATITEM A
WHERE A.FIELDNAME = 'GPNZ_ISSUE_STATUS'
AND A.EFFDT = (SELECT MAX(ED.EFFDT) FROM PSXLATITEM ED
             WHERE A.FIELDNAME = ED.FIELDNAME
               AND A.FIELDVALUE = ED.FIELDVALUE
               AND ED.EFFDT <= {DATEIN-PREFIX}$PERIOD_END_DT{DATEIN-SUFFIX})

end-SELECT

End-Procedure Create-Issue-Status-Array

!************************************************************************
! Select-Parameters                                                     *
! Obtain the running parameters                                         *
!************************************************************************
Begin-Procedure Select-Parameters

#debuga show 'In Get-Run-Parms'

let $Error-Message = $ReportID || ', Select-Parameters, PS_GPNZ_RC_IR348, Select'

begin-SELECT on-error=SQL-Error-Handler($Error-Message)
RUN.PAY_ENTITY
RUN.GPNZ_YEARCD
RUN.GPNZ_MONTHCD
RUN.GPNZ_IRREPT_TYPE

   let $Run_Pay_Entity = rtrim(&RUN.PAY_ENTITY, ' ')
   let $Run_Year = rtrim(&RUN.GPNZ_YEARCD, ' ')
   let $Run_Month = rtrim(&RUN.GPNZ_MONTHCD, ' ')
   let $Run_Report_Type = rtrim(&RUN.GPNZ_IRREPT_TYPE, ' ')

FROM PS_GPNZ_RC_IR348 RUN
WHERE RUN.OPRID = $Prcs_Oprid
  AND RUN.RUN_CNTL_ID = $Prcs_Run_cntl_ID
end-SELECT

End-Procedure Select-Parameters

!******************************************************************************
! Get-Hdr-Details-Extra                                                       *
! Get the IRD Number and Phone.                                               *
!******************************************************************************
Begin-Procedure Get-Hdr-Details-Extra

#debuga show 'In Get-Hdr-Details-Extra'

let $Phone = {NULL}
let $IRDNum = {NULL}
let $ContactId = {NULL}

let $Error-Message = 'GPNZIR01.SQR, Get-Hdr-Details-Extra, PS_GPNZ_IRD_HEADER, Select'

begin-SELECT on-error=SQL-Error-Handler($Error-Message)
A.GPNZ_DT_1ST_CREATE
A.GPNZ_DT_IR_ISSUED
A.GPNZ_ISSUE_STATUS
B.GPNZ_CONTACT_PHONE
B.GPNZ_IRD_NUMBER
B.GPNZ_CONTACT_ID
C.LAST_NAME
C.FIRST_NAME





   let $ICreatedt = rtrim(&A.GPNZ_DT_1ST_CREATE, ' ')
   let $IIssuedt = rtrim(&A.GPNZ_DT_IR_ISSUED, ' ')
   let $IStatus = rtrim(&A.GPNZ_ISSUE_STATUS, ' ')

   let $Phone = rtrim(&B.GPNZ_CONTACT_PHONE, ' ')
   let $IRDNum = rtrim(&B.GPNZ_IRD_NUMBER, ' ')
   let $ContactId = rtrim(&B.GPNZ_CONTACT_ID, ' ')
   let $Contact_Name = rtrim(&C.LAST_NAME, ' ') || ' ' || rtrim(&C.FIRST_NAME, ' ')

FROM PS_GPNZ_IRD_HEADER A, PS_GPNZ_PYENT_DTL B, PS_NAMES C
WHERE A.PAY_ENTITY = B.PAY_ENTITY
AND B.GPNZ_CONTACT_ID = C.EMPLID
AND A.PAY_ENTITY = $Run_Pay_Entity
AND A.GPNZ_YEARCD = $Run_Year
AND A.GPNZ_MONTHCD = $Run_Month
AND C.NAME_TYPE = 'PRI'             ! RESOLUTION 127484 TO restrict names to pri only.
AND C.EFFDT =
    (SELECT MAX(A_ED.EFFDT) FROM PS_NAMES A_ED
     WHERE C.EMPLID = A_ED.EMPLID
     AND C.NAME_TYPE = A_ED.NAME_TYPE
     AND A_ED.EFFDT <= {DATEIN-PREFIX}$PERIOD_END_DT{DATEIN-SUFFIX})
end-SELECT

End-Procedure Get-Hdr-Details-Extra

!******************************************************************************
! Get-Issue-Status-Desc                                                       *
! Get the Issue Status description from the array.                            *
!******************************************************************************
Begin-Procedure Get-Issue-Status-Desc($Value, :$LongName, :$ShortName)

let #i = 0
while #i < #_IssueStatusCount
   if IssueStatus.Value(#i) = $Value

      get $junk $LongName $ShortName from IssueStatus(#i)

     ! let $IssueLongName = $LongName
     ! let $IssueShortName = $ShortName

      break
   end-if
   add 1 to #i
end-while

End-Procedure Get-IssueStatus-Desc



!***********************************************************************
Begin-Procedure Stamp-Begin-Time

  display ''
  display 'Report Began: ' noline
  display $AsOfToday noline
  display ':' noline
  display $AsOfNow
  display ''

end-procedure Stamp-Begin-Time


!************************************
!Process-Main                       *
!************************************
begin-procedure Process-Main

#debugk do Get-Current-DateTime
#debugk show 'Enter Process-Main ' $SysDateTime

if $Run_Report_Type = {FULL_REPORT}
   let $Main_Record = {IRD_DETAIL_REC}
   let $Exception_Fld = {IRD_EXCEPT_FLD}
   let $Start_Date_Fld = {IRD_START_DT_FLD}
   let $Finish_Date_Fld = {IRD_FINISH_DT_FLD}
else
   let $Main_Record = {IRD_EXCEPT_REC}
end-if

show 'Parameters:'
show '   Pay Entity:  "' $Run_Pay_Entity '"'
show '   Year:        "' $Run_Year '"'
show '   Month:       "' $Run_Month '"'
show '   Report Type: "' $Run_Report_Type '"'
!print ' ' (+2,1)

show 'Main Record: ' $Main_Record

let #Cnt = 0

do Get_Pay_Entity_Desc

let $Error-Message = $ReportID || '.SQR, Process-Main, ' || $Main_Record || ', Select'

begin-SELECT On-Error=SQL-Error-Handler($Error-Message)
A.EMPLID
B.LAST_NAME
B.FIRST_NAME
A.GPNZ_TAX_SCALE
A.GPNZ_TAX_GROSS
A.GPNZ_GROSS_NO_EP
A.GPNZ_PAYE_TAX_AMT
A.GPNZ_LUMP_SUM_FLAG
A.GPNZ_CHILD_SUP_AMT
A.GPNZ_CHILD_SUP_VAR
A.GPNZ_STUD_LOAN_AMT
A.GPNZ_KIWI_EE_DED
A.GPNZ_KIWI_ER_DED
A.GPNZ_TX_CRDT_PG
C.GPNZ_TAX_GROSS
C.GPNZ_GROSS_NO_EP
C.GPNZ_PAYE_TAX_AMT
C.GPNZ_LUMP_SUM_FLAG
C.GPNZ_CHILD_SUP_AMT
C.GPNZ_CHILD_SUP_VAR
C.GPNZ_STUD_LOAN_AMT
C.GPNZ_KIWI_EE_DED
C.GPNZ_KIWI_ER_DED
C.GPNZ_TX_CRDT_PG

[$Start_Date_Fld]      &StartDt=Date
[$Finish_Date_Fld]     &FinishDt=Date
[$Exception_Fld]       &ExceptionCd=Char

 let $EmplID = rtrim(&A.EMPLID, ' ')
 let $Name = rtrim(&B.LAST_NAME, ' ') || ' ' || rtrim(&B.FIRST_NAME, ' ')
 let $Tax_Code = rtrim(&A.GPNZ_TAX_SCALE, ' ')
 if $Tax_Code = 'BOR' Or $Tax_Code = 'CIR' 
       let $Tax_Code = 'SL' || $Tax_Code
 else 
    if $Tax_Code = 'EBOR' Or $Tax_Code = 'ECIR'        
       let $Tax_Code = 'SL' || Substr($Tax_Code, 2, 3)
 end-if   
 end-if
 let #Gross = &A.GPNZ_TAX_GROSS
 let #Not_Liable = &A.GPNZ_GROSS_NO_EP
 let #PAYE = &A.GPNZ_PAYE_TAX_AMT
 let $Lump_Sum = rtrim(&A.GPNZ_LUMP_SUM_FLAG, ' ')
 if $Lump_Sum = '1'
    let $Lump_Sum = 'Y'
 else
    let $Lump_Sum = 'N'
 end-if
 let #Child_Support = &A.GPNZ_CHILD_SUP_AMT
 let $CS_Code = rtrim(&A.GPNZ_CHILD_SUP_VAR, ' ')
 let #Student_Loan = &A.GPNZ_STUD_LOAN_AMT
 let #KiwiEE = &A.GPNZ_KIWI_EE_DED
 let #KiwiER = &A.GPNZ_KIWI_ER_DED
 let #PG = &A.GPNZ_TX_CRDT_PG
 let $Exception_CD = rtrim(&ExceptionCd, ' ')

 if #Gross >= 0 and #Not_Liable >= 0 and #PAYE >= 0
  and #Child_Support >= 0 and #Student_Loan >= 0 or $Exception_CD <> '1'
    let #TGross = #TGross + #Gross
    let #TNot_Liable = #TNot_Liable + #Not_Liable
    let #TPAYE  = #TPAYE + #PAYE
    let #TChild_Support = #TChild_Support + #Child_Support
    let #TStudent_Loan = #TStudent_Loan + #Student_Loan
    let #TKiwiEE = #TKiwiEE + #KiwiEE
    let #TKiwiER = #TKiwiER + #KiwiER
    let #TPG = #TPG + #PG
    else

    let #Gross = &C.GPNZ_TAX_GROSS
    let #Not_Liable = &C.GPNZ_GROSS_NO_EP
    let #PAYE = &C.GPNZ_PAYE_TAX_AMT
    let $Lump_Sum = rtrim(&C.GPNZ_LUMP_SUM_FLAG, ' ')
    if $Lump_Sum = '1'
    let $Lump_Sum = 'Y'
    else
    let $Lump_Sum = 'N'
    end-if
    let #Child_Support = &C.GPNZ_CHILD_SUP_AMT
    let $CS_Code = rtrim(&C.GPNZ_CHILD_SUP_VAR, ' ')
    let #Student_Loan = &C.GPNZ_STUD_LOAN_AMT
    let #KiwiEE = &C.GPNZ_KIWI_EE_DED
    let #KiwiER = &C.GPNZ_KIWI_ER_DED
    let #PG = &C.GPNZ_TX_CRDT_PG
    let #TGross = #TGross + #Gross
    let #TNot_Liable = #TNot_Liable + #Not_Liable
    let #TPAYE  = #TPAYE + #PAYE
    let #TChild_Support = #TChild_Support + #Child_Support
    let #TStudent_Loan = #TStudent_Loan + #Student_Loan
    let #TKiwiEE = #TKiwiEE + #KiwiEE
    let #TKiwiER = #TKiwiER + #KiwiER
    let #TPG = #TPG + #PG
 end-if

 if $Main_Record = {IRD_DETAIL_REC}
   let $Exception_Cd = rtrim(&ExceptionCd, ' ')
   do Get-Exception-Code-Desc($Exception_Cd, $ExceptionLong, $ExceptionShort)
   let $Start_Date = rtrim(&StartDt, ' ')
   let $Finish_Date = rtrim(&FinishDt, ' ')
 end-if

 let #Cnt = #Cnt + 1


 do Get-Employee-IRD-Number($EmplID, $PERIOD_END_DT, $IRD_Number)
 do Print-Employee-Line

FROM [$Main_Record] A
   , PS_NAMES B
   , PS_GPNZ_DET_TMP C
WHERE A.EMPLID = B.EMPLID
 AND A.PAY_ENTITY = $Run_Pay_Entity
 AND A.GPNZ_YEARCD = $Run_Year
 AND A.GPNZ_MONTHCD = $Run_Month
 AND C.PROCESS_INSTANCE =
 (SELECT MAX(PROCESS_INSTANCE) FROM PS_GPNZ_DET_TMP CC
 WHERE CC.PROCESS_INSTANCE = C.PROCESS_INSTANCE
 AND CC.PAY_ENTITY = C.PAY_ENTITY
 AND CC.GPNZ_YEARCD = C.GPNZ_YEARCD
 AND CC.GPNZ_MONTHCD = C.GPNZ_MONTHCD)
 AND C.EMPLID = A.EMPLID
 AND C.PAY_ENTITY = $Run_Pay_Entity
 AND C.GPNZ_YEARCD = $Run_Year
 AND C.GPNZ_MONTHCD = $Run_Month
 AND C.GPNZ_TAX_SCALE = A.GPNZ_TAX_SCALE
 AND B.EFFDT =
    (SELECT MAX(A_ED.EFFDT) FROM PS_NAMES A_ED
     WHERE B.EMPLID = A_ED.EMPLID
     AND B.NAME_TYPE = A_ED.NAME_TYPE
     AND A_ED.EFFDT <= {DATEIN-PREFIX}$PERIOD_END_DT{DATEIN-SUFFIX})
 AND B.NAME_TYPE  = 'PRI'
 !AND A.GPNZ_TAX_GROSS     >= 0
 !AND A.GPNZ_GROSS_NO_EP   >= 0
 !AND A.GPNZ_PAYE_TAX_AMT  >= 0
 !AND A.GPNZ_CHILD_SUP_AMT >= 0
 !AND A.GPNZ_STUD_LOAN_AMT >= 0

ORDER BY A.EMPLID,CASE A.GPNZ_TAX_SCALE WHEN 'BOR' THEN '2'  WHEN 'CIR' THEN '3' WHEN 'ESS' THEN '4' WHEN 'EBOR' THEN '5' WHEN 'ECIR' THEN '6' ELSE '1' END

end-SELECT

If #Cnt > 0
   do Print-Total-Employee-Line
else
   do reset
end-if

end-procedure ! Process-Main

!************************************
!Get_Pay_Entity_Desc                *
!************************************
begin-Procedure Get_Pay_Entity_Desc

begin-SELECT On-Error=SQL-Error-Handler($Error-Message)
PYENT.DESCR
   let $Pay_Entity_Desc = $Run_Pay_Entity || ' - ' || rtrim(&PYENT.DESCR, ' ')

FROM PS_GP_PYENT PYENT
WHERE PYENT.PAY_ENTITY = $Run_Pay_Entity
end-SELECT

end-Procedure ! Get_Pay_Entity_Desc

!******************************************************************************
! Get-Exception-Code-Desc                                                     *
! Get an Exception Code description from the array.                           *
!******************************************************************************
Begin-Procedure Get-Exception-Code-Desc($Value, :$LongName, :$ShortName)

let #i = 0
while #i < #_ExceptionCodesCount
   if ExceptionCodes.Value(#i) = $Value
      get $junk $LongName $ShortName from ExceptionCodes(#i)
      break
   end-if
   add 1 to #i
end-while

End-Procedure Get-Exception-Code-Desc



!************************************
!Get-Employee-IRD-Number            *
!************************************
begin-procedure Get-Employee-IRD-Number($EmplID, $PERIOD_END_DT, :$IRD_Number)

let $IRD_Number = ''

let $Error-Message = $ReportID || '.SQR, Get-Employee-IRD-Number, PS_GPNZ_EE_IRD_NUM, Select'

begin-SELECT On-Error=SQL-Error-Handler($Error-Message)
A.GPNZ_IRD_NUMBER

 let $IRD_Number = rtrim(&A.GPNZ_IRD_NUMBER, ' ')

FROM PS_GPNZ_EE_IRD_NUM A
WHERE A.EMPLID = $EmplID
AND A.EFFDT = (
    SELECT MAX(ED.EFFDT) FROM PS_GPNZ_EE_IRD_NUM ED
    WHERE ED.EMPLID = A.EMPLID
      AND ED.EFFDT <= {DATEIN-PREFIX}$PERIOD_END_DT{DATEIN-SUFFIX})
end-SELECT

end-procedure ! Get-Employee-IRD-Number


!************************************
!Print-Employee-Line                *
!************************************
begin-Procedure Print-Employee-Line

let #Gross      = floor(#Gross)
let #Not_Liable = floor(#Not_Liable)

let $Gross = rtrim(edit(#Gross, $GROSS_EARNS_FMT),' ')
let $Not_Liable = rtrim(edit(#Not_Liable, $NOT_LIABLE_FMT),' ')
let $PAYE = rtrim(edit(#PAYE, $PAYE_FMT), ' ')
let $Child_Support = rtrim(edit(#Child_Support, $CHILD_SUPPORT_FMT),' ')
let $Student_Loan = rtrim(edit(#Student_Loan, $STUDENT_LOAN_FMT),' ')
let $Kiwi_EE = rtrim(edit(#KiwiEE, $KIWI_EE_FMT),' ')
let $Kiwi_ER = rtrim(edit(#KiwiER, $KIWI_ER_FMT),' ')
let $PG = rtrim(edit(#PG, $PAYROLL_GVNG_FMT),' ')

print $EmplID          (+3,1)

print $Name            (0,+1, 20)
print $Tax_Code        (0,#BodyCol1)
print $IRD_Number      (0,#BodyCol2)
print $Start_Date      (0,#BodyCol3) edit 'DD/MM/YYYY'
print $Finish_Date     (0,#BodyCol4) edit 'DD/MM/YYYY'
print $Gross           (+2,#BodyCol5)
print $Not_Liable      (0,#BodyCol6)
print $PAYE            (0,#BodyCol7)
print $Lump_Sum        (0,#BodyCol8)
print $Child_Support   (0,#BodyCol9)
print $CS_Code         (0,#BodyCol10)
print $Student_Loan    (0,#BodyCol11)
print $Kiwi_EE         (0,#BodyCol12)
print $Kiwi_ER         (0,#BodyCol13)
print $PG              (0,#BodyCol14)

if $Main_Record = {IRD_DETAIL_REC}
   print $ExceptionLong       (0,#BodyCol14)
   let $ExceptionLong = {NULL}
end-if

end-Procedure ! Print-Employee-Line



!************************************
!Print-Total-Employee-Line          *
!************************************
begin-Procedure Print-Total-Employee-Line

let #TGross = floor(#TGross)
let #TNot_Liable = floor(#TNot_Liable)

let $TGross = rtrim(edit(#TGross, $GROSS_EARNS_FMT),' ')
let $TNot_Liable = rtrim(edit(#TNot_Liable, $NOT_LIABLE_FMT),' ')
let $TPAYE = rtrim(edit(#TPAYE, $PAYE_FMT), ' ')
let $TChild_Support = rtrim(edit(#TChild_Support, $CHILD_SUPPORT_FMT),' ')
let $TStudent_Loan = rtrim(edit(#TStudent_Loan, $STUDENT_LOAN_FMT),' ')
let $TKiwi_EE = rtrim(edit(#TKiwiEE, $KIWI_EE_FMT),' ')
let $TKiwi_ER = rtrim(edit(#TKiwiER, $KIWI_ER_FMT),' ')
let $TPG = rtrim(edit(#TPG, $PAYROLL_GVNG_FMT),' ')


let $TotalLabel = 'Totals for ' || $Run_Pay_Entity || ' (excluding -ve values):'
print $TotalLabel                      (+4,1) wrap 30 2 keep-top
print $TGross                          (0,#BodyCol5)
print $TNot_Liable                     (0,#BodyCol6)
print $TPAYE                           (0,#BodyCol7)
print $TChild_Support                  (0,#BodyCol9)
print $TStudent_Loan                   (0,#BodyCol11)
print $TKiwi_EE                        (0,#BodyCol12)
print $TKiwi_ER                        (0,#BodyCol13)
print $TPG                             (0,#BodyCol14)

end-Procedure ! Print-Total-Employee-Line


!************************************************************************
! SQL-Error-Handler                                                     *
! Procedure to display errors                                           *
!************************************************************************
Begin-Procedure SQL-Error-Handler($Error-Message)

show $Error-Message
show $_SQL-Error
do Rollback-Transaction
stop quiet

End-Procedure SQL-Error-Handler

!***********************************************************************
Begin-Procedure Stamp-End-Time

  display ''
  display 'Report Ended: ' noline
  display $AsOfNow

end-procedure Stamp-End-Time

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'tranctrl.sqc'  !Routines to COMMIT and ROLLBACK transactions
#include 'sqrtrans.sqc'  ! Translate SQR strings to given language
#Include 'datemath.sqc'  !Routines for date and time formatting