!************************************
!  CMP004:  Below-Minimum Analysis  *
!************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2015, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2015/10/16:18:00:59                                 !
!       $Release:  HR92                                                !
!           $Bug:  21827016                                            !
!                                                                      *
!***********************************************************************
! Implements row-level security via PS_FAST_SQR_SEC_VW in hrsecty.sqc  *
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
Begin-Setup
#Include 'ptpsl177.sqc'  !Printer and page-size initialization
End-Setup

#define JOBCODE_TBL

#include 'rellang.sqc'   ! Translations File

begin-report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
   goto last2
  end-if

  do Process-Main

  do Reset
  do Stdapi-Term
last2:
end-report

begin-heading 7

  do Get_Field_Information ('CMP004',   'REPORT_TITLE', $REPORTTITLE,   #DW)
  #Include 'stdhtr03.sqc'

  do Get_Field_Information ('CMP004',   'MINIMUM',      $MIN,           #DW)
  do Get_Field_Information ('CMP004',   'AMOUNT',       $AMOUNT,        #DW)
  do Get_Field_Information ('CMP004',   'PERCENT_TYPE1',$PERCENT1,      #DW)
  do Get_Field_Information ('CMP004',   'PERCENT_TYPE2',$PERCENT2,      #DW)
  do Get_Field_Information ('HR',       'BUS_UNIT1X',        $BUS_UNIT1X,         #DW)
  do Get_Field_Information ('HR',       'BUS_UNIT2',        $BUS_UNIT2,         #DW)
  do Get_Field_Information ('HR',       'ANNUAL_RT',    $ANNUAL,        #DW)
  do Get_Field_Information ('HR',       'GRADE1',       $GRADE1,        #DW)
  do Get_Field_Information ('HR',       'GRADE2',       $GRADE2,        #DW)
  do Get_Field_Information ('HR',       'JOBCODE1',     $JOB1,          #DW)
  do Get_Field_Information ('HR',       'JOBCODE2',     $JOB2,          #DW)
  do Get_Field_Information ('HR',       'JOBTITLE',     $JOBTITLE,      #DW)
  do Get_Field_Information ('HR',       'EMPL_NAME',    $NAME,          #DW)
  do Get_Field_Information ('HR',       'DEPTID',       $DEPTID,        #DW)
  do Get_Field_Information ('HR',       'CONV_TO_BASE', $CONVBASE,      #DW)

let $ASTR_MIN = '*' || $MIN
let $ASTR_ANNUAL = '*' || $ANNUAL 
let $ASTR_AMOUNT = '*' || $AMOUNT 

  if #MultiCurr
    print $CONVBASE                                                              (3,65,42)
    print $ReportCurr                                                              (0,108)
    !print '*'                                                                               (7,21)
    !print '*'                                                                               (7,129)
    !print '*'                                                                               (7,155)
  end-if

  PRINT   $BUS_UNIT1X             (6,1,6)
  print $GRADE1                                   (6,8,29)
  print ' '                                        (6,37,1)
  print $JOB1                                     (6,38,132)
  print ' '                                        (6,46,1)
  print ' '                                        (6,80,1)
  print ' '                                        (6,112,1)
  print $PERCENT1                                 (6,171)

  PRINT   $BUS_UNIT2              (7,1,6)
  print $GRADE2                                   (0,8,13)
  print $JOB2                                     (0,38,7)
  print $JOBTITLE                                 (0,46,33)
  print $NAME                                     (0,80,31)
  print $DEPTID                                   (0,112,17)
  print $PERCENT2                                 (0,171)

if #MultiCurr
  print ' '                                        (6,129,1)
  print ' '                                        (6,155,1)
  print $ASTR_MIN                      (7,21,15)
  print $ASTR_ANNUAL               (7,129,25)
  print $ASTR_AMOUNT              (7,155,14)
else
  print ' '                                        (6,130,1)
  print ' '                                        (6,156,1)
  print $MIN                                      (7,22,15)
  print $ANNUAL                                   (7,130,25)
  print $AMOUNT                                   (7,156,14)
end-if

end-heading

begin-procedure Init-Report

  move 'CMP004' to $ReportID
  move $BaseCurr to $ReportCurr
  move $BaseRtType to $ReportRtType
  move 'W' to $ReportMsgType  !Warning

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if


  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
  end-if

do Init_Printer
do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
last1:
end-procedure

begin-procedure Get-Values

   let $language_cd = $prcs_language_cd
   do Get-As-Of-Date

end-procedure

begin-procedure Process-Main

if $language_cd = 'JPN'
          let $qualifier = 'A.NAME_AC'
      else
           let $qualifier = 'A.NAME'
     end-if

  !Setup for row-level security...
  let $_TableAlias = 'B'
  do Security-Param

begin-SELECT

C.BUSINESS_UNIT
C.SAL_ADMIN_PLAN
C.GRADE
C.EFFDT
C.JOBCODE
D.SETID
D.EFFDT
D.DESCR
A.NAME
A.NAME_AC
C.DEPTID
C.CURRENCY_CD &PersCur
C.ANNUAL_RT

  if #MultiCurr and &PersCur <> $ReportCurr
    do ConvertCurrency(&C.Annual_Rt,&PersCur,$ReportCurr,
                       $ReportRtType,&C.EFFDT,#AROut,$ReportMsgType)
  else
    move &C.Annual_Rt to #AROut
  end-if

  if &C.Sal_Admin_Plan <> $SalAdminPlan or &C.Grade <> $Grade
    move &C.Sal_Admin_Plan to $SalAdminPlan
    move &C.Grade          to $Grade
    do Get-Salary-Grade-Data
    if #MultiCurr and &Sal_Grade_Cur <> $ReportCurr And
       Rtrim(&Sal_Grade_Cur, ' ') <> ''
      do ConvertCurrency(&SG.Min_Rt_Annual,&Sal_Grade_Cur,$ReportCurr,
                         $ReportRtType,&C.EFFDT,#MROut,$ReportMsgType)
    else
      move &SG.Min_Rt_Annual to #MROut
    end-if
  end-if
  let $Sal_Grade = &C.Sal_Admin_Plan || '/' || &C.Grade 
  if #ARout < #MRout
    print &C.BUSINESS_UNIT          (+1,1,6)
    print $Sal_Grade                         (,8)  
    do Format-Number(#MRout, $out, '999,999,999,999,999')
    print $out                         (0,17)

    print &C.JobCode                   (0,38,7)
    LET $JOBCODE_TBL-DESCR = RTRIM(&D.DESCR,' ')
    do Get_Related_JOBCODE_TBL(&D.EFFDT,&C.JOBCODE,&D.SETID)
    print $JOBCODE_TBL-DESCR           (0,46,33)
    print &A.Name                      (0,80,31)
    print &C.DeptID                    (0,112,10)

    do Format-Number(#ARout, $out, '999,999,999,999,999.999')
    print $out                         (0,118)

    move #MRout to #field
    subtract #ARout from #field
    do Format-Number(#field, $out, '999,999,999,999,999.999')
    print $out                         (0,145)

    if #MRout <> 0
      divide #MRout into #field
    else
      move 9.9999 to #field
    end-if
    multiply 100 times #field
    do Format-Number(#field, $out, '999.99')
    print $out                         (0,171)
  end-if

FROM  PS_PERSON_NAME A,
      PS_PERSON E,
      PS_EMPLOYMENT B,
      PS_JOB C,
      PS_JOBCODE_TBL D

WHERE C.PER_ORG = 'EMP'
  AND C.HR_STATUS = 'A'                            !HP99999
  AND A.EMPLID = B.EMPLID
  AND E.EMPLID = B.EMPLID
  AND C.EMPLID = B.EMPLID
  AND C.EMPL_RCD = B.EMPL_RCD
  AND C.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = C.EMPLID
         AND H.EMPL_RCD = C.EMPL_RCD
         AND H.EFFDT <= $AsofDate)
  AND C.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = C.EMPLID
         AND I.EMPL_RCD = C.EMPL_RCD
         AND I.EFFDT = C.EFFDT)
  AND D.JOBCODE = C.JOBCODE
  AND D.SETID = C.SETID_JOBCODE
  AND D.EFFDT =
      (SELECT MAX(J.EFFDT)
       FROM PS_JOBCODE_TBL J
       WHERE J.JOBCODE = D.JOBCODE
        AND J.SETID = D.SETID
         AND J.EFFDT <= C.EFFDT)
[$SecurityClauseWithERN]

ORDER BY C.BUSINESS_UNIT, C.SAL_ADMIN_PLAN, C.GRADE DESC, C.JOBCODE ASC, [$qualifier] ASC, C.CURRENCY_CD ASC, C.ANNUAL_RT, C.EFFDT ASC

end-SELECT

end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getslgrd.sqc'  !Get-Salary-Grade-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
