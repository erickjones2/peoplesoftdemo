!*********************************************************
!  PAY301RT:  Retro Pay All Calculated Report            *
!*********************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:15:39:45                                 !
!       $Release:  HR92                                                !
!      $Revision:  102                                                 !
!                                                                      *
!  History: 05/22/01 RLW -- Add Retropay Interest Column               *
!           07/08/08 AM  -- Replace Interest with Amount Override      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-report

    do Init-DateTime
    do Init-Number
    do Get-Current-Datetime
    do Init-Report
    do Process-Main
    do Reset
    do Stdapi-Term

end-report

!***********************************************************************



!******************  H E A D I N G      S E C T I O N  *****************

#include 'setup32.sqc'  !Printer and page-size initialization

begin-heading 10

#include 'stdhdg02.sqc'

    print $Pay301rt_Rqst_Type      (+4,1)
    print $Rqst-Descr               (0,15)
    print $MassID-Title             (0,28)
    print $MassID                   (0,37)

    print $Pay301rt_Pay_End_Dt1    (+2,4)
    print $Pay301rt_Rate_Code       (0,23)
    print $Pay301rt_Orig_Rate_Used1 (0,43)
    print $Pay301rt_Orig_Hr_Amt1    (0,54)
    print $Pay301rt_New_Rate_Used1  (0,68)
    print $Pay301rt_New_Ern_Amt1    (0,78)
    print $Pay301rt_Prior1          (0,91)
    print $Pay301rt_Retropay1       (0,106)
    print $Pay301rt_Override1       (0,122)
    print $Pay301rt_OK_to_Pay1      (0,136)
    print $Pay301rt_Off_Cycle1      (0,148)

    print $Pay301rt_Pay_End_Dt2    (+1,2)
    print $Pay301rt_Earns_Desc2     (0,12)
    print $Pay301rt_Rate_Type       (0,23)
    print $Pay301rt_Hours2          (0,36)
    print $Pay301rt_Orig_Rate_Used2 (0,43)
    print $Pay301rt_Orig_Hr_Amt2    (0,54)
    print $Pay301rt_New_Rate_Used2  (0,65)
    print $Pay301rt_New_Ern_Amt2    (0,75)
    print $Pay301rt_Prior2          (0,89)
    print $Pay301rt_Retropay2       (0,107)
    print $Pay301rt_Override2       (0,121)
    print $Pay301rt_Ovrd2           (0,130)
    print $Pay301rt_OK_to_Pay2      (0,136)
    print $Pay301rt_Dupl2           (0,142)
    print $Pay301rt_Off_Cycle2      (0,148)
    print $Pay301rt_Exp2            (0,155)
    print $Pay301rt_Message2        (0,160)

end-heading

!******************  I N I T I A L I Z A T I O N   *********************

begin-procedure Init-Report

    move 'PAY301RT' to $ReportID

    do Stdapi-Init
    do Get-Report-Language
    move $Pay301rt_ReportTitle to $ReportTitle
    display $ReportTitle

    do Select-Parameters
    do Array-Initialization

    do Build-Where-Clause
    do Build-Order-Clause
    move 'Y' to $Prt-Empl-Heading

    if $SortOption = '3'
        move 5 to #t
    else
        move 4 to #t
    end-if

end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY301RT program ids

  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('PAY301RT', 'REPORTTITLE',     $Pay301rt_ReportTitle,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RQST_TYPE',       $Pay301rt_Rqst_Type,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RQST_TYPE_A',     $Pay301rt_Rqst_Type_A,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RQST_TYPE_J',     $Pay301rt_Rqst_Type_J,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RQST_TYPE_M',     $Pay301rt_Rqst_Type_M,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'MASS_ID',         $Pay301rt_Mass_ID,         #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PAY_END_DT1',     $Pay301rt_Pay_End_Dt1,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_RATE_USED1', $Pay301rt_Orig_Rate_Used1, #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_HR_AMT1',    $Pay301rt_Orig_Hr_Amt1,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_RATE_USED1',  $Pay301rt_New_Rate_Used1,  #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_ERN_AMT1',    $Pay301rt_New_Ern_Amt1,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PRIOR1',          $Pay301rt_Prior1,          #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETROPAY1',       $Pay301rt_Retropay1,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OVERRIDE1',       $Pay301rt_Override1,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OK_TO_PAY1',      $Pay301rt_OK_to_Pay1,      #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OFF_CYCLE1',      $Pay301rt_Off_Cycle1,      #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EARNS_DESC2',     $Pay301rt_Earns_Desc2,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PAY_END_DT2',     $Pay301rt_Pay_End_Dt2,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'HOURS2',          $Pay301rt_Hours2,          #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_RATE_USED2', $Pay301rt_Orig_Rate_Used2, #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_HR_AMT2',    $Pay301rt_Orig_Hr_Amt2,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_RATE_USED2',  $Pay301rt_New_Rate_Used2,  #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_ERN_AMT2',    $Pay301rt_New_Ern_Amt2,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PRIOR2',          $Pay301rt_Prior2,          #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETROPAY2',       $Pay301rt_Retropay2,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OVERRIDE2',       $Pay301rt_Override2,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OVRD2',           $Pay301rt_Ovrd2,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OK_TO_PAY2',      $Pay301rt_OK_to_Pay2,      #dummy_width)
  do Get_Field_Information ('PAY301RT', 'DUPL2',           $Pay301rt_Dupl2,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OFF_CYCLE2',      $Pay301rt_Off_Cycle2,      #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EXP2',            $Pay301rt_Exp2,            #dummy_width)
  do Get_Field_Information ('PAY301RT', 'MESSAGE2',        $Pay301rt_Message2,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'GRAND_TOT',       $Pay301rt_Grand_Tot,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RQST_TOT',        $Pay301rt_Rqst_Tot,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'COMP_TOT',        $Pay301rt_Comp_Tot,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PAYGR_TOT',       $Pay301rt_Paygr_Tot,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EMPL_TOT',        $Pay301rt_Empl_Tot,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETRO_DT',        $Pay301rt_Retro_Dt,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'DASH1',           $Pay301rt_Dash1,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'DASH2',           $Pay301rt_Dash2,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EMPL_ID',         $Pay301rt_Empl_ID,         #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PAYGROUP',        $Pay301rt_Paygroup,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETRO_SEQ',       $Pay301rt_Retro_Seq,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EFFDT',           $Pay301rt_Effdt,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'BEGIN',           $Pay301rt_Begin,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'END',             $Pay301rt_End,             #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RATE_CODE',       $Pay301rt_Rate_Code,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RATE_TYPE',       $Pay301rt_Rate_Type,       #dummy_width)

end-procedure

!**************************************************************
!                                                             *
!  Function:     Array-Initialization                         *
!                                                             *
!  Description:  Loads Amounts into the array to accumulate   *
!                  totals.                                    *
!                                                             *
!**************************************************************

begin-procedure Array-Initialization

   CREATE-ARRAY NAME=Totals                -
                 SIZE=6                     -
                 FIELD=TotalName:char       -
                 FIELD=Total:number:5       -
                 FIELD=startCol:number:5

    put $Pay301rt_Grand_Tot          into Totals(1) TotalName
    put $Pay301rt_Rqst_Tot           into Totals(2) TotalName
    put $Pay301rt_Comp_Tot           into Totals(3) TotalName

    if $SortOption = '3'
       put $Pay301rt_Paygr_Tot       into Totals(4) TotalName
       put $Pay301rt_Empl_Tot        into Totals(5) TotalName
    else
       put $Pay301rt_Empl_Tot        into Totals(4) TotalName
    end-if

    put  49  into Totals(0) startCol(0)
    put  70  into Totals(0) startCol(1)
    put  85  into Totals(0) startCol(2)
    put  100 into Totals(0) startCol(3)
    put  115 into Totals(0) startCol(4)

 end-procedure

!**********************   M A I N   P R O C E S S   ********************

begin-procedure Process-Main

begin-SELECT

A.RETROPAY_RQST_TYPE  () on-break print=never level=2 procedure=Rqst-Type-Change

    if &A.RETROPAY_RQST_TYPE = 'A'
        move $Pay301rt_Rqst_Type_A to $Rqst-Descr
    end-if
    if &A.RETROPAY_RQST_TYPE = 'J'
        move $Pay301rt_Rqst_Type_J to $Rqst-Descr
    end-if
    if &A.RETROPAY_RQST_TYPE = 'M'
        move $Pay301rt_Rqst_Type_M to $Rqst-Descr
        move $Pay301rt_Mass_ID     to $MassID-Title
    end-if

A.MASS_RETRO_RQST_ID  () on-break print=never level=2 procedure=Rqst-Type-Change
B.COMPANY             () on-break print=never level=3 procedure=Company-Change
B.PAYGROUP            () on-break print=never level=4 procedure=PayGroup-Change
B.EMPLID              () on-break print=never level=5 procedure=Emplid-Change
B.EMPL_RCD
C.NAME
C.LAST_NAME
C.FIRST_NAME
B.RETROPAY_EFFDT

    do Format-DateTime(&B.RETROPAY_EFFDT, $out, {DEFMDY}, '', '')
    let $Effdt = $out

B.RETROPAY_SEQ_NO     () on-break print=never level=6 procedure=Retro-Seq-No-Change
A.DUPLICATE_FLAG
A.RETROPAY_PRCS_FLAG
B.EARNS_BEGIN_DT

    do Format-DateTime(&B.EARNS_BEGIN_DT, $out, {DEFMDY}, '', '')
    let $Begindt = $out

B.EARNS_END_DT

    do Format-DateTime(&B.EARNS_END_DT, $out, {DEFMDY}, '', '')
    let $Enddt = $out

B.ERNCD
    do Get-Earnings-Descr

B.PAY_END_DT

    do Format-DateTime(&B.PAY_END_DT, $out, {DEFMDY}, '', '')
    let $PayEnd = $out

B.COMP_RATECD
B.EARNS_HRS
B.EARNS_AMT
B.NEW_EARNS_AMT
B.PRIOR_RETRO_PAID
B.AMOUNT_DIFF
B.EARNS_AMT_OVRD
B.RETROPAY_ERNCD
B.OK_TO_PAY
B.OFF_CYCLE
B.EXCEPTION_FLAG
B.RETRO_SEPCHK
B.PAGE_NUM
B.LINE_NUM

    do Get-Rate-Type
    do Get-Xlat-Desc

B.COMPRATE_USED
B.HOURLY_RT
B.NEW_COMPRATE_USED

    do Print-Details
    do Store-Totals

FROM PS_RETROPAY_RQST A, PS_RETROPAY_EARNS B, PS_PERSON_NAME C

WHERE [$Rqst_Type_Where]
AND   A.RETROPAY_PRCS_FLAG = 'C'
AND   B.RETROPAY_SEQ_NO    = A.RETROPAY_SEQ_NO
AND   B.EMPLID             = A.EMPLID
AND   B.EMPL_RCD           = A.EMPL_RCD
AND   B.RETROPAY_EFFDT     = A.RETROPAY_EFFDT
      [$Company_Where]
      [$Paygroup_Where]
      [$PayEndDt_Where]
AND   B.RETROPAY_LOAD_SW   = 'Y'
AND   C.EMPLID             = B.EMPLID

ORDER BY A.RETROPAY_RQST_TYPE,
         [$Sort_Order]

end-SELECT

move 1 to #changeLevel
move 'Y' to $End
do Print-Totals

end-procedure

!****************  G E T   E A R N I N G S   T B L   *******************

begin-procedure Get-Earnings-Descr

begin-SELECT

C.ERNCD
C.EFFDT
C.DESCRSHORT

        let $Prnt_Descrshort = &C.DESCRSHORT

        if $Curr_language_cd <> $Psoptions_Language_Cd
           do Lang-Record-Details-Earns
        end-if

FROM PS_EARNINGS_TBL C

WHERE C.ERNCD = &B.ERNCD
  AND C.EFFDT =  (SELECT MAX(EFFDT)
                  FROM PS_EARNINGS_TBL
                  WHERE ERNCD   = C.ERNCD)

end-SELECT

end-procedure

!***************  G E T   E A R N I N G S   L A N G   ******************

BEGIN-PROCEDURE Lang-Record-Details-Earns
BEGIN-SELECT
LC.DESCRSHORT

        let $Prnt_Descrshort = Cond(IsBlank(&LC.DESCRSHORT), &C.DESCRSHORT, &LC.DESCRSHORT)

FROM PS_EARNINGS_LANG LC
WHERE LC.ERNCD          = &C.ERNCD
  AND LC.LANGUAGE_CD    = $Curr_language_cd
  AND LC.EFFDT          = (SELECT MAX(EFFDT) FROM PS_EARNINGS_LANG
                                     WHERE ERNCD          = &C.ERNCD
                                         AND LANGUAGE_CD    = $Curr_language_cd
                                         AND EFFDT         <= &C.EFFDT)
END-SELECT
END-PROCEDURE

!********************   G E T   R A T E   T Y P E   ********************

begin-procedure Get-Rate-Type

begin-SELECT

CR.COMP_RATE_TYPE

FROM PS_COMP_RATECD_TBL CR

WHERE CR.COMP_RATECD = &B.COMP_RATECD
  AND CR.EFFDT       = (SELECT MAX (EFFDT)
                        FROM PS_COMP_RATECD_TBL
                        WHERE COMP_RATECD =  &B.COMP_RATECD
                          AND EFFDT       <= &B.EARNS_END_DT)

END-SELECT

   let $Rate_Type = &CR.COMP_RATE_TYPE

end-procedure

!******************   G E T    X L A T    D E S C   ********************

begin-procedure Get-Xlat-Desc

  move 'COMP_RATE_TYPE' to $FieldName
  move $Rate_Type to $FieldValue

  do Read-Translate-Table

  let $RateDescr =  $XLATSHORTNAME

end-procedure

!*************  G E T   R E T R O P A Y    M S G   T B L   *************

begin-procedure Get-Retropay-Msg

   let #Retropay_Msg_Count = 0
   let $Prnt_Descr = ' '

begin-SELECT

D.MSGID

    do Get-Pay-Message-Tbl

FROM PS_RETROPAY_MSG D

WHERE D.RETROPAY_SEQ_NO = &B.RETROPAY_SEQ_NO
  AND D.COMPANY         = &B.COMPANY
  AND D.PAYGROUP        = &B.PAYGROUP
  AND D.PAY_END_DT      = &B.PAY_END_DT
  AND D.OFF_CYCLE       = &B.OFF_CYCLE
  AND D.PAGE_NUM        = &B.PAGE_NUM
  AND D.LINE_NUM        = &B.LINE_NUM
  AND D.SEPCHK          = &B.RETRO_SEPCHK

end-SELECT

end-procedure

!**************  G E T   P A Y   M E S S A G E   T B L  ****************

begin-procedure Get-Pay-Message-Tbl

begin-SELECT

E.DESCR

    let $Prnt_Descr = &E.DESCR

    if $Curr_language_cd <> $Psoptions_Language_Cd
       do Lang-Record-Details-PayMsg
    end-if

    if #Retropay_Msg_Count > 0
        print $PRNT_DESCR              (+1,160,20)
    else
        print $PRNT_DESCR               (0,160,20)
    end-if

    Let #Retropay_Msg_Count = #Retropay_Msg_Count + 1

FROM PS_PAY_MESSAGE_TBL E

WHERE E.MSGID = &D.MSGID

end-SELECT

end-procedure

!**************  G E T   P A Y   M E S S A G E   L A N G  **************

BEGIN-PROCEDURE Lang-Record-Details-PayMsg
BEGIN-SELECT
LE.DESCR

        let $PRNT_DESCR = Cond(IsBlank(&LE.DESCR), &E.DESCR, &LE.DESCR)

FROM PS_PAY_MESSAGE_LNG LE

WHERE LE.MSGID = &D.MSGID
  AND LE.LANGUAGE_CD = $Curr_language_cd

END-SELECT
END-PROCEDURE

!**********************  P R I N T   D E T A I L S  ********************

begin-procedure Print-Details
    move &B.Company            to $Company          !for the Heading
    move &A.MASS_RETRO_RQST_ID to $MassID           !for the Heading

    if $Prt-Empl-Heading = 'Y'
        move &B.EMPLID  to $PriorEmplid      !for the Totals
        print $Pay301rt_Dash1                (+3,118)
        print $Pay301rt_Retro_Dt              (0,136)
        print $Pay301rt_Dash2                 (0,160)

        print $Pay301rt_Empl_Id              (+1,1)
        print &B.EMPLID                       (0,20)
        print &C.NAME                         (0,30,45)
        print $Pay301rt_Paygroup              (0,76)
        print &B.PAYGROUP                     (0,86)
        print $Pay301rt_Retro_Seq             (0,91)
        print &B.RETROPAY_SEQ_NO              (0,103)
        print $Pay301rt_EffDt                 (0,119)
        print $Effdt                          (0,130)
        print $Pay301rt_Begin                 (0,142)
        print $Begindt                        (0,149)
        print $Pay301rt_End                   (0,161)
        print $Enddt                          (0,166)
        move 'N' to $Prt-Empl-Heading
    end-if

        print $PayEnd                         (+2,1)
        print $PRNT_DESCRSHORT                 (0,12)
        print &B.COMP_RATECD                   (0,23,6)
        print &B.EARNS_HRS                     (0,34)   edit b999.99
        print &B.EARNS_AMT                     (0,49)   edit b99,999,999.99
        print &B.NEW_EARNS_AMT                 (0,70)   edit b99,999,999.99
        print &B.PRIOR_RETRO_PAID              (0,85)   edit b99,999,999.99
        print &B.AMOUNT_DIFF                   (0,100)  edit b99,999,999.99
        print &B.EARNS_AMT_OVRD                (0,115)  edit b99,999,999.99

    if &B.EARNS_AMT_OVRD <> 0
        print 'Y'                              (0,132)
    end-if

        print &B.OK_TO_PAY                     (0,138)
        print &A.DUPLICATE_FLAG                (0,144)
        print &B.OFF_CYCLE                     (0,150)
        print &B.EXCEPTION_FLAG                (0,156)

    if &B.EXCEPTION_FLAG = 'Y'
        do Get-Retropay-Msg
    end-if

        print ' '                             (+1,1)
        print $RateDescr                       (0,25,10)

    if &B.COMPRATE_USED <> 0
       print &B.COMPRATE_USED                  (0,33)   edit b999,999,999,999.999999mi
    else
       print &B.HOURLY_RT                      (0,33)   edit b999,999,999,999.999999mi
    end-if

       print &B.NEW_COMPRATE_USED              (0,56)   edit b999,999,999,999.999999mi

end-procedure

!**********************   S T O R E  T O T A L S    ********************

begin-procedure Store-Totals

    move &B.EARNS_AMT          to #Earns
    move &B.NEW_EARNS_AMT      to #Newerns
    move &B.PRIOR_RETRO_PAID   to #Prior
    move &B.AMOUNT_DIFF        to #Diff
    move &B.EARNS_AMT_OVRD     to #Ovrd

    array-add #Earns   to Totals(#t) Total(0)
    array-add #Newerns to Totals(#t) Total(1)
    array-add #Prior   to Totals(#t) Total(2)
    array-add #Diff    to Totals(#t) Total(3)
    array-add #Ovrd    to Totals(#t) Total(4)

end-procedure

!***********************************************************************

begin-procedure Rqst-Type-Change

    move 2 to #changeLevel
    move 'Y' to $Prt-Empl-Heading
    do Print-Totals

end-procedure

begin-procedure Company-Change

    move 3 to #changeLevel
    move 'Y' to $Prt-Empl-Heading
    do Print-Totals

end-procedure

begin-procedure Paygroup-Change

    if $SortOption = '3'
       move 4 to #changeLevel
       move 'Y' to $Prt-Empl-Heading
       do Print-Totals
    else
       do Emplid-Change
    end-if

end-procedure

begin-procedure Emplid-Change

    if $SortOption = '3'
        move 5 to #changeLevel
    else
        move 4 to #changeLevel
    end-if

    move 'Y' to $Prt-Empl-Heading
    do Print-Totals

end-procedure

begin-procedure Retro-Seq-No-Change

    move 'Y' to $Prt-Empl-Heading

end-procedure




!*******************   P R I N T    T O T A L S   **********************

begin-procedure Print-Totals

    move #t to #totalRow
    while #totalRow >= #changeLevel

        move #totalRow to #rollRow
        subtract 1 from #rollRow
        get $TotalName from Totals(#totalRow) TotalName
        print $TotalName (+3,10)

        if $TotalName = $Pay301rt_Empl_Tot
           let $var_emplid    = rtrim($PriorEmplid,' ')
           let $TotEmplid = $var_emplid || ':'
           print $TotEmplid (0,29)
        end-if

        move 0 to #i

        while #i <= 4
           get #total from Totals(#totalRow) total(#i)
           get #startCol from Totals(0) startCol(#i)
           do Format-Number(#total, $out, '999,999,999.99mi')
           print $out (0,#startCol)
           array-add #total to Totals(#rollRow) total(#i)
           put 0 into Totals(#totalRow) total(#i)
           add 1 to #i
        end-while

     subtract 1 from #totalRow

    end-while

    if #changeLevel = 2       !skip to new page on change in Request Type
       or #changeLevel = 3    !skip to new page on change in Company
        new-page
    end-if

    if $End = 'Y'
        do Reset
    end-if

end-procedure

!**************  B U I L D   W H E R E   C L A U S E  ******************

begin-procedure Build-Where-Clause


  let $W1  = 'A.RETROPAY_RQST_TYPE = '''
  let $W2  = $Rqst-TypeA
  let $W3  = $Rqst-TypeJ
  let $W4  = $Rqst-TypeM
  let $W5  = ''' AND A.MASS_RETRO_RQST_ID = '''
  let $W6  = $Mass_ID
  let $W7  = ''''
  let $W8  = '(A.RETROPAY_RQST_TYPE = '''
  let $W9  = ''' OR A.RETROPAY_RQST_TYPE = '''
  let $W10 = ''')'
  let $W11 =  'AND B.COMPANY = '''
  let $W12 = $PromptCompany
  let $W13 = 'AND B.PAYGROUP = '''
  let $W14 = $PromptPaygroup
  let $W15 = 'AND B.PAY_END_DT = '''
  let $W16 = $PromptPayEndDt

  if $RqstType = 'A'
     let $Rqst_Type_Where = $W1 || $W2 ||$W7
  end-if

  if $RqstType = 'J'
     let $Rqst_Type_Where = $W1 || $W3 || $W7
  end-if

  if $RqstType = 'M'
     let $Rqst_Type_Where = $W1 || $W4 || $W5 || $W6 || $W7
  end-if

  if $RqstType = 'Z'
     let $Rqst_Type_Where = $W8 || $W2 || $W9 || $W3 || $W9 || $W4 || $W10
  end-if

  if $PromptCompany = ''
      let $Company_Where = ''
  else
      let $Company_Where = $W11 || $W12 || $W7
  end-if

  if $PromptPaygroup = ''
     let $Paygroup_Where = ''
  else
     let $Paygroup_Where = $W13 || $W14 || $W7
  end-if

  if $PromptPayEndDt = ''
     let $PayEndDt_Where = ''
  else
     let $PayEndDt_Where = $W15 || $W16 || $W7
  end-if

end-procedure

!**************  B U I L D   O R D E R   C L A U S E  ******************

begin-procedure Build-Order-Clause

  let $O1  = 'B.COMPANY, A.MASS_RETRO_RQST_ID, B.EMPLID, B.EMPL_RCD, B.RETROPAY_EFFDT'
  let $O2  = 'B.COMPANY, A.MASS_RETRO_RQST_ID, C.LAST_NAME, C.FIRST_NAME, B.EMPLID, B.EMPL_RCD, B.RETROPAY_EFFDT'
  let $O3  = 'B.COMPANY, A.MASS_RETRO_RQST_ID, B.PAYGROUP, B.EMPLID, B.EMPL_RCD, B.RETROPAY_EFFDT'
  let $O4  = 'B.COMPANY, A.MASS_RETRO_RQST_ID, B.RETROPAY_SEQ_NO, B.EMPLID, B.EMPL_RCD'

  if $SortOption = '1'
     let $Sort_Order = $O1
  end-if

  if $SortOption = '2'
     let $Sort_Order = $O2
  end-if

  if $SortOption = '3'
     let $Sort_Order = $O3
  end-if

  if $SortOption = '4'
     let $Sort_Order = $O4
  end-if

end-procedure

!***********************************************************************

#Include 'payrtrpt.sqc'  !Custom Run Control Parameters
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Routines to retrieve XLATTABLE values
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
