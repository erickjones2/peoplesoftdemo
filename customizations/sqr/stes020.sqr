!-----------------------------------------------------------------------
!  STES020:  Dispositions to Payroll
!-----------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:51:22                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!-----------------------------------------------------------------------
! Program Descr:  Summary report of Dispositions Sent to Payroll
!-----------------------------------------------------------------------
! Prompts:  Process Group
!-----------------------------------------------------------------------

#include 'setenv.sqc'

!-----------------------------------------------------------------------
Begin-Setup

 #include 'ptpsl177.sqc'               ! Landscape 177 Columns

End-Setup

!-----------------------------------------------------------------------
Begin-Program
!-----------------------------------------------------------------------

  do Init-Report
  do Expand-Process-Group        !stprcgrp.sqc
  do Process-Main
  do Reset
  do Successful-EOJ

  let $CurrentTime = datenow()
  show 'Process ended at:   ' $SysDateTime      !standard output info to sqr.log

End-Program

!-----------------------------------------------------------------------
! Print Report Header
!-----------------------------------------------------------------------

Begin-Heading 09

#include 'stdhdg01.sqc'

  print $StockIdLbl                                        (03,001,008)
  print ':'                                                (  ,   ,001)
  print $RC_Stock_ID                                       (  ,018,010)

  print $FromLbl                                           (  ,073,004)
  print ':'                                                (  ,   ,001)
  print $FromDate                                          (  , +1,010)

  print $ThruLbl                                           (  , +2,004)
  print ':'                                                (  ,   ,001)
  print $ThruDate                                          (  , +1,010)

  print $StockPlanLbl                                      (04,001,010)
  print ':'                                                (  ,   ,001)
  print $RC_Stock_Plan                                     (  ,018,010)

  print $PrcsGrpLbl                                        (05,001,013)
  print ':'                                                (  ,   ,001)
  print $PrcsGrp                                           (  ,018,010)

  print $ReprintLbl                                        (06,001,007)
  print ':'                                                (  ,   ,001)
  print $RC_Reprint                                        (  ,018,001)

  print $DisposnLbl                                        (08,041,011)
  print $PurchaseLbl                                       (  ,055,008)
  print $PurchaseLbl                                       (  ,077,008)
  print $DisposnLbl                                        (  ,087,011)

  print $NameLbl                                           (09,001,004)
  print $EmplidLbl                                         (  ,032,006)
  print $NumberLbl                                         (  ,046,006)
  print $DateLbl                                           (  ,055,004)
  print $PriceLbl                                          (  ,080,005)
  print $DateLbl                                           (  ,087,004)
  print $DispPriceLbl                                      (  ,101,017)
  print $ShareDispLbl                                      (  ,127,015)
  print $OrdIncLbl                                         (  ,151,015)
  print '-'                                                (10,001,165) fill

End-Heading

!-----------------------------------------------------------------------
! Function:    Init-Report
! Description: Prompt for run-time parameters
!-----------------------------------------------------------------------
Begin-Procedure Init-Report

  let $ReportID      = 'STES020'
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  do Get-Report-Language
  let $AsOfDate = $AsOfToday

  if $prcs_process_instance = ''
  else
    do Get-SQR-Parms                   ! Get Run Control Values
  end-if

  let $RC_Reprint     = rtrim($RC_Reprint_Prompt,' ')

  show 'Reprint:       ' $RC_Reprint_Prompt
  show 'Stock ID:      ' $RC_Stock_ID
  show 'From Date:     ' $RC_FromDate
  show 'Thru Date:     ' $RC_ThruDate

  if $RC_Stock_Plan <> ''
    show 'Stock Plan:    ' $RC_Stock_Plan
  end-if

  if $RC_PrcsGrp <> ''
    show 'Prcs Group:    ' $RC_PrcsGrp
  end-if

  if $RC_Emplid <> ''
    show 'Emplid:        ' $RC_Emplid
  end-if

  do Format-DateTime ($RC_FromDate, $FromDate, {DEFDATE}, '', '')
  do Format-DateTime ($RC_ThruDate, $ThruDate, {DEFDATE}, '', '')

  show ' '
  let $CurrentTime = datenow()
  show 'Process started at: ' $SysDateTime      !standard output info to sqr.log

  do Build-Where-Clause

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Report-Translation
!-----------------------------------------------------------------------

  do Init_Report_Translation ('STOCK', $language_cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK',   'STOCK_ID',           $StockIdLbl,     #DW)
  do Get_Field_Information ('STOCK',   'GRAND_TOTAL',        $GrndTotLbl,     #DW)
  do Get_Field_Information ('STOCK',   'STOCK_PLAN',         $StockPlanLbl,   #DW)
  do Get_Field_Information ('STOCK',   'NUMBER',             $NumberLbl,      #DW)
  do Get_Field_Information ('STOCK',   'PROCESS_GRP',        $PrcsGrpLbl,     #DW)
  do Get_Field_Information ('STOCK',   'NAME',               $NameLbl,        #DW)
  do Get_Field_Information ('STOCK',   'DATE',               $DateLbl,        #DW)
  do Get_Field_Information ('STOCK',   'DISPOSITION',        $DisposnLbl,     #DW)
  do Get_Field_Information ('STOCK',   'EMPLID',             $EmplidLbl,      #DW)
  do Get_Field_Information ('STOCK',   'SHARES_SOLD',        $SharesSoldLbl,  #DW)
  do Get_Field_Information ('STOCK',   'ST_COST_SALE_PRICE', $SalePriceLbl,   #DW)
  do Get_Field_Information ('STOCK',   'TOTAL',              $TotalLbl,       #DW)
  do Get_Field_Information ('STOCK',   'PURCHASE',           $PurchaseLbl,    #DW)
  do Get_Field_Information ('STOCK',   'FROM',               $FromLbl,        #DW)
  do Get_Field_Information ('STOCK',   'THRU',               $ThruLbl,        #DW)
  do Get_Field_Information ('STOCK',   'DISPOSITION_PRICE',  $DispPriceLbl,   #DW)
  do Get_Field_Information ('STOCK',   'DISPOSITION_DT',     $DispDtLbl,      #DW)
  do Get_Field_Information ('STOCK',   'SHARES_DISPOSED',    $ShareDispLbl,   #DW)
  do Get_Field_Information ('STOCK',   'ST_ORD_INCOME',      $OrdIncLbl,      #DW)
  do Get_Field_Information ('STOCK',   'PRICE',              $PriceLbl,       #DW)

  do Get_Field_Information ('STES020', 'REPORT_TITLE',       $ReportTitle,    #DW)
  do Get_Field_Information ('STES020', 'REPRINT',            $ReprintLbl,     #DW)

End-Procedure

!-----------------------------------------------------------------------
! Section: Build-Where-Clause
! Descr:   Construct portions of where clause, to be used in the main select,
!          based on report parameters choosen.
!-----------------------------------------------------------------------
Begin-Procedure Build-Where-Clause

  let $SQLQuote      = ''''
  let $WhereReprint  = ''
  let $WhereNew      = ''

  if $RC_Stock_Plan <> ''
    let $WhereStockPlan  = ' and B.STOCK_PLAN  = '   || $SQLQuote || $RC_Stock_Plan || $SQLQuote
  else
    let $WhereStockPlan  = ''
  end-if

  if $RC_Emplid <> ''
    let $WhereEmplid     = ' and B.EMPLID = '        || $SQLQuote || $RC_Emplid     || $SQLQuote
  else
    let $WhereEmplid     = ''
  end-if

  if $RC_Reprint = 'Y'
    let $OrderBy = ' order by 2,3,7 '
    if $RC_PrcsGrp <> '' 
      let $WherePrcsGrp    = ' and B.PROCESS_GRP2  = '  || $SQLQuote || $RC_PrcsGrp    || $SQLQuote
    else
      let $WherePrcsGrp    = ''
    end-if
    if $RC_FromDate <> ''
       let $WhereFromDate   = ' and B.ST_PR_DT  >= '    || $SQLQuote || $RC_FromDate   || $SQLQuote
    else
       let $WhereFromDate   = ''
    end-if
    if $RC_ThruDate <> ''
       let $WhereThruDate   = ' and B.ST_PR_DT  <= '    || $SQLQuote || $RC_ThruDate   || $SQLQuote
    else
       let $WhereThruDate   = ''
    end-if
    let $WhereReprint       = ' and B.ST_PR_DT IS NOT NULL' ||
                              ' and B.ST_SEND_SRC = '       || $SQLQuote || 'R' || $SQLQuote
  else
    let $OrderBy = ' order by 1,3,7 '
    if $RC_PrcsGrp <> '' 
      let $WherePrcsGrp    = ' and H.PROCESS_GROUP  = '  || $SQLQuote || $RC_PrcsGrp    || $SQLQuote
    else
      let $WherePrcsGrp    = ''
    end-if
    if $RC_FromDate <> ''
       let $WhereFromDate   = ' and B.DISPOSITION_DT  >= ' || $SQLQuote || $RC_FromDate || $SQLQuote
    else
       let $WhereFromDate   = ''
    end-if
    if $RC_ThruDate <> ''
       let $WhereThruDate   = ' and B.DISPOSITION_DT  <= ' || $SQLQuote || $RC_ThruDate || $SQLQuote
    else
       let $WhereThruDate   = ''
    end-if
    let $WhereNew           = ' and B.ST_PR_DT IS NULL'     ||
                              ' and (D.PAY_SYSTEM_FLG <> '  || $SQLQuote || 'NA'  || $SQLQuote ||
                              ' or  (D.PAY_SYSTEM_FLG = '   || $SQLQuote || 'NA'  || $SQLQuote ||
                              ' and G.COUNTRY <> '          || $SQLQuote || 'USA' || $SQLQuote || '))'
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Main
! Description: This is the main report procedure.  Selects and prints
!              share disposition by employee.
!-----------------------------------------------------------------------
Begin-Procedure Process-Main

  do Define-PrimJob-Clause('D',$AsOfToday, $PRIM_JOB_CLAUSE)

Begin-Select

H.PROCESS_GROUP
B.PROCESS_GRP2                     () on-break print=never level=1 procedure=PrcsGrp-Change
E.NAME
B.EMPLID
B.DISPOSITION_NBR
B.PERIOD_END_DT
B.DISPOSITION_DT
B.DISPOSITION_PRICE
B.SHARES_DISPOSED
B.ST_ORD_INCOME
C.PURCHASE_PRICE
C.OFFERING_ID
C.STOCK_PLAN
C.PROCESS_GROUP

  if $RC_Reprint = 'N'
    let $PrcsGrp    = rtrim(&h.process_group,' ')
  else
    let $PrcsGrp    = rtrim(&b.process_grp2,' ')
  end-if

  let $Print      = 'Y'
  let $Name           = rtrim(&e.name,' ')
  let $Emplid         = rtrim(&b.emplid,' ')
  let #DispositionNbr = &b.disposition_nbr
  let $PeriodEndDt    = rtrim(&b.period_end_dt,' ')
  let #PurchasePrice  = &c.purchase_price
  let $DispositionDt  = rtrim(&b.disposition_dt,' ')
  let #DispositionPrc = &b.disposition_price
  let #SharesDisposed = &b.shares_disposed
  let #OrdIncome      = &b.st_ord_income
  let #ShrTotal = #ShrTotal + #SharesDisposed
  let #OrdTotal = #OrdTotal + #OrdIncome
  do Print-Detail

  let #PrcsShares     = #PrcsShares     + #SharesDisposed
  let #PrcsOrdIncome  = #PrcsOrdIncome  + #OrdIncome

  if $RC_Reprint = 'N'
    do Update-Espp-Disposn
  end-if

 FROM PS_ST_ESPP_DISPOSN B,
      PS_ST_ESPP_PURCH   C,
      PS_JOB             D,
      PS_ST_PERSON_NAME  E,
      PS_PAYGROUP_TBL    G,
      PS_R_PRCS_GRP_DTL  H
where B.STOCK_ID           = $RC_Stock_Id
  and B.STOCK_PLAN_TYPE    = 'E'
  and B.STOCK_ID           = C.STOCK_ID
  and B.STOCK_PLAN_TYPE    = C.STOCK_PLAN_TYPE
  and B.STOCK_PLAN         = C.STOCK_PLAN
  and B.OFFERING_ID        = C.OFFERING_ID
  and B.PERIOD_END_DT      = C.PERIOD_END_DT
  and B.PROCESS_GROUP      = C.PROCESS_GROUP
  and B.EMPLID             = C.EMPLID
  and B.DISPOSITION_STATUS = 'C'
  and B.DISQUAL_DISPOSN    = 'Y'
  and B.ST_ORD_INCOME      > 0
  and B.EMPLID             = D.EMPLID
  and D.EMPL_RCD           = [$PRIM_JOB_CLAUSE]
  and D.EFFDT              = (SELECT MAX(EFFDT)
                                FROM PS_JOB
                               WHERE EMPLID    = D.EMPLID
                                 AND EMPL_RCD  = D.EMPL_RCD
                                 AND EFFDT    <= B.DISPOSITION_DT)
  and D.EFFSEQ             = (SELECT MAX(EFFSEQ)
                                FROM PS_JOB
                               WHERE EMPLID    = D.EMPLID
                                 AND EMPL_RCD  = D.EMPL_RCD
                                 AND EFFDT     = D.EFFDT)
  and B.EMPLID             = E.EMPLID
  and D.COMPANY            = G.COMPANY
  and D.PAYGROUP           = G.PAYGROUP
  and G.EFFDT              = (SELECT MAX(EFFDT)
                                FROM PS_PAYGROUP_TBL
                               WHERE COMPANY   = G.COMPANY
                                 AND PAYGROUP  = G.PAYGROUP
                                 AND EFFDT    <= B.DISPOSITION_DT)
  and D.COMPANY            = H.COMPANY
  and D.PAYGROUP           = H.PAYGROUP
  and H.REPORT_ID          = $ReportID
  [$WhereFromDate]
  [$WhereThruDate]
  [$WhereStockPlan]
  [$WhereEmplid]
  [$WherePrcsGrp]
  [$WhereReprint]
  [$WhereNew]
  [$OrderBy]

End-Select

  if $Print = 'Y'
    do PrcsGrp-Change
    do Print-Totals
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Detail
! Descr:   Prints the report
!-----------------------------------------------------------------------
Begin-Procedure Print-Detail

  print $Name                                              (+1,001,030)
  print $Emplid                                            (  ,032,011)
  print #DispositionNbr                                    (  ,045,007) edit 9999999
  do Format-DateTime ($PeriodEndDt,$out, {DEFDATE}, '', '')
  print $out                                               (  ,055,010)
  print #PurchasePrice                                     (  ,067,018) edit 999,999,999.999999
  do Format-DateTime ($DispositionDt,$out, {DEFDATE}, '', '')
  print $out                                               (  ,087,010)
  print #DispositionPrc                                    (  ,100,018) edit 999,999,999.999999
  print #SharesDisposed                                    (  ,120,022) edit 999,999,999,999.999999
  print #OrdIncome                                         (  ,144,022) edit 999,999,999,999.999999

End-Procedure

!-----------------------------------------------------------------------
! Section: Update-Espp-Disposn
! Descr:   Updates the sent to payroll date to the date the report is run
!-----------------------------------------------------------------------
Begin-Procedure Update-Espp-Disposn

 let $Procedure = 'Update-Espp-Disposn'
 let $SQL-Statement = 'Procedure: ' || $Procedure
  
Begin-Sql                           on-error = SQL-Error
update PS_ST_ESPP_DISPOSN
   set ST_PR_DT      = $AsOfToday,
       ST_SEND_SRC   = 'R',
       PROCESS_GRP2  = $PrcsGrp
 where STOCK_ID        = $RC_Stock_ID
   and STOCK_PLAN_TYPE = 'E'
   and STOCK_PLAN      = &c.stock_plan
   and EMPLID          = $Emplid
   and OFFERING_ID     = &c.offering_id
   and PERIOD_END_DT   = $PeriodEndDt
   and PROCESS_GROUP   = &c.process_group
End-Sql

End-Procedure

!-----------------------------------------------------------------------
! Procedure: PrcsGrp-Change
! Descr:     Prints Totals for each process group and advances a new page
!-----------------------------------------------------------------------
Begin-Procedure PrcsGrp-Change

  next-listing need=4
  let $ChangeLbl = $PrcsGrpLbl || ' ' || $TotalLbl || ':'
  print '-'                                                (+2,001,165) fill
  print $ChangeLbl                                         (+1,032,   )
  print #PrcsShares                                        (  ,120,022) edit 999,999,999,999.999999
  print #PrcsOrdIncome                                     (  ,144,022) edit 999,999,999,999.999999
  print '-'                                                (+1,001,165) fill
  let #TotalShares    = #TotalShares     + #PrcsShares
  let #TotalOrdIncome = #TotalOrdIncome  + #PrcsOrdIncome
  let #PrcsShares    = 0
  let #PrcsOrdIncome = 0
  new-page

End-Procedure

!-----------------------------------------------------------------------
! Print Totals
!-----------------------------------------------------------------------
Begin-Procedure Print-Totals

  next-listing need=4
  print '-'                                                (+2,001,165) fill
  print $GrndTotLbl                                        (+1,032,   )
  print ':'                                                (  ,   ,001)
  print #TotalShares                                       (  ,120,022) edit 999,999,999,999.999999
  print #TotalOrdIncome                                    (  ,144,022) edit 999,999,999,999.999999
  print '-'                                                (+1,001,165) fill

End-Procedure

!-----------------------------------------------------------------------
! SQC Files for called procedures
!-----------------------------------------------------------------------
#include 'prcsapi.sqc'   !Update Process Request API
#include 'prcsdef.sqc'   !Update Process Request variable declare
#include 'askftd.sqc'    !Routines to accept from - thru dates
#include 'eoj.sqc'       !End of Job procedure
#include 'sqrtrans.sqc'  !Access Strings Table
#include 'getrplng.sqc'  !Gets the report language
#include 'reset.sqc'     !End of Program
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date arithmetic
#include 'strunctl.sqc'  !Stock Admin controls
#include 'stprcgrp.sqc'  !Creates temp table with all combos for process groups
#include 'getprimj.sqc'  !Get primary job
