!***********************************************************************
!  GPMYSO02.SQR:  SOCSO Form 2: Employee Registration Form             *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2014, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                                                                                *
!                                                                                                                                *
!          $Date:  2014/05/07:01:23:49                                 *
!       $Release:  HR92                                                *
!      $Revision:  103                                                 *
!                                                                                                                                *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup
  page-size 60 200
    declare printer
      type          = HPLASERJET
      orientation   = landscape
      lines-inch    = 8
      chars-inch    = 16.6
      top-margin    = 0.30
      left-margin   = 0.25
      font          = 5
      point-size    = 7
      lines-inch    = 8
end-setup




begin-report

  do Init-Processing
  Move &SysDateTime to $AsOfToday


end-report


begin-procedure Init-Processing

        do Init-Datetime
        do Get-Current-Datetime
        do Define-Prcs-Vars
        do Init-Number
        do Init-Report
        do Stdapi-Term
end-procedure ! Init-Processing


!****************************
!Procedure : Init-Report    *
!****************************

begin-procedure Init-Report

do Stdapi-Init
!do Get-Language-Codes   ! get the current language in which user wants to print the report
do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
do Append_Report_Translation ('GPMYSO02')       ! from settrans.sqc
do Get_Field_Information ('GPMYSO02', 'TITLE', $ReportTitle, #DW)! from settrans.sqc returning the actual text based upon the language selected
do Get_Field_Information ('GPMYSO02', 'TITLE1', $ReportTitle1, #DW)
do Get_Field_Information ('GPMYSO02', 'EMPLOYER''S CODE', $EMPLRSOCSOCODE, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE2', $ReportTitle2, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE3', $ReportTitle3, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE4', $ReportTitle4, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE5', $ReportTitle5, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE6', $ReportTitle6, #DW)
do Get_Field_Information ('GPMYSO02', 'EE_IC_NBR', $EE_IC_NBR, #DW)
do Get_Field_Information ('GPMYSO02', 'EMPLYEE_NAME', $EE_NAME, #DW)
do Get_Field_Information ('GPMYSO02', 'EMPLYEE_NAME1', $EE_NAME1, #DW)
do Get_Field_Information ('GPMYSO02', 'BIRTHDATE', $EE_BIRTHDATE, #DW)
do Get_Field_Information ('GPMYSO02', 'SEX', $EE_SEX, #DW)
do Get_Field_Information ('GPMYSO02', 'START_DATE', $EE_START_DATE, #DW)
do Get_Field_Information ('GPMYSO02', 'KETURUNAN', $ETHNIC_GRP, #DW)
do Get_Field_Information ('GPMYSO02', 'REFERENCE_NUMBER', $EE_REFERENCE_NUMBER, #DW)
do Get_Field_Information ('GPMYSO02', 'POSITION', $EE_POSITION, #DW)
do Get_Field_Information ('GPMYSO02', 'BAGI', $BAGI, #DW)
do Get_Field_Information ('GPMYSO02', 'OLD_AND_NEW', $OLD_AND_NEW, #DW)
do Get_Field_Information ('GPMYSO02', 'OLD_AND_NEW1', $OLD_AND_NEW1, #DW)
do Get_Field_Information ('GPMYSO02', 'TINA', $TINA, #DW)
do Get_Field_Information ('GPMYSO02', 'EMPLOYE', $EMPLOYE, #DW)
do Get_Field_Information ('GPMYSO02', 'EE_SOCSO', $EE_SOCSO, #DW)
do Get_Field_Information ('GPMYSO02', 'KEGUNAAN', $KEGUNAAN, #DW)
do Get_Field_Information ('GPMYSO02', 'RASMI', $RASMI, #DW)
do Get_Field_Information ('GPMYSO02', 'REMARKS', $REMARKS, #DW)
do Get_Field_Information ('GPMYSO02', 'REMARKS3', $REMARKS3, #DW)
do Get_Field_Information ('GPMYSO02', 'DATE', $DATE, #DW)
do Get_Field_Information ('GPMYSO02', 'ER_SIGNATURE', $ER_SIGNATURE, #DW)
do Get_Field_Information ('GPMYSO02', 'ER_SIGNATURE_SUB', $ER_SIGNATURE_SUB, #DW)
do Get_Field_Information ('GPMYSO02', 'ER_NAME_ADDRESS', $ER_NAME_ADDRESS, #DW)
do Get_Field_Information ('GPMYSO02', 'NAME', $NAME1, #DW)
do Get_Field_Information ('GPMYSO02', 'PHONE', $PHONE, #DW)
do Get_Field_Information ('GPMYSO02', 'COP RASMI PERUSAHA', $COP_RASMI_PERUSAHA, #DW)
do Get_Field_Information ('GPMYSO02', 'LAMA', $LAMA, #DW)
do Get_Field_Information ('GPMYSO02', 'PERKESO', $PERKESO, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE7', $REMARKS1, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE8', $ReportTitle8, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE9', $ReportTitle15, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE10', $ReportTitle16, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE11', $H_B_T, #DW)
do Get_Field_Information ('GPMYSO02', 'TITLE12', $L_P, #DW)

let $EMPLRSOCSOCODE_1 = '                             NO KOD MAJIKAN/MyCoID                              '
let $EE_START_DATE_1 = 'Tarikh Mula Kerja'
let $EE_IC_NBR = 'No. Kad Pengenalan'
let $ETHNIC_GRP = 'Bangsa'
let $Heading2 = ' B. PENGESAHAN MAJIKAN / WAKIL MAJIKAN                                   '
let $Heading3 = 'Saya mengesahkan bahawa tiada seorang pun pekerja perusahaan ini sebagaimana yang ditakrifkan dalam seksyen 2(5) Akta telah tertinggal daripada senarai di atas.'
let $DATE = 'Tarikh:'
let $ER_SIGNATURE = 'Tandatangan:'
let $NAME1 = 'Nama Majikan/Nama Wakil Majikan:'
let $ER_NAME_ADDRESS = 'Nama Perusahaan:'
let $KPPN_No = 'No. KPPN:'
let $Jawatan = 'Jawatan:'
let $telefon = 'No. Telefon Pejabat/ No. Telefon Bimbit:'
let $fax = 'No. Faks:'
let $email = 'E-mel:'
let $bottomtext = 'Tandatangan tidak diperlukan sekiranya borang ini dihantar melalui medium elektronik tertakluk kepada pengesahan oleh PERKESO'
let $ReportTitle4 = '(Peraturan 10, 12 dan 12A)'
let $Borang = ' BORANG 2 - PENDAFTARAN PEKERJA                                           '
let $A_heading = ' A. BUTIRAN PEKERJA                                                    '
let $BAGI = 'Sila tandakan'
let $KEGUNAAN = '(/) pekerja yang'
let $PERKESO = 'bergaji melebihi'
let $RM = 'RM3000.00 sebulan'
let $Hari = 'Hari'
let $Bulan = 'Bulan'
let $Tahun = 'Tahun'
let $EE_SEX = 'Jantina'
let $EE_NAME1 = '(seperti dalam Kad Pengenalan)'
let $EE_NAME = $EE_NAME || ' ' || $EE_NAME1
let $Tarikh_Lahir = 'Tarikh Lahir'
let $Jenis_Kad = 'Jenis Kad'
let $Pengenalan = 'Pengenalan'
let $LP = '(L/P)'


move 'GPMYSO02' to $ReportID
do Select-Parameters
do Build-Where

do Get-SOCSO-NBR
end-procedure


!****************************
!Procedure :Select-Parameters
!****************************



begin-procedure Select-Parameters
begin-select

RC.GPMY_ORG_LINK_OPTN,
RC.ORG_LINK_UNIT,
RC.BUSINESS_UNIT,
RC.GPMY_SOCSO_NBR,
RC.GPMY_FROM_DT,
RC.GPMY_TO_DT

FROM  PS_GPMY_RPT_RC  RC
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select

  let $ORG_LINK_OPTN     = &RC.GPMY_ORG_LINK_OPTN
  LET $BUSINESS_UNIT     = &RC.BUSINESS_UNIT
  let $ORG_LINK_UNIT     = &RC.ORG_LINK_UNIT
  let $SOC_NBR           = &RC.GPMY_SOCSO_NBR
  let $FROMDATE          = &RC.GPMY_FROM_DT
  let $TODATE            = &RC.GPMY_TO_DT

end-procedure



!****************************
!Procedure : Build-Where    *
!****************************
begin-procedure Build-Where

Let $WHERE = ''

if ($ORG_LINK_OPTN='CO')OR ($ORG_LINK_OPTN='PG')OR ($ORG_LINK_OPTN='ET')
     if isnull(RTRIM($ORG_LINK_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($SOC_NBR,' '))
               LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
           ELSE
              LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_SOCSO_NBR='|| '''' || RTRIM($SOC_NBR,' ') || ''''
           end-if
     end-if

 end-if

if ($ORG_LINK_OPTN='LO')OR ($ORG_LINK_OPTN='DE')
     if isnull(RTRIM($BUSINESS_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($ORG_LINK_UNIT,' '))
               LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''
           ELSE
                if isnull(RTRIM($SOC_NBR,' '))
                      LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
                ELSE
                     LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ')
                     LET $WHERE = $WHERE || ''''||'AND B.GPMY_SOCSO_NBR='|| '''' || RTRIM($SOC_NBR,' ') || ''''
                END-IF
           end-if
     end-if

 end-if

end-procedure !Build-Where




!************************************
!Procedure : Get-SOCSO-NBR   *
!************************************
begin-procedure Get-SOCSO-NBR

begin-SELECT
DISTINCT(B.GPMY_SOCSO_NBR )  &CompSocSo
        do Get-company-details
FROM PS_GPMY_SOC_ORG B,PS_GPMY_SOC_ORG_DT C
WHERE B.EFFDT=C.EFFDT
AND C.GPMY_ORG_LINK_OPTN= $ORG_LINK_OPTN
[$WHERE]
end-SELECT

end-procedure

!*********************************************************************************
!  Procedure: Get-ManagerLegal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-ManagerLegal-Name

begin-SELECT
NAMESMn.NAME

    let $MnLegalName = &NAMESMn.NAME

FROM PS_NAMES NAMESMn
WHERE NAMESMn.EMPLID =$ResponcibleId
AND NAMESMn.EFFDT=(SELECT MAX(NAMES11.EFFDT) FROM PS_NAMES NAMES11
                                          WHERE NAMES11.EMPLID=NAMESMn.EMPLID
                                            AND NAMES11.NAME_TYPE = NAMESMn.NAME_TYPE
                                            AND NAMES11.EFFDT <= $TODATE)


AND NAMESMn.NAME_TYPE = 'LEG'
end-SELECT

end-procedure

!************************************
!Procedure : Get-company-details    *
!************************************
begin-procedure Get-company-details

begin-SELECT
L.GPMY_REGISTERED_NM
L.COUNTRY
L.ADDRESS1
L.ADDRESS2
L.ADDRESS3
L.ADDRESS4
L.CITY
L.STATE
L.POSTAL
L.PHONE
L.NAME
L.COUNTY
L.FAX
L.JOBTITLE
L.NATIONAL_ID
L.GPMY_RESPONSIBLEID !





        let $MnLegalName = '' !
        let $ResponcibleId = rtrim(&L.GPMY_RESPONSIBLEID, ' ')
        do Get-ManagerLegal-Name      !


        IF $MnLegalName = '' or $MnLegalName = ' '
       move &L.NAME to $NameMn
      ELSE
       move $MnLegalName to $NameMn
      END-IF

  let $InCharge = Upper($NameMn)
  Let $InCharge = replace($InCharge,',',' ')
  let $COUNTRY  = &L.COUNTRY
  let $ADDRESS1 = &L.ADDRESS1
  let $ADDRESS2 = &L.ADDRESS2
  let $ADDRESS3 = &L.ADDRESS3
  let $ADDRESS4 = &L.ADDRESS4
  let $CITY = &L.CITY
  let $STATE =&L.STATE
  let $POSTAL = &L.POSTAL
  let $Country = &L.COUNTY
  let $Fax_no = &L.FAX
  let $Job_title = &L.JOBTITLE
  let $Phone_no = &L.PHONE 
  let $Nat_Id = &L.NATIONAL_ID
  let $Resp_Id = &L.GPMY_RESPONSIBLEID
    do adformat
    do Compress-Address
  let $Co_Addr1 = $ADDRESS1
  let $Co_Addr2 = $ADDRESS2
  let $Co_Addr3 = $ADDRESS3
  let $Co_Addr4 = $ADDRESS4
  Let $FirstPage = 'Y'
  do Get-Empl-SOCSO

FROM PS_GPMY_SOC_TBL L
WHERE L.EFF_STATUS='A'
  AND L.EFFDT=(SELECT MAX(L1.EFFDT)FROM PS_GPMY_SOC_TBL L1 WHERE L.GPMY_SOCSO_NBR =L1.GPMY_SOCSO_NBR  )
  AND L.GPMY_SOCSO_NBR=&CompSocSo
end-SELECT

end-procedure



!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.NAME_TYPE = 'LEG'
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT)
                 FROM PS_NAMES NAMES1
                 WHERE NAMES1.EMPLID = NAMES.EMPLID
                 AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                 AND NAMES1.EFFDT <= $TODATE)
end-SELECT

end-procedure

!************************************
!Procedure : Get-Email-ID           *
!************************************
begin-procedure Get-Email-ID
begin-SELECT
EMA.EMAIL_ADDR &emailid
    Let $emailid = &emailid
   
    FROM PS_EMAIL_ADDRESSES EMA where 
    EMA.EMPLID = $Resp_Id AND
    (EMA.E_ADDR_TYPE = 'BUSN' OR
    (EMA.E_ADDR_TYPE = 'HOME' AND
     NOT EXISTS (SELECT * FROM PS_EMAIL_ADDRESSES EMA1 where 
     EMA1.EMPLID = $Resp_Id AND 
     EMA1.E_ADDR_TYPE = 'BUSN')))

end-SELECT
end-procedure

!************************************
!Procedure : Get-Empl-SOCSO         *
!************************************
begin-procedure Get-Empl-SOCSO


  Let #TotRecs = 0
  Let $National_Id_Type = ''

begin-SELECT

DISTINCT(J.EMPLID)       &Emplid
ES.GPMY_MMBRSHIP_NBR     &EmplMemShip
ES.EFFDT
ES.GPMY_IC_INDICATOR     &IdType
P1.NAME                  &EmplName
P3.SEX                   &EmplSex
P2.BIRTHDATE             &BirthDate
J.JOBCODE                &Jobcode
J.SETID_JOBCODE          &SETID
J.POSITION_NBR          &POS_NBR
MAX(J.EFFDT)                 &EmplStartDt
    let $setid=&SETID
    let $pos_Nbr = &POS_NBR
    let $Jobcode= &Jobcode
    let $EmplId = &Emplid
    let $EmpSex= &EmplSex
    let $EELegalName = ''
        do Get-Legal-Name

        LET $EELegalName = LTRIM(RTRIM($EELegalName, ' '), ' ')
        IF $EELegalName = ''
            let $Name = &EmplName
        ELSE
            let $Name = $EELegalName
        END-IF

    Let $EmplName = replace(Upper($Name),',',' ')



     evaluate   $EmpSex
     when ='M'
      let $EmpSex='L'
     when ='F'
      let $EmpSex='P'
      end-evaluate

      do Get-Ethnic-Grp

     do Get-IC-Number
     Let $OldIc = rtrim(&OldIcNbr, ' ')
     Let $NewICNbr = translate(&NewIcNbr,'-','')

      if $OldIC = ''
        do GetICPassportInfo
        Let $OldIC = $ICPassport
     else
        !let $ICPassport = $OldIC
        !let $ID_Type = 'Old'
     end-if


    if isnull(rtrim($old_SOC_Nbr,' '))
    else
        if &CompSocSo <> $old_SOC_Nbr
                new-page
        end-if
    end-if
        Do Get-Position-Descr
       let $Descr = &Descr2

    if $Descr = ''
       Do Get-Job-Descr
       let $Descr = &Descr1
    end-if
        Do Print-Output

        let $old_SOC_Nbr = &CompSocSo
        Let $ICPassport = ' '
    Add 1 to #TotRecs
    if #TotRecs >=12
       Let $FirstPage = 'Y'
       new-page
       Let #TotRecs = 0
    end-if

   FROM PS_GPMY_SOC_PYE ES, PS_NAMES P1 ,PS_PERSON P2,PS_PERS_DATA_EFFDT P3 ,PS_JOB J
   WHERE  ES.GPMY_SOCSO_NBR = &CompSocSo
   AND  ES.EFFDT BETWEEN $FROMDATE  AND $TODATE
   AND  ES.EFF_STATUS='A'


   AND P1.EMPLID = ES.EMPLID
   AND P1.NAME_TYPE='PRI'
   AND P1.EFFDT=(SELECT MAX(EFFDT) FROM PS_NAMES P5 WHERE P5.EMPLID   =P1.EMPLID
                                                    AND   P5.NAME_TYPE=P1.NAME_TYPE
                                                    AND   P5.EFFDT <= $TODATE)
   AND P2.EMPLID=P1.EMPLID
   AND P3.EMPLID=P1.EMPLID
   AND P3.EFFDT=(SELECT MAX(EFFDT) FROM PS_PERS_DATA_EFFDT P6 WHERE P6.EMPLID   =P3.EMPLID )
   AND J.EMPLID=ES.EMPLID
   AND J.EFFDT BETWEEN $FROMDATE  AND $TODATE
   AND J.EFFDT = (SELECT MAX(J4.EFFDT) FROM PS_JOB J4 WHERE J4.EMPLID = J.EMPLID AND J4.EFFDT <= $TODATE AND J4.ACTION IN ('HIR','REH'))
   AND J.EFFSEQ =
               (SELECT MAX(J2.EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = J.EMPLID
                    AND J2.EMPL_RCD = J.EMPL_RCD
                    AND J2.EFFDT = J.EFFDT
                    AND J2.ACTION IN ('HIR','REH'))
   !AND J.ACTION IN ('HIR','REH')


   GROUP BY J.EMPLID,ES.GPMY_MMBRSHIP_NBR,ES.EFFDT,ES.GPMY_IC_INDICATOR,P1.NAME,P3.SEX,P2.BIRTHDATE,J.JOBCODE,J.SETID_JOBCODE,J.POSITION_NBR
   ORDER BY P1.NAME


end-SELECT

end-procedure

!****************************************************************
!Procedure- Get-Compensation
!****************************************************************
begin-procedure Get-Compensation
begin-SELECT
JJ.MONTHLY_RT    &Compensation

    Let $Compensation = &Compensation
    
    FROM PS_JOB JJ WHERE 
    JJ.EMPLID = $Emplid AND
    JJ.ACTION IN ('HIR','REH') AND
    JJ.EFFDT = (SELECT MAX(JJJ.EFFDT) FROM PS_JOB JJJ WHERE JJ.EMPLID = JJJ.EMPLID AND JJJ.EFFDT <= $TODATE AND JJJ.ACTION IN ('HIR','REH')) AND
    JJ.EFFSEQ = (SELECT MAX(J3.EFFSEQ) FROM PS_JOB J3 WHERE JJ.EMPLID = J3.EMPLID AND J3.EMPL_RCD = JJ.EMPL_RCD AND
                 JJ.EFFDT = J3.EFFDT) AND
    JJ.EFFDT >= $FROMDATE AND
    JJ.EFFDT <= $TODATE
     

END-SELECT
end-procedure

!****************************************************************
!Procedure- Get-Position-Descr
!****************************************************************
begin-procedure Get-Position-Descr
begin-SELECT
XX.DESCR     &Descr2

FROM  PS_POSITION_DATA XX
WHERE XX.POSITION_NBR=$pos_Nbr
AND XX.EFFDT=(SELECT MAX(X1.EFFDT)
             FROM PS_POSITION_DATA X1
             WHERE X1.POSITION_NBR=XX.POSITION_NBR
             AND X1.EFFDT<=$TODATE)

END-SELECT
end-procedure



!****************************************************************
!Procedure- Get-Job-Descr
!****************************************************************
begin-procedure Get-Job-Descr
begin-SELECT
X.DESCR         &Descr1

FROM  PS_JOBCODE_TBL X
WHERE X.SETID=$setid
AND X.JOBCODE = $Jobcode
AND X.EFFDT=(SELECT MAX(X1.EFFDT)
             FROM PS_JOBCODE_TBL X1
             WHERE X1.SETID=X.SETID
             AND X1.JOBCODE=X.JOBCODE
             AND X1.EFFDT<=$TODATE)

END-SELECT
end-procedure


!***********************************************************************
! Procedure: Get-IC-Number                                         *
!            Gets the National Id Number.                      *
!***********************************************************************
begin-procedure Get-IC-Number
begin-SELECT
A.EMPLID
A.NATIONAL_ID  &NewIcNbr
B.NATIONAL_ID  &OldIcNbr

FROM PS_PERS_NID A, PS_PERS_NID B where A.EMPLID=B.EMPLID and
A.COUNTRY=B.COUNTRY
and (A.NATIONAL_ID_TYPE='NEWIC' and B.NATIONAL_ID_TYPE='OLDIC') and
A.EMPLID=&Emplid
UNION
SELECT EMPLID,'',NATIONAL_ID FROM PS_PERS_NID WHERE NATIONAL_ID_TYPE
='OLDIC' AND EMPLID NOT IN (select A.EMPLID from PS_PERS_NID A, PS_PERS_NID
B where A.EMPLID=B.EMPLID and A.COUNTRY=B.COUNTRY
and (A.NATIONAL_ID_TYPE='NEWIC' and B.NATIONAL_ID_TYPE='OLDIC')) and EMPLID
=&Emplid
UNION
SELECT EMPLID,NATIONAL_ID,'' FROM PS_PERS_NID WHERE NATIONAL_ID_TYPE
='NEWIC' AND EMPLID NOT IN (select A.EMPLID from PS_PERS_NID A, PS_PERS_NID
B where A.EMPLID=B.EMPLID and A.COUNTRY=B.COUNTRY
and (A.NATIONAL_ID_TYPE='NEWIC' and B.NATIONAL_ID_TYPE='OLDIC')) and EMPLID
=&Emplid

end-SELECT
end-Procedure




!***********************************************************************
! Procedure: GetICPassportInfo                                         *
!***********************************************************************
begin-Procedure GetICPassportInfo

begin-SELECT
CP.PASSPORT_NBR     &Passport
CP.DEPENDENT_ID     &DependId
CP.DT_ISSUED        &CPIssueDt
CP.EXPIRATN_DT      &CPExpireDt
  do Format-DateTime (&CPExpireDt, $CPExpireDt, {DEFYMD}, '', '')
  if ($AsofToday <= $CPExpireDt OR rtrim($CPExpireDt,' ') = '')
     if &DependId = ''
       Move &Passport to $ICPassport
     end-if
  end-if
   FROM PS_CITIZEN_PSSPRT CP
 WHERE  CP.EMPLID = $Emplid
    AND $AsOfToday >= CP.DT_ISSUED
end-SELECT

end-Procedure

!************************************
!Procedure : Get-Ethnic-Grp

!************************************
begin-Procedure Get-Ethnic-Grp

begin-SELECT
E.ETHNIC_GRP_CD
E.DESCRSHORT &EthnicGrp

  Let $Ethnic_cd = ltrim(rtrim(&E.ETHNIC_GRP_CD, ' '), ' ')

  Evaluate $Ethnic_cd
      When = 'CHINSE'
        Let $Ethnic_Group = 'C'
      Break
      When = 'MALAY'
        Let $Ethnic_Group = 'M'
      Break
      When = 'INDIAN'
        Let $Ethnic_Group = 'I'
      Break
      When-Other
        Let $Ethnic_Group = 'U'
      Break
   End-Evaluate

              !Move &EthnicGrp to $Emp_EthnicGrp
              !let $Emp_EthnicGrp=ltrim(rtrim($Emp_EthnicGrp,' '),' ')

FROM PS_ETHNIC_GRP_TBL E,PS_DIVERS_ETHNIC D
WHERE E.SETID=D.SETID
AND   E.ETHNIC_GRP_CD=D.ETHNIC_GRP_CD
AND   D.EMPLID=$Emplid
AND   E.EFFDT=(SELECT MAX(EFFDT) FROM PS_ETHNIC_GRP_TBL
               WHERE SETID=D.SETID
               AND ETHNIC_GRP_CD=D.ETHNIC_GRP_CD)
end-SELECT
end-Procedure
!************************************

!************************************
!Procedure : Print-Output           *
!************************************
begin-procedure print-Output

    LET $REMARKS2 =''
    LET $ReportTitle9 =''

    LET $REMARKS = $REMARKS || 'yen'
   if $FirstPage = 'Y'
      LET $REMARKS2 = $REMARKS||' '||$REMARKS3||' '||$REMARKS1
      LET $ReportTitle9 =$ReportTitle5||' '||$ReportTitle8
      LET $FirstPage = 'N'
      graphic () font 5 8
      !print 'Muka Surat' (1,1)
     let $trCompSocSo=rtrim(ltrim(&CompSocSo,' '),' ')
      if $PrevCompSocSo<>''
           if $PrevCompSocSo=$trCompSocSo
         let #PGNUM=#PGNUM+1
        else
         let #PGNUM=1
        end-if
      else
         let #PGNUM=1
      end-if
      let $PrevCompSocSo=$trCompSocSo
      !print #PGNUM (1,14) edit 999

      graphic () font 5 10
      print $ReportTitle (1,80) bold

      graphic () font 4 9
      print $EMPLRSOCSOCODE_1 (5,141) ! BOLD foreground = ('white') Background = ('black')
      !graphic (2,161,20) box 3 10

      graphic () font 5 10
      print $ReportTitle1 (2,70)  
      graphic () font 5 8
      !PRINT $ReportTitle16 (1,160) bold
      !print $ReportTitle2 (3,140) bold
      !GRAPHIC (1,162,3) VERT-LINE 8

      Let #Row = 7
      graphic () font 5 10
      !print &CompSocSo (3,164) BOLD
      graphic           (#Row,141,3)   box 1
      graphic           (#Row,144,3)   box 1
      graphic           (#Row,147,3)   box 1
      graphic           (#Row,150,3)   box 1
      graphic           (#Row,153,3)   box 1
      graphic           (#Row,156,3)   box 1
      graphic           (#Row,159,3)   box 1
      graphic           (#Row,162,3)   box 1
      graphic           (#Row,165,3)   box 1
      graphic           (#Row,168,3)   box 1
      graphic           (#Row,171,3)   box 1
      graphic           (#Row,174,3)   box 1
      graphic           (#Row,177,3)   box 1
      graphic           (#Row,180,3)   box 1
      graphic           (#Row,183,3)   box 1
      graphic           (#Row,186,3)   box 1
      graphic           (#Row,189,3)   box 1
      graphic           (#Row,192,3)   box 1
      graphic           (#Row,195,3)   box 1
      graphic           (#Row,198,3)   box 1
 
      Let $SOC_1 = ''
      Let $SOC_2 = '' 
      Let $SOC_3 = ''
      Let $SOC_4 = ''
      Let $SOC_5 = ''
      Let $SOC_6 = '' 
      Let $SOC_7 = ''
      Let $SOC_8 = ''
      Let $SOC_9 = ''
      Let $SOC_10 = '' 
      Let $SOC_11 = ''
      Let $SOC_12 = ''
      Let $SOC_13 = ''
      Let $SOC_14 = '' 
      Let $SOC_15 = ''
      Let $SOC_16 = ''
      Let $SOC_17 = ''
      Let $SOC_18 = '' 
      Let $SOC_19 = ''
      Let $SOC_20 = ''

      Let $CompSocSo = &CompSocSo
      Let #len = LENGTH($CompSocSo)
      Let #startpos = 201 - (3*#len)
      Let #startpos = #startpos + 1
      
      LET $CompSocSo = RTRIM(LTRIM($CompSocSo, ' '), ' ')
      
      Let $SOC_1 = substr($CompSocSo,1,1)
      Let $SOC_2 = substr($CompSocSo,2,1)
      Let $SOC_3 = substr($CompSocSo,3,1)
      Let $SOC_4 = substr($CompSocSo,4,1) 
      Let $SOC_5 = substr($CompSocSo,5,1)
      Let $SOC_6 = substr($CompSocSo,6,1)
      Let $SOC_7 = substr($CompSocSo,7,1)
      Let $SOC_8 = substr($CompSocSo,8,1) 
      Let $SOC_9 = substr($CompSocSo,9,1)
      Let $SOC_10 = substr($CompSocSo,10,1)
      Let $SOC_11 = substr($CompSocSo,11,1)
      Let $SOC_12 = substr($CompSocSo,12,1) 
      Let $SOC_13 = substr($CompSocSo,13,1)
      Let $SOC_14 = substr($CompSocSo,14,1)
      Let $SOC_15 = substr($CompSocSo,15,1)
      Let $SOC_16 = substr($CompSocSo,16,1)       
      Let $SOC_17 = substr($CompSocSo,17,1)
      Let $SOC_18 = substr($CompSocSo,18,1)
      Let $SOC_19 = substr($CompSocSo,19,1)
      Let $SOC_20 = substr($CompSocSo,20,1) 

      print $SOC_1        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_2        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_3        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_4        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_5        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_6        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_7        (#Row,#startpos) 
      Add 3 to #startpos
      print $SOC_8        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_9        (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_10       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_11       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_12       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_13       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_14       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_15       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_16       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_17       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_18       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_19       (#Row,#startpos)
      Add 3 to #startpos
      print $SOC_20       (#Row,#startpos)


      graphic () font 5 9
      print $ReportTitle3 (3,52)
      graphic () font 5 8
      print $ReportTitle4 (4,73)

      !print $ReportTitle9  (9,1)
      !graphic (9,1,29) box 2
      !print $ReportTitle6 (8,1)

      graphic () font 4 11
      print $Borang     (7,15) BOLD !foreground = ('white') Background = ('black')
      print $A_heading  (9,1) BOLD !foreground = ('white') Background = ('black')
      
      
      graphic () font 5 8
      graphic (10,1,200) box 31 10
      graphic (9,18,31) vert-line 8
      graphic (9,60,31) vert-line 8
      graphic (9,113,31) vert-line 8
      graphic (9,125,31) vert-line 8
      graphic (9,136,31) vert-line 8
      graphic (9,160,31) vert-line 8
      graphic (9,180,31) vert-line 8

      print $Jenis_Kad  (11,4)
      print $Pengenalan (12,4)
      print $EE_IC_NBR  (11,28)
      print $EE_NAME (11,67)
      print $EE_SEX (11,116)
      print $LP (12,116)
      print $ETHNIC_GRP (11,127)
      print $EE_START_DATE_1 (11,140)
      print $EE_POSITION (11,165)
      
      !print $EE_NAME1 (13,31)
      !print $EE_BIRTHDATE (12,76)
      !print $OLD_AND_NEW (13,1)
      !print $OLD_AND_NEW1 (14,1)
      !print $TINA (13,96)


      !print $EE_REFERENCE_NUMBER (12,122)
      !print $H_B_T         (15,76)
      !print $L_P             (15,95)
      !print $H_B_T         (15,122)
      !print $EMPLOYE (12,122)
      !print $EE_SOCSO (13,122)

      print $BAGI (11,182)
      print $KEGUNAAN (12,182)
      print $PERKESO (13,182)
      print $RM (14,182)
      

      print '(1)' (15,7)
      print '(2)' (15,36)
      print '(4)' (15,83)
      !print '(3)' (15,81)
      print '(5)' (15,117)
      print '(6)' (15,129)
      print '(7)' (15,145)
      print '(8)' (15,168)
      print '(9)' (15,189)

      !graphic           (16,136,3)   box 1
      !graphic           (16,139,3)   box 1

      graphic (15,1,200) horz-line 8

      graphic () font 4 11 
      print $Heading2 (42,1) BOLD
      graphic () font 5 9
      print $Heading3  (43,1)
      Let #Row = 44
      Add 2 to #Row
      print $DATE (#Row,139)
      !graphic (#Row,10,20) box 1 10
      !graphic (#Row,10,17) horz-line
      do Format-DateTime($AsOfToday,$Tarikh,{DEFDMY},'','')
      graphic () font 5 8
      !Let $Tarikh = edit($Tarikh, 'dd/mm/yyyy')
      Let $Tarikh = replace($Tarikh, '/', '')
      Let $Tarikh = RTRIM(LTRIM($Tarikh, ' '), ' ')
      Let $Tarikh_1 = substr($Tarikh,1,1)
      Let $Tarikh_2 = substr($Tarikh,2,1)
      Let $Tarikh_3 = substr($Tarikh,3,1)
      Let $Tarikh_4 = substr($Tarikh,4,1)
      Let $Tarikh_5 = substr($Tarikh,5,1)
      Let $Tarikh_6 = substr($Tarikh,6,1)
      Let $Tarikh_7 = substr($Tarikh,7,1)
      Let $Tarikh_8 = substr($Tarikh,8,1)

      graphic           (#Row,146,3)   box 1
      print $Tarikh_1 (#Row,147)
      graphic           (#Row,149,3)   box 1
      print $Tarikh_2 (#Row,150)
      graphic           (#Row,154,3)   box 1
      print $Tarikh_3 (#Row,155)
      graphic           (#Row,157,3)   box 1
      print $Tarikh_4 (#Row,158)
      graphic           (#Row,162,3)   box 1
      print $Tarikh_5 (#Row,163)
      graphic           (#Row,165,3)   box 1
      print $Tarikh_6 (#Row,166)
      graphic           (#Row,168,3)   box 1
      print $Tarikh_7 (#Row,169)
      graphic           (#Row,171,3)   box 1
      print $Tarikh_8 (#Row,172)

      graphic () font 5 9
      print $ER_SIGNATURE (#Row,1)
      graphic (#Row,13,37) horz-line

      Add 1 to #Row
      !print $ER_SIGNATURE_SUB (#Row,106)

      Add -1 to #Row
      Add 2 to #Row
      print $NAME1              (#Row,1)
      print $InCharge           (#Row,33)
      !graphic (#Row,37,39) horz-line 

      Add 2 to #Row
      print $ER_NAME_ADDRESS (#Row,1)
      graphic () font 5 9

      
      graphic () font 5 9
      
      graphic () font 5 9
      print &L.GPMY_REGISTERED_NM  (#Row,17)

      Add 2 to #Row

      print $KPPN_No (#Row,1)
      print $Nat_Id (#Row,11)

      print $Jawatan (#Row,90)
      print $Job_title (#Row,98)
       
      Add 2 to #Row
      print $telefon (#Row,1)
      print $Phone_no (#Row,35)

      print $fax (#Row,90)
      print $Fax_no (#Row,99)    

      Do Get-Email-ID
      print $email (#Row,139)
      print $emailid   (#Row,145)

      Add 2 to #Row
      print $bottomtext (#Row,36)

 
      !Print $ReportTitle15     (#Row,130)
      !print $Co_Addr1         (#Row,34)
      Add 1 to #Row
      !print $Co_Addr2         (#Row,34)
      Add 1 to #Row
      !print $COP_RASMI_PERUSAHA (#Row,106)
      !graphic (#Row,134,48) horz-line
      !print $Co_Addr3         (#Row,34)
      Add 1 to #Row
      !print $Co_Addr4         (#Row,34)
      Add 1 to #Row
      !print $CITY         (#Row,34)
      Add 1 to #Row
      !print $STATE         (#Row,34)
      Add 1 to #Row
      !print $POSTAL        (#Row,34)
      Add 1 to #Row
      !print $Country        (#Row,34)
      graphic () font 5 8
      Add 2 to #Row
      !print $PHONE    (#Row,1)
      !graphic (#Row,30,20) horz-line
      graphic () font 5 8
      !print &L.PHONE           (#Row,34)


       Let #CurLine = 16
   end-if
   Add 1 to #CurLine
   Let #CurLine1 = #CurLine - 1
   Let #CurLine2 = #CurLine + 1
  
   graphic () font 4 8
   Let $New_1 = ''
   Let $New_2 = ''
   Let $New_3 = ''
   Let $New_4 = ''
   Let $New_5 = ''
   Let $New_6 = ''
   Let $New_7 = ''
   Let $New_8 = ''
   Let $New_9 = ''
   Let $New_10 = ''
   Let $New_11 = ''
   Let $New_12 = ''
   Let $New_13 = ''
   Let $New_14 = ''

   if $NewICNbr = ''
      let $ID_Type = 'Old'
      let $NewICNbr = $OldIc
   else
      let $ID_Type = 'New'
   end-if

   print $ID_Type  (#CurLine1,6)

   LET $NewICNbr = RTRIM(LTRIM($NewICNbr, ' '), ' ')
   Let $New_1 = substr($NewICNbr,1,1)
   Let $New_2 = substr($NewICNbr,2,1)
   Let $New_3 = substr($NewICNbr,3,1)
   Let $New_4 = substr($NewICNbr,4,1)
   Let $New_5 = substr($NewICNbr,5,1)
   Let $New_6 = substr($NewICNbr,6,1)
   Let $New_7 = substr($NewICNbr,7,1)
   Let $New_8 = substr($NewICNbr,8,1)
   Let $New_9 = substr($NewICNbr,9,1)
   Let $New_10 = substr($NewICNbr,10,1)
   Let $New_11 = substr($NewICNbr,11,1)
   Let $New_12 = substr($NewICNbr,12,1)
   Let $New_13 = substr($NewICNbr,13,1)
   Let $New_14 = substr($NewICNbr,14,1)

   graphic           (#CurLine1,18,3)   box 1
   graphic           (#CurLine1,21,3)   box 1
   graphic           (#CurLine1,24,3)   box 1
   graphic           (#CurLine1,27,3)   box 1
   graphic           (#CurLine1,30,3)   box 1
   graphic           (#CurLine1,33,3)   box 1
   graphic           (#CurLine1,36,3)   box 1
   graphic           (#CurLine1,39,3)   box 1
   graphic           (#CurLine1,42,3)   box 1
   graphic           (#CurLine1,45,3)   box 1
   graphic           (#CurLine1,48,3)   box 1
   graphic           (#CurLine1,51,3)   box 1
   graphic           (#CurLine1,54,3)   box 1
   graphic           (#CurLine1,57,3)   box 1

   print $New_1    (#CurLine1,19)
   print $New_2    (#CurLine1,22) 
   print $New_3    (#CurLine1,25)
   print $New_4    (#CurLine1,28)
   print $New_5    (#CurLine1,31)
   print $New_6    (#CurLine1,34)
   print $New_7    (#CurLine1,37)
   print $New_8    (#CurLine1,40)
   print $New_9    (#CurLine1,43)
   print $New_10    (#CurLine1,46)
   print $New_11    (#CurLine1,49)
   print $New_12    (#CurLine1,52)
   print $New_13    (#CurLine1,55)
   print $New_14    (#CurLine1,58)

   print '(3)' (17,19)
   print $Tarikh_Lahir  (#CurLine,23)
   
   Let $BirthDate = &BirthDate
   Let $BirthDate = edit($BirthDate, 'dd/mm/yyyy')
   Let $BirthDate = replace($BirthDate, '/', '')
   Let $BirthDate = RTRIM(LTRIM($BirthDate, ' '), ' ')
   Let $Birth_1 = substr($BirthDate,1,1)
   Let $Birth_2 = substr($BirthDate,2,1)
   Let $Birth_3 = substr($BirthDate,3,1)
   Let $Birth_4 = substr($BirthDate,4,1)
   Let $Birth_5 = substr($BirthDate,5,1)
   Let $Birth_6 = substr($BirthDate,6,1)
   Let $Birth_7 = substr($BirthDate,7,1)
   Let $Birth_8 = substr($BirthDate,8,1)

   graphic           (#CurLine,36,3)   box 1
   graphic           (#CurLine,39,3)   box 1
   graphic           (#CurLine,42,3)   box 1
   graphic           (#CurLine,45,3)   box 1
   graphic           (#CurLine,48,3)   box 1
   graphic           (#CurLine,51,3)   box 1
   graphic           (#CurLine,54,3)   box 1
   graphic           (#CurLine,57,3)   box 1

   print $Birth_1   (#CurLine,37)
   print $Birth_2   (#CurLine,40)
   print $Birth_3   (#CurLine,43)
   print $Birth_4   (#CurLine,46)
   print $Birth_5   (#CurLine,49)
   print $Birth_6   (#CurLine,52) 
   print $Birth_7   (#CurLine,55)
   print $Birth_8   (#CurLine,58)
   

   print $EmplName  (#CurLine1,74)  WRAP 30 2
   
   print $EmpSex  (#CurLine1,118)
   print $Ethnic_Group (#CurLine1,130)
 
   
   !print BirthDate (#CurLine,77)    edit DD/MM/YYYY

   Let $EmplStartDt = &EmplStartDt
   Let $EmplStartDt = edit($EmplStartDt, 'dd/mm/yyyy')
   Let $EmplStartDt = replace($EmplStartDt, '/', '')
   Let $EmplStartDt = RTRIM(LTRIM($EmplStartDt, ' '), ' ')
   Let $start_1 = substr($EmplStartDt,1,1)
   Let $start_2 = substr($EmplStartDt,2,1)
   Let $start_3 = substr($EmplStartDt,3,1)
   Let $start_4 = substr($EmplStartDt,4,1)
   Let $start_5 = substr($EmplStartDt,5,1)
   Let $start_6 = substr($EmplStartDt,6,1)
   Let $start_7 = substr($EmplStartDt,7,1)
   Let $start_8 = substr($EmplStartDt,8,1)
   
   graphic           (#CurLine1,136,3)   box 1
   graphic           (#CurLine1,139,3)   box 1
   graphic           (#CurLine1,142,3)   box 1
   graphic           (#CurLine1,145,3)   box 1
   graphic           (#CurLine1,148,3)   box 1
   graphic           (#CurLine1,151,3)   box 1
   graphic           (#CurLine1,154,3)   box 1
   graphic           (#CurLine1,157,3)   box 1
   
   print $start_1   (#CurLine1,137)
   print $start_2   (#CurLine1,140)
   print $start_3   (#CurLine1,143)
   print $start_4   (#CurLine1,146)
   print $start_5   (#CurLine1,149)
   print $start_6   (#CurLine1,152) 
   print $start_7   (#CurLine1,155)
   print $start_8   (#CurLine1,158) 

   graphic (#CurLine,1,200) horz-line 8
   graphic () font 32 8
   print $Hari    (#CurLine,137)
   print $Bulan   (#CurLine,143)
   print $Tahun   (#CurLine,152)

   graphic () font 4 8

   !print &EmplStartDt (#CurLine,122) edit DD/MM/YYYY
   print $Descr   (#CurLine1,161) WRAP 19 2
   
   Do Get-Compensation
   Let #Salary = $Compensation
   if #Salary > 3000
      print '/'  (#CurLine1,189)   
   else   
      print ' '  (#CurLine1,189)
   end-if

   Let $Compensation = 0
   Let $Ethnic_Group = ''

   !print &EmplMemShip (#CurLine,186)
   Add 1 to #CurLine
   !print $ICPassport (#CurLine,3)
   !print $LAMA     (#CurLine,22)


   graphic () font 5 10

end-procedure

#include 'prcslng.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'ldnumlit.sqc'  !Load-NumberLits-Array procedure
!#Include 'netinwds.sqc'
#include 'readxlat.sqc'  !enables xlat table read
#Include 'rotname1.sqc'  !Rotate-Name Procedure
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'adformat.sqc'   !Address formatting

