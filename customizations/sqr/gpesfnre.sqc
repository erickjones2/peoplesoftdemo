!*************************************************************!
!       $Release:  HR92                                       !
!           $Bug:  27231547                                   !
!*************************************************************!
! ************************************************************* !
!                                                               !
!                                                               !
! This software and related documentation are provided under a  !
! license agreement containing restrictions on use and          !
! disclosure and are protected by intellectual property         !
! laws. Except as expressly permitted in your license agreement !
! or allowed by law, you may not use, copy, reproduce,          !
! translate, broadcast, modify, license, transmit, distribute,  !
! exhibit, perform, publish or display any part, in any form or !
! by any means. Reverse engineering, disassembly, or            !
! decompilation of this software, unless required by law for    !
! interoperability, is prohibited.                              !
! The information contained herein is subject to change without !
! notice and is not warranted to be error-free. If you find any !
! errors, please report them to us in writing.                  !
!                                                               !
! Copyright (C) 1988, 2018, Oracle and/or its affiliates.       !
! All Rights Reserved.                                          !
! ************************************************************* !
!************************************************************************
! Procedure Check-Empl-ERE
!************************************************************************
!begin-procedure Check-Empl-ERE
!#debug do Fin-Debug-Msg('Check-Empl-ERE')
!
!  !Let $Job-EffDt-Select = ''
!  !Let #Job-EffSeq-Select = 0
!
!  #debugd show 'Employee:                ' $Select-EMPLID
!  #debugd show 'Employee record:         ' #Select-EMPL-RCD
!
!let $sql-statement = 'GPESFNRE.SQR,Check-Empl-Dt,Select,PS_GP_ABS_EVENT, PS_GP_ABS_TAKE, PS_JOB'
!begin-SELECT on-error=SQL-Error
!JOB_ERE.EFFDT
!JOB_ERE.EFFSEQ
!OES. 07/2006. Se recupera fecha de inicio del Absentismo
!ABS_EVE.BGN_DT
!
!    !Let $Job-EffDt-Select  =  &JOB_ERE.EFFDT
!    !Let #Job-EffSeq-Select =  &JOB_ERE.EFFSEQ
!    Let $Abs-Bgn_dt-Select  =  &ABS_EVE.BGN_DT
!
!  FROM PS_GP_ABS_EVENT ABS_EVE, PS_GP_ABS_TAKE ABS_TAKE, PS_JOB JOB_ERE
! WHERE JOB_ERE.EMPLID   = $Select-EMPLID
!   AND JOB_ERE.EMPL_RCD = #Select-EMPL-RCD
!   AND ABS_TAKE.ABS_TYPE_OPTN = 'RSK'
!   AND ABS_EVE.PIN_TAKE_NUM = ABS_TAKE.PIN_NUM
!   AND (ABS_EVE.EMPLID = JOB_ERE.EMPLID AND ABS_EVE.EMPL_RCD = JOB_ERE.EMPL_RCD AND
!       JOB_ERE.EFFDT = (SELECT MAX(A_ED.EFFDT)
!                     FROM PS_JOB A_ED
!                     WHERE JOB_ERE.EMPLID  = A_ED.EMPLID
!                      AND JOB_ERE.EMPL_RCD = A_ED.EMPL_RCD
!                      AND A_ED.EFFDT      <= $Select-ASOFDATE) AND
!       JOB_ERE.EFFSEQ = (SELECT MAX(A_ES.EFFSEQ)
!                      FROM PS_JOB A_ES
!                      WHERE JOB_ERE.EMPLID  = A_ES.EMPLID
!                       AND JOB_ERE.EMPL_RCD = A_ES.EMPL_RCD
!                       AND JOB_ERE.EFFDT    = A_ES.EFFDT))
!   AND ABS_TAKE.EFFDT = (SELECT MAX(B_ED.EFFDT)
!                     FROM PS_GP_ABS_TAKE B_ED
!                     WHERE ABS_TAKE.PIN_NUM = B_ED.PIN_NUM
!                      AND B_ED.EFFDT      <= $Select-ASOFDATE
!                      AND ABS_TAKE.EFF_STATUS = 'A')
!end-SELECT
!End-Procedure
!
!
!************************************************************************
! Procedure Print-Certificate-RE
!************************************************************************
begin-procedure Print-Certificate-RE
#debug do Fin-Debug-Msg('Print-Certificate-RE')

   #define DFLT_COL1                02
   #define DFLT_COL3                03
   #define DFLT_COL2                91

   #define CMPNY_NM_BOX             {DFLT_COL1}
   #define CMPNY_NM_FLD             03
   #define CMPNY_CCC_BOX            89
   #define CMPNY_CCC_FLD            90
   #define CMPNY_ADDR_BOX           {DFLT_COL1}
   #define CMPNY_ADDR_FLD           03
   #define CMPNY_NUM_BOX            74
   #define CMPNY_NUM_FLD            75
   #define CMPNY_BLOQUE_BOX         82
   #define CMPNY_BLOQUE_FLD         83
   #define CMPNY_ESCALERA_BOX       89
   #define CMPNY_ESCALERA_FLD       90
   #define CMPNY_PISO_BOX           98
   #define CMPNY_PISO_FLD           99
   #define CMPNY_PUERTA_BOX        104
   #define CMPNY_PUERTA_FLD        105
   #define CMPNY_POSTAL_BOX         111
   #define CMPNY_POSTAL_FLD         112
   #define CMPNY_CITY_BOX           {DFLT_COL1}
   #define CMPNY_CITY_FLD           03
   #define CMPNY_STATE_BOX          45
   #define CMPNY_STATE_FLD          46
   #define CMPNY_TEL_BOX            98
   #define CMPNY_TEL_FLD            99

   #define EMPL_NM_BOX              {DFLT_COL1}
   #define EMPL_NM_FLD              03
   #define EMPL_DNI_BOX             103
   #define EMPL_DNI_FLD             104
   #define EMPL_ADDR_BOX            {DFLT_COL1}
   #define EMPL_ADDR_FLD            03
   #define EMPL_NUM_BOX             87
   #define EMPL_NUM_FLD             88
   #define EMPL_BLOQUE_BOX          95
   #define EMPL_BLOQUE_FLD          96
   #define EMPL_ESCALERA_BOX       102
   #define EMPL_ESCALERA_FLD       103
   #define EMPL_PISO_BOX           111
   #define EMPL_PISO_FLD           112
   #define EMPL_PUERTA_BOX         117
   #define EMPL_PUERTA_FLD         118
   #define EMPL_CP_BOX              {DFLT_COL1}
   #define EMPL_CP_FLD              03
   #define EMPL_LOCAL_BOX           15
   #define EMPL_LOCAL_FLD           16
   #define EMPL_PROV_BOX            59
   #define EMPL_PROV_FLD            60
   #define EMPL_SSN_BOX             98
   #define EMPL_SSN_FLD             99
   #define EMPL_JOBCODE_BOX         {DFLT_COL1}
   #define EMPL_JOBCODE_FLD         03
   #define EMPL_GCTZ_BOX            55
   #define EMPL_GCTZ_FLD            56
   #define EMPL_TERMDT_BOX          82
   #define EMPL_TERMDT_FLD          83
   #define EMPL_BCC_BOX             {DFLT_COL1}
   #define EMPL_BCC_FLD             03
   #define EMPL_DAY_CC_BOX          45
   #define EMPL_DAY_CC_FLD          46
   #define EMPL_BCP_BOX             {DFLT_COL1}
   #define EMPL_BCP_FLD             03
   #define EMPL_DAY_CP_BOX          33
   #define EMPL_DAY_CP_FLD          34
   #define EMPL_COMMENT_BOX         47
   #define EMPL_COMMENT_FLD         48
   #define EMPL_OTHERS_BOX          25
   #define EMPL_OTHERS_FLD          26
   #define EMPL_COMMENT2_BOX        42
   #define EMPL_COMMENT2_FLD        43
   #define EMPL_CHECK1_BOX          121
   #define EMPL_CHECK2_BOX          121
   #define EMPL_CHECK1_FLD          113
   #define EMPL_CHECK2_FLD          113

   #define TBL_BOX                  01
   #define TBL_FLD                  60


   #define MAIN_BOX_WIDTH           {ColR}
   #define SECN_BOX_WIDTH           85

   #define ARIAL                    4
   #define ARIAL_BOLD               400
   #define COURIER_NEW              3
   #define HELVETICA_NARROW         38
   #define TIMES_ITALIC             32


   !---- HEADER PART----!

   !print-image ministerio                                          ( 4,01)
   PRINT-IMAGE  (  2,  {DFLT_COL1})
     type         = jpeg-file
     image-size   = (47,9)
     source       = $FileDir

   PRINT-IMAGE  (  2,  100)
     type         = jpeg-file
     image-size   = (25,9)
   source       = $FileDir2
 

   !graphic (+10, 78, 22) box 8
   !graphic (   ,103, 22) box 8

   alter-printer point-size=12 font={ARIAL_BOLD}
   print 'CERTIFICADO DE EMPRESA'                                   (+13,{DFLT_COL1})
   print 'PARA LA SOLICITUD DE RIESGO'                              (+2,{DFLT_COL1})
   print 'DURANTE EL EMBARAZO O LA '               (+2,{DFLT_COL1})
   print 'LACTANCIA NATURAL'               (+2,{DFLT_COL1})

 alter-printer point-size=9 font={ARIAL}
 print 'D/Dª'                                                       (+3 ,{DFLT_COL1})
 print $Responsible-Name                                            (  , 10)
 graphic (,8,61) horz-line

 print 'con DNI, NIE, pasaporte'                                    (  , 72)
 print $Responsible-DNI                                             (  , 98)
 graphic (,96,28) horz-line

 print 'que desempeña en la empresa el cargo de'                    (+2,{DFLT_COL1})
 print $Reponsible-JobCode                                          (  , 45)
 graphic (,43,81) horz-line

   alter-printer point-size=9 font={ARIAL}
   print 'CERTIFICA:'                                               (+3, {DFLT_COL1})
   Let $out = 'que son ciertos los datos relativos a la empresa, '
   Let $out = $out || 'así como los personales, profesionales y de cotización '
   print $out                                                       (  ,14)
   print 'que a continuación se consignan:'                         (+1,14)



   !********* COMPANY ****************!!
   alter-printer point-size=8 font={ARIAL}
   print '1. DATOS DE EMPRESA'                                      (+3, {DFLT_COL1})  Bold

   alter-printer point-size=16 font={ARIAL}
   graphic (+2, {CMPNY_NM_BOX}, {MAIN_BOX_WIDTH}) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_CCC_BOX} + 2
   graphic (  , {CMPNY_CCC_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   print 'Nombre o razón social'                                    (  , {CMPNY_NM_FLD})
   print 'Código de cuenta de cotización (CCC)'                     (  , {CMPNY_CCC_FLD})
   print $Cmpny-Descr                                               (+1, {CMPNY_NM_FLD})
   print $Cmpny-Ssn                                                 (  , {CMPNY_CCC_FLD})  edit 'XX/XXXXXXXXXX'


   alter-printer point-size=16 font={ARIAL}
   graphic (+2, {CMPNY_ADDR_BOX}, {MAIN_BOX_WIDTH}) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_NUM_BOX} + 2
   graphic ( , {CMPNY_NUM_BOX}, #Width) box 3

   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_BLOQUE_BOX} + 2
   graphic ( , {CMPNY_BLOQUE_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_ESCALERA_BOX} + 2
   graphic ( , {CMPNY_ESCALERA_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_PISO_BOX} + 2
   graphic ( , {CMPNY_PISO_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_PUERTA_BOX} + 2
   graphic ( , {CMPNY_PUERTA_BOX}, #Width) box 3

   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_POSTAL_BOX} + 2
   graphic ( , {CMPNY_POSTAL_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   print 'Domicilio'                                                (  , {CMPNY_ADDR_FLD})
   print 'Número'                                                   (  , {CMPNY_NUM_FLD})
   print 'Bloque'                                                   (  , {CMPNY_BLOQUE_FLD})
   print 'Escalera'                                                 (  , {CMPNY_ESCALERA_FLD})
   print 'Piso'                                                     (  , {CMPNY_PISO_FLD})
   print 'Puerta'                                                   (  , {CMPNY_PUERTA_FLD})
   print 'Código postal'                                            (  , {CMPNY_POSTAL_FLD})
   print $Wrk-Center-Domicilio                                      (+1, {CMPNY_ADDR_FLD})
   print $Wrk-Center-Numero                                         (  , {CMPNY_NUM_FLD})
   print $Wrk-Center-Bloque                                         (  , {CMPNY_BLOQUE_FLD})
   print $Wrk-Center-Escalera                                       (  , {CMPNY_ESCALERA_FLD})
   print $Wrk-Center-Piso                                           (  , {CMPNY_PISO_FLD})
   print $Wrk-Center-Puerta                                         (  , {CMPNY_PUERTA_FLD})
   print $Wrk-Center-Postal                                         (  , {CMPNY_POSTAL_FLD})

   alter-printer point-size=16 font={ARIAL}
   graphic (+2, {CMPNY_CITY_BOX}, {MAIN_BOX_WIDTH}) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_STATE_BOX} + 2
   graphic ( , {CMPNY_STATE_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {CMPNY_TEL_BOX} + 2
   graphic ( , {CMPNY_TEL_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   print 'Localidad'                                                (  , {CMPNY_CITY_FLD})
   print 'Provincia'                                                (  , {CMPNY_STATE_FLD})
   print 'Teléfono'                                                 (  , {CMPNY_TEL_FLD})
   PRINT $Wrk-Center-City                                           (+1, {CMPNY_CITY_FLD})
   print $Wrk-Center-State-Desc                                     (  , {CMPNY_STATE_FLD})
   print $Wrk-Center-Telefono                                       (  , {CMPNY_TEL_FLD})

   !********* EMPLOYEE ****************!!
   alter-printer point-size=8 font={ARIAL}
   print '2. DATOS DE LA TRABAJADORA'                               (+4, {DFLT_COL1}) Bold

   alter-printer point-size=16 font={ARIAL}
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_NM_BOX} + 2
   graphic (+2 , {EMPL_NM_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_DNI_BOX} + 2
   graphic ( , {EMPL_DNI_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   print 'Apellidos y nombre'                                       (  , {EMPL_NM_FLD})
   print 'DNI - NIE - pasaporte'                                    (  , {EMPL_DNI_FLD})
   PRINT $Empl-Name                                                 (+1, {EMPL_NM_FLD})
   PRINT $Empl-DNI                                                  (  , {EMPL_DNI_FLD})

   alter-printer point-size=16 font={ARIAL}
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_ADDR_BOX} + 2
   graphic (+2, {EMPL_ADDR_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_NUM_BOX} + 2
   graphic (, {EMPL_NUM_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_BLOQUE_BOX} + 2
   graphic (, {EMPL_BLOQUE_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_ESCALERA_BOX} + 2
   graphic (, {EMPL_ESCALERA_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PISO_BOX} + 2
   graphic (, {EMPL_PISO_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PUERTA_BOX} + 2
   graphic (, {EMPL_PUERTA_BOX}, #Width) box 3

   alter-printer point-size=7 font={ARIAL}
   print 'Domicilio'                                                (  , {EMPL_ADDR_FLD})
   print 'Número'                                                   (  , {EMPL_NUM_FLD})
   print 'Bloque'                                                   (  , {EMPL_BLOQUE_FLD})
   print 'Escalera'                                                 (  , {EMPL_ESCALERA_FLD})
   print 'Piso'                                                     (  , {EMPL_PISO_FLD})
   print 'Puerta'                                                   (  , {EMPL_PUERTA_FLD})
   PRINT $DPersonales-Domicilio                                     (+1, {EMPL_ADDR_FLD})
   print $DPersonales-Numero                                        (  , {EMPL_NUM_FLD})
   print $DPersonales-Bloque                                        (  , {EMPL_BLOQUE_FLD})
   print $DPersonales-Escalera                                      (  , {EMPL_ESCALERA_FLD})
   print $DPersonales-Piso                                          (  , {EMPL_PISO_FLD})
   print $DPersonales-Puerta                                        (  , {EMPL_PUERTA_FLD})

   alter-printer point-size=16 font={ARIAL}
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_CP_BOX} + 2
   graphic (+2  , {EMPL_CP_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_LOCAL_BOX} + 2
   graphic ( , {EMPL_LOCAL_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_PROV_BOX} + 2
   graphic (  , {EMPL_PROV_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_SSN_BOX} + 2
   graphic (, {EMPL_SSN_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   print 'Código postal'                                            (  , {EMPL_CP_FLD})
   print 'Localidad'                                                (  , {EMPL_LOCAL_FLD})
   print 'Provincia'                                                (  , {EMPL_PROV_FLD})
   print 'Número de la Seguridad Social'                            (  , {EMPL_SSN_FLD})
   print $Empl-Postal                                               (+1, {EMPL_CP_FLD})
   print $Empl-City                                                 (  , {EMPL_LOCAL_FLD})
   print $Empl-State-Desc                                           (  , {EMPL_PROV_FLD})
   PRINT $Empl-SSN                                                  (  , {EMPL_SSN_FLD}) EDIT 'XX/XXXXXXXXXX'

   alter-printer point-size=16 font={ARIAL}
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_JOBCODE_BOX} + 2
   graphic (+2, {EMPL_JOBCODE_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_GCTZ_BOX} + 2
   graphic (  , {EMPL_GCTZ_BOX}, #Width) box 3
   Let #Width = {MAIN_BOX_WIDTH} - {EMPL_TERMDT_BOX} + 2
   graphic (, {EMPL_TERMDT_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   print 'Profesión'                                                (  , {EMPL_JOBCODE_FLD})
   print 'Grupo de cotización'                                      (  , {EMPL_GCTZ_FLD})
   print 'Fecha de suspensión del contrato de trabajo'              (  , {EMPL_TERMDT_FLD})

   !PRINT $Empl-JobCode-Desc                                        (+1, {EMPL_JOBCODE_FLD})
   let $out = $CNO-Code || ' - ' || $Empl-CNO-Desc
   print $out                                                       (+1, {EMPL_JOBCODE_FLD})
   print $Empl-Ctg-Desc                                             (  , {EMPL_GCTZ_FLD})
   do Format-DateTime($orig_begin_date, $fecha_inicio_baja-Print, {DEFDMY}, '', '')
   print $fecha_inicio_baja-Print                                   (, {EMPL_TERMDT_FLD})

   alter-printer point-size=8 font={ARIAL}
   print '3. DATOS DE COTIZACIÓN DEL MES ANTERIOR A LA SUSPENSIÓN DEL CONTRATO' (+4, {DFLT_COL1}) Bold
   alter-printer point-size=7 font={ARIAL}
   graphic (+2, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 2
   print 'a) Bases de cotización del mes anterior, excluyendo los conceptos del apartado b)' (  , {DFLT_COL3})
   let  #Line-Reg = #current-line

   alter-printer point-size=16 font={ARIAL}
   !
   !graphic (+2, {EMPL_BCC_BOX}, {MAIN_BOX_WIDTH}) box 3
   !Let #Width = {MAIN_BOX_WIDTH} - {EMPL_DAY_CC_BOX} + 2
   !graphic (, {EMPL_DAY_CC_BOX}, #Width) box 3
   !
   !Let #Width = {SECN_BOX_WIDTH} - {EMPL_BCP_BOX} + 2
   graphic (+2, {EMPL_BCP_BOX}, {SECN_BOX_WIDTH}) box 3
   Let #Width = {SECN_BOX_WIDTH} - {EMPL_DAY_CP_BOX} + 2
   graphic (, {EMPL_DAY_CP_BOX}, #Width) box 3
   Let #Width = {SECN_BOX_WIDTH} - {EMPL_COMMENT_BOX} + 2
   graphic (, {EMPL_COMMENT_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   !print 'Base de contingencias comunes'                           (  , {EMPL_BCC_FLD})
   !print 'Núm. de días'                                            (  , {EMPL_DAY_CC_FLD})
   print 'Base de cotingencias profesionales'                       (  , {EMPL_BCP_FLD})
   print 'Número de días'                                           (  , {EMPL_DAY_CP_FLD})
   print 'Observaciones'                                            (  , {EMPL_COMMENT_FLD})
   let #line_bc = #current-line + 1

   alter-printer point-size=7 font={ARIAL}
   graphic (+3, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 2
   Let $out = 'b) Cotizaciones de los doce meses inmediatamente '
   Let $out = $out || 'anteriores a la suspensión del contrato(*)'
   print $out                                                       (  , {DFLT_COL3})
   alter-printer point-size=16 font={ARIAL}
   !
   !graphic (+2, {EMPL_BCC_BOX}, {MAIN_BOX_WIDTH}) box 3
   !Let #Width = {MAIN_BOX_WIDTH} - {EMPL_DAY_CC_BOX} + 2
   !graphic (, {EMPL_DAY_CC_BOX}, #Width) box 3
   !
   !Let #Width = {MAIN_BOX_WIDTH} - {EMPL_BCP_BOX} + 2
   graphic (+2, {EMPL_BCP_BOX}, {SECN_BOX_WIDTH}) box 3
   Let #Width = {SECN_BOX_WIDTH} - {EMPL_OTHERS_BOX} + 2
   graphic (, {EMPL_OTHERS_BOX}, #Width) box 3
   Let #Width = {SECN_BOX_WIDTH} - {EMPL_COMMENT2_BOX} + 2
   graphic (, {EMPL_COMMENT2_BOX}, #Width) box 3
   alter-printer point-size=7 font={ARIAL}
   !print 'Base de contingencias comunes'                           (  , {EMPL_BCC_FLD})
   !print 'Núm. de días'                                            (  , {EMPL_DAY_CC_FLD})
   print 'Por horas extraordinarias'                                (  , {EMPL_BCP_FLD})
   print 'Por otros conceptos'                                      (  , {EMPL_OTHERS_FLD})
   print 'Observaciones'                                            (  , {EMPL_COMMENT2_FLD})
   let #line_overtime = #current-line + 1

   alter-printer point-size=8 font={ARIAL}
   graphic (+3, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 3
   print 'EN CASO DE CONTRATO A TIEMPO PARCIAL '                    ( , {DFLT_COL1}) Bold
   print 'se certificarán las bases de cotización de los'           ( , 44)
   let #column = {DFLT_COL2} - 1
   Let $out = 'tres meses inmediatamente anteriores a la fecha '
   Let $out = $out || 'de la suspensión del contrato de trabajo.'
   print $out                                                       (+1, {DFLT_COL1})  


   #define TABLE-ROWS         5
   alter-printer point-size=7 font={ARIAL}
   graphic (+2, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 3 1

   graphic (  , 09, 7) box 11  2 0             !Column Mes
   graphic (  , 23, 22) box 13  2 0            !Column Base de cotización de contingencias comunes

   alter-printer point-size=7 font={ARIAL}
   print 'Año'                                                      (  ,04)
   print 'Mes'                                                      (  ,11)
   print 'Días'                                                     (  ,18)
   print 'Base de contingencias'                                    (  ,26)
   print 'Observaciones'                                            (  ,60)
   print 'profesionales'                                            (+1,29)


   graphic (+2, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 2 1
   let #linea_ant1 = #current-line
   graphic (+2, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 2 1
   graphic (+2, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 2 1
   graphic (+2, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 2 1
   graphic (+2, {DFLT_COL1}, {SECN_BOX_WIDTH}) box 2 1

   alter-printer point-size=7 font={ARIAL}
   print 'TOTALES'                                                  (+1,10) Bold
   let #Totals-Line = #current-line

   !***************************************************
   !*********************FIN TABLA*********************
   !***************************************************

   graphic (#Line-Reg, #column, 34) box 26  2 0
   Let #Line-Reg = #Line-Reg + 1
   alter-printer point-size=8 font={ARIAL}
   print 'RÉGIMEN ESPECIAL AGRARIO'                                 (#Line-Reg , {DFLT_COL2}) Bold
   Let #Line-Reg = #Line-Reg + 1
   print 'CUENTA AJENA'                                 (#Line-Reg , {DFLT_COL2}) Bold
   alter-printer point-size=7 font={ARIAL}
   graphic (+2,{EMPL_CHECK1_BOX},2) box 1
   print 'Fija'                                                     ( , {EMPL_CHECK1_FLD})
   print 'Trabajadora'                                              (+3, {DFLT_COL2})
   graphic (+2,{EMPL_CHECK2_BOX},2) box 1
   print 'Eventual'                                                 (, {EMPL_CHECK2_FLD})
   !print '¿Se encontraba en vigor el contrato en la fecha de la baja?'  (+3, {DFLT_COL2})
   !graphic (+1,{EMPL_CHECK1_BOX},2) box 1
   !graphic (  ,{EMPL_CHECK2_BOX},2) box 1
   !print 'Sí'                                                      ( ,{EMPL_CHECK1_FLD})
   !print 'No'                                                      ( ,{EMPL_CHECK2_FLD})
   !
  print 'Núm. jornadas reales mes'             (+3, {DFLT_COL2})
  print 'anterior a la suspension'             (+1, {DFLT_COL2})
  print 'del contrato'             (+1, {DFLT_COL2})
   graphic (,112,8) horz-line
   
   print 'Salario real de la trabajadora'                           (+10, {DFLT_COL2})
   graphic (,112,7) horz-line
   print '/Día'   ( , 120)
    
   !----new fields-----!
   do Format-DateTime($AsOfToday, $out, {DEFCMP}, '', '')
   let $Day = substr($out, 7, 2)
   let $Month = substr($out, 5, 2)
   let $Year = substr($out, 1, 4)
   let $FieldName = 'GPES_MONTHCD'
   let $FieldValue = $Month
   let $AsOfDate = $Select-ASOFDATE
   Do Read-Translate-Table
   let $Month_Cd_Descr = RTrim($XLatshortName, ' ')

   Let $As-Of-String = ' En  ' || $Empl-State-Desc ||', ' ||'  a  '
   Let $As-Of-String = $As-Of-String || $Day || '  de  ' || $Month_Cd_Descr || '  de  ' || $Year || ' . '
   print $As-Of-String                                              (+10,  62)

   print '(Firma y sello)' (+2, 72)

   alter-printer point-size=7 font={ARIAL}
   graphic (+5,{DFLT_COL1},11) horz-line 4
   Let $out = '(*) Deberán certificarse las bases de cotización, por horas extras y otras remuneraciones '
   Let $out = $out || 'que no hayan sido objeto de prorrateo en las bases mensuales de cotización,'
   print $out                                                            (+2, {DFLT_COL1})
   print ' de los doce meses anteriores a la suspensión del contrato.'   (+1, {DFLT_COL1})


end-procedure


!************************************************************************
! Procedure Print-Contribution-bases-RE
!************************************************************************
begin-procedure Print-Contribution-bases-RE
#debug do Fin-Debug-Msg('Print-Contribution-bases-RE')


  let #Total-CC = 0
  let #Total-Dsmpl = 0
  let #OT_hrs = 0
  let #denormalzdCP = 0
  let #OTbetCeilings = 0
  let #Ctz-Days = 0
  let #Ctz-Days_L03 = 0
  let #Empl-Total-CC = 0
  let #Empl-Total-Dsmpl = 0
  let #Empl-Ctz-Days = 0
  let #Vactn-Total-CC = 0
  let #Vactn-Total-Dsmpl = 0
  let #Vactn-Ctz-Days = 0
  let $Prev-sstc-Paymnt = ' '
  let #Natural-Days = 0
  let $Forced-Exit-Flag = 'N'
  !let #prev_month_imp_180 = 0
  !let #prev_month_imp = 0

  do Format-DateTime($BRD_Date, $out, {DEFCMP}, '', '')
  !let #Prev-Year = substr($out, 1, 4)
  !let #Prev-Month = substr($out, 5, 2)
  let #From-Year = substr($out, 1, 4)
  let #From-Month = substr($out, 5, 2)
  let $TC-Period-Begin = to_char(#From-Year) || '-' || to_char(#From-Month) || '-01'

  !Includes/excludes 'contributing by minimum base' bases
  do Convert-From-DTU-Date($TC-Period-Begin, $VR-Ref-Dt)
  Let $CLI_VR_OPC_CLC_BRD = 'A'
  let $sql-statement = 'GPESFNRE.SQR,Print-Contribution-bases-RE,Select,PS_GP_VARIABLE VR3'
Begin-SELECT on-error=SQL-Error
VR3.CHARACTER_VALUE
    Let $CLI_VR_OPC_CLC_BRD = &VR3.CHARACTER_VALUE

FROM PS_GP_PIN GPP
   , PS_GP_VARIABLE VR3
WHERE GPP.PIN_CODE = 'CLI VR OPC CLC BRD ESP'
  AND GPP.PIN_NUM = VR3.PIN_NUM
  AND VR3.EFFDT = (SELECT MAX(EFFDT) FROM PS_GP_VARIABLE
                   WHERE PIN_NUM = VR3.PIN_NUM
                     AND EFFDT <= $VR-Ref-Dt)
End-SELECT
  #debugd show 'CLI VR OPC CLC BRD: ' $CLI_VR_OPC_CLC_BRD ' as of: ' $VR-Ref-Dt
  !Includes/excludes 'contributing by minimum base' bases
  
  
  !******** PART TIME ******
  #debugd show 'Full Part time flag: ' $JOB-Full-Part-Time
  if $JOB-Full-Part-Time = 'P'  ! trabajador a tiempo parcial
    do dtu-add-months ($TC-Period-Begin, -1, $TC-Period-Begin_1)
    do dtu-add-months ($TC-Period-Begin, -3, $TC-Period-Begin_3)
    do Convert-From-DTU-Date($TC-Period-Begin_1, $TC-Period-Begin_To)
    do Convert-From-DTU-Date($TC-Period-Begin_3, $TC-Period-Begin_From)
    #debugd show 'TC results retrieval range: ' $TC-Period-Begin_From '/' $TC-Period-Begin_To

    alter-printer point-size=8 font={COURIER_NEW}

!*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
    let $Naturual-Days-Count = 'N'
    let $OVRD-Bgn-Dt = $fecha_inicio_baja
    let $OVRD-End-Dt = $fecha_fin_baja
    Do Get-WorkDay-Reduction

    If $Workday-Reduction <> 'WKR'
       let $sql-statement = 'GPESFNRE.SQR,Print-Contribution-bases-IT,Select,PS_GP_ABS_EVENT ABSE'
Begin-SELECT DISTINCT on-error=SQL-Error
'X' &3ABSE3.X
       let $Naturual-Days-Count = 'Y'

FROM PS_GP_PIN GPP
   , PS_GP_ABS_EVENT ABSE
WHERE GPP.PIN_CODE IN ('RIESGO EMBARAZO ESP')
  AND GPP.PIN_NUM = ABSE.PIN_TAKE_NUM
  AND ABSE.BGN_DT = $fecha_inicio_baja AND ABSE.END_DT = $fecha_fin_baja
End-SELECT
       #debugd show 'Natural days count for RIESGO EMBARAZO: ' $Naturual-Days-Count
       #debugd show 'Event bgn/end dates: ' $fecha_inicio_baja '/' $fecha_fin_baja
    End-if
!*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*

    let #Prev-Month       =  0
    let $Prev-sstc-Paymnt =  ' ' 
    let #Total-CC     =  0
    let #Total-Dsmpl  =  0
    let #Ctz-Days     =  0
    let #Ctz-Days_L03 = 0

let $sql-statement = 'GPESFNRE.SQR,Print-Contribution-bases-RE,Select,PS_GPES_SSTC_RS_VW SSTC_3ANT4'
Begin-SELECT on-error=SQL-Error
SSTC_3ANT3.EMPLID
SSTC_3ANT3.GPES_YEAR_RECALC
SSTC_3ANT3.GPES_MONTH_RECALC
SSTC_3ANT3.GPES_SSTC_ELEMENT
SSTC_3ANT3.GPES_SSTC_PAYMNT
SSTC_3ANT3.CONTRACT_NUM
SUM(SSTC_3ANT3.GPES_SSTC_DAYS)    &SSTC_3ANT3.GPES_SSTC_DAYS
SUM(SSTC_3ANT3.GPES_SSTC_AMOUNT)  &SSTC_3ANT3.GPES_SSTC_AMOUNT
MIN(CAL_3ANT3.GPES_MONTH_BGN_DT)  &CAL_3ANT3.GPES_MONTH_BGN_DT
MAX(CAL_3ANT3.GPES_MONTH_END_DT)  &CAL_3ANT3.GPES_MONTH_END_DT

   ! In case of litigation salaries we find L00 & L02 records in the table that make to print
   ! two lines in the report for the same month. We just want to print one line with the sum of
   ! L00 & L02 records for a month.
   let $sstc-Paymnt = &SSTC_3ANT3.GPES_SSTC_PAYMNT
   if &SSTC_3ANT3.GPES_SSTC_PAYMNT <> 'L13'
      let $sstc-Paymnt = 'L00'
   end-if

  let $Base-printed     =  'N'

   if #Prev-Month <> &SSTC_3ANT3.GPES_MONTH_RECALC
       or #Prev-Year <> &SSTC_3ANT3.GPES_YEAR_RECALC
       or $Prev-sstc-Paymnt <> $sstc-Paymnt
      if $Prev-sstc-Paymnt = ' '
         !Initialization for the first loop
         let $Prev-sstc-Paymnt = $sstc-Paymnt
         let #Prev-Year        = &SSTC_3ANT3.GPES_YEAR_RECALC
         let #Prev-Month       = &SSTC_3ANT3.GPES_MONTH_RECALC
         let $Prev-Bgn-Dt      = &CAL_3ANT3.GPES_MONTH_BGN_DT
         let $Prev-End-Dt      = &CAL_3ANT3.GPES_MONTH_END_DT
      else
         Do Print-Contribution-Ln-Ant-RE
         let $Prev-sstc-Paymnt =  $sstc-Paymnt
         let #Prev-Year    = &SSTC_3ANT3.GPES_YEAR_RECALC
         let #Prev-Month   = &SSTC_3ANT3.GPES_MONTH_RECALC
         let $Prev-Bgn-Dt  = &CAL_3ANT3.GPES_MONTH_BGN_DT
         let $Prev-End-Dt  = &CAL_3ANT3.GPES_MONTH_END_DT
         let #Total-CC     =  0
         let #Total-Dsmpl  =  0
         let #Ctz-Days     =  0
         let #Ctz-Days_L03 = 0
      end-if
   end-if

   let $mult_contract = &SSTC_3ANT3.CONTRACT_NUM

    #debugd show 'TC Payment/Element:       ' &SSTC_3ANT3.GPES_SSTC_PAYMNT '/' &SSTC_3ANT3.GPES_SSTC_ELEMENT
    #debugd show 'Year Recalc/Month Recalc: ' &SSTC_3ANT3.GPES_YEAR_RECALC '/' &SSTC_3ANT3.GPES_MONTH_RECALC
    #debugd show 'TC contributing days:     ' &SSTC_3ANT3.GPES_SSTC_DAYS
    #debugd show 'TC Base Amount:           ' &SSTC_3ANT3.GPES_SSTC_AMOUNT

   !** Procedure to get the company code of the employee's contract id***!
   do GetEmployeeContractCompany
    #debugd show 'Job/contract company: ' &JOB.COMPANY '/' $EmpContractCompany
    #debugd show 'Job/FAN rslt table contracts: ' &JOB.CONTRACT_NUM '/' &SSTC_3ANT3.CONTRACT_NUM
    #debugd show ' '

      !**1648916000- Contributions pertaining to last 180days (across contracts) for same company as the TER one**!
   if $EmpContractCompany = &JOB.COMPANY
     if &SSTC_3ANT3.GPES_SSTC_ELEMENT = 'BA01' or &SSTC_3ANT3.GPES_SSTC_ELEMENT = 'BA21'
       let #Total-CC       =  #Total-CC + &SSTC_3ANT3.GPES_SSTC_AMOUNT
     else
       let #Total-Dsmpl      =  #Total-Dsmpl +  &SSTC_3ANT3.GPES_SSTC_AMOUNT
       if $sstc-Paymnt = $Prev-sstc-Paymnt and (&SSTC_3ANT3.GPES_SSTC_PAYMNT <> 'L03'
           AND &SSTC_3ANT3.GPES_SSTC_PAYMNT <> 'L09' and &SSTC_3ANT3.GPES_SSTC_PAYMNT <> 'L91'
           AND &SSTC_3ANT3.GPES_SSTC_PAYMNT <> 'L90')
         let #Ctz-Days         =  #Ctz-Days +  &SSTC_3ANT3.GPES_SSTC_DAYS
         !let $Prev-sstc-Paymnt =  $sstc-Paymnt - not req'd as the value of both the variables will the same
       end-if
   
   if $sstc-Paymnt = $Prev-sstc-Paymnt and (&SSTC_3ANT3.GPES_SSTC_PAYMNT = 'L03'
           or  &SSTC_3ANT3.GPES_SSTC_PAYMNT = 'L09' or &SSTC_3ANT3.GPES_SSTC_PAYMNT = 'L91'
           or  &SSTC_3ANT3.GPES_SSTC_PAYMNT = 'L90')
         let #Ctz-Days_L03         =  #Ctz-Days_L03 +  &SSTC_3ANT3.GPES_SSTC_DAYS
         !let $Prev-sstc-Paymnt =  $sstc-Paymnt - not req'd as the value of both the variables will the same
       end-if
   
     end-if
   end-if !end of if $EmpContractCompany = &JOB.COMPANY

    #debugd show 'Agregate CC/CP Base amount: ' #Total-CC '/' #Total-Dsmpl
    #debugd show 'Agregate contributing days: ' #Ctz-Days
    #debugd show '  '

FROM PS_GPES_SSTC_RS_VW  SSTC_3ANT3
    ,PS_GPES_SYS_CALEND CAL_3ANT3
WHERE SSTC_3ANT3.EMPLID = $Select-EMPLID
 AND SSTC_3ANT3.EMPL_RCD = #Select-EMPL-RCD

   !BRD Natural days count for IT PRORROGADA & AT/EP PRORROGADA
   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.
 AND (SSTC_3ANT3.GPES_SSTC_ELEMENT IN ('BA01','BA02')
      OR (SSTC_3ANT3.GPES_SSTC_ELEMENT IN ('BA21','BA22')
          AND ('A' = $CLI_VR_OPC_CLC_BRD
               OR ('A' <> $CLI_VR_OPC_CLC_BRD AND SSTC_3ANT3.GPES_SSTC_NOSALARY <> 'A')
              )
         )
     )
   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.

 AND SSTC_3ANT3.GPES_SSTC_PAYMNT NOT IN ('L13')
 AND SSTC_3ANT3.GPES_SSTC_LGL_CUST <> 'T'
 AND CAL_3ANT3.CALYEAR = GPES_YEAR_RECALC AND CAL_3ANT3.GPES_MONTH = GPES_MONTH_RECALC
 AND CAL_3ANT3.GPES_MONTH_BGN_DT >= $TC-Period-Begin_From AND CAL_3ANT3.GPES_MONTH_BGN_DT <= $TC-Period-Begin_To
  AND SSTC_3ANT3.SLICE_BGN_DT >= $Hire-Dt

GROUP BY SSTC_3ANT3.EMPLID, SSTC_3ANT3.GPES_YEAR_RECALC, SSTC_3ANT3.GPES_MONTH_RECALC, SSTC_3ANT3.GPES_SSTC_PAYMNT,
         SSTC_3ANT3.GPES_SSTC_ELEMENT, SSTC_3ANT3.CONTRACT_NUM
ORDER BY SSTC_3ANT3.EMPLID, SSTC_3ANT3.GPES_YEAR_RECALC DESC, SSTC_3ANT3.GPES_MONTH_RECALC DESC,
         SSTC_3ANT3.GPES_SSTC_PAYMNT DESC, SSTC_3ANT3.GPES_SSTC_ELEMENT

End-SELECT

    If $Base-printed = 'N'
        Do Print-Contribution-Ln-Ant-RE
    End-if

     ! Print employee totals
     !Do Format-Number(#Empl-Total-CC, $out, '999,999.99')
     !let $Out = lpad($out, 11, ' ')
     !print $Out                                                             ( #Totals-Line, 33)
     Do Format-Number(#Empl-Total-Dsmpl, $out, '999,999.99')
     let $Out = lpad($out, 11, ' ')
     print $Out                                                              ( #Totals-Line, 31)

  end-if !$JOB-Full-Part-Time = 'P'



  !*********** FULL TIME ***********!
  if $JOB-Full-Part-Time = 'F'  ! trabajador fijo
    do dtu-add-months ($TC-Period-Begin, -1, $TC-Period-Begin_1)
    !let #From-Month_1 =  substr($TC-Period-Begin_1, 6, 2)
    !let #From-Year_1  =  substr($TC-Period-Begin_1, 1, 4)
    !#debugd show 'From year/Month: ' #From-Year_1 '/' #From-Month_1
    do Convert-From-DTU-Date($TC-Period-Begin_1, $TC-Period-Begin_From)
    #debugd show 'TC results retrieval month: ' $TC-Period-Begin_From

    alter-printer point-size=8 font={COURIER_NEW}

    let #Total-CC     =  0
    let #Total-Dsmpl  =  0
    let #Ctz-Days     =  0
    let #Ctz-Days_L03     =  0
    let #Vactn-Total-CC = 0
    let #Vactn-Total-Dsmpl = 0
    let #Vactn-Ctz-Days = 0
    let #OT_hrs       =  0
    let $Prev-sstc-Paymnt = ' '

let $sql-statement = 'GPESFNRE.SQR,Print-Contribution-bases-RE,Select,PS_GPES_SSTC_RS_VW SSTC_ANT4'
Begin-SELECT on-error=SQL-Error
SSTC_ANT3.EMPLID
SSTC_ANT3.GPES_YEAR_RECALC
SSTC_ANT3.GPES_MONTH_RECALC
SSTC_ANT3.GPES_SSTC_ELEMENT
SSTC_ANT3.GPES_SSTC_PAYMNT
SSTC_ANT3.CONTRACT_NUM
SUM(SSTC_ANT3.GPES_SSTC_DAYS)    &SSTC_ANT3.GPES_SSTC_DAYS
SUM(SSTC_ANT3.GPES_SSTC_AMOUNT)  &SSTC_ANT3.GPES_SSTC_AMOUNT

    ! In case of litigation salaries we find L00 & L02 records in the table that make to print
    ! two lines in the report for the same month. We just want to print one line with the sum of
    ! L00 & L02 records for a month.
    let $sstc-Paymnt = &SSTC_ANT3.GPES_SSTC_PAYMNT
    if &SSTC_3ANT.GPES_SSTC_PAYMNT <> 'L13'
       let $sstc-Paymnt = 'L00'
    end-if

    if $Prev-sstc-Paymnt = ' '
       let $Prev-sstc-Paymnt =  $sstc-Paymnt
    end-if

    let #Prev-Year  =  &SSTC_ANT3.GPES_YEAR_RECALC
    let #Prev-Month =  &SSTC_ANT3.GPES_MONTH_RECALC

    let $mult_contract = &SSTC_ANT3.CONTRACT_NUM

    #debugd show 'TC Payment/Element:       ' &SSTC_ANT3.GPES_SSTC_PAYMNT '/' &SSTC_ANT3.GPES_SSTC_ELEMENT
    #debugd show 'Year Recalc/Month Recalc: ' &SSTC_ANT3.GPES_YEAR_RECALC '/' &SSTC_ANT3.GPES_MONTH_RECALC
    #debugd show 'TC contributing days:     ' &SSTC_ANT3.GPES_SSTC_DAYS
    #debugd show 'TC Base Amount:           ' &SSTC_ANT3.GPES_SSTC_AMOUNT

    !** Procedure to get the company code of the employee's contract id***!
    do GetEmployeeContractCompany
   #debugd show 'Job/contract company: ' &JOB.COMPANY '/' $EmpContractCompany
   #debugd show 'Job/FAN rslt table contracts: ' &JOB.CONTRACT_NUM '/' &SSTC_ANT3.CONTRACT_NUM
   #debugd show ' '

      !**1648916000- Contributions pertaining to last 180days (across contracts) for same company as the TER one**!
    if $EmpContractCompany = &JOB.COMPANY
      if &SSTC_ANT3.GPES_SSTC_ELEMENT = 'BA01' or &SSTC_ANT3.GPES_SSTC_ELEMENT = 'BA21'
        let #Total-CC   =  #Total-CC + &SSTC_ANT3.GPES_SSTC_AMOUNT
      else
        if &SSTC_ANT3.GPES_SSTC_ELEMENT = 'BA02' or &SSTC_ANT3.GPES_SSTC_ELEMENT = 'BA22'
          let #Total-Dsmpl      =  #Total-Dsmpl +  &SSTC_ANT3.GPES_SSTC_AMOUNT
          if $sstc-Paymnt = $Prev-sstc-Paymnt and (&SSTC_ANT3.GPES_SSTC_PAYMNT <> 'L03'
              AND &SSTC_ANT3.GPES_SSTC_PAYMNT <> 'L09' and &SSTC_ANT3.GPES_SSTC_PAYMNT <> 'L91'
              AND &SSTC_ANT3.GPES_SSTC_PAYMNT <> 'L90')
            let #Ctz-Days          =  #Ctz-Days +  &SSTC_ANT3.GPES_SSTC_DAYS
            !let $Prev-sstc-Paymnt =  $sstc-Paymnt - not required as the value of both the variables will the same
          end-if
  
   if $sstc-Paymnt = $Prev-sstc-Paymnt and (&SSTC_ANT3.GPES_SSTC_PAYMNT = 'L03'
              or &SSTC_ANT3.GPES_SSTC_PAYMNT = 'L09' or &SSTC_ANT3.GPES_SSTC_PAYMNT = 'L91'
              or &SSTC_ANT3.GPES_SSTC_PAYMNT= 'L90')
            let #Ctz-Days_L03          =  #Ctz-Days_L03 +  &SSTC_ANT3.GPES_SSTC_DAYS
            !let $Prev-sstc-Paymnt =  $sstc-Paymnt - not required as the value of both the variables will the same
          end-if
  
        else
          !** refer incident id:1649774001 for explantaions on the below code **!
          if &SSTC_ANT3.GPES_SSTC_ELEMENT = 'BA10' or &SSTC_ANT3.GPES_SSTC_ELEMENT = 'BA11'
            let #OT_hrs = #OT_hrs + &SSTC_ANT3.GPES_SSTC_AMOUNT
          End-if
        end-if
      end-if
    end-if !end of if $EmpContractCompany = &JOB.COMPANY

    #debugd show 'Agregate CC/CP Base amount: ' #Total-CC '/' #Total-Dsmpl
    #debugd show 'Agregate contributing days: ' #Ctz-Days
    #debugd show '  '

FROM PS_GPES_SSTC_RS_VW  SSTC_ANT3
    ,PS_GPES_SYS_CALEND CAL_ANT3
WHERE SSTC_ANT3.EMPLID = $Select-EMPLID
 AND SSTC_ANT3.EMPL_RCD = #Select-EMPL-RCD

   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.
 AND (SSTC_ANT3.GPES_SSTC_ELEMENT IN ('BA01','BA02','BA42','BA10','BA11')
      OR (SSTC_ANT3.GPES_SSTC_ELEMENT IN ('BA21','BA22')
          AND ('A' = $CLI_VR_OPC_CLC_BRD
               OR ('A' <> $CLI_VR_OPC_CLC_BRD AND SSTC_ANT3.GPES_SSTC_NOSALARY <> 'A')
              )
         )
     )
   !Includes/excludes 'contributing by minimum base' base upon value of CLI VR OPC CLC BRD.

 AND SSTC_ANT3.GPES_SSTC_PAYMNT NOT IN ('L13')
 AND SSTC_ANT3.GPES_SSTC_LGL_CUST <> 'T'
 !AND SSTC_ANT.GPES_YEAR_RECALC = #From-Year_1 AND SSTC_ANT.GPES_MONTH_RECALC = #From-Month_1
 AND CAL_ANT3.CALYEAR = GPES_YEAR_RECALC AND CAL_ANT3.GPES_MONTH = GPES_MONTH_RECALC
 AND CAL_ANT3.GPES_MONTH_BGN_DT >= $TC-Period-Begin_From AND CAL_ANT3.GPES_MONTH_BGN_DT <= $TC-Period-Begin_From
 AND SSTC_ANT3.SLICE_BGN_DT >= $Hire-Dt

GROUP BY SSTC_ANT3.EMPLID, SSTC_ANT3.GPES_YEAR_RECALC, SSTC_ANT3.GPES_MONTH_RECALC, SSTC_ANT3.GPES_SSTC_PAYMNT,
         SSTC_ANT3.GPES_SSTC_ELEMENT,SSTC_ANT3.CONTRACT_NUM
ORDER BY SSTC_ANT3.EMPLID, SSTC_ANT3.GPES_YEAR_RECALC DESC, SSTC_ANT3.GPES_MONTH_RECALC DESC,
         SSTC_ANT3.GPES_SSTC_PAYMNT DESC, SSTC_ANT3.GPES_SSTC_ELEMENT

End-SELECT

    Do Print-Contribution-Ln-MES-RE

  end-if !$JOB-Full-Part-Time = 'F'

end-procedure

!************************************************************************
! Procedure Print-Contribution-Ln-Ant-RE
!************************************************************************
begin-procedure Print-Contribution-Ln-Ant-RE
#debug do Fin-Debug-Msg('Print-Contribution-Ln-Ant-RE')

  let #Empl-Total-CC    =  #Empl-Total-CC + #Total-CC
  let #Empl-Total-Dsmpl =  #Empl-Total-Dsmpl +  #Total-Dsmpl

  If $Naturual-Days-Count = 'Y'
    #Debugd show 'Year/Month/Day: ' #Prev-Year '/' #Prev-Month '/01'
    do Format-DateTime($Prev-Bgn-Dt, $Prev-Bgn-Dt-CMP, {DEFCMP}, '', '')
    do Format-DateTime($Prev-End-Dt, $Prev-End-Dt-CMP, {DEFCMP}, '', '')
    do Format-DateTime($Hire-Dt, $Hire-Dt-CMP, {DEFCMP}, '', '')
    #Debugd show 'Month BgnDt: ' $Prev-Bgn-Dt-CMP ' Month EndDt: '$Prev-End-Dt-CMP ' Hire Dt: ' $Hire-Dt-CMP
    If $Prev-Bgn-Dt-CMP < $Hire-Dt-CMP
        and $Hire-Dt-CMP <= $Prev-End-Dt-CMP
      do Convert-To-DTU-Date($Hire-Dt, $TC-Period-Begin)
    Else
      let $TC-Period-Begin = to_char(#Prev-Year) || '-' || to_char(#Prev-Month) || '-01'
    End-If
    do DTU-Month-End($TC-Period-Begin, $TC-Period-End)
    do dtu-diff-days($TC-Period-Begin, $TC-Period-End, #Natural-Days-Wk)
    let #Natural-Days-Wk = #Natural-Days-Wk + 1

    #debugd show 'Converting dates...'
    do Convert-From-DTU-Date($TC-Period-Begin, $Month-Bgn-Dt)
    do Convert-From-DTU-Date($TC-Period-End, $Month-End-Dt)
    #debugd show 'Contrib by min. base bgn/end dates: ' $Month-Bgn-Dt '/' $Month-End-Dt

    Let #Ctz-B-Min-Days = 0

    #debugd show '$CLI_VR_OPC_CLC_BRD(1): ' $CLI_VR_OPC_CLC_BRD
    If $CLI_VR_OPC_CLC_BRD <> 'A'
    #debugd show '$CLI_VR_OPC_CLC_BRD(2): ' $CLI_VR_OPC_CLC_BRD
      let $sql-statement = 'GPESFNRE.SQR,Print-Contribution-Ln-Ant-RE,Select,PS_GP_PYE_PRC_STAT PPRC'
Begin-SELECT on-error=SQL-Error
SUM(A3.CALC_RSLT_VAL)    &A3.CTZ_B_MIN_DAYS
    #debugd show '$CLI_VR_OPC_CLC_BRD(3): ' $CLI_VR_OPC_CLC_BRD
    Let #Ctz-B-Min-Days = &A3.CTZ_B_MIN_DAYS

FROM PS_GP_PYE_PRC_STAT PPRC3
   , PS_GP_PIN B3
   , PS_GP_RSLT_ACUM A3
WHERE PPRC3.EMPLID = $Select-EMPLID
  AND PPRC3.EMPL_RCD = #Select-EMPL-RCD
  AND PPRC3.EMPLID = A3.EMPLID
  AND PPRC3.EMPL_RCD = A3.EMPL_RCD
  AND PPRC3.CAL_RUN_ID = A3.CAL_RUN_ID
  AND PPRC3.GP_PAYGROUP = A3.GP_PAYGROUP
  AND PPRC3.CAL_ID = A3.CAL_ID
  AND PPRC3.ORIG_CAL_RUN_ID = A3.ORIG_CAL_RUN_ID
  AND PPRC3.CALC_TYPE = 'P'
  AND PPRC3.RSLT_VER_NUM = (SELECT MAX(RSLT_VER_NUM) FROM PS_GP_PYE_PRC_STAT
                            WHERE EMPLID = PPRC3.EMPLID 
                              AND EMPL_RCD = PPRC3.EMPL_RCD 
                              AND GP_PAYGROUP = PPRC3.GP_PAYGROUP 
                              AND CAL_ID = PPRC3.CAL_ID 
                              AND ORIG_CAL_RUN_ID = PPRC3.ORIG_CAL_RUN_ID)
  AND PPRC3.RSLT_REV_NUM = (SELECT MAX(RSLT_REV_NUM) FROM PS_GP_PYE_PRC_STAT
                            WHERE EMPLID = PPRC3.EMPLID 
                              AND EMPL_RCD = PPRC3.EMPL_RCD 
                              AND GP_PAYGROUP = PPRC3.GP_PAYGROUP 
                              AND CAL_ID = PPRC3.CAL_ID 
                              AND ORIG_CAL_RUN_ID = PPRC3.ORIG_CAL_RUN_ID)
  AND B3.PIN_CODE ='AUS AC D CTZ B MIN ESP'
  AND A3.PIN_NUM = B3.PIN_NUM
  AND A3.SLICE_BGN_DT >= $Month-Bgn-Dt AND A3.SLICE_END_DT <= $Month-End-Dt
End-SELECT

      #debugd show 'Contrib by min. base days: ' #Ctz-B-Min-Days
    End-If
    #debugd show '$CLI_VR_OPC_CLC_BRD(1): ' $CLI_VR_OPC_CLC_BRD ' (' #Natural-Days-Wk ' - ' #Ctz-B-Min-Days ')'
    Let #Ctz-days = #Natural-Days-Wk - #Ctz-B-Min-Days
    End-If

   if (#Ctz-Days <> 0 or #Ctz-Days_L03 <> 0) and #Total-CC <> 0 and #Total-Dsmpl <> 0
       if #Ctz-Days=0
       let #Ctz-Days=#Ctz-Days_L03
       end-if 
    !if #prev_month_imp <> #Prev-Month
        print #Prev-Year                                            (#linea_ant1, 03)    EDIT '9999'
        print #Prev-Month                                           ( , 11)   EDIT '99'
        Do Format-Number(#Ctz-Days, $out, '999')
        let $Out = lpad($out, 3, ' ')
        print $out                                                  (  , 17)
        !Do Format-Number(#Total-CC, $out, '999,999.99')
        !let $Out = lpad($out, 11, ' ')
        !print $Out                                                 (  , 33)
        Do Format-Number(#Total-Dsmpl, $out, '999,999.99')
        let $Out = lpad($out, 11, ' ')
        print $Out                                                  (  , 31)
    !   let #prev_month_imp = #Prev-Month
        let #linea_ant1 = #linea_ant1 + 2
    !end-if
   end-if

  let $Base-printed = 'Y'

end-procedure


!************************************************************************
! Procedure Print-Contribution-Ln-MES-RE
!************************************************************************
begin-procedure Print-Contribution-Ln-MES-RE
#debug do Fin-Debug-Msg('Print-Contribution-Ln-MES-RE')

  !** refer incident id:1649774001 for explantaions on the below code **!
  !** The below check is made only if the employee has OT earnings **!
  If #OT_hrs > 0
     let #denormalzdCP = #Total-CC + #OT_hrs
     if #denormalzdCP > #Total-Dsmpl
        let #OTbetCeilings = #OT_hrs - (#denormalzdCP - #Total-Dsmpl)
     else
        let #OTbetCeilings = #OT_hrs
     End-if
     let #Total-Dsmpl = #Total-Dsmpl - #OTbetCeilings
  End-if

  if (#Ctz-Days <> 0 or #Ctz-Days_L03 <> 0)  and #Total-CC <> 0 and #Total-Dsmpl <> 0
  
     if #Ctz-Days = 0
     let #Ctz-Days =#Ctz-Days_L03
     end-if
 
     !if #prev_month_imp <> #Prev-Month
        !Do Format-Number(#Total-CC, $out, '999,999.99')
        !let $Out = lpad($out, 11, ' ')
        !print $Out                                                 (#line_bc, {EMPL_BCC_FLD})
        !Do Format-Number(#Ctz-Days, $out, '999')
        !let $Out = lpad($out, 3, ' ')
        !print $Out                                                 (#line_bc, {EMPL_DAY_CC_FLD})
        Do Format-Number(#Total-Dsmpl, $out, '9,999,999.99')
        let $Out = lpad($out, 11, ' ')
        print $Out                                                  (#line_bc, {EMPL_BCP_FLD})
        Do Format-Number(#Ctz-Days, $out, '9,999')
        let $Out = lpad($out, 3, ' ')
        print $Out                                                  (#line_bc, {EMPL_DAY_CP_FLD})
 
        If #OT_hrs > 0
           !Do Format-Number(#OT_hrs, $out, '999,999.99')
           !let $Out = lpad($out, 11, ' ')
           !print $Out                                              (#line_overtime, {EMPL_BCP_FLD})

           !Do Format-Number(#Ctz-Days, $out, '999')
           !let $Out = lpad($out, 3, ' ')
           !print $Out                                              (#line_overtime, {EMPL_DAY_CP_FLD})

           Do Format-Number(#OT_hrs, $out, '9,999,999.99')
           let $Out = lpad($out, 11, ' ')
           print $Out                                               (#line_overtime, {EMPL_BCP_FLD})

           !Do Format-Number(#Ctz-Days, $out, '999')
           !let $Out = lpad($out, 3, ' ')
           !print $Out                                              (#line_overtime, {EMPL_DAY_CC_FLD})
       End-if
     !    let #prev_month_imp = #Prev-Month
     !end-if
  end-if

end-procedure


