!***********************************************************************
!  GPMXPE02:  Accumulators Report                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  30715275                                            *
!                                                                      *
!***********************************************************************

#define c1 1
#define Cab 2
#define Cbb 13
#define c2 25
#define c3 36
#define c4 47
#define c5 58
#define c6 69
#define c7 80
#define c8 91
#define c9 102
#define c10 113
#define c11 124
#define c12 135
#define c13 146
#define c14 157
#define c15a 155
#define c15b 163

#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
       Type=HPLASERJET
       Font=5
       Point-Size=8
       Pitch=17
       Symbol-Set=0U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
       Orientation=landscape
       Top-Margin= .4
       Left-Margin=.60
       Max-Lines=58
       Max-Columns=177
       Char-Width=4.1      ! 7.2
       Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
       Printer-Type=HPLASERJET
       LayOut=THIS_REPORT
 End-Declare

end-Setup

begin-report
    do Init-DateTime
    do Init-Number
    do Stdapi-Init
    do Get-Current-DateTime
    do Report-Translation   
    do Init-Report
    do Process-Main
    do Stdapi-Term
    do Reset
end-report

begin-procedure Init-Report
  Let #fontstd  = 5
  Let #sizestd  = 6
    move 'GPMXPE02' to $ReportID
    move 'Acumulados Nómina' to $ReportTitle
    display $ReportID
    display $ReportTitle
    let $Version = '2020 PUM35.01'
    display $Version
    date-time () hh:mi:ss &timeBegan
    display 'Report Began: ' noline
    display &timeBegan
end-procedure

begin-heading 8
    Alter-Printer Point-size = 8 Font-Type = Proportional Font = 5
    uppercase $TTitle1
    print 'PeopleSoft'        (1,)    center
    print $TTitle1            (+1,40) center
    print $TReport            (3,1)
    print $ReportID           (0,{Cbb})    
    print $TPage              (3,{c15a})
    page-number               (0,{c15b})
    print $TCompany           (4,1)
    print $Company            (0,{Cbb})
    print '    '              ()
    print $CompanyName        ()
    If $printGPPaygroup = 'Y'      
       let  $Period = ltrim(rtrim(($TPeriod || '    ' || $Period), ' '), ' ')
       print $Period          (5,40)    center    
       print $TPayGroup       (5,{c1})  
       print $GPPaygroup      (0,{Cbb})  
    else
       print $TPeriod         (5,{c1})        
       print $Period          (0,{Cbb})  
    end-if
    print $THour              (4,{c15a})
    print $ReportTime         (0,{c15b})
    print $TDate              (5,{c15a})
    print $ReportDate         (0,{c15b})

    print '='                 (+1,1,155) fill
    print $TPin_Name          (+1,{c1})
    
    Let $LabelIni  = $TMonth01                                                    
    Do Adjust-Month
    
    print $TMonth             (0,{c2})
    
    Let $LabelIni  = $TMonth02                                                    
    Do Adjust-Month
    
    print $TMonth             (0,{c3})   
    
    Let $LabelIni  = $TMonth03                                                    
    Do Adjust-Month
    
    print $TMonth             (0,{c4})   
   
    Let $LabelIni  = $TMonth04                                                    
    Do Adjust-Month
   
    print $TMonth             (0,{c5})  
   
    Let $LabelIni  = $TMonth05                                                    
    Do Adjust-Month
   
    print $TMonth             (0,{c6})   
   
    Let $LabelIni  = $TMonth06                                                   
    Do Adjust-Month
    print $TMonth             (0,{c7})   
   
    Let $LabelIni  = $TMonth07                                                  
    Do Adjust-Month
    print $TMonth             (0,{c8})  
    
    Let $LabelIni  = $TMonth08                                                  
    Do Adjust-Month
    print $TMonth             (0,{c9})   
   
    Let $LabelIni  = $TMonth09                                                    
    Do Adjust-Month
    print $TMonth             (0,{c10})  
   
    Let $LabelIni  = $TMonth10                                                   
    Do Adjust-Month
    print $TMonth             (0,{c11})  
    
    Let $LabelIni  = $TMonth11                                                  
    Do Adjust-Month
    print $TMonth             (0,{c12})  
    
    Let $LabelIni  = $TMonth12                                                  
    Do Adjust-Month
    print $TMonth             (0,{c13})  
    
    Let $LabelIni  = $TTotal4                                                 
    Do Adjust-Month
    print $TMonth             (0,{c14})  
    print '='                 (+1,1,155) fill
    
    Alter-Printer Point-size = 7 Font-Type = Proportional Font = 5
 
end-heading
Begin-Procedure Adjust-Month
  Let $TMonth = ''
  LET $LabelIni    = Ltrim(RTRIM($LabelIni,' '), ' ')
  LET #LabelLength = LENGTH($LabelIni)

  LET #SPACES = 18 - #LabelLength

  LET #CONT = 1
  WHILE #CONT <= #SPACES
      LET $LabelIni = ' ' || $LabelIni
!      SHOW $LabelIni
      ADD 1 TO #CONT
  END-WHILE
  
  LET $TMonth = $LabelIni
  Let $LabelIni = ''

End-Procedure Adjust-Month


!**************************************
begin-procedure Select-Parameters
!show '** Select-Parameters **'
!**************************************
Let $FormatID = ''
Let $printGPPaygroup = 'N' 
begin-select
P.COMPANY
P.GP_PAYGROUP
P.GPMX_BALANCE_YEAR
P.GPMX_MONTH_FROM
P.GPMX_MONTH_THRU
P.GPMX_FORMAT_ID

  let $Company    = rtrim(&P.COMPANY, ' ')
  let $GPPaygroup = rtrim(&P.GP_PAYGROUP, ' ')
  let #Year       = &P.GPMX_BALANCE_YEAR
  let $Year       = to_char(&P.GPMX_BALANCE_YEAR)
  let $MonthFrom  = rtrim(&P.GPMX_MONTH_FROM, ' ')
  let $MonthThru  = rtrim(&P.GPMX_MONTH_THRU, ' ')
  Let $FormatId   = Rtrim(&P.GPMX_FORMAT_ID, ' ')
  Let $BeginDt    = $Year  || '-' || $MonthFrom || '-01'
  Let $EndDt      = $Year  || '-' || $MonthThru || '-01'
              
  Do dtu-month-end($EndDT, $EndDT)
  Do convert-from-dtu-date($BeginDt ,$BeginDt)
  Do convert-from-dtu-date($EndDT ,$EndDT)
  Do convert-to-dtu-date($BeginDt ,$BeginDt2)
  Do convert-to-dtu-date($EndDT ,$EndDT2)
  
  let $Period = $BeginDt2 || ' / ' || $EndDT2
   
  if $GPPaygroup <> ''
     let $Query = ' AND J.GP_PAYGROUP = ' || '''' || $GPPaygroup || ''''    
     Let $printGPPaygroup = 'Y' 
  end-if
  
  do Get-Company-Data-Mex
  do Get-FormatID
     
FROM  PS_GPMX_RC_ACCUM P
WHERE P.OPRID = $prcs_oprid
AND   P.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure Select-Parameters

!**************************************
begin-procedure Init-Vars1
!show '** Init-Vars1 **'
!**************************************
   let #Month01  = 0
   let #Month02  = 0
   let #Month03  = 0
   let #Month04  = 0
   let #Month05  = 0
   let #Month06  = 0
   let #Month07  = 0
   let #Month08  = 0
   let #Month09  = 0
   let #Month10  = 0
   let #Month11  = 0
   let #Month12  = 0
   let #ElementT = 0
end-procedure Init-Vars1

!**************************************
begin-procedure Init-Vars2
!show '** Init-Vars2 **'
!**************************************
   let #MthTotalED01 = 0
   let #MthTotalED02 = 0
   let #MthTotalED03 = 0
   let #MthTotalED04 = 0
   let #MthTotalED05 = 0
   let #MthTotalED06 = 0
   let #MthTotalED07 = 0
   let #MthTotalED08 = 0
   let #MthTotalED09 = 0
   let #MthTotalED10 = 0
   let #MthTotalED11 = 0
   let #MthTotalED12 = 0
   let #ElementTED   = 0
end-procedure Init-Vars2

!**************************************
begin-procedure Init-Vars3
!show '** Init-Vars3 **'
!**************************************
   let #MthTotalPG01 = 0
   let #MthTotalPG02 = 0
   let #MthTotalPG03 = 0
   let #MthTotalPG04 = 0
   let #MthTotalPG05 = 0
   let #MthTotalPG06 = 0
   let #MthTotalPG07 = 0
   let #MthTotalPG08 = 0
   let #MthTotalPG09 = 0
   let #MthTotalPG10 = 0
   let #MthTotalPG11 = 0
   let #MthTotalPG12 = 0
   let #ElementTGP   = 0
end-procedure Init-Vars3

!**************************************
begin-procedure Process-Main
#debug show '* Process-Main'
!**************************************
  Do Select-Parameters  
  Let #ElementTCo = 0
  Do Init-Vars1
  Do Init-Vars2
  Do Init-Vars3
  if $GPPaygroup <> ''
     Do Process-Ern-Ded
  else
     Do Process-by-GPPaygroup
  end-if
end-procedure Process-Main

!**************************************
begin-procedure Get-FormatID
!show '** Get-FormatID **'
!show '   $FormatID: ' $FormatID
!**************************************
begin-select
FO.GPMX_PIN_PSLP1_NUM
FO.GPMX_PIN_PSLP2_NUM
FO.GPMX_PIN_PSLP3_NUM
FO.GPMX_EARN_IE
FO.GPMX_DED_IE
FO.EFFDT

  Let #ErnTotal    = &FO.GPMX_PIN_PSLP1_NUM  
  Let #ErnTotal    = &FO.GPMX_PIN_PSLP2_NUM  
  Let #PayNet      = &FO.GPMX_PIN_PSLP3_NUM
  Let $IncludeEarn = Rtrim(&FO.GPMX_EARN_IE, ' ') 
  Let $IncludeDed  = Rtrim(&FO.GPMX_DED_IE, ' ')
  Let $EffFormatID = &FO.EFFDT
  
  !******************** 
  #debug show '   $IncludeEarn: ' $IncludeEarn
  
  let #pin_nmp     = #ErnTotal
  let $pin_erntot  = $pin_descr

  let #pin_nmp     =  #DED_TOT
  let $pin_dedtot  = $pin_descr

  let #pin_nmp     = #NET_PAY
  let $pin_netpay  = $pin_descr

FROM PS_GPMX_PAYSL_FORM FO
WHERE FO.GPMX_FORMAT_ID = $FormatID
AND   FO.EFF_STATUS     = 'A'
AND   FO.EFFDT          = (SELECT MAX(FO1.EFFDT) 
                          FROM PS_GPMX_PAYSL_FORM FO1
                          where FO1.GPMX_FORMAT_ID  =  FO.GPMX_FORMAT_ID
                          and   FO1.EFF_STATUS      =  FO.EFF_STATUS
                          and   FO1.EFFDT          <= $EndDt)
end-select
end-procedure Get-FormatID

!**************************************
begin-procedure Process-Ern-Ded
!show '* Process-Ern-Ded'
!date-time () hh:mi:ss &timeBegan
!display &timeBegan

  Let $TConcept = ''

  If $IncludeEarn = '10'
     Do Process-Include-Ern 
  else
     Do Process-Exclude-Ern 
  end-if
  
  If $IncludeDed = '10'
     Do Process-Include-Ded 
  else
     Do Process-Exclude-Ded
  end-if

  Do Print-PayGroup-Total
  Do Print-Company-Total

end-procedure Process-Ern-Ded

!**************************************
begin-procedure Process-by-GPPaygroup
!show '* Process-by-GPPaygroup *'
!date-time () hh:mi:ss &timeBegan
!display &timeBegan
!**************************************
begin-Select DISTINCT
J.GP_PAYGROUP   () On-Break Print=Never After=Print-PayGroup-Total Level=1
  
  Let $GPPaygroup = Rtrim(&J.GP_PAYGROUP, ' ') 
  
   If $IncludeEarn = '10'
     Do Process-Include-Ern 
  else
     Do Process-Exclude-Ern 
  end-if
  
  If $IncludeDed = '10'
     Do Process-Include-Ded 
  else
     Do Process-Exclude-Ded
  end-if

FROM PS_JOB J 
WHERE J.COMPANY          = $Company
AND   J.EFFDT            = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $EndDt )
AND   J.EFFSEQ           = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
ORDER BY J.GP_PAYGROUP 
End-Select

Do Print-Company-Total

end-procedure Process-by-GPPaygroup

!**************************************
begin-procedure Process-Include-Ern
#debug show '* Process-Include-Ern'
date-time () hh:mi:ss &timeBegan
#debug show &timeBegan
#DEBUG  show '$GPPaygroup:  ' $GPPaygroup
#debug  show '$FormatID:    ' $FormatID
#debug  show '$EffFormatID: ' $EffFormatID
#debug  show '$BeginDt:     ' $BeginDt
#debug  show '$EndDt:       ' $EndDt
!**************************************
Let $TConcept = $TErn     
Let $TConc    = 'ERN' 
Let $TTitleED = $TTotal5  

!Print $TConcept       (+1,{c1}) Bold

begin-SELECT
PRCST.PYMT_DT 
BB.SEQNUM
AA.PIN_NM            () On-Break Print=Never After=Print-Member-Detail Save=$PinNameOld Level=3
AA.PIN_NUM
SUM(AA.CALC_RSLT_VAL + AA.CALC_ADJ_VAL ) &AA.CALC_RSLT_VAL

  Let #PinNum   = &AA.PIN_NUM 
  Let $PinName  = Rtrim(&AA.PIN_NM, ' ' )   
  Let #Ammount  = &AA.CALC_RSLT_VAL

  Do Convert-To-DTU-Date(&PRCST.PYMT_DT ,$PymtDt)
  Let $Month = Substr($PymtDt,6,2)
   
  Do Calculate-Month 

FROM PS_JOB J
    ,PS_GP_RSLT_ED_VW   AA 
    ,PS_GPMX_PAYSL_F_ER BB
    ,PS_GP_PYE_PRC_STAT PRCST
WHERE J.COMPANY          = $Company
AND   J.GP_PAYGROUP      = $GPPaygroup
AND   J.GP_PAYGROUP      = AA.GP_PAYGROUP
AND   J.GP_PAYGROUP      = PRCST.GP_PAYGROUP
AND   J.EMPLID           = AA.EMPLID
AND   J.EMPLID           = PRCST.EMPLID
AND   J.EMPL_RCD         = AA.EMPL_RCD
AND   J.EMPL_RCD         = PRCST.EMPL_RCD
AND   J.EFFDT            = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $EndDt)
AND   J.EFFSEQ           = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
AND   BB.GPMX_FORMAT_ID  = $FormatID
AND   BB.EFFDT           = $EffFormatID
AND   BB.EFF_STATUS      = 'A'
AND   BB.PIN_ERN_NUM     = AA.PIN_NUM
AND   AA.PIN_TYPE        = 'ER'
AND   PRCST.CAL_RUN_ID   = AA.CAL_RUN_ID 
AND   PRCST.CAL_ID       = AA.CAL_ID   
AND   PRCST.ORIG_CAL_RUN_ID = AA.ORIG_CAL_RUN_ID 
AND   PRCST.CALC_TYPE    = 'P'
AND   PRCST.PYMT_DT     >= $BeginDt
AND   PRCST.PYMT_DT     <= $EndDt
AND   PRCST.RSLT_VER_NUM = (SELECT MAX(PS.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PS
                           WHERE PS.EMPLID    = PRCST.EMPLID
                           AND PS.CAL_RUN_ID  = PRCST.CAL_RUN_ID
                           AND PS.EMPL_RCD    = PRCST.EMPL_RCD
                           AND PS.GP_PAYGROUP = PRCST.GP_PAYGROUP
                           AND PS.CAL_ID      = PRCST.CAL_ID)
AND   AA.RSLT_SEG_NUM = (SELECT MAX(SEG.RSLT_SEG_NUM) 
                           FROM PS_GP_RSLT_ED_VW SEG
                           WHERE SEG.EMPLID      = AA.EMPLID
                           AND   SEG.CAL_RUN_ID  = AA.CAL_RUN_ID
                           AND   SEG.EMPL_RCD    = AA.EMPL_RCD
                           AND   SEG.GP_PAYGROUP = AA.GP_PAYGROUP
                           AND   SEG.CAL_ID      = AA.CAL_ID)                           
AND   PRCST.RSLT_REV_NUM = 1
AND   PRCST.PYE_PRC_IND  = 'N'
AND   PRCST.SEL_STAT     IN ('A', 'I')
AND   PRCST.SEL_ACTION   = 'C'
GROUP BY BB.SEQNUM, AA.PIN_NM, AA.PIN_NUM, PRCST.PYMT_DT
ORDER BY BB.SEQNUM, AA.PIN_NM, AA.PIN_NUM, PRCST.PYMT_DT
end-SELECT

Do Print-ED-Total

end-procedure Process-Include-Ern

!**************************************
begin-procedure Process-Exclude-Ern
show '* Process-Exclude-Ern *'
date-time () hh:mi:ss &timeBegan
display &timeBegan
!**************************************
Let $TConcept = $TErn  
Let $TConc    = 'ERN' 
Let $TTitleED = $TTotal5  

!Print $TConcept       (+1,{c1}) Bold

begin-select    
PRCST2.PYMT_DT 
AA2.PIN_NM            () On-Break Print=Never After=Print-Member-Detail Save=$PinNameOld Level=3
AA2.PIN_NUM
SUM(AA2.CALC_RSLT_VAL + AA2.CALC_ADJ_VAL ) &AA2.CALC_RSLT_VAL

  Let #PinNum   = &AA2.PIN_NUM 
  Let $PinName  = Rtrim(&AA2.PIN_NM, ' ' )   
  Let #Ammount  = &AA2.CALC_RSLT_VAL

  Do Convert-To-DTU-Date(&PRCST2.PYMT_DT ,$PymtDt)
  Let $Month = Substr($PymtDt,6,2)
   
  Do Calculate-Month 
  
FROM PS_JOB J
    ,PS_GP_RSLT_ED_VW   AA2 
    ,PS_GP_PYE_PRC_STAT PRCST2
WHERE J.COMPANY          = $Company
AND   J.GP_PAYGROUP      = $GPPaygroup
AND   J.GP_PAYGROUP      = AA2.GP_PAYGROUP
AND   J.GP_PAYGROUP      = PRCST2.GP_PAYGROUP
AND   J.EMPLID           = AA2.EMPLID
AND   J.EMPLID           = PRCST2.EMPLID  
AND   J.EMPL_RCD         = AA2.EMPL_RCD
AND   J.EMPL_RCD         = PRCST2.EMPL_RCD
AND   J.EFFDT            = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $EndDt)
AND   J.EFFSEQ           = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
AND   AA2.PIN_NUM   NOT IN (SELECT BB.PIN_ERN_NUM
                            FROM PS_GPMX_PAYSL_F_ER BB
                            WHERE BB.GPMX_FORMAT_ID  = $FormatID
                            AND   BB.EFFDT           = $EffFormatID
                            AND   BB.EFF_STATUS      = 'A')     
AND   AA2.PIN_TYPE        = 'ER'
AND   PRCST2.CAL_RUN_ID   = AA2.CAL_RUN_ID 
AND   PRCST2.CAL_ID       = AA2.CAL_ID   
AND   PRCST2.ORIG_CAL_RUN_ID = AA2.ORIG_CAL_RUN_ID 
AND   PRCST2.CALC_TYPE    = 'P'
AND   PRCST2.PYMT_DT     >= $BeginDt
AND   PRCST2.PYMT_DT     <= $EndDt
AND   PRCST2.RSLT_VER_NUM = (SELECT MAX(PS.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PS
                           WHERE PS.EMPLID    = PRCST2.EMPLID
                           AND PS.CAL_RUN_ID  = PRCST2.CAL_RUN_ID
                           AND PS.EMPL_RCD    = PRCST2.EMPL_RCD
                           AND PS.GP_PAYGROUP = PRCST2.GP_PAYGROUP
                           AND PS.CAL_ID      = PRCST2.CAL_ID)
AND   AA2.RSLT_SEG_NUM = (SELECT MAX(SEG.RSLT_SEG_NUM) 
                           FROM PS_GP_RSLT_ED_VW SEG
                           WHERE SEG.EMPLID      = AA2.EMPLID
                           AND   SEG.CAL_RUN_ID  = AA2.CAL_RUN_ID
                           AND   SEG.EMPL_RCD    = AA2.EMPL_RCD
                           AND   SEG.GP_PAYGROUP = AA2.GP_PAYGROUP
                           AND   SEG.CAL_ID      = AA2.CAL_ID)   
AND   PRCST2.RSLT_REV_NUM = 1
AND   PRCST2.PYE_PRC_IND  = 'N'
AND   PRCST2.SEL_STAT     IN ('A', 'I')
AND   PRCST2.SEL_ACTION   = 'C'
GROUP BY AA2.PIN_NM, AA2.PIN_NUM, PRCST2.PYMT_DT
ORDER BY AA2.PIN_NM, AA2.PIN_NUM, PRCST2.PYMT_DT
end-select

Do Print-ED-Total

end-procedure Process-Exclude-Ern

!**************************************
begin-procedure Process-Include-Ded
#debug show '* Process-Include-Ded *'
date-time () hh:mi:ss &timeBegan
#debug show &timeBegan
!**************************************
Let $TConcept = $TDed 
Let $TConc    = 'DED' 
Let $TTitleED = $TTotal6

!Print $TConcept       (+1,{c1}) Bold

begin-select    
PRCST3.PYMT_DT 
BB3.SEQNUM
AA3.PIN_NM            () On-Break Print=Never After=Print-Member-Detail Save=$PinNameOld Level=3
AA3.PIN_NUM
SUM(AA3.CALC_RSLT_VAL + AA3.CALC_ADJ_VAL ) &AA3.CALC_RSLT_VAL
SUM(AA3.UNIT_RSLT_VAL + AA3.UNIT_ADJ_VAL ) &AA3.UNIT_RSLT_VAL

  Let #PinNum   = &AA3.PIN_NUM 
  Let $PinName  = Rtrim(&AA3.PIN_NM, ' ' )   
  Let #Ammount  = &AA3.CALC_RSLT_VAL

  Do Convert-To-DTU-Date(&PRCST3.PYMT_DT ,$PymtDt)
  Let $Month = Substr($PymtDt,6,2)
    
  Do Calculate-Month 

FROM PS_JOB J
    ,PS_GP_RSLT_ED_VW   AA3 
    ,PS_GPMX_PAYSL_F_DE BB3
    ,PS_GP_PYE_PRC_STAT PRCST3
WHERE J.COMPANY          = $Company
AND   J.GP_PAYGROUP      = $GPPaygroup
AND   J.GP_PAYGROUP      = AA3.GP_PAYGROUP
AND   J.GP_PAYGROUP      = PRCST3.GP_PAYGROUP
AND   J.EMPLID           = AA3.EMPLID
AND   J.EMPLID           = PRCST3.EMPLID
AND   J.EMPL_RCD         = AA3.EMPL_RCD
AND   J.EMPL_RCD         = PRCST3.EMPL_RCD
AND   J.EFFDT            = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $EndDt)
AND   J.EFFSEQ           = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
AND   BB3.GPMX_FORMAT_ID  = $FormatID
AND   BB3.EFFDT           = $EffFormatID
AND   BB3.EFF_STATUS      = 'A'
AND   BB3.PIN_DED_NUM     = AA3.PIN_NUM
AND   AA3.PIN_TYPE        = 'DD'
AND   PRCST3.CAL_RUN_ID   = AA3.CAL_RUN_ID 
AND   PRCST3.CAL_ID       = AA3.CAL_ID   
AND   PRCST3.ORIG_CAL_RUN_ID = AA3.ORIG_CAL_RUN_ID 
AND   PRCST3.CALC_TYPE    = 'P'
AND   PRCST3.PYMT_DT     >= $BeginDt
AND   PRCST3.PYMT_DT     <= $EndDt
AND   PRCST3.RSLT_VER_NUM = (SELECT MAX(PS.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PS
                           WHERE PS.EMPLID    = PRCST3.EMPLID
                           AND PS.CAL_RUN_ID  = PRCST3.CAL_RUN_ID
                           AND PS.EMPL_RCD    = PRCST3.EMPL_RCD
                           AND PS.GP_PAYGROUP = PRCST3.GP_PAYGROUP
                           AND PS.CAL_ID      = PRCST3.CAL_ID)
AND   AA3.RSLT_SEG_NUM = (SELECT MAX(SEG.RSLT_SEG_NUM) 
                           FROM PS_GP_RSLT_ED_VW SEG
                           WHERE SEG.EMPLID      = AA3.EMPLID
                           AND   SEG.CAL_RUN_ID  = AA3.CAL_RUN_ID
                           AND   SEG.EMPL_RCD    = AA3.EMPL_RCD
                           AND   SEG.GP_PAYGROUP = AA3.GP_PAYGROUP
                           AND   SEG.CAL_ID      = AA3.CAL_ID)                             
AND   PRCST3.RSLT_REV_NUM = 1
AND   PRCST3.PYE_PRC_IND  = 'N'
AND   PRCST3.SEL_STAT     IN ('A', 'I')
AND   PRCST3.SEL_ACTION   = 'C'
GROUP BY BB3.SEQNUM, AA3.PIN_NM, AA3.PIN_NUM, PRCST3.PYMT_DT
ORDER BY BB3.SEQNUM, AA3.PIN_NM, AA3.PIN_NUM, PRCST3.PYMT_DT
end-select

Do Print-ED-Total

end-procedure Process-Include-Ded

!**************************************
begin-procedure Process-Exclude-Ded
show '* Process-Exclude-Ded *'
date-time () hh:mi:ss &timeBegan
display &timeBegan
!**************************************
Let $TConcept = $TDed    
Let $TConc    = 'DED' 
Let $TTitleED = $TTotal6

!Print $TConcept       (+1,{c1}) Bold

begin-select    
PRCST4.PYMT_DT 
AA4.PIN_NM            () On-Break Print=Never After=Print-Member-Detail Save=$PinNameOld Level=3
AA4.PIN_NUM
SUM(AA4.CALC_RSLT_VAL + AA4.CALC_ADJ_VAL ) &AA4.CALC_RSLT_VAL
!SUM(AA4.UNIT_RSLT_VAL + AA4.UNIT_ADJ_VAL ) &AA4.UNIT_RSLT_VAL

  Let #PinNum   = &AA4.PIN_NUM 
  Let $PinName  = Rtrim(&AA4.PIN_NM, ' ' )   
  Let #Ammount  = &AA4.CALC_RSLT_VAL

  Do Convert-To-DTU-Date(&PRCST4.PYMT_DT ,$PymtDt)
  Let $Month = Substr($PymtDt,6,2)
   
  Do Calculate-Month 
  
FROM PS_JOB J
    ,PS_GP_RSLT_ED_VW   AA4
    ,PS_GP_PYE_PRC_STAT PRCST4
WHERE J.COMPANY          = $Company
AND   J.GP_PAYGROUP      = $GPPaygroup
AND   J.GP_PAYGROUP      = AA4.GP_PAYGROUP
AND   J.GP_PAYGROUP      = PRCST4.GP_PAYGROUP
AND   J.EMPLID           = AA4.EMPLID
AND   J.EMPLID           = PRCST4.EMPLID 
AND   J.EMPL_RCD         = AA4.EMPL_RCD
AND   J.EMPL_RCD         = PRCST4.EMPL_RCD
AND   J.EFFDT            = (SELECT MAX(J1.EFFDT) 
                           FROM PS_JOB J1
                           WHERE J1.EMPLID   = J.EMPLID
                           AND   J1.EMPL_RCD = J.EMPL_RCD
                           AND   J1.EFFDT   <= $EndDt)
AND   J.EFFSEQ           = (SELECT MAX(J2.EFFSEQ) 
                           FROM PS_JOB J2
                           WHERE J2.EMPLID = J.EMPLID
                           AND   J2.EMPL_RCD = J.EMPL_RCD
                           AND   J2.EFFDT = J.EFFDT)
AND   AA4.PIN_NUM   NOT IN (SELECT BB.PIN_DED_NUM
                            FROM PS_GPMX_PAYSL_F_DE BB
                            WHERE BB.GPMX_FORMAT_ID  = $FormatID
                            AND   BB.EFFDT           = $EffFormatID
                            AND   BB.EFF_STATUS      = 'A')     
AND   AA4.PIN_TYPE        = 'DD'
AND   PRCST4.CAL_RUN_ID   = AA4.CAL_RUN_ID 
AND   PRCST4.CAL_ID       = AA4.CAL_ID   
AND   PRCST4.ORIG_CAL_RUN_ID = AA4.ORIG_CAL_RUN_ID 
AND   PRCST4.CALC_TYPE    = 'P'
AND   PRCST4.PYMT_DT     >= $BeginDt
AND   PRCST4.PYMT_DT     <= $EndDt
AND   PRCST4.RSLT_VER_NUM = (SELECT MAX(PS.RSLT_VER_NUM) 
                           FROM PS_GP_PYE_PRC_STAT PS
                           WHERE PS.EMPLID    = PRCST4.EMPLID
                           AND PS.CAL_RUN_ID  = PRCST4.CAL_RUN_ID
                           AND PS.EMPL_RCD    = PRCST4.EMPL_RCD
                           AND PS.GP_PAYGROUP = PRCST4.GP_PAYGROUP
                           AND PS.CAL_ID      = PRCST4.CAL_ID)  
AND   AA4.RSLT_SEG_NUM = (SELECT MAX(SEG.RSLT_SEG_NUM) 
                           FROM PS_GP_RSLT_ED_VW SEG
                           WHERE SEG.EMPLID      = AA4.EMPLID
                           AND   SEG.CAL_RUN_ID  = AA4.CAL_RUN_ID
                           AND   SEG.EMPL_RCD    = AA4.EMPL_RCD
                           AND   SEG.GP_PAYGROUP = AA4.GP_PAYGROUP
                           AND   SEG.CAL_ID      = AA4.CAL_ID)                            
AND   PRCST4.RSLT_REV_NUM = 1
AND   PRCST4.PYE_PRC_IND  = 'N'
AND   PRCST4.SEL_STAT     IN ('A', 'I')
AND   PRCST4.SEL_ACTION   = 'C'
GROUP BY AA4.PIN_NM, AA4.PIN_NUM, PRCST4.PYMT_DT
ORDER BY AA4.PIN_NM, AA4.PIN_NUM, PRCST4.PYMT_DT
end-select

Do Print-ED-Total

end-procedure Process-Exclude-Ded

!**************************************
begin-procedure Calculate-Month
!show '** Calculate-Month **'
!show ' TConcept: ' $TConc 
!show ' #Amount:  ' #Amount
!**************************************
  
  Evaluate $Month
    when = '01'
      Let #Month01          = #Month01      + #Ammount
      Let #MthTotalED01     = #MthTotalED01 + #Ammount
      If  $TConc = 'ERN' 
          Let #MthTotalPG01 = #MthTotalPG01 + #Ammount
          Let #MthTotalCo01 = #MthTotalCo01 + #Ammount
      else
          Let #MthTotalPG01 = #MthTotalPG01 - #Ammount
          Let #MthTotalCo01 = #MthTotalCo01 - #Ammount
      end-if
      #debug show '#Month01: ' #Month01
      break
    when = '02'
      Let #Month02          = #Month02      + #Ammount 
      Let #MthTotalED02     = #MthTotalED02 + #Ammount
      If  $TConc  = 'ERN' 
          Let #MthTotalPG02 = #MthTotalPG02 + #Ammount
          Let #MthTotalCo02 = #MthTotalCo02 + #Ammount
      else
          Let #MthTotalPG02 = #MthTotalPG02 - #Ammount
          Let #MthTotalCo02 = #MthTotalCo02 - #Ammount
      end-if     
      #debug show '#Month02: ' #Month02
      break
    when = '03'
      Let #Month03          = #Month03      + #Ammount 
      Let #MthTotalED03     = #MthTotalED03 + #Ammount
      If  $TConc  = 'ERN' 
          Let #MthTotalPG03 = #MthTotalPG03 + #Ammount
          Let #MthTotalCo03 = #MthTotalCo03 + #Ammount
      else
          Let #MthTotalPG03 = #MthTotalPG03 - #Ammount
          Let #MthTotalCo03 = #MthTotalCo03 - #Ammount
      end-if   
     #debug show '#Month03: ' #Month03
      break
    when = '04'
      Let #Month04          = #Month04      + #Ammount  
      Let #MthTotalED04     = #MthTotalED04 + #Ammount
      If  $TConc  = 'ERN' 
          Let #MthTotalPG04 = #MthTotalPG04 + #Ammount
          Let #MthTotalCo04 = #MthTotalCo04 + #Ammount
      else
          Let #MthTotalPG04 = #MthTotalPG04 - #Ammount
          Let #MthTotalCo04 = #MthTotalCo04 - #Ammount
      end-if  
      #debug show '#Month04: ' #Month04
      break     
    when = '05'
      Let #Month05          = #Month05      + #Ammount 
      Let #MthTotalED05     = #MthTotalED05 + #Ammount
      If  $TConc  = 'ERN' 
          Let #MthTotalPG05 = #MthTotalPG05 + #Ammount
          Let #MthTotalCo05 = #MthTotalCo05 + #Ammount
      else
          Let #MthTotalPG05 = #MthTotalPG05 - #Ammount
          Let #MthTotalCo05 = #MthTotalCo05 - #Ammount
      end-if  
      #debug show '#Month05: ' #Month05
      break
    when = '06'
      Let #Month06          = #Month06      + #Ammount 
      Let #MthTotalED06     = #MthTotalED06 + #Ammount
      If  $TConc  = 'ERN' 
          Let #MthTotalPG06 = #MthTotalPG06 + #Ammount
          Let #MthTotalCo06 = #MthTotalCo06 + #Ammount
      else
          Let #MthTotalPG06 = #MthTotalPG06 - #Ammount
          Let #MthTotalCo06 = #MthTotalCo06 - #Ammount
      end-if 
            #debug show '#Month06: ' #Month06
      break
    when = '07'
      Let #Month07          = #Month07      + #Ammount
      Let #MthTotalED07     = #MthTotalED07 + #Ammount
      If  $TConc = 'ERN' 
          Let #MthTotalPG07 = #MthTotalPG07 + #Ammount
          Let #MthTotalCo07 = #MthTotalCo07 + #Ammount
      else
          Let #MthTotalPG07 = #MthTotalPG07 - #Ammount
          Let #MthTotalCo07 = #MthTotalCo07 - #Ammount
      end-if
            #debug show '#Month07: ' #Month07
      break
    when = '08'
      Let #Month08          = #Month08      + #Ammount
      Let #MthTotalED08     = #MthTotalED08 + #Ammount
      If  $TConc = 'ERN' 
          Let #MthTotalPG08 = #MthTotalPG08 + #Ammount
          Let #MthTotalCo08 = #MthTotalCo08 + #Ammount
      else
          Let #MthTotalPG08 = #MthTotalPG08 - #Ammount
          Let #MthTotalCo08 = #MthTotalCo08 - #Ammount
      end-if
            #debug show '#Month08: ' #Month08
      break  
    when = '09'
      Let #Month09          = #Month09      + #Ammount  
      Let #MthTotalED09     = #MthTotalED09 + #Ammount
      If  $TConc = 'ERN' 
          Let #MthTotalPG09 = #MthTotalPG09 + #Ammount
          Let #MthTotalCo09 = #MthTotalCo09 + #Ammount
      else
          Let #MthTotalPG09 = #MthTotalPG09 - #Ammount
          Let #MthTotalCo09 = #MthTotalCo09 - #Ammount
      end-if
            #debug show '#Month09: ' #Month09
      break
    when = '10'
      Let #Month10          = #Month10      + #Ammount
      Let #MthTotalED10     = #MthTotalED10 + #Ammount
      If  $TConc = 'ERN' 
          Let #MthTotalPG10 = #MthTotalPG10 + #Ammount
          Let #MthTotalCo10 = #MthTotalCo10 + #Ammount
      else
          Let #MthTotalPG10 = #MthTotalPG10 - #Ammount
          Let #MthTotalCo10 = #MthTotalCo10 - #Ammount
      end-if
            #debug show '#Month10: ' #Month10
      break
    when = '11'
      Let #Month11          = #Month11      + #Ammount 
      Let #MthTotalED11     = #MthTotalED11 + #Ammount
      If  $TConc = 'ERN' 
          Let #MthTotalPG11 = #MthTotalPG11 + #Ammount
          Let #MthTotalCo11 = #MthTotalCo11 + #Ammount
      else
          Let #MthTotalPG11 = #MthTotalPG11 - #Ammount
          Let #MthTotalCo11 = #MthTotalCo11 - #Ammount
      end-if
            #debug show '#Month11: ' #Month11
      break
    when = '12'
      Let #Month12          = #Month12      + #Ammount 
      Let #MthTotalED12     = #MthTotalED12 + #Ammount
      If  $TConc = 'ERN' 
          Let #MthTotalPG12 = #MthTotalPG12 + #Ammount
          Let #MthTotalCo12 = #MthTotalCo12 + #Ammount
      else
          Let #MthTotalPG12 = #MthTotalPG12 - #Ammount
          Let #MthTotalCo12 = #MthTotalCo12 - #Ammount
      end-if
            #debug show '#Month12: ' #Month12
      break           
  End-Evaluate
  
  
  
end-procedure Calculate-Month 

!**************************************
begin-procedure Print-Member-Detail
!show '** Print-Member-Detail **'
!date-time () hh:mi:ss &timeBegan
!display &timeBegan
!**************************************
  Alter-Printer Point-size = 7 Font-Type = Proportional Font = 5
  if $TConcept <> ''
     Print $TConcept       (+1,{c1}) Bold
     Let $TConcept = ''
  end-if

  Let #ElementT   = #Month01    + #Month02 + #Month03 + #Month04 + #Month05 + #Month06 
  Let #ElementT   = #ElementT   + #Month07 + #Month08 + #Month09 + #Month10 + #Month11 + #Month12  
  Let #ElementTED = #ElementTED + #ElementT
  
  If $TConc = 'ERN'  
     Let #ElementTGP = #ElementTGP + #ElementT
  else
     Let #ElementTGP = #ElementTGP - #ElementT
  end-if    

  If #ElementT <> 0 
     print $PinName        (+1,{Cab})
     print #Month01        (0,{c2})  edit b999,999,999.99
     print #Month02        (0,{c3})  edit b999,999,999.99
     print #Month03        (0,{c4})  edit b999,999,999.99
     print #Month04        (0,{c5})  edit b999,999,999.99
     print #Month05        (0,{c6})  edit b999,999,999.99
     print #Month06        (0,{c7})  edit b999,999,999.99
     print #Month07        (0,{c8})  edit b999,999,999.99
     print #Month08        (0,{c9})  edit b999,999,999.99
     print #Month09        (0,{c10}) edit b999,999,999.99
     print #Month10        (0,{c11}) edit b999,999,999.99
     print #Month11        (0,{c12}) edit b999,999,999.99
     print #Month12        (0,{c13}) edit b999,999,999.99
     print #ElementT       (0,{c14}) edit b999,999,999.99
  end-if

  Do Init-Vars1
end-procedure Print-Member-Detail

!**************************************
begin-procedure Print-ED-Total
!show '** Print-ED-Total **'
!**************************************
 if #ElementTED <> 0
     print $TTitleED           (+1,{c1}) bold
     print #MthTotalED01       (0,{c2})  edit b999,999,999.99
     print #MthTotalED02       (0,{c3})  edit b999,999,999.99
     print #MthTotalED03       (0,{c4})  edit b999,999,999.99
     print #MthTotalED04       (0,{c5})  edit b999,999,999.99
     print #MthTotalED05       (0,{c6})  edit b999,999,999.99
     print #MthTotalED06       (0,{c7})  edit b999,999,999.99
     print #MthTotalED07       (0,{c8})  edit b999,999,999.99
     print #MthTotalED08       (0,{c9})  edit b999,999,999.99
     print #MthTotalED09       (0,{c10}) edit b999,999,999.99
     print #MthTotalED10       (0,{c11}) edit b999,999,999.99
     print #MthTotalED11       (0,{c12}) edit b999,999,999.99
     print #MthTotalED12       (0,{c13}) edit b999,999,999.99
     print #ElementTED         (0,{c14}) edit b999,999,999.99
     print ''                  (+1,{c1})
  end-if
  
  Do Init-Vars2

end-procedure Print-ED-Total

!**************************************
begin-procedure Print-PayGroup-Total
!show '** Print-Paygroup-Total **'
!**************************************

 If #ElementTGP > 0   
   
      let $GPPaygroupTotal3 =  $TTotal3 || ':'
      If $printGPPaygroup = 'N' 
         print $GPPaygroup    (+1,{c1}) Bold      
      end-if
      print $GPPaygroupTotal3   (+1,{c1}) Bold
      print #MthTotalPG01       (0,{c2})  edit b999,999,999.99 Bold
      print #MthTotalPG02       (0,{c3})  edit b999,999,999.99 Bold
      print #MthTotalPG03       (0,{c4})  edit b999,999,999.99 Bold
      print #MthTotalPG04       (0,{c5})  edit b999,999,999.99 Bold
      print #MthTotalPG05       (0,{c6})  edit b999,999,999.99 Bold
      print #MthTotalPG06       (0,{c7})  edit b999,999,999.99 Bold
      print #MthTotalPG07       (0,{c8})  edit b999,999,999.99 Bold
      print #MthTotalPG08       (0,{c9})  edit b999,999,999.99 Bold
      print #MthTotalPG09       (0,{c10}) edit b999,999,999.99 Bold
      print #MthTotalPG10       (0,{c11}) edit b999,999,999.99 Bold
      print #MthTotalPG11       (0,{c12}) edit b999,999,999.99 Bold
      print #MthTotalPG12       (0,{c13}) edit b999,999,999.99 Bold
      print #ElementTGP         (0,{c14}) edit b999,999,999.99 Bold
      print ' '                 (+1)
      
  end-if
   
!   show ' #ElementTGP: '  #ElementTGP
!   show ' #ElementTCo: '  #ElementTCo

   Let #ElementTCo = #ElementTCo + #ElementTGP
   
   Do Init-Vars3
   
end-procedure Print-PayGroup-Total


!**************************************
begin-procedure Print-Company-Total
!show '** Print-Company-Total **'
!**************************************

  print $TTotal1             (+1,{c1}) Bold
  print #MthTotalCo01        (0,{c2})  edit b999,999,999.99 Bold
  print #MthTotalCo02        (0,{c3})  edit b999,999,999.99 Bold
  print #MthTotalCo03        (0,{c4})  edit b999,999,999.99 Bold
  print #MthTotalCo04        (0,{c5})  edit b999,999,999.99 Bold
  print #MthTotalCo05        (0,{c6})  edit b999,999,999.99 Bold
  print #MthTotalCo06        (0,{c7})  edit b999,999,999.99 Bold
  print #MthTotalCo07        (0,{c8})  edit b999,999,999.99 Bold
  print #MthTotalCo08        (0,{c9})  edit b999,999,999.99 Bold
  print #MthTotalCo09        (0,{c10}) edit b999,999,999.99 Bold
  print #MthTotalCo10        (0,{c11}) edit b999,999,999.99 Bold
  print #MthTotalCo11        (0,{c12}) edit b999,999,999.99 Bold
  print #MthTotalCo12        (0,{c13}) edit b999,999,999.99 Bold
  print #ElementTCo          (0,{c14}) edit b999,999,999.99 Bold

end-procedure Print-Company-Total

!**************************************
begin-procedure Print-Paygroup
!show  '** Print-Paygroup **'
!show $Pagroup
!**************************************
  Alter-Printer Point-size = 8 Font-Type = Proportional Font = 5
  If $GPPaygroup <> ''
     print $TPayGroup      (+1,{c1}) Bold
     print $GPPaygroup       (0,{Cbb}) Bold
  end-if
end-procedure Print-Paygroup


begin-procedure Report-Translation
 do Init_Report_Translation ('GPMXPE02', $prcs_language_cd)
 do Append_Report_Translation ('GPMXPE02')
 do Get_Field_Information ('GPMXPE02', 'COMPANY',           $TCompany,           #DW)
 do Get_Field_Information ('GPMXPE02', 'PAGE'   ,           $TPage,              #DW)
 do Get_Field_Information ('GPMXPE02', 'DATE',              $TDate,              #DW)
 do Get_Field_Information ('GPMXPE02', 'DED',               $TDed,               #DW)
 do Get_Field_Information ('GPMXPE02', 'ERN',               $TErn,               #DW)
 do Get_Field_Information ('GPMXPE02', 'HOUR',              $THour,              #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH01',           $TMonth01,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH02',           $TMonth02,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH03',           $TMonth03,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH04',           $TMonth04,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH05',           $TMonth05,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH06',           $TMonth06,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH07',           $TMonth07,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH08',           $TMonth08,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH09',           $TMonth09,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH10',           $TMonth10,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH11',           $TMonth11,           #DW)
 do Get_Field_Information ('GPMXPE02', 'MONTH12',           $TMonth12,           #DW)
 do Get_Field_Information ('GPMXPE02', 'PAYGROUP',          $TPayGroup,          #DW)
 do Get_Field_Information ('GPMXPE02', 'PERIOD',            $TPeriod,            #DW)
 do Get_Field_Information ('GPMXPE02', 'PIN_NAME',          $TPin_Name,          #DW)
 do Get_Field_Information ('GPMXPE02', 'PIN_NUM',           $TPin_Num,           #DW)
 do Get_Field_Information ('GPMXPE02', 'REPORT',            $TReport,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TITLE1',            $TTitle1,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL1',            $TTotal1,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL3',            $TTotal3,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL4',            $TTotal4,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL5',            $TTotal5,            #DW)
 do Get_Field_Information ('GPMXPE02', 'TOTAL6',            $TTotal6,            #DW)
end-procedure Report-Translation

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#Include 'sqrtrans.sqc'
#include 'getcomex.sqc'  !Get selected fields from Company Table and Mexico Fields
