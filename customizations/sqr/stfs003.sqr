!-----------------------------------------------------------------------
! Report Name: STFS003.SQR - Stock Option Valuation Detail Report
!-----------------------------------------------------------------------
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!-----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:51:43                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!
!-----------------------------------------------------------------------
! Program Descr: This report prints the valuation detail created during
!                the grant valuation process.
!-----------------------------------------------------------------------
! Options:       None
! Tables:        ST_VALUE_TAO4
!                ST_GRANT
!                ST_GRNT_VST_DTL
!                ST_VALUE_TBL
!-----------------------------------------------------------------------

  #include 'setenv.sqc'

!-----------------------------------------------------------------------
Begin-Setup
!-----------------------------------------------------------------------

  #include 'ptpsl177.sqc'

End-Setup

!-----------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     Main Report procedure
!-----------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Main-Process
  do Reset
  do Successful-EOJ

End-Program

!-----------------------------------------------------------------------
! Section: Heading Procedures
! Descr:   This sections contains all procedures for
!          printing the optional heading
!-----------------------------------------------------------------------
Begin-Heading 8

  #Include 'stdhdg01.sqc'

  print $StockIdLbl                                        (-1,001,008)
  print ':'                                                (  ,   ,001)
  print $StockId                                           (  , +3,010)
  print $ValueMethodXlat                                   (  ,   ,   ) center

  print $ValuationIdLbl                                    (+1,001,012)
  print ':'                                                (  ,   ,001)
  print $ValuationId                                       (  , +3,010)
  print $ValueRunXlat                                      (  ,   ,   ) center

  print $ExpectLifeLbl                                     (+1,001,013)
  print ':'                                                (  ,   ,001)
  print #ExpectedLife                                      (  , +3,010) edit 999.999999

  print $NameLbl                                           (+2,001,030)
  print $GrantNbrLbl                                       (  ,032,012)
  print $SharesLbl                                         (  ,067,006)
  print $GrantLbl                                          (  ,081,005)
  print $ExpectedLbl                                       (  ,102,008)
  print $ValueLbl                                          (  ,152,005)
  print $TotalLbl                                          (  ,173,005)
  print $EmpIdLbl                                          (+1,001,030)
  print $GrantDtLbl                                        (  ,032,010)
  if $Valuation_Method = 'M'
    print $VestDtLbl                                       (  ,044,010)
  end-if
  print $ValuedLbl                                         (  ,067,006)
  print $PriceLbl                                          (  ,081,005)
  print $GrantFmvLbl                                       (  ,090,009)
  print $LifeLbl                                           (  ,106,004)
  print $VolatilityLbl                                     (  ,112,010)
  print $InterestLbl                                       (  ,125,008)
  print $DividendLbl                                       (  ,136,008)
  print $PerShareLbl                                       (  ,148,009)
  print $ValuationLbl                                      (  ,169,009)
  print '-'                                                (+1,001,178) fill bold

End-Heading

!-----------------------------------------------------------------------
! Procedure: Init-Report
! Descr:     Report initialization procedure.  Set titles, parameters.
!            This is called from the Begin-Program procedure.
!-----------------------------------------------------------------------
Begin-Procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  let $ReportId = 'STFS003'

  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.

  if $prcs_process_instance = ''

  else
    do Get-SQR-Parms
  end-if

  do Init-Variables

End-Procedure

!-----------------------------------------------------------------------
! Procedure: Get-SQR-Parms
! Descr:
!-----------------------------------------------------------------------
Begin-Procedure Get-SQR-Parms

Begin-Select

ST_RUNCTL_VALUE.STOCK_ID
ST_RUNCTL_VALUE.ST_VALUATION_ID
ST_RUNCTL_VALUE.ST_EXPECTED_LIFE
ST_RUNCTL_VALUE.ST_VALUE_RUN_TYPE

  let $StockId      = rtrim(&st_runctl_value.stock_id,' ')
  let $ValuationId  = rtrim(&st_runctl_value.st_valuation_id ,' ')
  let #ExpectedLife = &st_runctl_value.st_expected_life
  let $ValueRunType = rtrim(&st_runctl_value.st_value_run_type ,' ')

from  PS_ST_RUNCTL_VALUE ST_RUNCTL_VALUE
where ST_RUNCTL_VALUE.OPRID       = $Prcs_Oprid
  and ST_RUNCTL_VALUE.RUN_CNTL_ID = $Prcs_Run_cntl_ID

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Procedure: Report-Translation
! Descr:     This procedure is used to read language-dependent text from
!            the database.
!-----------------------------------------------------------------------
Begin-Procedure Report-Translation

  do Init_Report_Translation('STOCK', $Language_Cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK',  'STOCK_ID',        $StockIdLbl,     #DW)
  do Get_Field_Information ('STOCK',  'GRANT',           $GrantLbl,       #DW)
  do Get_Field_Information ('STOCK',  'SHARES',          $SharesLbl,      #DW)
  do Get_Field_Information ('STOCK',  'NAME',            $NameLbl,        #DW)
  do Get_Field_Information ('STOCK',  'EMPLID',          $EmpIdLbl,       #DW)
  do Get_Field_Information ('STOCK',  'DATE',            $DateLbl,        #DW)
  do Get_Field_Information ('STOCK',  'NUMBER',          $NumberLbl,      #DW)
  do Get_Field_Information ('STOCK',  'FROM',            $FromLbl,        #DW)
  do Get_Field_Information ('STOCK',  'THRU',            $ThruLbl,        #DW)
  do Get_Field_Information ('STOCK',  'EXERCISE',        $ExerLbl,        #DW)
  do Get_Field_Information ('STOCK',  'GRANT_NBR',       $GrantNbrLbl,    #DW)
  do Get_Field_Information ('STOCK',  'GRANT_DT',        $GrantDtLbl,     #DW)
  do Get_Field_Information ('STOCK',  'GRANT_FMV',       $GrantFmvLbl,    #DW)
  do Get_Field_Information ('STOCK',  'PRICE',           $PriceLbl,       #DW)
  do Get_Field_Information ('STOCK',  'EXPECTED',        $ExpectedLbl,    #DW)
  do Get_Field_Information ('STOCK',  'LIFE',            $LifeLbl,        #DW)
  do Get_Field_Information ('STOCK',  'INTEREST',        $InterestLbl,    #DW)
  do Get_Field_Information ('STOCK',  'VOLATILITY',      $VolatilityLbl,  #DW)
  do Get_Field_Information ('STOCK',  'DIVIDEND',        $DividendLbl,    #DW)
  do Get_Field_Information ('STOCK',  'VALUE',           $ValueLbl,       #DW)
  do Get_Field_Information ('STOCK',  'PER_SHARE',       $PerShareLbl,    #DW)
  do Get_Field_Information ('STOCK',  'VALUATION_ID',    $ValuationIdLbl, #DW)
  do Get_Field_Information ('STOCK',  'WEIGHTED_AVERAGE',$WeightedLbl,    #DW)
  do Get_Field_Information ('STOCK',  'TOTAL',           $TotalLbl,       #DW)
  do Get_Field_Information ('STFS003','REPORT_TITLE',    $ReportTitle,    #DW)
  do Get_Field_Information ('STFS003','VALUATION',       $ValuationLbl,   #DW)
  do Get_Field_Information ('STFS003','VALUED',          $ValuedLbl,      #DW)
  do Get_Field_Information ('STFS003','VEST_DT',         $VestDtLbl,      #DW)
  do Get_Field_Information ('STFS003','EXPECTED_LIFE',   $ExpectLifeLbl,  #DW)

End-Procedure Report-Translation

!-----------------------------------------------------------------------
! Procedure: Init-Variables
! Descr:     Initializes all report variables
!-----------------------------------------------------------------------
Begin-Procedure Init-Variables

  let #Count        = 0
  let #TotalCount   = 0
  do Get-Valuation-Method

  move $Valuation_Method to $FieldValue
  move 'ST_VALUE_METHOD' to $Fieldname
  do Read-Translate-Table
  let $ValueMethodXlat = rtrim($Xlatlongname,' ')

  move $ValueRunType to $FieldValue
  move 'ST_VALUE_RUN_TYPE' to $Fieldname
  do Read-Translate-Table
  let $ValueRunXlat    = rtrim($Xlatlongname,' ')

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Valuation-Method
! Descr:
!-----------------------------------------------------------------------
Begin-Procedure Get-Valuation-Method

Begin-Select

ZZ.ST_VALUE_METHOD

  let $Valuation_Method  = rtrim(&zz.st_value_method,' ')

from  PS_ST_VALUE_TBL ZZ
where ZZ.STOCK_ID        = $StockId
  and ZZ.ST_VALUATION_ID = $ValuationId

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Main-Process
! Descr:   Main process
!-----------------------------------------------------------------------
Begin-Procedure Main-Process

  if $Valuation_Method = 'S'
    do Select-Single
  else
    do Select-Multiple
  end-if

  if #TotalCount > 0
    do Print-Summary
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Single
! Descr:
!-----------------------------------------------------------------------
Begin-Procedure Select-Single

Begin-Select

A.EMPLID
A.GRANT_NBR
A.GRANT_DT
A.SHARES_VALUED
A.GRANT_FMV
A.GRANT_PRICE
A.ST_EXPECTED_LIFE
A.ST_VOLATILITY
A.ST_INTEREST_RATE
A.ST_DIVIDEND_RATE
A.ST_VALUE_PER_SHARE
B.NAME

  
  let $EmplId        = rtrim(&a.emplid, ' ')
  let $GrantDate     = rtrim(&a.grant_dt, ' ')
  let #SharesValued  = &a.shares_valued
  let $GrantNbr      = rtrim(&a.grant_nbr, ' ')
  let #GrantFmv      = &a.grant_fmv
  let #GrantPrice    = &a.grant_price
  let #ExpectLife    = &a.st_expected_life
  let #Volatility    = &a.st_volatility
  let #InterestRate  = &a.st_interest_rate
  let #DividendRate  = &a.st_dividend_rate
  let #ValuePerShare = &a.st_value_per_share
  let $Name          = rtrim(&b.name,' ')
  let #ValueCost     = round(#ValuePerShare * #SharesValued,2)
  do Print-Single
  do Update-Totals
  do Get-Reprice-Number
  if $RepriceNbr <> ''
    do Select-Single-Reprice
  end-if

from  PS_ST_VALUE_TAO4   A,
      PS_ST_PERSON_NAME  B
where A.STOCK_ID = $StockId
  and A.EMPLID   = B.EMPLID
order by B.NAME, A.EMPLID, A.GRANT_NBR

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Reprice-Number
! Descr:
!-----------------------------------------------------------------------
Begin-Procedure Get-Reprice-Number

  let $RepriceNbr    = ''

Begin-Select

Z.REPRICE_GRANT_NBR

  let $RepriceNbr = rtrim(&z.reprice_grant_nbr, ' ')

from  PS_ST_GRANT Z
where Z.EMPLID    = $Emplid
  and Z.STOCK_ID  = $StockId
  and Z.GRANT_NBR = $GrantNbr

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Multiple
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Select-Multiple

Begin-Select

C.EMPLID
C.GRANT_NBR
C.ST_VALUATION_DT
C.SHARES_VALUED
C.GRANT_FMV
C.GRANT_PRICE
C.ST_EXPECTED_LIFE
C.ST_VOLATILITY
C.ST_INTEREST_RATE
C.ST_DIVIDEND_RATE
C.ST_VALUE_PER_SHARE
D.NAME

  let $EmplId        = rtrim(&c.emplid, ' ')
  let $GrantNbr      = rtrim(&c.grant_nbr, ' ')
  let $GrantDate     = rtrim(&c.st_valuation_dt, ' ')
  let $Name          = rtrim(&d.name,' ')
  do Select-Multiple-Detail
  let #SharesValued  = &c.shares_valued
  let #GrantPrice    = &c.grant_fmv
  let #GrantFmv      = &c.grant_price
  let #ExpectLife    = &c.st_expected_life
  let #Volatility    = &c.st_volatility
  let #InterestRate  = &c.st_interest_rate
  let #DividendRate  = &c.st_dividend_rate
  let #ValuePerShare = &c.st_value_per_share
  let #ValueCost     = #MultValueCost
  let #MultValueCost = 0
  do Print-Multiple2
  do Update-Totals
  do Get-Reprice-Number
  if $RepriceNbr <> ''
    do Select-Multiple-Reprice
    let #MultValueCost = 0
  end-if

from  PS_ST_VALUE_TAO5   C,
      PS_ST_PERSON_NAME  D
where C.STOCK_ID = $StockId
  and C.EMPLID   = D.EMPLID
order by D.NAME, C.EMPLID, C.GRANT_NBR

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Multiple-Detail
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Select-Multiple-Detail

  let #Count         = 0

Begin-Select

E.ST_VALUATION_DT
E.SHARES_VALUED
E.GRANT_FMV
E.GRANT_PRICE
E.ST_EXPECTED_LIFE
E.ST_VOLATILITY
E.ST_INTEREST_RATE
E.ST_DIVIDEND_RATE
E.ST_VALUE_PER_SHARE

  let $ValueDate     = rtrim(&e.st_valuation_dt, ' ')
  let #SharesValued  = &e.shares_valued
  let #GrantFmv      = &e.grant_fmv
  let #GrantPrice    = &e.grant_price
  let #ExpectLife    = &e.st_expected_life
  let #Volatility    = &e.st_volatility
  let #InterestRate  = &e.st_interest_rate
  let #DividendRate  = &e.st_dividend_rate
  let #ValuePerShare = &e.st_value_per_share
  let #ValueCost     = round(#ValuePerShare * #SharesValued,2)
  let #MultValueCost = #MultValueCost + #ValueCost
  do Print-Multiple1

from  PS_ST_VALUE_TAO4 E
where E.EMPLID    = $EmplId
  and E.STOCK_ID  = $StockId
  and E.GRANT_NBR = $GrantNbr
order by E.ST_VALUATION_DT

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Single-Reprice
! Descr:
!-----------------------------------------------------------------------
Begin-Procedure Select-Single-Reprice

Begin-Select

F.GRANT_NBR
G.GRANT_DT
F.SHARES_VALUED
F.GRANT_FMV
F.GRANT_PRICE
F.ST_EXPECTED_LIFE
F.ST_VOLATILITY
F.ST_INTEREST_RATE
F.ST_DIVIDEND_RATE
F.ST_VALUE_PER_SHARE

  let $GrantDate     = rtrim(&g.grant_dt, ' ')
  let #SharesValued  = &f.shares_valued
  let $GrantNbr      = rtrim(&f.grant_nbr, ' ')
  let #GrantFmv      = &f.grant_fmv
  let #GrantPrice    = &f.grant_price
  let #ExpectLife    = &f.st_expected_life
  let #Volatility    = &f.st_volatility
  let #InterestRate  = &f.st_interest_rate
  let #DividendRate  = &f.st_dividend_rate 
  let #ValuePerShare = &f.st_value_per_share 
  let #ValueCost     = round(#ValuePerShare * #SharesValued,2)
  do Print-Single
  do Update-Totals

from  PS_ST_VALUE_TAO7 F,
      PS_ST_GRANT      G
where G.EMPLID    = $Emplid
  and G.STOCK_ID  = $StockId
  and G.GRANT_NBR = $RepriceNbr
  and F.EMPLID    = G.EMPLID
  and F.STOCK_ID  = G.STOCK_ID
  and F.GRANT_NBR = G.GRANT_NBR

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Multiple-Reprice
! Descr:
!-----------------------------------------------------------------------
Begin-Procedure Select-Multiple-Reprice

Begin-Select

H.GRANT_NBR
I.GRANT_DT
H.SHARES_VALUED
H.GRANT_FMV
H.GRANT_PRICE
H.ST_EXPECTED_LIFE
H.ST_VOLATILITY
H.ST_INTEREST_RATE
H.ST_DIVIDEND_RATE
H.ST_VALUE_PER_SHARE

  let $GrantNbr      = rtrim(&h.grant_nbr, ' ')
  do Select-Multiple-Reprice-Detail
  let $GrantDate     = rtrim(&i.grant_dt, ' ')
  let #SharesValued  = &h.shares_valued
  let #GrantFmv      = &h.grant_fmv
  let #GrantPrice    = &h.grant_price  
  let #ExpectLife    = &h.st_expected_life
  let #Volatility    = &h.st_volatility
  let #InterestRate  = &h.st_interest_rate
  let #DividendRate  = &h.st_dividend_rate
  let #ValuePerShare = &h.st_value_per_share
  let #ValueCost     = #MultValueCost
  let #MultValueCost = 0
  do Print-Multiple2
  do Update-Totals

from  PS_ST_VALUE_TAO10 H,
      PS_ST_GRANT       I
where I.EMPLID    = $Emplid
  and I.STOCK_ID  = $StockId
  and I.GRANT_NBR = $RepriceNbr
  and H.EMPLID    = I.EMPLID
  and H.STOCK_ID  = I.STOCK_ID
  and H.GRANT_NBR = I.GRANT_NBR

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Multiple-Reprice-Detail
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Select-Multiple-Reprice-Detail

  let #Count         = 0

Begin-Select

J.ST_VALUATION_DT
J.SHARES_VALUED
J.GRANT_FMV
J.GRANT_PRICE
J.ST_EXPECTED_LIFE
J.ST_VOLATILITY
J.ST_INTEREST_RATE
J.ST_DIVIDEND_RATE
J.ST_VALUE_PER_SHARE

  let $ValueDate     = rtrim(&j.st_valuation_dt, ' ')
  let #SharesValued  = &j.shares_valued
  let #GrantFmv      = &j.grant_fmv
  let #GrantPrice    = &j.grant_price
  let #ExpectLife    = &j.st_expected_life
  let #Volatility    = &j.st_volatility
  let #InterestRate  = &j.st_interest_rate
  let #DividendRate  = &j.st_dividend_rate
  let #ValuePerShare = &j.st_value_per_share
  let #MultValueCost = #MultValueCost + #ValueCost
  do Print-Multiple1

from  PS_ST_VALUE_TAO9 J
where J.EMPLID    = $EmplId
  and J.STOCK_ID  = $StockId
  and J.GRANT_NBR = $GrantNbr
order by J.ST_VALUATION_DT

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Update-Totals
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Update-Totals

  let #TotalCount      = #TotalCount      + 1
  let #TotalValued     = #TotalValued     + #SharesValued
  let #TotalLife       = #TotalLife       + (#ExpectLife   * #SharesValued)
  let #TotalVolatility = #TotalVolatility + (#Volatility   * #SharesValued)
  let #TotalInterest   = #TotalInterest   + (#InterestRate * #SharesValued)
  let #TotalDividend   = #TotalDividend   + (#DividendRate * #SharesValued)
  let #TotalValue      = #TotalValue      + #ValuePerShare
  let #TotalValueCost  = #TotalValueCost  + #ValueCost

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Single
! Descr:   Prints the report for the Single Option Method.
!-----------------------------------------------------------------------
Begin-Procedure Print-Single

  do Format-DateTime ($GrantDate, $GrantDate1, {DEFDATE}, '', '')

  print $Name                                              (+1,001,030)
  print $GrantNbr                                          (  ,032,010)
  print #SharesValued                                      (  ,056,017) edit 99,999,999.999999
  print #GrantPrice                                        (  ,075,011) edit $999.999999
  print #GrantFmv                                          (  ,088,011) edit $999.999999
  print #ExpectLife                                        (  ,101,009) edit 99.999999
  print #Volatility                                        (  ,113,009) edit 99.999999
  print #InterestRate                                      (  ,124,009) edit 99.999999
  print #DividendRate                                      (  ,135,009) edit 99.999999
  print #ValuePerShare                                     (  ,146,011) edit $999.999999
  print #ValueCost                                         (  ,159,019) edit $999,999,999,999.99
  print $EmplId                                            (+1,001,030)
  print $GrantDate1                                        (  ,032,010)

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Multiple1
! Descr:   Prints 
!-----------------------------------------------------------------------
Begin-Procedure Print-Multiple1

  let #Count = #Count + 1

  if #Count = 1
    print $Name                                            (+1,001,030)
    print $GrantNbr                                        (  ,032,010)
    do Format-DateTime ($ValueDate, $ValueDate1, {DEFDATE}, '', '')
    do Format-DateTime ($GrantDate, $GrantDate1, {DEFDATE}, '', '')
    print $ValueDate1                                      (  ,044,010)
    print #SharesValued                                    (  ,056,017) edit 99,999,999.999999
    print #GrantPrice                                      (  ,075,011) edit $999.999999
    print #GrantFmv                                        (  ,088,011) edit $999.999999
    print #ExpectLife                                      (  ,101,009) edit 99.999999
    print #Volatility                                      (  ,113,009) edit 99.999999
    print #InterestRate                                    (  ,124,009) edit 99.999999
    print #DividendRate                                    (  ,135,009) edit 99.999999
    print #ValuePerShare                                   (  ,146,011) edit $999.999999
    print #ValueCost                                       (  ,159,019) edit $999,999,999,999.99
    print $EmplId                                          (+1,001,010)
    print $GrantDate1                                      (  ,032,010)
  else
    do Format-DateTime ($ValueDate, $ValueDate1, {DEFDATE}, '', '')
    print $ValueDate1                                      (  ,044,010)
    print #SharesValued                                    (  ,056,017) edit 99,999,999.999999
    print #GrantPrice                                      (  ,075,011) edit $999.999999
    print #GrantFmv                                        (  ,088,011) edit $999.999999
    print #ExpectLife                                      (  ,101,009) edit 99.999999
    print #Volatility                                      (  ,113,009) edit 99.999999
    print #InterestRate                                    (  ,124,009) edit 99.999999
    print #DividendRate                                    (  ,135,009) edit 99.999999
    print #ValuePerShare                                   (  ,146,011) edit $999.999999
    print #ValueCost                                       (  ,159,019) edit $999,999,999,999.99
    print ''                                               (+1,   ,   )
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Multiple2
! Descr:   Prints 
!-----------------------------------------------------------------------
Begin-Procedure Print-Multiple2

  print #SharesValued                                      (  ,056,017) edit 99,999,999.999999 bold
  print #ExpectLife                                        (  ,101,009) edit 99.999999 bold
  print #Volatility                                        (  ,113,009) edit 99.999999 bold
  print #InterestRate                                      (  ,124,009) edit 99.999999 bold
  print #DividendRate                                      (  ,135,009) edit 99.999999 bold
  print #ValuePerShare                                     (  ,146,011) edit $999.999999 bold
  print #ValueCost                                         (  ,159,019) edit $999,999,999,999.99 bold
  print ''                                                 (+1,   ,   )

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Summary
! Descr:   Prints 
!-----------------------------------------------------------------------
Begin-Procedure Print-Summary

  let #AvgLife       = #TotalLife       / #TotalValued
  let #AvgVolatility = #TotalVolatility / #TotalValued
  let #AvgInterest   = #TotalInterest   / #TotalValued
  let #AvgDividend   = #TotalDividend   / #TotalValued
  let #AvgValue      = #TotalValueCost  / #TotalValued

  print $WeightedLbl                                       (+2,030,024) bold
  print ':'                                                (  ,   ,   ) bold
  print #TotalValued                                       (  ,056,017) edit 99,999,999.999999 bold
  print #AvgLife                                           (  ,101,009) edit 99.999999 bold
  print #AvgVolatility                                     (  ,113,009) edit 99.999999 bold
  print #AvgInterest                                       (  ,124,009) edit 99.999999 bold
  print #AvgDividend                                       (  ,135,009) edit 99.999999 bold
  print #AvgValue                                          (  ,146,011) edit $999.999999 bold
  print #TotalValueCost                                    (  ,159,019) edit $999,999,999,999.99 bold
  print ''                                                 (+1,   ,   )

End-Procedure

!-----------------------------------------------------------------------
! SQC Includes
!-----------------------------------------------------------------------
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'    ! Update Process Open_Trans variable declaration
#include 'eoj.sqc'        ! End of Report Format
#include 'sqrtrans.sqc'   ! Access Strings Table
#include 'reset.sqc'      ! Reset printer procedure
#include 'curdttim.sqc'   ! Get-Current-DateTime procedure
#include 'datemath.sqc'
#include 'datetime.sqc'   ! Routines for date and time formatting
                          ! Procedures: Init-Datetime
                          ! Procedures: Format-DateTime
                          ! Procedures: Diff-Date
                          ! Procedures: many others.
#include 'number.sqc'     ! Procedures: Init-Number
#include 'askftd.sqc'     ! From Thru Date input
#include 'getrplng.sqc'   ! Gets the report language
#include 'readxlat.sqc'   ! Gets the report language
