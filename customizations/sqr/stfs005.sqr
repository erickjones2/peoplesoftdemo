!-----------------------------------------------------------------------
! Report Name: STFS005.SQR - Estimate Contributions Report
!-----------------------------------------------------------------------
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!-----------------------------------------------------------------------
!
!          $Date:  2013/01/18:02:51:53                                 
!       $Release:  HR92                                                
!      $Revision:  101                                                 
!
!-----------------------------------------------------------------------
! Program Descr: This report estimates the contributions for an offering
!                id.
!-----------------------------------------------------------------------
! Options:       None
! Tables:        
!                ST_PURCHASE_PD
!                ST_OFFER_GRANT
!                ST_ESPP_PURCH
!-----------------------------------------------------------------------

  #include 'setenv.sqc'

!-----------------------------------------------------------------------
Begin-Setup
!-----------------------------------------------------------------------

  #include 'ptpsp125.sqc'

End-Setup

!-----------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     
!-----------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Main-Process
  do Print-Summary
  do Reset
  do Successful-EOJ

End-Program

!-----------------------------------------------------------------------
! Section: Heading Procedures
! Descr:   This sections contains all procedures for
!          printing the optional heading.
!-----------------------------------------------------------------------
Begin-Heading 9

  #Include 'stdhdg01.sqc'

  print $StockIdLbl                                        (-1,001,008)
  print ':'                                                (  ,   ,001)
  print $StockId                                           (  , +3,010)
  print $StockPlanLbl                                      (+1,001,010)
  print ':'                                                (  ,   ,001)
  print $StockPlan                                         (  , +3,010)
  print $OfferingIdLbl                                     (+1,001,011)
  print ':'                                                (  ,   ,001)
  print $OfferingId                                        (  , +3,010)
  print $ChangePctLbl                                      (+1,001,017)
  print ':'                                                (  ,   ,001)
  print #ChangePercent                                     (  , +3,008) edit 9999.999
  print '%'                                                (  ,   ,001)

  print $GrantLbl                                          (+2,044,010)
  print $PurchaseLbl                                       (  ,056,010)
  print $NameLbl                                           (+1,001,030)
  print $EmpIdLbl                                          (  ,032,010)
  print $DateLbl                                           (  ,044,010)
  print $DateLbl                                           (  ,056,010)
  print $TotalContribLbl                                   (  ,069,018)
  print '-'                                                (+1,001,125) fill Bold

End-Heading

!-----------------------------------------------------------------------
! Procedure: Init-Report
! Descr:     Report initialization procedure.  Set titles, parameters.
!            This is called from the Begin-Program procedure.
!-----------------------------------------------------------------------
Begin-Procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  let $ReportId = 'STFS005'

  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.

  if $prcs_process_instance = ''

  else
    do Get-SQR-Parms
  end-if

  do Init-Variables

End-Procedure

!-----------------------------------------------------------------------
! Procedure: Report-Translation
! Descr:     This procedure is used to read language-dependent text from
!            the database.
!-----------------------------------------------------------------------
Begin-Procedure Report-Translation

  do Init_Report_Translation('STOCK', $Language_Cd)
  do Append_Report_Translation ($ReportId)

  do Get_Field_Information ('STOCK'  ,'STOCK_ID',      $StockIdLbl,      #DW)
  do Get_Field_Information ('STOCK'  ,'NAME',          $NameLbl,         #DW)
  do Get_Field_Information ('STOCK'  ,'EMPLID',        $EmpIdLbl,        #DW)
  do Get_Field_Information ('STOCK'  ,'GRANT',         $GrantLbl,        #DW)
  do Get_Field_Information ('STOCK'  ,'DATE',          $DateLbl,         #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASE',      $PurchaseLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'TOTAL_CONTRIB', $TotalContribLbl, #DW)
  do Get_Field_Information ('STOCK'  ,'STOCK_PLAN',    $StockPlanLbl,    #DW)
  do Get_Field_Information ('STOCK'  ,'OFFERING_ID',   $OfferingIdLbl,   #DW)
  do Get_Field_Information ('STFS005','CHANGE_PCT',    $ChangePctLbl,    #DW)
  do Get_Field_Information ('STFS005','ACTUAL',        $ActualLbl,       #DW)
  do Get_Field_Information ('STFS005','PROJECTED',     $ProjectedLbl,    #DW)
  do Get_Field_Information ('STFS005','AVERAGE',       $AverageLbl,      #DW)
  do Get_Field_Information ('STFS005','NUMBER_PARTIC', $NumberParticLbl, #DW)
  do Get_Field_Information ('STFS005','CONTRIBUTIONS', $ContribLbl,      #DW)
  do Get_Field_Information ('STFS005','REPORT_TITLE',  $ReportTitle,     #DW)

End-Procedure Report-Translation

!-----------------------------------------------------------------------
! Procedure: Init-Variables
! Descr:     Initializes all report variables
!-----------------------------------------------------------------------
Begin-Procedure Init-Variables

  let #Count             = 0
  let #TotalCount        = 0
  let $StockId           = rtrim($RC_STOCK_ID,' ')
  let $StockPlan         = rtrim($RC_STOCK_PLAN,' ')
  let $OfferingId        = rtrim($RC_OFFERING_ID,' ')
  let #ChangePct         = #RC_ST_CHANGE_PCT / 100
  let #ChangePercent     = #RC_ST_CHANGE_PCT

End-Procedure

!-----------------------------------------------------------------------
! Section: Main-Process
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Main-Process

Begin-Select

B.STOCK_ID
B.STOCK_PLAN_TYPE
B.STOCK_PLAN
B.OFFERING_ID
B.PERIOD_END_DT
C.GRANT_DT

  let $PeriodEndDate    = rtrim(&b.period_end_dt, ' ')
  let $GrantDate        = rtrim(&c.grant_dt, ' ')

  do Select-Purchases
  if #Count > 0
    do Print-Grant-Detail
  end-if

from  PS_ST_OFFERING_PD A,
      PS_ST_PURCHASE_PD B,
      PS_ST_OFFER_GRANT C
where A.STOCK_ID        = $StockId
  and A.STOCK_PLAN_TYPE = 'E'
  and A.STOCK_PLAN      = $StockPlan
  and A.OFFERING_ID     = $OfferingId
  and A.STOCK_ID        = B.STOCK_ID
  and A.STOCK_PLAN_TYPE = B.STOCK_PLAN_TYPE
  and A.STOCK_PLAN      = B.STOCK_PLAN
  and A.OFFERING_ID     = B.OFFERING_ID
  and A.STOCK_ID        = C.STOCK_ID
  and A.STOCK_PLAN_TYPE = C.STOCK_PLAN_TYPE
  and A.STOCK_PLAN      = C.STOCK_PLAN
  and A.OFFERING_ID     = C.OFFERING_ID
  and A.OFFERING_STATUS = 'A'
  and C.GRANT_DT       <= B.PERIOD_END_DT
order by B.PERIOD_END_DT, C.GRANT_DT

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Select-Purchases
! Descr:   Select-Purchases
!-----------------------------------------------------------------------
Begin-Procedure Select-Purchases

Begin-Select

E.NAME
D.EMPLID
SUM(D.ESPP_PURCHASE_AMT)   &d.espp_purchase_amt

  let #Count            = #Count + 1
  let $EmplID           = rtrim(&d.emplid, ' ')
  let #PurchaseAmt      = &d.espp_purchase_amt
  let $Name             = rtrim(&e.name,' ')
  let #GrantPurchaseAmt = #GrantPurchaseAmt + #PurchaseAmt
  do Print-Detail

from  PS_ST_ESPP_PURCH   D,
      PS_ST_PERSON_NAME E
where D.STOCK_ID        = $StockId
  and D.STOCK_PLAN_TYPE = 'E'
  and D.STOCK_PLAN      = $StockPlan
  and D.OFFERING_ID     = $OfferingId
  and D.PERIOD_END_DT   = $PeriodEndDate
  and D.GRANT_DT        = $GrantDate
  and D.EMPLID          = E.EMPLID
group by E.NAME, D.EMPLID
order by E.NAME

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Detail
! Descr:   Prints the report detail.
!-----------------------------------------------------------------------
Begin-Procedure Print-Detail

  print $Name                                              (+1,001,030)
  print $EmplID                                            (  ,032,010)
  do Format-DateTime ($GrantDate, $Date, {DEFDATE}, '', '')
  print $Date                                              (  ,044,010)
  do Format-DateTime ($PeriodEndDate, $Date, {DEFDATE}, '', '')
  print $Date                                              (  ,056,010)
  print #PurchaseAmt                                       (  ,068,019) edit $999,999,999.999999

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Grant-Detail
! Descr:   Prints the report detail.
!-----------------------------------------------------------------------
Begin-Procedure Print-Grant-Detail

  let #TotalPurchaseAmt = #TotalPurchaseAmt + #GrantPurchaseAmt
  let #ProPurchaseAmt   = #GrantPurchaseAmt * (1 + #ChangePct)
  let #TotalCount       = #TotalCount + #Count

  print $ActualLbl                                         (+1,055,006)
  print ':'                                                (  ,   ,001)
  print #GrantPurchaseAmt                                  (  ,068,019) edit $999,999,999.999999
  print $ProjectedLbl                                      (+1,055,009)
  print ':'                                                (  ,   ,001)
  print #ProPurchaseAmt                                    (  ,068,019) edit $999,999,999.999999
  print ''                                                 (+1,   ,   )

  let #GrantPurchaseAmt = 0
  let #ProPurchaseAmt   = 0
  let #Count            = 0

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Summary
! Descr:   Prints the report detail.
!-----------------------------------------------------------------------
Begin-Procedure Print-Summary

  if #TotalCount > 0
    let #TotalPurchaseAmt = #TotalPurchaseAmt + #GrantPurchaseAmt
    let #ProPurchaseAmt   = #TotalPurchaseAmt * (1 + #ChangePct)
    let #AvgPurchaseAmt   = #TotalPurchaseAmt / #TotalCount
    print $ActualLbl                                       (+2,001,006) bold underline
    print $TotalContribLbl                                 (+1,001,019)
    print ':'                                              (  ,   ,001)
    print #TotalPurchaseAmt                                (  ,025,019) edit $999,999,999.999999
    print $AverageLbl                                      (+1,001,007)
    print $ContribLbl                                      (  , +1,013)
    print ':'                                              (  ,   ,001)
    print #AvgPurchaseAmt                                  (  ,025,019) edit $999,999,999.999999
    print $NumberParticLbl                                 (+1,001,022)
    print ':'                                              (  ,   ,001)
    print #TotalCount                                      (  ,025,019) edit 9999,999,999.999999
    print $ProjectedLbl                                    (+2,001,009) bold underline
    print $TotalContribLbl                                 (+1,001,019)
    print ':'                                              (  ,   ,001)
    print #ProPurchaseAmt                                  (  ,025,019) edit $999,999,999.999999
  end-if


End-Procedure

!-----------------------------------------------------------------------
! SQC Includes
!-----------------------------------------------------------------------
#include 'strunctl.sqc'   ! Stock Admin's Run Control Record
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'    ! Update Process Open_Trans variable declaration
#include 'eoj.sqc'        ! End of Report Format
#include 'sqrtrans.sqc'   ! Access Strings Table
#include 'reset.sqc'      ! Reset printer procedure
#include 'curdttim.sqc'   ! Get-Current-DateTime procedure
#include 'datemath.sqc'
#include 'datetime.sqc'   ! Routines for date and time formatting
                          ! Procedures: Init-Datetime
                          ! Procedures: Format-DateTime
                          ! Procedures: Diff-Date
                          ! Procedures: many others.
#include 'number.sqc'     ! Procedures: Init-Number
#include 'askftd.sqc'     ! From Thru Date input
#include 'getrplng.sqc'   ! Gets the report language
