!***********************************************************************
!  GPMXIM09:  Instituto Mexicano Del Seguro Social,                    *
!             REPORTE DE MODIFICACION DE SALARIO DEL ASEGURADO         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2020, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  31781263                                            *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

#define c1 1
#define c2 15
#define c3 70
#define c4 90
#define c6 112
#define c7 128
#define c8 138
#define c9 148
#define c11 172
#define c11a 165
#define c98 159
#define c99 168

!***************************************************
! Procedure Init-Report                            *
!***************************************************
begin-procedure Init-Report
  move   'GPMXIM09' to $ReportID
  display $ReportID
  move   'INSTITUTO MEXICANO DEL SEGURO SOCIAL'                            to $ReportTitle1
  move   'DELEGACIÓN DEL IMSS'                                             to $ReportTitle2
  move   'COMUNICACIÓN DE MODIFICACIÓN DE SALARIOS EDI (DISP. MAGNÉTICOS)' to $ReportTitle3
  display $ReportTitle1
  display $ReportTitle2
  display $ReportTitle3
  show 'Ver.2020 PUM37.01'               
  show ' '
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Select-Parameters-IMSS2
  move $Estabid to $Reg_Patronal
  
  Let $Reg_Patronal_RC = $Reg_Patronal
    
  date-time () hh:mi:ss &timeEnded
  Do Report
  if $Flag = 'N'
      display ''
      display 'Con los parámetros solicitados no hay empleados con movimientos'
  end-if
  
end-procedure

!***************************************************
! Heading                                          *
!***************************************************
begin-heading 12
  if $Company  <> $PriorCompany
     do Get-Company-Data-Mex
     move $Company  to $PriorCompany
  end-if
  
  print 'PeopleSoft'            (1,)  center
  uppercase $ReportTitle1
  print     $ReportTitle1       (2,)  center
  uppercase $ReportTitle2
  print     $ReportTitle2       (3,)  center
  uppercase $ReportTitle3
  print     $ReportTitle3       (4,)  center
  print 'Página:'               (5,{c98})
  page-number                   (,{c99})
  print 'Hora:'                 (6,{c98})
  print $ReportTime             (,{c99})
  print 'Fecha:'                (7,{c98})
  print $ReportDate             (,{c99})
  
  print 'Reporte:'              (5,1)
  print $ReportID               (,20)
  print 'Compañía:'             (+1,1)
  do to_upper($CompanyName)
  print $CompanyName            (,20)
  if $print_Estab = 'Y'
       print 'Registro Patronal:' (+1,1)
       print $Estabid             (,20) edit XXXXXXXXXX-X
       do to_upper($Estab_Name)
       print $Estab_Name          (,+2)
  end-if
  do Convert-To-DTU-Date($BegDt,$BegDtP)
  let $BegDtP = substr($BegDtP,9,2) || '-' || substr($BegDtP,6,2) || '-' || substr($BegDtP,1,4)
  do Convert-To-DTU-Date($EndDt,$EndDtP)
  let $EndDtP = substr($EndDtP,9,2) || '-' || substr($EndDtP,6,2) || '-' || substr($EndDtP,1,4)
  let $DateRange = 'del ' || $BegDtP || ' al ' || $EndDtP
  print 'Rango:'                (+1,1)
  print $DateRange              (,20)
  if $Topado = 'Y'
       print '*** Con Tope ***' (+1,1)
    else
       print '*** Sin Tope ***' (+1,1) 
  end-if
  print '='                   (+1,1,177)fill
  print 'Código de'           (+1,{c1})
  print 'Nombre del Empleado' (,{c2})
  print 'Afiliación'          (,{c3})
  print 'C.U.R.P'             (,{c4})
  print 'Fecha de'            (,{c6})
  print 'Tipo'                (,{c7})
  print 'Tipo'                (,{c8})
  print 'Semana'              (,{c9})
  print 'S.D.I.'              (,{c11})
  print 'Empleado'            (+1,{c1})
  print 'I.M.S.S.'            (,{c3})
  print 'Movimiento'          (,{c6})
  print 'Empleado'            (,{c7})
  print 'Salario'             (,{c8})
  print 'Reducida'            (,{c9})
  print '='                   (+1,1,177)fill
end-heading

!***************************************************
! Procedure Main                                   *
!***************************************************
begin-report
  do Init-Report
  do Reset
  do Stdapi-Term
end-report

!***************************************************
! Procedure Report                                 *
!***************************************************
begin-procedure Report
  
Let $Flag = 'N'
Let $ConsiderRow = 'Y'
Let $Isopen = 'N'
move 0 to #EECount
move 1 to #numsec
move 0 to #subnumsec
Let $v_select = ''

  let $EmpIni = rtrim($EmpIni, ' ')
  let $Empfin = rtrim($Empfin, ' ')
  let $TipSal = rtrim($TipSal, ' ')


 if rtrim($Estabid,' ') <> ''
  If $Estab_Opt = 'L'
    let $WhereLocation = 'AND L.ESTABID = ' || '''' || $Estabid ||  ''''
  Else
    let $WhereLocation = 'AND J.ESTABID = ' || '''' || $Estabid ||  ''''
  End-if  
end-if

If $Estab_Opt = 'L'
  Let $FieldEstabId =  'L.ESTABID'
Else
  Let $FieldEstabId =  'J.ESTABID'
End-if  
  
if ($empini <> '') and ($empfin = '')
   Let $v_select = ' AND J.EMPLID = ' || '''' ||  $EmpIni || ''''
end-if

if ($empini <> '') and ($empfin <> '')
   let $v_select = ' AND J.EMPLID BETWEEN ''' || $EmpIni || ''' AND '''  || $EmpFin || ''''
end-if

if ($BegDt <> '') and ($EndDt <> '')
   let $v_select = $v_select || ' AND T.EFFDT BETWEEN ''' || $BegDt || ''' AND ''' || $EndDt || ''''
end-if

if $TipSal <> '0040' and $TipSal <> ''
  let $v_select = $v_select || ' AND JBJR.SALARY_TYPE_MEX = '''  || rtrim($TipSal,' ') || ''''
end-if

if $Reimp_Av = 'N'
  do Advice-Flag
end-if

begin-SELECT
J.EMPLID
J.LOCATION
[$FieldEstabId]  &Estab_id = Char ()   ON-BREAK Print=Never Level=1 AFTER=Print-Establishment BEFORE=Open-File
E.GUIDE_NBR_MEX  &guide_nbr = Char () ON-BREAK Print=Never Level=2 AFTER=Print-Establishment BEFORE=Open-File
T.EFFDT
T.GPMX_SDI_TOT
J.EMPL_RCD
JBJR.WORKER_TYPE_MEX
JBJR.SALARY_TYPE_MEX
JBJR.REDUCED_WEEK_MEX

  Let $Emplid     = Rtrim(&J.EMPLID, ' ') 
  Let #emplRcd    = &J.EMPL_RCD
  Let $Location   = Rtrim(&J.LOCATION, ' ')
  Let $Estab_id   = rtrim(&Estab_id, ' ')
  Let $DatemaxIDS = &T.EFFDT
  Let #SDI        = &T.GPMX_SDI_TOT
  let #IDSInfona  = &T.GPMX_SDI_TOT
  Let $wrker_type = rtrim(&JBJR.WORKER_TYPE_MEX, ' ')
  Let $slry_type  = rtrim(&JBJR.SALARY_TYPE_MEX, ' ')
  Let $reduce_wk  = rtrim(&JBJR.REDUCED_WEEK_MEX, ' ')
  Let $guide_nbr  = lpad(ltrim(rtrim(&guide_nbr, ' '),'0'),5,'0')
  
  #debug show '$Emplid: '  $Emplid
  #debug show 'T.EFFDT: ' &T.EFFDT
  #debug show '#SDI: ' #SDI 
 
  !do Get-Max-DFSalary
  do Get-Name
  
  let #IDSCurr_Comp = #SDI 
     
  if $Topado = 'Y'
     #debug show ' #SDI > #SDIMax  ' #SDI '  '  #SDIMax
     
     Let $UMA_Effdt = $DatemaxIds
     Do Get-Max-UMA
     
     if #SDI > #SDIMax
       let #SDI = #SDImax
      end-if
  end-if
  
  evaluate $wrker_type
    when = '0010'
      move '1' to $Worker_Type
      break
    when = '0020'
      move '2' to $Worker_Type
      break
    when = '0030'
      move '3' to $Worker_Type
      break
  end-evaluate

  evaluate $slry_type
    when = '0010'
      move '0' to $SalaryType
      break
    when = '0030'
      move '1' to $SalaryType
      break
    when = '0020'
      move '2' to $SalaryType
      break
  end-evaluate

  evaluate &JBJR.REDUCED_WEEK_MEX
    when = '0000'
      move '0' to $ReducedWk
      break
    when = '0010'
      move '1' to $ReducedWk
      break
    when = '0020'
      move '2' to $ReducedWk
      break
    when = '0030'
      move '3' to $ReducedWk
      break
    when = '0040'
      move '4' to $ReducedWk
      break
    when = '0050'
      move '5' to $ReducedWk
      break
    when = '0060'
      move '6' to $ReducedWk
      break
  end-evaluate  
  
  do Rotate-Name-For-Mag-Media-Mex
  do GetCurp
  do Get-ImssID
  do to_upper($Names)
  
  do    convert-to-dtu-date (&T.EFFDT,$ChangeDt-dtu)
  do    dtu-parse-date($ChangeDt-dtu,#dtu-yr,#dtu-mo,#dtu-da)
  move  #dtu-yr to $dtu-yr 9999
  move  #dtu-da to $dtu-da 09
  move  #dtu-mo to $dtu-mo 09
  let   $fechamovto = $dtu-da || '/'|| $dtu-mo || '/' ||$dtu-yr
  let   $Fecha = $dtu-da || $dtu-mo || $dtu-yr
  
  do Previous-Value
  if $FoundPrevIDS = 'Y'
     if $Topado = 'Y'
  
        if  #SDI  = #Pre_sdi 
               Let $ConsiderRow = 'N'
               Show 'No existe cambio de salario para este empleado ' $Emplid
         end-if
  else
           if #Pre_sdi_comp = #IDSCurr_Comp
              Let $ConsiderRow = 'N'
          end-if
    end-if
  end-if
  
  if $ConsiderRow = 'Y' 
   
   Print $Emplid                  (+1,{c1})
   Print $Names                   (,{c2},50)
   Print $IMSS_ID                 (,{c3})     edit XXXXXXXXXXbX
   Print $EmplCurp                (,{c4},18)
   Print $fechamovto              (,{c6})
   Print $Worker_Type             (,{c7})     edit XX
   Print $SalaryType              (,{c8})     edit XX       
   Print $ReducedWk               (,{c9})     edit XX
   Print #SDI                     (,{c11a})   edit 9,999,999.90
   
   add 1 to #subnumsec
   add 1 to #EECount
   
   do write-rcd
   do search
   
   Let $Flag = 'Y'
   
  end-if
  
FROM  PS_GPMX_SDI_WA       T,
      PS_JOB               J,
      PS_LOCATION_TBL      L,
      PS_ESTAB_TBL         E,
      PS_JOB_JR            JBJR,
      PS_ACT_RSN_TBL_MEX   S
WHERE
J.EMPLID             = T.EMPLID
AND   J.COMPANY      = $Company
AND   J.EMPL_STATUS  = 'A'
AND   T.SEQNUM       = (SELECT MAX(T2.SEQNUM) FROM PS_GPMX_SDI_WA T2
                        WHERE T2.EMPLID        = T.EMPLID
                        AND   T2.EMPL_RCD      = T.EMPL_RCD
                        AND   T2.EFFDT         = T.EFFDT)
AND   T.SUA_REASON_MEX = '0030'
AND   T.GPMX_SDI_TOT > 0
AND   J.EFFDT        = (SELECT MAX(J1.EFFDT) FROM PS_JOB J1
                        WHERE J1.EMPLID   = T.EMPLID
                        AND   J1.EMPL_RCD = T.EMPL_RCD
                        AND   J1.EFFDT    <= T.EFFDT)
AND   J.EFFSEQ       = (SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
                        WHERE J2.EMPLID   = J.EMPLID
                        AND   J2.EMPL_RCD = J.EMPL_RCD
                        AND   J2.EFFDT    = J.EFFDT)
AND L.SETID          = J.SETID_LOCATION
AND L.LOCATION       = J.LOCATION
AND L.EFFDT          = (SELECT MAX(L1.EFFDT) FROM PS_LOCATION_TBL L1
                        WHERE L1.SETID    = L.SETID
                        AND   L1.LOCATION = L.LOCATION
                        AND   L1.EFFDT   <= T.EFFDT
                        AND L.EFF_STATUS     = 'A')
AND E.EFFDT          = (SELECT MAX(E1.EFFDT) FROM PS_ESTAB_TBL E1
                        WHERE E1.ESTABID = E.ESTABID
                        AND   E1.EFFDT   <= T.EFFDT
                        AND   E1.EFF_STATUS = 'A')
AND E.ESTABID   = [$FieldEstabId]
AND J.EMPLID    = JBJR.EMPLID
AND J.EMPL_RCD  = JBJR.EMPL_RCD
AND J.EFFDT     = JBJR.EFFDT
AND J.EFFSEQ    = JBJR.EFFSEQ
AND S.ACTION    = T.ACTION
AND S.ACTION_REASON = T.ACTION_REASON
[$WhereLocation]
[$v_flag]
[$v_select]
ORDER BY [$FieldEstabId], E.GUIDE_NBR_MEX, J.EMPLID, T.EFFDT
end-SELECT

if #EECount > 0
  do Imprime-Totales
  close 1
end-if
  #debug show ''
  #debug show '$WhereLocation' $WhereLocation
  #debug show '$V_SELECT     '  $V_SELECT
  #debug show '$V_FLAG       ' $V_FLAG
  #debug show '$enddt        ' $enddt

end-procedure

!**********************************************************
begin-procedure GetCurp
begin-select
CURP.NATIONAL_ID
    let $EmplCurp = &CURP.NATIONAL_ID
FROM PS_PERS_NID CURP WHERE CURP.NATIONAL_ID_TYPE='CURP' AND CURP.EMPLID=$Emplid AND CURP.COUNTRY='MEX'
end-select
end-procedure
!**********************************************************

!**********************************************************
begin-procedure Get-ImssID
begin-select
IM.NATIONAL_ID
    let $IMSS_ID = &IM.NATIONAL_ID
FROM PS_PERS_NID IM WHERE IM.NATIONAL_ID_TYPE='IMSS' AND IM.EMPLID=$Emplid AND IM.COUNTRY='MEX'
end-select
end-procedure
!**********************************************************

!***************************************************
! Procedure Advice-Flag                            *
!***************************************************
begin-procedure Advice-Flag
 let $YesFlag = 'Y'
 let $v_flag = 'AND J.EMPLID NOT IN (SELECT FLG.EMPLID FROM PS_GPMX_IMS_CONTR FLG '
 let $v_flag = $v_flag || 'WHERE FLG.EMPLID = J.EMPLID '
 let $v_flag = $v_flag || 'AND   FLG.EFFDT  = T.EFFDT '
 let $v_flag = $v_flag || 'AND   FLG.GPMX_IMS_MOD_DEV = ''' || $YesFlag || '''' || ')'
end-procedure

!***************************************************
! Procedure Imprime-Totales                        *
!***************************************************
begin-Procedure Imprime-Totales
print 'TOTAL DE MODIFICACIONES AL SALARIO REGISTRADAS : ' (+2,1) bold
print #numsec ()  edit 8888888 bold
print '' (+2,1)
end-procedure

!***************************************************
! Procedure Get-Max-DFSalary                          *
!***************************************************
begin-procedure Get-Max-DFSalary
begin-select
WZ.GPMX_MINIMUM_WAGE      &WZ.GPMX_MINIMUM_WAGE
  Let #SDImaxDF = 25 *  &WZ.GPMX_MINIMUM_WAGE
  
FROM PS_GPMX_MIN_WAGE WZ
WHERE  WZ.WAGE_ZONE_MEX  = '10'
AND    WZ.EFFDT      = (SELECT MAX(EFFDT) 
                        FROM PS_GPMX_MIN_WAGE
                        WHERE WAGE_ZONE_MEX = WZ.WAGE_ZONE_MEX
                        AND EFFDT <= $DatemaxIDS)
end-select

end-procedure Get-Max-DFSalary 

!**************************************                    
begin-procedure Get-Max-DFSalary_Prev
let #SDImaxDFPrev = 0

begin-select
WZ2.GPMX_MINIMUM_WAGE        &MIN_RATE2 
    let #SDImaxDFPrev = 25 *  &MIN_RATE2
FROM PS_GPMX_MIN_WAGE WZ2
WHERE  WZ2.WAGE_ZONE_MEX  = '10'
AND    WZ2.EFFDT      = (SELECT MAX(EFFDT) 
                        FROM   PS_GPMX_MIN_WAGE
                        WHERE WAGE_ZONE_MEX = '10'
                        AND EFFDT <= $DatemaxIdsPrev)
end-select

end-procedure Get-Max-DFSalary_Prev

!***************************************************
! Procedure Write-Rcd                              *
!***************************************************
begin-procedure Write-Rcd
   let  #IDSCurrok = #SDI * 100
   move #IDSCurrok to $IDS 000009
   let #IDSINFONA2  = #IDSInfona * 100
   move #IDSINFONA2 to $IDSInfona  000009
   do to_upper($EmpPat)
   do to_upper($EmpMat)
   do to_upper($Name)
   
   Write 1 FROM    $Estab_id:11   -
                   $IMSS_ID:11 -
                   $EmpPat:27 -
                   $EmpMat:27 -
                   $Name:27 -
                   $IDS:6 -
                   $IDSInfona:6 -
                   $Worker_Type:1 -
                   $SalaryType:1 -
                   $ReducedWk:1 -
                   $Fecha:8 -
                   '     ' -
                   '07' -
                   $guide_nbr:5 -
                   &J.EMPLID:10 -
                   ' ' -
                   $EmplCurp:18 -
                   '9'
    move ' ' to $EmplCurp
    move ' ' to $IMSS_ID
end-procedure Write-Rcd


!***************************************************
! Procedure Write-Total                            *
!***************************************************
begin-procedure Write-Total
   if #EECount > 0
      move   #EECount           to  $EECount           000000

      Write 1 FROM '*************' -
                   '                                           ':43 -
                   $EECount:6 -
                   '                                                                       ':71 -
                   $guide_nbr:5 -
                   '                             ':29 -
                   '9'
   end-if
end-procedure Write-Total


!***************************************************
! Procedure SEARCH                                 *
!***************************************************
begin-procedure SEARCH
begin-select
COUNT(*) &TOTAL
FROM PS_GPMX_IMS_CONTR  P4
WHERE P4.EMPLID  = &J.EMPLID
  AND P4.EFFDT   = &T.EFFDT
end-select
  if &TOTAL = 0
     do INSERT_1
  else
     do UPDATE_1
  end-if
end-procedure SEARCH


!***************************************************
! Procedure INSERT_1                               *
!***************************************************
begin-procedure INSERT_1
begin-sql
INSERT INTO PS_GPMX_IMS_CONTR
       (EMPLID,
        EFFDT,
        GPMX_IMS_HIRE_ADV,
        GPMX_IMS_MOD_ADV,
        GPMX_IMS_TER_ADV,
        GPMX_IMS_HIRE_DEV,
        GPMX_IMS_MOD_DEV,
        GPMX_IMS_TER_DEV,
        GPMX_IMS_HIRE_EDI,
        GPMX_IMS_MOD_EDI,
        GPMX_IMS_TER_EDI)
VALUES (&J.EMPLID,
        &T.EFFDT,
        'N',
        'N',
        'N',
        'N',
        'Y',
        'N',
        'N',
        'N',
        'N')
end-sql
end-procedure

!***************************************************
! Procedure UPDATE_1                               *
!***************************************************
begin-procedure UPDATE_1
begin-sql
UPDATE PS_GPMX_IMS_CONTR
SET  GPMX_IMS_MOD_DEV = 'Y'
WHERE EMPLID  = &J.EMPLID
  AND EFFDT   = &T.EFFDT
end-sql
end-procedure

!***************************************************
! Procedure TO_UPPER                               *
!***************************************************
begin-procedure TO_UPPER(:$in)
  let $in = rtrim($in,' ')
  let #c = 1
  let $cad = ''
  while #c <= length($in)
     let $char_aux = substr($in,#c,1)
     let $char = lower($char_aux)     
     evaluate $char
        when = 'á'
        when = 'â'
        when = 'ä'
        when = 'à'
        when = 'å'
           let $let = 'A'
           break
        when = 'é'
        when = 'ê'
        when = 'ë'
        when = 'è'
           let $let = 'E'
           break
        when = 'í'
        when = 'ï'
        when = 'î'
        when = 'ì'
           let $let = 'I'
           break
        when = 'ô'
        when = 'ö'
        when = 'ò'
        when = 'ó'
           let $let = 'O'
           break
        when = 'ü'
        when = 'û'
        when = 'ù'
        when = 'ú'
           let $let = 'U'
           break
        when = 'ñ'
           let $let = 'N'
           break
        when-other
           let $let = upper($char)
           break
     end-evaluate
     let $cad = $cad || $let
     let #c = #c + 1
  end-while
  let $in = $cad
end-procedure

!***************************************************
! Procedure OPEN-FILE                              *
!***************************************************
begin-procedure OPEN-FILE
 if $Isopen = 'N'
  let $FILE_NAME =  '{FILEPREFIX}' || 'GPMXIM09-' || to_char(#numsec) ||'.TXT' || '{FILESUFFIX}'
  show '$FILE_NAME: '  $FILE_NAME
  open $FILE_NAME as 1 for-writing record=168:fixed STATUS=#FILESTAT
  let $Isopen = 'Y'
 end-if 
end-procedure

!***************************************************
! Procedure Get-Name                               *
!***************************************************
begin-procedure Get-Name
begin-select
B.FIRST_NAME,
B.LAST_NAME,
B.SECOND_LAST_NAME

  Let $Name        = &B.FIRST_NAME
  Let $EmpPat      = &B.LAST_NAME
  Let $EmpMat      = &B.SECOND_LAST_NAME
    
FROM PS_NAMES B
WHERE B.EMPLID    = $Emplid
AND   B.NAME_TYPE = 'PRI'
AND   B.EFFDT     = (SELECT MAX(EFFDT) FROM  PS_NAMES B2
                     WHERE B2.EMPLID = B.EMPLID
                     AND B2.NAME_TYPE = B.NAME_TYPE
                     AND B2.EFFDT <= $DatemaxIDS)
end-select
end-procedure Get-Name

!**************************************
begin-procedure Previous-Value
#debug show 'Previous-Value'
!Only SDI data
!**************************************
 let #Pre_sdi = 0
 let #Pre_cap = 0
 Let $ConsiderRow = 'Y'
 Let $FoundPrevIDS = 'N'
 
begin-select  
M.EMPLID
M.EFFDT
M.GPMX_SDI_TOT
M.GPMX_MAX_EM

  Let #Pre_sdi = &M.GPMX_SDI_TOT
  Let $DatemaxIdsPrev = &M.EFFDT
  Let #Pre_cap = &M.GPMX_MAX_EM
  Let #Pre_sdi_comp = #Pre_sdi
  
  #debug show '#Pre_sdi: '  #Pre_sdi
  
  !Do Get-Max-DFSalary_Prev
  if $Topado = 'Y'
     Let $UMA_Effdt = $DatemaxIdsPrev
     Do Get-Max-UMA
     
     if #Pre_sdi > #SDIMax 
        let #Pre_sdi = #SDIMax
     end-if
  end-if
  
  Let $FoundPrevIDS = 'Y'
  
    
FROM  PS_GPMX_SDI_WA M 
WHERE M.EMPLID = $Emplid
AND M.EMPL_RCD = #emplRcd
AND M.EFFDT  = (SELECT MAX(M2.EFFDT) 
                FROM PS_GPMX_SDI_WA M2
                WHERE M2.EMPLID = M.EMPLID
                AND M2.EMPL_RCD = M.EMPL_RCD
                AND M2.EFFDT    < $DatemaxIDS) 
AND  M.SEQNUM = (SELECT MAX(SEQNUM) FROM PS_GPMX_SDI_WA
                 WHERE EMPLID  = M.EMPLID
                 AND EFFDT  = M.EFFDT)                
!AND M.SUA_REASON_MEX IN ('0030','0010')
ORDER BY M.EMPLID, M.EFFDT
end-select

!show ' #Pre_sdi: ' #Pre_sdi
end-procedure Previous-Value

!**************************************
begin-procedure Print-Establishment
!**************************************
if #subnumsec > 0
 print ''                                 (+1,)
 print 'MODIFICACIONES AL SALARIO REGISTRADAS:'   (+1,{c1})
 print #subnumsec                                 (,+2)  edit 8888888
 print 'Establecimiento:'                 (,{c3})
 print $Estab_id                          (,{c4})
 print 'Guía:'                            (,{c6})
 print $guide_nbr                         (,{c7}) edit XXXXX
 print ''                                 (+1,)

 do Write-Total
 move 0 to #subnumsec
 move 0 to #EECount
 add 1 to #numsec
 close 1
 let $Isopen = 'N'
end-if
end-procedure Print-Establishment


#Include 'reset.sqc'    !Reset printer procedure
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'datetime.sqc' !Routines for date and time formatting
#Include 'number.sqc'   !Routines to format numbers
#Include 'stdapi.sqc'   !Update Process API
#Include 'datemath.sqc' !Routines for date math
#include 'gpmxnotf.sqc' !Get-Run-Control procedure
#include 'getcomex.sqc'  !Get-Company-data-Mex
#include 'gpmxrtn2.sqc'
