!***********************************************************************
!  GPHKIRR5:  IR56G                                                    *
!             Notify Employee Departing HKG                            *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2017, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!----------------------------------------------------------------------*
!                                                                      *
!       $Release:  HR92                                                *
!           $Bug:  25996997                                            *
!                                                                      *
!***********************************************************************
!ICE #    Issue / Resolution                                           *
!----------------------------------------------------------------------*
!66309001 Changes in Layout, New rows added, Processing Overseas Amt   *
!18/4/02  Processing by Tax Reference Number & Mult currency processing*
!                                                                      *
!         The SQR has been modified to allow multi currency processing *
!         Also processing is done by tax reference number.             *
!         The layout has also been changed                             *
!                                                                      *
!581760000 Legislative format changes for the IR56G.                   *
!04/06/03                                                              *
!          The SQR has been modified to fit all the Legislative changes*
!          Removed under lines in point number 11, Lines are adjusted  *
!          in one line wherever applicable, date format is changed to  *
!          English date format, if page overflows to the second page   *
!          then Header and Footer for that page will be printed, Page  *
!          number is displayed. If some lines overflow to the 2 line   *
!          special care has taken for those lines.                     *
!                                                                      *
!681383000  Report should print creation date instead of print date.   !
!14/06/04   SQR modified to use CREATION_DT from GPSG_IR56_TBL record  !
!            to print Creation date on the IR reports.                 !
!                                                                      !
!***********************************************************************
!
#include 'setenv.sqc'    !Set environment

#define PAGEWIDTH  200
begin-setup
#include 'setupdb.sqc'
  page-size 70 280

  declare printer
        type          = HPLASERJET
        orientation   = portrait
        chars-inch    = 28.0
        top-margin    = 1.0
        left-margin   = 1.0
        font          = 5
        point-size    = 12
        lines-inch    = 5.0
End-Setup

!********************************************************************
! Procedure :   Report
!********************************************************************
begin-report
  Let $MainHead     = 'LEAVING HONG KONG CASE'
  let $ReportHead   = 'NOTIFICATION'
  Let $ReportTitle  = '(Under Section 52(6) of the Inland Revenue Ordinance, Chapter 112)'
  Let $ReportTitle1 = 'BY AN EMPLOYER OF AN EMPLOYEE WHO IS ABOUT TO DEPART FROM HONG KONG'

  let #Font_Num = 5
  let #Font_OldSize = 11
  let #Font_NewSize = 14
  let #Font_Fixed = 1
  let #Font_Pitch = 5

  Let $ReportType   = 'G'
  Let $ReportDateType = '1'
  Do Stdapi-Init
  Do Init-DateTime
  Do Get-Current-DateTime
  Do Get-RC-Parm



  Let $ER_FileNumber  = ''
  Let $ER_Signatory   = ''
  Let $ER_Designation = ''

  Do Get-TaxRef-Details
  Do Get-TaxRef-PayEntity

  Do Pay-Entity-Details

  Do Check-EE-RC-List
  if #EEList
     Do Process-EE-In-List
  else
     Do Process-Dynamic-List
  End-if
  Do Delete-RC-Parms
  Do Stdapi-Term
end-report





!
!********************************************************************
! Procedure :   Get-RC-Parm
!********************************************************************
Begin-Procedure Get-RC-Parm
Begin-SELECT
GPHK_TAX_REF_NUM
GPHK_TAX_YEAR
GPHK_REPRINT_YN
GPHK_IR56B_TYPE
PRINT_DATE
GPHK_TXYR_EDT
GPHK_TXYR_BDT
CURRENCY_CD
GPHK_PRD_END_DT

      let $TaxRefNum = &GPHK_TAX_REF_NUM
      let #TaxYear   = &GPHK_TAX_YEAR
      let $RePrintYN = &GPHK_REPRINT_YN
      let $IR56BType = &GPHK_IR56B_TYPE
     ! let $PrintDate = &PRINT_DATE
      Let $Tax_Yr_March = &GPHK_TXYR_EDT
      Let $CurrencyCd   = &CURRENCY_CD
      Let $PrdEndDt     = &GPHK_PRD_END_DT

     !Do Format-DateTime($PrintDate, $PrintDate, {DEFDATE},'','')

      Do Convert-To-DTU-Date(&GPHK_TXYR_EDT,$TaxYrEDT_DTU)
      Do dtu-Parse-Date($TaxYrEDT_DTU,#D_YR,#D_MN,#D_DY)
      Let $TXYR_Day = edit(#D_DY,'99')
      Let $TXYR_YR  = edit(#D_YR,'9999')

      Evaluate #D_MN
         When = 1
               Let $Month_Print = ' January '
               break
         When = 2
               Let $Month_Print = ' February '
               break
         When = 3
               Let $Month_Print = ' March '
               break
         When = 4
               Let $Month_Print = ' April '
               break
         When = 5
               Let $Month_Print = ' May '
               break
         When = 6
               Let $Month_Print = ' June '
               break
         When = 7
               Let $Month_Print = ' July '
               break
         When = 8
               Let $Month_Print = ' August '
               break
         When = 9
               Let $Month_Print = ' September '
               break
         When = 10
               Let $Month_Print = ' October '
               break
         When = 11
               Let $Month_Print = ' November '
               break
         When = 12
               Let $Month_Print = ' December '
               break
      End-Evaluate
      Let $PrnTxYrDt = $TXYR_Day || $Month_Print || $TXYR_YR

      If $RePrintYN = 'Y'
         Let $WhereClause = ' AND PM.GPHK_ISSUE_STATUS IN (''1'',''2'')'
      Else
         Let $WhereClause = ' AND PM.GPHK_ISSUE_STATUS = ''2'''
      End-if

      Let $CurrencyClause = ''
      Let $CurrencyClause1 = ''
      if rtrim($CurrencyCd,' ') <> ''
         Let $CurrencyClause = ' AND AMT.CURRENCY_CD = ' || '''' || $CurrencyCd || ''''
         Let $CurrencyClause1 = ' AND AMT1.CURRENCY_CD = ' || '''' || $CurrencyCd || ''''
         Let $CurrLbl = '(' || $CurrencyCd || ')'
         Let $CurrLbl1 = 'Amount (' || $CurrencyCd || ')'
      else
         Let $CurrLbl1 = 'Amount (HK$)'
      End-if

     FROM PS_GPHK_I56_RUNCTL
    WHERE OPRID       = $PRCS_OPRID
      AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT
End-Procedure   !Get-RC-Parm

!
!********************************************************************
! Procedure :   Currency-Conversion
!********************************************************************

Begin-Procedure Currency-Conversion
let #Rate_multiplier = 0
if ltrim(rtrim($TempCurrencycode, ' '),' ')<>'' AND #TempCurrency <> 0
Begin-SELECT
RATE_MULT
  Let #Rate_multiplier = &RATE_MULT
FROM PS_RT_RATE_TBL
WHERE RT_TYPE= (SELECT RT_TYPE FROM PS_GPHK_EXCHG_TBL
                WHERE GPHK_TAX_YEAR = (SELECT MAX(A1.GPHK_TAX_YEAR)
                                       FROM PS_GPHK_EXCHG_TBL A1
                                       WHERE A1.GPHK_TAX_YEAR <= #TaxYear))
AND FROM_CUR = $TempCurrencycode
AND TO_CUR = 'HKD'
AND EFFDT <= (SELECT EFFDT_FROM FROM PS_GPHK_EXCHG_TBL
             WHERE GPHK_TAX_YEAR = (SELECT MAX(A1.GPHK_TAX_YEAR)
                                    FROM PS_GPHK_EXCHG_TBL A1
                                    WHERE A1.GPHK_TAX_YEAR <= #TaxYear))
End-SELECT
end-if
  let #TempCurrency = #OvseasAmt * #Rate_multiplier
  let #TempCurrency = Trunc(#TempCurrency, 0)
End-Procedure

!
!********************************************************************
! Procedure :   Currency-Conversion-ER
!********************************************************************

Begin-Procedure Currency-Conversion-ER
let #Rate_multiplier = 0
if ltrim(rtrim($TempCurrencycode1, ' '),' ')<>'' AND #TempCurrency1 <> 0
Begin-SELECT
B1.RATE_MULT
  Let #Rate_multiplier = &B1.RATE_MULT
FROM PS_RT_RATE_TBL B1
WHERE RT_TYPE= (SELECT RT_TYPE FROM PS_GPHK_EXCHG_TBL B2
                WHERE GPHK_TAX_YEAR = (SELECT MAX(B2.GPHK_TAX_YEAR)
                                       FROM PS_GPHK_EXCHG_TBL B2
                                       WHERE B2.GPHK_TAX_YEAR <= #TaxYear))
AND FROM_CUR = $TempCurrencycode1
AND TO_CUR = 'HKD'
AND EFFDT <= (SELECT EFFDT_FROM FROM PS_GPHK_EXCHG_TBL B3
             WHERE GPHK_TAX_YEAR = (SELECT MAX(B3.GPHK_TAX_YEAR)
                                    FROM PS_GPHK_EXCHG_TBL B3
                                    WHERE B3.GPHK_TAX_YEAR <= #TaxYear))
End-SELECT
end-if
  let #TempCurrency1 = #EmplrPdAmt * #Rate_multiplier
  
  let #TempCurrency1 = Trunc(#TempCurrency1, 0)
  
End-Procedure


!
!********************************************************************
! Procedure :   Check-EE-RC-List
!********************************************************************
Begin-Procedure Check-EE-RC-List
  Let #EEList = 0
Begin-SELECT
CHK.EMPLID
       Let #EEList = 1
     FROM PS_GPHK_I56_EE_RC CHK
    WHERE CHK.OPRID       = $PRCS_OPRID
      AND CHK.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT
End-Procedure   Check-EE-RC-List
!
!********************************************************************
! Procedure :   Process-EE-In-List
!********************************************************************
Begin-Procedure Process-EE-In-List
Begin-SELECT
A1.EMPLID          &PEL_Emplid
A1.GPHK_SERIAL_NUM &PEL_SerialNum
A1.GPHK_SHEET_NUM  &PEL_SheetNum
A1.CREATION_DT     &PEL_Creation_dt
     let $PrintDate = &PEL_Creation_dt
     Do Format-DateTime($PrintDate, $PrintDate, {DEFDATE},'','')

     Let $Emplid    = &PEL_Emplid
     Let #SerialNum = &PEL_SerialNum

     if rtrim($CurrencyCd,' ') <> ''
        Do Check-Currency-Payment
        if $PaidInSelected = 'Y'
           Do Process-Main
        end-if
     else
        Do Process-Main
     end-if

  FROM PS_GPHK_I56_EE_RC CHK, PS_GPHK_IR56_TBL A1
    WHERE CHK.OPRID           = $PRCS_OPRID
      AND CHK.RUN_CNTL_ID     = $PRCS_RUN_CNTL_ID
      AND CHK.EMPLID          = A1.EMPLID
      AND A1.GPHK_REPORT_TYPE = $ReportType
      AND A1.GPHK_TAX_YEAR    = #TaxYear
      AND A1.GPHK_TAX_REF_NUM = $TaxRefNum
      AND A1.GPHK_SERIAL_NUM  = (SELECT MAX(A11.GPHK_SERIAL_NUM) FROM PS_GPHK_IR56_TBL A11
                                   WHERE A11.GPHK_REPORT_TYPE = A1.GPHK_REPORT_TYPE
                                     AND A11.GPHK_TAX_YEAR    = A1.GPHK_TAX_YEAR
                                     AND A11.GPHK_TAX_REF_NUM = A1.GPHK_TAX_REF_NUM
                                     AND A11.EMPLID           = A1.EMPLID
                                )
 ORDER BY A1.GPHK_SHEET_NUM
End-SELECT
End-Procedure   Process-EE-In-List
!
!********************************************************************
! Procedure :   Process-Dynamic-List
!********************************************************************
Begin-Procedure Process-Dynamic-List
   Let #no_pages = 1
Begin-SELECT
A.EMPLID          &PDL_Emplid
A.GPHK_SERIAL_NUM &PDL_SerialNum
A.GPHK_SHEET_NUM  &PDL_SheetNum
A.CREATION_DT    &PDL_Creation_dt
     let $PrintDate = &PDL_Creation_dt
     Do Format-DateTime($PrintDate, $PrintDate, {DEFDATE},'','')

     let $Emplid    = &PDL_Emplid
     Let #SerialNum = &PDL_SerialNum

     if rtrim($CurrencyCd,' ') <> ''
        Do Check-Currency-Payment
        if $PaidInSelected = 'Y'
        Do Process-Main
        end-if
     else
        Do Process-Main
     end-if

   FROM PS_GPHK_IR56_TBL A
    WHERE A.GPHK_REPORT_TYPE = $ReportType
      AND A.GPHK_TAX_YEAR    = #TaxYear
      AND A.GPHK_TAX_REF_NUM = $TaxRefNum
      AND A.GPHK_SERIAL_NUM  = (SELECT MAX(A1.GPHK_SERIAL_NUM) FROM PS_GPHK_IR56_TBL A1
                                   WHERE A1.GPHK_REPORT_TYPE = A.GPHK_REPORT_TYPE
                                     AND A1.GPHK_TAX_YEAR    = A.GPHK_TAX_YEAR
                                     AND A1.GPHK_TAX_REF_NUM = A.GPHK_TAX_REF_NUM
                                     AND A1.EMPLID           = A.EMPLID
                               )
 ORDER BY A.GPHK_SHEET_NUM
End-SELECT
End-Procedure   Process-Dynamic-List
!
!********************************************************************
! Procedure :   Delete-RC-Parms
!********************************************************************
Begin-Procedure Delete-RC-Parms
begin-SQL
DELETE FROM PS_GPHK_I56_RUNCTL
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SQL
begin-SQL
DELETE FROM PS_GPHK_I56_EE_RC
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SQL
End-Procedure   Delete-RC-Parms
!
!********************************************************************
! Procedure :   Process-Main
!********************************************************************
Begin-Procedure Process-Main
Begin-SELECT
PM.GPHK_PRD_BGN_DT
PM.GPHK_PRD_END_DT
PM.GPHK_SHEET_NUM
PM.GPHK_IR56_REMARKS
PM.GPHK_OVSEAS_AMT
PM.GPHK_PD_LTR_AMT
PM.GPHK_WITHHELD_AMT
PM.GPHK_WTHELD_RSN
PM.GPHK_EMPLR_PD_AMT
PM.GPHK_STPD_BDT
PM.GPHK_STPD_EDT
PM.GPHK_IR56_STATUS
PM.GPHK_OVS_CNC_CD
PM.GPHK_ER_TX_PD_CY
PM.NATIONAL_ID_TYPE
PM.NATIONAL_ID
PM.PASSPORT_NBR
PM.GPHK_SHARE_GRANTED
PM.GPHK_SHARE_EXER
PM.GRANT_DT
PM.CREATION_DT
PM.CURRENCY_CD
PM.CURRENCY_CD_ER

    Do Init-Prn-Var
    Let $PrintDate    = &PM.CREATION_DT
    Let $PrdBeginDt   = &PM.GPHK_PRD_BGN_DT
    Let $PrdEndDt     = &PM.GPHK_PRD_END_DT
    Let $PrdEndDt2     = &PM.GPHK_PRD_END_DT
    Let #SheetNumber  = &PM.GPHK_SHEET_NUM
    Let $IR56_Remarks = &PM.GPHK_IR56_REMARKS
    Let $CurrencyCode1 = &PM.CURRENCY_CD
    Let $CurrencyCode2 = &PM.CURRENCY_CD_ER

    Let #OvseasAmt    = &PM.GPHK_OVSEAS_AMT

  !  Let #OvseasAmt    = Trunc(#OvseasAmt,0) 

    Let #WithheldAmt  = &PM.GPHK_WITHHELD_AMT
    Let $WithheldRsn  = &PM.GPHK_WTHELD_RSN

    Let #EmplrPdAmt   = &PM.GPHK_EMPLR_PD_AMT
    Let #EmplrPDLtrAmt= trunc(&PM.GPHK_PD_LTR_AMT,0)
    Let $CopyVersion  = &PM.GPHK_IR56_STATUS
    Let $OvseasCode   = &PM.GPHK_OVS_CNC_CD
    Let $EmplrBearTax = &PM.GPHK_ER_TX_PD_CY
    Let $EE_PassPort  = &PM.PASSPORT_NBR
    Let $EE_ID_No     = &PM.NATIONAL_ID

    let #TempCurrency = #OvseasAmt
    let #TempCurrency1 = #EmplrPdAmt
    let $TempCurrencycode = $CurrencyCode1
    let $TempCurrencycode1 = $CurrencyCode2
    Do Currency-Conversion
    Do Currency-Conversion-ER


    Let $ShareGranted_YN = &PM.GPHK_SHARE_GRANTED
    Let #ShareExer       = &PM.GPHK_SHARE_EXER
    Let $GrantDate       = &PM.GRANT_DT

    Do Format-DateTime($PrintDate,$PrintDate, {DEFDATE},'','')
    Do Format-DateTime($PrdBeginDt,$PrdBeginDt, {DEFDATE},'','')
    Do Format-DateTime($PrdEndDt,$PrdEndDt, {DEFDATE},'','')

    if rtrim(&PM.GPHK_STPD_BDT,' ') = ''
       Let $V08_PrdBeginDt = $PrdBeginDt
    else
       Let $V08_PrdBeginDt = &PM.GPHK_STPD_BDT
       Do Format-DateTime($V08_PrdBeginDt,$V08_PrdBeginDt, {DEFDATE},'','')
    end-if
    if rtrim(&PM.GPHK_STPD_EDT,' ') = ''
       Let $V08_PrdEndDt = $PrdEndDt
    else
       Let $V08_PrdEndDt = &PM.GPHK_STPD_EDT
       Do Format-DateTime($V08_PrdEndDt,$V08_PrdEndDt, {DEFDATE},'','')
    end-if

    if rtrim($GrantDate,' ') <> ''
       Do Format-DateTime($GrantDate,$GrantDate, {DEFDATE},'','')
    End-if

    if rtrim($OvseasCode,' ') <> ''
       Do Get-Overseas-Concern
    end-if

    Do Get-EE-Details
    Do Get-EE-Quarter-Count
    Do Retrieve-EE-Amounts
    Do Print-Document
    Do Update-Issue-Status

    FROM PS_GPHK_IR56_TBL PM
    WHERE PM.EMPLID           = $Emplid
      AND PM.GPHK_SERIAL_NUM  = #SerialNum
      AND PM.GPHK_REPORT_TYPE = $ReportType
      AND PM.GPHK_TAX_YEAR    = #TaxYear
      AND PM.GPHK_TAX_REF_NUM = $TaxRefNum
[$WhereClause]
End-SELECT
End-Procedure   Process-Main
!
!********************************************************************
! Procedure :   Get-Overseas-Concern
!********************************************************************
Begin-Procedure Get-Overseas-Concern
Begin-SELECT
OS.GPHK_OVSEAS_ADR        &OvseasAdr
OS.GPHK_OVSEAS_CMPNY      &OvseasCmpny

    Let $OvseasAdr   = &OvseasAdr
    Let $OvseasCmpny = &OvseasCmpny

    FROM PS_GPHK_OVS_CNCRN OS
   WHERE OS.GPHK_OVS_CNC_CD = $OvseasCode
End-SELECT
End-Procedure   Get-Overseas-Concern
!
!********************************************************************
! Procedure :   Init-Prn-Var
!********************************************************************
Begin-Procedure Init-Prn-Var
    Let $PrdBeginDt   = ''
    Let $PrdEndDt     = ''
    Let #SheetNumber  =  0

    Let $EE_ID_No                = ''
    Let $EE_Tax_No               = ''
    Let $EE_SurName              = ''
    Let $EE_Maiden_SurName       = ''
    Let $EE_Full_Name            = ''
    Let $EE_Name_AC              = ''
    Let $EE_PassPort             = ''
    Let $EE_PP_Cntry_Issue       = ''
    Let $EE_Sex                  = ''
    Let $EE_MarStatus            = ''
    Let $EE_SpouseName           = ''
    Let $EE_Spouse_PP_No         = ''
    Let $EE_Spouse_ID_No         = ''
    Let $EE_Spouse_PP_CntryIssue = ''
    Let $EE_Resid_Address        = ''
    Let $EE_Corr_Address         = ''
    Let $EE_Job_Descr            = ''
    Let $EE_Job_FP_Time          = ''
    Let $EE_JobCode              = ''
    Let $EE_PT_Employer          = ''
    Let $EE_Tel_No               = ''

    Let #TotalWages        = 0
    Let #TotalLeavePay     = 0
    Let #TotalDirectorFee  = 0
    Let #TotalCommission   = 0
    Let #TotalBonus        = 0
    Let #TotalBP_TA_Graty  = 0
    Let #TotalRetireScheme = 0
    Let #TotalEducBenefit  = 0
    Let #TotalShareOptSch  = 0
    Let #TotalAllowance1   = 0
    Let #TotalAllowance2   = 0
    Let #TotalAllowance3   = 0

    Let $AllowanceDescr1   = ''
    Let $AllowanceDescr2   = ''
    Let $AllowanceDescr3   = ''

    Let #TotalPensions     = 0

    Let $IR56_Remarks      = ''
    Let $OvseasCmpny       = ''
    Let #OvseasAmt         = ''
    Let $OvseasAdr         = ''
    Let #WithheldAmt       = 0
    Let $WithheldRsn       = ''

    Let #EmplrPdAmt        = 0
    Let #EmplrPDLtrAmt     = 0

    Let $Qtrs_1_Address    = ''
    Let $Qtrs_1_Nature     = ''
    Let $Qtrs_1_Prd_Begin  = ''
    Let $Qtrs_1_Prd_End    = ''
    Let #Amt_Qtrs_1_ER2LL  = 0
    Let #Amt_Qtrs_1_EE2LL  = 0
    Let #Amt_Qtrs_1_ER2EE  = 0
    Let #Amt_Qtrs_1_EE2ER  = 0

    Let $Qtrs_2_Address    = ''
    Let $Qtrs_2_Nature     = ''
    Let $Qtrs_2_Prd_Begin  = ''
    Let $Qtrs_2_Prd_End    = ''
    Let #Amt_Qtrs_2_ER2LL  = 0
    Let #Amt_Qtrs_2_EE2LL  = 0
    Let #Amt_Qtrs_2_ER2EE  = 0
    Let #Amt_Qtrs_2_EE2ER  = 0

End-Procedure   Init-Print-Variables
!
!********************************************************************
! Procedure :   Get-EE-Personal-Data
!********************************************************************
Begin-Procedure Get-EE-Personal-Data
Begin-SELECT
PDA.SEX           &SexType
PDA.MAR_STATUS    &MarStatusType

    Let $EE_Sex       = &SexType
    Let $EE_MarStatus = &MarStatusType

    if $EE_Sex = 'F' and $EE_MarStatus ='M'
       Do Get-EE-Maiden-Name
    End-if

    FROM PS_PERS_DATA_EFFDT PDA
   WHERE PDA.EMPLID = $Emplid
     AND PDA.EFFDT = (SELECT MAX(PDA1.EFFDT) FROM PS_PERS_DATA_EFFDT PDA1
                        WHERE PDA1.EMPLID = PDA.EMPLID
                          AND PDA1.EFFDT <= $AsofToday)
End-SELECT
End-Procedure   Get-EE-Personal-Data
!
!********************************************************************
! Procedure :   Get-EE-Names
!********************************************************************
Begin-Procedure Get-EE-Names
Begin-SELECT
NM.NAME_PREFIX
NM.NAME
NM.FIRST_NAME
NM.MIDDLE_NAME
NM.LAST_NAME
NM.PREF_FIRST_NAME
NM.NAME_AC
    Let $EE_SurName   = RTRIM(&NM.LAST_NAME,' ')
    Let $EE_LstName   = RTRIM(&NM.LAST_NAME,' ')
    Let $EE_SurName   = translate($EE_SurName,' ','-')
    let $Name         = &NM.NAME
    !Let $EE_Full_Name = RTRIM(&NM.NAME_PREFIX,' ') || ' ' || rtrim($Name,' ')
    Let $EE_Full_Name = RTRIM(&NM.NAME_PREFIX,' ') || ' ' || rtrim($EE_LstName,' ') || ','
    Let $EE_Name_AC   = &NM.NAME_AC
   ! if rtrim(&NM.PREF_FIRST_NAME,' ') <> ''
   !    Let $EE_Full_Name = $EE_Full_Name || ' ' || rtrim(&NM.PREF_FIRST_NAME,' ')
   ! end-if

     if rtrim(&NM.MIDDLE_NAME,' ') <> ''
        Let $EE_Full_Name = $EE_Full_Name || ' ' || rtrim(&NM.MIDDLE_NAME,' ')
     end-if

     Let $EE_Full_Name = $EE_Full_Name || ' ' || RTRIM(&NM.FIRST_NAME,' ')


   FROM PS_NAMES NM
  WHERE NM.EMPLID = $Emplid
    AND NM.NAME_TYPE = 'PRI'
End-SELECT
End-Procedure Get-EE-Names
!
!********************************************************************
! Procedure :   Get-EE-Maiden-Name
!********************************************************************
Begin-Procedure Get-EE-Maiden-Name
Begin-SELECT
MLN.LAST_NAME
    Let $EE_Maiden_SurName   = RTRIM(&MLN.LAST_NAME,' ')
    Let $EE_Maiden_SurName   = translate($EE_Maiden_SurName,' ','-')

    if rtrim(&NM.PREF_FIRST_NAME,' ') <> ''
       Let $EE_Full_Name = $EE_Full_Name || ' ' || rtrim(&NM.PREF_FIRST_NAME,' ')
    end-if

   FROM PS_NAMES MLN
  WHERE MLN.EMPLID = $Emplid
    AND MLN.NAME_TYPE = 'MDN'
End-SELECT
End-Procedure   Get-EE-Maiden-Name
!
!********************************************************************
! Procedure :   Get-EE-ID
!********************************************************************
Begin-Procedure Get-EE-ID
Begin-SELECT
EID.NATIONAL_ID
     Let $EE_ID_No = rtrim(&EID.NATIONAL_ID,' ')

   FROM PS_GPHK_EE_NID_VW EID
  WHERE EID.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-EE-ID
!
!********************************************************************
! Procedure :   Get-Spouse-ID
!********************************************************************
Begin-Procedure Get-Spouse-ID
Begin-SELECT
ESID.NATIONAL_ID
    Let $EE_Spouse_ID_No = rtrim(&ESID.NATIONAL_ID,' ')

   FROM PS_GPHK_SPS_NID_VW ESID
  WHERE ESID.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-Spouse-ID
!
!********************************************************************
! Procedure :   Get-EE-Tax-File-No
!********************************************************************
Begin-Procedure Get-EE-Tax-File-No
Begin-SELECT
ETD.NATIONAL_ID
    Let $EE_Tax_No    = rtrim(&ETD.NATIONAL_ID,' ')

   FROM PS_PERS_NID ETD
  WHERE ETD.EMPLID = $Emplid
   AND  ETD.NATIONAL_ID_TYPE ='TAX_NO'
End-SELECT
End-Procedure   Get-EE-Tax-File-No
!
!********************************************************************
! Procedure :   Get-EE-PassPort-Detail
!********************************************************************
Begin-Procedure Get-EE-PassPort-Detail
Begin-SELECT
EPD.PASSPORT_NBR
EPD.COUNTRY_PASSPORT
    Let $EE_PassPort       = &EPD.PASSPORT_NBR
    Let $EE_PP_Cntry_Issue = &EPD.COUNTRY_PASSPORT

   FROM PS_GPHK_EE_PP_VW EPD
  WHERE EPD.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-EE-PassPort-Detail
!
!********************************************************************
! Procedure :   Get-EE-Tel-No
!********************************************************************
Begin-Procedure Get-EE-Tel-No
Begin-SELECT
PHN.PHONE
    Let $EE_Tel_No = &PHN.PHONE

   FROM PS_PERSONAL_PHONE PHN
  WHERE PHN.EMPLID = $Emplid
    AND PHN.PHONE_TYPE = 'MAIN'
End-SELECT
End-Procedure   Get-EE-Tel-No
!
!********************************************************************
! Procedure :   Get-EE-Spouse-Detail
!********************************************************************
Begin-Procedure Get-EE-Spouse-Detail
Begin-SELECT
ESN.NAME_PREFIX
ESN.NAME
ESN.FIRST_NAME
ESN.MIDDLE_NAME
ESN.LAST_NAME
ESN.PREF_FIRST_NAME
ESN.NAME_AC

    let $SurName         = &ESN.NAME
   ! Let $EE_SpouseName = RTRIM(&ESN.NAME_PREFIX,' ') || ' ' || rtrim($SurName,' ')
    Let $EE_Name_AC   = &ESN.NAME_AC

     Let $EE_SpouseName = RTRIM(&ESN.LAST_NAME,' ') || ',' 
    if rtrim(&ESN.MIDDLE_NAME,' ') <> ''
       Let $EE_SpouseName = $EE_SpouseName || ' ' || rtrim(&ESN.MIDDLE_NAME,' ')
    end-if

    Let $EE_SpouseName = $EE_SpouseName || ' ' || rtrim(&ESN.FIRST_NAME,' ')

   FROM PS_DEP_BEN_NAME ESN, PS_DEP_BEN DEP, PS_DEP_BEN_EFF INF
     WHERE ESN.EMPLID = $Emplid
     AND ESN.EMPLID=DEP.EMPLID
     AND ESN.DEPENDENT_BENEF=DEP.DEPENDENT_BENEF
     AND ESN.EMPLID=INF.EMPLID
     AND ESN.DEPENDENT_BENEF=INF.DEPENDENT_BENEF
     AND INF.RELATIONSHIP='SP'
     AND ESN.EFFDT = (SELECT MAX(ESN1.EFFDT) FROM PS_DEP_BEN_NAME ESN1 WHERE ESN.EMPLID = ESN1.EMPLID AND
     ESN.DEPENDENT_BENEF=ESN1.DEPENDENT_BENEF AND ESN1.EFFDT <= $PrdEndDt2)
     AND INF.EFFDT = (SELECT MAX(INF1.EFFDT) FROM PS_DEP_BEN_EFF INF1 WHERE INF1.EMPLID = INF.EMPLID AND
     INF1.DEPENDENT_BENEF=INF.DEPENDENT_BENEF AND INF1.EFFDT <= $PrdEndDt2)

End-SELECT

End-Procedure   Get-EE-Spouse-Detail
!
!********************************************************************
! Procedure :   Get-Spouse-PassPort-Detail
!********************************************************************
Begin-Procedure Get-Spouse-PassPort-Detail
Begin-SELECT
ESPD.PASSPORT_NBR
ESPD.COUNTRY_PASSPORT
    Let $EE_Spouse_PP_No         = &ESPD.PASSPORT_NBR
    Let $EE_Spouse_PP_CntryIssue = &ESPD.COUNTRY_PASSPORT
   FROM PS_GPHK_EESP_PP_VW ESPD
  WHERE ESPD.EMPLID = $Emplid
End-SELECT
End-Procedure   Get-Spouse-PassPort-Detail
!
!********************************************************************
! Procedure :   Part-Time-ER-Name
!********************************************************************
Begin-Procedure Part-Time-ER-Name
Begin-SELECT
PTER.EMPLOYER

    Let $EE_PT_Employer = &PTER.EMPLOYER

   FROM PS_GPHK_PT_ER_DTL PTER
  WHERE PTER.EMPLID = $Emplid
End-SELECT
End-Procedure   Part-Time-ER-Name
!
!********************************************************************
! Procedure :   EE-Job-Detail
!********************************************************************
Begin-Procedure EE-Job-Detail
Begin-SELECT
EEJV.JOBCODE
EEJV.FULL_PART_TIME
EEJV.SETID_JOBCODE

    Let $EE_Job_FP_Time = &EEJV.FULL_PART_TIME
    Let $EE_JobCode     = &EEJV.JOBCODE
    Let $Job_Setid      = &EEJV.SETID_JOBCODE

    Do  EE-Job-Description

   FROM PS_JOB EEJV
    WHERE EEJV.EMPLID = $Emplid
    AND EEJV.JOB_INDICATOR = 'P'
    AND EEJV.EFFDT = (SELECT MAX(EEJV1.EFFDT) FROM PS_JOB EEJV1
                        WHERE EEJV1.EMPLID = EEJV.EMPLID
                          AND EEJV1.EFFDT <= &PM.GPHK_PRD_END_DT
                    )
End-SELECT
End-Procedure   EE-Job-Detail
!
!********************************************************************
! Procedure :   EE-Job-Description
!********************************************************************
Begin-Procedure EE-Job-Description
Begin-SELECT
JBD.DESCR

    Let $EE_Job_Descr = &JBD.DESCR

    FROM PS_JOBCODE_TBL JBD
       WHERE JBD.JOBCODE = $EE_JObCode
         AND JBD.SETID = $Job_Setid
         AND JBD.EFFDT = (SELECT MAX(JBD1.EFFDT) FROM PS_JOBCODE_TBL JBD1
                             WHERE JBD1.JOBCODE = JBD.JOBCODE
                               AND JBD1.SETID   = JBD.SETID
                               AND JBD1.EFFDT <= &PM.GPHK_PRD_END_DT
                         )
End-SELECT
End-Procedure   EE-Job-Description
!********************************************************************
! Procedure :   Print-Document
!********************************************************************
Begin-procedure Print-Document
   Let #CR  = 1
   Let #PC  = 1
   Let #PC1 = 5
   Let #PC2 = 9
   Let #PC3 = 10

   graphic () font :#Font_Num :#Font_OldSize :#Font_Fixed :#Font_Pitch

   Let #StCol = 245
   Let #TermCol = 240

   Let #Headlen = length($ReportHead)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)

   if $CopyVersion = 'R'
      do Get-Previous-Sheet-Detail

      print 'REPLACEMENT-PREVIOUS FORM SUBMITTED ON :' (#Cr,#PC) BOLD
      Print $PreviousSubmissionDt (#Cr,+75) BOLD
   end-if
   Let #PCCol = #TermCol - 95
   graphic () font :#Font_Num :#Font_NewSize
   Print $MainHead   (#Cr,#PCCol) BOLD foreground = ('red')
   graphic () font :#Font_Num :#Font_OldSize :#Font_Fixed :#Font_Pitch

   Graphic (#Cr,230,24) BOX 3 0 0 
   Print 'g' (+1,235) POINT-SIZE=35

   Let #Cr = #Cr + 1
   Let #CC = #CC + 15
   Print $ReportHead (#Cr,#CC) BOLD


   Let #Cr = #Cr + 1
   Let #Headlen = length($ReportTitle)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)
   Let #CC = #CC - 15
   Print $ReportTitle                (#Cr,#CC) BOLD

   Let #Headlen = length($ReportTitle1)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)
   Let #CC = #CC - 36
   Let #Cr = #Cr + 1
   Print $ReportTitle1                (#Cr,#CC) BOLD
   Let #Cr = #Cr + 1
   print 'Employer''s File No. :'       (#Cr,#PC)
   !print $ER_FileNumber                        (#Cr,57)
   Let #TotLen = length($ER_FileNumber)
   Let #VarLen = length($ER_FileNumber) - 9

   
   let #num=  instr ( $ER_FileNumber, ')' ,1 )
   let #num1=  instr ( $ER_FileNumber, '-' ,1 )
 
     if #num = 0 and #num1 <> 0
       let #num = #num1
     end-if

    let #num2 = #num + 1 
   let #length = length ($ER_FileNumber )
    let $Prn_ER_FileNumber = substr ( $ER_FileNumber , #num2 , #length )

     
    Let $Prn_ER_FileNumber =lpad($Prn_ER_FileNumber ,8,'0')


  ! Let $Prn_ER_FileNumber = substr($ER_FileNumber,#VarLen,10)

!   graphic () font :#Font_Num :#Font_NewSize

   Let #PrintLen = Length($Prn_ER_FileNumber) * 2
   Let #PCCol = #TermCol - #PrintLen + 5
   !Let $Prn_ER_FileNumber = substr($Prn_ER_FileNumber,3,#TotLen)
    let $ER_FileNumber = upper ($ER_FileNumber)  
    let $Prn_ER_FileNumber = upper ($Prn_ER_FileNumber)
   print $ER_FileNumber    (#Cr,42)  !                    (#Cr,85) 
    let #PCCol = #PCCol -  3 - 1 - 3 !  #PCCol - 1 
   print $Prn_ER_FileNumber                    (#Cr,#PCCol)  bold   point-size = 13
   Print '****'                                (#Cr,#StCol)  
!   graphic () font :#Font_Num :#Font_OldSize

  ! Let #PCCol = #TermCol - 20  

   Let #Cr = #Cr + 1
   print 'Name of Employer:'                  (#Cr,#PC)
     let $EntityName =  upper ($EntityName)
   Print $EntityName      (#Cr,42)                  !   (#Cr,85) 

   Let #Cr = #Cr + 1
   print 'Address of Employer:'                  (#Cr,#PC)
   Let $ADDR_PRINT_STR = ''
   Let $ADDR_REM_STR = $PE_Address
   Let #addr_col_pos = 42  ! 85    
   Let #MaxNoCharInLine = 80
   do print-addr-mult-lines
   print 'PARTICULARS OF EMPLOYEE WHO WILL BE LEAVING HONG KONG' (#Cr,#PC)
   Let #Cr = #Cr + 1
   print 'ON OR ABOUT THE _____ DAY OF __________ (Month) _________ (Year)'  (#Cr,#PC)

   if #DP_YR <> 0
      print #DP_YR  (#Cr,112) EDIT '9999'
   end-if

   if #DP_MN <> 0
      print #DP_MN  (#Cr,77) EDIT '99'
   end-if

   if #DP_DY <> 0
      print #DP_DY  (#Cr,44) EDIT '99'
   end-if

   Do dtu-Parse-Date($DprtDt_DTU,#DP_YR,#DP_MN,#DP_DY)
   Let #Cr = #Cr + 1
     LET $EE_Full_Name = UPPER($EE_Full_Name)  

   
   print '1.  Name of Employee:'                  (#Cr,#PC)
   print  $EE_Full_Name                           (#Cr,53)

   if rtrim($EE_Maiden_SurName,' ') <> ''
      Let $EE_LstName = rtrim($EE_Maiden_SurName,' ')
   else
      Let $EE_LstName = rtrim($EE_LstName,' ')
   end-if
   Let #PrnLen = length($EE_LstName) * 3.5
   Let #PCCol = #TermCol - #PrnLen - 4
   Let #PCCol = #StCol - #PrnLen - 3.5
   LET $EE_LstName = UPPER($EE_LstName)  
   
   
   !***************************************************************
   !*********************RIGHT JUSTIFICATION*********************
   Let $Rev_Surname = ''
   Let #surlenght = length($EE_LstName ) + 1
   Let #counter = #surlenght - 1
   Let $temp = ''
   Let #rightjustcol = 242
   Let #allign = 0
   Let $first = 'Y'

   GRAPHIC () FONT 5 13 0 2
   While(#counter > 0)
   Let $temp = substr($EE_LstName ,#counter,1)   !*****getting one character from the end
   
   Let #allign = 0
   
   
   
        If($temp = 'I' or $temp = 'J'  or $temp = ',' )
    
          Let #allign = -2 !SMALL
        
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 3
            Print $temp (#Cr,#rightjustcol )  BOLD
          else
            Print $temp (#Cr, -3)  BOLD
          end-if
        End-If
    
        If($temp = 'M' or $temp = 'W' ) !BIG
        Let #allign = -4        
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 5
            Print $temp (#Cr,#rightjustcol )  BOLD
          else
            if($prev = 'I' or $prev = 'J')
            Print $temp (#Cr, -6)  BOLD 
            else
            Print $temp (#Cr, -5)  BOLD
            end-if
          end-if
        End-If
        
        If($temp = 'H' or $temp = 'G' OR $TEMP = 'O' ) !BIG
        Let #allign = -4        
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 4
            Print $temp (#Cr,#rightjustcol )  BOLD
          else
            !if($prev = 'I' or $prev = 'J')
            Print $temp (#Cr, -5)  BOLD 
            !else
            !Print $temp (#Cr, -5)  BOLD
            !end-if
          end-if
        End-If
    
        If($temp = 'B' or $temp = 'E' or $temp = 'F' or $temp = 'K' or $temp = 'L' or $temp = 'P' or $temp = 'R' or $temp ='S' or $temp ='T' or $temp ='X' or $temp ='Y' or $temp = 'Z' ) !LESS THAN EXACT FIT
          Let #allign = -3
          if $first = 'Y' 
            let #rightjustcol = #rightjustcol - 4
            Print $temp (#Cr,#rightjustcol )  BOLD
          else 
           ! if($prev = 'I' or $prev = 'J')
           ! Print $temp (#Cr, -5)  BOLD 
            !else
            Print $temp (#Cr, -4)  BOLD
            !End-If
          end-if
        
        END-IF
        
        if #allign = 0
            if $first = 'Y' 
                let #rightjustcol = #rightjustcol - 4
                Print $temp (#Cr,#rightjustcol )  BOLD
            else 
                if($prev = 'I' or $prev = 'J' )
                Print $temp (#Cr, -5)  BOLD 
                else
                Print $temp (#Cr, -4)  BOLD
                End-If
            end-if
        end-if
    
        Let $prev  = $temp
    
    !Let #rightjustcol = #rightjustcol - #allign
    
    !Let $temp = ' '|| $temp
    
    
   Let $first = 'N'    
   
   Let #counter = #counter - 1
   Let $temp = ''
   End-While
   
   !Put back the graphics
     GRAPHIC () FONT 5 12 0 28
    !***************************************************************
    
    !***************************************************************
   
   ! Print $EE_LstName                           (#Cr,#PCCol) bold  point-size = 13
   Print '****'                                (#Cr,#StCol) bold  point-size = 13

   Let #Cr = #Cr + 1
   print '2.  Employee''s Tax File No. with this Department :' (#Cr,#PC)
   if rtrim($EE_Tax_No,' ') <> ''
      Print $EE_Tax_No                             (#Cr,97) edit 'XXX-XXXXXXXXX' 
   end-if

   Let #Cr = #Cr + 1
   print '3.  (a) H.K. Identity Card Number :'    (#Cr,#PC)
   
   if rtrim($EE_ID_No,' ') <> ''
      Let $EE_ID_No = translate($EE_ID_No,' ','')
      Let #EEIDLen = length($EE_ID_No)
      if #EEIDLen < 9
      Let $EE_ID_No = lpad($EE_ID_No,9,' ')
      end-if
      
      If(#EEIDLen = 9)
      Let #PCCol = #StCol - 2 - #EEIDLen - 20
      else
      Let #PCCol = #StCol - 2 - #EEIDLen - 19
      End-If
      Print $EE_ID_No                               (#Cr,#PCCol) bold  point-size = 13 edit 'XXXXXXXX(X)' 
      Print '****'                                  (#Cr,#StCol) bold point-size = 13
   end-if

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print ' (b) Passport Number and place of issue (if Employee has no H.K. Identity Card):' (#Cr,#PC1)
   if  $EE_ID_No = ' '
   if rtrim($EE_PassPort,' ') <> ''
      Let $CountryCode = $EE_PP_Cntry_Issue
      Do Get-Country-Name

      Let $PrintValue = rtrim($EE_PassPort,' ') || ' - ' || $CountryName
      Print $PrintValue                             (#Cr,165)
   end-if
   end-if
   Let #Cr = #Cr + 1
   
   print '4.  Sex (M=Male, F=Female):'            (#Cr,#PC)
    If($EE_Sex = 'F') 
    Let #PCCol = #StCol - 6
    End-If
    If($EE_Sex = 'U')
    Let #PCCol = #StCol - 7
    End-If
    If($EE_Sex = 'M')    
    Let #PCCol = #StCol - 8
    End-If

   Print $EE_Sex                                 (#Cr,#PCCol) bold  point-size = 13
   Print '****'                                  (#Cr,#StCol) bold  point-size = 13

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '5.  Marital Status ( 1 = Single / Widowed / Divorced / Living Apart , 2 = Married):' (#Cr,#PC)
   Let #PCCol = #TermCol - 1
       Let #PCCol = #StCol - 6 
!   graphic () font :#Font_Num :#Font_NewSize

   if $EE_MarStatus = 'S' or $EE_MarStatus = 'W' or $EE_MarStatus = 'D' or $EE_MarStatus = 'P'
      Print '1'                                  (#Cr,#PCCol) bold   point-size = 13
   else 
      Print '2'                                  (#Cr,#PCCol) bold   point-size = 13
   end-if

   Print '****'                                  (#Cr,#StCol) bold point-size = 13

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '6.  (a) If married, full name of spouse:'   (#Cr,#PC)
     LET $EE_SpouseName = UPPER ($EE_SpouseName) 
   Print $EE_SpouseName                               (#Cr,75)

   Let #Cr = #Cr + 1
   print ' (b) Spouse''s H.K. Identity Card Number / Passport Number and place of issue (if known):'  (#Cr,#PC1)
   if rtrim($EE_Spouse_ID_No,' ') <> ''
      Let #EEIDLen = length($EE_Spouse_ID_No)
      if #EEIDLen < 9
         Let $EE_Spouse_ID_No = lpad($EE_Spouse_ID_No,9,' ')
    let $EE_Spouse_ID_No = upper ($EE_Spouse_ID_No)  
         Print $EE_Spouse_ID_No                            (#Cr,170) edit 'XXXXXXXX(X)'
      else
         Print $EE_Spouse_ID_No                            (#Cr,170) edit 'XXXXXXXX(X)'
      end-if
   else
      if rtrim($EE_Spouse_PP_No,' ') <> ''
         Let $CountryCode = $EE_Spouse_PP_CntryIssue
         Do Get-Country-Name

    let $EE_Spouse_PP_No = upper ($EE_Spouse_PP_No)  
         let $CountryName = upper ($CountryName) 

         Let $PrintValue = rtrim($EE_Spouse_PP_No,' ') || ' - ' || $CountryName
         Print $PrintValue                                 (#Cr,180)
      end-if
   end-if

   Let #Cr = #Cr + 1
   print '7.  (a) Residential address:'                   (#Cr,#PC)
   let $ADDR_PRINT_STR = ''
   let $ADDR_REM_STR = $EE_Resid_Address
   let #addr_col_pos = 50  !  85  
   Let #MaxNoCharInLine = 80
   do print-addr-mult-lines
   print ' (b) Tel. No.'                              (#Cr,#PC1)
   print $EE_Tel_No                                  (#Cr,50)
   Let #Cr = #Cr + 1

   print '8.  Postal address [if different from (7)a above]:'                (#Cr,#PC)
   if rtrim($EE_Corr_Address,' ') <> '' and $EE_Corr_Address <> $EE_Resid_Address
      let $ADDR_PRINT_STR = ''
      let $ADDR_REM_STR = $EE_Corr_Address
      let #addr_col_pos = 89
      Let #MaxNoCharInLine = 80
      do print-addr-mult-lines
   else
      Print 'Same as above'                              (#Cr,90)
   end-if
   Let #Cr = #Cr + 1
   print '9.  (a) Capacity in which employed:'        (#Cr,#PC)
     LET $EE_Job_DesCr = UPPER($EE_Job_DesCr) 
   Print $EE_Job_DesCr                                (#Cr,70)

   Let #Cr = #Cr + 1
   print ' (b) If part time, name of the principal employer (if known):'   (#Cr,#PC1)
     LET $EE_PT_Employer = UPPER($EE_PT_Employer)
   Print $EE_PT_Employer                                               (#Cr,110)

   Let #Cr = #Cr + 1
   print '10. Period of employment from 1 April last to the date of cessation of employment:'  (#Cr,#PC)

   Let #PCCol = #TermCol - 51
  ! Let #PCCol = #PCCol -1 + 3 
   Let #PCCol = #PCCol - 4

!   graphic () font :#Font_Num :#Font_NewSize

   Print $PrdBeginDt                                 (#Cr,#PCCol) BOLD point-size = 13
   Let #PCCol = #TermCol - 27
   Let #PCCol = #PCCol - 4
   Print ' to '                                       (#Cr,#PCCol)  point-size = 13
   Let #PCCol = #TermCol - 19
   Let #PCCol = #PCCol - 4
   Print $PrdEndDt                                   (#Cr,#PCCol) BOLD point-size = 13
   Print '****'                                      (#Cr,#StCol) BOLD point-size = 13

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '11. If not returning, details of income paid or payable from 1 April' (#Cr,#PC)
   Let #Cr = #Cr + 1
   print '      last to the date of cessation of employment :'    (#Cr,#PC)
   Let #Cr = #Cr + 1
   print '                                Particulars                                ' (#Cr,#PC1) underline
   print '            Period               '        (#Cr,120) underline
   Let #PCCol = #TermCol - 25
   if $CurrLbl1 = 'Amount (HKD)'
      Let $CurrLbl1 = '     Amount (HK$)     '
   end-if
   print $CurrLbl1                  (#Cr,#PCCol) underline

   Let #BDtPos  = 120
   Let #DashPos = 142
   Let #EDtPos  = 145
   Let #AmtPos  = #TermCol - 23

   Let #Cr = #Cr + 2
   print ' (a) Salary / Wages /Director''s Fee / Pensions'         (#Cr,#PC1)
   Let #Total11a = #TotalWages + #TotalDirectorFee + #TotalPensions
   if #Total11a <> 0
      Print $V01_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V01_PrdEndDt            (#Cr,#EDtPos)
      Print #Total11a                (#Cr,#AmtPos) edit '999,999,999'
   end-if

   Let #Cr = #Cr + 1
   print ' (b) Leave Pay'             (#Cr,#PC1)
   if #TotalLeavePay <> 0
      Print $V02_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V02_PrdEndDt            (#Cr,#EDtPos)
      Print #TotalLeavePay           (#Cr,#AmtPos) edit '999,999,999'
   end-if

   Let #Cr = #Cr + 1
   print ' (c) Commission / Fees'       (#Cr,#PC1)
   if #TotalCommission <> 0
      Print $V04_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V04_PrdEndDt            (#Cr,#EDtPos)
      Print #TotalCommission         (#Cr,#AmtPos) edit '999,999,999'
   end-if

   Let #Cr = #Cr + 1
   print ' (d)Payments in Lieu of Notice, Back Pay, Terminal Awards '       (#Cr,#PC1)
   if #TotalBP_TA_Graty <> 0
      Print $V06_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V06_PrdEndDt            (#Cr,#EDtPos)
      Print #TotalBP_TA_Graty        (#Cr,#AmtPos) edit '999,999,999'
   end-if

   Let #Cr = #Cr + 1
   print '    or Gratuities ' (#Cr,#PC1)
   Let #Cr = #Cr + 1
   print ' (e) Certain Payments from Retirement Schemes ' (#Cr,#PC1)
   if #TotalRetireScheme <> 0
      Print $V07_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V07_PrdEndDt            (#Cr,#EDtPos)
      Print #TotalRetireScheme       (#Cr,#AmtPos) edit '999,999,999'
   end-if

   Let #Cr = #Cr + 1
   print ' (f) Salaries Tax paid by Employer'           (#Cr,#PC1)
   if #EmplrPdAmt <> 0
      Print $V08_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V08_PrdEndDt            (#Cr,#EDtPos)
      let $tempamt = #TempCurrency1
      let $tempamt = rtrim($tempamt,'0')
      let #fieldlength = length($tempamt)
      let #AmtPos = #Termcol - 14 -#fieldlength
      let #TempCurrency1 = $tempamt
      let #AmtPos = #StCol - 2 - 23
      Print #TempCurrency1              (#Cr,#AmtPos) edit '999,999,999'

   end-if

   Let #Cr = #Cr + 1
   print ' (g) Gain realized under Share Option Scheme' (#Cr,#PC1)
   if #TotalShareOptSch <> 0
      Print $V10_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V10_PrdEndDt            (#Cr,#EDtPos)
      Print #TotalShareOptSch        (#Cr,#AmtPos) edit '999,999,999'
   end-if

   Let #Cr = #Cr + 1
   print ' (h) Other Rewards, Allowances or Perquisites'  (#Cr,#PC1)
   Let #TotalHAmt = #TotalBonus + #TotalEducBenefit + #TotalAllowance1 + #TotalAllowance2 + #TotalAllowance3

   if #TotalHAmt <> 0
      Print $V05_PrdBeginDt          (#Cr,#BDtPos)
      Print '-'                      (#Cr,#DashPos)
      Print $V05_PrdEndDt            (#Cr,#EDtPos)
      Print #TotalHAmt               (#Cr,#AmtPos) edit '999,999,999'
   end-if
   Let #Cr = #Cr + 1
   print '  e.g. Bonus, Education Benefits, Shares (Nature............)'   (#Cr,#PC2)

   Let #Cr = #Cr + 1
   print ' (i) Payments that have not been declared above but which will be made'(#Cr,#PC1)

   Let #Cr = #Cr + 1
   print '  AFTER the employee has left employment (Nature................)' (#Cr,#PC2)
   if #EmplrPDLtrAmt <> 0
      print #EmplrPDLtrAmt           (#Cr,#AmtPos) edit '999,999,999'
   end-if

   Let #Tamt = #Tamt  + #EmplrPDLtrAmt + #TempCurrency1
   
   Let #Cr = #Cr + 1

   Let #PCCol = #TermCol - 14


    Let #PCCol = #TermCol - 36
    Print 'Total:'                    (#Cr,#PCCol)

!   graphic () font :#Font_Num :#Font_NewSize


 let $tempamt = #Tamt
   let $tempamt = rtrim($tempamt,'0')
   let #fieldlength = length($tempamt)
   let #AmtPos = #Termcol - 14 -#fieldlength
   let #Tamt = $tempamt
   let #AmtPos = #StCol - 2 - #fieldlength - 20
   let #AmtPos = #StCol - 2 - 27
   
   Let #Temprow = #Cr - 1
   Let #Tempcol = #AmtPos + 2
   !graphic                           #Temprow,#Tempcol,20) horz-line 10
   graphic                           (#Temprow,#Tempcol,25) horz-line 10
   Print #Tamt                       (#Cr,#AmtPos) bold point-size = 13 edit '999,999,999'  
   Let #PCCol = #TermCol - 14
   Print '****'                      (#Cr,#StCol)  bold point-size = 13
   !Let #Cr = #Cr + 1
   graphic                           (#Cr,#Tempcol,25) horz-line 10
!   graphic () font :#Font_Num :#Font_OldSize

   Let #PCCol = #TermCol - 14
   Let #Cr = #Cr + 1
   print '12. Particulars of Place of Residence provided:'   (#Cr,#PC)
   Let #Cr = #Cr + 1
   print '(0 = No Place of Residence provided, 1 = Place of Residence provided by employer)'  (#Cr,#PC1)

!   graphic () font :#Font_Num :#Font_NewSize
 
   if #QtrCount > 0

      Let #PCCol = #StCol - 6
      Print '1'                      (#Cr,#PCCol) bold point-size = 13
      Print '****'                   (#Cr,#StCol) bold point-size = 13
   else
      
     Let #PCCol = #StCol - 7
      Print '0'                      (#Cr,#PCCol) bold point-size = 13
      Print '****'                   (#Cr,#StCol) bold point-size = 13
   End-if
!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1

   Do Get-EE-Quarters
   if #TotalQtrPrinted = 0
      Do Qtr-Blank-Label
   end-if

   if #Cr > 61
       Do Newpage
   End-if
   print '13.Whether the employee was wholly or partly paid either in Hong Kong or elsewhere by a non-Hong Kong company:' (#Cr,#PC)
   Let #Cr = #Cr + 1
   PRINT ' (0=No, 1=Yes) ' (#Cr,#PC1)

 
  Let #PCCol = #StCol - 5

!   graphic () font :#Font_Num :#Font_NewSize
   if #TempCurrency >0
      Print '1'                               (#Cr,#PCCol) bold  point-size = 13
   End-if
   if #TempCurrency = 0
      Let #PCCol = #PCCol - 1
      Print '0'                               (#Cr,#PCCol) bold  point-size = 13
   End-if

   Print '****'                               (#Cr,#StCol) bold  point-size = 13
!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   PRINT '  If yes, please state. Name of the non-Hong Kong company:' (#Cr,#PC1)
     LET $OvseasCmpny = UPPER($OvseasCmpny)
   Print $OvseasCmpny                (#Cr,130)


   Let #Cr = #Cr + 1
   print '  Address:'                  (#Cr,#PC1)
   Print $OvseasAdr                  (#Cr,40)

   Let #Cr = #Cr + 1
   print '  Amount (if known) (This amount must also be included in Item 11):'  (#Cr,#PC1)

   if #TempCurrency > 0
      Print 'HK$'              (#Cr,130)
      Print #TempCurrency                  (#Cr,132) edit '999,999,999'

   end-if
   Let #Cr = #Cr + 1

   if #Cr > 67
       Do Newpage
   End-if


   print '14. Whether the employee''s Salaries Tax will be borne by employer : - (Please mark a "X" in the box)' (#Cr,#PC)

   graphic (#Cr,192,7) box 1
   print  'Yes' (#Cr,200)

   graphic (#Cr,220,7) box 1
   print  'No' (#Cr,228)

   if $EmplrBearTax = 'Y'
      Print 'X'                               (#Cr,194)
   else
      Print 'X'                               (#Cr,222)
   End-if

   Let #Cr = #Cr + 1

   if #Cr > 66
       Do Newpage
   End-if
   !if #Cr > 61
   !   Do Print-Page-Bottom-Dtl
   !   New-page
   !   Do Header
   !End-if

   print '15.*Any money, including any money payable, held under Section 52(7) of the Inland Revenue Ordinance : - (Please mark a "X" in the box)' (#Cr,#PC)

   Let #WithheldAmt  = &PM.GPHK_WITHHELD_AMT
   Let $WithheldRsn  = &PM.GPHK_WTHELD_RSN

   Let #Cr = #Cr + 1
   Let #PC1 = #PC1 + 2
   graphic (#Cr,#PC1,5) box 1
   print 'Yes, estimated amount $_________________ ; ' (#Cr,16)

   graphic (#Cr,110,5) box 1

   print 'No, the reason is __________________________________' (#Cr,117)

   if $WithheldRsn <> ' '
      Print 'X'                               (#Cr,111)
      print  $WithheldRsn (#Cr,150)
   else
      Let #PrPos = #PC1 + 1
      Print 'X'                               (#Cr,#PrPos)
      if #WithHeldAmt <> 0
         print #WithHeldAmt  (#Cr,70) edit '999,999,999'
      End-if
   End-if

   Let #Cr = #Cr + 1
   if #Cr > 65
       Do Newpage
   End-if
  ! if #Cr > 61
  !    Do Print-Page-Bottom-Dtl
  !    New-page
  !    Do Header
  ! End-if

   print '16.*Reason for departure : - (Please mark a " X " in the box and provide the relevant information)' (#Cr,#PC)
   Let #Cr = #Cr + 1

   print 'Expatriate staff return to home country' (#Cr,16)

   graphic (#Cr,#PC1,5) box 1

   if $Rsn_4_Dprt = '2'
      Let #PrPos = #PC1 + 1
      print 'X'  (#Cr,#PrPos)
   !   print $MoveCountryName   (#Cr,120)
   End-if
   !Let #Cr = #Cr + 1

   print 'Secondment' (#Cr,117)

   graphic (#Cr,110,5) box 1

   if $Rsn_4_Dprt = '3'
   !   Let #PrPos = #PC1 + 2
      print 'X'  (#Cr,111)
   !   print $MoveCountryName   (#Cr,170)
   End-if

   print 'Emigration' (#Cr,157)

   graphic (#Cr,150,5) box 1
   if $Rsn_4_Dprt = '1'
   !   Let #PrPos = #PC1 + 2
      print 'X'  (#Cr,151)
   End-if

   !if $Rsn_4_Dprt = '3'
   !   print $MoveCountryName   (#Cr,215)
   !End-if

   Let #Cr = #Cr + 1
   graphic (#Cr,#PC1,5) box 1
   print 'Other, please specify ' (#Cr,16)
   print '_' (#cr,59,73) fill

   If $Rsn_4_Dprt = '0'
      Let #PrPos = #PC1 + 1
      print 'X'  (#Cr,#PrPos)
        LET $OthDepartRsn = UPPER($OthDepartRsn)  
      print $OthDepartRsn (#Cr,65)
   End-if
   Let #Cr = #Cr + 1
   if #Cr > 67
       Do Newpage
   End-if
   !if #Cr > 61
   !   Do Print-Page-Bottom-Dtl
   !   New-page
   !   Do Header
   !End-if

   print '17.*Postal address after departure (if different from (8) above) '  (#Cr,#PC)
   print '_' (#Cr,118,50) fill
   Let #Cr_temp = #Cr
   if rtrim($EE_Postal_Address,' ') <> '' and $EE_Corr_Address <> $EE_Postal_Address
      let $ADDR_PRINT_STR = ''
      let $ADDR_REM_STR = $EE_Postal_Address
      let #addr_col_pos = 110
      Let #MaxNoCharInLine = 55
      do print-addr-mult-lines
      while #Cr - #Cr_temp - 1
         let #Cr_temp = #Cr_temp + 1
         print '_' (#Cr_temp,118,50) fill
      end-while

   else
      Print 'Same as above'                              (#Cr,120)
      Let #Cr = #Cr + 1
   end-if

   if #Cr > 66
       Do Newpage
   End-if
   print '18.*Whether the employee would return to Hong Kong : - (Please mark a "X" in the box)'  (#Cr,#PC)
   Let #Cr = #Cr + 1

   graphic (#Cr,#PC1,5) box 1
   print 'Yes, probable date of return is ' (#Cr,16)
   print '_' (#Cr,70,30) fill

   graphic (#Cr,142,5) box 1
   print 'No / Very unlikely' (#Cr,152)
   if rtrim($ReturnDate,' ') <> ''
      print 'X' (#Cr,8)
      print $ReturnDate       (#Cr,73)
   else
      print 'X' (#Cr,143)
   end-if
   Let #Cr = #Cr + 1
     graphic () font :#Font_Num :#Font_OldSize :#Font_Fixed :#Font_Pitch

   ! if #Cr > 61
   !    Do Print-Page-Bottom-Dtl
   !    New-page
   !    Do Header
   ! End-if
   if #Cr >  68  ! 65 
       Do Newpage
   End-if
   Print '19. Whether the employee has any share options granted by your company or any other corporation in respect of his employment with/office' (#Cr,#PC)
   Let #Cr = #Cr + 1
   Print '  in your company that are not yet exercised, assigned or released:-(Please mark a " X " in the box and provide the relavant information)' (#Cr,#PC1)
   Let #Cr = #Cr + 1
   graphic (#Cr,#PC1,5) box 1
   print 'Yes, no. of shares not yet exercised : __________________; date of grant : __________________' (#Cr,16)

   graphic (#Cr,200,5) box 1
   Print 'No ' (#Cr,210)

   if $ShareGranted_YN = 'Y'
      print 'X'         (#Cr,8)
      print #ShareExer  (#Cr,90) edit '99999999'

      if rtrim($GrantDate,' ') <> ''
         print $GrantDate (#Cr,149)
      end-if
   else
      print 'X' (#Cr,201)
   end-if

   Do Print-Page-Bottom-Dtl
    New-page   
      
     ! let  #Cr = #Cr +2 


End-Procedure
!
!********************************************************************
! Procedure :   Departure-Details
!********************************************************************
Begin-Procedure Departure-Details
   Let $ReturnDate = ''
   Let $DepartDate = ''
   Let $Rsn_4_Dprt = ''
   Let $CntryMove2    = ''
   Let $OthDepartRsn  = ''
   Let $MoveCountryName = ''
   Let #DP_YR = 0
   Let #DP_MN = 0
   Let #DP_DY = 0

Begin-SELECT
DPT.GPHK_CNTRY_DPRT_DT
DPT.GPHK_DEPART_RSN
DPT.GPHK_RETURN_DATE
DPT.GPHK_CNTRY_MOVE_TO
DPT.GPHK_DPRT_OTH_RSN

   Let $DepartDate = &DPT.GPHK_CNTRY_DPRT_DT
   Let $Rsn_4_Dprt = &DPT.GPHK_DEPART_RSN
   Let $ReturnDate = &DPT.GPHK_RETURN_DATE
   Let $CntryMove2 = &DPT.GPHK_CNTRY_MOVE_TO
   Let $OthDepartRsn = &DPT.GPHK_DPRT_OTH_RSN

   if rtrim($CntryMove2,' ') <> ''
      Let $CountryCode = $CntryMove2
      Do Get-Country-Name
      Let $MoveCountryName = $CountryName
   End-if

   Do Format-DateTime($ReturnDate,$ReturnDate, {DEFDATE},'','')

   if rtrim($DepartDate,' ') <> ''
      Do Convert-To-DTU-Date($DepartDate,$DprtDt_DTU)
      Do dtu-Parse-Date($DprtDt_DTU,#DP_YR,#DP_MN,#DP_DY)
   End-if

    FROM PS_GPHK_DEPART_DTL DPT
  WHERE DPT.EMPLID = $Emplid
End-SELECT
End-Procedure   Departure-Details
!
!********************************************************************
! Procedure :   Address-Details
!********************************************************************
Begin-Procedure Address-Details
  Let $EE_Address = ''
Begin-SELECT
ADR.ADDRESS1
ADR.ADDRESS2
ADR.ADDRESS3
ADR.ADDRESS4
ADR.COUNTY
ADR.STATE
ADR.CITY
ADR.POSTAL
ADR.COUNTRY

    if &ADR.Country = 'HKG'
       Let $EE_Address = RTrim(&ADR.ADDRESS1,' ')

       If RTRIM(&ADR.ADDRESS2,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS2,' ')
       End-If
       If RTRIM(&ADR.ADDRESS3,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS3,' ')
       End-If
       If RTRIM(&ADR.CITY,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.CITY,' ')
       End-If
       Let $StateCode = &ADR.STATE
       Let $StateDescr = ''
       Do Get-State-Descr

       Let $EE_Address =$EE_Address || ' ' || $StateDescr
    Else
       Let $EE_Address = RTrim(&ADR.ADDRESS1,' ')
       If RTRIM(&ADR.ADDRESS2,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS2,' ')
       End-If
       If RTRIM(&ADR.ADDRESS3,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS3,' ')
       End-If
       If RTRIM(&ADR.ADDRESS4,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.ADDRESS4,' ')
       End-If
       If RTRIM(&ADR.CITY,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.CITY,' ')
       End-If
       Let $StateCode = &ADR.STATE
       Let $StateDescr = ''
       Do Get-State-Descr
       Let $CountryCode = ''
       Let $CountryCode = &ADR.COUNTRY
       Do Get-Country-Name
       Let $EE_Address =$EE_Address || ' ' || $StateDescr
       If RTRIM(&ADR.POSTAL,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&ADR.POSTAL,' ')
       End-If
       Let $EE_Address = $EE_Address || ' ' || rtrim($CountryName,' ')
    End-If

    FROM PS_ADDRESSES ADR
   WHERE ADR.EMPLID = $Emplid
     AND ADR.ADDRESS_TYPE = $AddressType
     AND ADR.EFF_STATUS = 'A'
     AND ADR.EFFDT = (SELECT MAX(ADR1.EFFDT) FROM PS_ADDRESSES ADR1
                              WHERE ADR1.EMPLID = $Emplid
                      AND ADR1.ADDRESS_TYPE = $AddressType
                  AND ADR1.EFF_STATUS = 'A'
                              AND ADR1.EFFDT <= $AsofToday
                           )


End-SELECT
End-Procedure   Address-Details
!

!
!********************************************************************
! Procedure :   Postal-Address-Details
!********************************************************************
Begin-Procedure Postal-Address-Details
  Let $EE_Address = ''
Begin-SELECT
PADR.ADDRESS1
PADR.ADDRESS2
PADR.ADDRESS3
PADR.ADDRESS4
PADR.COUNTY
PADR.STATE
PADR.CITY
PADR.POSTAL
PADR.COUNTRY

    if &PADR.Country = 'HKG'
       Let $EE_Address = RTrim(&PADR.ADDRESS1,' ')

       If RTRIM(&ADR.ADDRESS2,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.ADDRESS2,' ')
       End-If
       If RTRIM(&PADR.ADDRESS3,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.ADDRESS3,' ')
       End-If
       If RTRIM(&PADR.CITY,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.CITY,' ')
       End-If
       Let $StateCode = &PADR.STATE
       Let $StateDescr = ''
       Do Get-State-Descr

       Let $EE_Address =$EE_Address || ' ' || $StateDescr
    Else
       Let $EE_Address = RTrim(&PADR.ADDRESS1,' ')
       If RTRIM(&PADR.ADDRESS2,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.ADDRESS2,' ')
       End-If
       If RTRIM(&PADR.ADDRESS3,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.ADDRESS3,' ')
       End-If
       If RTRIM(&PADR.ADDRESS4,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.ADDRESS4,' ')
       End-If
       If RTRIM(&PADR.CITY,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.CITY,' ')
       End-If
       Let $StateCode = &PADR.STATE
       Let $StateDescr = ''
       Do Get-State-Descr
       Let $CountryCode = ''
       Let $CountryCode = &PADR.COUNTRY
       Do Get-Country-Name
       Let $EE_Address =$EE_Address || ' ' || $StateDescr
       If RTRIM(&PADR.POSTAL,' ') <> ''
          Let $EE_Address = $EE_Address || ' ' || RTrim(&PADR.POSTAL,' ')
       End-If
       Let $EE_Address = $EE_Address || ' ' || rtrim($CountryName,' ')
    End-If

    FROM PS_ADDRESSES PADR
   WHERE PADR.EMPLID = $Emplid
     AND PADR.ADDRESS_TYPE = $AddressType
     AND PADR.EFF_STATUS = 'A'
     AND PADR.EFFDT = (SELECT MAX(PADR1.EFFDT) FROM PS_ADDRESSES PADR1
                              WHERE PADR1.EMPLID = $Emplid
                      AND PADR1.ADDRESS_TYPE = $AddressType
                  AND PADR1.EFF_STATUS = 'A'
                              AND PADR1.EFFDT >= $DepartDate

                           )


End-SELECT
End-Procedure   Postal-Address-Details
!
!********************************************************************
! Procedure :   Get-State-Descr
!********************************************************************
Begin-Procedure Get-State-Descr
Begin-SELECT
SCD.DESCR
      LET $StateDescr = rtrim(&SCD.DESCR,' ')
    FROM PS_STATE_NAMES_TBL SCD
  WHERE SCD.STATE = $StateCode
   AND  SCD.COUNTRY = 'HKG'
End-SELECT
End-Procedure  Get-State-Descr
!
!********************************************************************
! Procedure :   Pay-Entity-Details
!********************************************************************
Begin-procedure Pay-Entity-Details
Begin-SELECT
PED.DESCR
GPD.ADDRESS1
GPD.ADDRESS2
GPD.ADDRESS3
GPD.CITY
GPD.STATE

    Let $StateCode = &GPD.STATE

    Let $StateDescr = ''
    Do Get-State-Descr
    Let $PE_Address = rtrim(&GPD.ADDRESS1,' ')
    if rtrim(&GPD.ADDRESS2,' ') <> ''
       Let $PE_Address =$PE_Address || ' ' || rtrim(&GPD.ADDRESS2,' ')
    End-if
    if rtrim(&GPD.ADDRESS3,' ') <> ''
       Let $PE_Address =$PE_Address || ' ' || rtrim(&GPD.ADDRESS3,' ')
    End-if
    if rtrim(&GPD.CITY,' ') <> ''
       Let $PE_Address =$PE_Address || ' ' || rtrim(&GPD.CITY,' ')
    End-if
    Let $PE_Address =$PE_Address || ' ' || $StateDescr

    FROM PS_GP_PYENT PED, PS_GP_PYENT_DTL GPD
         WHERE PED.PAY_ENTITY = GPD.PAY_ENTITY
           AND PED.PAY_ENTITY = $PrimaryPE
           AND GPD.EFFDT = (SELECT MAX(GPD1.EFFDT) FROM PS_GP_PYENT_DTL GPD1
                              WHERE GPD1.PAY_ENTITY = GPD.PAY_ENTITY
                           )
End-SELECT
End-Procedure   Pay-Entity-Details
!
!********************************************************************
! Procedure :   Get-EE-Quarters
!********************************************************************
Begin-Procedure Get-EE-Quarters
   Let #Seq = 1
   Let #TotalQtrPrinted = 0
Begin-SELECT
QADR.ADDRESS1
QADR.ADDRESS2
QADR.ADDRESS3
QADR.CITY
QADR.COUNTRY
QADR.STATE
QADR.GPHK_QTR_DESC
QADR.GPHK_QTR_BGN_DT
QADR.GPHK_QTR_END_DT
QADR.GPHK_QTR_ER2L_TOT
QADR.GPHK_QTR_EE2L_TOT
QADR.GPHK_QTR_ER2EE_TOT
QADR.GPHK_QTR_EE2ER_TOT

    Let $SrchCountry = &QADR.COUNTRY
    Let $StateCode = &QADR.STATE

    Let $StateDescr = ''
    Do Get-State-Descr

    Let $Qtrs_1_Address = rtrim(&QADR.ADDRESS1,' ')
    if rtrim(&QADR.ADDRESS2,' ') <> ''
       Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || rtrim(&QADR.ADDRESS2,' ')
    End-if
    if rtrim(&QADR.ADDRESS3,' ') <> ''
       Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || rtrim(&QADR.ADDRESS3,' ')
    End-if
    if rtrim(&QADR.CITY,' ') <> ''
       Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || rtrim(&QADR.CITY,' ')
    End-if
    Let $Qtrs_1_Address =$Qtrs_1_Address || ' ' || $StateDescr

    Let $Qtrs_1_Nature     = &QADR.GPHK_QTR_DESC
    Let $Qtrs_1_Prd_Begin  = &QADR.GPHK_QTR_BGN_DT
    Let $Qtrs_1_Prd_End    = &QADR.GPHK_QTR_END_DT
    Let #Amt_Qtrs_1_ER2LL  = &QADR.GPHK_QTR_ER2L_TOT
    Let #Amt_Qtrs_1_EE2LL  = &QADR.GPHK_QTR_EE2L_TOT
    Let #Amt_Qtrs_1_ER2EE  = &QADR.GPHK_QTR_ER2EE_TOT
    Let #Amt_Qtrs_1_EE2ER  = &QADR.GPHK_QTR_EE2ER_TOT

    if rtrim($Qtrs_1_Prd_Begin,' ') <> ''
       Do Format-DateTime($Qtrs_1_Prd_Begin, $Qtrs_1_Prd_Begin, {DEFDATE},'','')
    end-if

    if rtrim($Qtrs_1_Prd_End,' ') <> ''
       Do Format-DateTime($Qtrs_1_Prd_End, $Qtrs_1_Prd_End, {DEFDATE},'','')
    end-if

    If #Seq > 1
       Let #Cr = #Cr + 1
    end-if

    print '  Address :'     (#Cr,#PC1)
       let $ADDR_PRINT_STR = ''
       let $ADDR_REM_STR = $Qtrs_1_Address
       let #addr_col_pos = 29 ! 85 
       Let #MaxNoCharInLine = 80
       do print-addr-mult-lines

   ! Let #Cr = #Cr + 1
    print '  Nature :'      (#Cr,#PC1)
    Print $Qtrs_1_Nature                       (#Cr,29)

    Let #Cr = #Cr + 1
    print '  Period provided:'  (#Cr,#PC1)

    if rtrim($Qtrs_1_Prd_Begin,' ') <> ''
       Print $Qtrs_1_Prd_Begin                 (#Cr,42)
       Print ' - '                             (#Cr,62)
    end-if

    if rtrim($Qtrs_1_Prd_End,' ') <> ''
       Print $Qtrs_1_Prd_End                   (#Cr,66)
    end-if

    Let #Cr = #Cr + 1
    print '  Rent paid to landlord by employer :' (#Cr,#PC1)

    if #Amt_Qtrs_1_ER2LL <> 0
       print 'HK$'                                (#Cr,85)
       Print #Amt_Qtrs_1_ER2LL                    (#Cr,90) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1
    print '  Rent paid to landlord by employee :' (#Cr,#PC1)

    if #Amt_Qtrs_1_EE2LL <> 0
       print 'HK$'                                (#Cr,85)
       Print #Amt_Qtrs_1_EE2LL                    (#Cr,90) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1
    print '  Rent refunded to employee:'            (#Cr,#PC1)

    if #Amt_Qtrs_1_ER2EE <> 0
       print 'HK$'                                (#Cr,85)
       Print #Amt_Qtrs_1_ER2EE                    (#Cr,90) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1
    print '  Rent paid to employer by employee:' (#Cr,#PC1)

    if #Amt_Qtrs_1_EE2ER <> 0
       print 'HK$'                                (#Cr,85)
       Print #Amt_Qtrs_1_EE2ER                    (#Cr,90) edit '999,999,999'
    end-if

    Let #Cr = #Cr + 1

    Let #Seq = #Seq + 1
    Let #TotalQtrPrinted = #TotalQtrPrinted + 1

    if #Cr > 55
    Let #Cr = #Cr + 9
       Do Newpage
    End-if

    FROM PS_GPHK_IR56_QTR QADR
   WHERE QADR.EMPLID           = $Emplid
     AND QADR.GPHK_REPORT_TYPE = $ReportType
     AND QADR.GPHK_TAX_REF_NUM = $TaxRefNum
     AND QADR.GPHK_TAX_YEAR    = #TaxYear
     AND QADR.GPHK_SERIAL_NUM  = #SerialNum
End-SELECT
End-Procedure   Get-EE-Quarters
!
!********************************************************************
! Procedure :   Get-EE-Details
!********************************************************************
Begin-procedure Get-EE-Details

   Do Get-EE-Personal-Data
   Do Get-EE-Names
   Do Get-EE-ID
   Do EE-Job-Detail
   Do Get-EE-Tax-File-No
   Do Departure-Details

   Let $AddressType = 'MAIL'
   Do Address-Details
   Let $EE_Corr_Address = $EE_Address

   Let $AddressType = 'MAIL'
   Do Postal-Address-Details
   Let $EE_Postal_Address = $EE_Address


   Let $AddressType = 'HOME'
   Do Address-Details
   Let $EE_Resid_Address = $EE_Address

   Do Get-EE-Tel-No
   Do Get-EE-PassPort-Detail
   if $EE_MarStatus = 'M'
      Do Get-EE-Spouse-Detail
      Do Get-Spouse-ID
      Do Get-Spouse-PassPort-Detail
   End-if
   Do Part-Time-ER-Name

End-Procedure   Get-EE-Details
!
!***********************************************************************
! Procedure:    Update-Issue-Status
!***********************************************************************
begin-procedure Update-Issue-Status
begin-SQL
UPDATE PS_GPHK_IR56_TBL
  SET GPHK_ISSUE_STATUS = '1'
   WHERE EMPLID = $Emplid
     AND GPHK_REPORT_TYPE = $ReportType
     AND GPHK_TAX_YEAR    = #TaxYear
     AND GPHK_TAX_REF_NUM = $TaxRefNum
     AND GPHK_SERIAL_NUM  = #SerialNum
end-SQL
end-procedure   Update-Issue-Status
!
!***********************************************************************
! Procedure:    Retrieve-EE-Amounts
!***********************************************************************
begin-procedure Retrieve-EE-Amounts

   Let $ElemType = '01'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalWages = #CalcAmt + #AdjstAmt
   else
      Let #TotalWages = #HKDPaidAmt
   End-if


      if #OvseasAmt > 0
         Let #TotalWages = #TotalWages + #TempCurrency
   End-if


   Let #TotalWages     = trunc(#TotalWages,0)
   LET $V01_PrdBeginDt = $AmtBeginDt
   LET $V01_PrdEndDt   = $AmtEndDt

   Let $ElemType = '02'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalLeavePay = #CalcAmt + #AdjstAmt
   else
      Let #TotalLeavePay = #HKDPaidAmt
   End-if
   Let #TotalLeavePay  = trunc(#TotalLeavePay,0)
   LET $V02_PrdBeginDt = $AmtBeginDt
   LET $V02_PrdEndDt   = $AmtEndDt

   Let $ElemType = '03'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalDirectorFee = #CalcAmt + #AdjstAmt
   else
      Let #TotalDirectorFee = #HKDPaidAmt
   End-if
   Let #TotalDirectorFee = trunc(#TotalDirectorFee,0)
   LET $V03_PrdBeginDt   = $AmtBeginDt
   LET $V03_PrdEndDt     = $AmtEndDt

   Let $ElemType = '04'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalCommission = #CalcAmt + #AdjstAmt
   else
      Let #TotalCommission = #HKDPaidAmt
   End-if
   Let #TotalCommission = trunc(#TotalCommission,0)
   LET $V04_PrdBeginDt  = $AmtBeginDt
   LET $V04_PrdEndDt    = $AmtEndDt

   Let $ElemType = '05'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalBonus = #CalcAmt + #AdjstAmt
   else
      Let #TotalBonus = #HKDPaidAmt
   End-if
   Let #TotalBonus     = trunc(#TotalBonus,0)
   LET $V05_PrdBeginDt = $AmtBeginDt
   LET $V05_PrdEndDt   = $AmtEndDt

   Let $ElemType = '06'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalBP_TA_Graty = #CalcAmt + #AdjstAmt
   else
      Let #TotalBP_TA_Graty = #HKDPaidAmt
   End-if
   Let #TotalBP_TA_Graty = trunc(#TotalBP_TA_Graty,0)
   LET $V06_PrdBeginDt   = $AmtBeginDt
   LET $V06_PrdEndDt     = $AmtEndDt

   Let $ElemType = '07'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalRetireScheme = #CalcAmt + #AdjstAmt
   else
      Let #TotalRetireScheme = #HKDPaidAmt
   End-if
   Let #TotalRetireScheme = trunc(#TotalRetireScheme,0)
   LET $V07_PrdBeginDt    = $AmtBeginDt
   LET $V07_PrdEndDt      = $AmtEndDt

   Let $ElemType = '08'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalEducBenefit = #CalcAmt + #AdjstAmt
   else
      Let #TotalEducBenefit = #HKDPaidAmt
   End-if
   Let #TotalEducBenefit = trunc(#TotalEducBenefit,0)
   LET $V09_PrdBeginDt   = $AmtBeginDt
   LET $V09_PrdEndDt     = $AmtEndDt

   Let $ElemType = '09'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalShareOptSch = #CalcAmt + #AdjstAmt
   else
      Let #TotalShareOptSch = #HKDPaidAmt
   End-if
   Let #TotalShareOptSch = trunc(#TotalShareOptSch,0)
   LET $V10_PrdBeginDt   = $AmtBeginDt
   LET $V10_PrdEndDt     = $AmtEndDt

   Let $ElemType = '10'
   Do Get-EE-Allowance-Amt

   Let $ElemType = '11'
   Do Get-EE-Amounts

   if rtrim($CurrencyCd,' ') <> ''
      Let #TotalPensions = #CalcAmt + #AdjstAmt
   else
      Let #TotalPensions = #HKDPaidAmt
   End-if
   Let #TotalPensions  = trunc(#TotalPensions,0)
   LET $V14_PrdBeginDt = $AmtBeginDt
   LET $V14_PrdEndDt   = $AmtEndDt

  Let #TAmt = #TotalWages + #TotalLeavePay + #TotalBonus + #TotalBP_TA_Graty + #TotalRetireScheme + #TotalEducBenefit
  Let #TAmt = #TAmt + #TotalCommission + #TotalDirectorFee
  Let #TAmt = #TAmt + #TotalShareOptSch + #TotalPensions + #TotalAllowance1 + #TotalAllowance2 + #TotalAllowance3

End-Procedure   Retrieve-EE-Amounts
!
!***********************************************************************
! Procedure:    Get-EE-Amounts
!***********************************************************************
begin-procedure Get-EE-Amounts
   Let #OCalcAmt    = 0
   Let #OAdjstAmt   = 0
   Let #CalcAmt    = 0
   Let #AdjstAmt   = 0

   Let #AllwncCnt  = 0
   Let #Allwnc3Cnt = 0
   LET $AmtBeginDt = ''
   LET $AmtEndDt   = ''
   Let #HKDPaidAmt = 0

Begin-SELECT
AMT.GPHK_MTRY_VALUE &CalcAmt
AMT.GPHK_MTRY_ADJST &AdjAmt
AMT.GPHK_PRD_BGN_DT &BeginDt
AMT.GPHK_PRD_END_DT &EndDt
AMT.GPHK_CALC_RSLT_VAL &NetAmt

       if rtrim($CurrencyCd,' ') <> ''
          Let #OCalcAmt  = #OCalcAmt  + &CalcAmt
          Let #OAdjstAmt = #OAdjstAmt + &AdjAmt
       else
          Let #HKDPaidAmt = #HKDPaidAmt + &NetAmt
       End-if

       if rtrim(&BeginDT,' ')  <> ''
          LET $AmtBeginDt = &BeginDt
          Do Format-DateTime(&BeginDt, $AmtBeginDt, {DEFDATE},'','')
       end-if
       if rtrim(&EndDT,' ')  <> ''
          LET $AmtEndDt   = &EndDt
          Do Format-DateTime(&EndDt, $AmtEndDt, {DEFDATE},'','')
       end-if

    FROM PS_GPHK_IR56_DTL AMT
     WHERE AMT.EMPLID = $Emplid
       AND AMT.GPHK_REPORT_TYPE = $ReportType
       AND AMT.GPHK_TAX_YEAR    = #TaxYear
       AND AMT.GPHK_TAX_REF_NUM = $TaxRefNum
       AND AMT.GPHK_REPORT_ELM  = $ElemType
       AND AMT.GPHK_SERIAL_NUM  = #SerialNum
       [$CurrencyClause]
End-SELECT
       if rtrim($AmtBeginDT,' ')  = ''
          LET $AmtBeginDt = $prdbegindt
       end-if
       if rtrim($AmdEndDT,' ')    = ''
          LET $AmtEndDt   = $prdEnddt
       end-if
       if #OCalcAmt > 0
          let #CalcAmt = trunc(#OCalcAmt,0)
       end-if

       if #OAdjstAmt <> 0
          let #AdjstAmt = trunc(#OAdjstAmt,0)
       end-if

       if #HKDPaidAmt > 0
          Let #HKDPaidAmt = trunc(#HKDPaidAmt,0)
       end-if

End-Procedure   Get-EE-Amounts
!
!***********************************************************************
! Procedure:    Get-EE-Allowance-Amt
!***********************************************************************
begin-procedure Get-EE-Allowance-Amt
   Let #CalcAmt1    = 0
   Let #AdjstAmt1   = 0
   Let #AllwncCnt   = 0
   Let #Allwnc3Cnt  = 1

Begin-SELECT
AMT1.PIN_NUM            &PinNum
AMT1.GPHK_MTRY_VALUE    &CalcAmt1
AMT1.GPHK_MTRY_ADJST    &AdjAmt1
AMT1.GPHK_PRD_BGN_DT    &BeginDt1
AMT1.GPHK_PRD_END_DT    &EndDt1
AMT1.GPHK_CALC_RSLT_VAL &NetAmt1

      Let #CalcAmt1   = &CalcAmt1
      Let #AdjstAmt1  = &AdjAmt1
      Let #PinNum     = &PinNum
      Let #HKDPaidAmt = &NetAmt1

      Do Get-Pin-Name

      Evaluate #AllwncCnt
        When = 1
               if rtrim($CurrencyCd,' ') <> ''
                  Let #TotalAllowance1   = #CalcAmt1 + #AdjstAmt1
               else
                  Let #TotalAllowance1   = #HKDPaidAmt
               End-if

               Let #TotalAllowance1   = trunc(#TotalAllowance1,0)
               Let $AllowanceDescr1   = $ElementDescr
               if rtrim(&BeginDT1,' ')  <> ''
                  Let $V11_PrdBeginDt    = &BeginDt1
               end-if
               if rtrim(&EndDT1,' ')  <> ''
                  Let $V11_PrdEndDt      = &EndDt1
               end-if
               break
        When = 2
               if rtrim($CurrencyCd,' ') <> ''
                  Let #TotalAllowance2   = #CalcAmt1 + #AdjstAmt1
               else
                  Let #TotalAllowance2   = #HKDPaidAmt
               End-if

               Let #TotalAllowance2   = trunc(#TotalAllowance2,0)
               Let $AllowanceDescr2   = $ElementDescr

               if rtrim(&BeginDT1,' ')  <> ''
                  Let $V12_PrdBeginDt    = &BeginDt1
               end-if
               if rtrim(&EndDT1,' ')  <> ''
                  Let $V12_PrdEndDt      = &EndDt1
               end-if
               break
        When-other
               if rtrim($CurrencyCd,' ') <> ''
                  Let #TotalAllowance3   = #TotalAllowance3 + #CalcAmt1 + #AdjstAmt1
               else
                  Let #TotalAllowance3   = #TotalAllowance3 + #HKDPaidAmt
               End-if

               if rtrim(&BeginDT1,' ')  <> ''
                  Let $V13_PrdBeginDt    = &BeginDt1
               end-if
               if rtrim(&EndDT1,' ')  <> ''
                  Let $V13_PrdEndDt      = &EndDt1
               end-if

               if #Allwnc3Cnt = 3
                  Let #Allwnc3Cnt = 1
                  Let $AllowanceDescr3   = $ElementDescr
               else
                  Let $AllowanceDescr3   = 'Other Allowances'
               end-if
               Let #TotalAllowance3   = trunc(#TotalAllowance3,0)
       End-Evaluate

      Let #AllwncCnt = #AllwncCnt + 1
    FROM PS_GPHK_IR56_DTL AMT1
     WHERE AMT1.EMPLID = $Emplid
       AND AMT1.GPHK_REPORT_TYPE = $ReportType
       AND AMT1.GPHK_TAX_YEAR    = #TaxYear
       AND AMT1.GPHK_TAX_REF_NUM = $TaxRefNum
       AND AMT1.GPHK_REPORT_ELM  = $ElemType
       AND AMT1.GPHK_SERIAL_NUM  = #SerialNum
       [$CurrencyClause1]
End-SELECT
End-Procedure   Get-EE-Allowance-Amt
!
!***********************************************************************
! Procedure:    Get-Pin-Name
!***********************************************************************
begin-procedure Get-Pin-Name
  Let $ElementDescr = ''
Begin-SELECT
PIN.DESCR
    Let $ElementDescr = &PIN.DESCR

    FROM PS_GP_PIN PIN
  WHERE PIN.PIN_NUM    = #PinNum

End-SELECT
End-Procedure   Get-Pin-Name
!
!***********************************************************************
! Procedure: Get-Country-Name
!***********************************************************************
begin-Procedure Get-Country-Name
  Let $CountryName = ''
begin-SELECT
CO.DESCR     &CountryName

     Move &CountryName to $CountryName

   FROM PS_COUNTRY_TBL CO
  WHERE CO.COUNTRY = $CountryCode
end-SELECT
end-Procedure   Get-Country-Name
!
!********************************************************************
! Procedure :   Check-Currency-Payment
!********************************************************************
Begin-procedure Check-Currency-Payment
   Let $PaidInSelected = 'N'
Begin-SELECT
OS.CURRENCY_CD

    Let $PaidInSelected = 'Y'

    FROM PS_GPHK_IR56_DTL OS
    WHERE OS.GPHK_REPORT_TYPE = $ReportType
      AND OS.GPHK_TAX_YEAR    = #TaxYear
      AND OS.GPHK_TAX_REF_NUM = $TaxRefNum
      AND OS.EMPLID           = $Emplid
      AND OS.CURRENCY_CD      = $CurrencyCd
      AND OS.GPHK_SERIAL_NUM  = #SerialNum
End-SELECT
End-Procedure   Check-Currency-Payment
!
!********************************************************************
! Procedure :   Get-TaxRef-Details
!********************************************************************
Begin-procedure Get-TaxRef-Details
Begin-SELECT
PED.DESCR50
PED.GPHK_DESIGNATION
PED.GPHK_EMPLR_REF_NUM
PED.GPHK_SIGNATORY

    Let $EntityName     = &PED.DESCR50
    Let $ER_FileNumber  = &PED.GPHK_EMPLR_REF_NUM
    Let $ER_Designation = &PED.GPHK_DESIGNATION
    Let $ER_Signer      = &PED.GPHK_SIGNATORY

    Let $ER_FileNumber  = rtrim($ER_FileNumber,' ')

    if rtrim(&PED.GPHK_SIGNATORY,' ') <> ''
       Do Get-Signatory-Name
    End-if

    FROM PS_GPHK_TAXREF_TBL PED
     WHERE PED.GPHK_TAX_REF_NUM = $TaxRefNum
      AND PED.EFFDT = (SELECT MAX(PED1.EFFDT) FROM PS_GPHK_TAXREF_TBL PED1
                           WHERE PED1.GPHK_TAX_REF_NUM = PED.GPHK_TAX_REF_NUM
                             AND PED1.EFFDT <= $Tax_Yr_March
                      )
End-SELECT
End-Procedure   Get-TaxRef-Details
!
!********************************************************************
! Procedure :   Get-TaxRef-PayEntity
!********************************************************************
Begin-procedure Get-TaxRef-PayEntity
  let $PrimaryPE = ''
Begin-SELECT
PEDD.PAY_ENTITY

    let $PrimaryPE = &PEDD.PAY_ENTITY

    FROM PS_GPHK_TAXREF_DTL PEDD
     WHERE PEDD.GPHK_TAX_REF_NUM = $TaxRefNum
      AND PEDD.PRIMARY_INDICATOR = 'Y'
      AND PEDD.EFFDT = (SELECT MAX(PEDD1.EFFDT) FROM PS_GPHK_TAXREF_TBL PEDD1
                           WHERE PEDD1.GPHK_TAX_REF_NUM = PEDD.GPHK_TAX_REF_NUM
                             AND PEDD1.EFFDT <= $Tax_Yr_March
                      )
End-SELECT
End-Procedure   Get-TaxRef-PayEntity
!
!***********************************************************************
! Procedure: Get-Signatory-Name
!***********************************************************************
Begin-Procedure Get-Signatory-Name
Begin-SELECT
GSN.NAME

    Let $ER_Signatory   = &GSN.NAME

   FROM PS_NAMES GSN
    WHERE GSN.EMPLID = $ER_Signer
      AND GSN.NAME_TYPE = 'PRI'
End-SELECT
End-Procedure Get-Signatory-Name
!
!***********************************************************************
! Procedure: Print-Page-Bottom-Dtl
!***********************************************************************
Begin-Procedure Print-Page-Bottom-Dtl

   Let #Cr = #Cr + 1
   print '* Must be completed'  (#Cr,#PC1) BOLD
   Let #Cr = #Cr + 1

   print 'Signature: '  (#Cr,#PC1)

   print 'Name: '       (#Cr,60)
   Print $ER_Signatory  (#Cr,75) wrap 15 3


   print 'Designation: '              (#Cr,113)
   Print $ER_Designation             (#Cr,138) wrap 30 2

   print 'Date: '                     (#Cr,200)
   Print $PrintDate                  (#Cr,212)
   Let #Cr = #Cr + 1  
   print 'IR56G'      (#Cr,#PC1)   

End-Procedure Print-Page-Bottom-Dtl
!
!***********************************************************************
! Procedure: Qtr-Blank-Label
!***********************************************************************
Begin-Procedure Qtr-Blank-Label

     
    print 'Address :'     (#Cr,#PC1)

    Let #Cr = #Cr + 1
    print 'Nature :'      (#Cr,#PC1)

    Let #Cr = #Cr + 1
    print 'Period provided :'      (#Cr,#PC1)

    Let #Cr = #Cr + 1
    print 'Rent paid to landlord by employer:' (#Cr,#PC1)

    Let #Cr = #Cr + 1
    print 'Rent paid to landlord by employee:' (#Cr,#PC1)

    Let #Cr = #Cr + 1
    print 'Rent refunded to employee:'         (#Cr,#PC1)

    Let #Cr = #Cr + 1
    print 'Rent paid to employer by employee:' (#Cr,#PC1)
    Let #Cr = #Cr + 1

End-Procedure
!
!********************************************************************
! Procedure :   Get-EE-Quarter-Count
!********************************************************************
Begin-Procedure Get-EE-Quarter-Count
   Let #QtrCount = 0
Begin-SELECT
QCNT.GPHK_QTR_NUM

   Let #QtrCount = &QCNT.GPHK_QTR_NUM

    FROM PS_GPHK_IR56_QTR QCNT
   WHERE QCNT.EMPLID           = $Emplid
     AND QCNT.GPHK_REPORT_TYPE = $ReportType
     AND QCNT.GPHK_TAX_REF_NUM = $TaxRefNum
     AND QCNT.GPHK_TAX_YEAR    = #TaxYear
     AND QCNT.GPHK_SERIAL_NUM  = (SELECT MAX(QCNT1.GPHK_SERIAL_NUM) FROM PS_GPHK_IR56_TBL QCNT1
                                   WHERE QCNT1.GPHK_REPORT_TYPE = QCNT.GPHK_REPORT_TYPE
                                     AND QCNT1.GPHK_TAX_YEAR    = QCNT.GPHK_TAX_YEAR
                                     AND QCNT1.GPHK_TAX_REF_NUM = QCNT.GPHK_TAX_REF_NUM
                                     AND QCNT1.EMPLID           = QCNT.EMPLID
                                )
End-SELECT
End-Procedure   Get-EE-Quarter-Count
!
!********************************************************************
! Procedure :   Get-Previous-Sheet-Num
!********************************************************************
Begin-procedure Get-Previous-Sheet-Detail
   Let $PreviousSubmissionDt = ''
Begin-SELECT
OSP.CREATION_DT

   Let $PreviousSubmissionDt = &OSP.CREATION_DT
   Do Format-DateTime($PreviousSubmissionDt, $PreviousSubmissionDt, {DEFDATE},'','')


    FROM PS_GPHK_IR56_TBL OSP
    WHERE OSP.GPHK_REPORT_TYPE = $ReportType
      AND OSP.GPHK_TAX_YEAR    = #TaxYear
      AND OSP.GPHK_TAX_REF_NUM = $TaxRefNum
      AND OSP.EMPLID           = $Emplid
      AND OSP.GPHK_SERIAL_NUM  = (SELECT MAX(OSP2.GPHK_SERIAL_NUM) FROM PS_GPHK_IR56_TBL OSP2
                                   WHERE OSP2.GPHK_REPORT_TYPE = OSP.GPHK_REPORT_TYPE
                                     AND OSP2.GPHK_TAX_YEAR    = OSP.GPHK_TAX_YEAR
                                     AND OSP2.GPHK_TAX_REF_NUM = OSP.GPHK_TAX_REF_NUM
                                     AND OSP2.EMPLID           = OSP.EMPLID
                                     AND OSP2.GPHK_SERIAL_NUM  < #SerialNum)
End-SELECT
End-Procedure   Get-Previous-Sheet-Detail
!
!********************************************************************
!Procedure : Header for exceeding page more than one
!********************************************************************
Begin-procedure Header
   Let #CR  = 5
   Let #PC  = 1
   Let #PC1 = 5
   Let #PC2 = 11
   Let #PC3 = 10

   graphic () font :#Font_Num :#Font_OldSize :#Font_Fixed :#Font_Pitch

   Let #StCol = 225
   Let #TermCol = 218

   Let #Headlen = length($ReportHead)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)

   if $CopyVersion = 'R'
      do Get-Previous-Sheet-Detail

      print 'REPLACEMENT-PREVIOUS FORM SUBMITTED ON :' (#Cr,#PC) BOLD
      Print $PreviousSubmissionDt (#Cr,+75) BOLD
   end-if
   Let #PCCol = #TermCol - 62
   graphic () font :#Font_Num :#Font_NewSize
   Print $MainHead   (#Cr,#PCCol) BOLD foreground = ('red')               
 
     graphic () font :#Font_Num :#Font_OldSize :#Font_Fixed :#Font_Pitch
   Let #Cr = #Cr + 1
   Let #CC = #CC + 15
   Print $ReportHead (#Cr,#CC) BOLD
   Let #Cr = #Cr + 1
   Let #Headlen = length($ReportTitle)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)
   Let #CC = #CC - 15
   Print $ReportTitle                (#Cr,#CC) BOLD

   Let #Headlen = length($ReportTitle1)
   Let #CC = {PAGEWIDTH}/2 - (#Headlen / 2)
   Let #CC = #CC - 36
   Let #Cr = #Cr + 1
   Print $ReportTitle1                (#Cr,#CC) BOLD

   Let #Cr = #Cr + 1
   print 'Employer''s File No. :'       (#Cr,#PC)
   Let #TotLen = length($ER_FileNumber)
   Let #VarLen = length($ER_FileNumber) - 9

   Let $Prn_ER_FileNumber = substr($ER_FileNumber,#VarLen,10)

!   graphic () font :#Font_Num :#Font_NewSize

   Let #PrintLen = Length($Prn_ER_FileNumber) * 2
   Let #PCCol = #TermCol - #PrintLen + 5
   !Let $Prn_ER_FileNumber = substr($Prn_ER_FileNumber,3,#TotLen)
   print $ER_FileNumber    (#Cr,42)                  !  (#Cr,85)  
   print $Prn_ER_FileNumber                    (#Cr,#PCCol)
   Print '****'                                (#Cr,#StCol)

!   graphic () font :#Font_Num :#Font_OldSize

   Let #PCCol = #TermCol - 20

   Let #Cr = #Cr + 1
   print 'Name of Employer:'                  (#Cr,#PC)
   Print $EntityName           (#Cr,42)             !    (#Cr,85) 

   Let #Cr = #Cr + 1
   print 'Address of Employer:'                  (#Cr,#PC)
   Let $ADDR_PRINT_STR = ''
   Let $ADDR_REM_STR = $PE_Address
   Let #addr_col_pos = 42 !  85 
   Let #MaxNoCharInLine = 80
   do print-addr-mult-lines
   print 'PARTICULARS OF EMPLOYEE WHO WILL BE LEAVING HONG KONG' (#Cr,#PC)
   Let #Cr = #Cr + 1
   print 'ON OR ABOUT THE _____ DAY OF __________ (Month) _________ (Year)'  (#Cr,#PC)

   if #DP_YR <> 0
      print #DP_YR  (#Cr,115) EDIT '9999'
   end-if

   if #DP_MN <> 0
      print #DP_MN  (#Cr,77) EDIT '99'
   end-if

   if #DP_DY <> 0
      print #DP_DY  (#Cr,43) EDIT '99'
   end-if

   Do dtu-Parse-Date($DprtDt_DTU,#DP_YR,#DP_MN,#DP_DY)
   Let #Cr = #Cr + 1

   print '1.  Name of Employee'                  (#Cr,#PC)
   print $EE_Full_Name                           (#Cr,55)

   if rtrim($EE_Maiden_SurName,' ') <> ''
      Let $Prn_SurName = rtrim($EE_Maiden_SurName,' ')
   else
      Let $Prn_SurName = rtrim($EE_SurName,' ')
   end-if

   Let #PrnLen = length($Prn_SurName) * 2
   Let #PCCol = #TermCol - #PrnLen - 8


!   graphic () font :#Font_Num :#Font_NewSize

   Print $Prn_SurName                           (#Cr,#PCCol)
   Let #PCCol =  #PCCol + 4
   Print '****'                                 (#Cr,#StCol)

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '2.  Employee''s Tax File No. with this Department :' (#Cr,#PC)
   if rtrim($EE_Tax_No,' ') <> ''
      Print $EE_Tax_No                             (#Cr,188) edit 'XXX-XXXXXXXXX'
   end-if

   Let #Cr = #Cr + 1
   print '3.  (a) H.K. Identity Card Number :'    (#Cr,#PC)

!   graphic () font :#Font_Num :#Font_NewSize

   Let #PCCol = #TermCol - 22

   if rtrim($EE_ID_No,' ') <> ''
      Let $EE_ID_No = translate($EE_ID_No,' ','')
      Let #EEIDLen = length($EE_ID_No)
      if #EEIDLen < 9
         Let $EE_ID_No = lpad($EE_ID_No,9,' ')
      end-if

      Print $EE_ID_No                               (#Cr,#PCCol) edit 'XXXXXXXX(X)'
      Print '****'                                  (#Cr,#StCol)
   end-if

!   graphic () font :#Font_Num :#Font_OldSize

   Let #Cr = #Cr + 1
   print '     (b) Passport Number and place of issue (if Employee has no H.K. Identity Card):' (#Cr,#PC)
   Graphic (#Cr,1, 225) Horz-Line 5
   if $EE_ID_No = ' '
   if rtrim($EE_PassPort,' ') <> ''
      Let $CountryCode = $EE_PP_Cntry_Issue
      Do Get-Country-Name

      Let $PrintValue = rtrim($EE_PassPort,' ') || ' - ' || $CountryName
      Print $PrintValue                             (#Cr,180)
   end-if
   end-if
   Let #Cr = #Cr + 1
End-Procedure !Header
!
!********************************************************************
! Procedure :   print-addr-mult-lines
!********************************************************************
Begin-procedure print-addr-mult-lines
   let #CurrCharPosn = 0
   Let #i =1
   while #i
       if length($ADDR_REM_STR) > #MaxNoCharInLine
          let #WrapLineAt = #MaxNoCharInLn
          let #CurrCharPosn = #MaxNoCharInLine
          while #CurrCharPosn >= 1
          if substr($ADDR_REM_STR , #CurrCharPosn , 1) = ' '
                let #WrapLineAt = #CurrCharPosn
                break
             else
             let #CurrCharPosn = #CurrCharPosn  - 1
             end-if
          end-while
          let $ADDR_PRINT_STR = substr($ADDR_REM_STR , 1 , #WrapLineAt )
          let $ADDR_PRINT_STR = ltrim(rtrim($ADDR_PRINT_STR,' '),' ')
       else
          let $ADDR_PRINT_STR = $ADDR_REM_STR
       end-if
       Print $ADDR_PRINT_STR    (#Cr,#addr_col_pos) wrap 80 4 
       Let #Cr = #Cr + 1
       if length($ADDR_REM_STR) > #MaxNoCharInLine
          let $ADDR_REM_STR = substr($ADDR_REM_STR , #WrapLineAt + 1 , length($ADDR_REM_STR) - #WrapLineAt)
          else
          Let #i = 0
          break
       end-if
   end-while
End-procedure
!
!********************************************************************
!Procedure : Page_Break_Block
!********************************************************************
Begin-Procedure Newpage

       Do Print-Page-Bottom-Dtl
        new-page 
       Let #Cr = 1
       Do Header
       Let #Cr = #Cr + 1

End-Procedure  !Newpage

!*********************************************************************
!Procedure : Convert-date
!*********************************************************************
begin-procedure Convert-date
let $dd=''
let $mm=''
let $yyyy=''
let $mm=substr($temp,1,2)
let $dd=substr($temp,4,2)
let $yyyy=substr($temp,7,10)
let $temp=''
let $temp=$dd||'/'||$mm||'/'||$yyyy
end-procedure






#include 'number.sqc'   ! routines for formatting numbers.
#include 'datetime.sqc' ! routines for formatting dates and times.
#include 'stdapi.sqc'   ! routines for process scheduler manipulation.
#include 'curdttim.sqc' !get-current-datetime procedure
#include 'datemath.sqc'  !function for date-calculation
