 !***********************************************************************
!  GPMYEP01:  EPF Form 6: Monthly Schedule of Contributions              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2019, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                                                                                *
!                                                                                                                                *
!       $Release:  HR92                                                *
!           $Bug:  29589818                                            *
!                                                                                                                                *
!***********************************************************************
!27/05/04         717891000   if employee has both Primary Name        *
!                             and Legal Name then it is required to    *
!                             print Legal Name. If Legal Name is not   *
!                             available, then the Primary Name should  *
!                             be printed.                              *
!12/12/06         1587443000  Change in EPF Form A PDF file format as  *
!                             per statutory requirement                *
!***********************************************************************
#Include 'setenv.sqc'  !Set environment
#Include 'setup07.sqc'
begin-setup
   DECLARE-LAYOUT EPF_FORMA
   PAPER-SIZE  =  (9,12)
   !MAX-LINES = 66
   !MAX-COLUMNS = 150
   !orientation   = portrait
   left-margin   = 0.30
      top-margin    = 0.30
   end-declare

   DECLARE-LAYOUT EPF_BBCD
   PAPER-SIZE  =  (8.5,11)
   !MAX-LINES = 66
   !MAX-COLUMNS = 150
   !orientation   = portrait
      left-margin   = 0.30
   top-margin    = 0.30
   end-declare

   !page-size 66 80
      declare-printer HPLASERJET
      type          = HPLASERJET
      end-declare


      !point-size    = 9
      !line-size     = 11


        declare-report EPF_FormA
           LAYOUT =  EPF_FORMA
        END-DECLARE
        !
        declare-report EPF_BBCD
            Layout = EPF_BBCD
        END-DECLARE
declare-image company_logo
  type       = JPEG-FILE
  !PLEASE CHANGE THIS LOCATION TO A PROPER LOCATION
  source     = 'L:\88MALAYSIA\VCD\SQR\gpmyepfa.JPG'
 ! source     = 'C:\TEMP\epflogo.jpg'
  image-size = (8,5)
end-declare



end-setup

begin-report
  LET #LINE-NO = 0
  do Init-Processing
  Move &SysDateTime to $AsOfToday
end-report

begin-procedure Init-Processing
        do Init-Datetime
        do Get-Current-Datetime
        do Define-Prcs-Vars
        do Init-Number
        do Init-Report
        !do Report-Parm-Clean
        do Report-Parm-Clean
        do Stdapi-Term
end-procedure ! Init-Processing

!***********************************************************************
!  Procedure: Init-Report                                              *
!             The main driving procedure                               *
!***********************************************************************
begin-Procedure Init-Report

do Get-Label-String

do Stdapi-Init

LET $CURRENCY = 'RM'


if rtrim($curr_language_cd,' ')<>'MAY'
   LET $CONTRIBUTION = 'CARUMAN (RM)'
END-IF

  do Select-Parameters
  do Get-prcsoutputdir
   do Get-HeadQuarter
  do Build-Where


  let #Lines_per_Page = 24
  let #Empl_Cnt = 1
  let #Empl_Cnt_Page = 1
  do Get-Prev-Month-End

  Let $PrintedFormat = 'N'
  Let $JCBulanValue =  $ThisMonthName || ' ' || $Contr_Year
  Let $UPGBulanValue = $LastMonthName || ' ' || $SYear


  if $ProcessMode= '0'       !Output File Mode
     do Write-File-Headers
     do Get-EPF-NBR
  else
     do Read-Input-File
  end-if

!  Do Print-Format2
end-procedure
!Procedure :Select-Parameters     *
!****************************
begin-procedure Select-Parameters
begin-select

RC.GPMY_ORG_LINK_OPTN,
RC.BUSINESS_UNIT,
RC.ORG_LINK_UNIT,
RC.GPMY_EPF_NBR,
RC.MONTHCD,
RC.GPMY_CONTRIB_YEAR,
RC.FILENAME,
RC.GPMY_FILENAMEIN
!RC.GPMY_DISK_OR_TAPE
RC.GPMY_PROCESS_MODE

FROM  PS_GPMY_RPT_RC  RC
WHERE RC.OPRID          = $Prcs_OprID
AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select

 let $ORG_LINK_OPTN     =  &RC.GPMY_ORG_LINK_OPTN
  let $BUSINESS_UNIT     =  &RC.BUSINESS_UNIT
  let $ORG_LINK_UNIT     =  &RC.ORG_LINK_UNIT
  let $EPF_NBR           =  &RC.GPMY_EPF_NBR
  let $Contr_Month       =  &RC.MONTHCD
  let $Contr_Year        =  &RC.GPMY_CONTRIB_YEAR
  let $FileName1          =  &RC.FILENAME
  let $FileNameIn        =  &RC.GPMY_FILENAMEIN
  let $ProcessMode       =  &RC.GPMY_PROCESS_MODE
  let $Contr_Year1       =  &RC.GPMY_CONTRIB_YEAR

end-procedure


!***********************************************************************
!  Procedure: Get-Prev-Month-End                                       *
!             Determine the month end of the previous month.           *
!***********************************************************************
begin-procedure Get-Prev-Month-End
  move $Contr_Month to #RC_Mth
  let #year=$Contr_Year
  do Format-Number(#year,$Contr_Year,'9999')
  add 1 to #RC_Mth
  if #RC_Mth > 12
      let #RC_Mth = 1
      move $Contr_Year   to #RC_Yr
      add 1 to #RC_Yr
      do Format-Number(#RC_Yr,$Contr_Year,'9999')
  end-if
  do Format-Number(#RC_Mth,$Contr_Month,'09')




  let $Date_Curr_Month = $Contr_Year || $Contr_Month || '01'
  let #year = to_number($Contr_Year)
  let #month = to_number($Contr_Month)
  do dtu-format-date(#year, #month, 1, $DTU_Date)
  do dtu-subtract-days($DTU_Date, 1, $DTU_Select_Date)

  do dtu-parse-date($DTU_Select_Date, #SYear, #SMonth, #day)
  let $SMonth = lpad((to_char(#SMonth)), 2, '0')
  do Month-Translation($SMonth,$MONTH1_LBL,$MONTH2_LBL,$MONTH3_LBL,$MONTH4_LBL,$MONTH5_LBL,$MONTH6_LBL,$MONTH7_LBL,$MONTH8_LBL,$MONTH9_LBL,$MONTH10_LBL,$MONTH11_LBL,$MONTH12_LBL,$LastMonthName)
  do Month-Translation($Contr_Month,$MONTH1_LBL,$MONTH2_LBL,$MONTH3_LBL,$MONTH4_LBL,$MONTH5_LBL,$MONTH6_LBL,$MONTH7_LBL,$MONTH8_LBL,$MONTH9_LBL,$MONTH10_LBL,$MONTH11_LBL,$MONTH12_LBL,$ThisMonthName)
  do convert-from-dtu-date($DTU_Select_Date, $Dt_Eff)
  do Format-Number(#SYear,$SYear,'9999')


end-procedure

!************************************
!Procedure : Get-EPF-TOTAL   *
!************************************
begin-procedure Get-EPF-TOTAL
let #total-Count = 0

begin-SELECT
count(B.GPMY_EPF_NBR )  &counter
        let #total-Count = &counter
FROM PS_GPMY_EPF_ORG B,PS_GPMY_EPF_ORG_DT C, PS_GPMY_EPF_TBL PF
WHERE B.EFFDT=C.EFFDT
AND PF.GPMY_EPF_NBR=B.GPMY_EPF_NBR
AND PF.EFFDT=(SELECT MAX(L1.EFFDT)
              FROM PS_GPMY_EPF_TBL L1
              WHERE PF.GPMY_EPF_NBR =L1.GPMY_EPF_NBR
              AND L1.EFFDT <= $Dt_Eff)
AND C.GPMY_ORG_LINK_OPTN= $ORG_LINK_OPTN
AND C.EFFDT =(select MAX(L.EFFDT ) from
            PS_GPMY_EPF_ORG_DT L
            where
            L.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
            )
[$WHERE]
end-SELECT


end-procedure

!************************************
!Procedure : Get-EPF-HashTotal      *
!************************************
begin-procedure Get-EPF-HashTotal

let  #EPF_HashTotal=0
let  #EPFNumber=0

begin-SELECT
DISTINCT (B.GPMY_EPF_NBR)  &EPFNumber
   Move &EPFNumber to #EPFNumber
   let #EPF_HashTotal = #EPF_HashTotal + #EPFNumber

FROM PS_GPMY_EPF_ORG B,PS_GPMY_EPF_ORG_DT C, PS_GPMY_EPF_TBL PF
WHERE B.EFFDT=C.EFFDT
AND PF.GPMY_EPF_NBR=B.GPMY_EPF_NBR
AND PF.EFFDT=(SELECT MAX(L1.EFFDT)
              FROM PS_GPMY_EPF_TBL L1
              WHERE PF.GPMY_EPF_NBR = L1.GPMY_EPF_NBR
              AND L1.EFFDT <= $Dt_Eff)
AND C.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
[$WHERE]
end-SELECT

end-procedure

!************************************
!Procedure : Get-EPF-NBR   *
!************************************
begin-procedure Get-EPF-NBR
let #Page-Count = 1
let  #total=0
  let #Empl_Cnt_print = 0
   if rtrim($EPF_NBR,' ') = ''
     let $EPF_NBR= '%'
  end-if

  let $FileOpen = 'N'
  Let #CL = 24


begin-SELECT
DISTINCT(B.GPMY_EPF_NBR )  &CompEPF1
PF.GPMY_STAT_REG
        let #x= #x +1
   if isnull(rtrim($oldreg,' '))
   else
    if rtrim(&PF.GPMY_STAT_REG,' ') <> rtrim($oldreg,' ')
          if $FileOpen = 'Y'
             do Write-Footer-Record
          end-if
  end-if
  end-if
        do Create-Output-File

  let $oldreg =  &PF.GPMY_STAT_REG

  ! print #Empl_Cnt_print                          (17,60)    edit 99999

FROM PS_GPMY_EPF_ORG B,PS_GPMY_EPF_ORG_DT C, PS_GPMY_EPF_TBL PF
WHERE B.EFFDT=C.EFFDT
AND PF.GPMY_EPF_NBR=B.GPMY_EPF_NBR
AND PF.EFFDT=(SELECT MAX(L1.EFFDT)
              FROM PS_GPMY_EPF_TBL L1
              WHERE PF.GPMY_EPF_NBR = L1.GPMY_EPF_NBR
              AND L1.EFFDT <= $Dt_Eff)
AND C.GPMY_ORG_LINK_OPTN= $ORG_LINK_OPTN
AND C.EFFDT =(select MAX(L.EFFDT ) from
            PS_GPMY_EPF_ORG_DT L
            where
            L.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
            )
[$WHERE]
ORDER BY PF.GPMY_STAT_REG
end-SELECT

if #x = #total-count
          if $FileOpen = 'Y'
             do Write-Footer-Record
             do Close-File
          end-if
  end-if

end-procedure


!***********************************************************************
!  Procedure: Month-Translation                                        *
!             Get the name of the month for the month cd provided.     *
!***********************************************************************
begin-procedure Month-Translation ($monthin,$MONTH1_LBL,$MONTH2_LBL,$MONTH3_LBL,$MONTH4_LBL,$MONTH5_LBL,$MONTH6_LBL,$MONTH7_LBL,$MONTH8_LBL,$MONTH9_LBL,$MONTH10_LBL,$MONTH11_LBL,$MONTH12_LBL,:$monthout)
let $monthin=rtrim($monthin,' ')
  evaluate $monthin
        when='01'
      let $monthout=$MONTH1_LBL

      break
    when='02'
      let $monthout=$MONTH2_LBL

      break
    when='03'
      let $monthout=$MONTH3_LBL
      break
    when='04'
      let $monthout=$MONTH4_LBL
      break
    when='05'
      let $monthout=$MONTH5_LBL
      break
    when='06'
      let $monthout=$MONTH6_LBL
      break
    when='07'
      let $monthout=$MONTH7_LBL
      break
    when='08'
      let $monthout=$MONTH8_LBL
      break
    when='09'
      let $monthout=$MONTH9_LBL
      break
    when='10'
      let $monthout=$MONTH10_LBL
      break
    when='11'
      let $monthout=$MONTH11_LBL
      break
    when='12'
      let $monthout=$MONTH12_LBL
      break
    when-other
      break
   end-evaluate
end-procedure

!***********************************************************************
!  Procedure: Create-Output-File                                       *
!             Select the employees to send in the output file using    *
!             criteria provided.                                       *
!***********************************************************************
begin-Procedure Create-Output-File
Let #Group_Deduction =0
Let #Grand_Total = 0
begin-SELECT
DISTINCT(EP.EMPLID)      &EP.EMPLID
EPF.GPMY_STAT_REG       &EPF.GPMY_STAT_REG
EP.GPMY_IC_INDICATOR    &IdType
EP.GPMY_EPF_NBR
EP.GPMY_MMBRSHIP_NBR
EP.GPMY_EPF_INITIALS
P.NAME
EP.GPMY_FOREIGN_WRKR
  
  move &EP.GPMY_FOREIGN_WRKR to $WkrType
  move &EP.EMPLID to $Emplid
  move &EP.GPMY_EPF_NBR   to $EPF_Nbr
       let $EELegalName = '' !
        do Get-Legal-Name      !
    do Get-EPF-Details

      IF $EELegalName = '' or $EELegalName = ' '
        let $EmplName = rtrim(ltrim(&P.NAME, ' '), ' ')
      ELSE
        let $EmplName = rtrim(ltrim($EELegalName, ' '), ' ')
      END-IF
    do Get-Addnl-Details

    let $STR-Page-Count = '0'

       if $EPF_Nbr <> $PriorEPF
              let  #total=#total+1
             do Write-Empl-Headers
              move $EPF_Nbr to $PriorEPF
         end-if



    if $EPF_Nbr <> $old_EPF_Nbr
  do Add-Grp-Deduction_Employee
  do Add-Grp-Deduction_Employer
  do Add-employee-count
  Let #Group_Deduction=&GrpDeduct1+&GrpDeduct2

  let #countpageepf = &Countepf

    end-if


  do Get-EPF-Contribution
    if isnull(rtrim($old_EPF_Nbr,' '))
    else
   if #Employee_Contrib > 0
    or #Employer_Contrib > 0
      if $EPF_Nbr <> $old_EPF_Nbr
        let $PrintedFormat ='N'
        do Write-GrandTotals
        do Write-SubTotals
                let #CL=24
     end-if
    end-if
     end-if
   if #Employee_Contrib > 0
    or #Employer_Contrib > 0
      do Print-Report
     do Write-Employee-Data
     let $old_EPF_Nbr = $EPF_Nbr
  end-if
     let $old_region = &EPF.GPMY_STAT_REG




FROM PS_GPMY_EPF_PYE  EP, PS_NAMES P , PS_GPMY_EPF_TBL EPF


WHERE
    P.EMPLID=EP.EMPLID


AND EP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                from PS_GPMY_EPF_PYE PYE
                where
                PYE.EMPLID = EP.EMPLID
                AND PYE.GPMY_EPF_NBR = &CompEPF1
                )


AND  EP.EFFDT      = (SELECT MAX(EPA.EFFDT) FROM PS_GPMY_EPF_PYE EPA
                            WHERE EPA.EMPLID   = EP.EMPLID
                            AND EPA.EMPL_RCD  = EP.EMPL_RCD
                            AND EPA.GPMY_EPF_NBR = &CompEPF1 )

AND P.NAME_TYPE  = 'PRI'
AND P.EFFDT = (SELECT MAX(X.EFFDT) FROM PS_NAMES X WHERE X.EMPLID=P.EMPLID
                                                    AND X.NAME_TYPE = 'PRI')

AND EP.GPMY_EPF_NBR=&CompEPF1
AND EP.EFF_STATUS='A'
AND EPF.GPMY_EPF_NBR=&CompEPF1

AND EPF.EFFDT=(SELECT MAX(L1.EFFDT)
                             FROM PS_GPMY_EPF_TBL L1
                             WHERE L1.GPMY_EPF_NBR =&CompEPF1)



ORDER BY EPF.GPMY_STAT_REG,EP.GPMY_EPF_NBR, P.NAME, EP.EMPLID

end-SELECT

do Write-GrandTotals
USE-REPORT EPF_FormA
  let #Grand_Total1 = #Total_Empl_Contrib + #Total_Emplr_Contrib
  !if #Grand_Total  <> 0
  if #Grand_Total1  <> 0
    print #Grand_Total1                    (51, 69) edit 99999999
            Do Print-Format2
 USE-REPORT EPF_FormA
end-if

end-procedure
!*********************************************************************************
!  Procedure: Get-Addnl-Details                                                      *
!             Gets the details of emls with voluntary contribution.                               *
!*********************************************************************************
begin-procedure Get-Addnl-Details

begin-SELECT
EP1.GPMY_PERCENTAGE
EP1.GPMY_AMOUNT
EP1.GPMY_PERCENTAGE2
EP1.GPMY_AMOUNT2

    IF &EP1.GPMY_PERCENTAGE > 0 OR
         &EP1.GPMY_AMOUNT > 0 OR
         &EP1.GPMY_PERCENTAGE2 > 0 OR
        &EP1.GPMY_AMOUNT2 > 0
      let $EmplName = $EmplName !|| ' (VE)'
    END-IF

FROM PS_GPMY_EPF_PYE  EP1
WHERE EP1.EMPLID = $Emplid
AND EP1.EFFDT      = (SELECT MAX(EPB.EFFDT) FROM PS_GPMY_EPF_PYE EPB
                            WHERE EPB.EMPLID   = EP1.EMPLID
                            AND EPB.EMPL_RCD  = EP1.EMPL_RCD)
AND EP1.GPMY_EPF_NBR=&CompEPF1
AND EP1.EFF_STATUS='A'
end-SELECT

end-procedure
!*********************************************************************************
!  Procedure: Get-Legal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-Legal-Name

begin-SELECT
NAMES.NAME

    let $EELegalName = &NAMES.NAME

FROM PS_NAMES NAMES
WHERE NAMES.EMPLID = $Emplid
AND NAMES.EFFDT=(SELECT MAX(NAMES1.EFFDT) FROM PS_NAMES NAMES1
                                          WHERE NAMES1.EMPLID=NAMES.EMPLID
                                            AND NAMES1.NAME_TYPE = NAMES.NAME_TYPE
                                            AND NAMES1.EFFDT <= $Dt_Eff)
AND NAMES.NAME_TYPE = 'LEG'
end-SELECT

end-procedure


!***********************************************************************
!  Procedure: Write-File-Headers                                       *
!             Writes the File header to the output file                *
!***********************************************************************
begin-Procedure Write-File-Headers
 do Get-EPF-TOTAL
 do Get-EPF-HashTotal
 do Get-EPF-ER-Contribution
 do Get-EPF-EE-Contribution
 Let $FileName1=$prcsoutputdir ||$FileName1
      let $FileOut = $FILENAME1
      let $FILENAME1 = &RC.FILENAME
        let $FileOpen = 'N'
        let #count = #count+1
      if $FileOpen = 'N'
   open $FileOut as #count for-writing record=129:fixed
  end-if
  let $Filler = ' '
 let $RecType = '00'
 let $FileName = 'EPF MONTHLY FORM A'
 do Format-DateTime ($current-date, $FileDate, {DEFCMP}, '', '')
 do Format-Number(#total-Count, $count, '09999')
 do Format-Number(#EPF_HashTotal, $EPF_HashTotal, '099999999999999999999')
 Let #EPF_Employer_Share = #EPF_Employer_Share * 100
 Let #EPF_Employee_Share = #EPF_Employee_Share * 100

 do Format-Number(#EPF_Employer_Share, $EPF_ER_Share, '099999999999999')
 do Format-Number(#EPF_Employee_Share, $EPF_EE_Share, '099999999999999')

  !File Header Record

  write #count from $RecType:2
                         $FileName:18
                         $FileDate:8
                         $count:5
                         $EPF_ER_Share:15
                         $EPF_EE_Share:15
                         $EPF_HashTotal:21
                         $Filler:45
end-procedure

!***********************************************************************
!  Procedure: Write-Empl-Headers                                       *
!             Writes the Employer header records to the output file    *
!***********************************************************************

!             output file.
begin-Procedure Write-Empl-Headers
  !Employer Header Record
  let $RecType = '01'
  move $EPF_Nbr to #EPF_Nbr
  do Format-Number(#EPF_Nbr, $Employer_Reference, '0999999999999999999')
  do Format-Number(#total, $Seq_No, '09999')

  let $Yr = substr($Contr_Year,3,2)
  let $Contrib_Mth = $Contr_Month || $Contr_Year
  Let $Media = 'DSK'
  Let $Employer_Rate='0000'
  Let $Employee_Rate='0000'
  Let $SDBA_Ver='       '

  write #count from $RecType:2                -
               $Employer_Reference:19     -
               $Contrib_Mth:6
               $Media:3
               $Seq_No:5
               $Employer_Rate:4
               $Employee_Rate:4
               $SDBA_Ver:7
               $Filler:79
               let $FileOpen = 'Y'
end-procedure
!***********************************************************************
!  Procedure: Get-Headquarter                                           *
!             Get head quater for the company                        *
!***********************************************************************
begin-procedure Get-HeadQuarter
begin-SELECT
A.GPMY_EPF_NBR  &headquarter
A.GPMY_STAT_REG
        move &headquarter to $headquarter
        move &A.GPMY_STAT_REG to $regionHQ
FROM PS_GPMY_EPF_TBL A
WHERE


A.GPMY_EPF_NBR IN(SELECT
DISTINCT(B.GPMY_EPF_NBR )  FROM PS_GPMY_EPF_ORG B,PS_GPMY_EPF_ORG_DT C
WHERE B.EFFDT=C.EFFDT
AND C.GPMY_ORG_LINK_OPTN= $ORG_LINK_OPTN)
AND A.EFFDT=(SELECT MAX(L1.EFFDT)FROM PS_GPMY_EPF_TBL L1 WHERE A.GPMY_EPF_NBR =L1.GPMY_EPF_NBR)
AND A.EFF_STATUS='A'
AND A.GPMY_HQ = 'Y'
end-SELECT

!  let $Co_Name = &A.GPMY_REGISTERED_NM
!  uppercase $Co_Name
!
!  let $Co_Address1 = rtrim(&A.ADDRESS1,' ')
!  uppercase $Co_Address1
!  let $Co_Address2 = rtrim(&A.ADDRESS2,' ')
!  uppercase $Co_Address2
!  let $Co_Address = rtrim(&A.CITY,' ')||', '||rtrim(&A.STATE,' ')||', '||rtrim(&A.POSTAL,' ')|| ' '
!  uppercase $Co_Address
!  let $Designation=rtrim(&A.JOBTITLE,' ')
!  uppercase $Designation



end-procedure

!***********************************************************************
!  Procedure: Get-EPF-Details                                          *
!             Get details about the EPF Number.                        *
!***********************************************************************
begin-procedure Get-EPF-Details
let $Co_Name=''
let $Co_Address1=''
let $Co_Address2=''
let $Co_Address=''
let $Designation=''

begin-SELECT
A.NAME
A.GPMY_STAT_REG         &regioncode
A.GPMY_HQ
A.PHONE
A.NATIONAL_ID
A.GPMY_REGISTERED_NM
A.JOBTITLE
A.ADDRESS1
A.ADDRESS2
A.ADDRESS3
A.ADDRESS4
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.GPMY_RESPONSIBLEID  !

          let $MnLegalName = '' !
            let $ResponcibleId = rtrim(&A.GPMY_RESPONSIBLEID, ' ')
        do Get-ManagerLegal-Name      !
        IF $MnLegalName = '' or $MnLegalName = ' '
        let $NameMn = rtrim(ltrim(&A.NAME, ' '), ' ')
      ELSE
        let $NameMn = rtrim(ltrim($MnLegalName, ' '), ' ')
      END-IF

FROM PS_GPMY_EPF_TBL A
WHERE
A.GPMY_EPF_NBR = $EPF_Nbr
AND A.EFFDT=(SELECT MAX(L1.EFFDT)FROM PS_GPMY_EPF_TBL L1 WHERE L1.GPMY_EPF_NBR =$EPF_Nbr)
AND A.EFF_STATUS='A'
end-SELECT


  let $Co_Name = &A.GPMY_REGISTERED_NM
  let $Co_Name = upper($Co_Name)

    let $COUNTRY  = rtrim(ltrim(&A.COUNTRY  , ' '), ' ')
    let $ADDRESS1 = rtrim(ltrim(&A.ADDRESS1 , ' '), ' ')
    let $ADDRESS2 = rtrim(ltrim(&A.ADDRESS2 , ' '), ' ')
    let $ADDRESS3 = rtrim(ltrim(&A.ADDRESS3 , ' '), ' ')
    let $ADDRESS4 = rtrim(ltrim(&A.ADDRESS4 , ' '), ' ')
    let $CITY     = rtrim(ltrim(&A.CITY     , ' '), ' ')
    let $STATE    = rtrim(ltrim(&A.STATE    , ' '), ' ')
    let $POSTAL   = rtrim(ltrim(&A.POSTAL   , ' '), ' ')
    let $StrAddress = ''
    let $StrAddress = $StrAddress || $ADDRESS1
    if $ADDRESS2 <> ''
      let $StrAddress = $StrAddress || ' ' || $ADDRESS2
    end-if
    if $ADDRESS3 <> ''
      let $StrAddress = $StrAddress || ' ' || $ADDRESS3
    end-if
    if $ADDRESS4 <> ''
      let $StrAddress = $StrAddress || ' ' || $ADDRESS4
    end-if
    if $CITY     <> ''
      let $StrAddress = $StrAddress || ' ' || $CITY
    end-if
    let $StrAddress = $StrAddress || ' ' || $STATE
    let $StrAddress = $StrAddress || '-'  || $POSTAL
    let $StrAddress = $StrAddress || ' ' || $COUNTRY

!  let $Co_Address1 = rtrim(&A.ADDRESS1,' ')
!  uppercase $Co_Address1
!  let $Co_Address2 = rtrim(&A.ADDRESS2,' ')
!  uppercase $Co_Address2
!  let $Co_Address = rtrim(&A.CITY,' ')||', '||rtrim(&A.STATE,' ')||', '||rtrim(&A.POSTAL,' ')|| ' '
!  uppercase $Co_Address

  let $Designation=rtrim(&A.JOBTITLE,' ')
  uppercase $Designation



end-procedure

!*********************************************************************************
!  Procedure: Get-ManagerLegal-Name                                                     *
!             Gets the Legal name of an employees.                               *
!*********************************************************************************
begin-procedure Get-ManagerLegal-Name

begin-SELECT
NAMESMn.NAME

    let $MnLegalName = &NAMESMn.NAME

FROM PS_NAMES NAMESMn
WHERE NAMESMn.EMPLID = $ResponcibleId
AND NAMESMn.NAME_TYPE = 'LEG'
AND NAMESMn.EFFDT=(SELECT MAX(NAMES11.EFFDT) FROM PS_NAMES NAMES11
                                          WHERE NAMES11.EMPLID=NAMESMn.EMPLID
                                            AND NAMES11.NAME_TYPE = NAMESMn.NAME_TYPE
                                            AND NAMES11.EFFDT <= $Dt_Eff)

end-SELECT

end-procedure


!***********************************************************************
!  Procedure: Get-EPF-ER-Contribution
!             Gets the EPF contribution amounts from DEDUCTION_BAL.    *
!***********************************************************************
begin-Procedure Get-EPF-ER-Contribution

   let #EPF_Employer_Share = 0
begin-SELECT
SUM(MP3.CALC_RSLT_VAL)    &EPF_Employer_Share

    Move &EPF_Employer_Share to #EPF_Employer_Share

FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP , PS_GPMY_EPF_ORG B , PS_GPMY_EPF_ORG_DT C
WHERE

 MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)

 AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)
 AND MP3.EMPLID = MP.EMPLID
 AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
 AND MP3.EMPL_RCD = MP.EMPL_RCD

 ! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance
 AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                   PROCESS_INSTANCE = (#prcs_process_instance - 1)
                   AND   EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
 ! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance
 AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
 AND MP3.CAL_ID = MP.CAL_ID
 AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
 AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM


AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND EMPL_RCD = MP3.EMPL_RCD
                    AND CAL_ID =  MP3.CAL_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)


AND MP.SLICE_END_DT  = (SELECT max(SLICE_END_DT)
                    FROM PS_GPMY_PY_TMP
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP.EMPLID
                    AND CAL_RUN_ID =  MP.CAL_RUN_ID
                    AND EMPL_RCD = MP.EMPL_RCD
                    AND CAL_ID =  MP.CAL_ID
                    AND GP_PAYGROUP = MP.GP_PAYGROUP
                    AND GP_GENRPT_BREAK1=MP.GP_GENRPT_BREAK1)

AND MP3.GPMY_FLD_NAME = 'EPF_DED_ER_MTD'

AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
                     FROM PS_GPMY_PY_TMP
                     WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                     AND EMPLID=MP.EMPLID )


AND MP.GP_GENRPT_BREAK1 in (SELECT TL.GPMY_EPF_NBR
                            from
                            PS_GPMY_EPF_TBL TL
                            where
                            TL.EFFDT = (Select (MAX(TL1.EFFDT)) FROM
                                        PS_GPMY_EPF_TBL TL1
                                        WHERE TL.GPMY_EPF_NBR =  TL1.GPMY_EPF_NBR
                                        AND TL1.EFFDT <=$Dt_Eff
                                        )
                            )

AND B.GPMY_EPF_NBR = MP.GP_GENRPT_BREAK1
AND B.EFFDT =  C.EFFDT
AND C.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
AND C.EFFDT = (SELECT MAX(EFFDT)
                from PS_GPMY_EPF_ORG_DT
                where
                GPMY_ORG_LINK_OPTN =  $ORG_LINK_OPTN
                )
[$WHERE]


end-SELECT




end-procedure


!***********************************************************************
!  Procedure: Get-EPF-EE-Contribution
!             Gets the EPF contribution amounts from DEDUCTION_BAL.    *
!***********************************************************************
begin-Procedure Get-EPF-EE-Contribution

   let #EPF_Employee_Share = 0
begin-SELECT
SUM(MP3.CALC_RSLT_VAL)    &EPF_Employee_Share

    Move &EPF_Employee_Share to #EPF_Employee_Share

FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP , PS_GPMY_EPF_ORG B , PS_GPMY_EPF_ORG_DT C


WHERE

MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)

AND MP3.EMPLID = MP.EMPLID

AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID

AND MP3.EMPL_RCD = MP.EMPL_RCD

 ! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                   PROCESS_INSTANCE     = (#prcs_process_instance - 1)
                   AND EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
 ! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance

AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND EMPL_RCD = MP3.EMPL_RCD
                    AND CAL_ID =  MP3.CAL_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)

AND MP.SLICE_END_DT  = (SELECT max(SLICE_END_DT)
                    FROM PS_GPMY_PY_TMP
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP.EMPLID
                    AND CAL_RUN_ID =  MP.CAL_RUN_ID
                    AND EMPL_RCD = MP.EMPL_RCD
                    AND CAL_ID =  MP.CAL_ID
                    AND GP_PAYGROUP = MP.GP_PAYGROUP
                    AND GP_GENRPT_BREAK1=MP.GP_GENRPT_BREAK1)
AND MP3.GPMY_FLD_NAME = 'EPF_DED_EE_MTD'
AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
                     FROM PS_GPMY_PY_TMP
                     WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                     AND EMPLID=MP.EMPLID )
AND MP.GP_GENRPT_BREAK1 in (SELECT TL.GPMY_EPF_NBR
                            from
                            PS_GPMY_EPF_TBL TL
                            where
                            TL.EFFDT = (Select (MAX(TL1.EFFDT)) FROM
                                        PS_GPMY_EPF_TBL TL1
                                        WHERE TL.GPMY_EPF_NBR =  TL1.GPMY_EPF_NBR
                                        AND TL1.EFFDT <=$Dt_Eff
                                        )
                            )

AND B.GPMY_EPF_NBR = MP.GP_GENRPT_BREAK1
AND B.EFFDT =  C.EFFDT
AND C.GPMY_ORG_LINK_OPTN = $ORG_LINK_OPTN
AND C.EFFDT = (SELECT MAX(EFFDT)
                from PS_GPMY_EPF_ORG_DT
                where
                GPMY_ORG_LINK_OPTN =  $ORG_LINK_OPTN
                )
[$WHERE]

end-SELECT



end-procedure



!***********************************************************************
!  Procedure: Get-EPF-Contribution                                     *
!             Get the EPF contribution amounts from DEDUCTION_BAL. Ded *
!             class A and B are employee contributions. Class N are    *
!             employer contributions.                                  *
!***********************************************************************
begin-Procedure Get-EPF-Contribution

   let #Employee_Contrib = 0
  let #Employer_Contrib = 0
  let #EPF_Gross = 0
  let #EmplDeduct = 0

begin-SELECT
MP3.CALC_RSLT_VAL    &EmplDeduct
MP3.GPMY_FLD_NAME    &MP3.GPMY_FLD_NAME

        let $GPMY_FLD_NAME = rtrim(&MP3.GPMY_FLD_NAME,' ')
        evaluate $GPMY_FLD_NAME
                when = 'EPF_DED_EE_MTD'
            move &EmplDeduct to #EmplDeduct
                add #EmplDeduct to #Employee_Contrib
                add #EmplDeduct to #Total_Empl_Contrib
                break
                when = 'EPF_DED_ER_MTD'
            move &EmplDeduct to #EmplDeduct
                add #EmplDeduct to #Employer_Contrib
                add #EmplDeduct to #Total_Emplr_Contrib
                break
                when = 'EPF_GROSS_MTD'
            move &EmplDeduct to #EPF_Gross
        break
         end-evaluate
         let #Grand_Total  =  #Grand_Total + #EmplDeduct
FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP
WHERE

MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)

AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.EMPLID = $Emplid

AND MP.EMPLID = $Emplid
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD
! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                   PROCESS_INSTANCE =(#prcs_process_instance - 1)
                   AND   EMPLID           = $Emplid
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM

AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=$Emplid
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND EMPL_RCD = MP3.EMPL_RCD
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND CAL_ID =  MP3.CAL_ID
                    !AND SLICE_END_DT =T2.SEG_END_DT
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)


AND MP.SLICE_END_DT  = (SELECT max(SLICE_END_DT)
                    FROM PS_GPMY_PY_TMP
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=$Emplid
                    AND CAL_RUN_ID =  MP.CAL_RUN_ID
                    AND EMPL_RCD = MP.EMPL_RCD
                    AND GP_PAYGROUP = MP.GP_PAYGROUP
                    AND CAL_ID =  MP.CAL_ID
AND GP_GENRPT_BREAK1=&EP.GPMY_EPF_NBR)
AND MP.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS)
FROM PS_GPMY_PY_TMP
                     WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
AND EMPLID=$Emplid )
AND USER_KEY1=&EP.GPMY_EPF_NBR
AND MP.GP_GENRPT_BREAK1 = &EP.GPMY_EPF_NBR






end-SELECT

end-procedure

!*********************************
!Procedure : Add-Grp-Deduction_Employee
!*********************************

begin-procedure Add-employee-count
begin-SELECT
COUNT(DISTINCT T3.EMPLID) &Countepf

FROM PS_GPMY_PY_TMP3 T3,
    PS_GPMY_PY_TMP T2

    WHERE
    T3.PROCESS_INSTANCE= (#prcs_process_instance - 1)
    AND T2.PROCESS_INSTANCE = (#prcs_process_instance - 1)
    AND T3.EMPLID = T2.EMPLID
    AND T3.CAL_RUN_ID = T2.CAL_RUN_ID
    AND T3.EMPL_RCD = T2.EMPL_RCD
    AND T3.GP_PAYGROUP = T2.GP_PAYGROUP
    AND T3.CAL_ID  = T2.CAL_ID
    AND T2.PRC_ORD_TS=(SELECT MAX(PRC_ORD_TS) FROM PS_GPMY_PY_TMP
                   WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
                   AND EMPLID=T2.EMPLID )
    AND T3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=T3.EMPLID
                    AND CAL_RUN_ID =  T3.CAL_RUN_ID
                    AND EMPL_RCD = T3.EMPL_RCD
                    AND CAL_ID =  T3.CAL_ID
                    AND GP_PAYGROUP = T3.GP_PAYGROUP
                    AND GPMY_FLD_NAME=T3.GPMY_FLD_NAME
                    AND USER_KEY1=T3.USER_KEY1
                    )
    AND USER_KEY1=&EP.GPMY_EPF_NBR
    AND T2.GP_GENRPT_BREAK1 = &EP.GPMY_EPF_NBR

    AND T3.EMPLID IN (SELECT DISTINCT PS.EMPLID FROM PS_GPMY_EPF_PYE PS WHERE
    PS.EFFDT = (SELECT MAX(PS1.EFFDT) FROM PS_GPMY_EPF_PYE PS1 WHERE
    PS1.EMPLID=PS.EMPLID AND PS1.EMPL_RCD=PS.EMPL_RCD
    AND PS1.GPMY_EPF_NBR = &EP.GPMY_EPF_NBR
    AND PS1.EFFDT <= $Dt_Eff ) AND PS.EFF_STATUS = 'A')


end-SELECT
end-procedure



begin-procedure Add-Grp-Deduction_Employee



begin-SELECT
sum(MP3.CALC_RSLT_VAL) &GrpDeduct1
  FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP
WHERE
MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)

AND MP3.EMPLID = MP.EMPLID

AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID

AND MP3.EMPL_RCD = MP.EMPL_RCD

! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance
AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                   PROCESS_INSTANCE       = (#prcs_process_instance - 1)
                   AND   EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID)
! This is generic code written to take the maximum of employee record. Incase customer (Ambank) does not have mulitple employee records , they can remove this sub query which will maximize the performance

AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND CAL_ID =  MP3.CAL_ID
                    !AND SLICE_END_DT =T2.SEG_END_DT
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)

AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM


AND USER_KEY1=&EP.GPMY_EPF_NBR
AND MP.GP_GENRPT_BREAK1 = &EP.GPMY_EPF_NBR

AND MP.SLICE_END_DT  = (SELECT max(SLICE_END_DT)
                    FROM PS_GPMY_PY_TMP
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP.EMPLID
                    AND CAL_RUN_ID =  MP.CAL_RUN_ID
                    AND GP_PAYGROUP = MP.GP_PAYGROUP
                    AND CAL_ID =  MP.CAL_ID
                    AND GP_GENRPT_BREAK1=&EP.GPMY_EPF_NBR)

AND MP3.GPMY_FLD_NAME='EPF_DED_EE_MTD'

AND MP.PRC_ORD_TS=(
SELECT MAX(PRC_ORD_TS)
FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
AND EMPLID=MP.EMPLID )
! The below code also can be removed if necessary to increase the performance - to Ambank.
AND MP3.EMPLID IN (SELECT DISTINCT EMPLID FROM PS_GPMY_EPF_PYE PS WHERE
EFFDT = (SELECT MAX(EFFDT) FROM PS_GPMY_EPF_PYE PS1 WHERE
PS1.EMPLID=PS.EMPLID AND PS1.EMPL_RCD=PS.EMPL_RCD ))




end-SELECT

end-procedure
!

!*********************************
!Procedure : Add-Grp-Deduction_Employer
!*********************************
begin-procedure Add-Grp-Deduction_Employer



begin-SELECT
sum(MP3.CALC_RSLT_VAL) &GrpDeduct2
  FROM PS_GPMY_PY_TMP3  MP3,PS_GPMY_PY_TMP MP
WHERE
MP3.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP.PROCESS_INSTANCE = (#prcs_process_instance - 1)
AND MP3.EMPLID = MP.EMPLID
AND MP3.CAL_RUN_ID =  MP.CAL_RUN_ID
AND MP3.EMPL_RCD = MP.EMPL_RCD

AND MP.EMPL_RCD = (SELECT MAX(EMPL_RCD)
                   FROM PS_GPMY_PY_TMP
                   WHERE
                   PROCESS_INSTANCE     = (#prcs_process_instance - 1)
                   AND EMPLID           = MP.EMPLID
                   AND   CAL_RUN_ID       = MP.CAL_RUN_ID
                   AND   GP_PAYGROUP      = MP.GP_PAYGROUP
                   AND   CAL_ID           = MP.CAL_ID
                   AND   ORIG_CAL_RUN_ID  = MP.ORIG_CAL_RUN_ID)
AND MP3.GP_PAYGROUP = MP.GP_PAYGROUP
AND MP3.CAL_ID = MP.CAL_ID
AND MP3.ORIG_CAL_RUN_ID =  MP.ORIG_CAL_RUN_ID
AND MP3.RSLT_SEG_NUM = MP.RSLT_SEG_NUM

!AND MP3.CALC_RSLT_VAL=(SELECT MAX(CALC_RSLT_VAL) FROM PS_GPMY_PY_TMP3 X1
!                 WHERE X1.EMPLID=MP3.EMPLID
!                 AND X1.CAL_RUN_ID =  MP3.CAL_RUN_ID
!                 AND X1.GP_PAYGROUP = MP3.GP_PAYGROUP
!                 AND X1.RSLT_SEG_NUM = MP3.RSLT_SEG_NUM
!                 AND X1.RSLT_VER_NUM = MP3.RSLT_VER_NUM
!                 AND X1.RSLT_REV_NUM = MP3.RSLT_REV_NUM
!                 AND X1.PROCESS_INSTANCE = MP3.PROCESS_INSTANCE
!        AND X1.GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
!        AND X1.USER_KEY1=MP3.USER_KEY1
!)
AND MP3.RSLT_SEG_NUM = (SELECT MAX(RSLT_SEG_NUM)
                    FROM PS_GPMY_PY_TMP3
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP3.EMPLID
                    AND CAL_RUN_ID =  MP3.CAL_RUN_ID
                    AND GP_PAYGROUP = MP3.GP_PAYGROUP
                    AND CAL_ID =  MP3.CAL_ID
                    !AND SLICE_END_DT =T2.SEG_END_DT
                    AND GPMY_FLD_NAME=MP3.GPMY_FLD_NAME
                    AND USER_KEY1=MP3.USER_KEY1)

AND MP.SLICE_END_DT  = (SELECT max(SLICE_END_DT)
                    FROM PS_GPMY_PY_TMP
                    WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
                    AND EMPLID=MP.EMPLID
                    AND CAL_RUN_ID =  MP.CAL_RUN_ID
                    AND GP_PAYGROUP = MP.GP_PAYGROUP
                    AND CAL_ID =  MP.CAL_ID
                    AND GP_GENRPT_BREAK1=&EP.GPMY_EPF_NBR)

AND USER_KEY1=&EP.GPMY_EPF_NBR
AND MP.GP_GENRPT_BREAK1 = &EP.GPMY_EPF_NBR
AND MP3.GPMY_FLD_NAME='EPF_DED_ER_MTD'

AND MP.PRC_ORD_TS=(
SELECT MAX(PRC_ORD_TS)
FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE=(#prcs_process_instance - 1)
AND EMPLID=MP.EMPLID )
! The below code also can be removed if necessary to increase the performance - to Ambank.
AND MP3.EMPLID IN (SELECT DISTINCT EMPLID FROM PS_GPMY_EPF_PYE PS WHERE
EFFDT = (SELECT MAX(EFFDT) FROM PS_GPMY_EPF_PYE PS1 WHERE
PS1.EMPLID=PS.EMPLID AND PS1.EMPL_RCD=PS.EMPL_RCD ))




end-SELECT
end-procedure



!***********************************************************************
!  Procedure: Print-Report                                             *
!             Print the report listing employees and their contribution*
!             amounts - split by employee and employer.                *
!***********************************************************************
begin-procedure Print-Report
 USE-REPORT EPF_FormA
 Let $National_Id_Type = ''
 Let $ICPassport = ''
 Let $row-count = ''
    let $Passport=' '
    if #Empl_Cnt_Page > #Lines_per_Page OR #CL >= 47
      do Write-GrandTotals
      do Write-SubTotals
      let $PrintedFormat ='N'
        Let #CL = 24
      let #Empl_Cnt_Page = 1
   end-if
   
   if $WkrType = 'N'
   Do get-nid-no
   Do GetICPassportInfo
   if  $ICPassport=' '
   let $ICPassport=$Passport
   end-if
   
   Else
   let $where1 = 'AND NATIONAL_ID_TYPE = '||'''NEWIC'''
   let $SOSCONUM = ''
   Do Get-SOCSO-no
   if $SOSCONUM = ''
   let $where1 = 'AND NATIONAL_ID_TYPE = '||'''OLDIC'''
   Do Get-SOCSO-no
   End-If
   let $ICPassport=$SOSCONUM
   end-if

   !DO Print-Format2
   if $PrintedFormat = 'N'
      DO Print-Format
      USE-REPORT EPF_FormA
   ALTER-PRINTER
      FONT  = 4
        POINT-SIZE = 10
!graphic () font 4 8
!        print $JCBulanValue         (5,42) BOLD UNDERLINE
   print $EPF_Nbr              (10,23)
        Let $Contr-Yr = $Contr_Month || $Yr
        print $Contr-Yr             (10,37)
        ALTER-PRINTER
        FONT  = 4
        POINT-SIZE = 8
   print $Co_Name              (16,22)
        print $StrAddress           (17,22) wrap 40 4
!        print $Co_Address1          (17,22)
!        print $Co_Address2          (18,22)
!        print $Co_Address           (19,22)
    Let $NameMn  = rtrim($NameMn,' ')
    !do Rotate-Name
        Let $EmplerName = Upper($NameMn)
        Let $EmplerName = replace($EmplerName,',',' ')
        print $EmplerName           (54,12)
        print &A.NATIONAL_ID        (56,12)
        print &A.JOBTITLE           (57,12)
        print &A.PHONE              (58,12)
   !print $UPGBulanValue        (12,21)
        print #Group_Deduction      (10, 49) edit 99999999 bold

        print #countpageepf         (17,60)    edit 99999
      Let $PrintedFormat = 'Y'
   end-if
    ALTER-PRINTER
        FONT  = 4
        POINT-SIZE = 8
    ! graphic () font 4 10
    print #Empl_Cnt             (#CL,  1)  edit 9999
   ALTER-PRINTER
      FONT  = 4
        POINT-SIZE = 8
   print &EP.GPMY_MMBRSHIP_NBR (#CL,  5)
   print $ICPassport           (#CL, 16)
    let $Name = $EmplName    !
      ! let $Name = &P.NAME
   ! do Rotate-Name
    Let $Name = Upper($Name)
    Let $Name = replace($Name,',',' ')
    Let #len = length($Name)
   Let #cmp = 34
   if #len > #cmp
        Let $EmplName1 = rtrim(ltrim(substr($Name,1,25) , ' '), ' ')
        Let $EmplName2 = rtrim(ltrim(substr($Name,26,34), ' '), ' ')
        print $EmplName1            (#CL, 31)
        print #EPF_Gross            (#CL, 58)
        print #Employer_Contrib     (#CL, 66)  edit 999999
        print #Employee_Contrib     (#CL, 73)  edit 999999
        add 1 to #CL
        print $EmplName2            (#CL, 31)
   Else
        print $Name      (#CL, 31)
        print #EPF_Gross            (#CL, 58)
        print #Employer_Contrib     (#CL, 66)  edit 999999
        print #Employee_Contrib     (#CL, 73)  edit 999999
   End-if
   Add 1 to #CL
    move #Empl_Cnt to #Empl_Cnt_print
   add 1 to #Empl_Cnt
   add 1 to #Empl_Cnt_Page
   add 1 to #Total_Employees
   if $EPF_Nbr <> $old_EPF_Nbr
           let #Employer_Total = 0
           let #Employee_Total = 0
           add #Employer_Contrib  to #Employer_Total
           add #Employee_Contrib  to #Employee_Total
   else
           add #Employer_Contrib  to #Employer_Total
           add #Employee_Contrib  to #Employee_Total
   end-if
   !USE-REPORT EPF_BBCD
   use-report EPF_BBCD
   !print &A.NATIONAL_ID        (40,28)
   !print &A.JOBTITLE           (+1,21)
   !print &A.PHONE              (+1,21)
   !print $UPGBulanValue        (12,21)
   !print #Group_Deduction      (10, 48) edit 999999.99
end-procedure


!begin-procedure Go-Here
!  !graphic (1,7,40) box 15
!  Do Print-Format2
!end-procedure



begin-procedure Write-SubTotals
 USE-REPORT EPF_FormA
! Total on bottom of page
    print #Employer_Total                              (48, 65) edit 9999999
    print #Employee_Total                              (48, 72) edit 9999999
   new-page
! Total on top of page
   if $EPF_Nbr <> $old_EPF_Nbr
   else
        Print #Employer_Total                              (23, 65) edit 9999999
        Print #Employee_Total                              (23, 72) edit 9999999
   end-if
!*************************************************************************************
! ********** If employer refernce numbers change then no ned to reinitialize the variable
!*************************************************************************************
   if $EPF_Nbr <> $old_EPF_Nbr
        let #Empl_Cnt = 1
        LET #Page-Count = 1
   end-if

end-procedure


begin-procedure Write-GrandTotals
USE-REPORT EPF_FormA
    print #Employer_Total                 (48, 65) edit 9999999
    print #Employee_Total                 (48, 72) edit 9999999
   if $EPF_Nbr <> $old_EPF_Nbr
        let #Empl_Cnt = 1
   end-if
end-procedure

begin-procedure get-nid-no
begin-SELECT
A.EMPLID
A.NATIONAL_ID  &ICNo

        move &ICNo to $ICPassport

 FROM PS_PERS_NID A
WHERE A.EMPLID= $Emplid
AND A.PRIMARY_NID='Y'

end-SELECT
end-procedure

begin-procedure Get-SOCSO-no

let $SOSCONUM = ''
begin-SELECT
A1.EMPLID
A1.NATIONAL_ID  &SOSCONUM

        let $SOSCONUM = &SOSCONUM

 FROM PS_PERS_NID A1
WHERE A1.EMPLID= $Emplid
AND COUNTRY = 'MYS'
[$where1]
end-SELECT
end-procedure

!***********************************************************************
! Procedure: GetICPassportInfo                                         *
!***********************************************************************
begin-Procedure GetICPassportInfo
begin-SELECT
CP.PASSPORT_NBR     &Passport
CP.DEPENDENT_ID     &DependId
CP.DT_ISSUED        &CPIssueDt
CP.EXPIRATN_DT      &CPExpireDt
   Move &Passport to $Passport


   FROM PS_CITIZEN_PSSPRT CP
 WHERE  CP.EMPLID = $Emplid
    AND $AsOfToday >= CP.DT_ISSUED
    AND $AsOfToday <=CP.EXPIRATN_DT
end-SELECT
end-Procedure


!*********************************
!Procedure : Build-Where
!*********************************
begin-procedure Build-Where

if ($ORG_LINK_OPTN='CO')OR ($ORG_LINK_OPTN='PG')OR ($ORG_LINK_OPTN='ET')
     if isnull(RTRIM($ORG_LINK_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($EPF_NBR,' '))
               LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
           ELSE
              LET $WHERE = 'AND B.ORG_LINK_UNIT  =' || '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_EPF_NBR='|| '''' || RTRIM($EPF_NBR,' ') || ''''
           end-if
     end-if

 end-if

if ($ORG_LINK_OPTN='LO')OR ($ORG_LINK_OPTN='DE')
     if isnull(RTRIM($BUSINESS_UNIT,' '))
       let $WHERE = 'AND 1 = 1'
     ELSE
           if isnull(RTRIM($ORG_LINK_UNIT,' '))
               LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''
           ELSE
                if isnull(RTRIM($EPF_NBR,' '))
                      LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''
                ELSE
                   LET $WHERE = 'AND B.BUSINESS_UNIT=' || '''' || RTRIM($BUSINESS_UNIT,' ') || ''''||'AND B.ORG_LINK_UNIT='|| '''' || RTRIM($ORG_LINK_UNIT,' ') || ''''||'AND B.GPMY_EPF_NBR='|| '''' || RTRIM($EPF_NBR,' ') || ''''
                END-IF
           end-if
     end-if

 end-if

end-procedure




!***********************************************************************
!  Procedure: Write-Employee-Data                                      *
!             Writes data to the output file.                          *
!***********************************************************************
begin-procedure Write-Employee-Data

  let $RecType = '02'

    move &EP.GPMY_MMBRSHIP_NBR  to #Membership
    do Format-Number(#Membership,$Membership,'0999999999999999999')
  let #Hash_Total = #Hash_Total + #Membership

  let $Formatted_NRIC = translate($ICPassport,'-','')

  if rtrim($Formatted_NRIC,' ') = ''
     Let $Formatted_NRIC = lpad($Formatted_NRIC,15,'0')
  else
     Let $Formatted_NRIC = ltrim($Formatted_NRIC,' ')
     Let $Formatted_NRIC = rpad($Formatted_NRIC,15,' ')
  end-if


   ! let $Name = &P.NAME
  let $Name = $EmplName  !
  Let $Name = Upper($Name)
  Let $Name = replace($Name,',',' ')

  Let #Employee_Contrib = #Employee_Contrib * 100
  Let #Employer_Contrib = #Employer_Contrib * 100
  Let #EPF_Gross = #EPF_Gross * 100

  do Format-Number(#Employee_Contrib,$Employee_Contrib,'099999999')
  do Format-Number(#Employer_Contrib,$Employer_Contrib,'099999999')
  do Format-Number(#EPF_Gross,$EPF_Gross,'099999999999999')

  write #count from $RecType:2
               $Membership:19
               $Formatted_NRIC:15
               $Name:40
               $Emplid:20
               $Employer_Contrib:9
               $Employee_Contrib:9
               $EPF_Gross:15

 end-procedure


begin-procedure Close-File
  close #count
end-procedure

begin-procedure Write-Footer-Record

  let $RecType = '99'

  do Format-Number(#Hash_Total,$Hash_Total,'099999999999999999999')
  do Format-Number(#Total_Employees,$Total_Employees,'0999999')
  let #Total_Emplr_Contrib = #Total_Emplr_Contrib * 100
  let #Total_Empl_Contrib  = #Total_Empl_Contrib * 100

  do Format-Number(#Total_Emplr_Contrib,$Total_Emplr_Contrib,'099999999999999')
  do Format-Number(#Total_Empl_Contrib,$Total_Empl_Contrib,'099999999999999')

  let #GrandTotal = #Total_Empl_Contrib + #Total_Empl_Contrib
  do Format-Number(#GrandTotal,$GrandTotal,'0999999999')

  write #count from $RecType:2        -
               $Total_Employees:7     -
               $Total_Emplr_Contrib:15 -
               $Total_Empl_Contrib:15
               $Hash_Total:21         -
               $Filler:69
  let #Total_Emplr_Contrib = 0
  let #Total_Empl_Contrib  = 0
  let #Total_Employees     = 0
  let #Hash_Total          = 0

end-procedure

!***********************************************************************
!  Procedure: Read-Input-File                                          *
!             Reads the input file and inserts a new row for each new  *
!             EPF Initials record per employee.                        *
!***********************************************************************
begin-procedure Read-Input-File

  let $FileIn = $FileNameIn

  let $FileIn = rtrim($FileIn,' ')

  open $FileIn as 2 for-reading record=77:fixed

  while 1     !Infinite loop exited by break below
     read 2 into $EmplRecord:77
     if #end-file
        break
     end-if
     let $In_Emplid = substr($EmplRecord,10,10)
     let $In_Emplid = rtrim($In_Emplid,' ')
     let $Initials = substr($EmplRecord,75,3)
     do Update-EPF-Rec
  end-while
end-procedure

!***********************************************************************
!  Procedure: Update-EPF-Rec                                           *
!             For each employee read, update the EFF enrollment record *
!             with the EPF intials. This update will be for all rows.  *
!***********************************************************************
begin-procedure Update-EPF-Rec
   let $sql-statement = 'GPMYEP01.SQR,Update-Record,PS_GPMY_EPF_PYE'


begin-SQL on-error=SQL-Error
UPDATE PS_GPMY_EPF_PYE
SET GPMY_EPF_INITIALS = $Initials
WHERE EMPLID = $In_Emplid
end-SQL
end-procedure

#include 'prcslng.sqc'
!#Include 'rotname1.sqc'  !Rotate-Name Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date manipulation
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'sqrtrans.sqc'  !Translate SQR strings to given langua
#include 'readxlat.sqc'  !Enables XLAT table read
#Include 'reset.sqc'     !Reset printer procedure
#Include 'adformat.sqc'
#Include 'getlogou.sqc'


begin-Procedure Print-Format
    USE-REPORT EPF_FormA
    print-image company_logo (5,5)
     Let $month_ded=$BBCD_TEXT1
    print   #Page-Count (10,72) edit '999999'
      ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 12
     graphic                            (1,1,78)  box 20
    print $ReportTitle1                 (2,26) bold

      ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 8
    print $FORM_ID                      (2,70) bold
    print $ReportTitle2                 (3,23)
     ALTER-PRINTER
      FONT  = 5
      POINT-SIZE = 15
    print $ReportTitle4                 (5,68) bold
     ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 10
     !graphic () font 4 10
     !print $BBCD_TEXT1 (2,70)
     ALTER-PRINTER
      FONT  = 5
      POINT-SIZE = 20
    print 'A' (7,70) bold
     ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 10
     print ' ' (4,1)
     print ' ' (5,1)
!    print $CurrentMonth (0,21) bold
!    print '_' (0,45,14) FILL
     ALTER-PRINTER
      FONT  = 23
      POINT-SIZE = 40
     !graphic () font 23 40
!     print $FORM_ID1 (0,43)
     !print $FORM_ID1 (0,45)
     ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 10
     !graphic () font 4 10
     print ' ' (5,1)
     print ' ' (6,1)
     ALTER-PRINTER
      FONT  = 18
      POINT-SIZE = 10
     !graphic () font 18 10
     print ' ' (7,1)
    !Let $ReportTitle5 = $ReportTitle5
     !|| ':'
    !print $ReportTitle5 (8,68)
     graphic                            (7 ,21,45)  box 2
     graphic                            (9 ,21,45)  box 2
     graphic                            (11 ,21,45) box 5
     graphic                            (16 ,21,45) box 5
     ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 10
     !graphic () font 4 10
    !print $CURRENCY  (10,46)
    !print '00' (10,62)
     ALTER-PRINTER
      FONT  = 18
      POINT-SIZE = 10
     !graphic () font 18 10
     graphic     (6,35,4)    vert-line
     graphic     (6,46,4)    vert-line
    graphic     (6,57,4)    vert-line
     ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 8
     !graphic () font 4 8
    print $EMPLR_EPF_NO       (7,22)Bold
    print $CONTRIB_MONTH      (7,36) wrap 8 2 Bold
    print $TOTAL_MONTH_CONTR   (7,47)Bold
    let $RM = '('||$CURRENCY||')'
    print $RM                 (8,50) Bold
    print $FORM_A_REF_NO       (7,58) wrap 10 2 Bold

    print $ReportTitle8        (10,68)

     !print $month_ded           (11,22)
     !Let $text = $BBCD_TEXT1 || ' ' ||    $BBCD_TEXT2
     !print ')'                  (12,40)
    !LET $PRNBBCD_TEXT = $BBCD_TEXT1 ||' '|| $UPGBulanValue ||' '||$BBCD_TEXT2
    print  $BBCD_TEXT1           (11 ,22)
    LET $PRNBBCD_TEXT = $BBCD_TEXT2 || ' ' ||'.....'|| ' '||$BBCD_TEXT2A
    print  $PRNBBCD_TEXT           (12 ,22)
    !print  $BBCD_TEXT2             (13 ,22)
     !print  $TEXT18             (13 ,21)
    print '[ ]' (13,22)
     !graphic (14,22,2)  box 1
    print $ReportText2 (13,24)
     !graphic (14,31,2)  box 1
    print '[ ]' (13,32)
    print $CHEQUE_LBL_FRM_A (13,34) wrap 25 2
    graphic    (14,47,17)   horz-line
     !graphic  (14,55,10) horz-line
    !Let $Name_lbl = lower($REPONSIBLE_NAME)
    Let $Name_lbl = $REPONSIBLE_NAME_FRM_A
    print $Name_lbl              (16,12)
    print $FORM_A_PROCESS_DT     (16,50)
    print $COMPANY_ADDRESS       (17,16)
    print $FORM_A_WORKER         (17,50)
    print $ReportTitle9          (17,68)
  ALTER-PRINTER
      FONT  = 4
        POINT-SIZE = 8
  !graphic () font 4 10
  graphic                            (21,1,78)  box 3
  graphic    (20,4 ,2)    vert-line
  graphic    (20,13,2)    vert-line
  graphic    (20,15,2)    vert-line
  graphic    (20,30,2)    vert-line
    graphic    (20,57,2)    vert-line
  graphic    (20,65,2)    vert-line
    graphic    (21,65,14)   horz-line
  !graphic    (21,72,29)   vert-line
  graphic    (21,72,28)   vert-line
  graphic    (23,4 ,24)    vert-line
  graphic    (23,13,24)    vert-line
  graphic    (23,15,24)    vert-line
  graphic    (23,30,24)    vert-line
    graphic    (23,57,24)    vert-line
    graphic    (22,65,29)    vert-line
    print $EE_EPF_NBR    (21,5)wrap 7 2 bold
    print $ReportText3   (21,13)bold
    print $EE_IC_NBR     (21,18)bold
    print $EE_NAME       (21,35)bold
    print $FORM_A_WAGE   (21,59)bold
    print $RM            (22,59)bold
    print $CONTRIBUTION  (21,67)bold
    print $ReportText4   (22,13)bold
    print $ReportText5   (22,17)bold
    !ALTER-PRINTER
    !    FONT  = 18
    !    POINT-SIZE = 10
  !graphic () font 18 10
    let $Sl_NO = upper($Sl_NO)
    print $Sl_NO         (22,1)bold
    ALTER-PRINTER
      FONT  = 4
        POINT-SIZE = 7
  print $ReportText6 (22,31)
    ALTER-PRINTER
        FONT  = 4
        POINT-SIZE = 8
    print $EMPLOYER_CONTRIB1    (22,66)
    print $EMPLOYEE_CONTRIB1    (22,73)
  ALTER-PRINTER
      FONT  = 4
        POINT-SIZE = 8
    print  $ReportText9 (23,33) bold
  graphic                            (23,1,78)  box 25
  graphic                            (48,1,78)  box 2
  ALTER-PRINTER
        FONT  = 4
        POINT-SIZE = 8
  !graphic () font 14 6
    !print $ReportText8 (48,2)
  print $ReportText7 (48,33) bold
    !print $ReportText10 (49,33)
!  graphic                            (50,54,24)  box 2
  graphic                            (50,54,25)  box 2
  ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 10
  !graphic () font 4 10
    print $TOTALS_ONLY (51,55)bold
    print $RM (51,61)bold
  ALTER-PRINTER
        FONT  = 4
        POINT-SIZE = 8
  !graphic () font 18 10
    !print $ReportText11          (51,1)
    print $SIGNATURE_FRM_A       (52,1)wrap 14 2 bold
    graphic                      (53,10,20)   horz-line
    graphic                      (53,31,18)  box 9
    let $NOTES = rtrim($ReportText12,':')
    print $NOTES                 (52,50)bold
    Let $Name_lbl = rtrim($REPONSIBLE_NAME,':')
    print $Name_lbl              (54,1)bold
    graphic                      (54,10,20)   horz-line
    print $NATIONAL_ID_FRM_A     (55,1) wrap 10 2 bold
    graphic                      (56,10,20)   horz-line
    let $Designation_Lbl = rtrim($DESIGNATION11,':')
    print $Designation_Lbl       (57,1)bold
    graphic                      (57,10,20)   horz-line
    print $PHONE_FRM_A           (58,1)bold
    !print $TEXT_LAST             (62,1)
    graphic                      (58,10,20)   horz-line
    print $FORM_A_EMAIL          (59,1)bold
    graphic                      (59,10,20)   horz-line
    print $FORM_A_DATE           (60,1)wrap 10 2 bold
    graphic                      (61,10,20)   horz-line
    print $FORM_A_STAMP          (61,35)
    print $FORM_A_WARNING        (63,2) bold
    let $FORM_A_WARN_MSG = $FORM_A_WARN_MSG1 || ' '||$FORM_A_WARN_MSG2
    print $FORM_A_WARN_MSG       (63,10)
  ALTER-PRINTER
      FONT  = 5
      POINT-SIZE = 6
  !graphic () font 5 6
    !print $REMARKS2           (56,30)
    !print $REMARKS3 (60,28)
  ALTER-PRINTER
      FONT  = 18
      POINT-SIZE = 10
  !graphic () font 18 10
  !use-report EPF_FORMA
 ALTER-PRINTER
      FONT  = 4
      POINT-SIZE = 7
 !graphic () font 5 6
  !print $REMARKS4 (+1,67)
  !print 'here' (+1,20)
!  print $REMARKS2           (56,30)
  !print $REMARKS3 (62,28)
!  print $REMARKS3 (60,28)
  !print '1. Nombor Rujukan Majikan mesti ditulis di belakang cek' (53,50) wrap 70 2
!  print ' .'  (54,50)
  !print '2. Jumlah cek mesti sama dengan jumlah Borang A.' (54,50)
    print $FORM_A_NOTE1  (53,50)
    print $FORM_A_NOTE2  (54,50)
    print $FORM_A_NOTE3  (55,50)
    print $FORM_A_NOTE4A (56,50)
    print $FORM_A_NOTE4B (57,51)
    print $FORM_A_NOTE5  (58,50)
    print $FORM_A_NOTE6  (59,50)
    print $FORM_A_NOTE7A (60,50)
    print $FORM_A_NOTE7B (61,51)
    print $FORM_A_NOTE8  (62,50)

  !print $REMARKS6 (59,50)
  !print $REMARKS7 (+1,50)
  !do Print-Footer
end-Procedure

begin-Procedure Print-Format2
  use-report EPF_BBCD
    !print-image company_logo (3,3)
    Let $BBCD_Month_Str =$BBCD_MONTH
    Let $Contr-Yr = $Contr_Month || $Yr
    let $STAT_TEXT = $BBCD_TEXT || ' ' || $UPGBulanValue || ' ' || $BBCD_TEXT_CONT
  ALTER-PRINTER
    FONT  = 5
    POINT-SIZE = 8
    print 'APPENDIX G'                     (0,70) bold
    !ALTER-PRINTER
    !FONT = 5
    !POINT-SIZE =14
     !print 'CONTOH'                              (2,)  center BOLD
  ALTER-PRINTER
    FONT  = 5
    POINT-SIZE = 8
    print $FORM_TEXT                            (3,69) BOLD
    graphic                                     (3,1,77) box 55
  ALTER-PRINTER
    FONT  = 5
        POINT-SIZE = 14
    print $BBCD_TITLE                           (4,21) bold
  ALTER-PRINTER
        FONT  = 5
        POINT-SIZE = 10
    print $BBCD_TITLE2                          (5,19)
  ALTER-PRINTER
      FONT  = 5
      POINT-SIZE = 11
    print $BBCD_TITLE3                          (6,15) bold
  ALTER-PRINTER
      FONT  = 5
      POINT-SIZE = 12
    print $BBCD_TITLE4                          (8,21) bold underline
!    print '_'                                  (8,25,45) FILL
    print $BBCD_Month_Str                       (10,24)  BOLD
    Let $JCBulanValue =UPPER($JCBulanValue)
    print $JCBulanValue                         (10,48)  BOLD
!    print '_'                                   (9,50,10) fill
    ALTER-PRINTER
        FONT  = 5
        POINT-SIZE = 10
    graphic                                     (12,32,2) vert-line
    graphic                                     (12,48,2) vert-line
    print $EMPLR_EPF_NO                         (13,17)
    print $CONTRIB_MONTH                        (13,34)
    print $TOTAL_MONTH_CONTR                    (13,50)
    graphic                                     (13,15,50)  box 2
    print $EPF_Nbr                              (14,20)
    print $CURRENCY                              (14,49) bold
    graphic           (13,52,1) vert-line

    print $Contr-Yr                             (14,37)
    PRINT #Grand_Total1                          (14,53)  edit 99,999,999.99
    graphic                                     (14,15,50)  box 14
     PRINT $STAT_TEXT                            (16,17) WRAP 60 3
    print '[ ]'                                 (20,17)
    print $ReportText2                          (20,19)
    print '[ ]'                                 (20,28)
    print $CHEQUE_LBL                           (20,30)
    graphic                                     (20,56,8) horz-line
!    GRAPHIC                                     (21,20,40) HORZ-LINE

!    Let $Name_lbl = $REPONSIBLE_NAME
!    print $Name_lbl                             (22,10)
!    print $COMPANY_ADDRESS                      (23,10)


    !print $BBCD_NAME                            (22,5)
    print 'NAMA &'                               (22, 5)
    print 'ALAMAT'                               (23, 5)
    !print $COMPANY_ADDRESS                       (23,10)

    print $Co_Name                              (22,17) bold
    print $StrAddress                           (23,17) bold wrap 40 4
!    print $Co_Address1                         (+1,21)
!    print $Co_Address2                         (+1,21)
!    print $Co_Address                          (+1,21)
    GRAPHIC                                     (27,15,50) HORZ-LINE
    GRAPHIC                                     (29,1,77) HORZ-LINE
    ALTER-PRINTER
        FONT  = 5
        POINT-SIZE = 9
    PRINT $REMARKS1                             (27,66)    bold
    !print-image circle_logo                     (23,68)
     ALTER-PRINTER
      FONT  = 5
        POINT-SIZE = 8
     !print 'Cop Agen Kutipan' (0,62)    bold
    PRINT  $BBCD_TEXT3                          (33,14)
    !LET $BBCD_TEXT4B = $BBCD_TEXT4 || ' ' || UPPER($JCBulanValue) || ' ' || $BBCD_TEXT4A
    LET $BBCD_TEXT4B =UPPER($JCBulanValue) || ' ' || $BBCD_TEXT4A

    !print  $BBCD_TEXT4A                         (34,14)
    PRINT  $BBCD_TEXT4B                        (34,14)
    print  $BBCD_TEXT6                          (35,14)
    !print  $BBCD_TEXT6A                         (36,14)
    !PRINT  $BBCD_TEXT7                          (36,14)

    print $SIGNATURE                            (43,6) bold
    Let $Name_lbl = upper($REPONSIBLE_NAME)
    print $BBCD_NAME                            (45,6) bold
    print $NATIONAL_ID                          (47,6) bold
    let $DESIGNATION11 = upper($DESIGNATION11)
    print $DESIGNATION11                        (49,6) bold
    print $PHONE                                (51,6) bold

    print $ReportText12                         (42,52) bold
    print $EmplerName                           (45,19)
    print &A.NATIONAL_ID                        (47,19)
    print &A.JOBTITLE                           (49,19)
    print &A.PHONE                              (51,19)
  ALTER-PRINTER
      FONT  = 5
        POINT-SIZE = 7
    print $REMARKS3                             (50,24)
    print $REMARKS2                             (46,27)
  ALTER-PRINTER
        FONT  = 5
      POINT-SIZE = 10

    graphic                                     (43,18,28)   horz-line
    graphic                                     (45,18,28)   horz-line
    graphic                                     (47,18,28)   horz-line
    graphic                                     (49,18,28)   horz-line
    graphic                                     (51,18,28)   horz-line

  ALTER-PRINTER
        FONT  = 5
        POINT-SIZE = 10
!   print $REMARKS4                             (44,52) WRAP 25 2
!   print $BBCD_REMARKS1                        (46,52) wrap 25 2
!**********************************************************************
    print $REMARKS4                              (44,52)
    print $REMARKS41                             (45,54)
    print $BBCD_REMARKS1                         (46,52)
    print $BBCD_REMARKS11                        (47,54)
!**********************************************************************
    print $BBCD_REMARKS2                        (48,52)
    print $BBCD_REMARKS3                        (49,54)
    print $BBCD_REMARKS4                        (50,54)
    print $BBCD_REMARKS5                        (51,54)
    print $BBCD_REMARKS6                        (52,54)
    print $BBCD_REMARKS7                        (53,54)
    print $BBCD_REMARKS8                        (54,54)
  !PRINT 'dari satu n ombor majikan' (+1,50)
  !PRINT 'dalam pita/disket majikan ' (+1,50)
  !PRINT 'hendaklah menggunakan ' (+1,50)
  !print 'Borang BBCD berasingan  ' (+1,50)
  !print 'bagi setiap nombor' (+1,50)
  !print 'yang berkenaan.' (+1,50)
  !let $BBCD_REM = $BBCD_REMARKS2 || ' ' ||$BBCD_REMARKS3
  !print $BBCD_REM (+1,50) wrap 30 7
  new-page
end-Procedure

!*********************************************************************************
!  Procedure: Print-Footer                                                       *
!             Print the Footer  Info.                                            *
!*********************************************************************************
begin-procedure Print-Footer
!move 'EPF_FormA' to $ReportID
!do Get-Language-Codes   ! get the current language in which user wants to print the report
!do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
! Let $report_name = 'EPF_FormA.pdf'
! New-Report $report_name
!use-report EPF_FORMA
! ALTER-PRINTER
!      FONT  = 5
!      POINT-SIZE = 6
! !graphic () font 5 6
!  print $REMARKS4 (+1,67)
!  print 'here' (+1,20)
!!  print $REMARKS2           (56,30)
!  !print $REMARKS3 (62,28)
!!  print $REMARKS3 (60,28)
!  print '1. Nombor Rujukan Majikan mesti ditulis di belakang cek.'  (+1,50) wrap 50 2
!  print '2. Jumlah cek mesti sama dengan jumlah Borang A.'          (+1,50) wrap 50 2
  !print $REMARKS6    (55,50)
  !print $REMARKS7                                       (56,50)
  !print $REMARKS8  (57,50)
  !print $REMARKS9                         (58,50)
  !print $REMARKS10                    (59,50)
  !print $REMARKS11  (60,50)
  !print $REMARKS12                 (58,50)


  !print $BBCD_REMARKS3 (+1,50) wrap 30 3
!  print $REMARKS2           (56,30)
  !print $REMARKS3 (62,28)
!  print $REMARKS3 (60,28)
  !print $REMARKS4 (53,50)
  !print $REMARKS5         (54,50)
  !print $REMARKS6    (55,50)
  !print $REMARKS7                                       (56,50)
  !print $REMARKS8  (57,50)
  !print $REMARKS9                         (58,50)
  !print $REMARKS10                    (59,50)
  !print $REMARKS11  (60,50)
  !print $REMARKS12                 (58,50)


 !move 'EPF_BBCD' to $ReportID
 !do Get-Language-Codes   ! get the current language in which user wants to print the report
 !do Init_Report_Translation ($ReportID, $curr_language_cd) ! from settrans.sqc
 !Let $report_name = 'EPF_BBCD.pdf'
 !New-Report $report_name
 !PRINT 'TEST' (+1,25)

end-Procedure

begin-procedure Get-Label-String
    do Append_Report_Translation ('GPMYEP01')     ! from settrans.sqc
    do Get_Field_Information ('GPMYEP01', 'KWSP 6', $FORM_ID, #DW)! from settrans.sqc returning the actual text based upon the language selected
    do Get_Field_Information ('GPMYEP01', 'TITLE1', $ReportTitle1, #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE2', $ReportTitle2, #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE3', $ReportTitle3, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_TYPE', $ReportTitle4, #DW)
    do Get_Field_Information ('GPMYEP01', 'CURRENT_MONTH_NAME', $CurrentMonth, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_ID', $FORM_ID1, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_TEXT', $FORM_TEXT, #DW)
    do Get_Field_Information ('GPMYEP01', 'CONTRIB_MONTH', $CONTRIB_MONTH, #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE4', $ReportTitle44, #DW)
    do Get_Field_Information ('GPMYEP01', 'CHEQUE_LB', $CHEQUE_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'CHEQUE_LB_FRM_A', $CHEQUE_LBL_FRM_A, #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE5',$ReportTitle5 , #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE6', $ReportTitle6, #DW)
    do Get_Field_Information ('GPMYEP01', 'DISERTAKAN.', $ReportText1, #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE7', $ReportText2, #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE8', $ReportTitle8, #DW)
    do Get_Field_Information ('GPMYEP01', 'TITLE9', $ReportTitle9, #DW)
    do Get_Field_Information ('GPMYEP01', 'EE_EPF_NBR', $EE_EPF_NBR, #DW)
    do Get_Field_Information ('GPMYEP01', 'N', $ReportText3, #DW)
    do Get_Field_Information ('GPMYEP01', 'EE_IC_NBR', $EE_IC_NBR, #DW)
    do Get_Field_Information ('GPMYEP01', 'EE_NAME', $EE_NAME, #DW)
    do Get_Field_Information ('GPMYEP01', 'CONTRIBUTION', $CONTRIBUTION, #DW)
    do Get_Field_Information ('GPMYEP01', 'K',  $ReportText4, #DW)
    do Get_Field_Information ('GPMYEP01', 'PENGENALAN',  $ReportText5, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT11',  $Sl_NO, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT12',  $ReportText6, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT15',  $ReportText7, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT14',  $ReportText8, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT13',  $ReportText9, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT16',  $ReportText10, #DW)
    do Get_Field_Information ('GPMYEP01', 'TOTAL',  $TOTALS_ONLY, #DW)
    do Get_Field_Information ('GPMYEP01', '- FA 3 -',  $ReportText11, #DW)
    do Get_Field_Information ('GPMYEP01', 'SIGNATURE',$SIGNATURE  , #DW)
    do Get_Field_Information ('GPMYEP01', 'CATATAN', $ReportText12 , #DW)
    do Get_Field_Information ('GPMYEP01', 'NAME',  $REPONSIBLE_NAME, #DW)
    do Get_Field_Information ('GPMYEP01', 'NAME_FRM_A',  $REPONSIBLE_NAME_FRM_A, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_NAME',  $BBCD_NAME, #DW)
    do Get_Field_Information ('GPMYEP01', 'NATIONAL_ID',  $NATIONAL_ID, #DW)
    do Get_Field_Information ('GPMYEP01', 'DESIGNATION',  $DESIGNATION11, #DW)
    do Get_Field_Information ('GPMYEP01', 'PHONE',  $PHONE, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT8',  $REMARKS1, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT9',  $REMARKS2, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT10',  $REMARKS3, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS1',  $REMARKS4, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS11',  $REMARKS41, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS2',  $REMARKS5, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS3',  $REMARKS6, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS4',  $REMARKS7, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS5',  $REMARKS8, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS6',  $REMARKS9, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS7',  $REMARKS10, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS8',  $REMARKS11, #DW)
    do Get_Field_Information ('GPMYEP01', 'REMARKS9',  $REMARKS12, #DW)
    do Get_Field_Information ('GPMYEP01', 'JAN',  $MONTH1_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'FEB',  $MONTH2_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'MAR',  $MONTH3_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'APR',  $MONTH4_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'MAY',  $MONTH5_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'JUN',  $MONTH6_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'JUL',  $MONTH7_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'AUG',  $MONTH8_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'SEPT', $MONTH9_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'OCT',  $MONTH10_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'NOV',  $MONTH11_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'EMPLOYEE',  $EMPLOYEE_CONTRIB1, #DW)
    do Get_Field_Information ('GPMYEP01', 'DEC',  $MONTH12_LBL, #DW)
    do Get_Field_Information ('GPMYEP01', 'EMPLR_EPF_NO ',  $EMPLR_EPF_NO , #DW)
    do Get_Field_Information ('GPMYEP01', 'CURRENCY ',  $CURRENCY , #DW)
    do Get_Field_Information ('GPMYEP01', 'DEDUCTION_MONTH ',  $DEDUCTION_MONTH , #DW)
    do Get_Field_Information ('GPMYEP01', 'TOTAL_MONTH_CONTR ',  $TOTAL_MONTH_CONTR , #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_REF_NO ',  $FORM_A_REF_NO , #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT17',  $TEXT17 , #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT18',  $TEXT18 , #DW)
    do Get_Field_Information ('GPMYEP01', 'CO_NAME',  $COMPANY_NAME  , #DW)
    do Get_Field_Information ('GPMYEP01', 'CO_ADDRESS',  $COMPANY_ADDRESS, #DW)
    do Get_Field_Information ('GPMYEP01', 'EMPLOYER',  $EMPLOYER_CONTRIB1, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TITLE',  $BBCD_TITLE, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TITLE2',  $BBCD_TITLE2, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TITLE3',  $BBCD_TITLE3, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TITLE4',  $BBCD_TITLE4, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_MONTH',  $BBCD_MONTH, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT_CONT',  $BBCD_TEXT_CONT, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT',  $BBCD_TEXT, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT1',  $BBCD_TEXT1, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT2',  $BBCD_TEXT2, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT2A', $BBCD_TEXT2A, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT3',  $BBCD_TEXT3, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT4',  $BBCD_TEXT4, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT4A', $BBCD_TEXT4A,#DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT6',  $BBCD_TEXT6, #DW)
    !**********************************************************************
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT6A',  $BBCD_TEXT6A, #DW)
    !**********************************************************************
    do Get_Field_Information ('GPMYEP01', 'BBCD_TEXT7',  $BBCD_TEXT7, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS1',  $BBCD_REMARKS1, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS11', $BBCD_REMARKS11, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS2',  $BBCD_REMARKS2, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS3',  $BBCD_REMARKS3, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS4',  $BBCD_REMARKS4, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS5',  $BBCD_REMARKS5, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS6',  $BBCD_REMARKS6, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS7',  $BBCD_REMARKS7, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_REMARKS8',  $BBCD_REMARKS8, #DW)
    do Get_Field_Information ('GPMYEP01', 'TEXT_LAST',  $TEXT_LAST, #DW)
    do Get_Field_Information ('GPMYEP01', 'BBCD_RAILWAYS',  $BBCD_RAILWAYS, #DW)
    do Get_Field_Information ('GPMYEP01', 'ADDRESS_TEXT2',  $ADDRESS_TEXT2, #DW)
    do Get_Field_Information ('GPMYEP01', 'ADDRESS_TEXT3',  $ADDRESS_TEXT3, #DW)
    do Get_Field_Information ('GPMYEP01', 'ADDRESS_TEXT4',  $ADDRESS_TEXT4, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_PROCESS_DT',  $FORM_A_PROCESS_DT, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_WORKER',  $FORM_A_WORKER, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_WAGE',  $FORM_A_WAGE, #DW)
    do Get_Field_Information ('GPMYEP01', 'SIGNATURE_FRM_A',  $SIGNATURE_FRM_A, #DW)
    do Get_Field_Information ('GPMYEP01', 'NATIONAL_ID_FRM_A',  $NATIONAL_ID_FRM_A, #DW)
    do Get_Field_Information ('GPMYEP01', 'PHONE_FRM_A',  $PHONE_FRM_A, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_EMAIL',  $FORM_A_EMAIL, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_DATE',  $FORM_A_DATE, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_WARNING',  $FORM_A_WARNING, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_WARN_MSG1',  $FORM_A_WARN_MSG1, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_WARN_MSG2',  $FORM_A_WARN_MSG2, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_STAMP',  $FORM_A_STAMP, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE1',  $FORM_A_NOTE1, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE2',  $FORM_A_NOTE2, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE3',  $FORM_A_NOTE3, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE4A', $FORM_A_NOTE4A, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE4B', $FORM_A_NOTE4B, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE5',  $FORM_A_NOTE5, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE6',  $FORM_A_NOTE6, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE7A',  $FORM_A_NOTE7A, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE7B',  $FORM_A_NOTE7B, #DW)
    do Get_Field_Information ('GPMYEP01', 'FORM_A_NOTE8',  $FORM_A_NOTE8, #DW)
end-Procedure
begin-Procedure Report-Parm-Clean
begin-sql
DELETE FROM PS_GPMY_PY_TMP
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP2
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_PY_TMP3
WHERE PROCESS_INSTANCE = (#prcs_process_instance - 1)
end-sql

begin-sql
DELETE FROM PS_GPMY_RPT_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_PR_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql

begin-sql
DELETE FROM PS_GPMY_EMPL_RC
WHERE OPRID          = $Prcs_OprID
AND   RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
end-sql
end-Procedure

