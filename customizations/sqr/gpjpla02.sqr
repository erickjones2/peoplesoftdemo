!***********************************************************************
! GPJPLA02.sqr:  Basic Employment Insurance Premium Report             *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2016, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2016/03/09:10:37:09                                 !
!       $Release:  HR92                                                !
!           $Bug:  22545575                                            !
!                                                                      *
!***********************************************************************
        
#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !page layout AND printer definition

#define c1   30
#define c2   50
#define c3   63
#define c4   73
#define c5   90
#define c6  100
#define c7  117
#define c8  127
#define c9  144
#define c10 154

begin-report

        do Init-Processing

        do Process-Main

        do Reset

        do Update-Prcs-Run-Status

end-report


!***********************************************************************
!                                                                      *
! Init-Processing                                                      *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Define-Prcs-Vars        - prcsapi.sqc                  *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Get-Language-Codes      - prcslng.sqc                  *
!               Get-GPJPLA01-runctl                                    *
!               Init-Report                                            *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!                                                                      *
!***********************************************************************
begin-procedure Init-Processing


        do Init-Datetime

        do Get-Current-Datetime

        do Define-Prcs-Vars

        do Get-Run-Control-Parms

        do Get-Language-Codes

        do Init-Report
                
                do Corp-nmbr-estab


end-procedure ! Init-Processing


!***********************************************************************
!                                                                      *
! Init-Report                                                          *
!                                                                      *
!                                                                      *
! Called By:    Init-Processing                                        *
!                                                                      *
! Calls:        Init_Report_Translation    - sqrtrans.sqc              *
!               Append_Report_Translation  - sqrtrans.sqc              *
!               Get_Field_Information                                  *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header & throughout report.  Performs   *
!               Strings Table translation.  #Defines variables for     *
!               use throughout report in printing columns.             *
!                                                                      *
!***********************************************************************
begin-procedure Init-Report


!***********************************************************************
!                                                                      *
! Translations procedures & Strings Table retrievals.                  *
!                                                                      *
!***********************************************************************

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Append_Report_Translation ('GPJPLA02')

    do Get_Field_Information ('GPJPLA02','BONUS',       $GPJPLA02_Bonus,        #dummy_width)
    do Get_Field_Information ('GPJPLA02','CAL_ID',      $GPJPLA02_CalID,        #dummy_width)
    do Get_Field_Information ('GPJPLA02','EI_TOTAL_A',  $GPJPLA02_EI_PartA,     #dummy_width)
    do Get_Field_Information ('GPJPLA02','EI_TOTAL_B',  $GPJPLA02_EI_PartB,     #dummy_width)
    do Get_Field_Information ('GPJPLA02','EI_TOTAL_C',  $GPJPLA02_EI_PartC,     #dummy_width)
    do Get_Field_Information ('GPJPLA02','ELDERLY',     $GPJPLA02_Elderly,      #dummy_width)
    do Get_Field_Information ('GPJPLA02','EMP_INS_TYPE',$GPJPLA02_EmplIns,      #dummy_width)
    do Get_Field_Information ('GPJPLA02','EMPL',        $GPJPLA02_Number,       #dummy_width)
    do Get_Field_Information ('GPJPLA02','ESTAB',       $GPJPLA02_Estab,        #dummy_width)
    do Get_Field_Information ('GPJPLA02','FT_WORK',     $GPJPLA02_FTWorker,     #dummy_width)
    do Get_Field_Information ('GPJPLA02','INSURED',     $GPJPLA02_Insured,      #dummy_width)
    do Get_Field_Information ('GPJPLA02','OFFICER_EI',  $GPJPLA02_Officer_EI,   #dummy_width)
    do Get_Field_Information ('GPJPLA02','OFFICER_WC',  $GPJPLA02_Officer_WC,   #dummy_width)
    do Get_Field_Information ('GPJPLA02','PYMT_DT',     $GPJPLA02_PaymentDate,  #dummy_width)
    do Get_Field_Information ('GPJPLA02','SALARY',      $GPJPLA02_Salary,       #dummy_width)
    do Get_Field_Information ('GPJPLA02','TITLE',       $GPJPLA02_Title,        #dummy_width)
    do Get_Field_Information ('GPJPLA02','TMP_WORK',    $GPJPLA02_TMPWorker,    #dummy_width)
    do Get_Field_Information ('GPJPLA02','TOTAL',       $GPJPLA02_TotalSection, #dummy_width)
    do Get_Field_Information ('GPJPLA02','TOT_NUM_WAGE',$GPJPLA02_TotalColumn,  #dummy_width)
    do Get_Field_Information ('GPJPLA02','TRANSFER',    $GPJPLA02_LastSection,  #dummy_width)
    do Get_Field_Information ('GPJPLA02','WAGES',       $GPJPLA02_Wages,        #dummy_width)
    do Get_Field_Information ('GPJPLA02','WC_INS_TYPE', $GPJPLA02_WCInsType,    #dummy_width)
    do Get_Field_Information ('GPJPLA02','WC_TOTAL',    $GPJPLA02_WCTotal,      #dummy_width)
        do Get_Field_Information ('GPJPLA02','FIRM_NBR',    $GPJPLA02_FIRM_NBR,      #dummy_width)



!***********************************************************************
!                                                                      *
! Report variables.                                                    *
!                                                                      *
!***********************************************************************

    let $ReportID              = 'GPJPLA02'          ! Printed in header
    let $ReportTitle           = $GPJPLA02_Title     ! Printed in header
    let $ReportDate            = $AsOfToday          ! Printed in header
    let $ReportTime            = $AsOfNow            ! Printed in header
    let $Report_Language       = $curr_language_cd   ! curr_language_cd resolved in prcslng.sqc


end-procedure ! Init-Report


!***************************
begin-heading 7
!***************************

#include 'stdhdgtr.sqc'

    print $GPJPLA02_Estab             (+2,01,22)
    print $Est_save                   (0,24,15)
    print $EstabName                  (0,42,30)
    print $GPJPLA02_FIRM_NBR                  (+1,01,22)
    print $firm_nbr                                      (0,24,13) edit '9999999999999'


end-heading


!***********************************************************************
!                                                                      *
! Process-Main                                                         *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
!                                                                      *
! Description:  Main procedure.                                        *
!                                                                      *
!***********************************************************************
begin-procedure Process-Main

  let #EstabWCTot = 0
  let #EstabEITotA = 0
  let #EstabEITotB = 0
  let $Est_save = ' '
  let $No_records = 'Y'
  let $BlankLine = ' '


Begin-SELECT DISTINCT
A.GPJP_TAX_ESTAB

    let $Estab          = &A.Gpjp_tax_estab
    let $EstabType      = 'LA'
    let $No_records     = 'N'         
        
    if $Estab <> $Est_save
       if $Est_save <> ' '
          do Print-Estab-Total
       end-if
       let $Est_save = $Estab
    end-if
        
        do Corp-nmbr-estab

    do Get-Estab-Name
        
    let #ColTot1 = 0
    let #ColTot2 = 0
    let #ColTot3 = 0
    let #ColTot4 = 0
    let #RowCnt4 = 0
    let #RowTot4 = 0

    do Work-Comp-Ins-Salary

    print $BlankLine                      (+1,1,1)

    do Work-Comp-Ins-Bonus

    let #EstabWCTot     = #ColTot4

    do Print-Totals

    do Empl-Ins-Salary

    print $BlankLine                      (+1,1,1)

    do Empl-Ins-Bonus

    let #EstabEITotA    = #ColTot3
    let #EstabEITotB    = #ColTot4

    do Print-Totals

FROM PS_GPJP_LA02_WC A

WHERE A.JOBINSTANCE = #prcs_job_instance

end-SELECT

    if $No_records <> 'Y'
        let $End = 'Y'
        do Print-Estab-Total
    end-if

    do Delete-Work-Tables

end-procedure ! Process-Main

Begin-Procedure Corp-nmbr-estab
Begin-SELECT
LA.FIRM_NUM_JPN
        Let $firm_nbr = &LA.FIRM_NUM_JPN
                
FROM PS_GPJP_TAX_ESTAB LA 
WHERE LA.GPJP_TAX_ESTAB = $Estab 
AND LA.GPJP_TAX_ESTAB_TYP = 'LA'
AND LA.EFFDT = (SELECT Max(LA_ED.EFFDT) FROM PS_GPJP_TAX_ESTAB LA_ED
                WHERE LA_ED.GPJP_TAX_ESTAB = LA.GPJP_TAX_ESTAB
                AND LA_ED.GPJP_TAX_ESTAB_TYP = LA.GPJP_TAX_ESTAB_TYP
                AND LA.EFFDT <= $AsOfToday)
End-Select

End-Procedure !Corp-nmbr-estab


!***********************************************************************
!                                                                      *
! Work-Comp-Ins-Salary                                                 *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Calculates counts and totals for each Workers          *
!               Compensation Insurance Type per Salary Payment Date    *
!               and Calendar ID.                                       *
!               Prints detail line.                                    *
!                                                                      *
!***********************************************************************

begin-procedure Work-Comp-Ins-Salary

    do Print-WC-heading

    do Print-Heading-dtl

    let $FirstRow = 'Y'

Begin-SELECT
WCS.CAL_ID
WCS.PYMT_DT
WCS.GPJP_TAX_ESTAB
SUM(WCS.GPJP_WC_FTWRK_CNT)          &WCS_FtWorkCnt
SUM(WCS.GPJP_WC_FTWRK_TOT)          &WCS_FtWorkTot
SUM(WCS.GPJP_WC_OFF_CNT)            &WCS_OffCnt
SUM(WCS.GPJP_WC_OFF_TOT)            &WCS_OffTot
SUM(WCS.GPJP_WC_TMPWRK_CNT)         &WCS_TmpWorkCnt
SUM(WCS.GPJP_WC_TMPWRK_TOT)         &WCS_TmpWorkTot

    let $Calendar = &WCS.Cal_ID
    let $PayDate  = &WCS.Pymt_DT

    do Convert-To-DTU-Date ($PayDate, $PayDate_YMD)

    let #RowCnt1 = &WCS_FtWorkCnt
    let #RowTot1 = &WCS_FtWorkTot
    let #RowCnt2 = &WCS_OffCnt
    let #RowTot2 = &WCS_OffTot
    let #RowCnt3 = &WCS_TmpWorkCnt
    let #RowTot3 = &WCS_TmpWorkTot

    let #RowCnt4 = #RowCnt1 + #RowCnt2 + #RowCnt3
    let #RowTot4 = #RowTot1 + #RowTot2 + #RowTot3

    add #RowTot1 to #ColTot1
    add #RowTot2 to #ColTot2
    add #RowTot3 to #ColTot3
    add #RowTot4 to #ColTot4

    if $FirstRow = 'Y'
       let $Section = $GPJPLA02_Salary
       let $FirstRow = 'N'
    else
       let $Section = ''
    end-if

    if &WCS_FtWorkCnt     = 0 and &WCS_FtWorkTot  = 0
      and &WCS_OffCnt     = 0 and &WCS_OffTot     = 0
      and &WCS_TmpWorkCnt = 0 and &WCS_TmpWorkTot = 0
       ! empty line
    else
       do Print-Detail-line
    end-if

FROM PS_GPJP_LA02_WC WCS

WHERE WCS.JOBINSTANCE = #prcs_job_instance
  AND WCS.GPJP_TAX_ESTAB = $Est_save
  AND WCS.GPJP_RUN_TYPE_FLAG = 'SAL'

GROUP BY WCS.GPJP_TAX_ESTAB, WCS.CAL_ID, WCS.PYMT_DT
ORDER BY WCS.GPJP_TAX_ESTAB, WCS.CAL_ID, WCS.PYMT_DT

end-SELECT

end-procedure ! Work-Comp-Ins-Salary


!***********************************************************************
!                                                                      *
! Work-Comp-Ins-Bonus                                                  *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Calculates counts and totals for each Workers          *
!               Compensation Insurance Type per Bonus Payment Date     *
!               and Calendar ID.                                       *
!               Prints detail line.                                    *
!                                                                      *
!***********************************************************************

begin-procedure Work-Comp-Ins-Bonus

    let $FirstRow = 'Y'

Begin-SELECT
WCB.CAL_ID
WCB.PYMT_DT
WCB.GPJP_TAX_ESTAB
SUM(WCB.GPJP_WC_FTWRK_CNT)          &WCB_FtWorkCnt
SUM(WCB.GPJP_WC_FTWRK_TOT)          &WCB_FtWorkTot
SUM(WCB.GPJP_WC_OFF_CNT)            &WCB_OffCnt
SUM(WCB.GPJP_WC_OFF_TOT)            &WCB_OffTot
SUM(WCB.GPJP_WC_TMPWRK_CNT)         &WCB_TmpWorkCnt
SUM(WCB.GPJP_WC_TMPWRK_TOT)         &WCB_TmpWorkTot

    let $Calendar = &WCB.Cal_ID
    let $PayDate  = &WCB.Pymt_DT

    do Convert-To-DTU-Date ($PayDate, $PayDate_YMD)

    let #RowCnt1 = &WCB_FtWorkCnt
    let #RowTot1 = &WCB_FtWorkTot
    let #RowCnt2 = &WCB_OffCnt
    let #RowTot2 = &WCB_OffTot
    let #RowCnt3 = &WCB_TmpWorkCnt
    let #RowTot3 = &WCB_TmpWorkTot

    let #RowCnt4 = #RowCnt1 + #RowCnt2 + #RowCnt3
    let #RowTot4 = #RowTot1 + #RowTot2 + #RowTot3

    add #RowTot1 to #ColTot1
    add #RowTot2 to #ColTot2
    add #RowTot3 to #ColTot3
    add #RowTot4 to #ColTot4

    if $FirstRow = 'Y'
       let $Section = $GPJPLA02_Bonus
       let $FirstRow = 'N'
    else
       let $Section = ''
    end-if

    if &WCB_FtWorkCnt     = 0 and &WCB_FtWorkTot  = 0
      and &WCB_OffCnt     = 0 and &WCB_OffTot     = 0
      and &WCB_TmpWorkCnt = 0 and &WCB_TmpWorkTot = 0
       ! empty line
    else
       do Print-Detail-line
    end-if

FROM PS_GPJP_LA02_WC WCB

WHERE WCB.JOBINSTANCE = #prcs_job_instance
  AND WCB.GPJP_TAX_ESTAB = $Est_save
  AND WCB.GPJP_RUN_TYPE_FLAG = 'BON'

GROUP BY WCB.GPJP_TAX_ESTAB, WCB.CAL_ID, WCB.PYMT_DT
ORDER BY WCB.GPJP_TAX_ESTAB, WCB.CAL_ID, WCB.PYMT_DT

end-SELECT

end-procedure ! Work-Comp-Ins-Bonus


!***********************************************************************
!                                                                      *
! Empl-Ins-Salary                                                      *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Calculates counts and totals for each Employment       *
!               Insurance Type per Salary Payment Date and Calendar ID.*
!               Prints detail line.                                    *
!                                                                      *
!***********************************************************************

begin-procedure Empl-Ins-Salary

    do Print-EI-heading

    do Print-Heading-dtl

    let $FirstRow = 'Y'

Begin-SELECT
EIS.GPJP_TAX_ESTAB
EIS.CAL_ID
EIS.PYMT_DT
SUM(EIS.GPJP_EI_WRK_CNT)            &EIS_WorkCnt
SUM(EIS.GPJP_EI_WRK_TOT)            &EIS_WorkTot
SUM(EIS.GPJP_EI_OFF_CNT)            &EIS_OffCnt
SUM(EIS.GPJP_EI_OFF_TOT)            &EIS_OffTot
SUM(EIS.GPJP_EI_ELD_CNT)            &EIS_EldCnt
SUM(EIS.GPJP_EI_ELD_TOT)            &EIS_EldTot

    let $Calendar = &EIS.Cal_ID
    let $PayDate  = &EIS.Pymt_DT

    do Convert-To-DTU-Date ($PayDate, $PayDate_YMD)

    let #RowCnt1 = &EIS_WorkCnt
    let #RowTot1 = &EIS_WorkTot
    let #RowCnt2 = &EIS_OffCnt
    let #RowTot2 = &EIS_OffTot
    let #RowCnt4 = &EIS_EldCnt
    let #RowTot4 = &EIS_EldTot

    let #RowCnt3 = #RowCnt1 + #RowCnt2
    let #RowTot3 = #RowTot1 + #RowTot2

    add #RowTot1 to #ColTot1
    add #RowTot2 to #ColTot2
    add #RowTot3 to #ColTot3
    add #RowTot4 to #ColTot4

    if $FirstRow = 'Y'
       let $Section = $GPJPLA02_Salary
       let $FirstRow = 'N'
    else
       let $Section = ''
    end-if

    If &EIS_WorkCnt   = 0 and &EIS_WorkTot = 0
      and &EIS_OffCnt = 0 and &EIS_OffTot  = 0
      and &EIS_EldCnt = 0 and &EIS_EldTot  = 0
       ! empty line
    else
       do Print-Detail-line
    end-if

FROM PS_GPJP_LA02_EI EIS

WHERE EIS.JOBINSTANCE = #prcs_job_instance
  AND EIS.GPJP_TAX_ESTAB = $Est_save
  AND EIS.GPJP_RUN_TYPE_FLAG = 'SAL'

GROUP BY EIS.GPJP_TAX_ESTAB, EIS.CAL_ID, EIS.PYMT_DT
ORDER BY EIS.GPJP_TAX_ESTAB, EIS.CAL_ID, EIS.PYMT_DT

end-SELECT

end-procedure ! Empl-Ins-Salary


!***********************************************************************
!                                                                      *
! Empl-Ins-Bonus                                                       *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Calculates counts and totals for each Employment       *
!               Insurance Type per Bonus Payment Date and Calendar ID. *
!               Prints detail line.                                    *
!                                                                      *
!***********************************************************************

begin-procedure Empl-Ins-Bonus

    let $FirstRow = 'Y'

Begin-SELECT
EIB.GPJP_TAX_ESTAB
EIB.CAL_ID
EIB.PYMT_DT
SUM(EIB.GPJP_EI_WRK_CNT)            &EIB_WorkCnt
SUM(EIB.GPJP_EI_WRK_TOT)            &EIB_WorkTot
SUM(EIB.GPJP_EI_OFF_CNT)            &EIB_OffCnt
SUM(EIB.GPJP_EI_OFF_TOT)            &EIB_OffTot
SUM(EIB.GPJP_EI_ELD_CNT)            &EIB_EldCnt
SUM(EIB.GPJP_EI_ELD_TOT)            &EIB_EldTot

    let $Calendar = &EIB.Cal_ID
    let $PayDate  = &EIB.Pymt_DT

    do Convert-To-DTU-Date ($PayDate, $PayDate_YMD)

    let #RowCnt1 = &EIB_WorkCnt
    let #RowTot1 = &EIB_WorkTot
    let #RowCnt2 = &EIB_OffCnt
    let #RowTot2 = &EIB_OffTot
    let #RowCnt4 = &EIB_EldCnt
    let #RowTot4 = &EIB_EldTot

    let #RowCnt3 = #RowCnt1 + #RowCnt2
    let #RowTot3 = #RowTot1 + #RowTot2

    add #RowTot1 to #ColTot1
    add #RowTot2 to #ColTot2
    add #RowTot3 to #ColTot3
    add #RowTot4 to #ColTot4

    if $FirstRow = 'Y'
       let $Section = $GPJPLA02_Bonus
       let $FirstRow = 'N'
    else
       let $Section = ''
    end-if

    If &EIB_WorkCnt   = 0 and &EIB_WorkTot = 0
      and &EIB_OffCnt = 0 and &EIB_OffTot  = 0
      and &EIB_EldCnt = 0 and &EIB_EldTot  = 0
       ! empty line
    else
       do Print-Detail-line
    end-if

FROM PS_GPJP_LA02_EI EIB

WHERE EIB.JOBINSTANCE = #prcs_job_instance
  AND EIB.GPJP_TAX_ESTAB = $Est_save
  AND EIB.GPJP_RUN_TYPE_FLAG = 'BON'
  
GROUP BY EIB.GPJP_TAX_ESTAB, EIB.CAL_ID, EIB.PYMT_DT
ORDER BY EIB.GPJP_TAX_ESTAB, EIB.CAL_ID, EIB.PYMT_DT

end-SELECT

end-procedure ! Empl-Ins-Bonus


!***********************************************************************
!                                                                      *
! Print-WC-heading                                                     *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Workers Compensation heading.                   *
!                                                                      *
!***********************************************************************

begin-procedure Print-WC-heading

    print $GPJPLA02_WCInsType            (+1,01,44)
    print $GPJPLA02_FTWorker             (0,{c3},25)
    print $GPJPLA02_Officer_WC           (0,{c5},25)
    print $GPJPLA02_TMPWorker            (0,{c7},25)
    print $GPJPLA02_TotalColumn          (0,{c9},25)

end-procedure  !Print-WC-heading


!***********************************************************************
!                                                                      *
! Print-EI-heading                                                     *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Employment Insurance heading.                   *
!                                                                      *
!***********************************************************************

begin-procedure Print-EI-heading

    print $GPJPLA02_EmplIns              (+3,01,44)
    print $GPJPLA02_Insured              (0,{c3},25)
    print $GPJPLA02_Officer_EI           (0,{c5},25)
    print $GPJPLA02_TotalColumn          (0,{c7},25)
    print $GPJPLA02_Elderly              (0,{c9},25)

end-procedure  !Print-EI-heading


!***********************************************************************
!                                                                      *
! Print-Heading-dtl                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints heading for detail line.                        *
!                                                                      *
!***********************************************************************

begin-procedure Print-Heading-dtl

    print $GPJPLA02_CalID                 (+1,{c1},18)
    print $GPJPLA02_PaymentDate           (0,{c2},12)
    print $GPJPLA02_Number                (0,{c3},9)
    print $GPJPLA02_Wages                 (0,{c4},15)
    print $GPJPLA02_Number                (0,{c5},9)
    print $GPJPLA02_Wages                 (0,{c6},15)
    print $GPJPLA02_Number                (0,{c7},9)
    print $GPJPLA02_Wages                 (0,{c8},15)
    print $GPJPLA02_Number                (0,{c9},9)
    print $GPJPLA02_Wages                 (0,{c10},15)

end-procedure  !Print-Heading-dtl


!***********************************************************************
!                                                                      *
! Print-Detail-line                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints detail lines.                                   *
!                                                                      *
!***********************************************************************
begin-procedure Print-Detail-line

    print $Section                        (+1,5,22)
    print $Calendar                       (0,{c1},18)
    print $PayDate_YMD                    (0,{c2},10)
    print #RowCnt1                        (0,{c3},7)    edit 999,999
    print #RowTot1                        (0,{c4},15)   edit 999,999,999,999
    print #RowCnt2                        (0,{c5},7)    edit 999,999
    print #RowTot2                        (0,{c6},15)   edit 999,999,999,999
    print #RowCnt3                        (0,{c7},7)    edit 999,999
    print #RowTot3                        (0,{c8},15)   edit 999,999,999,999
    print #RowCnt4                        (0,{c9},7)    edit 999,999
    print #RowTot4                        (0,{c10},15)  edit 999,999,999,999

    let #RowCnt4 = 0
    let #RowTot4 = 0

end-procedure  !Print-Detail-line


!***********************************************************************
!                                                                      *
! Print-Totals                                                         *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Totals per Insurance Type.                      *
!                                                                      *
!***********************************************************************
begin-procedure Print-Totals

    print $GPJPLA02_TotalSection          (+2,5,22)
    print #ColTot1                        (0,{c4},15)   edit 999,999,999,999
    print #ColTot2                        (0,{c6},15)   edit 999,999,999,999
    print #ColTot3                        (0,{c8},15)   edit 999,999,999,999
    print #ColTot4                        (0,{c10},15)  edit 999,999,999,999

    let #ColTot1 = 0
    let #ColTot2 = 0
    let #ColTot3 = 0
    let #ColTot4 = 0

end-procedure  !Print-Totals


!***********************************************************************
!                                                                      *
! Print-Estab-Total                                                    *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Prints Establishment Total.                            *
!                                                                      *
!***********************************************************************
begin-procedure Print-Estab-Total

    let #EstabWCTot  = #EstabWCTot / 1000
    let #EstabWCTot  = trunc(#EstabWCTot,0)

    let #EstabEITotA = #EstabEITotA / 1000
    let #EstabEITotA = trunc(#EstabEITotA,0)

    let #EstabEITotB = #EstabEITotB / 1000
    let #EstabEITotB = trunc(#EstabEITotB,0)

    let #EstabEITotC = #EstabEITotA - #EstabEITotB

    print $GPJPLA02_LastSection           (+4,1,44)
    print $GPJPLA02_WCTotal               (+2,5,18)
    print #EstabWCTot                     (0,25,11)     edit 999,999,999
    print $GPJPLA02_EI_PartA              (0,63,13)
    print #EstabEITotA                    (0,77,11)     edit 999,999,999
    print $GPJPLA02_EI_PartB              (0,97,13)
    print #EstabEITotB                    (0,111,11)    edit 999,999,999
    print $GPJPLA02_EI_PartC              (0,131,18)
    print #EstabEITotC                    (0,149,11)    edit 999,999,999

    let #EstabWCTot  = 0
    let #EstabEITotA = 0
    let #EstabEITotB = 0
    let #EstabEITotC = 0
    do page_break

end-procedure  !Print-Estab-Total


!***********************************************************************
!                                                                      *
! page_break                                                           *
!                                                                      *
!                                                                      *
! Called By:    Print-Estab-Total                                      *
!                                                                      *
! Description:  Performs Page break and ensures end of report line     *
!               is printed.                                            *
!                                                                      *
!***********************************************************************
begin-procedure page_break

    if $End = 'Y'
      do Reset
    end-if

    new-page
end-procedure  !page_break


!***********************************************************************
!                                                                      *
! Delete-Work-Tables                                                   *
!                                                                      *
!                                                                      *
! Called By:    Process-Main                                           *
!                                                                      *
! Description:  Deletes work tables.                                   *
!                                                                      *
!***********************************************************************
begin-procedure Delete-Work-Tables

begin-SQL  on-error=Ignore
  DELETE FROM PS_GPJP_LA02_WC
  WHERE JOBINSTANCE = #prcs_job_instance
end-SQL

begin-SQL  on-error=Ignore
  DELETE FROM PS_GPJP_LA02_EI
  WHERE JOBINSTANCE = #prcs_job_instance
end-SQL

end-procedure !Delete-Work-Tables


begin-procedure Ignore
  !Dummy procedure to avoid error if there are no records to delete
end-procedure


!***********************************************************************
!                                                                      *
!                                                                      *
! SQCS included in the report                                          *
!                                                                      *
!***********************************************************************
#include 'getestab.sqc'     ! Get-Estab-Name procedure
#include 'number.sqc'       ! Routines to format numbers
#include 'datetime.sqc'     ! Routines for date AND time formatting
#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcsapi.sqc'      ! Replaces stdapi.sqc
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        ! Reset printer procedure
