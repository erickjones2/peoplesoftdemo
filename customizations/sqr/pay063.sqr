!***********************************************************************
!  PAY063.SQR: Budget Check Error Report                               *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/17:15:38:05                                 !
!       $Release:  HR92                                                !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

!************
begin-report
!************

  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report


!***************************
begin-procedure Init-Report
!***************************

  move 'PAY063' to $ReportID
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  do Get-Run-Control


  move 'Budget Check Error Report' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '
  do REPORT-TRANSLATION

end-procedure


!****************
begin-heading 9
!****************

#Include 'stdhdgtr.sqc'

  let $FiscalYr_Title = $PAY063_HDG_FISCAL_YR || ' ' || $RC_FiscalYr
  print $FiscalYr_Title             (3,,)      center

  if $RC_HP_Tran_Type = 'E'
    print $PAY063_ENC_TRANS         (+1,,)     center
  else
    if $RC_HP_Tran_Type = 'A'
      print $PAY063_EXP_TRANS       (+1,,)     center
    end-if
  end-if

  print $PAY063_DOCUMENT_ID         (+3,1,12)
  if $RC_HP_Tran_Type = 'E'
    print $PAY063_ENCUM_HDR_STATUS  (,81,26)
  end-if
  print $PAY063_EXCPTN_TYPE         (,118,25)
  print $PAY063_MESSAGE             (,144,8)

  print $PAY063_COMPANY             (+1,1,7)
  print $PAY063_PAYGROUP            (,9,9)
  print $PAY063_DEPTID              (,18,7)
  print $PAY063_EMPL_NAME_POS_ID    (,29,27)
  print $PAY063_EMPL_ID_TITLE       (,81,15)
  print $PAY063_DOC_LN#             (,113,7)
  print $PAY063_COMBO_CODE          (,118,16)
  print $PAY063_ACCOUNT             (,144,7)
  print $PAY063_SET_ID              (,155,6)
  print $PAY063_BUDGET_YR           (,162,9)
  print $PAY063_BUDGET_STATUS       (,169,10)

  print '-------'                   (+1,1)
  print '--------'                  (,9)
  print '-------'                   (,18)
  print '---------------------------' (,29)
  print '---------------'           (,81)
  print '---'                       (,113)
  print '----------------'          (,118)
  print '-------'                   (,144)
  print '-----'                     (,155)
  print '------'                    (,162)
  print '--------'                  (,169)


end-HEADING

!*********************************
begin-procedure REPORT-TRANSLATION
!*********************************

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('PAY063', 'COMPANY',       $PAY063_COMPANY,        #DW)
  do Get_Field_Information ('PAY063', 'PAYGROUP',      $PAY063_PAYGROUP,       #DW)
  do Get_Field_Information ('PAY063', 'HDG_FISCAL_YR', $PAY063_HDG_FISCAL_YR,  #DW)
  do Get_Field_Information ('PAY063', 'DEPTID'       , $PAY063_DEPTID,         #DW)
  do Get_Field_Information ('PAY063', 'EMPL_NAME_POS_ID', $PAY063_EMPL_NAME_POS_ID,  #DW)
  do Get_Field_Information ('PAY063', 'EMPL_ID_TITLE', $PAY063_EMPL_ID_TITLE,  #DW)
  do Get_Field_Information ('PAY063', 'DOCUMENT_ID',   $PAY063_DOCUMENT_ID,    #DW)
  do Get_Field_Information ('PAY063', 'DOC_LN#',       $PAY063_DOC_LN#,        #DW)
  do Get_Field_Information ('PAY063', 'COMBO_CODE',    $PAY063_COMBO_CODE,     #DW)
  do Get_Field_Information ('PAY063', 'ACCOUNT',       $PAY063_ACCOUNT,        #DW)
  do Get_Field_Information ('PAY063', 'SET_ID',        $PAY063_SET_ID,         #DW)
  do Get_Field_Information ('PAY063', 'FISCAL',        $PAY063_FISCAL,         #DW)
  do Get_Field_Information ('PAY063', 'BUDGET_YR',     $PAY063_BUDGET_YR,      #DW)
  do Get_Field_Information ('PAY063', 'BUDGET_STATUS', $PAY063_BUDGET_STATUS,  #DW)
  do Get_Field_Information ('PAY063', 'TRANS',         $PAY063_TRANS,          #DW)
  do Get_Field_Information ('PAY063', 'ENCUM_HDR_STATUS',$PAY063_ENCUM_HDR_STATUS, #DW)
  do Get_Field_Information ('PAY063', 'EXCPTN_TYPE'   ,$PAY063_EXCPTN_TYPE,    #DW)
  do Get_Field_Information ('PAY063', 'MESSAGE'       ,$PAY063_MESSAGE,        #DW)
  do Get_Field_Information ('PAY063', 'NO_ENC_MSG'    ,$PAY063_NO_ENC_MSG,     #DW)
  do Get_Field_Information ('PAY063', 'EXP_TRANS'     ,$PAY063_EXP_TRANS,      #DW)
  do Get_Field_Information ('PAY063', 'ENC_TRANS'     ,$PAY063_ENC_TRANS,      #DW)

end-procedure

!****************************
begin-procedure Process-Main
!****************************

  let $Budget_Status = ' '

begin-SELECT
S.HP_KK_DOC_ID
S.HP_KK_DOC_LINE_NBR
S.FISCAL_YEAR
S.HP_BUDGET_YEAR
S.HP_BUDGET_STATUS

  print &S.HP_KK_Doc_Id          (+2,1,31)
  if $RC_HP_Tran_Type = 'A'         !Actual Expense
    do Get-Expense-Line-Msg
  else
    if $RC_HP_Tran_Type = 'E'       !Encumbrance
      do Get-Budget-Chk-Hdr
    end-if
  end-if

  do Process-Encumbr-Distr

  if $Encub_Dist_Fnd = 'N'
    print $PAY063_NO_ENC_MSG     (,38)
  end-if

FROM PS_HP_DOC_ID_SUMM S,
     PS_HP_DOC_ID_XREF X
[$WhereParam]
  AND S.HP_BUDGET_STATUS   <> 'V'
  AND S.HP_KK_DOC_ID       = X.HP_KK_DOC_ID
  AND S.HP_KK_DOC_LINE_NBR = X.HP_KK_DOC_LINE_NBR
ORDER BY S.HP_KK_DOC_ID, S.HP_BUDGET_YEAR

end-SELECT

end-procedure


!**************************************
begin-procedure Process-Encumbr-Distr
!**************************************

  let $Encub_Dist_Fnd = 'N'

begin-SELECT
EN.HP_KK_DOC_LINE_NBR
EN.HP_BUDGET_YEAR
EN.EMPLID
EN.EMPL_RCD
EN.POSITION_NBR
EN.COMPANY
EN.PAYGROUP
EN.DEPTID
EN.ACCT_CD
EN.ACCOUNT
EN.SETID

  let $Encub_Dist_Fnd = 'Y'

  do Get-EE-Bud-Chk-Log
  do Get-Pos-Bud-Chk-Log

FROM PS_ENCUMB_DIST     EN
WHERE EN.HP_KK_DOC_ID             = &S.HP_KK_Doc_Id
  AND EN.HP_KK_DOC_LINE_NBR       = &S.HP_KK_Doc_Line_Nbr
  AND EN.FISCAL_YEAR              = &S.Fiscal_Year
  AND EN.HP_BUDGET_YEAR           = &S.HP_Budget_Year
ORDER BY EN.COMPANY, EN.PAYGROUP, EN.DEPTID
end-SELECT

end-procedure Process-Encumbr-Distr


!***********************************
begin-procedure Get-EE-Bud-Chk-Log
!***********************************


begin-SELECT
N.NAME_PSFORMAT
EE.EMPLID

  print &EN.Company                (+1,1,3)
  print &EN.Paygroup               (,9,3)
  print &EN.Deptid                 (,18,10)
  print &N.Name_PSformat           (,29,50)
  print &EE.Emplid                 (,81,11)

  print &EN.HP_KK_Doc_Line_Nbr     (,113,3)
  print &EN.Acct_Cd                (,118,25)
  print &EN.Account                (,144,10)
  print &EN.Setid                  (,155,5)
  print &EN.HP_Budget_Year         (,162,4)

  move 'HP_BUDGET_STATUS'           to $FieldName
  move &S.HP_Budget_Status          to $FieldValue
  do Read-Translate-Table
  move $XlatShortName               to $Budget_Status
  print $Budget_Status             (,169,8)


FROM PS_HP_BDCK_LOG_JOB EE,
     PS_PERSON_NAME     N
WHERE  EE.EMPLID    = &EN.Emplid
  AND  EE.EMPL_RCD  = &EN.Empl_Rcd
  AND  EE.EMPLID    = N.EMPLID
ORDER BY N.NAME_PSFORMAT

end-SELECT

end-procedure Get-EE-Bud-Chk-Log


!***********************************
begin-procedure Get-Pos-Bud-Chk-Log
!***********************************

begin-SELECT
P.POSITION_NBR
{DateTimeOut-Prefix}P.HP_LSTUPD_ENC_TIME{DateTimeOut-Suffix}  &P.HP_Lstupd_Enc_Time


    print &EN.Company                (+1,1,3)
    print &EN.Paygroup               (,9,3)
    print &EN.Deptid                 (,18,10)
    print &P.Position_Nbr            (,29,8)

    let $Position_Nbr = rtrim(&P.Position_Nbr, ' ')
    do Format-DateTime(&P.HP_Lstupd_Enc_Time, $out, {DEFCMP}, '', '')
    do Format-DateTime($out, $AsOfDate, {DEFCMP}, '', 'native')
    do Get-Position-Title
    print $PosName                   (,81,30)

    print &EN.HP_KK_Doc_Line_Nbr     (,113,3)
    print &EN.Acct_Cd                (,118,25)
    print &EN.Account                (,144,10)
    print &EN.Setid                  (,155,5)
    print &EN.HP_Budget_Year         (,162,4)

    move 'HP_BUDGET_STATUS'           to $FieldName
    move &S.HP_Budget_Status          to $FieldValue
    do Read-Translate-Table
    move $XlatShortName               to $Budget_Status
    print $Budget_Status             (,169,8)


FROM PS_HP_BDCK_LOG_POS P
WHERE P.POSITION_NBR   = &EN.Position_Nbr
ORDER BY P.POSITION_NBR

end-SELECT
end-procedure Get-Pos-Bud-Chk-Log


!**************************************
begin-procedure Get-Expense-Line-Msg
!**************************************

  let $Msg_Parm1   = ' '
  let $Msg_Parm2   = ' '
  let $Msg_Parm3   = ' '
  let $Msg_Parm4   = ' '
  let #Message_Nbr = 0
  let #Excep_Cnt   = 0

begin-SELECT
EL.RUN_DT
EL.SEQNUM
EL.HP_KK_DOC_LINE_NBR
EL.EXCPTN_TYPE
EL.MESSAGE_NBR
EL.MESSAGE_PARM1
EL.MESSAGE_PARM2
EL.MESSAGE_PARM3
EL.MESSAGE_PARM4


    move &EL.Excptn_Type to $Exception_Type
    do Get-Excptn-Type-Descr

    if #Excep_Cnt > 0
      print $Excptn_Type_Descr    (+1,118,10)
    else
      print $Excptn_Type_Descr    (,118,10)
    end-if

    if &EL.MESSAGE_NBR > 0

      move &EL.Message_Nbr to #Message_Nbr
      do Get-Bud-Check-Msg

      if $Msg_Text <> ' '
        let $Msg_Parm1 = rtrim(&EL.Message_Parm1, ' ')
        let $Msg_Parm2 = rtrim(&EL.Message_Parm2, ' ')
        let $Msg_Parm3 = rtrim(&EL.Message_Parm3, ' ')
        let $Msg_Parm4 = rtrim(&EL.Message_Parm4, ' ')
        do Format-Msg-Text

        print $Msg_Text         (,144)  wrap 30 7
      end-if

    end-if

    add 1 to #Excep_Cnt

FROM PS_HP_EXP_RESP_LN  EL
WHERE EL.HP_KK_DOC_ID       =  &S.HP_KK_Doc_ID
  AND EL.HP_FISCAL_YEAR     =  &S.Fiscal_Year
  AND EL.HP_BUDGET_YEAR     =  &S.HP_Budget_Year
  AND EL.HP_KK_DOC_LINE_NBR =  &S.HP_KK_Doc_Line_Nbr
ORDER BY EL.EXCPTN_TYPE

end-SELECT

end-procedure Get-Expense-Line-Msg


!**************************************
begin-procedure Get-Budget-Chk-Hdr
!**************************************

  let $Bud_Hdr_Status  = ' '

begin-SELECT
H.HP_KK_DOC_ID
H.HP_FISCAL_YEAR
H.HP_BUDGET_YEAR
H.BUDGET_HDR_STATUS

    move 'BUDGET_HDR_STATUS'            to $FieldName
    let $Bud_Hdr_Status  =  rtrim(&H.Budget_Hdr_Status, ' ')
    move $Bud_Hdr_Status                to $FieldValue
    do Read-Translate-Table
    move $XlatShortName                 to $Bud_Hdr_Status
    print $Bud_Hdr_Status               (,81,10)

    do Get-Budget-Chk-Line-Msg

FROM PS_HP_BUD_RESP_HDR H
WHERE H.HP_KK_DOC_ID     =  &S.HP_KK_Doc_ID
  AND H.HP_FISCAL_YEAR   =  &S.Fiscal_Year
  AND H.HP_BUDGET_YEAR   =  &S.HP_Budget_Year

end-SELECT

end-procedure Get-Budget-Chk-Hdr


!**************************************
begin-procedure Get-Budget-Chk-Line-Msg
!**************************************

  let $Msg_Parm1   = ' '
  let $Msg_Parm2   = ' '
  let $Msg_Parm3   = ' '
  let $Msg_Parm4   = ' '
  let #Message_Nbr = 0
  let #Excep_Cnt   = 0

begin-SELECT
L.HP_KK_DOC_LINE_NBR
L.EXCPTN_TYPE
L.MESSAGE_NBR
L.MESSAGE_PARM1
L.MESSAGE_PARM2
L.MESSAGE_PARM3
L.MESSAGE_PARM4


    move &L.Excptn_Type to $Exception_Type
    do Get-Excptn-Type-Descr

    if #Excep_Cnt > 0
      print $Excptn_Type_Descr    (+1,118,10)
    else
      print $Excptn_Type_Descr    (,118,10)
    end-if

    if &L.MESSAGE_NBR > 0

      move &L.Message_Nbr to #Message_Nbr
      do Get-Bud-Check-Msg

      if $Msg_Text <> ' '
        let $Msg_Parm1 = rtrim(&L.Message_Parm1, ' ')
        let $Msg_Parm2 = rtrim(&L.Message_Parm2, ' ')
        let $Msg_Parm3 = rtrim(&L.Message_Parm3, ' ')
        let $Msg_Parm4 = rtrim(&L.Message_Parm4, ' ')
        do Format-Msg-Text

        print $Msg_Text         (,144) wrap 30 7
      end-if

    end-if

    add 1 to #Excep_Cnt

FROM PS_HP_BUD_RESP_LN  L
WHERE L.HP_KK_DOC_ID          =  &H.HP_KK_Doc_ID
  AND L.HP_FISCAL_YEAR        =  &H.HP_Fiscal_Year
  AND L.HP_BUDGET_YEAR        =  &H.HP_Budget_Year
  AND L.HP_KK_DOC_LINE_NBR    =  &S.HP_KK_Doc_Line_Nbr
ORDER BY L.EXCPTN_TYPE

end-SELECT

end-procedure Get-Budget-Chk-Line-Msg


!************************************
begin-procedure Get-Excptn-Type-Descr
!************************************

  let $Excptn_Type_Descr = ' '

begin-SELECT
BE.DESCRSHORT

  let $Excptn_Type_Descr = rtrim(&BE.Descrshort, ' ')

FROM PS_HP_BUD_EXCP_TBL  BE
WHERE BE.EXCPTN_TYPE  =  $Exception_Type

end-SELECT

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
     do Get-Excptn-Type-Descr-Lang
  end-if

end-procedure Get-Excptn-Type-Descr


!*****************************************
begin-procedure Get-Excptn-Type-Descr-Lang
!*****************************************

begin-SELECT
BL.DESCRSHORT

  let $Excptn_Type_Descr = rtrim(&BL.Descrshort, ' ')

FROM PS_HP_BUD_EXCP_LNG BL
WHERE BL.EXCPTN_TYPE  =  $Exception_Type
  AND BL.LANGUAGE_CD  =  $curr_Language_Cd

end-SELECT

end-procedure Get-Excptn-Type-Descr-Lang



!*********************************
begin-procedure Get-Bud-Check-Msg
!*********************************

  let $Msg_Text = ' '

begin-SELECT
M.MESSAGE_TEXT

  let $Msg_Text = rtrim(&M.Message_Text,' ')

FROM PS_HP_BUD_MSG_TBL M
WHERE M.MESSAGE_NBR = #Message_Nbr

end-SELECT

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
     do Get-Bud-Check-Msg-Lang
  end-if

end-procedure Get-Bud-Check-Msg


!**************************************
begin-procedure Get-Bud-Check-Msg-Lang
!**************************************

begin-SELECT
LM.MESSAGE_TEXT

  let $Msg_Text = rtrim(&LM.Message_Text,' ')

FROM PS_HP_BUD_MSG_LNG LM
WHERE LM.MESSAGE_NBR = #Message_Nbr
  AND LM.LANGUAGE_CD = $curr_Language_Cd

end-SELECT

end-procedure Get-Bud-Check-Msg-Lang


!********************************
begin-procedure Format-Msg-Text
!********************************

  let $Msg_Text = replace($Msg_Text, '%1', $Msg_Parm1)
  let $Msg_Text = replace($Msg_Text, '%2', $Msg_Parm2)
  let $Msg_Text = replace($Msg_Text, '%3', $Msg_Parm3)
  let $Msg_Text = replace($Msg_Text, '%4', $Msg_Parm4)

  let $Msg_Text = ltrim(rtrim($Msg_Text, ' '), ' ')

end-procedure Format-Msg-Text


!******************************
begin-procedure Get-Run-Control
!******************************

  let $WhereParam = ''

begin-SELECT
RC.FISCAL_YEAR
RC.SETID
RC.DEPTID
RC.COMPANY
RC.PAYGROUP
RC.HP_TRAN_TYPE

  do Format-Number (&RC.Fiscal_Year, $RC_FiscalYr, '9999')

  let $RC_SetID     =  ltrim(rtrim(&RC.SetID,' '),' ')
  let $RC_DeptID    =  ltrim(rtrim(&RC.DeptID ,' '),' ')
  let $RC_Company   =  ltrim(rtrim(&RC.Company ,' '),' ')
  let $RC_PayGroup  =  ltrim(rtrim(&RC.Paygroup ,' '),' ')
  let $RC_HP_Tran_Type = ltrim(rtrim(&RC.HP_Tran_Type ,' '),' ')


  let $WhereParam = 'WHERE S.FISCAL_YEAR = ' || $RC_FiscalYr

  if rtrim($RC_Company, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND X.COMPANY =  ' || '''' || $RC_Company || ''''
  end-if

  if rtrim($RC_PayGroup, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND X.PAYGROUP =  ' || '''' || $RC_PayGroup || ''''
  end-if

  if rtrim($RC_SetID, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND X.SETID =  ' || '''' || $RC_SetID  || ''''
  end-if

  if rtrim($RC_DeptID, ' ') <> ''
      let $WhereParam = $WhereParam || ' AND X.DEPTID = ' || '''' || $RC_DeptID  || ''''
  end-if


FROM PS_RUN_CNTL_RTBC RC
WHERE RC.OPRID = $prcs_oprid
  AND RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-SELECT

end-procedure Get-Run-Control

begin-footing 4
  print ' '             (+0,1) center
end-footing

#Include 'getposnm.sqc'  !Get-Position-Title
#Include 'stdapi.sqc'    !Update Process API
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'readxlat.sqc'  !Read-Translate-Table procedure


